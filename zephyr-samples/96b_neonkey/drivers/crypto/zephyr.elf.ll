; ModuleID = 'build/96b_neonkey/crypto/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.mode_test = type { i8*, void (%struct.device*)* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.ctr_params }
%struct.ctr_params = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.ctr_params }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.crypto_driver_api = type { i32 (%struct.device*)*, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)*, i32 (%struct.device*, %struct.cipher_ctx*)*, i32 (%struct.device*, void (%struct.cipher_pkt*, i32)*)*, i32 (%struct.device*, %struct.hash_ctx*, i32)*, i32 (%struct.device*, %struct.hash_ctx*)*, i32 (%struct.device*, void (%struct.hash_pkt*, i32)*)* }
%struct.cipher_ctx = type { %struct.cipher_ops, %union.anon.4, %struct.device*, i8*, i8*, %union.anon.5, i16, i16 }
%struct.cipher_ops = type { i32, %union.anon.3 }
%union.anon.3 = type { i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)* }
%struct.cipher_pkt = type { i8*, i32, i8*, i32, i32, %struct.cipher_ctx* }
%union.anon.4 = type { i8* }
%union.anon.5 = type { %struct.ctr_params }
%struct.hash_ctx = type { %struct.device*, i8*, i32 (%struct.hash_ctx*, %struct.hash_pkt*, i1)*, i8, i16 }
%struct.hash_pkt = type { i8*, i32, i8*, %struct.hash_ctx* }
%struct.tc_shim_drv_state = type { i32, %struct.tc_aes_key_sched_struct }
%struct.tc_aes_key_sched_struct = type { [44 x i32] }
%struct.gpio_stm32_config = type { %struct.ctr_params, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.ctr_params, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.cipher_aead_pkt = type { %struct.cipher_pkt*, i8*, i32, i8* }
%struct.ccm_params = type { i16, i16 }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.ctr_params, %struct.ctr_params }
%struct.tc_ccm_mode_struct = type { %struct.tc_aes_key_sched_struct*, i8*, i32 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.ctr_params*, %struct.ctr_params* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [86 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [86 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236940 to i8*), void (i8*)* inttoptr (i32 134235201 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236940 to i8*), void (i8*)* inttoptr (i32 134235181 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236940 to i8*), void (i8*)* inttoptr (i32 134235171 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236940 to i8*), void (i8*)* inttoptr (i32 134235271 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236940 to i8*), void (i8*)* inttoptr (i32 134235261 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236940 to i8*), void (i8*)* inttoptr (i32 134235251 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236940 to i8*), void (i8*)* inttoptr (i32 134235241 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236940 to i8*), void (i8*)* inttoptr (i32 134235231 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236940 to i8*), void (i8*)* inttoptr (i32 134235221 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236940 to i8*), void (i8*)* inttoptr (i32 134235211 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236940 to i8*), void (i8*)* inttoptr (i32 134235191 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [45 x i8*] [i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_crypto_tinycrypt to i8*), i8* bitcast (%struct.init_entry* @__init___device_crypto_tinycrypt to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_tinycrypt to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 4 }, section ".log_const_main", align 4, !dbg !25
@.str.1 = private unnamed_addr constant [80 x i8] c"%c: Please provision the key separately as the module doesnt support a raw key\0A\00", align 1
@.str.2 = private unnamed_addr constant [90 x i8] c"%c: The app assumes sync semantics. Please rewrite the app accordingly before proceeding\0A\00", align 1
@.str.3 = private unnamed_addr constant [95 x i8] c"%c: The app assumes distinct IO buffers. Please rewrite the app accordingly before proceeding\0A\00", align 1
@cap_flags = dso_local local_unnamed_addr global i32 0, align 4, !dbg !314
@__const.ecb_mode.ecb_key = private unnamed_addr constant [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 1
@__const.ecb_mode.ecb_plaintext = private unnamed_addr constant [16 x i8] c"\00\11\223DUfw\88\99\AA\BB\CC\DD\EE\FF", align 1
@__const.ecb_mode.ecb_ciphertext = private unnamed_addr constant [16 x i8] c"i\C4\E0\D8j{\040\D8\CD\B7\80p\B4\C5Z", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"%c: ECB mode ENCRYPT - Failed\0A\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"%c: Output length (encryption): %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [75 x i8] c"%c: ECB mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"%c: ECB mode ENCRYPT - Match\0A\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"%c: ECB mode DECRYPT - Failed\0A\00", align 1
@.str.9 = private unnamed_addr constant [36 x i8] c"%c: Output length (decryption): %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [77 x i8] c"%c: ECB mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"%c: ECB mode DECRYPT - Match\0A\00", align 1
@key = internal global [16 x i8] c"+~\15\16(\AE\D2\A6\AB\F7\15\88\09\CFO<", align 1, !dbg !316
@plaintext = internal global [64 x i8] c"k\C1\BE\E2.@\9F\96\E9=~\11s\93\17*\AE-\8AW\1E\03\AC\9C\9E\B7o\ACE\AF\8EQ0\C8\1CF\A3\\\E4\11\E5\FB\C1\19\1A\0AR\EF\F6\9F$E\DFO\9B\17\AD+A{\E6l7\10", align 1, !dbg !318
@cbc_mode.iv = internal global [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 1, !dbg !291
@.str.12 = private unnamed_addr constant [31 x i8] c"%c: CBC mode ENCRYPT - Failed\0A\00", align 1
@cbc_ciphertext = internal constant [80 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0FvI\AB\AC\81\19\B2F\CE\E9\8E\9B\12\E9\19}P\86\CB\9BPr\19\EE\95\DB\11:\91vx\B2s\BE\D6\B8\E3\C1t;q\16\E6\9E\22\22\95\16?\F1\CA\A1h\1F\AC\09\12\0E\CA0u\86\E1\A7", align 1, !dbg !320
@.str.13 = private unnamed_addr constant [75 x i8] c"%c: CBC mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"%c: CBC mode ENCRYPT - Match\0A\00", align 1
@.str.15 = private unnamed_addr constant [31 x i8] c"%c: CBC mode DECRYPT - Failed\0A\00", align 1
@.str.16 = private unnamed_addr constant [77 x i8] c"%c: CBC mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"%c: CBC mode DECRYPT - Match\0A\00", align 1
@__const.ctr_mode.iv = private unnamed_addr constant [12 x i8] c"\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"%c: CTR mode ENCRYPT - Failed\0A\00", align 1
@ctr_ciphertext = internal constant [64 x i8] c"\22\E5/\B1w\D8e\B2\F7\C6\B5\12i-\11M\EDl\1Cr%\DA\F6\A2\AA\D9\D3\DA-\BA!h5\C0\AFko@\C3\C6\EF\C5\85\D0\90,\C2c\12+\C5\8Er\DE\\\A2\A3\\\85:\B9,\06\BB", align 1, !dbg !324
@.str.19 = private unnamed_addr constant [75 x i8] c"%c: CTR mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.20 = private unnamed_addr constant [30 x i8] c"%c: CTR mode ENCRYPT - Match\0A\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"%c: CTR mode DECRYPT - Failed\0A\00", align 1
@.str.22 = private unnamed_addr constant [77 x i8] c"%c: CTR mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"%c: CTR mode DECRYPT - Match\0A\00", align 1
@ccm_key = internal global [16 x i8] c"\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF", align 1, !dbg !327
@ccm_data = internal global [23 x i8] c"\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E", align 1, !dbg !329
@ccm_hdr = internal global [8 x i8] c"\00\01\02\03\04\05\06\07", align 1, !dbg !334
@ccm_nonce = internal global [13 x i8] c"\00\00\00\03\02\01\00\A0\A1\A2\A3\A4\A5", align 1, !dbg !339
@.str.24 = private unnamed_addr constant [31 x i8] c"%c: CCM mode ENCRYPT - Failed\0A\00", align 1
@ccm_expected = internal constant [31 x i8] c"X\8C\97\9Aa\C6c\D2\F0f\D0\C2\C0\F9\89\80m_ka\DA\C3\84\17\E8\D1,\FD\F9&\E0", align 1, !dbg !344
@.str.25 = private unnamed_addr constant [75 x i8] c"%c: CCM mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.26 = private unnamed_addr constant [30 x i8] c"%c: CCM mode ENCRYPT - Match\0A\00", align 1
@.str.27 = private unnamed_addr constant [31 x i8] c"%c: CCM mode DECRYPT - Failed\0A\00", align 1
@.str.28 = private unnamed_addr constant [77 x i8] c"%c: CCM mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.29 = private unnamed_addr constant [30 x i8] c"%c: CCM mode DECRYPT - Match\0A\00", align 1
@gcm_key = internal global [16 x i8] c"\07\1B\11;\0C\A7C\FE\CC\CF=\05\1Fss\82", align 1, !dbg !349
@gcm_data = internal global [42 x i8] c"\08\00\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./01234\00\04", align 1, !dbg !351
@gcm_hdr = internal global [20 x i8] c"\E2\01\06\D7\CD\0D\F0v\1E\8D\CD=\88\E5L*v\D4W\ED", align 1, !dbg !356
@gcm_nonce = internal global [12 x i8] c"\F0v\1E\8D\CD=\00\01v\D4W\ED", align 1, !dbg !361
@.str.30 = private unnamed_addr constant [31 x i8] c"%c: GCM mode ENCRYPT - Failed\0A\00", align 1
@gcm_expected = internal constant [58 x i8] c"\13\B4\C7+8\9D\C5\01\8Er\A1q\DD\85\A5\D3u\22t\D3\A0\19\FB\CA\ED\09\A4%\CD\9B.\1C\9Br\EE\E7\C9\DE}R\B3\F3\D6\A5(OJm?\E2*]l+\96\04\94\C3", align 1, !dbg !366
@.str.31 = private unnamed_addr constant [75 x i8] c"%c: GCM mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.32 = private unnamed_addr constant [30 x i8] c"%c: GCM mode ENCRYPT - Match\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c: GCM mode DECRYPT - Failed\0A\00", align 1
@.str.34 = private unnamed_addr constant [77 x i8] c"%c: GCM mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.35 = private unnamed_addr constant [30 x i8] c"%c: GCM mode DECRYPT - Match\0A\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"CRYPTO_TC\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"%c: %s pseudo device not found\0A\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"ECB Mode\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"CBC Mode\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"CTR Mode\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"CCM Mode\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"GCM Mode\00", align 1
@__const.main.modes = private unnamed_addr constant [6 x %struct.mode_test] [%struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), void (%struct.device*)* @ecb_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i32 0, i32 0), void (%struct.device*)* @cbc_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), void (%struct.device*)* @ctr_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0), void (%struct.device*)* @ccm_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i32 0, i32 0), void (%struct.device*)* @gcm_mode }, %struct.mode_test zeroinitializer], align 4
@.str.43 = private unnamed_addr constant [22 x i8] c"%c: Incompatible h/w\0A\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"%c: Cipher Sample\0A\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"%c: %s\0A\00", align 1
@.str.46 = private unnamed_addr constant [19 x i8] c"Was waiting for: \0A\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"0x%02x \00", align 1
@.str.48 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"\0A But got:\0A\00", align 1
@.str.50 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.50, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !377
@.str.1.52 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !401
@.str.57 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !412
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !456
@.str.63 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.65 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.66 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.64 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.68 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.69 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.67 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@inv_sbox = internal unnamed_addr constant [256 x i8] c"R\09j\D506\A58\BF@\A3\9E\81\F3\D7\FB|\E39\82\9B/\FF\874\8ECD\C4\DE\E9\CBT{\942\A6\C2#=\EEL\95\0BB\FA\C3N\08.\A1f(\D9$\B2v[\A2Im\8B\D1%r\F8\F6d\86h\98\16\D4\A4\\\CC]e\B6\92lpHP\FD\ED\B9\DA^\15FW\A7\8D\9D\84\90\D8\AB\00\8C\BC\D3\0A\F7\E4X\05\B8\B3E\06\D0,\1E\8F\CA?\0F\02\C1\AF\BD\03\01\13\8Ak:\91\11AOg\DC\EA\97\F2\CF\CE\F0\B4\E6s\96\ACt\22\E7\AD5\85\E2\F97\E8\1Cu\DFnG\F1\1Aq\1D)\C5\89o\B7b\0E\AA\18\BE\1B\FCV>K\C6\D2y \9A\DB\C0\FEx\CDZ\F4\1F\DD\A83\88\07\C71\B1\12\10Y'\80\EC_`Q\7F\A9\19\B5J\0D-\E5z\9F\93\C9\9C\EF\A0\E0;M\AE*\F5\B0\C8\EB\BB<\83S\99a\17+\04~\BAw\D6&\E1i\14cU!\0C}", align 1, !dbg !485
@__const.tc_aes128_set_encrypt_key.rconst = private unnamed_addr constant [11 x i32] [i32 0, i32 16777216, i32 33554432, i32 67108864, i32 134217728, i32 268435456, i32 536870912, i32 1073741824, i32 -2147483648, i32 452984832, i32 905969664], align 4
@sbox = internal unnamed_addr constant [256 x i8] c"c|w{\F2ko\C50\01g+\FE\D7\ABv\CA\82\C9}\FAYG\F0\AD\D4\A2\AF\9C\A4r\C0\B7\FD\93&6?\F7\CC4\A5\E5\F1q\D81\15\04\C7#\C3\18\96\05\9A\07\12\80\E2\EB'\B2u\09\83,\1A\1BnZ\A0R;\D6\B3)\E3/\84S\D1\00\ED \FC\B1[j\CB\BE9JLX\CF\D0\EF\AA\FBCM3\85E\F9\02\7FP<\9F\A8Q\A3@\8F\92\9D8\F5\BC\B6\DA!\10\FF\F3\D2\CD\0C\13\EC_\97D\17\C4\A7~=d]\19s`\81O\DC\22*\90\88F\EE\B8\14\DE^\0B\DB\E02:\0AI\06$\\\C2\D3\ACb\91\95\E4y\E7\C87m\8D\D5N\A9lV\F4\EAez\AE\08\BAx%.\1C\A6\B4\C6\E8\DDt\1FK\BD\8B\8Ap>\B5fH\03\F6\0Ea5W\B9\86\C1\1D\9E\E1\F8\98\11i\D9\8E\94\9B\1E\87\E9\CEU(\DF\8C\A1\89\0D\BF\E6BhA\99-\0F\B0T\BB\16", align 1, !dbg !505
@.str.74 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.75 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.76 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.77 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.109 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.104 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.105 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.106 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.107 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.108 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.99 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.100 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.93 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9.101 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10.102 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11.103 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12.98 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13.91 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14.92 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15.94 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16.95 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17.96 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18.97 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19.84 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20.85 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21.86 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22.87 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23.88 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24.89 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25.90 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26.83 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27.82 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28.80 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29.81 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.115 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.115, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !517
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.ctr_params { i32 101384192 } }], align 4, !dbg !664
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !523
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !673
@.str.121 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.122 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !709
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.137, i32 0, i32 0), %struct.ctr_params { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.138, i32 0, i32 0), %struct.ctr_params { i32 285933600 } }], align 4, !dbg !719
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !724
@.str.137 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.138 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !744
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !915
@.str.139 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !876
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !861
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.139, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !834
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !850
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !878
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !892
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !894
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !896
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !898
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !900
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !902
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !904
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !906
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !908
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !910
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !920
@.str.141 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !947
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1042
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1031
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 -134, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1083
@.str.150 = private unnamed_addr constant [10 x i8] c"tinycrypt\00", align 1
@log_const_tinycrypt = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.150, i32 0, i32 0), i8 4 }, section ".log_const_tinycrypt", align 4, !dbg !1149
@__devicehdl_crypto_tinycrypt = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !942
@.str.1.152 = private unnamed_addr constant [10 x i8] c"CRYPTO_TC\00", align 1
@crypto_enc_funcs = internal global %struct.crypto_driver_api { i32 (%struct.device*)* @tc_query_caps, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)* @tc_session_setup, i32 (%struct.device*, %struct.cipher_ctx*)* @tc_session_free, i32 (%struct.device*, void (%struct.cipher_pkt*, i32)*)* null, i32 (%struct.device*, %struct.hash_ctx*, i32)* null, i32 (%struct.device*, %struct.hash_ctx*)* null, i32 (%struct.device*, void (%struct.hash_pkt*, i32)*)* null }, align 4, !dbg !1187
@__devstate_crypto_tinycrypt = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1185
@__device_crypto_tinycrypt = internal constant %struct.device { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.152, i32 0, i32 0), i8* null, i8* bitcast (%struct.crypto_driver_api* @crypto_enc_funcs to i8*), %struct.device_state* @__devstate_crypto_tinycrypt, i8* null, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_crypto_tinycrypt, i32 0, i32 0) }, section ".z_device_POST_KERNEL90_", align 4, !dbg !1158
@__init___device_crypto_tinycrypt = internal constant %struct.init_entry { i32 (%struct.device*)* @tc_shim_init, %struct.device* @__device_crypto_tinycrypt }, section ".z_init_POST_KERNEL90_", align 4, !dbg !1174
@.str.2.153 = private unnamed_addr constant [30 x i8] c"%c: TC Shim Unsupported algo\0A\00", align 1
@.str.3.154 = private unnamed_addr constant [40 x i8] c"%c: Async not supported by this driver\0A\00", align 1
@.str.4.155 = private unnamed_addr constant [34 x i8] c"%c: TC Shim Unsupported key size\0A\00", align 1
@.str.5.156 = private unnamed_addr constant [44 x i8] c"%c: Tinycrypt supports only 32 bit counter\0A\00", align 1
@.str.6.157 = private unnamed_addr constant [30 x i8] c"%c: TC Shim Unsupported mode\0A\00", align 1
@.str.7.158 = private unnamed_addr constant [30 x i8] c"%c: Max sessions in progress\0A\00", align 1
@tc_driver_state = internal global [2 x %struct.tc_shim_drv_state] zeroinitializer, align 4, !dbg !1315
@.str.8.159 = private unnamed_addr constant [38 x i8] c"%c: TC internal error in setting key\0A\00", align 1
@.str.9.168 = private unnamed_addr constant [45 x i8] c"%c: TC internal error during CBC encryption\0A\00", align 1
@.str.10.167 = private unnamed_addr constant [37 x i8] c"%c: TC internal error during CTR OP\0A\00", align 1
@.str.11.165 = private unnamed_addr constant [52 x i8] c"%c: TC internal error during CCM encryption config\0A\00", align 1
@.str.12.166 = private unnamed_addr constant [48 x i8] c"%c: TC internal error during CCM Encryption OP\0A\00", align 1
@.str.13.163 = private unnamed_addr constant [43 x i8] c"%c: TC needs contiguous iv and ciphertext\0A\00", align 1
@.str.14.164 = private unnamed_addr constant [50 x i8] c"%c: Func TC internal error during CBC decryption\0A\00", align 1
@.str.15.160 = private unnamed_addr constant [52 x i8] c"%c: TC internal error during CCM decryption config\0A\00", align 1
@.str.16.161 = private unnamed_addr constant [51 x i8] c"%c: TC needs contiguous hash  at the end of inbuf\0A\00", align 1
@.str.17.162 = private unnamed_addr constant [48 x i8] c"%c: TC internal error during CCM decryption OP\0A\00", align 1
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !938
@.str.169 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1331
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1607
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1577
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1563
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1508
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !936
@.str.1.170 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1609
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1581
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1579
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1525
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !934
@.str.2.171 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1622
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1585
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1583
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1531
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !932
@.str.3.172 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1624
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1589
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1587
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1537
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !930
@.str.4.173 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1626
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1593
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1591
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1543
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !928
@.str.5.174 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1628
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1597
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1595
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1549
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !926
@.str.6.175 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1630
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1601
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1599
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1555
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !924
@.str.7.176 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1632
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1605
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1603
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1561
@.str.180 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.180, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1634
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !940
@.str.1.183 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1790
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1845
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1788
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1847
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.183, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1779
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1781
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1834
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1837
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1839
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1842
@.str.2.185 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.188 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.4.190 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.5.191 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.141, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1015
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.6 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1858
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1967
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1969
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1965
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1936
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1971
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.169, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1506
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.170, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1523
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.171, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1529
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.172, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1535
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.173, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1541
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.174, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1547
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.175, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1553
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.176, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1559
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !2061
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2103
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2106
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2110
@.str.225 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.229 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.230 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.231 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.235 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.236 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.237 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.238 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.239 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.234 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.233 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.235, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.236, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.237, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.238, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.239, i32 0, i32 0)], align 4
@.str.241 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.241, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2117
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2340
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2326
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2335
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2347
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2352
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.250 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.255, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.256, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.257, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.258, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.259, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.260, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.254, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.261, i32 0, i32 0)], align 4, !dbg !2382
@.str.255 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.256 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.257 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.258 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.259 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.260 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.254 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.261 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2494
@.str.8.253 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2507
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2615
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2618
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2620
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2345
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2337
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2622
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2658
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2204
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2656
@.str.314 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3276 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3280, !srcloc !3281
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3282, !srcloc !3283
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3284, !srcloc !3285
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3286, !srcloc !3287
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3288, !srcloc !3289
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3290, !srcloc !3291
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3292, !srcloc !3293
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3294, !srcloc !3295
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3296, !srcloc !3297
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3298, !srcloc !3299
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3300, !srcloc !3301
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3302, !srcloc !3303
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3304, !srcloc !3305
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3306, !srcloc !3307
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3308, !srcloc !3309
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3310, !srcloc !3311
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3312, !srcloc !3313
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3314, !srcloc !3315
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3316, !srcloc !3317
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3318, !srcloc !3319
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3320, !srcloc !3321
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3322, !srcloc !3323
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3324, !srcloc !3325
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3326, !srcloc !3327
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3328, !srcloc !3329
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3330, !srcloc !3331
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3332, !srcloc !3333
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3334, !srcloc !3337
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3338, !srcloc !3339
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3340, !srcloc !3341
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3342, !srcloc !3343
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3344, !srcloc !3345
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3346, !srcloc !3347
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3348, !srcloc !3349
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3350, !srcloc !3351
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3352, !srcloc !3353
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3354, !srcloc !3355
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3356, !srcloc !3357
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3358, !srcloc !3359
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3360, !srcloc !3361
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3362, !srcloc !3363
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3364, !srcloc !3365
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3366, !srcloc !3367
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3368, !srcloc !3369
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3370, !srcloc !3371
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3372, !srcloc !3373
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3374, !srcloc !3375
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3376, !srcloc !3377
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3378, !srcloc !3379
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3380, !srcloc !3381
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3382, !srcloc !3383
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3384, !srcloc !3385
  ret void, !dbg !3386
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @validate_hw_compatibility(%struct.device* noundef %0) local_unnamed_addr #1 !dbg !3389 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3391, metadata !DIExpression()), !dbg !3393
  call void @llvm.dbg.value(metadata i32 0, metadata !3392, metadata !DIExpression()), !dbg !3393
  %2 = tail call fastcc i32 @crypto_query_hwcaps(%struct.device* noundef %0) #26, !dbg !3394
  call void @llvm.dbg.value(metadata i32 %2, metadata !3392, metadata !DIExpression()), !dbg !3393
  %3 = and i32 %2, 2, !dbg !3395
  %4 = icmp eq i32 %3, 0, !dbg !3397
  br i1 %4, label %5, label %8, !dbg !3398

5:                                                ; preds = %1
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3399
  %7 = zext i8 %6 to i32, !dbg !3399
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i32 0, i32 0), i32 noundef %7) #27, !dbg !3399
  br label %21, !dbg !3405

8:                                                ; preds = %1
  %9 = and i32 %2, 32, !dbg !3406
  %10 = icmp eq i32 %9, 0, !dbg !3408
  br i1 %10, label %11, label %14, !dbg !3409

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3410
  %13 = zext i8 %12 to i32, !dbg !3410
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([90 x i8], [90 x i8]* @.str.2, i32 0, i32 0), i32 noundef %13) #27, !dbg !3410
  br label %21, !dbg !3416

14:                                               ; preds = %8
  %15 = and i32 %2, 16, !dbg !3417
  %16 = icmp eq i32 %15, 0, !dbg !3419
  br i1 %16, label %17, label %20, !dbg !3420

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3421
  %19 = zext i8 %18 to i32, !dbg !3421
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([95 x i8], [95 x i8]* @.str.3, i32 0, i32 0), i32 noundef %19) #27, !dbg !3421
  br label %21, !dbg !3427

20:                                               ; preds = %14
  store i32 50, i32* @cap_flags, align 4, !dbg !3428
  br label %21, !dbg !3429

21:                                               ; preds = %20, %17, %11, %5
  %22 = phi i32 [ -1, %5 ], [ -1, %11 ], [ -1, %17 ], [ 0, %20 ], !dbg !3393
  ret i32 %22, !dbg !3430
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @crypto_query_hwcaps(%struct.device* noundef %0) unnamed_addr #1 !dbg !3431 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3433, metadata !DIExpression()), !dbg !3436
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3437
  %3 = bitcast i8** %2 to %struct.crypto_driver_api**, !dbg !3437
  %4 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %3, align 4, !dbg !3437
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %4, metadata !3434, metadata !DIExpression()), !dbg !3436
  %5 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %4, i32 0, i32 0, !dbg !3438
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !3438
  %7 = tail call i32 %6(%struct.device* noundef %0) #27, !dbg !3439
  call void @llvm.dbg.value(metadata i32 %7, metadata !3435, metadata !DIExpression()), !dbg !3436
  ret i32 %7, !dbg !3440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #3 !dbg !3441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3446, metadata !DIExpression()), !dbg !3447
  %2 = add i32 %0, -1, !dbg !3448
  %3 = icmp ult i32 %2, 3, !dbg !3448
  %4 = trunc i32 %2 to i24, !dbg !3448
  %5 = shl i24 %4, 3, !dbg !3448
  %6 = lshr i24 4806469, %5, !dbg !3448
  %7 = trunc i24 %6 to i8, !dbg !3448
  %8 = select i1 %3, i8 %7, i8 63, !dbg !3448
  ret i8 %8, !dbg !3449
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ecb_mode(%struct.device* noundef %0) #1 !dbg !3450 {
  %2 = alloca [16 x i8], align 1
  %3 = alloca [16 x i8], align 1
  %4 = alloca [16 x i8], align 1
  %5 = alloca [16 x i8], align 1
  %6 = alloca [16 x i8], align 1
  %7 = alloca %struct.cipher_ctx, align 4
  %8 = alloca %struct.cipher_pkt, align 4
  %9 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3452, metadata !DIExpression()), !dbg !3462
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !3463
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3463
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !3453, metadata !DIExpression()), !dbg !3464
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %10, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_key, i32 0, i32 0), i32 16, i1 false), !dbg !3464
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i32 0, i32 0, !dbg !3465
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3465
  call void @llvm.dbg.declare(metadata [16 x i8]* %3, metadata !3454, metadata !DIExpression()), !dbg !3466
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %11, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_plaintext, i32 0, i32 0), i32 16, i1 false), !dbg !3466
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !3467
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #25, !dbg !3467
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !3455, metadata !DIExpression()), !dbg !3468
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %12, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_ciphertext, i32 0, i32 0), i32 16, i1 false), !dbg !3468
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i32 0, i32 0, !dbg !3469
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #25, !dbg !3469
  call void @llvm.dbg.declare(metadata [16 x i8]* %5, metadata !3456, metadata !DIExpression()), !dbg !3470
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %13, i8 0, i32 16, i1 false), !dbg !3470
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3471
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #25, !dbg !3471
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3457, metadata !DIExpression()), !dbg !3472
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %14, i8 0, i32 16, i1 false), !dbg !3472
  %15 = bitcast %struct.cipher_ctx* %7 to i8*, !dbg !3473
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #25, !dbg !3473
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %7, metadata !3458, metadata !DIExpression()), !dbg !3474
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %15, i8 0, i64 28, i1 false), !dbg !3474
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 1, i32 0, !dbg !3475
  store i8* %10, i8** %16, align 4, !dbg !3475
  %17 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 6, !dbg !3476
  store i16 16, i16* %17, align 4, !dbg !3476
  %18 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 7, !dbg !3476
  %19 = load i32, i32* @cap_flags, align 4, !dbg !3477
  %20 = trunc i32 %19 to i16, !dbg !3477
  store i16 %20, i16* %18, align 2, !dbg !3476
  %21 = bitcast %struct.cipher_pkt* %8 to i8*, !dbg !3478
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3478
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %8, metadata !3459, metadata !DIExpression()), !dbg !3479
  %22 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 0, !dbg !3480
  store i8* %11, i8** %22, align 4, !dbg !3480
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 1, !dbg !3480
  store i32 16, i32* %23, align 4, !dbg !3480
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 2, !dbg !3480
  store i8* %13, i8** %24, align 4, !dbg !3480
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 3, !dbg !3480
  store i32 16, i32* %25, align 4, !dbg !3480
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 4, !dbg !3480
  store i32 0, i32* %26, align 4, !dbg !3480
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 5, !dbg !3480
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %27, align 4, !dbg !3480
  %28 = bitcast %struct.cipher_pkt* %9 to i8*, !dbg !3481
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3481
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %9, metadata !3460, metadata !DIExpression()), !dbg !3482
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 0, !dbg !3483
  store i8* %13, i8** %29, align 4, !dbg !3483
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 1, !dbg !3483
  store i32 16, i32* %30, align 4, !dbg !3483
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 2, !dbg !3483
  store i8* %14, i8** %31, align 4, !dbg !3483
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 3, !dbg !3483
  store i32 16, i32* %32, align 4, !dbg !3483
  %33 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 4, !dbg !3483
  store i32 0, i32* %33, align 4, !dbg !3483
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 5, !dbg !3483
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %34, align 4, !dbg !3483
  %35 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7, i32 noundef 1, i32 noundef 1) #26, !dbg !3484
  %36 = icmp eq i32 %35, 0, !dbg !3484
  br i1 %36, label %37, label %74, !dbg !3486

37:                                               ; preds = %1
  %38 = call fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef nonnull %7, %struct.cipher_pkt* noundef nonnull %8) #26, !dbg !3487
  %39 = icmp eq i32 %38, 0, !dbg !3487
  br i1 %39, label %43, label %40, !dbg !3489

40:                                               ; preds = %37
  %41 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3490
  %42 = zext i8 %41 to i32, !dbg !3490
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i32 0, i32 0), i32 noundef %42) #27, !dbg !3490
  br label %73, !dbg !3496

43:                                               ; preds = %37
  %44 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3497
  %45 = zext i8 %44 to i32, !dbg !3497
  %46 = load i32, i32* %26, align 4, !dbg !3497
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %45, i32 noundef %46) #27, !dbg !3497
  %47 = load i8*, i8** %24, align 4, !dbg !3502
  %48 = call i32 @memcmp(i8* noundef %47, i8* noundef nonnull %12, i32 noundef 16) #27, !dbg !3504
  %49 = icmp eq i32 %48, 0, !dbg !3504
  br i1 %49, label %54, label %50, !dbg !3505

50:                                               ; preds = %43
  %51 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3506
  %52 = zext i8 %51 to i32, !dbg !3506
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.6, i32 0, i32 0), i32 noundef %52) #27, !dbg !3506
  %53 = load i8*, i8** %24, align 4, !dbg !3512
  call fastcc void @print_buffer_comparison(i8* noundef nonnull %12, i8* noundef %53, i32 noundef 16) #26, !dbg !3513
  br label %73, !dbg !3514

54:                                               ; preds = %43
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i32 noundef %45) #27, !dbg !3515
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7) #26, !dbg !3520
  %55 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7, i32 noundef 1, i32 noundef 0) #26, !dbg !3521
  %56 = icmp eq i32 %55, 0, !dbg !3521
  br i1 %56, label %57, label %74, !dbg !3523

57:                                               ; preds = %54
  %58 = call fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef nonnull %7, %struct.cipher_pkt* noundef nonnull %9) #26, !dbg !3524
  %59 = icmp eq i32 %58, 0, !dbg !3524
  br i1 %59, label %63, label %60, !dbg !3526

60:                                               ; preds = %57
  %61 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3527
  %62 = zext i8 %61 to i32, !dbg !3527
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0), i32 noundef %62) #27, !dbg !3527
  br label %73, !dbg !3533

63:                                               ; preds = %57
  %64 = load i32, i32* %33, align 4, !dbg !3534
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %45, i32 noundef %64) #27, !dbg !3534
  %65 = load i8*, i8** %31, align 4, !dbg !3539
  %66 = call i32 @memcmp(i8* noundef %65, i8* noundef nonnull %11, i32 noundef 16) #27, !dbg !3541
  %67 = icmp eq i32 %66, 0, !dbg !3541
  br i1 %67, label %72, label %68, !dbg !3542

68:                                               ; preds = %63
  %69 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3543
  %70 = zext i8 %69 to i32, !dbg !3543
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.10, i32 0, i32 0), i32 noundef %70) #27, !dbg !3543
  %71 = load i8*, i8** %31, align 4, !dbg !3549
  call fastcc void @print_buffer_comparison(i8* noundef nonnull %11, i8* noundef %71, i32 noundef 16) #26, !dbg !3550
  br label %73, !dbg !3551

72:                                               ; preds = %63
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i32 noundef %45) #27, !dbg !3552
  br label %73, !dbg !3557

73:                                               ; preds = %72, %68, %60, %50, %40
  call void @llvm.dbg.label(metadata !3461), !dbg !3558
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7) #26, !dbg !3559
  br label %74, !dbg !3560

74:                                               ; preds = %54, %1, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3560
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3560
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #25, !dbg !3560
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #25, !dbg !3560
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #25, !dbg !3560
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #25, !dbg !3560
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3560
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3560
  ret void, !dbg !3560
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #5

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #6

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !3561 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3563, metadata !DIExpression()), !dbg !3570
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !3564, metadata !DIExpression()), !dbg !3570
  call void @llvm.dbg.value(metadata i32 1, metadata !3565, metadata !DIExpression()), !dbg !3570
  call void @llvm.dbg.value(metadata i32 %2, metadata !3566, metadata !DIExpression()), !dbg !3570
  call void @llvm.dbg.value(metadata i32 %3, metadata !3567, metadata !DIExpression()), !dbg !3570
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3571
  %6 = bitcast i8** %5 to %struct.crypto_driver_api**, !dbg !3571
  %7 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %6, align 4, !dbg !3571
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %7, metadata !3568, metadata !DIExpression()), !dbg !3570
  %8 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 2, !dbg !3572
  store %struct.device* %0, %struct.device** %8, align 4, !dbg !3573
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 0, !dbg !3574
  store i32 %2, i32* %9, align 4, !dbg !3575
  call void @llvm.dbg.value(metadata i16 undef, metadata !3569, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !3570
  call void @llvm.dbg.value(metadata i16 undef, metadata !3569, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_and, DW_OP_stack_value)), !dbg !3570
  call void @llvm.dbg.value(metadata i16 undef, metadata !3569, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 96, DW_OP_and, DW_OP_stack_value)), !dbg !3570
  %10 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %7, i32 0, i32 1, !dbg !3576
  %11 = load i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)*, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)** %10, align 4, !dbg !3576
  %12 = tail call i32 %11(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1, i32 noundef 1, i32 noundef %2, i32 noundef %3) #27, !dbg !3577
  ret i32 %12, !dbg !3578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1) unnamed_addr #1 !dbg !3579 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3581, metadata !DIExpression()), !dbg !3583
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3582, metadata !DIExpression()), !dbg !3583
  %3 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3584
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %3, align 4, !dbg !3585
  %4 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, i32 0, !dbg !3586
  %5 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)** %4, align 4, !dbg !3586
  %6 = tail call i32 %5(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1) #27, !dbg !3587
  ret i32 %6, !dbg !3588
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @print_buffer_comparison(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #1 !dbg !3589 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3593, metadata !DIExpression()), !dbg !3598
  call void @llvm.dbg.value(metadata i8* %1, metadata !3594, metadata !DIExpression()), !dbg !3598
  call void @llvm.dbg.value(metadata i32 %2, metadata !3595, metadata !DIExpression()), !dbg !3598
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46, i32 0, i32 0)) #27, !dbg !3599
  call void @llvm.dbg.value(metadata i32 0, metadata !3596, metadata !DIExpression()), !dbg !3598
  call void @llvm.dbg.value(metadata i32 1, metadata !3597, metadata !DIExpression()), !dbg !3598
  %4 = icmp eq i32 %2, 0, !dbg !3600
  br i1 %4, label %5, label %6, !dbg !3603

5:                                                ; preds = %3
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0)) #27, !dbg !3604
  call void @llvm.dbg.value(metadata i32 0, metadata !3596, metadata !DIExpression()), !dbg !3598
  call void @llvm.dbg.value(metadata i32 1, metadata !3597, metadata !DIExpression()), !dbg !3598
  br label %33, !dbg !3605

6:                                                ; preds = %3, %14
  %7 = phi i32 [ %17, %14 ], [ 1, %3 ]
  %8 = phi i32 [ %16, %14 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3597, metadata !DIExpression()), !dbg !3598
  call void @llvm.dbg.value(metadata i32 %8, metadata !3596, metadata !DIExpression()), !dbg !3598
  %9 = getelementptr inbounds i8, i8* %0, i32 %8, !dbg !3607
  %10 = load i8, i8* %9, align 1, !dbg !3607
  %11 = zext i8 %10 to i32, !dbg !3607
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 noundef %11) #27, !dbg !3609
  %12 = icmp eq i32 %7, 10, !dbg !3610
  br i1 %12, label %13, label %14, !dbg !3612

13:                                               ; preds = %6
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #27, !dbg !3613
  call void @llvm.dbg.value(metadata i32 0, metadata !3597, metadata !DIExpression()), !dbg !3598
  br label %14, !dbg !3615

14:                                               ; preds = %6, %13
  %15 = phi i32 [ 0, %13 ], [ %7, %6 ], !dbg !3616
  call void @llvm.dbg.value(metadata i32 %15, metadata !3597, metadata !DIExpression()), !dbg !3598
  %16 = add nuw i32 %8, 1, !dbg !3617
  call void @llvm.dbg.value(metadata i32 %16, metadata !3596, metadata !DIExpression()), !dbg !3598
  %17 = add nsw i32 %15, 1, !dbg !3618
  call void @llvm.dbg.value(metadata i32 %17, metadata !3597, metadata !DIExpression()), !dbg !3598
  %18 = icmp eq i32 %16, %2, !dbg !3600
  br i1 %18, label %19, label %6, !dbg !3603, !llvm.loop !3619

19:                                               ; preds = %14
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0)) #27, !dbg !3604
  call void @llvm.dbg.value(metadata i32 0, metadata !3596, metadata !DIExpression()), !dbg !3598
  call void @llvm.dbg.value(metadata i32 1, metadata !3597, metadata !DIExpression()), !dbg !3598
  br i1 %4, label %33, label %20, !dbg !3605

20:                                               ; preds = %19, %28
  %21 = phi i32 [ %31, %28 ], [ 1, %19 ]
  %22 = phi i32 [ %30, %28 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !3597, metadata !DIExpression()), !dbg !3598
  call void @llvm.dbg.value(metadata i32 %22, metadata !3596, metadata !DIExpression()), !dbg !3598
  %23 = getelementptr inbounds i8, i8* %1, i32 %22, !dbg !3621
  %24 = load i8, i8* %23, align 1, !dbg !3621
  %25 = zext i8 %24 to i32, !dbg !3621
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 noundef %25) #27, !dbg !3624
  %26 = icmp eq i32 %21, 10, !dbg !3625
  br i1 %26, label %27, label %28, !dbg !3627

27:                                               ; preds = %20
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #27, !dbg !3628
  call void @llvm.dbg.value(metadata i32 0, metadata !3597, metadata !DIExpression()), !dbg !3598
  br label %28, !dbg !3630

28:                                               ; preds = %20, %27
  %29 = phi i32 [ 0, %27 ], [ %21, %20 ], !dbg !3631
  call void @llvm.dbg.value(metadata i32 %29, metadata !3597, metadata !DIExpression()), !dbg !3598
  %30 = add nuw i32 %22, 1, !dbg !3632
  call void @llvm.dbg.value(metadata i32 %30, metadata !3596, metadata !DIExpression()), !dbg !3598
  %31 = add nsw i32 %29, 1, !dbg !3633
  call void @llvm.dbg.value(metadata i32 %31, metadata !3597, metadata !DIExpression()), !dbg !3598
  %32 = icmp eq i32 %30, %2, !dbg !3634
  br i1 %32, label %33, label %20, !dbg !3605, !llvm.loop !3635

33:                                               ; preds = %28, %5, %19
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #27, !dbg !3637
  ret void, !dbg !3638
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1) unnamed_addr #1 !dbg !3639 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3641, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !3642, metadata !DIExpression()), !dbg !3644
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3645
  %4 = bitcast i8** %3 to %struct.crypto_driver_api**, !dbg !3645
  %5 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %4, align 4, !dbg !3645
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %5, metadata !3643, metadata !DIExpression()), !dbg !3644
  %6 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %5, i32 0, i32 2, !dbg !3646
  %7 = load i32 (%struct.device*, %struct.cipher_ctx*)*, i32 (%struct.device*, %struct.cipher_ctx*)** %6, align 4, !dbg !3646
  %8 = tail call i32 %7(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1) #27, !dbg !3647
  ret void, !dbg !3648
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: noinline nounwind optsize
define dso_local void @cbc_mode(%struct.device* noundef %0) #1 !dbg !293 {
  %2 = alloca [80 x i8], align 1
  %3 = alloca [64 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 4
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !298, metadata !DIExpression()), !dbg !3649
  %7 = getelementptr inbounds [80 x i8], [80 x i8]* %2, i32 0, i32 0, !dbg !3650
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #25, !dbg !3650
  call void @llvm.dbg.declare(metadata [80 x i8]* %2, metadata !299, metadata !DIExpression()), !dbg !3651
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(80) %7, i8 0, i32 80, i1 false), !dbg !3651
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i32 0, i32 0, !dbg !3652
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3652
  call void @llvm.dbg.declare(metadata [64 x i8]* %3, metadata !303, metadata !DIExpression()), !dbg !3653
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %8, i8 0, i32 64, i1 false), !dbg !3653
  %9 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3654
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #25, !dbg !3654
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !307, metadata !DIExpression()), !dbg !3655
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %9, i8 0, i64 28, i1 false), !dbg !3655
  %10 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3656
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @key, i32 0, i32 0), i8** %10, align 4, !dbg !3656
  %11 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3657
  store i16 16, i16* %11, align 4, !dbg !3657
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3657
  %13 = load i32, i32* @cap_flags, align 4, !dbg !3658
  %14 = trunc i32 %13 to i16, !dbg !3658
  store i16 %14, i16* %12, align 2, !dbg !3657
  %15 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3659
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #25, !dbg !3659
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !308, metadata !DIExpression()), !dbg !3660
  %16 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3661
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8** %16, align 4, !dbg !3661
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3661
  store i32 64, i32* %17, align 4, !dbg !3661
  %18 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3661
  store i8* %7, i8** %18, align 4, !dbg !3661
  %19 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3661
  store i32 80, i32* %19, align 4, !dbg !3661
  %20 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3661
  store i32 0, i32* %20, align 4, !dbg !3661
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3661
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %21, align 4, !dbg !3661
  %22 = bitcast %struct.cipher_pkt* %6 to i8*, !dbg !3662
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #25, !dbg !3662
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %6, metadata !309, metadata !DIExpression()), !dbg !3663
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 0, !dbg !3664
  store i8* %7, i8** %23, align 4, !dbg !3664
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 1, !dbg !3664
  store i32 80, i32* %24, align 4, !dbg !3664
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 2, !dbg !3664
  store i8* %8, i8** %25, align 4, !dbg !3664
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 3, !dbg !3664
  store i32 64, i32* %26, align 4, !dbg !3664
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 4, !dbg !3664
  store i32 0, i32* %27, align 4, !dbg !3664
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 5, !dbg !3664
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %28, align 4, !dbg !3664
  %29 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 2, i32 noundef 1) #26, !dbg !3665
  %30 = icmp eq i32 %29, 0, !dbg !3665
  br i1 %30, label %31, label %68, !dbg !3667

31:                                               ; preds = %1
  %32 = call fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %5, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @cbc_mode.iv, i32 0, i32 0)) #26, !dbg !3668
  %33 = icmp eq i32 %32, 0, !dbg !3668
  br i1 %33, label %37, label %34, !dbg !3670

34:                                               ; preds = %31
  %35 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3671
  %36 = zext i8 %35 to i32, !dbg !3671
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i32 0, i32 0), i32 noundef %36) #27, !dbg !3671
  br label %67, !dbg !3677

37:                                               ; preds = %31
  %38 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3678
  %39 = zext i8 %38 to i32, !dbg !3678
  %40 = load i32, i32* %20, align 4, !dbg !3678
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %39, i32 noundef %40) #27, !dbg !3678
  %41 = load i8*, i8** %18, align 4, !dbg !3683
  %42 = call i32 @memcmp(i8* noundef %41, i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @cbc_ciphertext, i32 0, i32 0), i32 noundef 80) #27, !dbg !3685
  %43 = icmp eq i32 %42, 0, !dbg !3685
  br i1 %43, label %48, label %44, !dbg !3686

44:                                               ; preds = %37
  %45 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3687
  %46 = zext i8 %45 to i32, !dbg !3687
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13, i32 0, i32 0), i32 noundef %46) #27, !dbg !3687
  %47 = load i8*, i8** %18, align 4, !dbg !3693
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @cbc_ciphertext, i32 0, i32 0), i8* noundef %47, i32 noundef 80) #26, !dbg !3694
  br label %67, !dbg !3695

48:                                               ; preds = %37
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i32 0, i32 0), i32 noundef %39) #27, !dbg !3696
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3701
  %49 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 2, i32 noundef 0) #26, !dbg !3702
  %50 = icmp eq i32 %49, 0, !dbg !3702
  br i1 %50, label %51, label %68, !dbg !3704

51:                                               ; preds = %48
  %52 = call fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %6, i8* noundef nonnull %7) #26, !dbg !3705
  %53 = icmp eq i32 %52, 0, !dbg !3705
  br i1 %53, label %57, label %54, !dbg !3707

54:                                               ; preds = %51
  %55 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3708
  %56 = zext i8 %55 to i32, !dbg !3708
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i32 0, i32 0), i32 noundef %56) #27, !dbg !3708
  br label %67, !dbg !3714

57:                                               ; preds = %51
  %58 = load i32, i32* %27, align 4, !dbg !3715
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %39, i32 noundef %58) #27, !dbg !3715
  %59 = load i8*, i8** %25, align 4, !dbg !3720
  %60 = call i32 @memcmp(i8* noundef %59, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i32 noundef 64) #27, !dbg !3722
  %61 = icmp eq i32 %60, 0, !dbg !3722
  br i1 %61, label %66, label %62, !dbg !3723

62:                                               ; preds = %57
  %63 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3724
  %64 = zext i8 %63 to i32, !dbg !3724
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.16, i32 0, i32 0), i32 noundef %64) #27, !dbg !3724
  %65 = load i8*, i8** %25, align 4, !dbg !3730
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8* noundef %65, i32 noundef 64) #26, !dbg !3731
  br label %67, !dbg !3732

66:                                               ; preds = %57
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i32 0, i32 0), i32 noundef %39) #27, !dbg !3733
  br label %67, !dbg !3738

67:                                               ; preds = %66, %62, %54, %44, %34
  call void @llvm.dbg.label(metadata !310), !dbg !3739
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3740
  br label %68, !dbg !3741

68:                                               ; preds = %48, %1, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #25, !dbg !3741
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #25, !dbg !3741
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #25, !dbg !3741
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3741
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #25, !dbg !3741
  ret void, !dbg !3741
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3742 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3744, metadata !DIExpression()), !dbg !3747
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3745, metadata !DIExpression()), !dbg !3747
  call void @llvm.dbg.value(metadata i8* %2, metadata !3746, metadata !DIExpression()), !dbg !3747
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3748
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %4, align 4, !dbg !3749
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !3750
  %6 = bitcast %union.anon.3* %5 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !3750
  %7 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %6, align 4, !dbg !3750
  %8 = tail call i32 %7(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) #27, !dbg !3751
  ret i32 %8, !dbg !3752
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ctr_mode(%struct.device* noundef %0) #1 !dbg !3753 {
  %2 = alloca [64 x i8], align 1
  %3 = alloca [64 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_pkt, align 4
  %7 = alloca [12 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3755, metadata !DIExpression()), !dbg !3763
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i32 0, i32 0, !dbg !3764
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3764
  call void @llvm.dbg.declare(metadata [64 x i8]* %2, metadata !3756, metadata !DIExpression()), !dbg !3765
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %8, i8 0, i32 64, i1 false), !dbg !3765
  %9 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i32 0, i32 0, !dbg !3766
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #25, !dbg !3766
  call void @llvm.dbg.declare(metadata [64 x i8]* %3, metadata !3757, metadata !DIExpression()), !dbg !3767
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %9, i8 0, i32 64, i1 false), !dbg !3767
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3768
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !3768
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !3758, metadata !DIExpression()), !dbg !3769
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !3770
  store i64 0, i64* %11, align 8, !dbg !3770
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3771
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @key, i32 0, i32 0), i8** %12, align 8, !dbg !3771
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !3770
  store %struct.device* null, %struct.device** %13, align 4, !dbg !3770
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !3770
  store i8* null, i8** %14, align 8, !dbg !3770
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !3770
  store i8* null, i8** %15, align 4, !dbg !3770
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, i32 0, i32 0, !dbg !3772
  store i32 32, i32* %16, align 8, !dbg !3772
  %17 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3770
  store i16 16, i16* %17, align 4, !dbg !3770
  %18 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3770
  %19 = load i32, i32* @cap_flags, align 4, !dbg !3773
  %20 = trunc i32 %19 to i16, !dbg !3773
  store i16 %20, i16* %18, align 2, !dbg !3770
  %21 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3774
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3774
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !3759, metadata !DIExpression()), !dbg !3775
  %22 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3776
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8** %22, align 4, !dbg !3776
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3776
  store i32 64, i32* %23, align 4, !dbg !3776
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3776
  store i8* %8, i8** %24, align 4, !dbg !3776
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3776
  store i32 64, i32* %25, align 4, !dbg !3776
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3776
  store i32 0, i32* %26, align 4, !dbg !3776
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3776
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %27, align 4, !dbg !3776
  %28 = bitcast %struct.cipher_pkt* %6 to i8*, !dbg !3777
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3777
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %6, metadata !3760, metadata !DIExpression()), !dbg !3778
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 0, !dbg !3779
  store i8* %8, i8** %29, align 4, !dbg !3779
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 1, !dbg !3779
  store i32 64, i32* %30, align 4, !dbg !3779
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 2, !dbg !3779
  store i8* %9, i8** %31, align 4, !dbg !3779
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 3, !dbg !3779
  store i32 64, i32* %32, align 4, !dbg !3779
  %33 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 4, !dbg !3779
  store i32 0, i32* %33, align 4, !dbg !3779
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 5, !dbg !3779
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %34, align 4, !dbg !3779
  %35 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i32 0, i32 0, !dbg !3780
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %35) #25, !dbg !3780
  call void @llvm.dbg.declare(metadata [12 x i8]* %7, metadata !3761, metadata !DIExpression()), !dbg !3781
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(12) %35, i8* noundef nonnull align 1 dereferenceable(12) getelementptr inbounds ([12 x i8], [12 x i8]* @__const.ctr_mode.iv, i32 0, i32 0), i32 12, i1 false), !dbg !3781
  %36 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 3, i32 noundef 1) #26, !dbg !3782
  %37 = icmp eq i32 %36, 0, !dbg !3782
  br i1 %37, label %38, label %75, !dbg !3784

38:                                               ; preds = %1
  %39 = call fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %5, i8* noundef nonnull %35) #26, !dbg !3785
  %40 = icmp eq i32 %39, 0, !dbg !3785
  br i1 %40, label %44, label %41, !dbg !3787

41:                                               ; preds = %38
  %42 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3788
  %43 = zext i8 %42 to i32, !dbg !3788
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0), i32 noundef %43) #27, !dbg !3788
  br label %74, !dbg !3794

44:                                               ; preds = %38
  %45 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3795
  %46 = zext i8 %45 to i32, !dbg !3795
  %47 = load i32, i32* %26, align 4, !dbg !3795
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %46, i32 noundef %47) #27, !dbg !3795
  %48 = load i8*, i8** %24, align 4, !dbg !3800
  %49 = call i32 @memcmp(i8* noundef %48, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @ctr_ciphertext, i32 0, i32 0), i32 noundef 64) #27, !dbg !3802
  %50 = icmp eq i32 %49, 0, !dbg !3802
  br i1 %50, label %55, label %51, !dbg !3803

51:                                               ; preds = %44
  %52 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3804
  %53 = zext i8 %52 to i32, !dbg !3804
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.19, i32 0, i32 0), i32 noundef %53) #27, !dbg !3804
  %54 = load i8*, i8** %24, align 4, !dbg !3810
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @ctr_ciphertext, i32 0, i32 0), i8* noundef %54, i32 noundef 64) #26, !dbg !3811
  br label %74, !dbg !3812

55:                                               ; preds = %44
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.20, i32 0, i32 0), i32 noundef %46) #27, !dbg !3813
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3818
  %56 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 3, i32 noundef 0) #26, !dbg !3819
  %57 = icmp eq i32 %56, 0, !dbg !3819
  br i1 %57, label %58, label %75, !dbg !3821

58:                                               ; preds = %55
  %59 = call fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %6, i8* noundef nonnull %35) #26, !dbg !3822
  %60 = icmp eq i32 %59, 0, !dbg !3822
  br i1 %60, label %64, label %61, !dbg !3824

61:                                               ; preds = %58
  %62 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3825
  %63 = zext i8 %62 to i32, !dbg !3825
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i32 0, i32 0), i32 noundef %63) #27, !dbg !3825
  br label %74, !dbg !3831

64:                                               ; preds = %58
  %65 = load i32, i32* %33, align 4, !dbg !3832
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %46, i32 noundef %65) #27, !dbg !3832
  %66 = load i8*, i8** %31, align 4, !dbg !3837
  %67 = call i32 @memcmp(i8* noundef %66, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i32 noundef 64) #27, !dbg !3839
  %68 = icmp eq i32 %67, 0, !dbg !3839
  br i1 %68, label %73, label %69, !dbg !3840

69:                                               ; preds = %64
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3841
  %71 = zext i8 %70 to i32, !dbg !3841
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.22, i32 0, i32 0), i32 noundef %71) #27, !dbg !3841
  %72 = load i8*, i8** %31, align 4, !dbg !3847
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8* noundef %72, i32 noundef 64) #26, !dbg !3848
  br label %74, !dbg !3849

73:                                               ; preds = %64
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0), i32 noundef %46) #27, !dbg !3850
  br label %74, !dbg !3855

74:                                               ; preds = %73, %69, %61, %51, %41
  call void @llvm.dbg.label(metadata !3762), !dbg !3856
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3857
  br label %75, !dbg !3858

75:                                               ; preds = %55, %1, %74
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %35) #25, !dbg !3858
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3858
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3858
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !3858
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #25, !dbg !3858
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3858
  ret void, !dbg !3858
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3859 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3861, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3862, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata i8* %2, metadata !3863, metadata !DIExpression()), !dbg !3864
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3865
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %4, align 4, !dbg !3866
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !3867
  %6 = bitcast %union.anon.3* %5 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !3867
  %7 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %6, align 4, !dbg !3867
  %8 = tail call i32 %7(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) #27, !dbg !3868
  ret i32 %8, !dbg !3869
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ccm_mode(%struct.device* noundef %0) #1 !dbg !3870 {
  %2 = alloca [50 x i8], align 1
  %3 = alloca [25 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_aead_pkt, align 4
  %7 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3872, metadata !DIExpression()), !dbg !3886
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* %2, i32 0, i32 0, !dbg !3887
  call void @llvm.lifetime.start.p0i8(i64 50, i8* nonnull %8) #25, !dbg !3887
  call void @llvm.dbg.declare(metadata [50 x i8]* %2, metadata !3873, metadata !DIExpression()), !dbg !3888
  %9 = getelementptr inbounds [25 x i8], [25 x i8]* %3, i32 0, i32 0, !dbg !3889
  call void @llvm.lifetime.start.p0i8(i64 25, i8* nonnull %9) #25, !dbg !3889
  call void @llvm.dbg.declare(metadata [25 x i8]* %3, metadata !3877, metadata !DIExpression()), !dbg !3890
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3891
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !3891
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !3881, metadata !DIExpression()), !dbg !3892
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !3893
  store i64 0, i64* %11, align 8, !dbg !3893
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3894
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ccm_key, i32 0, i32 0), i8** %12, align 8, !dbg !3894
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !3893
  store %struct.device* null, %struct.device** %13, align 4, !dbg !3893
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !3893
  store i8* null, i8** %14, align 8, !dbg !3893
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !3893
  store i8* null, i8** %15, align 4, !dbg !3893
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, !dbg !3893
  %17 = bitcast %union.anon.5* %16 to %struct.ccm_params*, !dbg !3895
  %18 = bitcast %union.anon.5* %16 to i16*, !dbg !3896
  store i16 8, i16* %18, align 8, !dbg !3896
  %19 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %17, i32 0, i32 1, !dbg !3896
  store i16 13, i16* %19, align 2, !dbg !3896
  %20 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3893
  store i16 16, i16* %20, align 4, !dbg !3893
  %21 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3893
  %22 = load i32, i32* @cap_flags, align 4, !dbg !3897
  %23 = trunc i32 %22 to i16, !dbg !3897
  store i16 %23, i16* %21, align 2, !dbg !3893
  %24 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3898
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #25, !dbg !3898
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !3882, metadata !DIExpression()), !dbg !3899
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3900
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i8** %25, align 4, !dbg !3900
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3900
  store i32 23, i32* %26, align 4, !dbg !3900
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3900
  store i8* %8, i8** %27, align 4, !dbg !3900
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3900
  store i32 50, i32* %28, align 4, !dbg !3900
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3900
  store i32 0, i32* %29, align 4, !dbg !3900
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3900
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %30, align 4, !dbg !3900
  %31 = bitcast %struct.cipher_aead_pkt* %6 to i8*, !dbg !3901
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !3901
  call void @llvm.dbg.declare(metadata %struct.cipher_aead_pkt* %6, metadata !3883, metadata !DIExpression()), !dbg !3902
  %32 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 0, !dbg !3903
  %33 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 1, !dbg !3903
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @ccm_hdr, i32 0, i32 0), i8** %33, align 4, !dbg !3903
  %34 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 2, !dbg !3903
  store i32 8, i32* %34, align 4, !dbg !3903
  %35 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 3, !dbg !3903
  %36 = getelementptr inbounds [50 x i8], [50 x i8]* %2, i32 0, i32 23, !dbg !3904
  store i8* %36, i8** %35, align 4, !dbg !3903
  %37 = bitcast %struct.cipher_pkt* %7 to i8*, !dbg !3905
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #25, !dbg !3905
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %7, metadata !3884, metadata !DIExpression()), !dbg !3906
  %38 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 0, !dbg !3907
  store i8* %8, i8** %38, align 4, !dbg !3907
  %39 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 1, !dbg !3907
  store i32 23, i32* %39, align 4, !dbg !3907
  %40 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 2, !dbg !3907
  store i8* %9, i8** %40, align 4, !dbg !3907
  %41 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 3, !dbg !3907
  store i32 25, i32* %41, align 4, !dbg !3907
  %42 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 4, !dbg !3907
  store i32 0, i32* %42, align 4, !dbg !3907
  %43 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 5, !dbg !3907
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %43, align 4, !dbg !3907
  %44 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 4, i32 noundef 1) #26, !dbg !3908
  %45 = icmp eq i32 %44, 0, !dbg !3908
  br i1 %45, label %46, label %83, !dbg !3910

46:                                               ; preds = %1
  store %struct.cipher_pkt* %5, %struct.cipher_pkt** %32, align 4, !dbg !3911
  %47 = call fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !3912
  %48 = icmp eq i32 %47, 0, !dbg !3912
  br i1 %48, label %52, label %49, !dbg !3914

49:                                               ; preds = %46
  %50 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3915
  %51 = zext i8 %50 to i32, !dbg !3915
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef %51) #27, !dbg !3915
  br label %82, !dbg !3921

52:                                               ; preds = %46
  %53 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3922
  %54 = zext i8 %53 to i32, !dbg !3922
  %55 = load i32, i32* %29, align 4, !dbg !3922
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %54, i32 noundef %55) #27, !dbg !3922
  %56 = load i8*, i8** %27, align 4, !dbg !3927
  %57 = call i32 @memcmp(i8* noundef %56, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @ccm_expected, i32 0, i32 0), i32 noundef 31) #27, !dbg !3929
  %58 = icmp eq i32 %57, 0, !dbg !3929
  br i1 %58, label %63, label %59, !dbg !3930

59:                                               ; preds = %52
  %60 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3931
  %61 = zext i8 %60 to i32, !dbg !3931
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.25, i32 0, i32 0), i32 noundef %61) #27, !dbg !3931
  %62 = load i8*, i8** %27, align 4, !dbg !3937
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @ccm_expected, i32 0, i32 0), i8* noundef %62, i32 noundef 31) #26, !dbg !3938
  br label %82, !dbg !3939

63:                                               ; preds = %52
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i32 0, i32 0), i32 noundef %54) #27, !dbg !3940
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3945
  %64 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 4, i32 noundef 0) #26, !dbg !3946
  %65 = icmp eq i32 %64, 0, !dbg !3946
  br i1 %65, label %66, label %83, !dbg !3948

66:                                               ; preds = %63
  store %struct.cipher_pkt* %7, %struct.cipher_pkt** %32, align 4, !dbg !3949
  %67 = call fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !3950
  %68 = icmp eq i32 %67, 0, !dbg !3950
  br i1 %68, label %72, label %69, !dbg !3952

69:                                               ; preds = %66
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3953
  %71 = zext i8 %70 to i32, !dbg !3953
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i32 0, i32 0), i32 noundef %71) #27, !dbg !3953
  br label %82, !dbg !3959

72:                                               ; preds = %66
  %73 = load i32, i32* %42, align 4, !dbg !3960
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %54, i32 noundef %73) #27, !dbg !3960
  %74 = load i8*, i8** %40, align 4, !dbg !3965
  %75 = call i32 @memcmp(i8* noundef %74, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i32 noundef 23) #27, !dbg !3967
  %76 = icmp eq i32 %75, 0, !dbg !3967
  br i1 %76, label %81, label %77, !dbg !3968

77:                                               ; preds = %72
  %78 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3969
  %79 = zext i8 %78 to i32, !dbg !3969
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.28, i32 0, i32 0), i32 noundef %79) #27, !dbg !3969
  %80 = load i8*, i8** %40, align 4, !dbg !3975
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i8* noundef %80, i32 noundef 23) #26, !dbg !3976
  br label %82, !dbg !3977

81:                                               ; preds = %72
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29, i32 0, i32 0), i32 noundef %54) #27, !dbg !3978
  br label %82, !dbg !3983

82:                                               ; preds = %81, %77, %69, %59, %49
  call void @llvm.dbg.label(metadata !3885), !dbg !3984
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3985
  br label %83, !dbg !3986

83:                                               ; preds = %63, %1, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #25, !dbg !3986
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !3986
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #25, !dbg !3986
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !3986
  call void @llvm.lifetime.end.p0i8(i64 25, i8* nonnull %9) #25, !dbg !3986
  call void @llvm.lifetime.end.p0i8(i64 50, i8* nonnull %8) #25, !dbg !3986
  ret void, !dbg !3986
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1) unnamed_addr #1 !dbg !3987 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3989, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !3990, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @ccm_nonce, i32 0, i32 0), metadata !3991, metadata !DIExpression()), !dbg !3992
  %3 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !3993
  %4 = load %struct.cipher_pkt*, %struct.cipher_pkt** %3, align 4, !dbg !3993
  %5 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %4, i32 0, i32 5, !dbg !3994
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %5, align 4, !dbg !3995
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !3996
  %7 = bitcast %union.anon.3* %6 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !3996
  %8 = load i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %7, align 4, !dbg !3996
  %9 = tail call i32 %8(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @ccm_nonce, i32 0, i32 0)) #27, !dbg !3997
  ret i32 %9, !dbg !3998
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gcm_mode(%struct.device* noundef %0) #1 !dbg !3999 {
  %2 = alloca [60 x i8], align 1
  %3 = alloca [44 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_aead_pkt, align 4
  %7 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4001, metadata !DIExpression()), !dbg !4013
  %8 = getelementptr inbounds [60 x i8], [60 x i8]* %2, i32 0, i32 0, !dbg !4014
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %8) #25, !dbg !4014
  call void @llvm.dbg.declare(metadata [60 x i8]* %2, metadata !4002, metadata !DIExpression()), !dbg !4015
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(60) %8, i8 0, i32 60, i1 false), !dbg !4015
  %9 = getelementptr inbounds [44 x i8], [44 x i8]* %3, i32 0, i32 0, !dbg !4016
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %9) #25, !dbg !4016
  call void @llvm.dbg.declare(metadata [44 x i8]* %3, metadata !4006, metadata !DIExpression()), !dbg !4017
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(44) %9, i8 0, i32 44, i1 false), !dbg !4017
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !4018
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !4018
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !4008, metadata !DIExpression()), !dbg !4019
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !4020
  store i64 0, i64* %11, align 8, !dbg !4020
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !4021
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @gcm_key, i32 0, i32 0), i8** %12, align 8, !dbg !4021
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !4020
  store %struct.device* null, %struct.device** %13, align 4, !dbg !4020
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !4020
  store i8* null, i8** %14, align 8, !dbg !4020
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !4020
  store i8* null, i8** %15, align 4, !dbg !4020
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, !dbg !4020
  %17 = bitcast %union.anon.5* %16 to %struct.ccm_params*, !dbg !4022
  %18 = bitcast %union.anon.5* %16 to i16*, !dbg !4023
  store i16 16, i16* %18, align 8, !dbg !4023
  %19 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %17, i32 0, i32 1, !dbg !4023
  store i16 12, i16* %19, align 2, !dbg !4023
  %20 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !4020
  store i16 16, i16* %20, align 4, !dbg !4020
  %21 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !4020
  %22 = load i32, i32* @cap_flags, align 4, !dbg !4024
  %23 = trunc i32 %22 to i16, !dbg !4024
  store i16 %23, i16* %21, align 2, !dbg !4020
  %24 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !4025
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #25, !dbg !4025
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !4009, metadata !DIExpression()), !dbg !4026
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !4027
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i8** %25, align 4, !dbg !4027
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !4027
  store i32 42, i32* %26, align 4, !dbg !4027
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !4027
  store i8* %8, i8** %27, align 4, !dbg !4027
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !4027
  store i32 60, i32* %28, align 4, !dbg !4027
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !4027
  store i32 0, i32* %29, align 4, !dbg !4027
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !4027
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %30, align 4, !dbg !4027
  %31 = bitcast %struct.cipher_aead_pkt* %6 to i8*, !dbg !4028
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !4028
  call void @llvm.dbg.declare(metadata %struct.cipher_aead_pkt* %6, metadata !4010, metadata !DIExpression()), !dbg !4029
  %32 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 0, !dbg !4030
  %33 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 1, !dbg !4030
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @gcm_hdr, i32 0, i32 0), i8** %33, align 4, !dbg !4030
  %34 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 2, !dbg !4030
  store i32 20, i32* %34, align 4, !dbg !4030
  %35 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 3, !dbg !4030
  %36 = getelementptr inbounds [60 x i8], [60 x i8]* %2, i32 0, i32 42, !dbg !4031
  store i8* %36, i8** %35, align 4, !dbg !4030
  %37 = bitcast %struct.cipher_pkt* %7 to i8*, !dbg !4032
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #25, !dbg !4032
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %7, metadata !4011, metadata !DIExpression()), !dbg !4033
  %38 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 0, !dbg !4034
  store i8* %8, i8** %38, align 4, !dbg !4034
  %39 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 1, !dbg !4034
  store i32 42, i32* %39, align 4, !dbg !4034
  %40 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 2, !dbg !4034
  store i8* %9, i8** %40, align 4, !dbg !4034
  %41 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 3, !dbg !4034
  store i32 44, i32* %41, align 4, !dbg !4034
  %42 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 4, !dbg !4034
  store i32 0, i32* %42, align 4, !dbg !4034
  %43 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 5, !dbg !4034
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %43, align 4, !dbg !4034
  %44 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 5, i32 noundef 1) #26, !dbg !4035
  %45 = icmp eq i32 %44, 0, !dbg !4035
  br i1 %45, label %46, label %83, !dbg !4037

46:                                               ; preds = %1
  store %struct.cipher_pkt* %5, %struct.cipher_pkt** %32, align 4, !dbg !4038
  %47 = call fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !4039
  %48 = icmp eq i32 %47, 0, !dbg !4039
  br i1 %48, label %52, label %49, !dbg !4041

49:                                               ; preds = %46
  %50 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4042
  %51 = zext i8 %50 to i32, !dbg !4042
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef %51) #27, !dbg !4042
  br label %82, !dbg !4048

52:                                               ; preds = %46
  %53 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !4049
  %54 = zext i8 %53 to i32, !dbg !4049
  %55 = load i32, i32* %29, align 4, !dbg !4049
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %54, i32 noundef %55) #27, !dbg !4049
  %56 = load i8*, i8** %27, align 4, !dbg !4054
  %57 = call i32 @memcmp(i8* noundef %56, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @gcm_expected, i32 0, i32 0), i32 noundef 58) #27, !dbg !4056
  %58 = icmp eq i32 %57, 0, !dbg !4056
  br i1 %58, label %63, label %59, !dbg !4057

59:                                               ; preds = %52
  %60 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4058
  %61 = zext i8 %60 to i32, !dbg !4058
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.31, i32 0, i32 0), i32 noundef %61) #27, !dbg !4058
  %62 = load i8*, i8** %27, align 4, !dbg !4064
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @gcm_expected, i32 0, i32 0), i8* noundef %62, i32 noundef 58) #26, !dbg !4065
  br label %82, !dbg !4066

63:                                               ; preds = %52
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i32 0, i32 0), i32 noundef %54) #27, !dbg !4067
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !4072
  %64 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 5, i32 noundef 0) #26, !dbg !4073
  %65 = icmp eq i32 %64, 0, !dbg !4073
  br i1 %65, label %66, label %83, !dbg !4075

66:                                               ; preds = %63
  store %struct.cipher_pkt* %7, %struct.cipher_pkt** %32, align 4, !dbg !4076
  %67 = call fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !4077
  %68 = icmp eq i32 %67, 0, !dbg !4077
  br i1 %68, label %72, label %69, !dbg !4079

69:                                               ; preds = %66
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4080
  %71 = zext i8 %70 to i32, !dbg !4080
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef %71) #27, !dbg !4080
  br label %82, !dbg !4086

72:                                               ; preds = %66
  %73 = load i32, i32* %42, align 4, !dbg !4087
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %54, i32 noundef %73) #27, !dbg !4087
  %74 = load i8*, i8** %40, align 4, !dbg !4092
  %75 = call i32 @memcmp(i8* noundef %74, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i32 noundef 42) #27, !dbg !4094
  %76 = icmp eq i32 %75, 0, !dbg !4094
  br i1 %76, label %81, label %77, !dbg !4095

77:                                               ; preds = %72
  %78 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4096
  %79 = zext i8 %78 to i32, !dbg !4096
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.34, i32 0, i32 0), i32 noundef %79) #27, !dbg !4096
  %80 = load i8*, i8** %40, align 4, !dbg !4102
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i8* noundef %80, i32 noundef 42) #26, !dbg !4103
  br label %82, !dbg !4104

81:                                               ; preds = %72
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i32 0, i32 0), i32 noundef %54) #27, !dbg !4105
  br label %82, !dbg !4110

82:                                               ; preds = %81, %77, %69, %59, %49
  call void @llvm.dbg.label(metadata !4012), !dbg !4111
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !4112
  br label %83, !dbg !4113

83:                                               ; preds = %63, %1, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #25, !dbg !4113
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !4113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #25, !dbg !4113
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !4113
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %9) #25, !dbg !4113
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %8) #25, !dbg !4113
  ret void, !dbg !4113
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1) unnamed_addr #1 !dbg !4114 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !4116, metadata !DIExpression()), !dbg !4119
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !4117, metadata !DIExpression()), !dbg !4119
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @gcm_nonce, i32 0, i32 0), metadata !4118, metadata !DIExpression()), !dbg !4119
  %3 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !4120
  %4 = load %struct.cipher_pkt*, %struct.cipher_pkt** %3, align 4, !dbg !4120
  %5 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %4, i32 0, i32 5, !dbg !4121
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %5, align 4, !dbg !4122
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !4123
  %7 = bitcast %union.anon.3* %6 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !4123
  %8 = load i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %7, align 4, !dbg !4123
  %9 = tail call i32 %8(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @gcm_nonce, i32 0, i32 0)) #27, !dbg !4124
  ret i32 %9, !dbg !4125
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !4126 {
  %1 = tail call fastcc %struct.device* @device_get_binding() #26, !dbg !4138
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !4128, metadata !DIExpression()), !dbg !4139
  %2 = icmp eq %struct.device* %1, null, !dbg !4140
  br i1 %2, label %3, label %6, !dbg !4142

3:                                                ; preds = %0
  %4 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4143
  %5 = zext i8 %4 to i32, !dbg !4143
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37, i32 0, i32 0), i32 noundef %5, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0)) #27, !dbg !4143
  br label %23, !dbg !4149

6:                                                ; preds = %0
  call void @llvm.dbg.declare(metadata [6 x %struct.mode_test]* @__const.main.modes, metadata !4129, metadata !DIExpression()), !dbg !4150
  %7 = tail call i32 @validate_hw_compatibility(%struct.device* noundef nonnull %1) #26, !dbg !4151
  %8 = icmp eq i32 %7, 0, !dbg !4151
  br i1 %8, label %12, label %9, !dbg !4153

9:                                                ; preds = %6
  %10 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4154
  %11 = zext i8 %10 to i32, !dbg !4154
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i32 0, i32 0), i32 noundef %11) #27, !dbg !4154
  br label %23, !dbg !4160

12:                                               ; preds = %6
  %13 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !4161
  %14 = zext i8 %13 to i32, !dbg !4161
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i32 0, i32 0), i32 noundef %14) #27, !dbg !4161
  call void @llvm.dbg.value(metadata i32 0, metadata !4137, metadata !DIExpression()), !dbg !4139
  br label %15, !dbg !4166

15:                                               ; preds = %12, %15
  %16 = phi i32 [ 0, %12 ], [ %21, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !4137, metadata !DIExpression()), !dbg !4139
  %17 = getelementptr inbounds [6 x %struct.mode_test], [6 x %struct.mode_test]* @__const.main.modes, i32 0, i32 %16, i32 0, !dbg !4168
  %18 = load i8*, i8** %17, align 4, !dbg !4170
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0), i32 noundef %14, i8* noundef %18) #27, !dbg !4170
  %19 = getelementptr inbounds [6 x %struct.mode_test], [6 x %struct.mode_test]* @__const.main.modes, i32 0, i32 %16, i32 1, !dbg !4176
  %20 = load void (%struct.device*)*, void (%struct.device*)** %19, align 4, !dbg !4176
  tail call void %20(%struct.device* noundef nonnull %1) #27, !dbg !4177
  %21 = add nuw nsw i32 %16, 1, !dbg !4178
  call void @llvm.dbg.value(metadata i32 %21, metadata !4137, metadata !DIExpression()), !dbg !4139
  %22 = icmp eq i32 %21, 5, !dbg !4166
  br i1 %22, label %23, label %15, !dbg !4166, !llvm.loop !4179

23:                                               ; preds = %15, %9, %3
  ret void, !dbg !4181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.device* @device_get_binding() unnamed_addr #1 !dbg !4182 {
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0), metadata !4187, metadata !DIExpression()), !dbg !4188
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4189, !srcloc !4191
  %1 = tail call %struct.device* @z_impl_device_get_binding(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0)) #27, !dbg !4192
  ret %struct.device* %1, !dbg !4193
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4194 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4209, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %0, metadata !4205, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %1, metadata !4206, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %2, metadata !4207, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %3, metadata !4208, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %0, metadata !4210, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %0, metadata !4211, metadata !DIExpression()), !dbg !4271
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4272
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4272
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4214, metadata !DIExpression()), !dbg !4273
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4274
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4274
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4215, metadata !DIExpression()), !dbg !4275
  call void @llvm.dbg.value(metadata i32 0, metadata !4216, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 0, metadata !4217, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 0, metadata !4218, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 -1, metadata !4219, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8 0, metadata !4222, metadata !DIExpression()), !dbg !4271
  %12 = and i32 %2, 4, !dbg !4276
  %13 = icmp eq i32 %12, 0, !dbg !4277
  call void @llvm.dbg.value(metadata i1 %13, metadata !4223, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4271
  %14 = lshr i32 %2, 3, !dbg !4278
  %15 = and i32 %14, 7, !dbg !4278
  %16 = add nuw nsw i32 %15, 1, !dbg !4279
  call void @llvm.dbg.value(metadata i32 %16, metadata !4224, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8 0, metadata !4225, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %0, metadata !4226, metadata !DIExpression()), !dbg !4271
  %17 = ptrtoint i8* %0 to i32, !dbg !4280
  %18 = and i32 %17, 3, !dbg !4282
  %19 = icmp eq i32 %18, 0, !dbg !4282
  br i1 %19, label %20, label %316, !dbg !4283

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4284
  call void @llvm.dbg.value(metadata i8* %21, metadata !4211, metadata !DIExpression()), !dbg !4271
  %22 = icmp eq i8* %0, null, !dbg !4285
  %23 = and i32 %1, 7, !dbg !4287
  %24 = sub nuw nsw i32 8, %23, !dbg !4287
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4287
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4287
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4287
  call void @llvm.dbg.value(metadata i32 %27, metadata !4206, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %26, metadata !4211, metadata !DIExpression()), !dbg !4271
  br i1 %22, label %33, label %28, !dbg !4288

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4290
  %30 = sub i32 4, %17, !dbg !4290
  %31 = add i32 %30, %29, !dbg !4291
  %32 = icmp ugt i32 %31, %27, !dbg !4292
  br i1 %32, label %316, label %33, !dbg !4293

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4294
  call void @llvm.dbg.value(metadata i8* %34, metadata !4208, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %3, metadata !4221, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 4, metadata !4213, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 4, metadata !4212, metadata !DIExpression()), !dbg !4271
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4295

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4209, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %42, metadata !4208, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %43, metadata !4211, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %44, metadata !4212, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %45, metadata !4213, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %72, metadata !4219, metadata !DIExpression()), !dbg !4271
  br i1 %46, label %73, label %47, !dbg !4296

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4297
  %49 = zext i1 %48 to i32, !dbg !4301
  %50 = add nsw i32 %72, %49, !dbg !4301
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4301
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4301
  call void @llvm.dbg.value(metadata i32 %52, metadata !4212, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %51, metadata !4213, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8 poison, metadata !4222, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %50, metadata !4219, metadata !DIExpression()), !dbg !4271
  br label %53, !dbg !4302

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4209, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %40, metadata !4208, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %58, metadata !4211, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %57, metadata !4212, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %56, metadata !4213, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8 poison, metadata !4222, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %54, metadata !4219, metadata !DIExpression()), !dbg !4271
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4303
  call void @llvm.dbg.value(metadata i8* %60, metadata !4208, metadata !DIExpression()), !dbg !4271
  %61 = load i8, i8* %60, align 1, !dbg !4305
  %62 = icmp eq i8 %61, 0, !dbg !4306
  br i1 %62, label %223, label %63, !dbg !4307, !llvm.loop !4308

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !4296

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4311

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4222, metadata !DIExpression()), !dbg !4271
  %75 = add nsw i32 %72, -1, !dbg !4312
  call void @llvm.dbg.value(metadata i32 %75, metadata !4219, metadata !DIExpression()), !dbg !4271
  br label %53, !dbg !4313

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4314

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4213, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 4, metadata !4212, metadata !DIExpression()), !dbg !4271
  br label %53, !dbg !4315

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4213, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 4, metadata !4212, metadata !DIExpression()), !dbg !4271
  br label %53, !dbg !4316

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4317
  %81 = icmp eq i8 %80, 108, !dbg !4319
  br i1 %81, label %82, label %109, !dbg !4320

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4321
  %84 = load i8, i8* %83, align 1, !dbg !4321
  %85 = icmp eq i8 %84, 108, !dbg !4324
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4325
  %89 = add i32 %88, 7, !dbg !4325
  %90 = and i32 %89, -8, !dbg !4325
  %91 = inttoptr i32 %90 to i8*, !dbg !4325
  %92 = inttoptr i32 %90 to double*, !dbg !4325
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4325
  %94 = load double, double* %92, align 8, !dbg !4325
  call void @llvm.dbg.value(metadata i8* %93, metadata !4209, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 8, metadata !4212, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 8, metadata !4213, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata double %94, metadata !4239, metadata !DIExpression()), !dbg !4327
  %95 = ptrtoint i8* %43 to i32, !dbg !4328
  %96 = add i32 %95, 7, !dbg !4328
  %97 = and i32 %96, -8, !dbg !4328
  %98 = inttoptr i32 %97 to i8*, !dbg !4329
  call void @llvm.dbg.value(metadata i8* %98, metadata !4211, metadata !DIExpression()), !dbg !4271
  br i1 %22, label %104, label %99, !dbg !4330

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4331
  %101 = icmp ugt i32 %100, %194, !dbg !4335
  br i1 %101, label %316, label %102, !dbg !4336

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4337
  store double %94, double* %103, align 8, !dbg !4337
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4340
  call void @llvm.dbg.value(metadata i8* %105, metadata !4211, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8 poison, metadata !4222, metadata !DIExpression()), !dbg !4271
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4222, metadata !DIExpression()), !dbg !4271
  br label %53, !dbg !4341

107:                                              ; preds = %73, %73
  br label %109, !dbg !4342

108:                                              ; preds = %73
  br label %109, !dbg !4342

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4271
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4271
  call void @llvm.dbg.value(metadata i32 %113, metadata !4212, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %112, metadata !4213, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8 poison, metadata !4225, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8 poison, metadata !4222, metadata !DIExpression()), !dbg !4271
  %114 = ptrtoint i8* %43 to i32, !dbg !4342
  %115 = add i32 %114, -1, !dbg !4342
  %116 = add i32 %115, %112, !dbg !4342
  %117 = sub i32 0, %112, !dbg !4342
  %118 = and i32 %116, %117, !dbg !4342
  %119 = inttoptr i32 %118 to i8*, !dbg !4343
  call void @llvm.dbg.value(metadata i8* %119, metadata !4211, metadata !DIExpression()), !dbg !4271
  br i1 %22, label %124, label %120, !dbg !4344

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4346
  %122 = add i32 %121, %118, !dbg !4347
  %123 = icmp ugt i32 %122, %194, !dbg !4348
  br i1 %123, label %316, label %124, !dbg !4349

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !4350

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4343
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4351
  call void @llvm.dbg.value(metadata i8* %127, metadata !4209, metadata !DIExpression()), !dbg !4271
  %128 = bitcast i8* %41 to i8**, !dbg !4351
  %129 = load i8*, i8** %128, align 4, !dbg !4351
  call void @llvm.dbg.value(metadata i8* %129, metadata !4221, metadata !DIExpression()), !dbg !4271
  br label %130, !dbg !4352

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !4353
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4354
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4271
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !4355
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4271
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4356
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4271
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4271
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4271
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4271
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !4357
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4209, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %142, metadata !4206, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %141, metadata !4208, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %140, metadata !4211, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %139, metadata !4212, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %138, metadata !4213, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %137, metadata !4216, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %136, metadata !4224, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %135, metadata !4217, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8 poison, metadata !4222, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %133, metadata !4221, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %132, metadata !4219, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %131, metadata !4218, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.label(metadata !4270), !dbg !4359
  br i1 %22, label %146, label %144, !dbg !4360

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4361
  store i8* %133, i8** %145, align 4, !dbg !4364
  br label %146, !dbg !4365

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4366
  call void @llvm.dbg.value(metadata i32 %147, metadata !4224, metadata !DIExpression()), !dbg !4271
  %148 = icmp sgt i32 %136, 0, !dbg !4367
  br i1 %148, label %152, label %149, !dbg !4368

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #26, !dbg !4369
  %151 = zext i1 %150 to i32, !dbg !4369
  br label %152, !dbg !4368

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4368
  %154 = icmp eq i32 %153, 0, !dbg !4368
  call void @llvm.dbg.value(metadata i1 %154, metadata !4248, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4370
  call void @llvm.dbg.value(metadata i1 %36, metadata !4251, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4370
  %155 = or i1 %36, %154, !dbg !4371
  br i1 %155, label %156, label %190, !dbg !4371

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4372
  %158 = sub i32 %157, %17, !dbg !4372
  %159 = lshr i32 %158, 2, !dbg !4373
  call void @llvm.dbg.value(metadata i32 %159, metadata !4252, metadata !DIExpression()), !dbg !4374
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4375
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !4375
  br i1 %163, label %316, label %164, !dbg !4375

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !4377

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !4378
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4381
  store i8 %166, i8* %167, align 1, !dbg !4382
  %168 = trunc i32 %132 to i8, !dbg !4383
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4384
  store i8 %168, i8* %169, align 1, !dbg !4385
  br i1 %154, label %173, label %170, !dbg !4386

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !4387
  store i8 %171, i8* %167, align 1, !dbg !4387
  %172 = add i32 %131, 1, !dbg !4390
  call void @llvm.dbg.value(metadata i32 %172, metadata !4218, metadata !DIExpression()), !dbg !4271
  br label %185, !dbg !4391

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !4392
  call void @llvm.dbg.value(metadata i32 %174, metadata !4217, metadata !DIExpression()), !dbg !4271
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !4394

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !4395
  call void @llvm.dbg.value(metadata i32 %177, metadata !4206, metadata !DIExpression()), !dbg !4271
  br label %185, !dbg !4398

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !4399

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !4400
  call void @llvm.dbg.value(metadata i32 %180, metadata !4206, metadata !DIExpression()), !dbg !4271
  br label %185, !dbg !4403

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #27, !dbg !4404
  %183 = add i32 %142, 2, !dbg !4406
  %184 = add i32 %183, %182, !dbg !4407
  call void @llvm.dbg.value(metadata i32 %184, metadata !4206, metadata !DIExpression()), !dbg !4271
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !4271
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !4271
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !4271
  call void @llvm.dbg.value(metadata i32 %188, metadata !4206, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %187, metadata !4217, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %186, metadata !4218, metadata !DIExpression()), !dbg !4271
  %189 = add nuw nsw i32 %137, 1, !dbg !4408
  call void @llvm.dbg.value(metadata i32 undef, metadata !4206, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 undef, metadata !4216, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 undef, metadata !4217, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 undef, metadata !4218, metadata !DIExpression()), !dbg !4271
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !4353
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !4355
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !4356
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !4357
  call void @llvm.dbg.value(metadata i32 %194, metadata !4206, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %193, metadata !4216, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %192, metadata !4217, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %191, metadata !4218, metadata !DIExpression()), !dbg !4271
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4409
  call void @llvm.dbg.value(metadata i8* %195, metadata !4211, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %143, metadata !4209, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %141, metadata !4208, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %139, metadata !4212, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %138, metadata !4213, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8 poison, metadata !4225, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8 poison, metadata !4222, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %132, metadata !4219, metadata !DIExpression()), !dbg !4271
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4303
  call void @llvm.dbg.value(metadata i8* %196, metadata !4208, metadata !DIExpression()), !dbg !4271
  %197 = load i8, i8* %196, align 1, !dbg !4305
  %198 = icmp eq i8 %197, 0, !dbg !4306
  br i1 %198, label %223, label %63, !dbg !4307

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !4410

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4411
  call void @llvm.dbg.value(metadata i8* %201, metadata !4209, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 undef, metadata !4255, metadata !DIExpression()), !dbg !4412
  br i1 %22, label %216, label %202, !dbg !4413

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !4411
  %204 = load i32, i32* %203, align 4, !dbg !4411
  call void @llvm.dbg.value(metadata i32 %204, metadata !4255, metadata !DIExpression()), !dbg !4412
  %205 = inttoptr i32 %118 to i32*, !dbg !4414
  store i32 %204, i32* %205, align 4, !dbg !4417
  br label %216, !dbg !4418

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !4419
  %208 = add i32 %207, 7, !dbg !4419
  %209 = and i32 %208, -8, !dbg !4419
  %210 = inttoptr i32 %209 to i8*, !dbg !4419
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !4419
  call void @llvm.dbg.value(metadata i8* %211, metadata !4209, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i64 undef, metadata !4261, metadata !DIExpression()), !dbg !4420
  br i1 %22, label %216, label %212, !dbg !4421

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !4419
  %214 = load i64, i64* %213, align 8, !dbg !4419
  call void @llvm.dbg.value(metadata i64 %214, metadata !4261, metadata !DIExpression()), !dbg !4420
  %215 = inttoptr i32 %118 to i64*, !dbg !4422
  store i64 %214, i64* %215, align 8, !dbg !4427
  br label %216, !dbg !4428

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !4429
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !4429
  call void @llvm.dbg.value(metadata i8* %218, metadata !4209, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %40, metadata !4208, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %219, metadata !4211, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %113, metadata !4212, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %112, metadata !4213, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8 poison, metadata !4225, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8 poison, metadata !4222, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %72, metadata !4219, metadata !DIExpression()), !dbg !4271
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4303
  call void @llvm.dbg.value(metadata i8* %220, metadata !4208, metadata !DIExpression()), !dbg !4271
  %221 = load i8, i8* %220, align 1, !dbg !4305
  %222 = icmp eq i8 %221, 0, !dbg !4306
  br i1 %222, label %223, label %38, !dbg !4307

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !4430
  %225 = ptrtoint i8* %224 to i32, !dbg !4431
  %226 = sub i32 %225, %17, !dbg !4431
  %227 = lshr i32 %226, 2, !dbg !4433
  %228 = icmp ugt i32 %226, 1023, !dbg !4434
  br i1 %228, label %316, label %229, !dbg !4435

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !4436

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !4437
  %232 = add i32 %231, %226, !dbg !4440
  br label %316, !dbg !4441

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !4442
  store i8 %234, i8* %0, align 1, !dbg !4443
  %235 = trunc i32 %192 to i8, !dbg !4444
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4446
  store i8 %236, i8* %238, align 1, !dbg !4448
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4449
  store i8 %237, i8* %239, align 1, !dbg !4450
  %240 = trunc i32 %191 to i8, !dbg !4451
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4452
  store i8 %240, i8* %241, align 1, !dbg !4453
  %242 = icmp eq i32 %191, 0, !dbg !4454
  %243 = xor i1 %242, true, !dbg !4455
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !4455
  call void @llvm.dbg.value(metadata i8* %224, metadata !4211, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 0, metadata !4220, metadata !DIExpression()), !dbg !4271
  br i1 %245, label %246, label %265, !dbg !4455

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !4456

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !4211, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %250, metadata !4220, metadata !DIExpression()), !dbg !4271
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !4457
  %252 = load i8, i8* %251, align 1, !dbg !4457
  %253 = icmp sgt i8 %252, -1, !dbg !4459
  br i1 %253, label %261, label %254, !dbg !4460

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !4264, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4461
  %255 = ptrtoint i8* %249 to i32, !dbg !4462
  %256 = add i32 %247, %255, !dbg !4464
  %257 = icmp ugt i32 %256, %194, !dbg !4465
  br i1 %257, label %316, label %258, !dbg !4466

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !4467
  call void @llvm.dbg.value(metadata i8 %259, metadata !4264, metadata !DIExpression()), !dbg !4461
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !4468
  call void @llvm.dbg.value(metadata i8* %260, metadata !4211, metadata !DIExpression()), !dbg !4271
  store i8 %259, i8* %249, align 1, !dbg !4469
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !4409
  call void @llvm.dbg.value(metadata i8* %262, metadata !4211, metadata !DIExpression()), !dbg !4271
  %263 = add nuw i32 %250, 1, !dbg !4470
  call void @llvm.dbg.value(metadata i32 %263, metadata !4220, metadata !DIExpression()), !dbg !4271
  %264 = icmp eq i32 %263, %193, !dbg !4471
  br i1 %264, label %265, label %248, !dbg !4456, !llvm.loop !4472

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !4409
  call void @llvm.dbg.value(metadata i8* %266, metadata !4211, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 0, metadata !4220, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %133, metadata !4221, metadata !DIExpression()), !dbg !4271
  %267 = icmp eq i32 %193, 0, !dbg !4474
  br i1 %267, label %312, label %268, !dbg !4477

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !4477

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !4211, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %272, metadata !4221, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %273, metadata !4220, metadata !DIExpression()), !dbg !4271
  br i1 %242, label %278, label %274, !dbg !4478

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4481
  %276 = load i8, i8* %275, align 1, !dbg !4481
  %277 = icmp sgt i8 %276, -1, !dbg !4482
  br i1 %277, label %278, label %307, !dbg !4483

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !4484

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !4212, metadata !DIExpression()), !dbg !4271
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !4485
  %281 = load i8, i8* %280, align 1, !dbg !4485
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !4488
  call void @llvm.dbg.value(metadata i8* %282, metadata !4211, metadata !DIExpression()), !dbg !4271
  store i8 %281, i8* %271, align 1, !dbg !4489
  br label %293, !dbg !4490

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4491
  %285 = load i8, i8* %284, align 1, !dbg !4491
  %286 = zext i8 %285 to i32, !dbg !4491
  %287 = shl nuw nsw i32 %286, 2, !dbg !4493
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !4494
  %289 = bitcast i8* %288 to i8**, !dbg !4495
  %290 = load i8*, i8** %289, align 4, !dbg !4495
  call void @llvm.dbg.value(metadata i8* %290, metadata !4221, metadata !DIExpression()), !dbg !4271
  store i8* null, i8** %289, align 4, !dbg !4496
  %291 = tail call i32 @strlen(i8* noundef %290) #27, !dbg !4497
  %292 = add i32 %291, 1, !dbg !4498
  call void @llvm.dbg.value(metadata i32 %292, metadata !4212, metadata !DIExpression()), !dbg !4271
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !4271
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !4499
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !4271
  call void @llvm.dbg.value(metadata i8* %296, metadata !4211, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %295, metadata !4212, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %294, metadata !4221, metadata !DIExpression()), !dbg !4271
  %297 = ptrtoint i8* %296 to i32, !dbg !4500
  %298 = add i32 %269, %295, !dbg !4502
  %299 = add i32 %298, %297, !dbg !4503
  %300 = icmp ugt i32 %299, %194, !dbg !4504
  br i1 %300, label %316, label %301, !dbg !4505

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4506
  %303 = load i8, i8* %302, align 1, !dbg !4506
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !4507
  call void @llvm.dbg.value(metadata i8* %304, metadata !4211, metadata !DIExpression()), !dbg !4271
  store i8 %303, i8* %296, align 1, !dbg !4508
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #27, !dbg !4509
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !4510
  call void @llvm.dbg.value(metadata i8* %306, metadata !4211, metadata !DIExpression()), !dbg !4271
  br label %307, !dbg !4511

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !4512
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !4271
  call void @llvm.dbg.value(metadata i8* %309, metadata !4211, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %308, metadata !4221, metadata !DIExpression()), !dbg !4271
  %310 = add nuw i32 %273, 1, !dbg !4513
  call void @llvm.dbg.value(metadata i32 %310, metadata !4220, metadata !DIExpression()), !dbg !4271
  %311 = icmp eq i32 %310, %193, !dbg !4474
  br i1 %311, label %312, label %270, !dbg !4477, !llvm.loop !4514

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !4409
  %314 = ptrtoint i8* %313 to i32, !dbg !4516
  %315 = sub i32 %314, %17, !dbg !4516
  br label %316, !dbg !4517

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !4271
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4518
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4518
  ret i32 %317, !dbg !4518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !4519 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4523, metadata !DIExpression()), !dbg !4524
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #26, !dbg !4525
  ret i1 %2, !dbg !4526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !4527 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4532, metadata !DIExpression()), !dbg !4533
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4534
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4535
  %4 = and i1 %2, %3, !dbg !4535
  ret i1 %4, !dbg !4536
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4537 {
  %5 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4541, metadata !DIExpression()), !dbg !4547
  call void @llvm.dbg.value(metadata i32 %1, metadata !4542, metadata !DIExpression()), !dbg !4547
  call void @llvm.dbg.value(metadata i32 %2, metadata !4543, metadata !DIExpression()), !dbg !4547
  call void @llvm.dbg.value(metadata i8* %3, metadata !4544, metadata !DIExpression()), !dbg !4547
  %6 = bitcast %union.anon.4* %5 to i8*, !dbg !4548
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4548
  call void @llvm.dbg.declare(metadata %union.anon.4* %5, metadata !4545, metadata !DIExpression()), !dbg !4549
  call void @llvm.va_start(i8* nonnull %6), !dbg !4550
  %7 = bitcast %union.anon.4* %5 to i32*, !dbg !4551
  %8 = load i32, i32* %7, align 4, !dbg !4551
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4551
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #26, !dbg !4551
  call void @llvm.dbg.value(metadata i32 %10, metadata !4546, metadata !DIExpression()), !dbg !4547
  call void @llvm.va_end(i8* nonnull %6), !dbg !4552
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4553
  ret i32 %10, !dbg !4554
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4555 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4567, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4568, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata i8* %2, metadata !4569, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata i8* %3, metadata !4570, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata i8* %3, metadata !4571, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata i8* %3, metadata !4572, metadata !DIExpression()), !dbg !4586
  %5 = icmp eq i8* %3, null, !dbg !4587
  br i1 %5, label %45, label %6, !dbg !4589

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4581, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4586
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4590
  %8 = load i8, i8* %7, align 1, !dbg !4590
  %9 = zext i8 %8 to i32, !dbg !4591
  call void @llvm.dbg.value(metadata i32 %9, metadata !4582, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata i8 undef, metadata !4583, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4586
  call void @llvm.dbg.value(metadata i8 undef, metadata !4584, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4586
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4578, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4586
  call void @llvm.dbg.value(metadata i32 0, metadata !4580, metadata !DIExpression()), !dbg !4586
  %10 = icmp eq i8 %8, 0, !dbg !4592
  br i1 %10, label %39, label %11, !dbg !4595

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4596
  call void @llvm.dbg.value(metadata i8 %12, metadata !4581, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4586
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4578, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4586
  %13 = zext i8 %12 to i32, !dbg !4597
  call void @llvm.dbg.value(metadata i32 %13, metadata !4581, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4586
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4578, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4586
  %14 = shl nuw nsw i32 %13, 2, !dbg !4598
  call void @llvm.dbg.value(metadata i32 %14, metadata !4581, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4578, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4586
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4599
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4578, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4586
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4600
  %17 = load i8, i8* %16, align 1, !dbg !4600
  call void @llvm.dbg.value(metadata i8 %17, metadata !4583, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4586
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4578, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4586
  %18 = zext i8 %17 to i32, !dbg !4601
  call void @llvm.dbg.value(metadata i32 %18, metadata !4583, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4578, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4586
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4602
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4578, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4586
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4603
  %21 = load i8, i8* %20, align 1, !dbg !4603
  call void @llvm.dbg.value(metadata i8 %21, metadata !4584, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4586
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4578, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4586
  %22 = zext i8 %21 to i32, !dbg !4604
  call void @llvm.dbg.value(metadata i32 %22, metadata !4584, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4578, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4586
  %23 = shl nuw nsw i32 %22, 1, !dbg !4605
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4578, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4586
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4606
  call void @llvm.dbg.value(metadata i8* %24, metadata !4578, metadata !DIExpression()), !dbg !4586
  br label %25, !dbg !4595

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4578, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata i32 %27, metadata !4580, metadata !DIExpression()), !dbg !4586
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4607
  call void @llvm.dbg.value(metadata i8* %28, metadata !4578, metadata !DIExpression()), !dbg !4586
  %29 = load i8, i8* %26, align 1, !dbg !4609
  %30 = zext i8 %29 to i32, !dbg !4609
  call void @llvm.dbg.value(metadata i32 %30, metadata !4585, metadata !DIExpression()), !dbg !4586
  %31 = shl nuw nsw i32 %30, 2, !dbg !4610
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4611
  %33 = bitcast i8* %32 to i8**, !dbg !4612
  call void @llvm.dbg.value(metadata i8** %33, metadata !4579, metadata !DIExpression()), !dbg !4586
  store i8* %28, i8** %33, align 4, !dbg !4613
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #27, !dbg !4614
  %35 = add i32 %34, 1, !dbg !4615
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4616
  call void @llvm.dbg.value(metadata i8* %36, metadata !4578, metadata !DIExpression()), !dbg !4586
  %37 = add nuw nsw i32 %27, 1, !dbg !4617
  call void @llvm.dbg.value(metadata i32 %37, metadata !4580, metadata !DIExpression()), !dbg !4586
  %38 = icmp eq i32 %37, %9, !dbg !4592
  br i1 %38, label %39, label %25, !dbg !4595, !llvm.loop !4618

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4620
  call void @llvm.dbg.value(metadata i8* %40, metadata !4571, metadata !DIExpression()), !dbg !4586
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4621
  %42 = bitcast i8* %41 to i8**, !dbg !4621
  %43 = load i8*, i8** %42, align 1, !dbg !4621
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #26, !dbg !4622
  br label %45, !dbg !4623

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4586
  ret i32 %46, !dbg !4624
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4625 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4629, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4630, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i8* %2, metadata !4631, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i8* %3, metadata !4632, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i8* %4, metadata !4633, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i8* %4, metadata !4634, metadata !DIExpression()), !dbg !4639
  %6 = ptrtoint i8* %4 to i32, !dbg !4640
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4640
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #27, !dbg !4640
  ret i32 %8, !dbg !4641
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !4642 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4646, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i32 %1, metadata !4647, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i8 0, metadata !4649, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i32 0, metadata !4650, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i8 poison, metadata !4649, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i8* %0, metadata !4646, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4651
  %3 = load i8, i8* %0, align 1, !dbg !4652
  call void @llvm.dbg.value(metadata i8 %3, metadata !4648, metadata !DIExpression()), !dbg !4651
  %4 = icmp eq i8 %3, 0, !dbg !4653
  br i1 %4, label %29, label %5, !dbg !4654

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4655
  call void @llvm.dbg.value(metadata i32 %8, metadata !4650, metadata !DIExpression()), !dbg !4651
  br i1 %9, label %11, label %22, !dbg !4656

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4658
  br i1 %12, label %13, label %17, !dbg !4662

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4663
  br i1 %14, label %29, label %15, !dbg !4666

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4667
  br i1 %16, label %29, label %22, !dbg !4669

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4670
  %19 = xor i1 %18, true, !dbg !4672
  %20 = zext i1 %18 to i32, !dbg !4672
  %21 = add nsw i32 %8, %20, !dbg !4672
  br label %22, !dbg !4672

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4651
  call void @llvm.dbg.value(metadata i32 %24, metadata !4650, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i8 poison, metadata !4649, metadata !DIExpression()), !dbg !4651
  %25 = icmp eq i8 %6, 37, !dbg !4673
  %26 = xor i1 %25, %23, !dbg !4675
  call void @llvm.dbg.value(metadata i8* %10, metadata !4646, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i8* %10, metadata !4646, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4651
  %27 = load i8, i8* %10, align 1, !dbg !4652
  call void @llvm.dbg.value(metadata i8 %27, metadata !4648, metadata !DIExpression()), !dbg !4651
  %28 = icmp eq i8 %27, 0, !dbg !4653
  br i1 %28, label %29, label %5, !dbg !4654, !llvm.loop !4676

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4651
  ret i1 %30, !dbg !4678
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #3 !dbg !4679 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4683, metadata !DIExpression()), !dbg !4684
  %2 = add i8 %0, -64, !dbg !4685
  %3 = icmp ult i8 %2, 59, !dbg !4685
  ret i1 %3, !dbg !4686
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4687 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4695, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i32 %1, metadata !4696, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4697, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i8* %3, metadata !4698, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i32 %4, metadata !4699, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i16* %5, metadata !4700, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i32 %6, metadata !4701, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i8* %0, metadata !4702, metadata !DIExpression()), !dbg !4764
  %11 = bitcast i8* %0 to i32*, !dbg !4765
  call void @llvm.dbg.value(metadata i32* %11, metadata !4703, metadata !DIExpression()), !dbg !4764
  %12 = and i32 %4, 8, !dbg !4766
  %13 = icmp eq i32 %12, 0, !dbg !4767
  call void @llvm.dbg.value(metadata i1 %13, metadata !4707, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4764
  call void @llvm.dbg.value(metadata i8* %0, metadata !4710, metadata !DIExpression()), !dbg !4764
  %14 = icmp eq i32 %1, 0, !dbg !4768
  br i1 %14, label %15, label %17, !dbg !4769

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #26, !dbg !4770
  br label %17, !dbg !4769

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4769
  call void @llvm.dbg.value(metadata i32 %18, metadata !4696, metadata !DIExpression()), !dbg !4764
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4771
  %20 = load i8, i8* %19, align 1, !dbg !4771
  %21 = zext i8 %20 to i32, !dbg !4772
  call void @llvm.dbg.value(metadata i32 %21, metadata !4705, metadata !DIExpression()), !dbg !4764
  %22 = icmp ne i8 %20, 0, !dbg !4773
  %23 = and i32 %4, 1, !dbg !4774
  %24 = icmp ne i32 %23, 0, !dbg !4774
  %25 = and i1 %24, %22, !dbg !4774
  call void @llvm.dbg.value(metadata i1 %25, metadata !4709, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4764
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4775
  %27 = load i8, i8* %26, align 1, !dbg !4775
  %28 = zext i8 %27 to i32, !dbg !4776
  call void @llvm.dbg.value(metadata i32 %28, metadata !4706, metadata !DIExpression()), !dbg !4764
  %29 = icmp ne i8 %27, 0, !dbg !4777
  %30 = and i32 %4, 2, !dbg !4778
  %31 = icmp ne i32 %30, 0, !dbg !4778
  %32 = and i1 %31, %29, !dbg !4778
  call void @llvm.dbg.value(metadata i1 %32, metadata !4708, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4764
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4779
  br i1 %33, label %38, label %34, !dbg !4779

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4781
  br i1 %35, label %267, label %36, !dbg !4784

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #27, !dbg !4785
  br label %267, !dbg !4787

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4788
  %40 = zext i8 %39 to i32, !dbg !4789
  %41 = shl nuw nsw i32 %40, 2, !dbg !4790
  call void @llvm.dbg.value(metadata i32 %41, metadata !4704, metadata !DIExpression()), !dbg !4764
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4791
  %43 = bitcast i8* %42 to i8**, !dbg !4792
  %44 = load i8*, i8** %43, align 4, !dbg !4792
  call void @llvm.dbg.value(metadata i8* %44, metadata !4713, metadata !DIExpression()), !dbg !4764
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4793
  call void @llvm.dbg.value(metadata i8* %45, metadata !4714, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i32 0, metadata !4715, metadata !DIExpression()), !dbg !4764
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4794
  br i1 %46, label %47, label %132, !dbg !4795

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4712, metadata !DIExpression()), !dbg !4764
  br i1 %25, label %48, label %73, !dbg !4796

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4712, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i8* %45, metadata !4714, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i32 0, metadata !4715, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i32 0, metadata !4716, metadata !DIExpression()), !dbg !4797
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4798

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4712, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i8* %52, metadata !4714, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i32 %53, metadata !4715, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i32 %54, metadata !4716, metadata !DIExpression()), !dbg !4797
  %55 = load i8, i8* %52, align 1, !dbg !4799
  %56 = zext i8 %55 to i32, !dbg !4800
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4800
  %58 = bitcast i32* %57 to i8**, !dbg !4801
  %59 = load i8*, i8** %58, align 4, !dbg !4801
  call void @llvm.dbg.value(metadata i8* %59, metadata !4722, metadata !DIExpression()), !dbg !4802
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #26, !dbg !4803
  call void @llvm.dbg.value(metadata i32 %60, metadata !4725, metadata !DIExpression()), !dbg !4802
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4804
  br i1 %62, label %63, label %67, !dbg !4804

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4806
  %65 = add nuw i32 %53, 1, !dbg !4808
  call void @llvm.dbg.value(metadata i32 %65, metadata !4715, metadata !DIExpression()), !dbg !4764
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4809
  store i16 %64, i16* %66, align 2, !dbg !4810
  br label %67, !dbg !4811

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4764
  call void @llvm.dbg.value(metadata i32 %68, metadata !4715, metadata !DIExpression()), !dbg !4764
  %69 = add nsw i32 %60, %51, !dbg !4812
  call void @llvm.dbg.value(metadata i32 %69, metadata !4712, metadata !DIExpression()), !dbg !4764
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4813
  call void @llvm.dbg.value(metadata i8* %70, metadata !4714, metadata !DIExpression()), !dbg !4764
  %71 = add nuw nsw i32 %54, 1, !dbg !4814
  call void @llvm.dbg.value(metadata i32 %71, metadata !4716, metadata !DIExpression()), !dbg !4797
  %72 = icmp eq i32 %71, %21, !dbg !4815
  br i1 %72, label %79, label %50, !dbg !4798, !llvm.loop !4816

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4818
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4818
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4818
  br label %79, !dbg !4818

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4821
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4764
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4822
  call void @llvm.dbg.value(metadata i1 undef, metadata !4726, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4823
  call void @llvm.dbg.value(metadata i32 0, metadata !4727, metadata !DIExpression()), !dbg !4824
  call void @llvm.dbg.value(metadata i32 %82, metadata !4712, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i8* %81, metadata !4714, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i32 %80, metadata !4715, metadata !DIExpression()), !dbg !4764
  %83 = icmp eq i8 %27, 0, !dbg !4825
  br i1 %83, label %267, label %84, !dbg !4826

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4827
  %86 = icmp eq i32 %85, 0, !dbg !4828
  call void @llvm.dbg.value(metadata i1 %86, metadata !4726, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4823
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4826

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4712, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i8* %93, metadata !4714, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i32 %94, metadata !4715, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i32 %95, metadata !4727, metadata !DIExpression()), !dbg !4824
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4829
  call void @llvm.dbg.value(metadata i8* %96, metadata !4714, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i8 undef, metadata !4729, metadata !DIExpression()), !dbg !4830
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4831
  call void @llvm.dbg.value(metadata i8* %97, metadata !4714, metadata !DIExpression()), !dbg !4764
  %98 = load i8, i8* %96, align 1, !dbg !4832
  call void @llvm.dbg.value(metadata i8 %98, metadata !4732, metadata !DIExpression()), !dbg !4830
  %99 = zext i8 %98 to i32, !dbg !4833
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4833
  %101 = bitcast i32* %100 to i8**, !dbg !4834
  %102 = load i8*, i8** %101, align 4, !dbg !4834
  call void @llvm.dbg.value(metadata i8* %102, metadata !4733, metadata !DIExpression()), !dbg !4830
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #26, !dbg !4835
  call void @llvm.dbg.value(metadata i1 %103, metadata !4734, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4830
  br i1 %13, label %110, label %104, !dbg !4836

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4838
  call void @llvm.dbg.value(metadata i8 %105, metadata !4729, metadata !DIExpression()), !dbg !4830
  %106 = zext i8 %105 to i32, !dbg !4839
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #26, !dbg !4840
  br i1 %107, label %108, label %110, !dbg !4841

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.52, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #27, !dbg !4842
  %109 = add nsw i32 %92, -2, !dbg !4848
  call void @llvm.dbg.value(metadata i32 %109, metadata !4712, metadata !DIExpression()), !dbg !4764
  br label %127, !dbg !4849

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4850

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4851

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4853
  call void @llvm.dbg.value(metadata i32 %113, metadata !4712, metadata !DIExpression()), !dbg !4764
  br label %127, !dbg !4856

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4857

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4760), !dbg !4858
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #26, !dbg !4859
  call void @llvm.dbg.value(metadata i32 %116, metadata !4735, metadata !DIExpression()), !dbg !4830
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4860
  br i1 %118, label %119, label %123, !dbg !4860

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4862
  %121 = add nuw i32 %94, 1, !dbg !4864
  call void @llvm.dbg.value(metadata i32 %121, metadata !4715, metadata !DIExpression()), !dbg !4764
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4865
  store i16 %120, i16* %122, align 2, !dbg !4866
  br label %123, !dbg !4867

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4764
  call void @llvm.dbg.value(metadata i32 %124, metadata !4715, metadata !DIExpression()), !dbg !4764
  %125 = add i32 %92, -1, !dbg !4868
  %126 = add i32 %125, %116, !dbg !4869
  call void @llvm.dbg.value(metadata i32 %126, metadata !4712, metadata !DIExpression()), !dbg !4764
  br label %127, !dbg !4870

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4764
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4830
  call void @llvm.dbg.value(metadata i32 %129, metadata !4712, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i32 %128, metadata !4715, metadata !DIExpression()), !dbg !4764
  %130 = add nuw nsw i32 %95, 1, !dbg !4871
  call void @llvm.dbg.value(metadata i8* %97, metadata !4714, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i32 %130, metadata !4727, metadata !DIExpression()), !dbg !4824
  %131 = icmp eq i32 %130, %28, !dbg !4825
  br i1 %131, label %267, label %91, !dbg !4826, !llvm.loop !4872

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4737, metadata !DIExpression()), !dbg !4874
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4738, metadata !DIExpression()), !dbg !4875
  br i1 %25, label %133, label %135, !dbg !4876

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4739, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i8 0, metadata !4740, metadata !DIExpression()), !dbg !4764
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4877
  call void @llvm.dbg.value(metadata i8* %134, metadata !4741, metadata !DIExpression()), !dbg !4764
  br label %140, !dbg !4880

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4881
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4881

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4741, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i8 undef, metadata !4740, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i8 0, metadata !4739, metadata !DIExpression()), !dbg !4764
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #27, !dbg !4883
  br label %145, !dbg !4886

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4887
  call void @llvm.dbg.value(metadata i8* %148, metadata !4714, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i32 0, metadata !4743, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i8 %146, metadata !4740, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i8 %147, metadata !4739, metadata !DIExpression()), !dbg !4764
  %149 = icmp eq i8 %27, 0, !dbg !4889
  br i1 %149, label %150, label %152, !dbg !4890

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4891
  br label %157, !dbg !4890

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4890

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4891
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4892
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4893
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4764
  call void @llvm.dbg.value(metadata i8 undef, metadata !4736, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4764
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4894
  %163 = load i8, i8* %162, align 1, !dbg !4894
  %164 = zext i8 %159 to i32, !dbg !4895
  %165 = add i8 %163, %159, !dbg !4896
  call void @llvm.dbg.value(metadata i8 %165, metadata !4736, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4764
  %166 = icmp eq i32 %30, 0, !dbg !4897
  %167 = lshr i8 %160, 1, !dbg !4898
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4898
  call void @llvm.dbg.value(metadata i8 %168, metadata !4736, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4764
  %169 = icmp eq i32 %23, 0, !dbg !4899
  %170 = icmp eq i32 %158, 0, !dbg !4891
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4891
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4891
  call void @llvm.dbg.value(metadata i8 %172, metadata !4736, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4764
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4751, metadata !DIExpression()), !dbg !4900
  %173 = load i32, i32* %11, align 1, !dbg !4901
  store i8 %165, i8* %162, align 1, !dbg !4902
  store i8 %172, i8* %19, align 1, !dbg !4902
  store i8 %168, i8* %26, align 1, !dbg !4902
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #27, !dbg !4903
  call void @llvm.dbg.value(metadata i32 %174, metadata !4742, metadata !DIExpression()), !dbg !4764
  %175 = icmp slt i32 %174, 0, !dbg !4904
  br i1 %175, label %267, label %220, !dbg !4906

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4714, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i32 %178, metadata !4743, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i8 %179, metadata !4740, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i8 %180, metadata !4739, metadata !DIExpression()), !dbg !4764
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4907
  call void @llvm.dbg.value(metadata i8* %181, metadata !4714, metadata !DIExpression()), !dbg !4764
  %182 = load i8, i8* %177, align 1, !dbg !4908
  call void @llvm.dbg.value(metadata i8 %182, metadata !4745, metadata !DIExpression()), !dbg !4909
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4910
  call void @llvm.dbg.value(metadata i8* %183, metadata !4714, metadata !DIExpression()), !dbg !4764
  %184 = load i8, i8* %181, align 1, !dbg !4911
  call void @llvm.dbg.value(metadata i8 %184, metadata !4748, metadata !DIExpression()), !dbg !4909
  %185 = zext i8 %184 to i32, !dbg !4912
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4912
  %187 = bitcast i32* %186 to i8**, !dbg !4913
  %188 = load i8*, i8** %187, align 4, !dbg !4913
  call void @llvm.dbg.value(metadata i8* %188, metadata !4749, metadata !DIExpression()), !dbg !4909
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #26, !dbg !4914
  call void @llvm.dbg.value(metadata i1 %189, metadata !4750, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4909
  br i1 %13, label %193, label %190, !dbg !4915

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4917
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #26, !dbg !4918
  br i1 %192, label %215, label %193, !dbg !4919

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4920

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4921

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4924
  call void @llvm.dbg.value(metadata i8 %196, metadata !4739, metadata !DIExpression()), !dbg !4764
  br label %208, !dbg !4927

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4928

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4929
  call void @llvm.dbg.value(metadata i8 %199, metadata !4740, metadata !DIExpression()), !dbg !4764
  br label %208, !dbg !4932

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4933

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4935
  call void @llvm.dbg.value(metadata i8 %202, metadata !4739, metadata !DIExpression()), !dbg !4764
  br label %208, !dbg !4938

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4939
  call void @llvm.dbg.value(metadata i8 %204, metadata !4740, metadata !DIExpression()), !dbg !4764
  %205 = zext i8 %179 to i32, !dbg !4941
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4941
  store i8 %182, i8* %206, align 1, !dbg !4942
  %207 = add i8 %179, 2, !dbg !4943
  call void @llvm.dbg.value(metadata i8 %207, metadata !4740, metadata !DIExpression()), !dbg !4764
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4944
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4944
  store i8 %184, i8* %214, align 1, !dbg !4944
  br label %215, !dbg !4945

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4764
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4893
  call void @llvm.dbg.value(metadata i8 %217, metadata !4740, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i8 %216, metadata !4739, metadata !DIExpression()), !dbg !4764
  %218 = add nuw nsw i32 %178, 1, !dbg !4945
  call void @llvm.dbg.value(metadata i8* %183, metadata !4714, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i32 %218, metadata !4743, metadata !DIExpression()), !dbg !4888
  %219 = icmp eq i32 %218, %28, !dbg !4889
  br i1 %219, label %157, label %176, !dbg !4890, !llvm.loop !4946

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4898
  call void @llvm.dbg.value(metadata i32 %174, metadata !4712, metadata !DIExpression()), !dbg !4764
  store i32 %173, i32* %11, align 1, !dbg !4948
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4949
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #27, !dbg !4950
  call void @llvm.dbg.value(metadata i32 %223, metadata !4742, metadata !DIExpression()), !dbg !4764
  %224 = icmp slt i32 %223, 0, !dbg !4951
  br i1 %224, label %267, label %225, !dbg !4953

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4712, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4764
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !4954
  %228 = add nuw nsw i32 %41, %21, !dbg !4954
  %229 = sub i32 %227, %228, !dbg !4954
  call void @llvm.dbg.value(metadata i32 %229, metadata !4752, metadata !DIExpression()), !dbg !4764
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #27, !dbg !4955
  call void @llvm.dbg.value(metadata i32 %230, metadata !4742, metadata !DIExpression()), !dbg !4764
  %231 = icmp slt i32 %230, 0, !dbg !4956
  br i1 %231, label %267, label %232, !dbg !4958

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !4959
  call void @llvm.dbg.value(metadata i32 %233, metadata !4712, metadata !DIExpression()), !dbg !4764
  %234 = add nuw nsw i32 %233, %230, !dbg !4960
  call void @llvm.dbg.value(metadata i32 %234, metadata !4712, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i32 0, metadata !4753, metadata !DIExpression()), !dbg !4961
  %235 = icmp eq i8 %159, 0, !dbg !4962
  br i1 %235, label %264, label %236, !dbg !4963

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !4963

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4753, metadata !DIExpression()), !dbg !4961
  call void @llvm.dbg.value(metadata i32 %240, metadata !4712, metadata !DIExpression()), !dbg !4764
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4964
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !4965
  %242 = load i8, i8* %241, align 1, !dbg !4965
  call void @llvm.dbg.value(metadata i8 %242, metadata !4755, metadata !DIExpression()), !dbg !4966
  store i8 %242, i8* %10, align 1, !dbg !4967
  %243 = zext i8 %242 to i32, !dbg !4968
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !4968
  %245 = bitcast i32* %244 to i8**, !dbg !4969
  %246 = load i8*, i8** %245, align 4, !dbg !4969
  call void @llvm.dbg.value(metadata i8* %246, metadata !4758, metadata !DIExpression()), !dbg !4966
  br i1 %237, label %250, label %247, !dbg !4970

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !4971
  %249 = load i16, i16* %248, align 2, !dbg !4971
  br label %250, !dbg !4970

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !4970
  call void @llvm.dbg.value(metadata i32 undef, metadata !4759, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4966
  call void @llvm.dbg.value(metadata i8* %10, metadata !4755, metadata !DIExpression(DW_OP_deref)), !dbg !4966
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #27, !dbg !4972
  call void @llvm.dbg.value(metadata i32 %252, metadata !4742, metadata !DIExpression()), !dbg !4764
  %253 = icmp slt i32 %252, 0, !dbg !4973
  br i1 %253, label %257, label %254, !dbg !4975

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4759, metadata !DIExpression()), !dbg !4966
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4712, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4764
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #26, !dbg !4976
  call void @llvm.dbg.value(metadata i32 %255, metadata !4742, metadata !DIExpression()), !dbg !4764
  %256 = icmp slt i32 %255, 0, !dbg !4977
  br i1 %256, label %257, label %259, !dbg !4979

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4712, metadata !DIExpression()), !dbg !4764
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4980
  call void @llvm.dbg.value(metadata i32 undef, metadata !4712, metadata !DIExpression()), !dbg !4764
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !4981
  call void @llvm.dbg.value(metadata i32 %260, metadata !4712, metadata !DIExpression()), !dbg !4764
  %261 = add nsw i32 %260, %255, !dbg !4982
  call void @llvm.dbg.value(metadata i32 %261, metadata !4712, metadata !DIExpression()), !dbg !4764
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4980
  %262 = add nuw nsw i32 %239, 1, !dbg !4983
  call void @llvm.dbg.value(metadata i32 %262, metadata !4753, metadata !DIExpression()), !dbg !4961
  %263 = icmp eq i32 %262, %164, !dbg !4962
  br i1 %263, label %264, label %238, !dbg !4963, !llvm.loop !4984

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !4960
  call void @llvm.dbg.value(metadata i32 %265, metadata !4712, metadata !DIExpression()), !dbg !4764
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #27, !dbg !4986
  br label %267, !dbg !4987

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4764
  ret i32 %268, !dbg !4988
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4989 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4993, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i8* %0, metadata !4994, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i8* %0, metadata !4995, metadata !DIExpression()), !dbg !5001
  %2 = load i8, i8* %0, align 1, !dbg !5002
  %3 = zext i8 %2 to i32, !dbg !5002
  %4 = shl nuw nsw i32 %3, 2, !dbg !5003
  call void @llvm.dbg.value(metadata i32 %4, metadata !4996, metadata !DIExpression()), !dbg !5001
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !5004
  %6 = load i8, i8* %5, align 1, !dbg !5004
  %7 = zext i8 %6 to i32, !dbg !5004
  call void @llvm.dbg.value(metadata i32 %7, metadata !4997, metadata !DIExpression()), !dbg !5001
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !5005
  %9 = load i8, i8* %8, align 1, !dbg !5005
  %10 = zext i8 %9 to i32, !dbg !5005
  call void @llvm.dbg.value(metadata i32 %10, metadata !4998, metadata !DIExpression()), !dbg !5001
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !5006
  call void @llvm.dbg.value(metadata i8* %11, metadata !4994, metadata !DIExpression()), !dbg !5001
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !5007
  call void @llvm.dbg.value(metadata i8* %12, metadata !4994, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 0, metadata !4999, metadata !DIExpression()), !dbg !5008
  %13 = icmp eq i8 %6, 0, !dbg !5009
  br i1 %13, label %14, label %19, !dbg !5011

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !5001
  %16 = ptrtoint i8* %15 to i32, !dbg !5012
  %17 = ptrtoint i8* %0 to i32, !dbg !5012
  %18 = sub i32 %16, %17, !dbg !5012
  ret i32 %18, !dbg !5013

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4999, metadata !DIExpression()), !dbg !5008
  call void @llvm.dbg.value(metadata i8* %21, metadata !4994, metadata !DIExpression()), !dbg !5001
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !5014
  call void @llvm.dbg.value(metadata i8* %22, metadata !4994, metadata !DIExpression()), !dbg !5001
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #27, !dbg !5016
  %24 = add i32 %23, 1, !dbg !5017
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !5018
  call void @llvm.dbg.value(metadata i8* %25, metadata !4994, metadata !DIExpression()), !dbg !5001
  %26 = add nuw nsw i32 %20, 1, !dbg !5019
  call void @llvm.dbg.value(metadata i32 %26, metadata !4999, metadata !DIExpression()), !dbg !5008
  %27 = icmp eq i32 %26, %7, !dbg !5009
  br i1 %27, label %14, label %19, !dbg !5011, !llvm.loop !5020
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !5022 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !5026, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata i8* %1, metadata !5027, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata i8* %2, metadata !5028, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata i16 %3, metadata !5029, metadata !DIExpression()), !dbg !5030
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !5031
  br i1 %5, label %6, label %9, !dbg !5033

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !5034
  %8 = add i32 %7, 1, !dbg !5036
  br label %20, !dbg !5037

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !5038
  br i1 %10, label %13, label %11, !dbg !5039

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !5039
  br label %16, !dbg !5039

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !5040
  %15 = add i32 %14, 1, !dbg !5041
  br label %16, !dbg !5039

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !5039
  %18 = and i32 %17, 65535, !dbg !5042
  call void @llvm.dbg.value(metadata i32 %17, metadata !5029, metadata !DIExpression()), !dbg !5030
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #27, !dbg !5043
  br label %20, !dbg !5044

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !5030
  ret i32 %21, !dbg !5045
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !5046 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5048, metadata !DIExpression()), !dbg !5049
  ret i32 0, !dbg !5050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !5051 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !5055, metadata !DIExpression()), !dbg !5056
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !5057
  ret void, !dbg !5058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !5059 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !5062
  ret i8* %1, !dbg !5063
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5064 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5075, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.value(metadata i8* %0, metadata !5074, metadata !DIExpression()), !dbg !5086
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !5087
  ret void, !dbg !5089
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !5090 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5094, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.value(metadata i8* %1, metadata !5095, metadata !DIExpression()), !dbg !5096
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5097
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !5097
  ret i32 %4, !dbg !5098
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !5099 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5106, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5103, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.value(metadata i8* %1, metadata !5104, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.value(metadata i8* %2, metadata !5105, metadata !DIExpression()), !dbg !5107
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !5108
  ret void, !dbg !5109
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5110 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5114, metadata !DIExpression()), !dbg !5117
  call void @llvm.dbg.value(metadata i32 %1, metadata !5115, metadata !DIExpression()), !dbg !5117
  call void @llvm.dbg.value(metadata i32 0, metadata !5116, metadata !DIExpression()), !dbg !5117
  %3 = icmp eq i32 %1, 0, !dbg !5118
  br i1 %3, label %13, label %4, !dbg !5121

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5116, metadata !DIExpression()), !dbg !5117
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5122
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5124
  %8 = load i8, i8* %7, align 1, !dbg !5124
  %9 = zext i8 %8 to i32, !dbg !5124
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !5122
  %11 = add nuw i32 %5, 1, !dbg !5125
  call void @llvm.dbg.value(metadata i32 %11, metadata !5116, metadata !DIExpression()), !dbg !5117
  %12 = icmp eq i32 %11, %1, !dbg !5118
  br i1 %12, label %13, label %4, !dbg !5121, !llvm.loop !5126

13:                                               ; preds = %4, %2
  ret void, !dbg !5128
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5129 {
  %2 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5133, metadata !DIExpression()), !dbg !5135
  %3 = bitcast %union.anon.4* %2 to i8*, !dbg !5136
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5136
  call void @llvm.dbg.declare(metadata %union.anon.4* %2, metadata !5134, metadata !DIExpression()), !dbg !5137
  call void @llvm.va_start(i8* nonnull %3), !dbg !5138
  %4 = bitcast %union.anon.4* %2 to i32*, !dbg !5139
  %5 = load i32, i32* %4, align 4, !dbg !5139
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5139
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !5139
  call void @llvm.va_end(i8* nonnull %3), !dbg !5140
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5141
  ret void, !dbg !5141
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5142 {
  %4 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5146, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.value(metadata i32 %1, metadata !5147, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.value(metadata i8* %2, metadata !5148, metadata !DIExpression()), !dbg !5151
  %5 = bitcast %union.anon.4* %4 to i8*, !dbg !5152
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5152
  call void @llvm.dbg.declare(metadata %union.anon.4* %4, metadata !5149, metadata !DIExpression()), !dbg !5153
  call void @llvm.va_start(i8* nonnull %5), !dbg !5154
  %6 = bitcast %union.anon.4* %4 to i32*, !dbg !5155
  %7 = load i32, i32* %6, align 4, !dbg !5155
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5155
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !5155
  call void @llvm.dbg.value(metadata i32 %9, metadata !5150, metadata !DIExpression()), !dbg !5151
  call void @llvm.va_end(i8* nonnull %5), !dbg !5156
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5157
  ret i32 %9, !dbg !5158
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5159 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5166, metadata !DIExpression()), !dbg !5173
  call void @llvm.dbg.value(metadata i8* %0, metadata !5163, metadata !DIExpression()), !dbg !5173
  call void @llvm.dbg.value(metadata i32 %1, metadata !5164, metadata !DIExpression()), !dbg !5173
  call void @llvm.dbg.value(metadata i8* %2, metadata !5165, metadata !DIExpression()), !dbg !5173
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5174
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5174
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5167, metadata !DIExpression()), !dbg !5175
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5176
  store i8* %0, i8** %7, align 4, !dbg !5176
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5176
  store i32 %1, i32* %8, align 4, !dbg !5176
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5176
  store i32 0, i32* %9, align 4, !dbg !5176
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !5177
  %10 = load i32, i32* %9, align 4, !dbg !5178
  %11 = load i32, i32* %8, align 4, !dbg !5180
  %12 = icmp slt i32 %10, %11, !dbg !5181
  br i1 %12, label %13, label %15, !dbg !5182

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5183
  store i8 0, i8* %14, align 1, !dbg !5185
  br label %15, !dbg !5186

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5187
  ret i32 %10, !dbg !5188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !5189 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5194, metadata !DIExpression()), !dbg !5196
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5195, metadata !DIExpression()), !dbg !5196
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5197
  %4 = load i8*, i8** %3, align 4, !dbg !5197
  %5 = icmp eq i8* %4, null, !dbg !5199
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5200
  br i1 %5, label %12, label %8, !dbg !5201

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5202
  %10 = load i32, i32* %9, align 4, !dbg !5202
  %11 = icmp slt i32 %7, %10, !dbg !5203
  br i1 %11, label %15, label %12, !dbg !5204

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5205
  %14 = add nsw i32 %7, 1, !dbg !5207
  store i32 %14, i32* %13, align 4, !dbg !5207
  br label %25, !dbg !5208

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5209
  %17 = icmp eq i32 %7, %16, !dbg !5211
  br i1 %17, label %18, label %21, !dbg !5212

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5213
  store i32 %19, i32* %6, align 4, !dbg !5213
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5215
  store i8 0, i8* %20, align 1, !dbg !5216
  br label %25, !dbg !5217

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5218
  %23 = add nsw i32 %7, 1, !dbg !5220
  store i32 %23, i32* %6, align 4, !dbg !5220
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5221
  store i8 %22, i8* %24, align 1, !dbg !5222
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5223
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #12 !dbg !5224 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5234, metadata !DIExpression()), !dbg !5238
  call void @llvm.dbg.value(metadata i8* %1, metadata !5235, metadata !DIExpression()), !dbg !5238
  call void @llvm.dbg.value(metadata i8* %2, metadata !5236, metadata !DIExpression()), !dbg !5238
  call void @llvm.dbg.value(metadata i8* %3, metadata !5237, metadata !DIExpression()), !dbg !5238
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !5239
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !5240
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !5241
  unreachable, !dbg !5242
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #13 !dbg !5243 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !5347
  ret %struct.k_thread* %1, !dbg !5348
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5349 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5354, metadata !DIExpression()), !dbg !5355
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5356, !srcloc !5358
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !5359
  ret void, !dbg !5360
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #13 !dbg !5361 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5362, !srcloc !5364
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !5365
  ret %struct.k_thread* %1, !dbg !5366
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5367 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5380, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5377, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.value(metadata i8* %1, metadata !5378, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.value(metadata i8* %2, metadata !5379, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.value(metadata i32 %4, metadata !5381, metadata !DIExpression()), !dbg !5506
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5507
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5507
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5382, metadata !DIExpression()), !dbg !5508
  call void @llvm.dbg.value(metadata i32 0, metadata !5386, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.value(metadata i1 undef, metadata !5388, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5506
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5509

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5509

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5510
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5380, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.value(metadata i8* %30, metadata !5379, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.value(metadata i32 %29, metadata !5386, metadata !DIExpression()), !dbg !5506
  %31 = load i8, i8* %30, align 1, !dbg !5511
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5509

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5511
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5512
  call void @llvm.dbg.value(metadata i8* %34, metadata !5379, metadata !DIExpression()), !dbg !5506
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !5512
  call void @llvm.dbg.value(metadata i32 %35, metadata !5390, metadata !DIExpression()), !dbg !5513
  %36 = icmp slt i32 %35, 0, !dbg !5514
  %37 = add i32 %29, 1, !dbg !5512
  call void @llvm.dbg.value(metadata i32 undef, metadata !5386, metadata !DIExpression()), !dbg !5506
  br i1 %36, label %365, label %28, !llvm.loop !5516

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5518
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5395, metadata !DIExpression()), !dbg !5519
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5519
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5438, metadata !DIExpression()), !dbg !5520
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5441, metadata !DIExpression()), !dbg !5520
  call void @llvm.dbg.value(metadata i8* %30, metadata !5444, metadata !DIExpression()), !dbg !5520
  call void @llvm.dbg.value(metadata i32 -1, metadata !5445, metadata !DIExpression()), !dbg !5520
  call void @llvm.dbg.value(metadata i32 -1, metadata !5446, metadata !DIExpression()), !dbg !5520
  call void @llvm.dbg.value(metadata i8* null, metadata !5447, metadata !DIExpression()), !dbg !5520
  call void @llvm.dbg.value(metadata i8* %14, metadata !5448, metadata !DIExpression()), !dbg !5520
  call void @llvm.dbg.value(metadata i8 0, metadata !5449, metadata !DIExpression()), !dbg !5520
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !5521
  call void @llvm.dbg.value(metadata i8* %39, metadata !5379, metadata !DIExpression()), !dbg !5506
  %40 = load i24, i24* %15, align 8, !dbg !5522
  %41 = and i24 %40, 256, !dbg !5522
  %42 = icmp eq i24 %41, 0, !dbg !5522
  br i1 %42, label %51, label %43, !dbg !5524

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5525
  call void @llvm.dbg.value(metadata i8* %44, metadata !5380, metadata !DIExpression()), !dbg !5506
  %45 = bitcast i8* %27 to i32*, !dbg !5525
  %46 = load i32, i32* %45, align 4, !dbg !5525
  call void @llvm.dbg.value(metadata i32 %46, metadata !5445, metadata !DIExpression()), !dbg !5520
  %47 = icmp slt i32 %46, 0, !dbg !5527
  br i1 %47, label %48, label %56, !dbg !5529

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5530
  store i24 %49, i24* %15, align 8, !dbg !5530
  %50 = sub nsw i32 0, %46, !dbg !5532
  call void @llvm.dbg.value(metadata i32 %50, metadata !5445, metadata !DIExpression()), !dbg !5520
  br label %56, !dbg !5533

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5534
  %53 = icmp eq i24 %52, 0, !dbg !5534
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5536
  br label %56, !dbg !5536

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5537
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5520
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5380, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.value(metadata i32 %58, metadata !5445, metadata !DIExpression()), !dbg !5520
  %60 = and i24 %57, 1024, !dbg !5537
  %61 = icmp eq i24 %60, 0, !dbg !5537
  br i1 %61, label %69, label %62, !dbg !5538

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5539
  call void @llvm.dbg.value(metadata i8* %63, metadata !5380, metadata !DIExpression()), !dbg !5506
  %64 = bitcast i8* %59 to i32*, !dbg !5539
  %65 = load i32, i32* %64, align 4, !dbg !5539
  call void @llvm.dbg.value(metadata i32 %65, metadata !5450, metadata !DIExpression()), !dbg !5540
  %66 = icmp slt i32 %65, 0, !dbg !5541
  br i1 %66, label %67, label %74, !dbg !5543

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5544
  store i24 %68, i24* %15, align 8, !dbg !5544
  br label %74, !dbg !5546

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5547
  %71 = icmp eq i24 %70, 0, !dbg !5547
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5549
  br label %74, !dbg !5549

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5550
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5520
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5520
  call void @llvm.dbg.value(metadata i8* %77, metadata !5380, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.value(metadata i32 %76, metadata !5446, metadata !DIExpression()), !dbg !5520
  store i32 0, i32* %16, align 4, !dbg !5551
  store i32 0, i32* %17, align 8, !dbg !5552
  %78 = lshr i24 %75, 16, !dbg !5550
  call void @llvm.dbg.value(metadata i24 %78, metadata !5453, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5520
  %79 = lshr i24 %75, 11, !dbg !5553
  %80 = and i24 %79, 15, !dbg !5553
  %81 = zext i24 %80 to i32, !dbg !5553
  call void @llvm.dbg.value(metadata i32 %81, metadata !5454, metadata !DIExpression()), !dbg !5520
  %82 = trunc i24 %78 to i3, !dbg !5554
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5554

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5555

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5558
  call void @llvm.dbg.value(metadata i8* %85, metadata !5380, metadata !DIExpression()), !dbg !5506
  %86 = bitcast i8* %77 to i32*, !dbg !5558
  %87 = load i32, i32* %86, align 4, !dbg !5558
  %88 = sext i32 %87 to i64, !dbg !5558
  store i64 %88, i64* %20, align 8, !dbg !5560
  br label %115, !dbg !5561

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5562
  call void @llvm.dbg.value(metadata i8* %90, metadata !5380, metadata !DIExpression()), !dbg !5506
  %91 = bitcast i8* %77 to i32*, !dbg !5562
  %92 = load i32, i32* %91, align 4, !dbg !5562
  %93 = sext i32 %92 to i64, !dbg !5562
  store i64 %93, i64* %20, align 8, !dbg !5565
  br label %115, !dbg !5566

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5567
  %96 = add i32 %95, 7, !dbg !5567
  %97 = and i32 %96, -8, !dbg !5567
  %98 = inttoptr i32 %97 to i8*, !dbg !5567
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5567
  call void @llvm.dbg.value(metadata i8* %99, metadata !5380, metadata !DIExpression()), !dbg !5506
  %100 = inttoptr i32 %97 to i64*, !dbg !5567
  %101 = load i64, i64* %100, align 8, !dbg !5567
  store i64 %101, i64* %20, align 8, !dbg !5568
  br label %115, !dbg !5569

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5570
  %104 = add i32 %103, 7, !dbg !5570
  %105 = and i32 %104, -8, !dbg !5570
  %106 = inttoptr i32 %105 to i8*, !dbg !5570
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5570
  call void @llvm.dbg.value(metadata i8* %107, metadata !5380, metadata !DIExpression()), !dbg !5506
  %108 = inttoptr i32 %105 to i64*, !dbg !5570
  %109 = load i64, i64* %108, align 8, !dbg !5570
  store i64 %109, i64* %20, align 8, !dbg !5571
  br label %115, !dbg !5572

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5573
  call void @llvm.dbg.value(metadata i8* %111, metadata !5380, metadata !DIExpression()), !dbg !5506
  %112 = bitcast i8* %77 to i32*, !dbg !5573
  %113 = load i32, i32* %112, align 4, !dbg !5573
  %114 = sext i32 %113 to i64, !dbg !5574
  store i64 %114, i64* %20, align 8, !dbg !5575
  br label %115, !dbg !5576

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5577
  call void @llvm.dbg.value(metadata i8* %117, metadata !5380, metadata !DIExpression()), !dbg !5506
  %118 = trunc i24 %79 to i4, !dbg !5578
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5578

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5579
  %121 = ashr exact i64 %120, 56, !dbg !5579
  store i64 %121, i64* %20, align 8, !dbg !5582
  br label %177, !dbg !5583

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5584
  %124 = ashr exact i64 %123, 48, !dbg !5584
  store i64 %124, i64* %20, align 8, !dbg !5587
  br label %177, !dbg !5588

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5589

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5592
  call void @llvm.dbg.value(metadata i8* %127, metadata !5380, metadata !DIExpression()), !dbg !5506
  %128 = bitcast i8* %77 to i32*, !dbg !5592
  %129 = load i32, i32* %128, align 4, !dbg !5592
  %130 = zext i32 %129 to i64, !dbg !5592
  store i64 %130, i64* %20, align 8, !dbg !5594
  br label %157, !dbg !5595

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5596
  call void @llvm.dbg.value(metadata i8* %132, metadata !5380, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.value(metadata i8* %132, metadata !5380, metadata !DIExpression()), !dbg !5506
  %133 = bitcast i8* %77 to i32*, !dbg !5596
  %134 = load i32, i32* %133, align 4, !dbg !5596
  %135 = zext i32 %134 to i64, !dbg !5596
  store i64 %135, i64* %20, align 8, !dbg !5596
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5598
  %138 = add i32 %137, 7, !dbg !5598
  %139 = and i32 %138, -8, !dbg !5598
  %140 = inttoptr i32 %139 to i8*, !dbg !5598
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5598
  call void @llvm.dbg.value(metadata i8* %141, metadata !5380, metadata !DIExpression()), !dbg !5506
  %142 = inttoptr i32 %139 to i64*, !dbg !5598
  %143 = load i64, i64* %142, align 8, !dbg !5598
  store i64 %143, i64* %20, align 8, !dbg !5599
  br label %157, !dbg !5600

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5601
  %146 = add i32 %145, 7, !dbg !5601
  %147 = and i32 %146, -8, !dbg !5601
  %148 = inttoptr i32 %147 to i8*, !dbg !5601
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5601
  call void @llvm.dbg.value(metadata i8* %149, metadata !5380, metadata !DIExpression()), !dbg !5506
  %150 = inttoptr i32 %147 to i64*, !dbg !5601
  %151 = load i64, i64* %150, align 8, !dbg !5601
  store i64 %151, i64* %20, align 8, !dbg !5602
  br label %157, !dbg !5603

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5604
  call void @llvm.dbg.value(metadata i8* %153, metadata !5380, metadata !DIExpression()), !dbg !5506
  %154 = bitcast i8* %77 to i32*, !dbg !5604
  %155 = load i32, i32* %154, align 4, !dbg !5604
  %156 = zext i32 %155 to i64, !dbg !5605
  store i64 %156, i64* %20, align 8, !dbg !5606
  br label %157, !dbg !5607

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5608
  call void @llvm.dbg.value(metadata i8* %159, metadata !5380, metadata !DIExpression()), !dbg !5506
  %160 = trunc i24 %79 to i4, !dbg !5609
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5609

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5610
  store i64 %162, i64* %20, align 8, !dbg !5613
  br label %177, !dbg !5614

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5615
  store i64 %164, i64* %20, align 8, !dbg !5618
  br label %177, !dbg !5619

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5620
  %167 = add i32 %166, 7, !dbg !5620
  %168 = and i32 %167, -8, !dbg !5620
  %169 = inttoptr i32 %168 to i8*, !dbg !5620
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5620
  call void @llvm.dbg.value(metadata i8* %170, metadata !5380, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.value(metadata i8* %170, metadata !5380, metadata !DIExpression()), !dbg !5506
  %171 = inttoptr i32 %168 to double*, !dbg !5620
  %172 = load double, double* %171, align 8, !dbg !5620
  store double %172, double* %19, align 8, !dbg !5620
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5624
  call void @llvm.dbg.value(metadata i8* %174, metadata !5380, metadata !DIExpression()), !dbg !5506
  %175 = bitcast i8* %77 to i8**, !dbg !5624
  %176 = load i8*, i8** %175, align 4, !dbg !5624
  store i8* %176, i8** %18, align 8, !dbg !5627
  br label %177, !dbg !5628

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5520
  call void @llvm.dbg.value(metadata i8* %178, metadata !5380, metadata !DIExpression()), !dbg !5506
  %179 = and i24 %75, 3, !dbg !5629
  %180 = icmp eq i24 %179, 0, !dbg !5629
  br i1 %180, label %185, label %181, !dbg !5629

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5630
  call void @llvm.dbg.value(metadata i32 %182, metadata !5455, metadata !DIExpression()), !dbg !5631
  %183 = icmp slt i32 %182, 0, !dbg !5632
  %184 = add i32 %182, %29, !dbg !5630
  call void @llvm.dbg.value(metadata i32 undef, metadata !5386, metadata !DIExpression()), !dbg !5506
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5634
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5635

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !5636
  call void @llvm.dbg.value(metadata i32 %188, metadata !5459, metadata !DIExpression()), !dbg !5637
  %189 = icmp slt i32 %188, 0, !dbg !5638
  %190 = add i32 %29, 1, !dbg !5636
  call void @llvm.dbg.value(metadata i32 undef, metadata !5386, metadata !DIExpression()), !dbg !5506
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5640
  call void @llvm.dbg.value(metadata i8* %192, metadata !5447, metadata !DIExpression()), !dbg !5520
  %193 = icmp sgt i32 %76, -1, !dbg !5641
  br i1 %193, label %194, label %196, !dbg !5643

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !5644
  call void @llvm.dbg.value(metadata i32 %195, metadata !5462, metadata !DIExpression()), !dbg !5646
  br label %241, !dbg !5647

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !5648
  call void @llvm.dbg.value(metadata i32 %197, metadata !5462, metadata !DIExpression()), !dbg !5646
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5447, metadata !DIExpression()), !dbg !5520
  %199 = load i64, i64* %20, align 8, !dbg !5650
  %200 = trunc i64 %199 to i8, !dbg !5651
  store i8 %200, i8* %10, align 1, !dbg !5652
  call void @llvm.dbg.value(metadata i8* %23, metadata !5448, metadata !DIExpression()), !dbg !5520
  br label %245, !dbg !5653

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5654
  %203 = icmp eq i24 %202, 0, !dbg !5654
  %204 = trunc i24 %75 to i8, !dbg !5656
  %205 = shl i8 %204, 1, !dbg !5656
  %206 = and i8 %205, 32, !dbg !5656
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5656
  call void @llvm.dbg.value(metadata i8 %207, metadata !5449, metadata !DIExpression()), !dbg !5520
  %208 = load i64, i64* %20, align 8, !dbg !5657
  call void @llvm.dbg.value(metadata i64 %208, metadata !5387, metadata !DIExpression()), !dbg !5506
  %209 = icmp slt i64 %208, 0, !dbg !5658
  br i1 %209, label %210, label %212, !dbg !5660

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5449, metadata !DIExpression()), !dbg !5520
  %211 = sub nsw i64 0, %208, !dbg !5661
  store i64 %211, i64* %20, align 8, !dbg !5663
  br label %212, !dbg !5664

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5520
  call void @llvm.dbg.value(metadata i8 %213, metadata !5449, metadata !DIExpression()), !dbg !5520
  %214 = load i64, i64* %20, align 8, !dbg !5665
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5666
  call void @llvm.dbg.value(metadata i8* %215, metadata !5447, metadata !DIExpression()), !dbg !5520
  br label %216, !dbg !5667

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5668
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5669
  call void @llvm.dbg.value(metadata i8* %218, metadata !5447, metadata !DIExpression()), !dbg !5520
  call void @llvm.dbg.value(metadata i8 %217, metadata !5449, metadata !DIExpression()), !dbg !5520
  call void @llvm.dbg.label(metadata !5505), !dbg !5670
  %219 = icmp sgt i32 %76, -1, !dbg !5671
  br i1 %219, label %222, label %220, !dbg !5672

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5673
  br label %245, !dbg !5672

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5675
  %224 = sub i32 %22, %223, !dbg !5675
  call void @llvm.dbg.value(metadata i32 %224, metadata !5464, metadata !DIExpression()), !dbg !5676
  %225 = load i24, i24* %15, align 8, !dbg !5677
  %226 = and i24 %225, -65, !dbg !5677
  store i24 %226, i24* %15, align 8, !dbg !5677
  %227 = icmp ugt i32 %76, %224, !dbg !5678
  br i1 %227, label %228, label %245, !dbg !5680

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5681
  store i32 %229, i32* %16, align 4, !dbg !5683
  br label %245, !dbg !5684

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5685
  %232 = icmp eq i8* %231, null, !dbg !5687
  br i1 %232, label %245, label %233, !dbg !5688

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5689
  %235 = zext i32 %234 to i64, !dbg !5689
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5691
  call void @llvm.dbg.value(metadata i8* %236, metadata !5447, metadata !DIExpression()), !dbg !5520
  %237 = load i24, i24* %15, align 8, !dbg !5692
  %238 = or i24 %237, 1048576, !dbg !5692
  store i24 %238, i24* %15, align 8, !dbg !5692
  store i8 120, i8* %21, align 1, !dbg !5693
  br label %216, !dbg !5694

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5695
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5698
  br label %363, !dbg !5699

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5700
  call void @llvm.dbg.value(metadata i32 %242, metadata !5462, metadata !DIExpression()), !dbg !5646
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5701
  call void @llvm.dbg.value(metadata i32 -1, metadata !5446, metadata !DIExpression()), !dbg !5520
  call void @llvm.dbg.value(metadata i32 %29, metadata !5386, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.value(metadata i8* %192, metadata !5447, metadata !DIExpression()), !dbg !5520
  call void @llvm.dbg.value(metadata i8* %243, metadata !5448, metadata !DIExpression()), !dbg !5520
  call void @llvm.dbg.value(metadata i8 0, metadata !5449, metadata !DIExpression()), !dbg !5520
  %244 = icmp eq i8* %192, null, !dbg !5702
  br i1 %244, label %363, label %245, !dbg !5704, !llvm.loop !5516

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5673
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5467, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5520
  call void @llvm.dbg.value(metadata i32 0, metadata !5468, metadata !DIExpression()), !dbg !5520
  %250 = zext i8 %249 to i32, !dbg !5705
  %251 = icmp eq i8 %249, 0, !dbg !5707
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5467, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5520
  call void @llvm.dbg.value(metadata i32 undef, metadata !5467, metadata !DIExpression()), !dbg !5520
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5467, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5520
  call void @llvm.dbg.value(metadata i32 undef, metadata !5467, metadata !DIExpression()), !dbg !5520
  %252 = icmp sgt i32 %58, 0, !dbg !5708
  br i1 %252, label %253, label %302, !dbg !5709

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5673
  %255 = icmp eq i24 %254, 0, !dbg !5673
  %256 = ptrtoint i8* %248 to i32, !dbg !5710
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5467, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5520
  %257 = ptrtoint i8* %247 to i32, !dbg !5710
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5467, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5520
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5467, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5520
  %258 = xor i1 %251, true, !dbg !5711
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5467, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5520
  %259 = sext i1 %258 to i32, !dbg !5711
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5467, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5520
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5467, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5520
  %260 = lshr i24 %246, 19, !dbg !5712
  %261 = and i24 %260, 1, !dbg !5712
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5712
  %263 = zext i24 %262 to i32, !dbg !5712
  %264 = add i32 %257, %259, !dbg !5712
  %265 = add i32 %256, %263, !dbg !5712
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5467, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5520
  %266 = and i24 %246, 4194304, !dbg !5713
  %267 = icmp eq i24 %266, 0, !dbg !5713
  %268 = load i32, i32* %16, align 4, !dbg !5715
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5467, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5520
  call void @llvm.dbg.value(metadata i32 undef, metadata !5467, metadata !DIExpression()), !dbg !5520
  %269 = load i32, i32* %17, align 8, !dbg !5716
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5716
  call void @llvm.dbg.value(metadata i32 undef, metadata !5467, metadata !DIExpression()), !dbg !5520
  %271 = add i32 %264, %58, !dbg !5716
  %272 = add i32 %265, %268, !dbg !5716
  %273 = add i32 %272, %270, !dbg !5717
  %274 = sub i32 %271, %273, !dbg !5717
  call void @llvm.dbg.value(metadata i32 %274, metadata !5445, metadata !DIExpression()), !dbg !5520
  %275 = and i24 %246, 4, !dbg !5718
  %276 = icmp eq i24 %275, 0, !dbg !5718
  br i1 %276, label %277, label %302, !dbg !5719

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5469, metadata !DIExpression()), !dbg !5720
  %278 = and i24 %246, 64, !dbg !5721
  %279 = icmp eq i24 %278, 0, !dbg !5721
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5722
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5722
  %282 = select i1 %279, i32 32, i32 48, !dbg !5722
  br i1 %280, label %287, label %283, !dbg !5722

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !5723
  call void @llvm.dbg.value(metadata i32 %284, metadata !5474, metadata !DIExpression()), !dbg !5724
  %285 = icmp slt i32 %284, 0, !dbg !5725
  %286 = add i32 %29, 1, !dbg !5723
  call void @llvm.dbg.value(metadata i32 undef, metadata !5386, metadata !DIExpression()), !dbg !5506
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5520
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5510
  call void @llvm.dbg.value(metadata i32 %290, metadata !5386, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.value(metadata i8 undef, metadata !5469, metadata !DIExpression()), !dbg !5720
  call void @llvm.dbg.value(metadata i8 %288, metadata !5449, metadata !DIExpression()), !dbg !5520
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5727
  %292 = add i32 %291, -1, !dbg !5727
  br label %293, !dbg !5727

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5728
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5510
  call void @llvm.dbg.value(metadata i32 %295, metadata !5386, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.value(metadata i32 %294, metadata !5445, metadata !DIExpression()), !dbg !5520
  call void @llvm.dbg.value(metadata i32 %294, metadata !5445, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5520
  %296 = icmp sgt i32 %294, 0, !dbg !5729
  br i1 %296, label %297, label %302, !dbg !5727

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5730
  call void @llvm.dbg.value(metadata i32 %298, metadata !5445, metadata !DIExpression()), !dbg !5520
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !5731
  call void @llvm.dbg.value(metadata i32 %299, metadata !5480, metadata !DIExpression()), !dbg !5732
  %300 = icmp slt i32 %299, 0, !dbg !5733
  %301 = add i32 %295, 1, !dbg !5731
  call void @llvm.dbg.value(metadata i32 undef, metadata !5386, metadata !DIExpression()), !dbg !5506
  br i1 %300, label %361, label %293, !llvm.loop !5735

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5520
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5520
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5510
  call void @llvm.dbg.value(metadata i32 %305, metadata !5386, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.value(metadata i32 %304, metadata !5445, metadata !DIExpression()), !dbg !5520
  call void @llvm.dbg.value(metadata i8 %303, metadata !5449, metadata !DIExpression()), !dbg !5520
  %306 = icmp eq i8 %303, 0, !dbg !5737
  br i1 %306, label %312, label %307, !dbg !5738

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5739
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !5740
  call void @llvm.dbg.value(metadata i32 %309, metadata !5483, metadata !DIExpression()), !dbg !5741
  %310 = icmp slt i32 %309, 0, !dbg !5742
  %311 = add i32 %305, 1, !dbg !5740
  call void @llvm.dbg.value(metadata i32 undef, metadata !5386, metadata !DIExpression()), !dbg !5506
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5510
  call void @llvm.dbg.value(metadata i32 %313, metadata !5386, metadata !DIExpression()), !dbg !5506
  %314 = lshr i24 %246, 20, !dbg !5744
  %315 = lshr i24 %246, 19, !dbg !5745
  %316 = or i24 %314, %315, !dbg !5746
  %317 = and i24 %316, 1, !dbg !5746
  %318 = icmp eq i24 %317, 0, !dbg !5746
  br i1 %318, label %323, label %319, !dbg !5747

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5748
  call void @llvm.dbg.value(metadata i32 %320, metadata !5487, metadata !DIExpression()), !dbg !5749
  %321 = icmp slt i32 %320, 0, !dbg !5750
  %322 = add i32 %313, 1, !dbg !5748
  call void @llvm.dbg.value(metadata i32 undef, metadata !5386, metadata !DIExpression()), !dbg !5506
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5510
  call void @llvm.dbg.value(metadata i32 %324, metadata !5386, metadata !DIExpression()), !dbg !5506
  %325 = and i24 %246, 1048576, !dbg !5752
  %326 = icmp eq i24 %325, 0, !dbg !5752
  br i1 %326, label %333, label %327, !dbg !5753

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5754
  %329 = zext i8 %328 to i32, !dbg !5754
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !5754
  call void @llvm.dbg.value(metadata i32 %330, metadata !5493, metadata !DIExpression()), !dbg !5755
  %331 = icmp slt i32 %330, 0, !dbg !5756
  %332 = add i32 %324, 1, !dbg !5754
  call void @llvm.dbg.value(metadata i32 undef, metadata !5386, metadata !DIExpression()), !dbg !5506
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5510
  call void @llvm.dbg.value(metadata i32 %334, metadata !5386, metadata !DIExpression()), !dbg !5506
  %335 = load i32, i32* %16, align 4, !dbg !5758
  call void @llvm.dbg.value(metadata i32 %335, metadata !5468, metadata !DIExpression()), !dbg !5520
  br label %336, !dbg !5759

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5760
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5510
  call void @llvm.dbg.value(metadata i32 %338, metadata !5386, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.value(metadata i32 %337, metadata !5468, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5520
  %339 = icmp sgt i32 %337, 0, !dbg !5761
  br i1 %339, label %340, label %345, !dbg !5759

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5762
  call void @llvm.dbg.value(metadata i32 %341, metadata !5468, metadata !DIExpression()), !dbg !5520
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5763
  call void @llvm.dbg.value(metadata i32 %342, metadata !5497, metadata !DIExpression()), !dbg !5764
  %343 = icmp slt i32 %342, 0, !dbg !5765
  %344 = add i32 %338, 1, !dbg !5763
  call void @llvm.dbg.value(metadata i32 undef, metadata !5386, metadata !DIExpression()), !dbg !5506
  br i1 %343, label %361, label %336, !llvm.loop !5767

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5769
  call void @llvm.dbg.value(metadata i32 %346, metadata !5500, metadata !DIExpression()), !dbg !5770
  %347 = icmp slt i32 %346, 0, !dbg !5771
  call void @llvm.dbg.value(metadata i32 undef, metadata !5386, metadata !DIExpression()), !dbg !5506
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5769
  call void @llvm.dbg.value(metadata i32 %349, metadata !5386, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.value(metadata i32 %304, metadata !5445, metadata !DIExpression()), !dbg !5520
  %350 = icmp sgt i32 %304, 0, !dbg !5773
  br i1 %350, label %351, label %363, !dbg !5774

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5774
  %353 = add i32 %352, %338, !dbg !5774
  br label %354, !dbg !5774

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5386, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.value(metadata i32 %355, metadata !5445, metadata !DIExpression()), !dbg !5520
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !5775
  call void @llvm.dbg.value(metadata i32 %356, metadata !5502, metadata !DIExpression()), !dbg !5776
  %357 = icmp slt i32 %356, 0, !dbg !5777
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5779
  call void @llvm.dbg.value(metadata i32 undef, metadata !5386, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5506
  call void @llvm.dbg.value(metadata i32 %359, metadata !5445, metadata !DIExpression()), !dbg !5520
  %360 = icmp sgt i32 %355, 1, !dbg !5773
  br i1 %360, label %354, label %363, !dbg !5774, !llvm.loop !5780

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5386, metadata !DIExpression()), !dbg !5506
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5517
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5510
  call void @llvm.dbg.value(metadata i32 %364, metadata !5386, metadata !DIExpression()), !dbg !5506
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5517
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5506
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5782
  ret i32 %366, !dbg !5782
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5783 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5787, metadata !DIExpression()), !dbg !5789
  call void @llvm.dbg.value(metadata i8* %1, metadata !5788, metadata !DIExpression()), !dbg !5789
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5790
  store i24 0, i24* %3, align 4, !dbg !5790
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5790
  store i8 0, i8* %4, align 1, !dbg !5790
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5790
  store i32 0, i32* %5, align 4, !dbg !5790
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5790
  store i32 0, i32* %6, align 4, !dbg !5790
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5791
  call void @llvm.dbg.value(metadata i8* %7, metadata !5788, metadata !DIExpression()), !dbg !5789
  %8 = load i8, i8* %7, align 1, !dbg !5792
  %9 = icmp eq i8 %8, 37, !dbg !5794
  br i1 %9, label %10, label %12, !dbg !5795

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5796
  call void @llvm.dbg.value(metadata i8* %11, metadata !5788, metadata !DIExpression()), !dbg !5789
  store i8 37, i8* %4, align 1, !dbg !5798
  br label %18, !dbg !5799

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5800
  call void @llvm.dbg.value(metadata i8* %13, metadata !5788, metadata !DIExpression()), !dbg !5789
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5801
  call void @llvm.dbg.value(metadata i8* %14, metadata !5788, metadata !DIExpression()), !dbg !5789
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5802
  call void @llvm.dbg.value(metadata i8* %15, metadata !5788, metadata !DIExpression()), !dbg !5789
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5803
  call void @llvm.dbg.value(metadata i8* %16, metadata !5788, metadata !DIExpression()), !dbg !5789
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5804
  call void @llvm.dbg.value(metadata i8* %17, metadata !5788, metadata !DIExpression()), !dbg !5789
  br label %18, !dbg !5805

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5789
  ret i8* %19, !dbg !5806
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5807 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5811, metadata !DIExpression()), !dbg !5818
  call void @llvm.dbg.value(metadata i8* %1, metadata !5812, metadata !DIExpression()), !dbg !5818
  call void @llvm.dbg.value(metadata i8* %2, metadata !5813, metadata !DIExpression()), !dbg !5818
  call void @llvm.dbg.value(metadata i8* %3, metadata !5814, metadata !DIExpression()), !dbg !5818
  call void @llvm.dbg.value(metadata i32 0, metadata !5815, metadata !DIExpression()), !dbg !5818
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5819

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5820
  call void @llvm.dbg.value(metadata i32 %9, metadata !5815, metadata !DIExpression()), !dbg !5818
  call void @llvm.dbg.value(metadata i8* %8, metadata !5813, metadata !DIExpression()), !dbg !5818
  %10 = icmp ult i8* %8, %3, !dbg !5821
  br i1 %10, label %11, label %13, !dbg !5822

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5823
  br label %17, !dbg !5822

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5824

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5825
  %16 = icmp eq i8 %15, 0, !dbg !5824
  br i1 %16, label %24, label %17, !dbg !5819

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5823
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5826
  call void @llvm.dbg.value(metadata i8* %19, metadata !5813, metadata !DIExpression()), !dbg !5818
  %20 = zext i8 %18 to i32, !dbg !5827
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !5828
  call void @llvm.dbg.value(metadata i32 %21, metadata !5816, metadata !DIExpression()), !dbg !5829
  %22 = icmp slt i32 %21, 0, !dbg !5830
  %23 = add i32 %9, 1, !dbg !5832
  call void @llvm.dbg.value(metadata i32 undef, metadata !5815, metadata !DIExpression()), !dbg !5818
  br i1 %22, label %24, label %7, !llvm.loop !5833

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5818
  ret i32 %25, !dbg !5835
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5836 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5840, metadata !DIExpression()), !dbg !5850
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5841, metadata !DIExpression()), !dbg !5850
  call void @llvm.dbg.value(metadata i8* %2, metadata !5842, metadata !DIExpression()), !dbg !5850
  call void @llvm.dbg.value(metadata i8* %3, metadata !5843, metadata !DIExpression()), !dbg !5850
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5851
  %6 = load i8, i8* %5, align 1, !dbg !5851
  %7 = zext i8 %6 to i32, !dbg !5852
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5853
  %9 = icmp eq i32 %8, 0, !dbg !5853
  call void @llvm.dbg.value(metadata i1 %9, metadata !5844, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5850
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5854
  call void @llvm.dbg.value(metadata i32 %10, metadata !5845, metadata !DIExpression()), !dbg !5850
  %11 = ptrtoint i8* %3 to i32, !dbg !5855
  %12 = ptrtoint i8* %2 to i32, !dbg !5855
  %13 = sub i32 %11, %12, !dbg !5855
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5856
  call void @llvm.dbg.value(metadata i8* %14, metadata !5847, metadata !DIExpression()), !dbg !5850
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5857

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5850
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5840, metadata !DIExpression()), !dbg !5850
  call void @llvm.dbg.value(metadata i8* %18, metadata !5847, metadata !DIExpression()), !dbg !5850
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5858
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5859
  call void @llvm.dbg.value(metadata i32 %25, metadata !5848, metadata !DIExpression()), !dbg !5860
  %26 = icmp ult i32 %25, 10, !dbg !5861
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5862
  %28 = add i32 %27, %25, !dbg !5860
  %29 = trunc i32 %28 to i8, !dbg !5862
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5863
  call void @llvm.dbg.value(metadata i8* %30, metadata !5847, metadata !DIExpression()), !dbg !5850
  store i8 %29, i8* %30, align 1, !dbg !5864
  call void @llvm.dbg.value(metadata i64 %22, metadata !5840, metadata !DIExpression()), !dbg !5850
  %31 = icmp uge i64 %19, %15, !dbg !5865
  %32 = icmp ugt i8* %30, %2, !dbg !5866
  %33 = and i1 %31, %32, !dbg !5866
  br i1 %33, label %17, label %34, !dbg !5867, !llvm.loop !5868

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5870
  %36 = load i24, i24* %35, align 4, !dbg !5870
  %37 = and i24 %36, 32, !dbg !5870
  %38 = icmp eq i24 %37, 0, !dbg !5870
  br i1 %38, label %44, label %39, !dbg !5872

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5873

40:                                               ; preds = %39
  br label %41, !dbg !5875

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5879
  store i24 %43, i24* %35, align 4, !dbg !5879
  br label %44, !dbg !5880

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !5881 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5887, metadata !DIExpression()), !dbg !5890
  call void @llvm.dbg.value(metadata i8* %1, metadata !5888, metadata !DIExpression()), !dbg !5890
  call void @llvm.dbg.value(metadata i32 %2, metadata !5889, metadata !DIExpression()), !dbg !5890
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5891
  %5 = load i24, i24* %4, align 4, !dbg !5891
  %6 = lshr i24 %5, 11, !dbg !5891
  %7 = and i24 %6, 15, !dbg !5891
  %8 = zext i24 %7 to i32, !dbg !5891
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5892

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5893
  store i32 %2, i32* %10, align 4, !dbg !5895
  br label %28, !dbg !5896

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5897
  store i8 %12, i8* %1, align 1, !dbg !5898
  br label %28, !dbg !5899

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5900
  %15 = bitcast i8* %1 to i16*, !dbg !5901
  store i16 %14, i16* %15, align 2, !dbg !5902
  br label %28, !dbg !5903

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5904
  store i32 %2, i32* %17, align 4, !dbg !5905
  br label %28, !dbg !5906

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5907
  %20 = bitcast i8* %1 to i64*, !dbg !5908
  store i64 %19, i64* %20, align 8, !dbg !5909
  br label %28, !dbg !5910

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5911
  %23 = bitcast i8* %1 to i64*, !dbg !5912
  store i64 %22, i64* %23, align 8, !dbg !5913
  br label %28, !dbg !5914

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5915
  store i32 %2, i32* %25, align 4, !dbg !5916
  br label %28, !dbg !5917

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5918
  store i32 %2, i32* %27, align 4, !dbg !5919
  br label %28, !dbg !5920

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5921
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #3 !dbg !5922 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5925, metadata !DIExpression()), !dbg !5926
  %2 = add i32 %0, -65, !dbg !5927
  %3 = icmp ult i32 %2, 26, !dbg !5928
  %4 = zext i1 %3 to i32, !dbg !5928
  ret i32 %4, !dbg !5929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #3 !dbg !5930 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5934, metadata !DIExpression()), !dbg !5935
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5936

2:                                                ; preds = %1
  br label %4, !dbg !5937

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5939

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5940
  ret i32 %5, !dbg !5941
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5942 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5944, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata i8* %1, metadata !5945, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata i8 1, metadata !5946, metadata !DIExpression()), !dbg !5947
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5948

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5946, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata i8* %5, metadata !5945, metadata !DIExpression()), !dbg !5947
  %6 = load i8, i8* %5, align 1, !dbg !5949
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5951

7:                                                ; preds = %4
  br label %11, !dbg !5952

8:                                                ; preds = %4
  br label %11, !dbg !5954

9:                                                ; preds = %4
  br label %11, !dbg !5955

10:                                               ; preds = %4
  br label %11, !dbg !5956

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5957
  %14 = or i24 %13, %12, !dbg !5957
  store i24 %14, i24* %3, align 4, !dbg !5957
  call void @llvm.dbg.value(metadata i8 poison, metadata !5946, metadata !DIExpression()), !dbg !5947
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5945, metadata !DIExpression()), !dbg !5947
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5946, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata i8* %15, metadata !5945, metadata !DIExpression()), !dbg !5947
  %17 = load i24, i24* %3, align 4, !dbg !5958
  %18 = and i24 %17, 68, !dbg !5960
  %19 = icmp eq i24 %18, 68, !dbg !5960
  br i1 %19, label %20, label %22, !dbg !5960

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5961
  store i24 %21, i24* %3, align 4, !dbg !5961
  br label %22, !dbg !5963

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5964
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5965 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5967, metadata !DIExpression()), !dbg !5971
  call void @llvm.dbg.value(metadata i8* %1, metadata !5968, metadata !DIExpression()), !dbg !5971
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5972
  %5 = load i24, i24* %4, align 4, !dbg !5973
  %6 = or i24 %5, 128, !dbg !5973
  store i24 %6, i24* %4, align 4, !dbg !5973
  call void @llvm.dbg.value(metadata i8* %1, metadata !5968, metadata !DIExpression()), !dbg !5971
  %7 = load i8, i8* %1, align 1, !dbg !5974
  %8 = icmp eq i8 %7, 42, !dbg !5976
  br i1 %8, label %9, label %12, !dbg !5977

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5978
  store i24 %10, i24* %4, align 4, !dbg !5978
  call void @llvm.dbg.value(metadata i8* %1, metadata !5968, metadata !DIExpression()), !dbg !5971
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5980
  call void @llvm.dbg.value(metadata i8* %11, metadata !5968, metadata !DIExpression()), !dbg !5971
  store i8* %11, i8** %3, align 4, !dbg !5980
  br label %29, !dbg !5981

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5969, metadata !DIExpression()), !dbg !5971
  call void @llvm.dbg.value(metadata i8** %3, metadata !5968, metadata !DIExpression(DW_OP_deref)), !dbg !5971
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5982
  call void @llvm.dbg.value(metadata i32 %13, metadata !5970, metadata !DIExpression()), !dbg !5971
  %14 = load i8*, i8** %3, align 4, !dbg !5983
  call void @llvm.dbg.value(metadata i8* %14, metadata !5968, metadata !DIExpression()), !dbg !5971
  %15 = icmp eq i8* %14, %1, !dbg !5985
  br i1 %15, label %29, label %16, !dbg !5986

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5987
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5989
  store i32 %13, i32* %18, align 4, !dbg !5990
  %19 = lshr i32 %13, 31, !dbg !5991
  %20 = lshr i24 %17, 1, !dbg !5992
  %21 = and i24 %20, 1, !dbg !5992
  %22 = zext i24 %21 to i32, !dbg !5992
  %23 = or i32 %19, %22, !dbg !5992
  %24 = trunc i32 %23 to i24, !dbg !5992
  %25 = shl nuw nsw i24 %24, 1, !dbg !5992
  %26 = and i24 %17, -131, !dbg !5992
  %27 = or i24 %26, 128, !dbg !5992
  %28 = or i24 %25, %27, !dbg !5992
  store i24 %28, i24* %4, align 4, !dbg !5992
  br label %29, !dbg !5993

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5971
  ret i8* %30, !dbg !5994
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5995 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5997, metadata !DIExpression()), !dbg !6000
  call void @llvm.dbg.value(metadata i8* %1, metadata !5998, metadata !DIExpression()), !dbg !6000
  %4 = load i8, i8* %1, align 1, !dbg !6001
  %5 = icmp eq i8 %4, 46, !dbg !6002
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6003
  %7 = load i24, i24* %6, align 4, !dbg !6004
  %8 = select i1 %5, i24 512, i24 0, !dbg !6004
  %9 = and i24 %7, -513, !dbg !6004
  %10 = or i24 %9, %8, !dbg !6004
  store i24 %10, i24* %6, align 4, !dbg !6004
  br i1 %5, label %11, label %32, !dbg !6005

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5998, metadata !DIExpression()), !dbg !6000
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6006
  call void @llvm.dbg.value(metadata i8* %12, metadata !5998, metadata !DIExpression()), !dbg !6000
  store i8* %12, i8** %3, align 4, !dbg !6006
  %13 = load i8, i8* %12, align 1, !dbg !6007
  %14 = icmp eq i8 %13, 42, !dbg !6009
  br i1 %14, label %15, label %18, !dbg !6010

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6011
  store i24 %16, i24* %6, align 4, !dbg !6011
  call void @llvm.dbg.value(metadata i8* %12, metadata !5998, metadata !DIExpression()), !dbg !6000
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6013
  call void @llvm.dbg.value(metadata i8* %17, metadata !5998, metadata !DIExpression()), !dbg !6000
  store i8* %17, i8** %3, align 4, !dbg !6013
  br label %32, !dbg !6014

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5998, metadata !DIExpression(DW_OP_deref)), !dbg !6000
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6015
  call void @llvm.dbg.value(metadata i32 %19, metadata !5999, metadata !DIExpression()), !dbg !6000
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6016
  store i32 %19, i32* %20, align 4, !dbg !6017
  %21 = lshr i32 %19, 31, !dbg !6018
  %22 = load i24, i24* %6, align 4, !dbg !6019
  %23 = lshr i24 %22, 1, !dbg !6019
  %24 = and i24 %23, 1, !dbg !6019
  %25 = zext i24 %24 to i32, !dbg !6019
  %26 = or i32 %21, %25, !dbg !6019
  %27 = trunc i32 %26 to i24, !dbg !6019
  %28 = shl nuw nsw i24 %27, 1, !dbg !6019
  %29 = and i24 %22, -3, !dbg !6019
  %30 = or i24 %28, %29, !dbg !6019
  store i24 %30, i24* %6, align 4, !dbg !6019
  %31 = load i8*, i8** %3, align 4, !dbg !6020
  call void @llvm.dbg.value(metadata i8* %31, metadata !5998, metadata !DIExpression()), !dbg !6000
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6000
  ret i8* %33, !dbg !6021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6022 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6024, metadata !DIExpression()), !dbg !6026
  call void @llvm.dbg.value(metadata i8* %1, metadata !6025, metadata !DIExpression()), !dbg !6026
  %3 = load i8, i8* %1, align 1, !dbg !6027
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6028

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6029
  call void @llvm.dbg.value(metadata i8* %5, metadata !6025, metadata !DIExpression()), !dbg !6026
  %6 = load i8, i8* %5, align 1, !dbg !6032
  %7 = icmp eq i8 %6, 104, !dbg !6033
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6034
  %9 = load i24, i24* %8, align 4, !dbg !6034
  %10 = and i24 %9, -30721, !dbg !6034
  br i1 %7, label %11, label %14, !dbg !6035

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6036
  store i24 %12, i24* %8, align 4, !dbg !6036
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6038
  call void @llvm.dbg.value(metadata i8* %13, metadata !6025, metadata !DIExpression()), !dbg !6026
  br label %56, !dbg !6039

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6040
  store i24 %15, i24* %8, align 4, !dbg !6040
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6042
  call void @llvm.dbg.value(metadata i8* %17, metadata !6025, metadata !DIExpression()), !dbg !6026
  %18 = load i8, i8* %17, align 1, !dbg !6044
  %19 = icmp eq i8 %18, 108, !dbg !6045
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6046
  %21 = load i24, i24* %20, align 4, !dbg !6046
  %22 = and i24 %21, -30721, !dbg !6046
  br i1 %19, label %23, label %26, !dbg !6047

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6048
  store i24 %24, i24* %20, align 4, !dbg !6048
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6050
  call void @llvm.dbg.value(metadata i8* %25, metadata !6025, metadata !DIExpression()), !dbg !6026
  br label %56, !dbg !6051

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6052
  store i24 %27, i24* %20, align 4, !dbg !6052
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6054
  %30 = load i24, i24* %29, align 4, !dbg !6055
  %31 = and i24 %30, -30721, !dbg !6055
  %32 = or i24 %31, 10240, !dbg !6055
  store i24 %32, i24* %29, align 4, !dbg !6055
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6056
  call void @llvm.dbg.value(metadata i8* %33, metadata !6025, metadata !DIExpression()), !dbg !6026
  br label %56, !dbg !6057

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6058
  %36 = load i24, i24* %35, align 4, !dbg !6059
  %37 = and i24 %36, -30721, !dbg !6059
  %38 = or i24 %37, 12288, !dbg !6059
  store i24 %38, i24* %35, align 4, !dbg !6059
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6060
  call void @llvm.dbg.value(metadata i8* %39, metadata !6025, metadata !DIExpression()), !dbg !6026
  br label %56, !dbg !6061

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6062
  %42 = load i24, i24* %41, align 4, !dbg !6063
  %43 = and i24 %42, -30721, !dbg !6063
  %44 = or i24 %43, 14336, !dbg !6063
  store i24 %44, i24* %41, align 4, !dbg !6063
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6064
  call void @llvm.dbg.value(metadata i8* %45, metadata !6025, metadata !DIExpression()), !dbg !6026
  br label %56, !dbg !6065

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6066
  %48 = load i24, i24* %47, align 4, !dbg !6067
  %49 = and i24 %48, -30723, !dbg !6067
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6068
  call void @llvm.dbg.value(metadata i8* %50, metadata !6025, metadata !DIExpression()), !dbg !6026
  %51 = or i24 %49, 16386, !dbg !6069
  store i24 %51, i24* %47, align 4, !dbg !6069
  br label %56, !dbg !6070

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6071
  %54 = load i24, i24* %53, align 4, !dbg !6072
  %55 = and i24 %54, -30721, !dbg !6072
  store i24 %55, i24* %53, align 4, !dbg !6072
  br label %56, !dbg !6073

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6025, metadata !DIExpression()), !dbg !6026
  ret i8* %57, !dbg !6074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6075 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6077, metadata !DIExpression()), !dbg !6082
  call void @llvm.dbg.value(metadata i8* %1, metadata !6078, metadata !DIExpression()), !dbg !6082
  call void @llvm.dbg.value(metadata i8 0, metadata !6079, metadata !DIExpression()), !dbg !6082
  call void @llvm.dbg.value(metadata i8* %1, metadata !6078, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6082
  %3 = load i8, i8* %1, align 1, !dbg !6083
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6084
  store i8 %3, i8* %4, align 1, !dbg !6085
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6086

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6087

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6088
  %9 = load i24, i24* %8, align 4, !dbg !6088
  %10 = and i24 %9, -458753, !dbg !6088
  %11 = or i24 %10, %7, !dbg !6088
  call void @llvm.dbg.label(metadata !6080), !dbg !6089
  %12 = and i24 %9, 30720, !dbg !6090
  %13 = icmp eq i24 %12, 16384, !dbg !6090
  %14 = zext i1 %13 to i24, !dbg !6092
  %15 = or i24 %11, %14, !dbg !6092
  %16 = icmp eq i8 %3, 99, !dbg !6093
  br i1 %16, label %17, label %43, !dbg !6095

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6096
  %19 = icmp ne i24 %18, 0, !dbg !6096
  call void @llvm.dbg.value(metadata i1 %19, metadata !6079, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6082
  br label %43, !dbg !6098

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6099
  %22 = load i24, i24* %21, align 4, !dbg !6100
  %23 = and i24 %22, -458753, !dbg !6100
  %24 = or i24 %23, 262144, !dbg !6100
  call void @llvm.dbg.value(metadata i8 1, metadata !6079, metadata !DIExpression()), !dbg !6082
  br label %43, !dbg !6101

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6104
  %27 = load i24, i24* %26, align 4, !dbg !6105
  %28 = and i24 %27, -458753, !dbg !6105
  %29 = or i24 %28, 196608, !dbg !6105
  %30 = and i24 %27, 30720, !dbg !6106
  %31 = icmp eq i24 %30, 16384, !dbg !6106
  br label %43, !dbg !6108

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6109
  %34 = load i24, i24* %33, align 4, !dbg !6110
  %35 = and i24 %34, -458753, !dbg !6110
  %36 = or i24 %35, 196608, !dbg !6110
  %37 = and i24 %34, 30720, !dbg !6111
  %38 = icmp ne i24 %37, 0, !dbg !6111
  br label %43, !dbg !6113

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6114
  %41 = load i24, i24* %40, align 4, !dbg !6115
  %42 = or i24 %41, 1, !dbg !6115
  br label %43, !dbg !6116

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6117
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6118
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6119
  call void @llvm.dbg.value(metadata i8* %48, metadata !6078, metadata !DIExpression()), !dbg !6082
  call void @llvm.dbg.value(metadata i8 poison, metadata !6079, metadata !DIExpression()), !dbg !6082
  %49 = lshr i24 %44, 1, !dbg !6117
  %50 = and i24 %49, 1, !dbg !6117
  %51 = zext i24 %50 to i32, !dbg !6117
  %52 = or i32 %51, %47, !dbg !6117
  %53 = trunc i32 %52 to i24, !dbg !6117
  %54 = shl nuw nsw i24 %53, 1, !dbg !6117
  %55 = and i24 %44, -3, !dbg !6117
  %56 = or i24 %54, %55, !dbg !6117
  store i24 %56, i24* %46, align 4, !dbg !6117
  ret i8* %48, !dbg !6120
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !6121 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6125, metadata !DIExpression()), !dbg !6128
  %2 = load i8*, i8** %0, align 4, !dbg !6129
  call void @llvm.dbg.value(metadata i8* %2, metadata !6126, metadata !DIExpression()), !dbg !6128
  call void @llvm.dbg.value(metadata i32 0, metadata !6127, metadata !DIExpression()), !dbg !6128
  %3 = load i8, i8* %2, align 1, !dbg !6130
  %4 = zext i8 %3 to i32, !dbg !6131
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !6132
  %6 = icmp eq i32 %5, 0, !dbg !6133
  br i1 %6, label %19, label %7, !dbg !6133

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6127, metadata !DIExpression()), !dbg !6128
  call void @llvm.dbg.value(metadata i8* %10, metadata !6126, metadata !DIExpression()), !dbg !6128
  %11 = mul i32 %9, 10, !dbg !6134
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6136
  call void @llvm.dbg.value(metadata i8* %12, metadata !6126, metadata !DIExpression()), !dbg !6128
  %13 = add i32 %11, -48, !dbg !6137
  %14 = add i32 %13, %8, !dbg !6138
  call void @llvm.dbg.value(metadata i32 %14, metadata !6127, metadata !DIExpression()), !dbg !6128
  %15 = load i8, i8* %12, align 1, !dbg !6130
  %16 = zext i8 %15 to i32, !dbg !6131
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !6132
  %18 = icmp eq i32 %17, 0, !dbg !6133
  br i1 %18, label %19, label %7, !dbg !6133, !llvm.loop !6139

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6128
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6128
  store i8* %20, i8** %0, align 4, !dbg !6141
  ret i32 %21, !dbg !6142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #3 !dbg !6143 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6145, metadata !DIExpression()), !dbg !6146
  %2 = add i32 %0, -48, !dbg !6147
  %3 = icmp ult i32 %2, 10, !dbg !6148
  %4 = zext i1 %3 to i32, !dbg !6148
  ret i32 %4, !dbg !6149
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6150 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !6152, !srcloc !6153
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !6154, !srcloc !6155
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !6156, !srcloc !6157
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !6158, !srcloc !6159
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !6160, !srcloc !6161
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,86\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !6162, !srcloc !6163
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !6164, !srcloc !6165
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !6166, !srcloc !6167
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !6168, !srcloc !6169
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !6170, !srcloc !6171
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !6172, !srcloc !6173
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !6174, !srcloc !6175
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !6176, !srcloc !6177
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !6178, !srcloc !6179
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !6180, !srcloc !6181
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !6182, !srcloc !6183
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !6184, !srcloc !6185
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #25, !dbg !6186, !srcloc !6187
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !6188, !srcloc !6189
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !6190, !srcloc !6191
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !6192, !srcloc !6193
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT\0A\09.equ\09CONFIG_TINYCRYPT,1\0A\09.type\09CONFIG_TINYCRYPT,%object", ""() #25, !dbg !6194, !srcloc !6195
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !6196, !srcloc !6197
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !6198, !srcloc !6199
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !6200, !srcloc !6201
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !6202, !srcloc !6203
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !6204, !srcloc !6205
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !6206, !srcloc !6207
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !6208, !srcloc !6209
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !6210, !srcloc !6211
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !6212, !srcloc !6213
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #25, !dbg !6214, !srcloc !6215
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !6216, !srcloc !6217
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !6218, !srcloc !6219
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6220, !srcloc !6221
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !6222, !srcloc !6223
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6224, !srcloc !6225
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !6226, !srcloc !6227
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !6228, !srcloc !6229
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6230, !srcloc !6231
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !6232, !srcloc !6233
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !6234, !srcloc !6235
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !6236, !srcloc !6237
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !6238, !srcloc !6239
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !6240, !srcloc !6241
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !6242, !srcloc !6243
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6244, !srcloc !6245
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !6246, !srcloc !6247
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #25, !dbg !6248, !srcloc !6249
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !6250, !srcloc !6251
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !6252, !srcloc !6253
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !6254, !srcloc !6255
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !6256, !srcloc !6257
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !6258, !srcloc !6259
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #25, !dbg !6260, !srcloc !6261
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #25, !dbg !6262, !srcloc !6263
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !6264, !srcloc !6265
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !6266, !srcloc !6267
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !6268, !srcloc !6269
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !6270, !srcloc !6271
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !6272, !srcloc !6273
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !6274, !srcloc !6275
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !6276, !srcloc !6277
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !6278, !srcloc !6279
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !6280, !srcloc !6281
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !6282, !srcloc !6283
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !6284, !srcloc !6285
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !6286, !srcloc !6287
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !6288, !srcloc !6289
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !6290, !srcloc !6291
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !6292, !srcloc !6293
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !6294, !srcloc !6295
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !6296, !srcloc !6297
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !6298, !srcloc !6299
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !6300, !srcloc !6301
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !6302, !srcloc !6303
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !6304, !srcloc !6305
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !6306, !srcloc !6307
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !6308, !srcloc !6309
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !6310, !srcloc !6311
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !6312, !srcloc !6313
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !6314, !srcloc !6315
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !6316, !srcloc !6317
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !6318, !srcloc !6319
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES\0A\09.equ\09CONFIG_TINYCRYPT_AES,1\0A\09.type\09CONFIG_TINYCRYPT_AES,%object", ""() #25, !dbg !6320, !srcloc !6321
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CBC\0A\09.equ\09CONFIG_TINYCRYPT_AES_CBC,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CBC,%object", ""() #25, !dbg !6322, !srcloc !6323
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CTR\0A\09.equ\09CONFIG_TINYCRYPT_AES_CTR,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CTR,%object", ""() #25, !dbg !6324, !srcloc !6325
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CCM\0A\09.equ\09CONFIG_TINYCRYPT_AES_CCM,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CCM,%object", ""() #25, !dbg !6326, !srcloc !6327
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CMAC\0A\09.equ\09CONFIG_TINYCRYPT_AES_CMAC,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CMAC,%object", ""() #25, !dbg !6328, !srcloc !6329
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !6330, !srcloc !6331
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_NEONKEY\0A\09.equ\09CONFIG_BOARD_96B_NEONKEY,1\0A\09.type\09CONFIG_BOARD_96B_NEONKEY,%object", ""() #25, !dbg !6332, !srcloc !6333
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !6334, !srcloc !6335
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !6336, !srcloc !6337
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !6338, !srcloc !6339
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !6340, !srcloc !6341
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !6342, !srcloc !6343
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F411XE\0A\09.equ\09CONFIG_SOC_STM32F411XE,1\0A\09.type\09CONFIG_SOC_STM32F411XE,%object", ""() #25, !dbg !6344, !srcloc !6345
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6346, !srcloc !6347
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #25, !dbg !6348, !srcloc !6349
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !6350, !srcloc !6351
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !6352, !srcloc !6353
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !6354, !srcloc !6355
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !6356, !srcloc !6357
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !6358, !srcloc !6359
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !6360, !srcloc !6361
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !6362, !srcloc !6363
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !6364, !srcloc !6365
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !6366, !srcloc !6367
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !6368, !srcloc !6369
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !6370, !srcloc !6371
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !6372, !srcloc !6373
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !6374, !srcloc !6375
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !6376, !srcloc !6377
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !6378, !srcloc !6379
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !6380, !srcloc !6381
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !6382, !srcloc !6383
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !6384, !srcloc !6385
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !6386, !srcloc !6387
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !6388, !srcloc !6389
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !6390, !srcloc !6391
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !6392, !srcloc !6393
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !6394, !srcloc !6395
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !6396, !srcloc !6397
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !6398, !srcloc !6399
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !6400, !srcloc !6401
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !6402, !srcloc !6403
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !6404, !srcloc !6405
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #25, !dbg !6406, !srcloc !6407
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #25, !dbg !6408, !srcloc !6409
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !6410, !srcloc !6411
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !6412, !srcloc !6413
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !6414, !srcloc !6415
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !6416, !srcloc !6417
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !6418, !srcloc !6419
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !6420, !srcloc !6421
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !6422, !srcloc !6423
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !6424, !srcloc !6425
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !6426, !srcloc !6427
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !6428, !srcloc !6429
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !6430, !srcloc !6431
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !6432, !srcloc !6433
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !6434, !srcloc !6435
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !6436, !srcloc !6437
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !6438, !srcloc !6439
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !6440, !srcloc !6441
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !6442, !srcloc !6443
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !6444, !srcloc !6445
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !6446, !srcloc !6447
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !6448, !srcloc !6449
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !6450, !srcloc !6451
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !6452, !srcloc !6453
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !6454, !srcloc !6455
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !6456, !srcloc !6457
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6458, !srcloc !6459
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !6460, !srcloc !6461
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !6462, !srcloc !6463
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !6464, !srcloc !6465
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !6466, !srcloc !6467
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !6468, !srcloc !6469
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !6470, !srcloc !6471
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #25, !dbg !6472, !srcloc !6473
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #25, !dbg !6474, !srcloc !6475
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !6476, !srcloc !6477
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !6478, !srcloc !6479
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !6480, !srcloc !6481
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6482, !srcloc !6483
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #25, !dbg !6484, !srcloc !6485
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !6486, !srcloc !6487
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !6488, !srcloc !6489
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !6490, !srcloc !6491
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !6492, !srcloc !6493
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !6494, !srcloc !6495
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !6496, !srcloc !6497
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !6498, !srcloc !6499
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !6500, !srcloc !6501
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !6502, !srcloc !6503
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !6504, !srcloc !6505
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !6506, !srcloc !6507
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !6508, !srcloc !6509
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !6510, !srcloc !6511
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !6512, !srcloc !6513
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !6514, !srcloc !6515
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !6516, !srcloc !6517
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !6518, !srcloc !6519
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !6520, !srcloc !6521
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !6522, !srcloc !6523
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !6524, !srcloc !6525
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !6526, !srcloc !6527
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !6528, !srcloc !6529
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !6530, !srcloc !6531
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !6532, !srcloc !6533
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !6534, !srcloc !6535
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !6536, !srcloc !6537
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !6538, !srcloc !6539
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !6540, !srcloc !6541
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !6542, !srcloc !6543
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !6544, !srcloc !6545
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !6546, !srcloc !6547
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !6548, !srcloc !6549
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !6550, !srcloc !6551
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !6552, !srcloc !6553
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !6554, !srcloc !6555
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !6556, !srcloc !6557
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6558, !srcloc !6559
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !6560, !srcloc !6561
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !6562, !srcloc !6563
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !6564, !srcloc !6565
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !6566, !srcloc !6567
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !6568, !srcloc !6569
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6570, !srcloc !6571
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #25, !dbg !6572, !srcloc !6573
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !6574, !srcloc !6575
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !6576, !srcloc !6577
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !6578, !srcloc !6579
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !6580, !srcloc !6581
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #25, !dbg !6582, !srcloc !6583
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #25, !dbg !6584, !srcloc !6585
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !6586, !srcloc !6587
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !6588, !srcloc !6589
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !6590, !srcloc !6591
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6592, !srcloc !6593
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #25, !dbg !6594, !srcloc !6595
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !6596, !srcloc !6597
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !6598, !srcloc !6599
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !6600, !srcloc !6601
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !6602, !srcloc !6603
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !6604, !srcloc !6605
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !6606, !srcloc !6607
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !6608, !srcloc !6609
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !6610, !srcloc !6611
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !6612, !srcloc !6613
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6614, !srcloc !6615
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !6616, !srcloc !6617
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6618, !srcloc !6619
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !6620, !srcloc !6621
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !6622, !srcloc !6623
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !6624, !srcloc !6625
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !6626, !srcloc !6627
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #25, !dbg !6628, !srcloc !6629
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #25, !dbg !6630, !srcloc !6631
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !6632, !srcloc !6633
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #25, !dbg !6634, !srcloc !6635
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #25, !dbg !6636, !srcloc !6637
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6638, !srcloc !6639
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #25, !dbg !6640, !srcloc !6641
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !6642, !srcloc !6643
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !6644, !srcloc !6645
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !6646, !srcloc !6647
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO\0A\09.equ\09CONFIG_CRYPTO,1\0A\09.type\09CONFIG_CRYPTO,%object", ""() #25, !dbg !6648, !srcloc !6649
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_INIT_PRIORITY\0A\09.equ\09CONFIG_CRYPTO_INIT_PRIORITY,90\0A\09.type\09CONFIG_CRYPTO_INIT_PRIORITY,%object", ""() #25, !dbg !6650, !srcloc !6651
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_LOG_LEVEL_DBG\0A\09.equ\09CONFIG_CRYPTO_LOG_LEVEL_DBG,1\0A\09.type\09CONFIG_CRYPTO_LOG_LEVEL_DBG,%object", ""() #25, !dbg !6652, !srcloc !6653
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_LOG_LEVEL\0A\09.equ\09CONFIG_CRYPTO_LOG_LEVEL,4\0A\09.type\09CONFIG_CRYPTO_LOG_LEVEL,%object", ""() #25, !dbg !6654, !srcloc !6655
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM,1\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM,%object", ""() #25, !dbg !6656, !srcloc !6657
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION,2\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION,%object", ""() #25, !dbg !6658, !srcloc !6659
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME,1\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME,%object", ""() #25, !dbg !6660, !srcloc !6661
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6662, !srcloc !6663
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #25, !dbg !6664, !srcloc !6665
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !6666, !srcloc !6667
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !6668, !srcloc !6669
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6670, !srcloc !6671
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #25, !dbg !6672, !srcloc !6673
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !6674, !srcloc !6675
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !6676, !srcloc !6677
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !6678, !srcloc !6679
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !6680, !srcloc !6681
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !6682, !srcloc !6683
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !6684, !srcloc !6685
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !6686, !srcloc !6687
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !6688, !srcloc !6689
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !6690, !srcloc !6691
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !6692, !srcloc !6693
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !6694, !srcloc !6695
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !6696, !srcloc !6697
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !6698, !srcloc !6699
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !6700, !srcloc !6701
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !6702, !srcloc !6703
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !6704, !srcloc !6705
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !6706, !srcloc !6707
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6708, !srcloc !6709
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #25, !dbg !6710, !srcloc !6711
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !6712, !srcloc !6713
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !6714, !srcloc !6715
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !6716, !srcloc !6717
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !6718, !srcloc !6719
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !6720, !srcloc !6721
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !6722, !srcloc !6723
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !6724, !srcloc !6725
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #25, !dbg !6726, !srcloc !6727
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #25, !dbg !6728, !srcloc !6729
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #25, !dbg !6730, !srcloc !6731
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #25, !dbg !6732, !srcloc !6733
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #25, !dbg !6734, !srcloc !6735
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #25, !dbg !6736, !srcloc !6737
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !6738, !srcloc !6739
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !6740, !srcloc !6741
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6742, !srcloc !6743
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !6744, !srcloc !6745
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6746, !srcloc !6747
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6748, !srcloc !6749
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !6750, !srcloc !6751
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !6752, !srcloc !6753
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !6754, !srcloc !6755
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !6756, !srcloc !6757
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !6758, !srcloc !6759
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !6760, !srcloc !6761
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !6762, !srcloc !6763
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !6764, !srcloc !6765
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !6766, !srcloc !6767
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !6768, !srcloc !6769
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !6770, !srcloc !6771
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !6772, !srcloc !6773
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !6774, !srcloc !6775
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !6776, !srcloc !6777
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !6778, !srcloc !6779
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !6780, !srcloc !6781
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !6782, !srcloc !6783
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !6784, !srcloc !6785
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !6786, !srcloc !6787
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !6788, !srcloc !6789
  tail call void asm sideeffect ".globl\09CONFIG_EXPERIMENTAL\0A\09.equ\09CONFIG_EXPERIMENTAL,1\0A\09.type\09CONFIG_EXPERIMENTAL,%object", ""() #25, !dbg !6790, !srcloc !6791
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !6792, !srcloc !6793
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !6794, !srcloc !6795
  ret void, !dbg !6796
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6797 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6799, metadata !DIExpression()), !dbg !6801
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !6802
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !6803
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !6804, !srcloc !6813
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6804
  call void @llvm.dbg.value(metadata i32 %3, metadata !6810, metadata !DIExpression()) #25, !dbg !6814
  call void @llvm.dbg.value(metadata i32 undef, metadata !6811, metadata !DIExpression()) #25, !dbg !6814
  call void @llvm.dbg.value(metadata i32 %3, metadata !6800, metadata !DIExpression()), !dbg !6801
  call void @llvm.dbg.value(metadata i32 %3, metadata !6815, metadata !DIExpression()) #25, !dbg !6820
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !6822, !srcloc !6823
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6824
  ret i32 0, !dbg !6825
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6826 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6828
  %2 = or i32 %1, 512, !dbg !6828
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6828
  ret void, !dbg !6829
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6830 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6831
  %2 = or i32 %1, 1024, !dbg !6831
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6831
  ret void, !dbg !6832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #3 !dbg !6833 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6835, metadata !DIExpression()), !dbg !6836
  ret i32 0, !dbg !6837
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6838 {
  %2 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6841, metadata !DIExpression()), !dbg !6849
  %3 = bitcast %union.anon.4* %2 to i8*, !dbg !6850
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !6850
  call void @llvm.dbg.declare(metadata %union.anon.4* %2, metadata !6842, metadata !DIExpression()), !dbg !6851
  call void @llvm.va_start(i8* nonnull %3), !dbg !6852
  %4 = bitcast %union.anon.4* %2 to i32*, !dbg !6853
  %5 = load i32, i32* %4, align 4, !dbg !6853
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6853
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !6853
  call void @llvm.va_end(i8* nonnull %3), !dbg !6854
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !6855
  ret void, !dbg !6855
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6856 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6861, metadata !DIExpression()), !dbg !6862
  call void @llvm.dbg.value(metadata i8* %0, metadata !6860, metadata !DIExpression()), !dbg !6862
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #27, !dbg !6863
  ret void, !dbg !6864
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6865 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6869, metadata !DIExpression()), !dbg !6873
  call void @llvm.dbg.value(metadata i8* %1, metadata !6870, metadata !DIExpression()), !dbg !6873
  call void @llvm.dbg.value(metadata i32 %2, metadata !6871, metadata !DIExpression()), !dbg !6873
  call void @llvm.dbg.value(metadata i8* %1, metadata !6872, metadata !DIExpression()), !dbg !6873
  %4 = icmp eq i32 %2, 0, !dbg !6874
  br i1 %4, label %14, label %5, !dbg !6875

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.62(i32 noundef %0) #26, !dbg !6873
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6875

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6872, metadata !DIExpression()), !dbg !6873
  call void @llvm.dbg.value(metadata i32 %10, metadata !6871, metadata !DIExpression()), !dbg !6873
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i32 0, i32 0), i32 noundef %7) #27, !dbg !6876
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #26, !dbg !6878
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6879
  call void @llvm.dbg.value(metadata i32 %11, metadata !6871, metadata !DIExpression()), !dbg !6873
  call void @llvm.dbg.value(metadata i8* %12, metadata !6872, metadata !DIExpression()), !dbg !6873
  br i1 %13, label %14, label %8, !dbg !6879, !llvm.loop !6880

14:                                               ; preds = %8, %3
  ret void, !dbg !6882
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.62(i32 noundef %0) unnamed_addr #3 !dbg !6883 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6885, metadata !DIExpression()), !dbg !6886
  %2 = add i32 %0, -1, !dbg !6887
  %3 = icmp ult i32 %2, 4, !dbg !6887
  %4 = shl i32 %2, 3, !dbg !6887
  %5 = lshr i32 1145657157, %4, !dbg !6887
  %6 = trunc i32 %5 to i8, !dbg !6887
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6887
  ret i8 %7, !dbg !6888
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6889 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6893, metadata !DIExpression()), !dbg !6904
  call void @llvm.dbg.value(metadata i32 %1, metadata !6894, metadata !DIExpression()), !dbg !6904
  call void @llvm.dbg.value(metadata i32 0, metadata !6895, metadata !DIExpression()), !dbg !6905
  br label %4, !dbg !6906

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.64, i32 0, i32 0)) #27, !dbg !6907
  call void @llvm.dbg.value(metadata i32 0, metadata !6897, metadata !DIExpression()), !dbg !6908
  br label %16, !dbg !6909

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6895, metadata !DIExpression()), !dbg !6905
  %6 = icmp ult i32 %5, %1, !dbg !6910
  br i1 %6, label %7, label %11, !dbg !6914

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6915
  %9 = load i8, i8* %8, align 1, !dbg !6915
  %10 = zext i8 %9 to i32, !dbg !6917
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.65, i32 0, i32 0), i32 noundef %10) #27, !dbg !6918
  br label %12, !dbg !6919

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.66, i32 0, i32 0)) #27, !dbg !6920
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6922
  call void @llvm.dbg.value(metadata i32 %13, metadata !6895, metadata !DIExpression()), !dbg !6905
  %14 = icmp eq i32 %13, 8, !dbg !6923
  br i1 %14, label %3, label %4, !dbg !6906, !llvm.loop !6924

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.67, i32 0, i32 0)) #27, !dbg !6926
  ret void, !dbg !6927

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6897, metadata !DIExpression()), !dbg !6908
  %18 = icmp ult i32 %17, %1, !dbg !6928
  br i1 %18, label %19, label %26, !dbg !6929

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6930
  %21 = load i8, i8* %20, align 1, !dbg !6930
  call void @llvm.dbg.value(metadata i8 %21, metadata !6899, metadata !DIExpression()), !dbg !6931
  %22 = zext i8 %21 to i32, !dbg !6932
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #26, !dbg !6933
  %24 = icmp eq i32 %23, 0, !dbg !6934
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6933
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.68, i32 0, i32 0), i32 noundef %25) #27, !dbg !6935
  br label %27, !dbg !6936

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.69, i32 0, i32 0)) #27, !dbg !6937
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6939
  call void @llvm.dbg.value(metadata i32 %28, metadata !6897, metadata !DIExpression()), !dbg !6908
  %29 = icmp eq i32 %28, 8, !dbg !6940
  br i1 %29, label %15, label %16, !dbg !6909, !llvm.loop !6941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #3 !dbg !6943 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6945, metadata !DIExpression()), !dbg !6946
  %2 = add i32 %0, -32, !dbg !6947
  %3 = icmp ult i32 %2, 95, !dbg !6947
  %4 = zext i1 %3 to i32, !dbg !6947
  ret i32 %4, !dbg !6948
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_copy(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !6949 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6954, metadata !DIExpression()), !dbg !6958
  call void @llvm.dbg.value(metadata i32 %1, metadata !6955, metadata !DIExpression()), !dbg !6958
  call void @llvm.dbg.value(metadata i8* %2, metadata !6956, metadata !DIExpression()), !dbg !6958
  call void @llvm.dbg.value(metadata i32 %3, metadata !6957, metadata !DIExpression()), !dbg !6958
  %5 = icmp ugt i32 %3, %1, !dbg !6959
  br i1 %5, label %8, label %6, !dbg !6961

6:                                                ; preds = %4
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %3) #27, !dbg !6962
  br label %8, !dbg !6964

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %3, %6 ], [ 0, %4 ], !dbg !6965
  ret i32 %9, !dbg !6966
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_set(i8* noundef %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6967 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6971, metadata !DIExpression()), !dbg !6974
  call void @llvm.dbg.value(metadata i8 %1, metadata !6972, metadata !DIExpression()), !dbg !6974
  call void @llvm.dbg.value(metadata i32 %2, metadata !6973, metadata !DIExpression()), !dbg !6974
  %4 = zext i8 %1 to i32, !dbg !6975
  %5 = tail call i8* @memset(i8* noundef %0, i32 noundef %4, i32 noundef %2) #27, !dbg !6976
  ret void, !dbg !6977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @_double_byte(i8 noundef zeroext %0) local_unnamed_addr #3 !dbg !6978 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6982, metadata !DIExpression()), !dbg !6983
  %2 = shl i8 %0, 1, !dbg !6984
  %3 = icmp slt i8 %0, 0, !dbg !6985
  %4 = select i1 %3, i8 27, i8 0, !dbg !6985
  %5 = xor i8 %4, %2, !dbg !6986
  ret i8 %5, !dbg !6987
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @_compare(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !6988 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6992, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.value(metadata i8* %1, metadata !6993, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.value(metadata i32 %2, metadata !6994, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.value(metadata i8* %0, metadata !6995, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.value(metadata i8* %1, metadata !6996, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.value(metadata i8 0, metadata !6997, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.value(metadata i32 0, metadata !6998, metadata !DIExpression()), !dbg !7001
  call void @llvm.dbg.value(metadata i8 undef, metadata !6997, metadata !DIExpression()), !dbg !7000
  %4 = icmp eq i32 %2, 0, !dbg !7002
  br i1 %4, label %5, label %7, !dbg !7004

5:                                                ; preds = %7, %3
  %6 = phi i32 [ 0, %3 ], [ %16, %7 ]
  ret i32 %6, !dbg !7005

7:                                                ; preds = %3, %7
  %8 = phi i32 [ %17, %7 ], [ 0, %3 ]
  %9 = phi i32 [ %16, %7 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6998, metadata !DIExpression()), !dbg !7001
  %10 = getelementptr inbounds i8, i8* %0, i32 %8, !dbg !7006
  %11 = load i8, i8* %10, align 1, !dbg !7006
  %12 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !7008
  %13 = load i8, i8* %12, align 1, !dbg !7008
  %14 = xor i8 %13, %11, !dbg !7009
  %15 = zext i8 %14 to i32, !dbg !7009
  %16 = or i32 %9, %15, !dbg !7010
  call void @llvm.dbg.value(metadata i32 %16, metadata !6997, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7000
  %17 = add nuw i32 %8, 1, !dbg !7011
  call void @llvm.dbg.value(metadata i32 %17, metadata !6998, metadata !DIExpression()), !dbg !7001
  call void @llvm.dbg.value(metadata i8 undef, metadata !6997, metadata !DIExpression()), !dbg !7000
  %18 = icmp eq i32 %17, %2, !dbg !7002
  br i1 %18, label %5, label %7, !dbg !7004, !llvm.loop !7012
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes128_set_decrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !7014 {
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %0, metadata !7018, metadata !DIExpression()), !dbg !7020
  call void @llvm.dbg.value(metadata i8* %1, metadata !7019, metadata !DIExpression()), !dbg !7020
  %3 = tail call i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef %1) #27, !dbg !7021
  ret i32 %3, !dbg !7022
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes_decrypt(i8* noundef %0, i8* noundef %1, %struct.tc_aes_key_sched_struct* noundef readonly %2) local_unnamed_addr #1 !dbg !7023 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7028, metadata !DIExpression()), !dbg !7033
  call void @llvm.dbg.value(metadata i8* %1, metadata !7029, metadata !DIExpression()), !dbg !7033
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %2, metadata !7030, metadata !DIExpression()), !dbg !7033
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !7034
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7034
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !7031, metadata !DIExpression()), !dbg !7035
  %6 = icmp eq i8* %0, null, !dbg !7036
  %7 = icmp eq i8* %1, null
  %8 = or i1 %6, %7, !dbg !7038
  %9 = icmp eq %struct.tc_aes_key_sched_struct* %2, null
  %10 = or i1 %8, %9, !dbg !7038
  br i1 %10, label %23, label %11, !dbg !7038

11:                                               ; preds = %3
  %12 = call i32 @_copy(i8* noundef nonnull %5, i32 noundef 16, i8* noundef nonnull %1, i32 noundef 16) #27, !dbg !7039
  %13 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 40, !dbg !7040
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %13) #26, !dbg !7041
  call void @llvm.dbg.value(metadata i32 9, metadata !7032, metadata !DIExpression()), !dbg !7033
  br label %14, !dbg !7042

14:                                               ; preds = %11, %14
  %15 = phi i32 [ 9, %11 ], [ %18, %14 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !7032, metadata !DIExpression()), !dbg !7033
  call fastcc void @inv_shift_rows(i8* noundef nonnull %5) #26, !dbg !7044
  call fastcc void @inv_sub_bytes(i8* noundef nonnull %5) #26, !dbg !7047
  %16 = shl i32 %15, 2, !dbg !7048
  %17 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 %16, !dbg !7049
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %17) #26, !dbg !7050
  call fastcc void @inv_mix_columns(i8* noundef nonnull %5) #26, !dbg !7051
  %18 = add nsw i32 %15, -1, !dbg !7052
  call void @llvm.dbg.value(metadata i32 %18, metadata !7032, metadata !DIExpression()), !dbg !7033
  %19 = icmp eq i32 %18, 0, !dbg !7053
  br i1 %19, label %20, label %14, !dbg !7042, !llvm.loop !7054

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 0, !dbg !7056
  call fastcc void @inv_shift_rows(i8* noundef nonnull %5) #26, !dbg !7057
  call fastcc void @inv_sub_bytes(i8* noundef nonnull %5) #26, !dbg !7058
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %21) #26, !dbg !7059
  %22 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %5, i32 noundef 16) #27, !dbg !7060
  call void @_set(i8* noundef nonnull %5, i8 noundef zeroext 0, i32 noundef 16) #27, !dbg !7061
  br label %23, !dbg !7062

23:                                               ; preds = %3, %20
  %24 = phi i32 [ 1, %20 ], [ 0, %3 ], !dbg !7033
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7063
  ret i32 %24, !dbg !7063
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @add_round_key(i8* nocapture noundef %0, i32* nocapture noundef readonly %1) unnamed_addr #11 !dbg !7064 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7069, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.value(metadata i32* %1, metadata !7070, metadata !DIExpression()), !dbg !7071
  %3 = load i32, i32* %1, align 4, !dbg !7072
  %4 = lshr i32 %3, 24, !dbg !7073
  %5 = load i8, i8* %0, align 1, !dbg !7074
  %6 = trunc i32 %4 to i8, !dbg !7074
  %7 = xor i8 %5, %6, !dbg !7074
  store i8 %7, i8* %0, align 1, !dbg !7074
  %8 = load i32, i32* %1, align 4, !dbg !7075
  %9 = lshr i32 %8, 16, !dbg !7076
  %10 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7077
  %11 = load i8, i8* %10, align 1, !dbg !7078
  %12 = trunc i32 %9 to i8, !dbg !7078
  %13 = xor i8 %11, %12, !dbg !7078
  store i8 %13, i8* %10, align 1, !dbg !7078
  %14 = load i32, i32* %1, align 4, !dbg !7079
  %15 = lshr i32 %14, 8, !dbg !7080
  %16 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7081
  %17 = load i8, i8* %16, align 1, !dbg !7082
  %18 = trunc i32 %15 to i8, !dbg !7082
  %19 = xor i8 %17, %18, !dbg !7082
  store i8 %19, i8* %16, align 1, !dbg !7082
  %20 = load i32, i32* %1, align 4, !dbg !7083
  %21 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7084
  %22 = load i8, i8* %21, align 1, !dbg !7085
  %23 = trunc i32 %20 to i8, !dbg !7085
  %24 = xor i8 %22, %23, !dbg !7085
  store i8 %24, i8* %21, align 1, !dbg !7085
  %25 = getelementptr inbounds i32, i32* %1, i32 1, !dbg !7086
  %26 = load i32, i32* %25, align 4, !dbg !7086
  %27 = lshr i32 %26, 24, !dbg !7087
  %28 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7088
  %29 = load i8, i8* %28, align 1, !dbg !7089
  %30 = trunc i32 %27 to i8, !dbg !7089
  %31 = xor i8 %29, %30, !dbg !7089
  store i8 %31, i8* %28, align 1, !dbg !7089
  %32 = load i32, i32* %25, align 4, !dbg !7090
  %33 = lshr i32 %32, 16, !dbg !7091
  %34 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7092
  %35 = load i8, i8* %34, align 1, !dbg !7093
  %36 = trunc i32 %33 to i8, !dbg !7093
  %37 = xor i8 %35, %36, !dbg !7093
  store i8 %37, i8* %34, align 1, !dbg !7093
  %38 = load i32, i32* %25, align 4, !dbg !7094
  %39 = lshr i32 %38, 8, !dbg !7095
  %40 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7096
  %41 = load i8, i8* %40, align 1, !dbg !7097
  %42 = trunc i32 %39 to i8, !dbg !7097
  %43 = xor i8 %41, %42, !dbg !7097
  store i8 %43, i8* %40, align 1, !dbg !7097
  %44 = load i32, i32* %25, align 4, !dbg !7098
  %45 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7099
  %46 = load i8, i8* %45, align 1, !dbg !7100
  %47 = trunc i32 %44 to i8, !dbg !7100
  %48 = xor i8 %46, %47, !dbg !7100
  store i8 %48, i8* %45, align 1, !dbg !7100
  %49 = getelementptr inbounds i32, i32* %1, i32 2, !dbg !7101
  %50 = load i32, i32* %49, align 4, !dbg !7101
  %51 = lshr i32 %50, 24, !dbg !7102
  %52 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7103
  %53 = load i8, i8* %52, align 1, !dbg !7104
  %54 = trunc i32 %51 to i8, !dbg !7104
  %55 = xor i8 %53, %54, !dbg !7104
  store i8 %55, i8* %52, align 1, !dbg !7104
  %56 = load i32, i32* %49, align 4, !dbg !7105
  %57 = lshr i32 %56, 16, !dbg !7106
  %58 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7107
  %59 = load i8, i8* %58, align 1, !dbg !7108
  %60 = trunc i32 %57 to i8, !dbg !7108
  %61 = xor i8 %59, %60, !dbg !7108
  store i8 %61, i8* %58, align 1, !dbg !7108
  %62 = load i32, i32* %49, align 4, !dbg !7109
  %63 = lshr i32 %62, 8, !dbg !7110
  %64 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7111
  %65 = load i8, i8* %64, align 1, !dbg !7112
  %66 = trunc i32 %63 to i8, !dbg !7112
  %67 = xor i8 %65, %66, !dbg !7112
  store i8 %67, i8* %64, align 1, !dbg !7112
  %68 = load i32, i32* %49, align 4, !dbg !7113
  %69 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7114
  %70 = load i8, i8* %69, align 1, !dbg !7115
  %71 = trunc i32 %68 to i8, !dbg !7115
  %72 = xor i8 %70, %71, !dbg !7115
  store i8 %72, i8* %69, align 1, !dbg !7115
  %73 = getelementptr inbounds i32, i32* %1, i32 3, !dbg !7116
  %74 = load i32, i32* %73, align 4, !dbg !7116
  %75 = lshr i32 %74, 24, !dbg !7117
  %76 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7118
  %77 = load i8, i8* %76, align 1, !dbg !7119
  %78 = trunc i32 %75 to i8, !dbg !7119
  %79 = xor i8 %77, %78, !dbg !7119
  store i8 %79, i8* %76, align 1, !dbg !7119
  %80 = load i32, i32* %73, align 4, !dbg !7120
  %81 = lshr i32 %80, 16, !dbg !7121
  %82 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7122
  %83 = load i8, i8* %82, align 1, !dbg !7123
  %84 = trunc i32 %81 to i8, !dbg !7123
  %85 = xor i8 %83, %84, !dbg !7123
  store i8 %85, i8* %82, align 1, !dbg !7123
  %86 = load i32, i32* %73, align 4, !dbg !7124
  %87 = lshr i32 %86, 8, !dbg !7125
  %88 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7126
  %89 = load i8, i8* %88, align 1, !dbg !7127
  %90 = trunc i32 %87 to i8, !dbg !7127
  %91 = xor i8 %89, %90, !dbg !7127
  store i8 %91, i8* %88, align 1, !dbg !7127
  %92 = load i32, i32* %73, align 4, !dbg !7128
  %93 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7129
  %94 = load i8, i8* %93, align 1, !dbg !7130
  %95 = trunc i32 %92 to i8, !dbg !7130
  %96 = xor i8 %94, %95, !dbg !7130
  store i8 %96, i8* %93, align 1, !dbg !7130
  ret void, !dbg !7131
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @inv_shift_rows(i8* noundef %0) unnamed_addr #1 !dbg !7132 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7136, metadata !DIExpression()), !dbg !7138
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7139
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7139
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7137, metadata !DIExpression()), !dbg !7140
  %4 = load i8, i8* %0, align 1, !dbg !7141
  store i8 %4, i8* %3, align 1, !dbg !7142
  %5 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7143
  %6 = load i8, i8* %5, align 1, !dbg !7143
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 1, !dbg !7144
  store i8 %6, i8* %7, align 1, !dbg !7145
  %8 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7146
  %9 = load i8, i8* %8, align 1, !dbg !7146
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 2, !dbg !7147
  store i8 %9, i8* %10, align 1, !dbg !7148
  %11 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7149
  %12 = load i8, i8* %11, align 1, !dbg !7149
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 3, !dbg !7150
  store i8 %12, i8* %13, align 1, !dbg !7151
  %14 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7152
  %15 = load i8, i8* %14, align 1, !dbg !7152
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7153
  store i8 %15, i8* %16, align 1, !dbg !7154
  %17 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7155
  %18 = load i8, i8* %17, align 1, !dbg !7155
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 5, !dbg !7156
  store i8 %18, i8* %19, align 1, !dbg !7157
  %20 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7158
  %21 = load i8, i8* %20, align 1, !dbg !7158
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 6, !dbg !7159
  store i8 %21, i8* %22, align 1, !dbg !7160
  %23 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7161
  %24 = load i8, i8* %23, align 1, !dbg !7161
  %25 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 7, !dbg !7162
  store i8 %24, i8* %25, align 1, !dbg !7163
  %26 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7164
  %27 = load i8, i8* %26, align 1, !dbg !7164
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7165
  store i8 %27, i8* %28, align 1, !dbg !7166
  %29 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7167
  %30 = load i8, i8* %29, align 1, !dbg !7167
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 9, !dbg !7168
  store i8 %30, i8* %31, align 1, !dbg !7169
  %32 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7170
  %33 = load i8, i8* %32, align 1, !dbg !7170
  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 10, !dbg !7171
  store i8 %33, i8* %34, align 1, !dbg !7172
  %35 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7173
  %36 = load i8, i8* %35, align 1, !dbg !7173
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 11, !dbg !7174
  store i8 %36, i8* %37, align 1, !dbg !7175
  %38 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7176
  %39 = load i8, i8* %38, align 1, !dbg !7176
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7177
  store i8 %39, i8* %40, align 1, !dbg !7178
  %41 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7179
  %42 = load i8, i8* %41, align 1, !dbg !7179
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 13, !dbg !7180
  store i8 %42, i8* %43, align 1, !dbg !7181
  %44 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7182
  %45 = load i8, i8* %44, align 1, !dbg !7182
  %46 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 14, !dbg !7183
  store i8 %45, i8* %46, align 1, !dbg !7184
  %47 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7185
  %48 = load i8, i8* %47, align 1, !dbg !7185
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 15, !dbg !7186
  store i8 %48, i8* %49, align 1, !dbg !7187
  %50 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7188
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7189
  ret void, !dbg !7189
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @inv_sub_bytes(i8* nocapture noundef %0) unnamed_addr #14 !dbg !7190 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7192, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.value(metadata i32 0, metadata !7193, metadata !DIExpression()), !dbg !7194
  br label %2, !dbg !7195

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %9, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7193, metadata !DIExpression()), !dbg !7194
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7197
  %5 = load i8, i8* %4, align 1, !dbg !7197
  %6 = zext i8 %5 to i32, !dbg !7200
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* @inv_sbox, i32 0, i32 %6, !dbg !7200
  %8 = load i8, i8* %7, align 1, !dbg !7200
  store i8 %8, i8* %4, align 1, !dbg !7201
  %9 = add nuw nsw i32 %3, 1, !dbg !7202
  call void @llvm.dbg.value(metadata i32 %9, metadata !7193, metadata !DIExpression()), !dbg !7194
  %10 = icmp eq i32 %9, 16, !dbg !7203
  br i1 %10, label %11, label %2, !dbg !7195, !llvm.loop !7204

11:                                               ; preds = %2
  ret void, !dbg !7206
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @inv_mix_columns(i8* noundef %0) unnamed_addr #1 !dbg !7207 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7209, metadata !DIExpression()), !dbg !7211
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7212
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7212
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7210, metadata !DIExpression()), !dbg !7213
  call fastcc void @mult_row_column(i8* noundef nonnull %3, i8* noundef %0) #26, !dbg !7214
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7215
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7216
  call fastcc void @mult_row_column(i8* noundef nonnull %4, i8* noundef nonnull %5) #26, !dbg !7217
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7218
  %7 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7219
  call fastcc void @mult_row_column(i8* noundef nonnull %6, i8* noundef nonnull %7) #26, !dbg !7220
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7221
  %9 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7222
  call fastcc void @mult_row_column(i8* noundef nonnull %8, i8* noundef nonnull %9) #26, !dbg !7223
  %10 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7224
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7225
  ret void, !dbg !7225
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mult_row_column(i8* nocapture noundef writeonly %0, i8* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7226 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7230, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i8* %1, metadata !7231, metadata !DIExpression()), !dbg !7232
  %3 = load i8, i8* %1, align 1, !dbg !7233
  %4 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %3) #27, !dbg !7233
  %5 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %4) #27, !dbg !7233
  %6 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %5) #27, !dbg !7233
  %7 = load i8, i8* %1, align 1, !dbg !7233
  %8 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %7) #27, !dbg !7233
  %9 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %8) #27, !dbg !7233
  %10 = load i8, i8* %1, align 1, !dbg !7233
  %11 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %10) #27, !dbg !7233
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7234
  %13 = load i8, i8* %12, align 1, !dbg !7234
  %14 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %13) #27, !dbg !7234
  %15 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %14) #27, !dbg !7234
  %16 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %15) #27, !dbg !7234
  %17 = load i8, i8* %12, align 1, !dbg !7234
  %18 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %17) #27, !dbg !7234
  %19 = load i8, i8* %12, align 1, !dbg !7234
  %20 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !7235
  %21 = load i8, i8* %20, align 1, !dbg !7235
  %22 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %21) #27, !dbg !7235
  %23 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %22) #27, !dbg !7235
  %24 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %23) #27, !dbg !7235
  %25 = load i8, i8* %20, align 1, !dbg !7235
  %26 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %25) #27, !dbg !7235
  %27 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %26) #27, !dbg !7235
  %28 = load i8, i8* %20, align 1, !dbg !7235
  %29 = getelementptr inbounds i8, i8* %1, i32 3, !dbg !7236
  %30 = load i8, i8* %29, align 1, !dbg !7236
  %31 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %30) #27, !dbg !7236
  %32 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %31) #27, !dbg !7236
  %33 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %32) #27, !dbg !7236
  %34 = load i8, i8* %29, align 1, !dbg !7236
  %35 = xor i8 %9, %6, !dbg !7236
  %36 = xor i8 %35, %11, !dbg !7235
  %37 = xor i8 %36, %16, !dbg !7235
  %38 = xor i8 %37, %18, !dbg !7234
  %39 = xor i8 %38, %19, !dbg !7234
  %40 = xor i8 %39, %24, !dbg !7233
  %41 = xor i8 %40, %27, !dbg !7233
  %42 = xor i8 %41, %28, !dbg !7237
  %43 = xor i8 %42, %33, !dbg !7238
  %44 = xor i8 %43, %34, !dbg !7239
  store i8 %44, i8* %0, align 1, !dbg !7240
  %45 = load i8, i8* %1, align 1, !dbg !7241
  %46 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %45) #27, !dbg !7241
  %47 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %46) #27, !dbg !7241
  %48 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %47) #27, !dbg !7241
  %49 = load i8, i8* %1, align 1, !dbg !7241
  %50 = load i8, i8* %12, align 1, !dbg !7242
  %51 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %50) #27, !dbg !7242
  %52 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %51) #27, !dbg !7242
  %53 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %52) #27, !dbg !7242
  %54 = load i8, i8* %12, align 1, !dbg !7242
  %55 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %54) #27, !dbg !7242
  %56 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %55) #27, !dbg !7242
  %57 = load i8, i8* %12, align 1, !dbg !7242
  %58 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %57) #27, !dbg !7242
  %59 = load i8, i8* %20, align 1, !dbg !7243
  %60 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %59) #27, !dbg !7243
  %61 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %60) #27, !dbg !7243
  %62 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %61) #27, !dbg !7243
  %63 = load i8, i8* %20, align 1, !dbg !7243
  %64 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %63) #27, !dbg !7243
  %65 = load i8, i8* %20, align 1, !dbg !7243
  %66 = load i8, i8* %29, align 1, !dbg !7244
  %67 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %66) #27, !dbg !7244
  %68 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %67) #27, !dbg !7244
  %69 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %68) #27, !dbg !7244
  %70 = load i8, i8* %29, align 1, !dbg !7244
  %71 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %70) #27, !dbg !7244
  %72 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %71) #27, !dbg !7244
  %73 = load i8, i8* %29, align 1, !dbg !7244
  %74 = xor i8 %49, %48, !dbg !7244
  %75 = xor i8 %74, %53, !dbg !7244
  %76 = xor i8 %75, %56, !dbg !7243
  %77 = xor i8 %76, %58, !dbg !7243
  %78 = xor i8 %77, %62, !dbg !7242
  %79 = xor i8 %78, %64, !dbg !7242
  %80 = xor i8 %79, %65, !dbg !7241
  %81 = xor i8 %80, %69, !dbg !7245
  %82 = xor i8 %81, %72, !dbg !7246
  %83 = xor i8 %82, %73, !dbg !7247
  %84 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7248
  store i8 %83, i8* %84, align 1, !dbg !7249
  %85 = load i8, i8* %1, align 1, !dbg !7250
  %86 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %85) #27, !dbg !7250
  %87 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %86) #27, !dbg !7250
  %88 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %87) #27, !dbg !7250
  %89 = load i8, i8* %1, align 1, !dbg !7250
  %90 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %89) #27, !dbg !7250
  %91 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %90) #27, !dbg !7250
  %92 = load i8, i8* %1, align 1, !dbg !7250
  %93 = load i8, i8* %12, align 1, !dbg !7251
  %94 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %93) #27, !dbg !7251
  %95 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %94) #27, !dbg !7251
  %96 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %95) #27, !dbg !7251
  %97 = load i8, i8* %12, align 1, !dbg !7251
  %98 = load i8, i8* %20, align 1, !dbg !7252
  %99 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %98) #27, !dbg !7252
  %100 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %99) #27, !dbg !7252
  %101 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %100) #27, !dbg !7252
  %102 = load i8, i8* %20, align 1, !dbg !7252
  %103 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %102) #27, !dbg !7252
  %104 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %103) #27, !dbg !7252
  %105 = load i8, i8* %20, align 1, !dbg !7252
  %106 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %105) #27, !dbg !7252
  %107 = load i8, i8* %29, align 1, !dbg !7253
  %108 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %107) #27, !dbg !7253
  %109 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %108) #27, !dbg !7253
  %110 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %109) #27, !dbg !7253
  %111 = load i8, i8* %29, align 1, !dbg !7253
  %112 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %111) #27, !dbg !7253
  %113 = load i8, i8* %29, align 1, !dbg !7253
  %114 = xor i8 %91, %88, !dbg !7253
  %115 = xor i8 %114, %92, !dbg !7253
  %116 = xor i8 %115, %96, !dbg !7252
  %117 = xor i8 %116, %97, !dbg !7252
  %118 = xor i8 %117, %101, !dbg !7251
  %119 = xor i8 %118, %104, !dbg !7250
  %120 = xor i8 %119, %106, !dbg !7250
  %121 = xor i8 %120, %110, !dbg !7254
  %122 = xor i8 %121, %112, !dbg !7255
  %123 = xor i8 %122, %113, !dbg !7256
  %124 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7257
  store i8 %123, i8* %124, align 1, !dbg !7258
  %125 = load i8, i8* %1, align 1, !dbg !7259
  %126 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %125) #27, !dbg !7259
  %127 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %126) #27, !dbg !7259
  %128 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %127) #27, !dbg !7259
  %129 = load i8, i8* %1, align 1, !dbg !7259
  %130 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %129) #27, !dbg !7259
  %131 = load i8, i8* %1, align 1, !dbg !7259
  %132 = load i8, i8* %12, align 1, !dbg !7260
  %133 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %132) #27, !dbg !7260
  %134 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %133) #27, !dbg !7260
  %135 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %134) #27, !dbg !7260
  %136 = load i8, i8* %12, align 1, !dbg !7260
  %137 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %136) #27, !dbg !7260
  %138 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %137) #27, !dbg !7260
  %139 = load i8, i8* %12, align 1, !dbg !7260
  %140 = load i8, i8* %20, align 1, !dbg !7261
  %141 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %140) #27, !dbg !7261
  %142 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %141) #27, !dbg !7261
  %143 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %142) #27, !dbg !7261
  %144 = load i8, i8* %20, align 1, !dbg !7261
  %145 = load i8, i8* %29, align 1, !dbg !7262
  %146 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %145) #27, !dbg !7262
  %147 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %146) #27, !dbg !7262
  %148 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %147) #27, !dbg !7262
  %149 = load i8, i8* %29, align 1, !dbg !7262
  %150 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %149) #27, !dbg !7262
  %151 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %150) #27, !dbg !7262
  %152 = load i8, i8* %29, align 1, !dbg !7262
  %153 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %152) #27, !dbg !7262
  %154 = xor i8 %130, %128, !dbg !7262
  %155 = xor i8 %154, %131, !dbg !7262
  %156 = xor i8 %155, %135, !dbg !7261
  %157 = xor i8 %156, %138, !dbg !7260
  %158 = xor i8 %157, %139, !dbg !7260
  %159 = xor i8 %158, %143, !dbg !7259
  %160 = xor i8 %159, %144, !dbg !7259
  %161 = xor i8 %160, %148, !dbg !7263
  %162 = xor i8 %161, %151, !dbg !7264
  %163 = xor i8 %162, %153, !dbg !7265
  %164 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7266
  store i8 %163, i8* %164, align 1, !dbg !7267
  ret void, !dbg !7268
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef readonly %1) local_unnamed_addr #16 !dbg !7269 {
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %0, metadata !7273, metadata !DIExpression()), !dbg !7279
  call void @llvm.dbg.value(metadata i8* %1, metadata !7274, metadata !DIExpression()), !dbg !7279
  call void @llvm.dbg.declare(metadata [11 x i32]* @__const.tc_aes128_set_encrypt_key.rconst, metadata !7275, metadata !DIExpression()), !dbg !7280
  %3 = icmp eq %struct.tc_aes_key_sched_struct* %0, null, !dbg !7281
  %4 = icmp eq i8* %1, null
  %5 = or i1 %3, %4, !dbg !7283
  br i1 %5, label %80, label %9, !dbg !7283

6:                                                ; preds = %9
  call void @llvm.dbg.value(metadata i32 4, metadata !7277, metadata !DIExpression()), !dbg !7279
  %7 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 4, !dbg !7284
  br label %36, !dbg !7288

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %34, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !7277, metadata !DIExpression()), !dbg !7279
  %11 = shl nuw nsw i32 %10, 2, !dbg !7289
  %12 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !7293
  %13 = load i8, i8* %12, align 1, !dbg !7293
  %14 = zext i8 %13 to i32, !dbg !7293
  %15 = shl nuw i32 %14, 24, !dbg !7294
  %16 = or i32 %11, 1, !dbg !7295
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !7296
  %18 = load i8, i8* %17, align 1, !dbg !7296
  %19 = zext i8 %18 to i32, !dbg !7296
  %20 = shl nuw nsw i32 %19, 16, !dbg !7297
  %21 = or i32 %20, %15, !dbg !7298
  %22 = or i32 %11, 2, !dbg !7299
  %23 = getelementptr inbounds i8, i8* %1, i32 %22, !dbg !7300
  %24 = load i8, i8* %23, align 1, !dbg !7300
  %25 = zext i8 %24 to i32, !dbg !7300
  %26 = shl nuw nsw i32 %25, 8, !dbg !7301
  %27 = or i32 %21, %26, !dbg !7302
  %28 = or i32 %11, 3, !dbg !7303
  %29 = getelementptr inbounds i8, i8* %1, i32 %28, !dbg !7304
  %30 = load i8, i8* %29, align 1, !dbg !7304
  %31 = zext i8 %30 to i32, !dbg !7305
  %32 = or i32 %27, %31, !dbg !7306
  %33 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %10, !dbg !7307
  store i32 %32, i32* %33, align 4, !dbg !7308
  %34 = add nuw nsw i32 %10, 1, !dbg !7309
  call void @llvm.dbg.value(metadata i32 %34, metadata !7277, metadata !DIExpression()), !dbg !7279
  %35 = icmp eq i32 %34, 4, !dbg !7310
  br i1 %35, label %6, label %9, !dbg !7311, !llvm.loop !7312

36:                                               ; preds = %6, %71
  %37 = phi i32 [ %76, %71 ], [ %8, %6 ], !dbg !7284
  %38 = phi i32 [ %78, %71 ], [ 4, %6 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !7277, metadata !DIExpression()), !dbg !7279
  call void @llvm.dbg.value(metadata i32 %37, metadata !7278, metadata !DIExpression()), !dbg !7279
  %39 = and i32 %38, 3, !dbg !7314
  %40 = icmp eq i32 %39, 0, !dbg !7316
  br i1 %40, label %41, label %71, !dbg !7317

41:                                               ; preds = %36
  %42 = tail call fastcc i32 @rotword(i32 noundef %37) #26, !dbg !7318
  %43 = lshr i32 %42, 24, !dbg !7318
  %44 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %43, !dbg !7318
  %45 = load i8, i8* %44, align 1, !dbg !7318
  %46 = zext i8 %45 to i32, !dbg !7318
  %47 = shl nuw i32 %46, 24, !dbg !7318
  %48 = lshr i32 %42, 16, !dbg !7318
  %49 = and i32 %48, 255, !dbg !7318
  %50 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %49, !dbg !7318
  %51 = load i8, i8* %50, align 1, !dbg !7318
  %52 = zext i8 %51 to i32, !dbg !7318
  %53 = shl nuw nsw i32 %52, 16, !dbg !7318
  %54 = or i32 %53, %47, !dbg !7318
  %55 = lshr i32 %42, 8, !dbg !7318
  %56 = and i32 %55, 255, !dbg !7318
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %56, !dbg !7318
  %58 = load i8, i8* %57, align 1, !dbg !7318
  %59 = zext i8 %58 to i32, !dbg !7318
  %60 = shl nuw nsw i32 %59, 8, !dbg !7318
  %61 = or i32 %54, %60, !dbg !7318
  %62 = and i32 %42, 255, !dbg !7318
  %63 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %62, !dbg !7318
  %64 = load i8, i8* %63, align 1, !dbg !7318
  %65 = zext i8 %64 to i32, !dbg !7318
  %66 = or i32 %61, %65, !dbg !7318
  %67 = lshr i32 %38, 2, !dbg !7320
  %68 = getelementptr inbounds [11 x i32], [11 x i32]* @__const.tc_aes128_set_encrypt_key.rconst, i32 0, i32 %67, !dbg !7321
  %69 = load i32, i32* %68, align 4, !dbg !7321
  %70 = xor i32 %66, %69, !dbg !7322
  call void @llvm.dbg.value(metadata i32 %70, metadata !7278, metadata !DIExpression()), !dbg !7279
  br label %71, !dbg !7323

71:                                               ; preds = %41, %36
  %72 = phi i32 [ %70, %41 ], [ %37, %36 ], !dbg !7324
  call void @llvm.dbg.value(metadata i32 %72, metadata !7278, metadata !DIExpression()), !dbg !7279
  %73 = add nsw i32 %38, -4, !dbg !7325
  %74 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %73, !dbg !7326
  %75 = load i32, i32* %74, align 4, !dbg !7326
  %76 = xor i32 %75, %72, !dbg !7327
  %77 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %38, !dbg !7328
  store i32 %76, i32* %77, align 4, !dbg !7329
  %78 = add nuw nsw i32 %38, 1, !dbg !7330
  call void @llvm.dbg.value(metadata i32 %78, metadata !7277, metadata !DIExpression()), !dbg !7279
  %79 = icmp eq i32 %78, 44, !dbg !7331
  br i1 %79, label %80, label %36, !dbg !7288, !llvm.loop !7332

80:                                               ; preds = %71, %2
  %81 = phi i32 [ 0, %2 ], [ 1, %71 ], !dbg !7279
  ret i32 %81, !dbg !7334
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @rotword(i32 noundef %0) unnamed_addr #13 !dbg !7335 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7339, metadata !DIExpression()), !dbg !7340
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 8), !dbg !7341
  ret i32 %2, !dbg !7342
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes_encrypt(i8* noundef %0, i8* noundef %1, %struct.tc_aes_key_sched_struct* noundef readonly %2) local_unnamed_addr #1 !dbg !7343 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7348, metadata !DIExpression()), !dbg !7353
  call void @llvm.dbg.value(metadata i8* %1, metadata !7349, metadata !DIExpression()), !dbg !7353
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %2, metadata !7350, metadata !DIExpression()), !dbg !7353
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !7354
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7354
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !7351, metadata !DIExpression()), !dbg !7355
  %6 = icmp eq i8* %0, null, !dbg !7356
  %7 = icmp eq i8* %1, null
  %8 = or i1 %6, %7, !dbg !7358
  %9 = icmp eq %struct.tc_aes_key_sched_struct* %2, null
  %10 = or i1 %8, %9, !dbg !7358
  br i1 %10, label %23, label %11, !dbg !7358

11:                                               ; preds = %3
  %12 = call i32 @_copy(i8* noundef nonnull %5, i32 noundef 16, i8* noundef nonnull %1, i32 noundef 16) #27, !dbg !7359
  %13 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 0, !dbg !7360
  call fastcc void @add_round_key.72(i8* noundef nonnull %5, i32* noundef nonnull %13) #26, !dbg !7361
  call void @llvm.dbg.value(metadata i32 0, metadata !7352, metadata !DIExpression()), !dbg !7353
  br label %14, !dbg !7362

14:                                               ; preds = %11, %14
  %15 = phi i32 [ 0, %11 ], [ %16, %14 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !7352, metadata !DIExpression()), !dbg !7353
  call fastcc void @sub_bytes(i8* noundef nonnull %5) #26, !dbg !7364
  call fastcc void @shift_rows(i8* noundef nonnull %5) #26, !dbg !7367
  call fastcc void @mix_columns(i8* noundef nonnull %5) #26, !dbg !7368
  %16 = add nuw nsw i32 %15, 1, !dbg !7369
  %17 = shl nuw nsw i32 %16, 2, !dbg !7370
  %18 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 %17, !dbg !7371
  call fastcc void @add_round_key.72(i8* noundef nonnull %5, i32* noundef nonnull %18) #26, !dbg !7372
  call void @llvm.dbg.value(metadata i32 %16, metadata !7352, metadata !DIExpression()), !dbg !7353
  %19 = icmp eq i32 %16, 9, !dbg !7373
  br i1 %19, label %20, label %14, !dbg !7362, !llvm.loop !7374

20:                                               ; preds = %14
  call fastcc void @sub_bytes(i8* noundef nonnull %5) #26, !dbg !7376
  call fastcc void @shift_rows(i8* noundef nonnull %5) #26, !dbg !7377
  %21 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 40, !dbg !7378
  call fastcc void @add_round_key.72(i8* noundef nonnull %5, i32* noundef nonnull %21) #26, !dbg !7379
  %22 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %5, i32 noundef 16) #27, !dbg !7380
  call void @_set(i8* noundef nonnull %5, i8 noundef zeroext 0, i32 noundef 16) #27, !dbg !7381
  br label %23, !dbg !7382

23:                                               ; preds = %3, %20
  %24 = phi i32 [ 1, %20 ], [ 0, %3 ], !dbg !7353
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7383
  ret i32 %24, !dbg !7383
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @add_round_key.72(i8* nocapture noundef %0, i32* nocapture noundef readonly %1) unnamed_addr #11 !dbg !7384 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7386, metadata !DIExpression()), !dbg !7388
  call void @llvm.dbg.value(metadata i32* %1, metadata !7387, metadata !DIExpression()), !dbg !7388
  %3 = load i32, i32* %1, align 4, !dbg !7389
  %4 = lshr i32 %3, 24, !dbg !7390
  %5 = load i8, i8* %0, align 1, !dbg !7391
  %6 = trunc i32 %4 to i8, !dbg !7391
  %7 = xor i8 %5, %6, !dbg !7391
  store i8 %7, i8* %0, align 1, !dbg !7391
  %8 = load i32, i32* %1, align 4, !dbg !7392
  %9 = lshr i32 %8, 16, !dbg !7393
  %10 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7394
  %11 = load i8, i8* %10, align 1, !dbg !7395
  %12 = trunc i32 %9 to i8, !dbg !7395
  %13 = xor i8 %11, %12, !dbg !7395
  store i8 %13, i8* %10, align 1, !dbg !7395
  %14 = load i32, i32* %1, align 4, !dbg !7396
  %15 = lshr i32 %14, 8, !dbg !7397
  %16 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7398
  %17 = load i8, i8* %16, align 1, !dbg !7399
  %18 = trunc i32 %15 to i8, !dbg !7399
  %19 = xor i8 %17, %18, !dbg !7399
  store i8 %19, i8* %16, align 1, !dbg !7399
  %20 = load i32, i32* %1, align 4, !dbg !7400
  %21 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7401
  %22 = load i8, i8* %21, align 1, !dbg !7402
  %23 = trunc i32 %20 to i8, !dbg !7402
  %24 = xor i8 %22, %23, !dbg !7402
  store i8 %24, i8* %21, align 1, !dbg !7402
  %25 = getelementptr inbounds i32, i32* %1, i32 1, !dbg !7403
  %26 = load i32, i32* %25, align 4, !dbg !7403
  %27 = lshr i32 %26, 24, !dbg !7404
  %28 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7405
  %29 = load i8, i8* %28, align 1, !dbg !7406
  %30 = trunc i32 %27 to i8, !dbg !7406
  %31 = xor i8 %29, %30, !dbg !7406
  store i8 %31, i8* %28, align 1, !dbg !7406
  %32 = load i32, i32* %25, align 4, !dbg !7407
  %33 = lshr i32 %32, 16, !dbg !7408
  %34 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7409
  %35 = load i8, i8* %34, align 1, !dbg !7410
  %36 = trunc i32 %33 to i8, !dbg !7410
  %37 = xor i8 %35, %36, !dbg !7410
  store i8 %37, i8* %34, align 1, !dbg !7410
  %38 = load i32, i32* %25, align 4, !dbg !7411
  %39 = lshr i32 %38, 8, !dbg !7412
  %40 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7413
  %41 = load i8, i8* %40, align 1, !dbg !7414
  %42 = trunc i32 %39 to i8, !dbg !7414
  %43 = xor i8 %41, %42, !dbg !7414
  store i8 %43, i8* %40, align 1, !dbg !7414
  %44 = load i32, i32* %25, align 4, !dbg !7415
  %45 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7416
  %46 = load i8, i8* %45, align 1, !dbg !7417
  %47 = trunc i32 %44 to i8, !dbg !7417
  %48 = xor i8 %46, %47, !dbg !7417
  store i8 %48, i8* %45, align 1, !dbg !7417
  %49 = getelementptr inbounds i32, i32* %1, i32 2, !dbg !7418
  %50 = load i32, i32* %49, align 4, !dbg !7418
  %51 = lshr i32 %50, 24, !dbg !7419
  %52 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7420
  %53 = load i8, i8* %52, align 1, !dbg !7421
  %54 = trunc i32 %51 to i8, !dbg !7421
  %55 = xor i8 %53, %54, !dbg !7421
  store i8 %55, i8* %52, align 1, !dbg !7421
  %56 = load i32, i32* %49, align 4, !dbg !7422
  %57 = lshr i32 %56, 16, !dbg !7423
  %58 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7424
  %59 = load i8, i8* %58, align 1, !dbg !7425
  %60 = trunc i32 %57 to i8, !dbg !7425
  %61 = xor i8 %59, %60, !dbg !7425
  store i8 %61, i8* %58, align 1, !dbg !7425
  %62 = load i32, i32* %49, align 4, !dbg !7426
  %63 = lshr i32 %62, 8, !dbg !7427
  %64 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7428
  %65 = load i8, i8* %64, align 1, !dbg !7429
  %66 = trunc i32 %63 to i8, !dbg !7429
  %67 = xor i8 %65, %66, !dbg !7429
  store i8 %67, i8* %64, align 1, !dbg !7429
  %68 = load i32, i32* %49, align 4, !dbg !7430
  %69 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7431
  %70 = load i8, i8* %69, align 1, !dbg !7432
  %71 = trunc i32 %68 to i8, !dbg !7432
  %72 = xor i8 %70, %71, !dbg !7432
  store i8 %72, i8* %69, align 1, !dbg !7432
  %73 = getelementptr inbounds i32, i32* %1, i32 3, !dbg !7433
  %74 = load i32, i32* %73, align 4, !dbg !7433
  %75 = lshr i32 %74, 24, !dbg !7434
  %76 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7435
  %77 = load i8, i8* %76, align 1, !dbg !7436
  %78 = trunc i32 %75 to i8, !dbg !7436
  %79 = xor i8 %77, %78, !dbg !7436
  store i8 %79, i8* %76, align 1, !dbg !7436
  %80 = load i32, i32* %73, align 4, !dbg !7437
  %81 = lshr i32 %80, 16, !dbg !7438
  %82 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7439
  %83 = load i8, i8* %82, align 1, !dbg !7440
  %84 = trunc i32 %81 to i8, !dbg !7440
  %85 = xor i8 %83, %84, !dbg !7440
  store i8 %85, i8* %82, align 1, !dbg !7440
  %86 = load i32, i32* %73, align 4, !dbg !7441
  %87 = lshr i32 %86, 8, !dbg !7442
  %88 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7443
  %89 = load i8, i8* %88, align 1, !dbg !7444
  %90 = trunc i32 %87 to i8, !dbg !7444
  %91 = xor i8 %89, %90, !dbg !7444
  store i8 %91, i8* %88, align 1, !dbg !7444
  %92 = load i32, i32* %73, align 4, !dbg !7445
  %93 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7446
  %94 = load i8, i8* %93, align 1, !dbg !7447
  %95 = trunc i32 %92 to i8, !dbg !7447
  %96 = xor i8 %94, %95, !dbg !7447
  store i8 %96, i8* %93, align 1, !dbg !7447
  ret void, !dbg !7448
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @sub_bytes(i8* nocapture noundef %0) unnamed_addr #14 !dbg !7449 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7451, metadata !DIExpression()), !dbg !7453
  call void @llvm.dbg.value(metadata i32 0, metadata !7452, metadata !DIExpression()), !dbg !7453
  br label %2, !dbg !7454

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %9, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7452, metadata !DIExpression()), !dbg !7453
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7456
  %5 = load i8, i8* %4, align 1, !dbg !7456
  %6 = zext i8 %5 to i32, !dbg !7459
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %6, !dbg !7459
  %8 = load i8, i8* %7, align 1, !dbg !7459
  store i8 %8, i8* %4, align 1, !dbg !7460
  %9 = add nuw nsw i32 %3, 1, !dbg !7461
  call void @llvm.dbg.value(metadata i32 %9, metadata !7452, metadata !DIExpression()), !dbg !7453
  %10 = icmp eq i32 %9, 16, !dbg !7462
  br i1 %10, label %11, label %2, !dbg !7454, !llvm.loop !7463

11:                                               ; preds = %2
  ret void, !dbg !7465
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @shift_rows(i8* noundef %0) unnamed_addr #1 !dbg !7466 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7468, metadata !DIExpression()), !dbg !7470
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7471
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7471
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7469, metadata !DIExpression()), !dbg !7472
  %4 = load i8, i8* %0, align 1, !dbg !7473
  store i8 %4, i8* %3, align 1, !dbg !7474
  %5 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7475
  %6 = load i8, i8* %5, align 1, !dbg !7475
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 1, !dbg !7476
  store i8 %6, i8* %7, align 1, !dbg !7477
  %8 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7478
  %9 = load i8, i8* %8, align 1, !dbg !7478
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 2, !dbg !7479
  store i8 %9, i8* %10, align 1, !dbg !7480
  %11 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7481
  %12 = load i8, i8* %11, align 1, !dbg !7481
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 3, !dbg !7482
  store i8 %12, i8* %13, align 1, !dbg !7483
  %14 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7484
  %15 = load i8, i8* %14, align 1, !dbg !7484
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7485
  store i8 %15, i8* %16, align 1, !dbg !7486
  %17 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7487
  %18 = load i8, i8* %17, align 1, !dbg !7487
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 5, !dbg !7488
  store i8 %18, i8* %19, align 1, !dbg !7489
  %20 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7490
  %21 = load i8, i8* %20, align 1, !dbg !7490
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 6, !dbg !7491
  store i8 %21, i8* %22, align 1, !dbg !7492
  %23 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7493
  %24 = load i8, i8* %23, align 1, !dbg !7493
  %25 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 7, !dbg !7494
  store i8 %24, i8* %25, align 1, !dbg !7495
  %26 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7496
  %27 = load i8, i8* %26, align 1, !dbg !7496
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7497
  store i8 %27, i8* %28, align 1, !dbg !7498
  %29 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7499
  %30 = load i8, i8* %29, align 1, !dbg !7499
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 9, !dbg !7500
  store i8 %30, i8* %31, align 1, !dbg !7501
  %32 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7502
  %33 = load i8, i8* %32, align 1, !dbg !7502
  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 10, !dbg !7503
  store i8 %33, i8* %34, align 1, !dbg !7504
  %35 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7505
  %36 = load i8, i8* %35, align 1, !dbg !7505
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 11, !dbg !7506
  store i8 %36, i8* %37, align 1, !dbg !7507
  %38 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7508
  %39 = load i8, i8* %38, align 1, !dbg !7508
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7509
  store i8 %39, i8* %40, align 1, !dbg !7510
  %41 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7511
  %42 = load i8, i8* %41, align 1, !dbg !7511
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 13, !dbg !7512
  store i8 %42, i8* %43, align 1, !dbg !7513
  %44 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7514
  %45 = load i8, i8* %44, align 1, !dbg !7514
  %46 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 14, !dbg !7515
  store i8 %45, i8* %46, align 1, !dbg !7516
  %47 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7517
  %48 = load i8, i8* %47, align 1, !dbg !7517
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 15, !dbg !7518
  store i8 %48, i8* %49, align 1, !dbg !7519
  %50 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7520
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7521
  ret void, !dbg !7521
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mix_columns(i8* noundef %0) unnamed_addr #1 !dbg !7522 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7524, metadata !DIExpression()), !dbg !7526
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7527
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7527
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7525, metadata !DIExpression()), !dbg !7528
  call fastcc void @mult_row_column.73(i8* noundef nonnull %3, i8* noundef %0) #26, !dbg !7529
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7530
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7531
  call fastcc void @mult_row_column.73(i8* noundef nonnull %4, i8* noundef nonnull %5) #26, !dbg !7532
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7533
  %7 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7534
  call fastcc void @mult_row_column.73(i8* noundef nonnull %6, i8* noundef nonnull %7) #26, !dbg !7535
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7536
  %9 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7537
  call fastcc void @mult_row_column.73(i8* noundef nonnull %8, i8* noundef nonnull %9) #26, !dbg !7538
  %10 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7539
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7540
  ret void, !dbg !7540
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mult_row_column.73(i8* nocapture noundef writeonly %0, i8* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7541 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7543, metadata !DIExpression()), !dbg !7545
  call void @llvm.dbg.value(metadata i8* %1, metadata !7544, metadata !DIExpression()), !dbg !7545
  %3 = load i8, i8* %1, align 1, !dbg !7546
  %4 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %3) #27, !dbg !7547
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7548
  %6 = load i8, i8* %5, align 1, !dbg !7548
  %7 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %6) #27, !dbg !7548
  %8 = load i8, i8* %5, align 1, !dbg !7548
  %9 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !7549
  %10 = load i8, i8* %9, align 1, !dbg !7549
  %11 = getelementptr inbounds i8, i8* %1, i32 3, !dbg !7550
  %12 = load i8, i8* %11, align 1, !dbg !7550
  %13 = xor i8 %7, %4, !dbg !7548
  %14 = xor i8 %13, %8, !dbg !7551
  %15 = xor i8 %14, %10, !dbg !7552
  %16 = xor i8 %15, %12, !dbg !7553
  store i8 %16, i8* %0, align 1, !dbg !7554
  %17 = load i8, i8* %1, align 1, !dbg !7555
  %18 = load i8, i8* %5, align 1, !dbg !7556
  %19 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %18) #27, !dbg !7557
  %20 = load i8, i8* %9, align 1, !dbg !7558
  %21 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %20) #27, !dbg !7558
  %22 = load i8, i8* %9, align 1, !dbg !7558
  %23 = load i8, i8* %11, align 1, !dbg !7559
  %24 = xor i8 %19, %17, !dbg !7558
  %25 = xor i8 %24, %21, !dbg !7560
  %26 = xor i8 %25, %22, !dbg !7561
  %27 = xor i8 %26, %23, !dbg !7562
  %28 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7563
  store i8 %27, i8* %28, align 1, !dbg !7564
  %29 = load i8, i8* %1, align 1, !dbg !7565
  %30 = load i8, i8* %5, align 1, !dbg !7566
  %31 = load i8, i8* %9, align 1, !dbg !7567
  %32 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %31) #27, !dbg !7568
  %33 = load i8, i8* %11, align 1, !dbg !7569
  %34 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %33) #27, !dbg !7569
  %35 = load i8, i8* %11, align 1, !dbg !7569
  %36 = xor i8 %30, %29, !dbg !7569
  %37 = xor i8 %36, %32, !dbg !7570
  %38 = xor i8 %37, %34, !dbg !7571
  %39 = xor i8 %38, %35, !dbg !7572
  %40 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7573
  store i8 %39, i8* %40, align 1, !dbg !7574
  %41 = load i8, i8* %1, align 1, !dbg !7575
  %42 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %41) #27, !dbg !7575
  %43 = load i8, i8* %1, align 1, !dbg !7575
  %44 = xor i8 %43, %42, !dbg !7575
  %45 = load i8, i8* %5, align 1, !dbg !7576
  %46 = xor i8 %44, %45, !dbg !7577
  %47 = load i8, i8* %9, align 1, !dbg !7578
  %48 = xor i8 %46, %47, !dbg !7579
  %49 = load i8, i8* %11, align 1, !dbg !7580
  %50 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %49) #27, !dbg !7581
  %51 = xor i8 %48, %50, !dbg !7582
  %52 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7583
  store i8 %51, i8* %52, align 1, !dbg !7584
  ret void, !dbg !7585
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_cbc_mode_encrypt(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7586 {
  %7 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7592, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.value(metadata i32 %1, metadata !7593, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.value(metadata i8* %2, metadata !7594, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.value(metadata i32 %3, metadata !7595, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.value(metadata i8* %4, metadata !7596, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7597, metadata !DIExpression()), !dbg !7601
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7602
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7602
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7598, metadata !DIExpression()), !dbg !7603
  %9 = icmp eq i8* %0, null, !dbg !7604
  %10 = icmp eq i8* %2, null
  %11 = or i1 %9, %10, !dbg !7606
  %12 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %13 = or i1 %11, %12, !dbg !7606
  %14 = icmp eq i32 %3, 0
  %15 = or i1 %14, %13, !dbg !7606
  %16 = icmp eq i32 %1, 0
  %17 = or i1 %16, %15, !dbg !7606
  %18 = xor i1 %17, true, !dbg !7606
  %19 = or i32 %3, %1, !dbg !7606
  %20 = and i32 %19, 15, !dbg !7606
  %21 = icmp eq i32 %20, 0, !dbg !7606
  %22 = and i1 %21, %18, !dbg !7606
  %23 = add i32 %3, 16
  %24 = icmp eq i32 %23, %1
  %25 = and i1 %24, %22, !dbg !7606
  br i1 %25, label %26, label %52, !dbg !7606

26:                                               ; preds = %6
  %27 = call i32 @_copy(i8* noundef nonnull %8, i32 noundef 16, i8* noundef %4, i32 noundef 16) #27, !dbg !7607
  %28 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef %4, i32 noundef 16) #27, !dbg !7608
  call void @llvm.dbg.value(metadata i8* %0, metadata !7592, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !7601
  call void @llvm.dbg.value(metadata i32 0, metadata !7600, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.value(metadata i32 0, metadata !7599, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.value(metadata i8* %2, metadata !7594, metadata !DIExpression()), !dbg !7601
  br i1 %14, label %52, label %29, !dbg !7609

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !7611
  call void @llvm.dbg.value(metadata i8* %30, metadata !7592, metadata !DIExpression()), !dbg !7601
  br label %31, !dbg !7609

31:                                               ; preds = %29, %47
  %32 = phi i32 [ %49, %47 ], [ 0, %29 ]
  %33 = phi i32 [ %50, %47 ], [ 0, %29 ]
  %34 = phi i8* [ %48, %47 ], [ %30, %29 ]
  %35 = phi i8* [ %36, %47 ], [ %2, %29 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !7600, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.value(metadata i32 %33, metadata !7599, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.value(metadata i8* %34, metadata !7592, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.value(metadata i8* %35, metadata !7594, metadata !DIExpression()), !dbg !7601
  %36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !7612
  call void @llvm.dbg.value(metadata i8* %36, metadata !7594, metadata !DIExpression()), !dbg !7601
  %37 = load i8, i8* %35, align 1, !dbg !7615
  %38 = add i32 %32, 1, !dbg !7616
  call void @llvm.dbg.value(metadata i32 %38, metadata !7600, metadata !DIExpression()), !dbg !7601
  %39 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %32, !dbg !7617
  %40 = load i8, i8* %39, align 1, !dbg !7618
  %41 = xor i8 %40, %37, !dbg !7618
  store i8 %41, i8* %39, align 1, !dbg !7618
  %42 = icmp eq i32 %38, 16, !dbg !7619
  br i1 %42, label %43, label %47, !dbg !7621

43:                                               ; preds = %31
  %44 = call i32 @tc_aes_encrypt(i8* noundef nonnull %8, i8* noundef nonnull %8, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7622
  %45 = call i32 @_copy(i8* noundef %34, i32 noundef 16, i8* noundef nonnull %8, i32 noundef 16) #27, !dbg !7624
  %46 = getelementptr inbounds i8, i8* %34, i32 16, !dbg !7625
  call void @llvm.dbg.value(metadata i8* %46, metadata !7592, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.value(metadata i32 0, metadata !7600, metadata !DIExpression()), !dbg !7601
  br label %47, !dbg !7626

47:                                               ; preds = %31, %43
  %48 = phi i8* [ %46, %43 ], [ %34, %31 ], !dbg !7601
  %49 = phi i32 [ 0, %43 ], [ %38, %31 ], !dbg !7627
  call void @llvm.dbg.value(metadata i32 %49, metadata !7600, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.value(metadata i8* %48, metadata !7592, metadata !DIExpression()), !dbg !7601
  %50 = add nuw i32 %33, 1, !dbg !7628
  call void @llvm.dbg.value(metadata i32 %50, metadata !7599, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.value(metadata i8* %36, metadata !7594, metadata !DIExpression()), !dbg !7601
  %51 = icmp eq i32 %50, %3, !dbg !7629
  br i1 %51, label %52, label %31, !dbg !7609, !llvm.loop !7630

52:                                               ; preds = %47, %26, %6
  %53 = phi i32 [ 0, %6 ], [ 1, %26 ], [ 1, %47 ], !dbg !7601
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7632
  ret i32 %53, !dbg !7632
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_cbc_mode_decrypt(i8* noundef writeonly %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i8* nocapture noundef readonly %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7633 {
  %7 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7635, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i32 %1, metadata !7636, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i8* %2, metadata !7637, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i32 %3, metadata !7638, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i8* %4, metadata !7639, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7640, metadata !DIExpression()), !dbg !7645
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7646
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7646
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7641, metadata !DIExpression()), !dbg !7647
  %9 = icmp eq i8* %0, null, !dbg !7648
  %10 = icmp eq i8* %2, null
  %11 = or i1 %9, %10, !dbg !7650
  %12 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %13 = or i1 %11, %12, !dbg !7650
  %14 = icmp eq i32 %3, 0
  %15 = or i1 %14, %13, !dbg !7650
  %16 = icmp eq i32 %1, 0
  %17 = or i1 %16, %15, !dbg !7650
  %18 = xor i1 %17, true, !dbg !7650
  %19 = or i32 %3, %1, !dbg !7650
  %20 = and i32 %19, 15, !dbg !7650
  %21 = icmp eq i32 %20, 0, !dbg !7650
  %22 = and i1 %21, %18, !dbg !7650
  %23 = icmp eq i32 %1, %3
  %24 = and i1 %23, %22, !dbg !7650
  %25 = xor i1 %24, true, !dbg !7650
  %26 = or i1 %14, %25, !dbg !7650
  %27 = zext i1 %24 to i32, !dbg !7650
  br i1 %26, label %51, label %28, !dbg !7650

28:                                               ; preds = %6, %39
  %29 = phi i32 [ %42, %39 ], [ 0, %6 ]
  %30 = phi i32 [ %49, %39 ], [ 0, %6 ]
  %31 = phi i8* [ %45, %39 ], [ %4, %6 ]
  %32 = phi i8* [ %48, %39 ], [ %0, %6 ]
  %33 = phi i8* [ %40, %39 ], [ %2, %6 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !7644, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i32 %30, metadata !7643, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i8* %31, metadata !7642, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i8* %32, metadata !7635, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i8* %33, metadata !7637, metadata !DIExpression()), !dbg !7645
  %34 = and i32 %30, 15, !dbg !7651
  %35 = icmp eq i32 %34, 0, !dbg !7656
  br i1 %35, label %36, label %39, !dbg !7657

36:                                               ; preds = %28
  %37 = call i32 @tc_aes_decrypt(i8* noundef nonnull %8, i8* noundef %33, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7658
  %38 = getelementptr inbounds i8, i8* %33, i32 16, !dbg !7660
  call void @llvm.dbg.value(metadata i8* %38, metadata !7637, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i32 0, metadata !7644, metadata !DIExpression()), !dbg !7645
  br label %39, !dbg !7661

39:                                               ; preds = %36, %28
  %40 = phi i8* [ %38, %36 ], [ %33, %28 ]
  %41 = phi i32 [ 0, %36 ], [ %29, %28 ], !dbg !7662
  call void @llvm.dbg.value(metadata i32 %41, metadata !7644, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i8* %40, metadata !7637, metadata !DIExpression()), !dbg !7645
  %42 = add i32 %41, 1, !dbg !7663
  call void @llvm.dbg.value(metadata i32 %42, metadata !7644, metadata !DIExpression()), !dbg !7645
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %41, !dbg !7664
  %44 = load i8, i8* %43, align 1, !dbg !7664
  %45 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !7665
  call void @llvm.dbg.value(metadata i8* %45, metadata !7642, metadata !DIExpression()), !dbg !7645
  %46 = load i8, i8* %31, align 1, !dbg !7666
  %47 = xor i8 %46, %44, !dbg !7667
  %48 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !7668
  call void @llvm.dbg.value(metadata i8* %48, metadata !7635, metadata !DIExpression()), !dbg !7645
  store i8 %47, i8* %32, align 1, !dbg !7669
  %49 = add nuw i32 %30, 1, !dbg !7670
  call void @llvm.dbg.value(metadata i32 %49, metadata !7643, metadata !DIExpression()), !dbg !7645
  %50 = icmp eq i32 %49, %3, !dbg !7671
  br i1 %50, label %51, label %28, !dbg !7672, !llvm.loop !7673

51:                                               ; preds = %39, %6
  %52 = phi i32 [ %27, %6 ], [ 1, %39 ], !dbg !7645
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7675
  ret i32 %52, !dbg !7675
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ctr_mode(i8* noundef writeonly %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7676 {
  %7 = alloca [16 x i8], align 1
  %8 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7682, metadata !DIExpression()), !dbg !7692
  call void @llvm.dbg.value(metadata i32 %1, metadata !7683, metadata !DIExpression()), !dbg !7692
  call void @llvm.dbg.value(metadata i8* %2, metadata !7684, metadata !DIExpression()), !dbg !7692
  call void @llvm.dbg.value(metadata i32 %3, metadata !7685, metadata !DIExpression()), !dbg !7692
  call void @llvm.dbg.value(metadata i8* %4, metadata !7686, metadata !DIExpression()), !dbg !7692
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7687, metadata !DIExpression()), !dbg !7692
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7693
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #25, !dbg !7693
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7688, metadata !DIExpression()), !dbg !7694
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7695
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !7695
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7689, metadata !DIExpression()), !dbg !7696
  %11 = icmp eq i8* %0, null, !dbg !7697
  %12 = icmp eq i8* %2, null
  %13 = or i1 %11, %12, !dbg !7699
  %14 = icmp eq i8* %4, null
  %15 = or i1 %13, %14, !dbg !7699
  %16 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %17 = or i1 %15, %16, !dbg !7699
  %18 = icmp eq i32 %3, 0
  %19 = or i1 %18, %17, !dbg !7699
  %20 = icmp eq i32 %1, 0
  %21 = or i1 %20, %19, !dbg !7699
  %22 = icmp ne i32 %1, %3
  %23 = or i1 %22, %21, !dbg !7699
  br i1 %23, label %86, label %24, !dbg !7699

24:                                               ; preds = %6
  %25 = call i32 @_copy(i8* noundef nonnull %10, i32 noundef 16, i8* noundef nonnull %4, i32 noundef 16) #27, !dbg !7700
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 12, !dbg !7701
  %27 = load i8, i8* %26, align 1, !dbg !7701
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 13, !dbg !7702
  %29 = load i8, i8* %28, align 1, !dbg !7702
  %30 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !7703
  %31 = load i8, i8* %30, align 1, !dbg !7703
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !7704
  %33 = load i8, i8* %32, align 1, !dbg !7704
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i8 %27), metadata !7690, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7692
  call void @llvm.dbg.value(metadata i32 0, metadata !7691, metadata !DIExpression()), !dbg !7692
  call void @llvm.dbg.value(metadata i8* %0, metadata !7682, metadata !DIExpression()), !dbg !7692
  call void @llvm.dbg.value(metadata i8* %2, metadata !7684, metadata !DIExpression()), !dbg !7692
  %34 = zext i8 %29 to i32, !dbg !7702
  call void @llvm.dbg.value(metadata !DIArgList(i32 %34, i8 %33, i8 %31, i8 %27), metadata !7690, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7692
  %35 = shl nuw nsw i32 %34, 16, !dbg !7705
  call void @llvm.dbg.value(metadata !DIArgList(i32 %35, i8 %33, i8 %31, i8 %27), metadata !7690, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7692
  %36 = zext i8 %27 to i32, !dbg !7701
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i32 %36), metadata !7690, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7692
  %37 = shl nuw i32 %36, 24, !dbg !7706
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i32 %37), metadata !7690, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7692
  %38 = or i32 %35, %37, !dbg !7707
  call void @llvm.dbg.value(metadata !DIArgList(i32 %38, i8 %33, i8 %31), metadata !7690, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7692
  %39 = zext i8 %31 to i32, !dbg !7703
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i32 %39, i8 %27), metadata !7690, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7692
  %40 = shl nuw nsw i32 %39, 8, !dbg !7708
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i32 %40, i8 %27), metadata !7690, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7692
  %41 = or i32 %38, %40, !dbg !7709
  call void @llvm.dbg.value(metadata !DIArgList(i32 %41, i8 %33), metadata !7690, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7692
  %42 = zext i8 %33 to i32, !dbg !7710
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i32 %42, i8 %31, i8 %27), metadata !7690, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7692
  %43 = or i32 %41, %42, !dbg !7711
  call void @llvm.dbg.value(metadata i32 %43, metadata !7690, metadata !DIExpression()), !dbg !7692
  br label %44, !dbg !7712

44:                                               ; preds = %24, %67
  %45 = phi i8 [ %68, %67 ], [ %33, %24 ]
  %46 = phi i8 [ %69, %67 ], [ %31, %24 ]
  %47 = phi i8 [ %70, %67 ], [ %29, %24 ]
  %48 = phi i8 [ %71, %67 ], [ %27, %24 ]
  %49 = phi i32 [ %79, %67 ], [ 0, %24 ]
  %50 = phi i32 [ %72, %67 ], [ %43, %24 ]
  %51 = phi i8* [ %78, %67 ], [ %0, %24 ]
  %52 = phi i8* [ %75, %67 ], [ %2, %24 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !7691, metadata !DIExpression()), !dbg !7692
  call void @llvm.dbg.value(metadata i32 %50, metadata !7690, metadata !DIExpression()), !dbg !7692
  call void @llvm.dbg.value(metadata i8* %51, metadata !7682, metadata !DIExpression()), !dbg !7692
  call void @llvm.dbg.value(metadata i8* %52, metadata !7684, metadata !DIExpression()), !dbg !7692
  %53 = and i32 %49, 15, !dbg !7714
  %54 = icmp eq i32 %53, 0, !dbg !7718
  br i1 %54, label %55, label %67, !dbg !7719

55:                                               ; preds = %44
  %56 = call i32 @tc_aes_encrypt(i8* noundef nonnull %9, i8* noundef nonnull %10, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7720
  %57 = icmp eq i32 %56, 0, !dbg !7720
  br i1 %57, label %86, label %58, !dbg !7723

58:                                               ; preds = %55
  %59 = add i32 %50, 1, !dbg !7724
  call void @llvm.dbg.value(metadata i32 %59, metadata !7690, metadata !DIExpression()), !dbg !7692
  %60 = lshr i32 %59, 24, !dbg !7726
  %61 = trunc i32 %60 to i8, !dbg !7727
  store i8 %61, i8* %26, align 1, !dbg !7728
  %62 = lshr i32 %59, 16, !dbg !7729
  %63 = trunc i32 %62 to i8, !dbg !7730
  store i8 %63, i8* %28, align 1, !dbg !7731
  %64 = lshr i32 %59, 8, !dbg !7732
  %65 = trunc i32 %64 to i8, !dbg !7733
  store i8 %65, i8* %30, align 1, !dbg !7734
  %66 = trunc i32 %59 to i8, !dbg !7735
  store i8 %66, i8* %32, align 1, !dbg !7736
  br label %67, !dbg !7737

67:                                               ; preds = %58, %44
  %68 = phi i8 [ %66, %58 ], [ %45, %44 ]
  %69 = phi i8 [ %65, %58 ], [ %46, %44 ]
  %70 = phi i8 [ %63, %58 ], [ %47, %44 ]
  %71 = phi i8 [ %61, %58 ], [ %48, %44 ]
  %72 = phi i32 [ %59, %58 ], [ %50, %44 ], !dbg !7692
  call void @llvm.dbg.value(metadata i32 %72, metadata !7690, metadata !DIExpression()), !dbg !7692
  %73 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %53, !dbg !7738
  %74 = load i8, i8* %73, align 1, !dbg !7738
  %75 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !7739
  call void @llvm.dbg.value(metadata i8* %75, metadata !7684, metadata !DIExpression()), !dbg !7692
  %76 = load i8, i8* %52, align 1, !dbg !7740
  %77 = xor i8 %76, %74, !dbg !7741
  %78 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !7742
  call void @llvm.dbg.value(metadata i8* %78, metadata !7682, metadata !DIExpression()), !dbg !7692
  store i8 %77, i8* %51, align 1, !dbg !7743
  %79 = add nuw i32 %49, 1, !dbg !7744
  call void @llvm.dbg.value(metadata i32 %79, metadata !7691, metadata !DIExpression()), !dbg !7692
  %80 = icmp eq i32 %79, %3, !dbg !7745
  br i1 %80, label %81, label %44, !dbg !7712, !llvm.loop !7746

81:                                               ; preds = %67
  %82 = getelementptr inbounds i8, i8* %4, i32 12, !dbg !7748
  store i8 %71, i8* %82, align 1, !dbg !7749
  %83 = getelementptr inbounds i8, i8* %4, i32 13, !dbg !7750
  store i8 %70, i8* %83, align 1, !dbg !7751
  %84 = getelementptr inbounds i8, i8* %4, i32 14, !dbg !7752
  store i8 %69, i8* %84, align 1, !dbg !7753
  %85 = getelementptr inbounds i8, i8* %4, i32 15, !dbg !7754
  store i8 %68, i8* %85, align 1, !dbg !7755
  br label %86, !dbg !7756

86:                                               ; preds = %55, %6, %81
  %87 = phi i32 [ 1, %81 ], [ 0, %6 ], [ 0, %55 ], !dbg !7692
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !7757
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #25, !dbg !7757
  ret i32 %87, !dbg !7757
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef writeonly %0, %struct.tc_aes_key_sched_struct* noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #9 !dbg !7758 {
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %0, metadata !7763, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %1, metadata !7764, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata i8* %2, metadata !7765, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata i32 %3, metadata !7766, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata i32 %4, metadata !7767, metadata !DIExpression()), !dbg !7768
  %6 = icmp eq %struct.tc_ccm_mode_struct* %0, null, !dbg !7769
  %7 = icmp eq %struct.tc_aes_key_sched_struct* %1, null
  %8 = or i1 %6, %7, !dbg !7771
  %9 = icmp eq i8* %2, null
  %10 = or i1 %8, %9, !dbg !7771
  %11 = icmp ne i32 %3, 13
  %12 = or i1 %10, %11, !dbg !7771
  br i1 %12, label %23, label %13, !dbg !7771

13:                                               ; preds = %5
  %14 = add i32 %4, -4, !dbg !7772
  %15 = icmp ult i32 %14, 13, !dbg !7772
  %16 = and i32 %4, 1
  %17 = icmp eq i32 %16, 0
  %18 = and i1 %15, %17, !dbg !7772
  br i1 %18, label %19, label %23, !dbg !7772

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 2, !dbg !7775
  store i32 %4, i32* %20, align 4, !dbg !7776
  %21 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 0, !dbg !7777
  store %struct.tc_aes_key_sched_struct* %1, %struct.tc_aes_key_sched_struct** %21, align 4, !dbg !7778
  %22 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 1, !dbg !7779
  store i8* %2, i8** %22, align 4, !dbg !7780
  br label %23, !dbg !7781

23:                                               ; preds = %13, %5, %19
  %24 = phi i32 [ 1, %19 ], [ 0, %5 ], [ 0, %13 ], !dbg !7768
  ret i32 %24, !dbg !7782
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ccm_generation_encryption(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, %struct.tc_ccm_mode_struct* noundef readonly %6) local_unnamed_addr #1 !dbg !7783 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7787, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.value(metadata i32 %1, metadata !7788, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.value(metadata i8* %2, metadata !7789, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.value(metadata i32 %3, metadata !7790, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.value(metadata i8* %4, metadata !7791, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.value(metadata i32 %5, metadata !7792, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %6, metadata !7793, metadata !DIExpression()), !dbg !7797
  %10 = icmp eq i8* %0, null, !dbg !7798
  %11 = icmp eq %struct.tc_ccm_mode_struct* %6, null
  %12 = or i1 %10, %11, !dbg !7800
  br i1 %12, label %85, label %13, !dbg !7800

13:                                               ; preds = %7
  %14 = icmp ne i32 %5, 0, !dbg !7801
  %15 = icmp eq i8* %4, null
  %16 = and i1 %15, %14, !dbg !7802
  br i1 %16, label %85, label %17, !dbg !7802

17:                                               ; preds = %13
  %18 = icmp ne i32 %3, 0, !dbg !7803
  %19 = icmp eq i8* %2, null
  %20 = and i1 %19, %18, !dbg !7804
  %21 = icmp ugt i32 %3, 65279
  %22 = or i1 %21, %20, !dbg !7804
  %23 = icmp ugt i32 %5, 65535
  %24 = or i1 %22, %23, !dbg !7804
  br i1 %24, label %85, label %25, !dbg !7804

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 2, !dbg !7805
  %27 = load i32, i32* %26, align 4, !dbg !7805
  %28 = add i32 %27, %5, !dbg !7806
  %29 = icmp ugt i32 %28, %1, !dbg !7807
  br i1 %29, label %85, label %30, !dbg !7808

30:                                               ; preds = %25
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7809
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !7809
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7794, metadata !DIExpression()), !dbg !7810
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !7811
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #25, !dbg !7811
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !7795, metadata !DIExpression()), !dbg !7812
  %33 = select i1 %18, i32 64, i32 0, !dbg !7813
  %34 = shl i32 %27, 2, !dbg !7814
  %35 = add i32 %34, 248, !dbg !7814
  %36 = and i32 %35, 248, !dbg !7814
  %37 = or i32 %36, %33, !dbg !7815
  %38 = trunc i32 %37 to i8, !dbg !7816
  %39 = or i8 %38, 1, !dbg !7816
  store i8 %39, i8* %31, align 1, !dbg !7817
  call void @llvm.dbg.value(metadata i32 1, metadata !7796, metadata !DIExpression()), !dbg !7797
  %40 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 1
  %41 = load i8*, i8** %40, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !7796, metadata !DIExpression()), !dbg !7797
  br label %42, !dbg !7818

42:                                               ; preds = %30, %42
  %43 = phi i32 [ 1, %30 ], [ %48, %42 ]
  call void @llvm.dbg.value(metadata i32 %43, metadata !7796, metadata !DIExpression()), !dbg !7797
  %44 = add nsw i32 %43, -1, !dbg !7820
  %45 = getelementptr inbounds i8, i8* %41, i32 %44, !dbg !7823
  %46 = load i8, i8* %45, align 1, !dbg !7823
  %47 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %43, !dbg !7824
  store i8 %46, i8* %47, align 1, !dbg !7825
  %48 = add nuw nsw i32 %43, 1, !dbg !7826
  call void @llvm.dbg.value(metadata i32 %48, metadata !7796, metadata !DIExpression()), !dbg !7797
  %49 = icmp eq i32 %48, 14, !dbg !7827
  br i1 %49, label %50, label %42, !dbg !7818, !llvm.loop !7828

50:                                               ; preds = %42
  %51 = lshr i32 %5, 8, !dbg !7830
  %52 = trunc i32 %51 to i8, !dbg !7831
  %53 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !7832
  store i8 %52, i8* %53, align 1, !dbg !7833
  %54 = trunc i32 %5 to i8, !dbg !7834
  %55 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !7835
  store i8 %54, i8* %55, align 1, !dbg !7836
  %56 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 0, !dbg !7837
  %57 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7837
  %58 = call i32 @tc_aes_encrypt(i8* noundef nonnull %32, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %57) #27, !dbg !7838
  br i1 %18, label %59, label %61, !dbg !7839

59:                                               ; preds = %50
  %60 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7840
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %32, i8* noundef %2, i32 noundef %3, i32 noundef 1, %struct.tc_aes_key_sched_struct* noundef %60) #26, !dbg !7843
  br label %61, !dbg !7844

61:                                               ; preds = %59, %50
  br i1 %14, label %62, label %64, !dbg !7845

62:                                               ; preds = %61
  %63 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7846
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %32, i8* noundef %4, i32 noundef %5, i32 noundef 0, %struct.tc_aes_key_sched_struct* noundef %63) #26, !dbg !7849
  br label %64, !dbg !7850

64:                                               ; preds = %62, %61
  store i8 1, i8* %31, align 1, !dbg !7851
  store i8 0, i8* %55, align 1, !dbg !7852
  store i8 0, i8* %53, align 1, !dbg !7853
  %65 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7854
  call fastcc void @ccm_ctr_mode(i8* noundef %0, i32 noundef %5, i8* noundef %4, i32 noundef %5, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %65) #26, !dbg !7855
  store i8 0, i8* %55, align 1, !dbg !7856
  store i8 0, i8* %53, align 1, !dbg !7857
  %66 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7858
  %67 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %66) #27, !dbg !7859
  call void @llvm.dbg.value(metadata !DIArgList(i8* %0, i32 %5), metadata !7787, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !7797
  call void @llvm.dbg.value(metadata i32 0, metadata !7796, metadata !DIExpression()), !dbg !7797
  %68 = load i32, i32* %26, align 4, !dbg !7860
  %69 = icmp eq i32 %68, 0, !dbg !7863
  br i1 %69, label %84, label %70, !dbg !7864

70:                                               ; preds = %64
  %71 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7865
  call void @llvm.dbg.value(metadata i8* %71, metadata !7787, metadata !DIExpression()), !dbg !7797
  br label %72, !dbg !7864

72:                                               ; preds = %70, %72
  %73 = phi i32 [ %81, %72 ], [ 0, %70 ]
  %74 = phi i8* [ %80, %72 ], [ %71, %70 ]
  call void @llvm.dbg.value(metadata i32 %73, metadata !7796, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.value(metadata i8* %74, metadata !7787, metadata !DIExpression()), !dbg !7797
  %75 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %73, !dbg !7866
  %76 = load i8, i8* %75, align 1, !dbg !7866
  %77 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %73, !dbg !7868
  %78 = load i8, i8* %77, align 1, !dbg !7868
  %79 = xor i8 %78, %76, !dbg !7869
  %80 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !7870
  call void @llvm.dbg.value(metadata i8* %80, metadata !7787, metadata !DIExpression()), !dbg !7797
  store i8 %79, i8* %74, align 1, !dbg !7871
  %81 = add nuw i32 %73, 1, !dbg !7872
  call void @llvm.dbg.value(metadata i32 %81, metadata !7796, metadata !DIExpression()), !dbg !7797
  %82 = load i32, i32* %26, align 4, !dbg !7860
  %83 = icmp ult i32 %81, %82, !dbg !7863
  br i1 %83, label %72, label %84, !dbg !7864, !llvm.loop !7873

84:                                               ; preds = %72, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #25, !dbg !7875
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !7875
  br label %85

85:                                               ; preds = %7, %25, %13, %17, %84
  %86 = phi i32 [ 1, %84 ], [ 0, %17 ], [ 0, %13 ], [ 0, %25 ], [ 0, %7 ], !dbg !7797
  ret i32 %86, !dbg !7875
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ccm_cbc_mac(i8* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, %struct.tc_aes_key_sched_struct* noundef %4) unnamed_addr #1 !dbg !7876 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7880, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata i8* %1, metadata !7881, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata i32 %2, metadata !7882, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata i32 %3, metadata !7883, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %4, metadata !7884, metadata !DIExpression()), !dbg !7886
  %6 = icmp eq i32 %3, 0, !dbg !7887
  br i1 %6, label %17, label %7, !dbg !7889

7:                                                ; preds = %5
  %8 = lshr i32 %2, 8, !dbg !7890
  %9 = load i8, i8* %0, align 1, !dbg !7892
  %10 = trunc i32 %8 to i8, !dbg !7892
  %11 = xor i8 %9, %10, !dbg !7892
  store i8 %11, i8* %0, align 1, !dbg !7892
  %12 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7893
  %13 = load i8, i8* %12, align 1, !dbg !7894
  %14 = trunc i32 %2 to i8, !dbg !7894
  %15 = xor i8 %13, %14, !dbg !7894
  store i8 %15, i8* %12, align 1, !dbg !7894
  %16 = add i32 %2, 2, !dbg !7895
  call void @llvm.dbg.value(metadata i32 %16, metadata !7882, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata i32 2, metadata !7885, metadata !DIExpression()), !dbg !7886
  br label %17, !dbg !7896

17:                                               ; preds = %5, %7
  %18 = phi i32 [ %16, %7 ], [ %2, %5 ]
  %19 = phi i32 [ 2, %7 ], [ 0, %5 ], !dbg !7897
  call void @llvm.dbg.value(metadata i32 %19, metadata !7885, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata i32 %18, metadata !7882, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata i8* %1, metadata !7881, metadata !DIExpression()), !dbg !7886
  %20 = icmp ult i32 %19, %18, !dbg !7898
  br i1 %20, label %21, label %39, !dbg !7899

21:                                               ; preds = %17, %37
  %22 = phi i32 [ %26, %37 ], [ %19, %17 ]
  %23 = phi i8* [ %24, %37 ], [ %1, %17 ]
  call void @llvm.dbg.value(metadata i32 %22, metadata !7885, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata i8* %23, metadata !7881, metadata !DIExpression()), !dbg !7886
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7900
  call void @llvm.dbg.value(metadata i8* %24, metadata !7881, metadata !DIExpression()), !dbg !7886
  %25 = load i8, i8* %23, align 1, !dbg !7902
  %26 = add i32 %22, 1, !dbg !7903
  call void @llvm.dbg.value(metadata i32 %26, metadata !7885, metadata !DIExpression()), !dbg !7886
  %27 = and i32 %22, 15, !dbg !7904
  %28 = getelementptr inbounds i8, i8* %0, i32 %27, !dbg !7905
  %29 = load i8, i8* %28, align 1, !dbg !7906
  %30 = xor i8 %29, %25, !dbg !7906
  store i8 %30, i8* %28, align 1, !dbg !7906
  %31 = and i32 %26, 15, !dbg !7907
  %32 = icmp eq i32 %31, 0, !dbg !7909
  %33 = icmp eq i32 %18, %26
  %34 = or i1 %33, %32, !dbg !7910
  br i1 %34, label %35, label %37, !dbg !7910

35:                                               ; preds = %21
  %36 = tail call i32 @tc_aes_encrypt(i8* noundef nonnull %0, i8* noundef nonnull %0, %struct.tc_aes_key_sched_struct* noundef %4) #27, !dbg !7911
  br label %37, !dbg !7913

37:                                               ; preds = %21, %35
  call void @llvm.dbg.value(metadata i32 %26, metadata !7885, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata i8* %24, metadata !7881, metadata !DIExpression()), !dbg !7886
  %38 = icmp eq i32 %26, %18, !dbg !7898
  br i1 %38, label %39, label %21, !dbg !7899, !llvm.loop !7914

39:                                               ; preds = %37, %17
  ret void, !dbg !7916
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ccm_ctr_mode(i8* noundef writeonly %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) unnamed_addr #1 !dbg !7917 {
  %7 = alloca [16 x i8], align 1
  %8 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7922, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i32 %1, metadata !7923, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i8* %2, metadata !7924, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i32 %3, metadata !7925, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i8* %4, metadata !7926, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7927, metadata !DIExpression()), !dbg !7932
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7933
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #25, !dbg !7933
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7928, metadata !DIExpression()), !dbg !7934
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7935
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !7935
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7929, metadata !DIExpression()), !dbg !7936
  %11 = icmp eq i8* %0, null, !dbg !7937
  %12 = icmp eq i8* %2, null
  %13 = or i1 %11, %12, !dbg !7939
  %14 = icmp eq i8* %4, null
  %15 = or i1 %13, %14, !dbg !7939
  %16 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %17 = or i1 %15, %16, !dbg !7939
  %18 = icmp eq i32 %3, 0
  %19 = or i1 %18, %17, !dbg !7939
  %20 = icmp eq i32 %1, 0
  %21 = or i1 %20, %19, !dbg !7939
  %22 = icmp ne i32 %1, %3
  %23 = or i1 %22, %21, !dbg !7939
  br i1 %23, label %63, label %24, !dbg !7939

24:                                               ; preds = %6
  %25 = call i32 @_copy(i8* noundef nonnull %10, i32 noundef 16, i8* noundef nonnull %4, i32 noundef 16) #27, !dbg !7940
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !7941
  %27 = load i8, i8* %26, align 1, !dbg !7941
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !7942
  %29 = load i8, i8* %28, align 1, !dbg !7942
  call void @llvm.dbg.value(metadata !DIArgList(i8 %27, i8 %29), metadata !7930, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7932
  call void @llvm.dbg.value(metadata i32 0, metadata !7931, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i8* %0, metadata !7922, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i8* %2, metadata !7924, metadata !DIExpression()), !dbg !7932
  %30 = zext i8 %27 to i16, !dbg !7941
  call void @llvm.dbg.value(metadata !DIArgList(i16 %30, i8 %29), metadata !7930, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7932
  %31 = shl nuw i16 %30, 8, !dbg !7943
  call void @llvm.dbg.value(metadata !DIArgList(i16 %31, i8 %29), metadata !7930, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7932
  %32 = zext i8 %29 to i16, !dbg !7944
  call void @llvm.dbg.value(metadata !DIArgList(i8 %27, i16 %32), metadata !7930, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7932
  %33 = or i16 %31, %32, !dbg !7945
  call void @llvm.dbg.value(metadata i16 %33, metadata !7930, metadata !DIExpression()), !dbg !7932
  br label %34, !dbg !7946

34:                                               ; preds = %24, %48
  %35 = phi i32 [ %56, %48 ], [ 0, %24 ]
  %36 = phi i16 [ %49, %48 ], [ %33, %24 ]
  %37 = phi i8* [ %55, %48 ], [ %0, %24 ]
  %38 = phi i8* [ %52, %48 ], [ %2, %24 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !7931, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i16 %36, metadata !7930, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i8* %37, metadata !7922, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i8* %38, metadata !7924, metadata !DIExpression()), !dbg !7932
  %39 = and i32 %35, 15, !dbg !7948
  %40 = icmp eq i32 %39, 0, !dbg !7952
  br i1 %40, label %41, label %48, !dbg !7953

41:                                               ; preds = %34
  %42 = add i16 %36, 1, !dbg !7954
  call void @llvm.dbg.value(metadata i16 %42, metadata !7930, metadata !DIExpression()), !dbg !7932
  %43 = lshr i16 %42, 8, !dbg !7956
  %44 = trunc i16 %43 to i8, !dbg !7957
  store i8 %44, i8* %26, align 1, !dbg !7958
  %45 = trunc i16 %42 to i8, !dbg !7959
  store i8 %45, i8* %28, align 1, !dbg !7960
  %46 = call i32 @tc_aes_encrypt(i8* noundef nonnull %9, i8* noundef nonnull %10, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7961
  %47 = icmp eq i32 %46, 0, !dbg !7961
  br i1 %47, label %63, label %48, !dbg !7963

48:                                               ; preds = %41, %34
  %49 = phi i16 [ %42, %41 ], [ %36, %34 ], !dbg !7932
  call void @llvm.dbg.value(metadata i16 %49, metadata !7930, metadata !DIExpression()), !dbg !7932
  %50 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %39, !dbg !7964
  %51 = load i8, i8* %50, align 1, !dbg !7964
  %52 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !7965
  call void @llvm.dbg.value(metadata i8* %52, metadata !7924, metadata !DIExpression()), !dbg !7932
  %53 = load i8, i8* %38, align 1, !dbg !7966
  %54 = xor i8 %53, %51, !dbg !7967
  %55 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !7968
  call void @llvm.dbg.value(metadata i8* %55, metadata !7922, metadata !DIExpression()), !dbg !7932
  store i8 %54, i8* %37, align 1, !dbg !7969
  %56 = add nuw i32 %35, 1, !dbg !7970
  call void @llvm.dbg.value(metadata i32 %56, metadata !7931, metadata !DIExpression()), !dbg !7932
  %57 = icmp eq i32 %56, %3, !dbg !7971
  br i1 %57, label %58, label %34, !dbg !7946, !llvm.loop !7972

58:                                               ; preds = %48
  %59 = load i8, i8* %26, align 1, !dbg !7974
  %60 = load i8, i8* %28, align 1, !dbg !7975
  %61 = getelementptr inbounds i8, i8* %4, i32 14, !dbg !7976
  store i8 %59, i8* %61, align 1, !dbg !7977
  %62 = getelementptr inbounds i8, i8* %4, i32 15, !dbg !7978
  store i8 %60, i8* %62, align 1, !dbg !7979
  br label %63, !dbg !7980

63:                                               ; preds = %41, %6, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !7981
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #25, !dbg !7981
  ret void, !dbg !7981
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ccm_decryption_verification(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, %struct.tc_ccm_mode_struct* noundef readonly %6) local_unnamed_addr #1 !dbg !7982 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7984, metadata !DIExpression()), !dbg !7994
  call void @llvm.dbg.value(metadata i32 %1, metadata !7985, metadata !DIExpression()), !dbg !7994
  call void @llvm.dbg.value(metadata i8* %2, metadata !7986, metadata !DIExpression()), !dbg !7994
  call void @llvm.dbg.value(metadata i32 %3, metadata !7987, metadata !DIExpression()), !dbg !7994
  call void @llvm.dbg.value(metadata i8* %4, metadata !7988, metadata !DIExpression()), !dbg !7994
  call void @llvm.dbg.value(metadata i32 %5, metadata !7989, metadata !DIExpression()), !dbg !7994
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %6, metadata !7990, metadata !DIExpression()), !dbg !7994
  %10 = icmp eq i8* %0, null, !dbg !7995
  %11 = icmp eq %struct.tc_ccm_mode_struct* %6, null
  %12 = or i1 %10, %11, !dbg !7997
  br i1 %12, label %106, label %13, !dbg !7997

13:                                               ; preds = %7
  %14 = icmp ne i32 %5, 0, !dbg !7998
  %15 = icmp eq i8* %4, null
  %16 = and i1 %15, %14, !dbg !7999
  br i1 %16, label %106, label %17, !dbg !7999

17:                                               ; preds = %13
  %18 = icmp ne i32 %3, 0, !dbg !8000
  %19 = icmp eq i8* %2, null
  %20 = and i1 %19, %18, !dbg !8001
  %21 = icmp ugt i32 %3, 65279
  %22 = or i1 %21, %20, !dbg !8001
  %23 = icmp ugt i32 %5, 65535
  %24 = or i1 %22, %23, !dbg !8001
  br i1 %24, label %106, label %25, !dbg !8001

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 2, !dbg !8002
  %27 = load i32, i32* %26, align 4, !dbg !8002
  %28 = sub i32 %5, %27, !dbg !8003
  %29 = icmp ugt i32 %28, %1, !dbg !8004
  br i1 %29, label %106, label %30, !dbg !8005

30:                                               ; preds = %25
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !8006
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !8006
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7991, metadata !DIExpression()), !dbg !8007
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !8008
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #25, !dbg !8008
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !7992, metadata !DIExpression()), !dbg !8009
  store i8 1, i8* %31, align 1, !dbg !8010
  call void @llvm.dbg.value(metadata i32 1, metadata !7993, metadata !DIExpression()), !dbg !7994
  %33 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 1
  %34 = load i8*, i8** %33, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !7993, metadata !DIExpression()), !dbg !7994
  br label %35, !dbg !8011

35:                                               ; preds = %30, %35
  %36 = phi i32 [ 1, %30 ], [ %41, %35 ]
  call void @llvm.dbg.value(metadata i32 %36, metadata !7993, metadata !DIExpression()), !dbg !7994
  %37 = add nsw i32 %36, -1, !dbg !8013
  %38 = getelementptr inbounds i8, i8* %34, i32 %37, !dbg !8016
  %39 = load i8, i8* %38, align 1, !dbg !8016
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %36, !dbg !8017
  store i8 %39, i8* %40, align 1, !dbg !8018
  %41 = add nuw nsw i32 %36, 1, !dbg !8019
  call void @llvm.dbg.value(metadata i32 %41, metadata !7993, metadata !DIExpression()), !dbg !7994
  %42 = icmp eq i32 %41, 14, !dbg !8020
  br i1 %42, label %43, label %35, !dbg !8011, !llvm.loop !8021

43:                                               ; preds = %35
  %44 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !8023
  store i8 0, i8* %44, align 1, !dbg !8024
  %45 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !8025
  store i8 0, i8* %45, align 1, !dbg !8026
  %46 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 0, !dbg !8027
  %47 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8027
  call fastcc void @ccm_ctr_mode(i8* noundef %0, i32 noundef %28, i8* noundef %4, i32 noundef %28, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %47) #26, !dbg !8028
  store i8 0, i8* %44, align 1, !dbg !8029
  store i8 0, i8* %45, align 1, !dbg !8030
  %48 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8031
  %49 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %48) #27, !dbg !8032
  call void @llvm.dbg.value(metadata i32 0, metadata !7993, metadata !DIExpression()), !dbg !7994
  %50 = load i32, i32* %26, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !7993, metadata !DIExpression()), !dbg !7994
  %51 = icmp eq i32 %50, 0, !dbg !8033
  br i1 %51, label %66, label %52, !dbg !8036

52:                                               ; preds = %43
  %53 = getelementptr inbounds i8, i8* %4, i32 %5
  %54 = sub i32 0, %50
  %55 = getelementptr inbounds i8, i8* %53, i32 %54
  br label %56, !dbg !8036

56:                                               ; preds = %52, %56
  %57 = phi i32 [ 0, %52 ], [ %64, %56 ]
  call void @llvm.dbg.value(metadata i32 %57, metadata !7993, metadata !DIExpression()), !dbg !7994
  %58 = getelementptr inbounds i8, i8* %55, i32 %57, !dbg !8037
  %59 = load i8, i8* %58, align 1, !dbg !8039
  %60 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %57, !dbg !8040
  %61 = load i8, i8* %60, align 1, !dbg !8040
  %62 = xor i8 %61, %59, !dbg !8041
  %63 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %57, !dbg !8042
  store i8 %62, i8* %63, align 1, !dbg !8043
  %64 = add nuw i32 %57, 1, !dbg !8044
  call void @llvm.dbg.value(metadata i32 %64, metadata !7993, metadata !DIExpression()), !dbg !7994
  %65 = icmp eq i32 %64, %50, !dbg !8033
  br i1 %65, label %66, label %56, !dbg !8036, !llvm.loop !8045

66:                                               ; preds = %56, %43
  %67 = select i1 %18, i32 64, i32 0, !dbg !8047
  %68 = shl i32 %50, 2, !dbg !8048
  %69 = add i32 %68, 248, !dbg !8048
  %70 = and i32 %69, 248, !dbg !8048
  %71 = or i32 %70, %67, !dbg !8049
  %72 = trunc i32 %71 to i8, !dbg !8050
  %73 = or i8 %72, 1, !dbg !8050
  store i8 %73, i8* %31, align 1, !dbg !8051
  call void @llvm.dbg.value(metadata i32 1, metadata !7993, metadata !DIExpression()), !dbg !7994
  %74 = load i8*, i8** %33, align 4
  br label %75, !dbg !8052

75:                                               ; preds = %66, %75
  %76 = phi i32 [ 1, %66 ], [ %81, %75 ]
  call void @llvm.dbg.value(metadata i32 %76, metadata !7993, metadata !DIExpression()), !dbg !7994
  %77 = add nsw i32 %76, -1, !dbg !8054
  %78 = getelementptr inbounds i8, i8* %74, i32 %77, !dbg !8057
  %79 = load i8, i8* %78, align 1, !dbg !8057
  %80 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %76, !dbg !8058
  store i8 %79, i8* %80, align 1, !dbg !8059
  %81 = add nuw nsw i32 %76, 1, !dbg !8060
  call void @llvm.dbg.value(metadata i32 %81, metadata !7993, metadata !DIExpression()), !dbg !7994
  %82 = icmp eq i32 %81, 14, !dbg !8061
  br i1 %82, label %83, label %75, !dbg !8052, !llvm.loop !8062

83:                                               ; preds = %75
  %84 = sub i32 %5, %50, !dbg !8064
  %85 = lshr i32 %84, 8, !dbg !8065
  %86 = trunc i32 %85 to i8, !dbg !8066
  store i8 %86, i8* %45, align 1, !dbg !8067
  %87 = trunc i32 %84 to i8, !dbg !8068
  store i8 %87, i8* %44, align 1, !dbg !8069
  %88 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8070
  %89 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %88) #27, !dbg !8071
  br i1 %18, label %90, label %92, !dbg !8072

90:                                               ; preds = %83
  %91 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8073
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %31, i8* noundef %2, i32 noundef %3, i32 noundef 1, %struct.tc_aes_key_sched_struct* noundef %91) #26, !dbg !8076
  br label %92, !dbg !8077

92:                                               ; preds = %90, %83
  br i1 %14, label %93, label %97, !dbg !8078

93:                                               ; preds = %92
  %94 = load i32, i32* %26, align 4, !dbg !8079
  %95 = sub i32 %5, %94, !dbg !8082
  %96 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8083
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %31, i8* noundef %0, i32 noundef %95, i32 noundef 0, %struct.tc_aes_key_sched_struct* noundef %96) #26, !dbg !8084
  br label %97, !dbg !8085

97:                                               ; preds = %93, %92
  %98 = load i32, i32* %26, align 4, !dbg !8086
  %99 = call i32 @_compare(i8* noundef nonnull %31, i8* noundef nonnull %32, i32 noundef %98) #27, !dbg !8088
  %100 = icmp eq i32 %99, 0, !dbg !8089
  br i1 %100, label %104, label %101, !dbg !8090

101:                                              ; preds = %97
  %102 = load i32, i32* %26, align 4, !dbg !8091
  %103 = sub i32 %5, %102, !dbg !8093
  call void @_set(i8* noundef %0, i8 noundef zeroext 0, i32 noundef %103) #27, !dbg !8094
  br label %104, !dbg !8095

104:                                              ; preds = %97, %101
  %105 = phi i32 [ 0, %101 ], [ 1, %97 ], !dbg !8096
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #25, !dbg !8097
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !8097
  br label %106

106:                                              ; preds = %7, %25, %13, %17, %104
  %107 = phi i32 [ %105, %104 ], [ 0, %17 ], [ 0, %13 ], [ 0, %25 ], [ 0, %7 ], !dbg !7994
  ret i32 %107, !dbg !8097
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !8098 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8147, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !8148, metadata !DIExpression()), !dbg !8149
  %3 = icmp eq %struct.__esf* %1, null, !dbg !8150
  br i1 %3, label %5, label %4, !dbg !8152

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #26, !dbg !8153
  br label %5, !dbg !8155

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !8156
  ret void, !dbg !8157
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8158 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8162, metadata !DIExpression()), !dbg !8163
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8164
  %3 = load i32, i32* %2, align 4, !dbg !8164
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !8164
  %5 = load i32, i32* %4, align 4, !dbg !8164
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !8164
  %7 = load i32, i32* %6, align 4, !dbg !8164
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.74, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #27, !dbg !8164
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !8169
  %9 = load i32, i32* %8, align 4, !dbg !8169
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !8169
  %11 = load i32, i32* %10, align 4, !dbg !8169
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !8169
  %13 = load i32, i32* %12, align 4, !dbg !8169
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.75, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #27, !dbg !8169
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !8174
  %15 = load i32, i32* %14, align 4, !dbg !8174
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.76, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #27, !dbg !8174
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8179
  %17 = load i32, i32* %16, align 4, !dbg !8179
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.77, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !8179
  ret void, !dbg !8184
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !8185 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8202, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !8203, metadata !DIExpression()), !dbg !8205
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8206
  %4 = load i32, i32* %3, align 4, !dbg !8206
  call void @llvm.dbg.value(metadata i32 %4, metadata !8204, metadata !DIExpression()), !dbg !8205
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !8207
  ret void, !dbg !8208
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !8209 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8213, metadata !DIExpression()), !dbg !8216
  call void @llvm.dbg.value(metadata i8* %0, metadata !8214, metadata !DIExpression()), !dbg !8216
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !8217
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !8217
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !8215, metadata !DIExpression()), !dbg !8218
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !8218
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !8219
  %5 = bitcast i8* %4 to i32*, !dbg !8219
  %6 = load i32, i32* %5, align 4, !dbg !8219
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !8220
  store i32 %6, i32* %7, align 4, !dbg !8221
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !8222
  unreachable, !dbg !8223
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8224 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8227, metadata !DIExpression()), !dbg !8228
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !8229
  ret void, !dbg !8230
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !8231 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8235, metadata !DIExpression()), !dbg !8236
  %2 = icmp sgt i32 %0, -1, !dbg !8237
  br i1 %2, label %3, label %8, !dbg !8239

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8240, !srcloc !8242
  %4 = and i32 %0, 31, !dbg !8243
  %5 = shl nuw i32 1, %4, !dbg !8244
  %6 = lshr i32 %0, 5, !dbg !8245
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !8246
  store volatile i32 %5, i32* %7, align 4, !dbg !8247
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8248, !srcloc !8249
  br label %8, !dbg !8250

8:                                                ; preds = %3, %1
  ret void, !dbg !8251
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !8252 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8254, metadata !DIExpression()), !dbg !8255
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !8256
  ret void, !dbg !8257
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !8258 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8260, metadata !DIExpression()), !dbg !8261
  %2 = icmp sgt i32 %0, -1, !dbg !8262
  br i1 %2, label %3, label %8, !dbg !8264

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !8265
  %5 = shl nuw i32 1, %4, !dbg !8267
  %6 = lshr i32 %0, 5, !dbg !8268
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !8269
  store volatile i32 %5, i32* %7, align 4, !dbg !8270
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8271, !srcloc !8275
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8276, !srcloc !8279
  br label %8, !dbg !8280

8:                                                ; preds = %3, %1
  ret void, !dbg !8281
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !8282 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8286, metadata !DIExpression()), !dbg !8287
  %2 = lshr i32 %0, 5, !dbg !8288
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !8289
  %4 = load volatile i32, i32* %3, align 4, !dbg !8289
  %5 = and i32 %0, 31, !dbg !8290
  %6 = shl nuw i32 1, %5, !dbg !8290
  %7 = and i32 %4, %6, !dbg !8291
  ret i32 %7, !dbg !8292
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8293 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8297, metadata !DIExpression()), !dbg !8300
  call void @llvm.dbg.value(metadata i32 %1, metadata !8298, metadata !DIExpression()), !dbg !8300
  call void @llvm.dbg.value(metadata i32 %2, metadata !8299, metadata !DIExpression()), !dbg !8300
  %4 = add i32 %1, 1, !dbg !8301
  call void @llvm.dbg.value(metadata i32 %4, metadata !8298, metadata !DIExpression()), !dbg !8300
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !8304
  ret void, !dbg !8305
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8306 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8310, metadata !DIExpression()), !dbg !8312
  call void @llvm.dbg.value(metadata i32 %1, metadata !8311, metadata !DIExpression()), !dbg !8312
  %3 = trunc i32 %1 to i8, !dbg !8313
  %4 = shl i8 %3, 4, !dbg !8313
  %5 = and i32 %0, 15, !dbg !8315
  %6 = add nsw i32 %5, -4, !dbg !8315
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !8315
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8315
  %9 = icmp slt i32 %0, 0, !dbg !8315
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !8315
  store volatile i8 %4, i8* %10, align 1, !dbg !8313
  ret void, !dbg !8316
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !8317 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8319, metadata !DIExpression()), !dbg !8320
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !8321
  ret void, !dbg !8322
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !8323 {
  tail call void @z_SysNmiOnReset() #27, !dbg !8325
  tail call void @z_arm_int_exit() #27, !dbg !8326
  ret void, !dbg !8327
}

; Function Attrs: optsize
declare !dbg !8328 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !8329 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #12 !dbg !8331 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !8333
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !8334
  tail call void @z_bss_zero() #27, !dbg !8335
  tail call void @z_data_copy() #27, !dbg !8336
  tail call void @z_arm_interrupt_init() #27, !dbg !8337
  tail call void @z_cstart() #29, !dbg !8338
  unreachable, !dbg !8338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !8339 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !8340
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8341, !srcloc !8344
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8345, !srcloc !8348
  ret void, !dbg !8349
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !8350 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !8351
  %2 = and i32 %1, -15728641, !dbg !8351
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !8351
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !8352, !srcloc !8359
  call void @llvm.dbg.value(metadata i32 %3, metadata !8357, metadata !DIExpression()) #25, !dbg !8360
  %4 = and i32 %3, -5, !dbg !8361
  call void @llvm.dbg.value(metadata i32 %4, metadata !8362, metadata !DIExpression()) #25, !dbg !8367
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !8369, !srcloc !8370
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8371, !srcloc !8348
  ret void, !dbg !8373
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !8374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8377, metadata !DIExpression()), !dbg !8378
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8379
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !8380
  store i32 %0, i32* %3, align 4, !dbg !8381
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !8382
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !8383
  store i32 %4, i32* %5, align 4, !dbg !8384
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8385
  %7 = or i32 %6, 268435456, !dbg !8385
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8385
  call void @llvm.dbg.value(metadata i32 0, metadata !8386, metadata !DIExpression()) #25, !dbg !8389
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !8391, !srcloc !8392
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8393
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !8394
  %10 = load i32, i32* %9, align 4, !dbg !8394
  ret i32 %10, !dbg !8395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #9 !dbg !8396 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8506, metadata !DIExpression()), !dbg !8514
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !8507, metadata !DIExpression()), !dbg !8514
  call void @llvm.dbg.value(metadata i8* %2, metadata !8508, metadata !DIExpression()), !dbg !8514
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !8509, metadata !DIExpression()), !dbg !8514
  call void @llvm.dbg.value(metadata i8* %4, metadata !8510, metadata !DIExpression()), !dbg !8514
  call void @llvm.dbg.value(metadata i8* %5, metadata !8511, metadata !DIExpression()), !dbg !8514
  call void @llvm.dbg.value(metadata i8* %6, metadata !8512, metadata !DIExpression()), !dbg !8514
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !8515
  call void @llvm.dbg.value(metadata i8* %8, metadata !8513, metadata !DIExpression()), !dbg !8514
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !8516
  %10 = bitcast i8* %9 to i32*, !dbg !8516
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !8517
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !8518
  %12 = bitcast i8* %8 to i32*, !dbg !8519
  store i32 %11, i32* %12, align 4, !dbg !8520
  %13 = ptrtoint i8* %4 to i32, !dbg !8521
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !8522
  %15 = bitcast i8* %14 to i32*, !dbg !8522
  store i32 %13, i32* %15, align 4, !dbg !8523
  %16 = ptrtoint i8* %5 to i32, !dbg !8524
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !8525
  %18 = bitcast i8* %17 to i32*, !dbg !8525
  store i32 %16, i32* %18, align 4, !dbg !8526
  %19 = ptrtoint i8* %6 to i32, !dbg !8527
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !8528
  %21 = bitcast i8* %20 to i32*, !dbg !8528
  store i32 %19, i32* %21, align 4, !dbg !8529
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !8530
  %23 = bitcast i8* %22 to i32*, !dbg !8530
  store i32 16777216, i32* %23, align 4, !dbg !8531
  %24 = ptrtoint i8* %8 to i32, !dbg !8532
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !8533
  store i32 %24, i32* %25, align 8, !dbg !8534
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !8535
  store i32 0, i32* %26, align 4, !dbg !8536
  ret void, !dbg !8537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !8538 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8543, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.value(metadata i32 %1, metadata !8544, metadata !DIExpression()), !dbg !8549
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8550
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !8545, metadata !DIExpression()), !dbg !8549
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !8551
  br i1 %4, label %19, label %5, !dbg !8553

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !8548, metadata !DIExpression()), !dbg !8549
  %6 = icmp eq i32 %0, -22, !dbg !8554
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !8554
  %8 = load i32, i32* %7, align 4, !dbg !8554
  br i1 %6, label %16, label %9, !dbg !8556

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !8554
  %11 = icmp ule i32 %10, %0, !dbg !8554
  %12 = icmp ugt i32 %8, %0, !dbg !8554
  %13 = and i1 %12, %11, !dbg !8554
  %14 = icmp ugt i32 %8, %1, !dbg !8554
  %15 = and i1 %14, %13, !dbg !8554
  br i1 %15, label %18, label %19, !dbg !8554

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !8554
  br i1 %17, label %18, label %19, !dbg !8556

18:                                               ; preds = %9, %16
  br label %19, !dbg !8557

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !8549
  ret i32 %20, !dbg !8559
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #12 !dbg !8560 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8564, metadata !DIExpression()), !dbg !8567
  call void @llvm.dbg.value(metadata i8* %1, metadata !8565, metadata !DIExpression()), !dbg !8567
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !8566, metadata !DIExpression()), !dbg !8567
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8568
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !8569
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !8570, !srcloc !8571
  unreachable, !dbg !8572
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !8573 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8591, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata i32 %1, metadata !8592, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata i32 %2, metadata !8593, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !8594, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata i32 0, metadata !8595, metadata !DIExpression()), !dbg !8601
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8602
  %9 = and i32 %8, 511, !dbg !8603
  call void @llvm.dbg.value(metadata i32 %9, metadata !8596, metadata !DIExpression()), !dbg !8601
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8604
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8604
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !8605
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !8605
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !8600, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata i32 0, metadata !8607, metadata !DIExpression()) #25, !dbg !8610
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !8612, !srcloc !8613
  call void @llvm.dbg.value(metadata i8* %6, metadata !8598, metadata !DIExpression(DW_OP_deref)), !dbg !8601
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !8614
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !8599, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata i8* %5, metadata !8597, metadata !DIExpression(DW_OP_deref)), !dbg !8601
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !8615
  call void @llvm.dbg.value(metadata i32 %12, metadata !8595, metadata !DIExpression()), !dbg !8601
  %13 = load i8, i8* %5, align 1, !dbg !8616, !range !8618
  call void @llvm.dbg.value(metadata i8 %13, metadata !8597, metadata !DIExpression()), !dbg !8601
  %14 = icmp eq i8 %13, 0, !dbg !8616
  br i1 %14, label %15, label %32, !dbg !8619

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !8620
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #27, !dbg !8621
  %18 = load i8, i8* %6, align 1, !dbg !8622, !range !8618
  call void @llvm.dbg.value(metadata i8 %18, metadata !8598, metadata !DIExpression()), !dbg !8601
  %19 = icmp eq i8 %18, 0, !dbg !8622
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !8624
  %21 = load i32, i32* %20, align 4, !dbg !8624
  br i1 %19, label %27, label %22, !dbg !8625

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !8626
  %24 = icmp eq i32 %23, 0, !dbg !8629
  br i1 %24, label %25, label %31, !dbg !8630

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !8631
  br label %29, !dbg !8633

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !8634
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !8624
  br label %31, !dbg !8636

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #27, !dbg !8636
  br label %32, !dbg !8637

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !8637
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8637
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8637
  ret void, !dbg !8637
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !8638 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8643, metadata !DIExpression()), !dbg !8649
  call void @llvm.dbg.value(metadata i32 %1, metadata !8644, metadata !DIExpression()), !dbg !8649
  call void @llvm.dbg.value(metadata i32 %2, metadata !8645, metadata !DIExpression()), !dbg !8649
  call void @llvm.dbg.value(metadata i8* %3, metadata !8646, metadata !DIExpression()), !dbg !8649
  call void @llvm.dbg.value(metadata i8 0, metadata !8647, metadata !DIExpression()), !dbg !8649
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !8648, metadata !DIExpression()), !dbg !8649
  store i8 0, i8* %3, align 1, !dbg !8650
  %5 = icmp ugt i32 %2, -16777217, !dbg !8651
  br i1 %5, label %6, label %17, !dbg !8653

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !8654
  %8 = icmp eq i32 %7, 8, !dbg !8654
  br i1 %8, label %9, label %10, !dbg !8654

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.109, i32 0, i32 0), i32 noundef 69) #27, !dbg !8656
  br label %17, !dbg !8662

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !8663
  %12 = icmp eq i32 %11, 0, !dbg !8663
  br i1 %12, label %13, label %14, !dbg !8664

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !8648, metadata !DIExpression()), !dbg !8649
  store i8 1, i8* %3, align 1, !dbg !8667
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !8649
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !8648, metadata !DIExpression()), !dbg !8649
  br label %17, !dbg !8670

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !8649
  ret %struct.__esf* %18, !dbg !8671
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !8672 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8676, metadata !DIExpression()), !dbg !8680
  call void @llvm.dbg.value(metadata i32 %1, metadata !8677, metadata !DIExpression()), !dbg !8680
  call void @llvm.dbg.value(metadata i8* %2, metadata !8678, metadata !DIExpression()), !dbg !8680
  call void @llvm.dbg.value(metadata i32 0, metadata !8679, metadata !DIExpression()), !dbg !8680
  store i8 0, i8* %2, align 1, !dbg !8681
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !8682

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !8683
  call void @llvm.dbg.value(metadata i32 %5, metadata !8679, metadata !DIExpression()), !dbg !8680
  br label %12, !dbg !8685

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !8686
  call void @llvm.dbg.value(metadata i32 %7, metadata !8679, metadata !DIExpression()), !dbg !8680
  br label %12, !dbg !8687

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !8688
  call void @llvm.dbg.value(metadata i32 0, metadata !8679, metadata !DIExpression()), !dbg !8680
  br label %12, !dbg !8689

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !8690
  call void @llvm.dbg.value(metadata i32 0, metadata !8679, metadata !DIExpression()), !dbg !8680
  br label %12, !dbg !8691

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !8692
  br label %12, !dbg !8693

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #26, !dbg !8694
  br label %12, !dbg !8695

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !8680
  call void @llvm.dbg.value(metadata i32 %13, metadata !8679, metadata !DIExpression()), !dbg !8680
  ret i32 %13, !dbg !8696
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8697 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8701, metadata !DIExpression()), !dbg !8704
  call void @llvm.dbg.value(metadata i8* %1, metadata !8702, metadata !DIExpression()), !dbg !8704
  call void @llvm.dbg.value(metadata i32 0, metadata !8703, metadata !DIExpression()), !dbg !8704
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.104, i32 0, i32 0), i32 noundef 69) #27, !dbg !8705
  store i8 0, i8* %1, align 1, !dbg !8710
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8711
  %4 = and i32 %3, 2, !dbg !8713
  %5 = icmp eq i32 %4, 0, !dbg !8714
  br i1 %5, label %7, label %6, !dbg !8715

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.105, i32 0, i32 0), i32 noundef 69) #27, !dbg !8716
  br label %36, !dbg !8722

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8723
  %9 = icmp sgt i32 %8, -1, !dbg !8725
  br i1 %9, label %11, label %10, !dbg !8726

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.106, i32 0, i32 0), i32 noundef 69) #27, !dbg !8727
  br label %36, !dbg !8733

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8734
  %13 = and i32 %12, 1073741824, !dbg !8736
  %14 = icmp eq i32 %13, 0, !dbg !8737
  br i1 %14, label %36, label %15, !dbg !8738

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.107, i32 0, i32 0), i32 noundef 69) #27, !dbg !8739
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !8745
  br i1 %16, label %17, label %21, !dbg !8747

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8748
  %19 = load i32, i32* %18, align 4, !dbg !8748
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.108, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #27, !dbg !8748
  %20 = load i32, i32* %18, align 4, !dbg !8754
  call void @llvm.dbg.value(metadata i32 %20, metadata !8703, metadata !DIExpression()), !dbg !8704
  br label %36, !dbg !8755

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8756
  %23 = and i32 %22, 255, !dbg !8758
  %24 = icmp eq i32 %23, 0, !dbg !8759
  br i1 %24, label %27, label %25, !dbg !8760

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !8761
  call void @llvm.dbg.value(metadata i32 %26, metadata !8703, metadata !DIExpression()), !dbg !8704
  br label %36, !dbg !8763

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8764
  %29 = and i32 %28, 65280, !dbg !8766
  %30 = icmp eq i32 %29, 0, !dbg !8767
  br i1 %30, label %32, label %31, !dbg !8768

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !8769
  call void @llvm.dbg.value(metadata i32 0, metadata !8703, metadata !DIExpression()), !dbg !8704
  br label %36, !dbg !8771

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8772
  %34 = icmp ult i32 %33, 65536, !dbg !8774
  br i1 %34, label %36, label %35, !dbg !8775

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #26, !dbg !8776
  call void @llvm.dbg.value(metadata i32 0, metadata !8703, metadata !DIExpression()), !dbg !8704
  br label %36, !dbg !8778

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !8704
  call void @llvm.dbg.value(metadata i32 %37, metadata !8703, metadata !DIExpression()), !dbg !8704
  ret i32 %37, !dbg !8779
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !8780 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8782, metadata !DIExpression()), !dbg !8795
  call void @llvm.dbg.value(metadata i32 %1, metadata !8783, metadata !DIExpression()), !dbg !8795
  call void @llvm.dbg.value(metadata i8* %2, metadata !8784, metadata !DIExpression()), !dbg !8795
  call void @llvm.dbg.value(metadata i32 0, metadata !8785, metadata !DIExpression()), !dbg !8795
  call void @llvm.dbg.value(metadata i32 -22, metadata !8786, metadata !DIExpression()), !dbg !8795
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.99, i32 0, i32 0), i32 noundef 69) #27, !dbg !8796
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8801
  %5 = and i32 %4, 16, !dbg !8803
  %6 = icmp eq i32 %5, 0, !dbg !8804
  br i1 %6, label %8, label %7, !dbg !8805

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.100, i32 0, i32 0), i32 noundef 69) #27, !dbg !8806
  br label %8, !dbg !8812

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8813
  %10 = and i32 %9, 8, !dbg !8815
  %11 = icmp eq i32 %10, 0, !dbg !8816
  br i1 %11, label %13, label %12, !dbg !8817

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.93, i32 0, i32 0), i32 noundef 69) #27, !dbg !8818
  br label %13, !dbg !8824

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8825
  %15 = and i32 %14, 2, !dbg !8826
  %16 = icmp eq i32 %15, 0, !dbg !8827
  br i1 %16, label %27, label %17, !dbg !8828

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.101, i32 0, i32 0), i32 noundef 69) #27, !dbg !8829
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8834
  call void @llvm.dbg.value(metadata i32 %18, metadata !8787, metadata !DIExpression()), !dbg !8835
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8836
  %20 = and i32 %19, 128, !dbg !8838
  %21 = icmp eq i32 %20, 0, !dbg !8839
  br i1 %21, label %27, label %22, !dbg !8840

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !8786, metadata !DIExpression()), !dbg !8795
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10.102, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #27, !dbg !8841
  %23 = icmp eq i32 %1, 0, !dbg !8847
  br i1 %23, label %27, label %24, !dbg !8849

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8850
  %26 = and i32 %25, -129, !dbg !8850
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8850
  br label %27, !dbg !8852

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !8795
  call void @llvm.dbg.value(metadata i32 %28, metadata !8786, metadata !DIExpression()), !dbg !8795
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8853
  %30 = and i32 %29, 1, !dbg !8855
  %31 = icmp eq i32 %30, 0, !dbg !8856
  br i1 %31, label %33, label %32, !dbg !8857

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.103, i32 0, i32 0), i32 noundef 69) #27, !dbg !8858
  br label %33, !dbg !8864

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8865
  %35 = and i32 %34, 32, !dbg !8867
  %36 = icmp eq i32 %35, 0, !dbg !8868
  br i1 %36, label %38, label %37, !dbg !8869

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.98, i32 0, i32 0), i32 noundef 69) #27, !dbg !8870
  br label %38, !dbg !8876

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8877
  %40 = and i32 %39, 16, !dbg !8878
  %41 = icmp eq i32 %40, 0, !dbg !8878
  br i1 %41, label %42, label %46, !dbg !8879

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8880
  %44 = and i32 %43, 2, !dbg !8881
  %45 = icmp eq i32 %44, 0, !dbg !8881
  br i1 %45, label %55, label %46, !dbg !8882

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8883
  %48 = and i32 %47, 2048, !dbg !8884
  %49 = icmp eq i32 %48, 0, !dbg !8884
  br i1 %49, label %55, label %50, !dbg !8885

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !8886
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #27, !dbg !8887
  call void @llvm.dbg.value(metadata i32 %52, metadata !8790, metadata !DIExpression()), !dbg !8888
  %53 = icmp eq i32 %52, 0, !dbg !8889
  br i1 %53, label %55, label %54, !dbg !8891

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !8892, metadata !DIExpression()) #25, !dbg !8895
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #25, !dbg !8898, !srcloc !8899
  call void @llvm.dbg.value(metadata i32 2, metadata !8785, metadata !DIExpression()), !dbg !8795
  br label %55, !dbg !8900

55:                                               ; preds = %54, %50, %46, %42
  %56 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %50 ], !dbg !8795
  call void @llvm.dbg.value(metadata i32 %56, metadata !8785, metadata !DIExpression()), !dbg !8795
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8901
  %58 = and i32 %57, 32, !dbg !8903
  %59 = icmp eq i32 %58, 0, !dbg !8904
  br i1 %59, label %63, label %60, !dbg !8905

60:                                               ; preds = %55
  %61 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8906
  %62 = and i32 %61, -8193, !dbg !8906
  store volatile i32 %62, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8906
  br label %63, !dbg !8908

63:                                               ; preds = %60, %55
  %64 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8909
  %65 = or i32 %64, 255, !dbg !8909
  store volatile i32 %65, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8909
  store i8 0, i8* %2, align 1, !dbg !8910
  ret i32 %56, !dbg !8911
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8912 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8916, metadata !DIExpression()), !dbg !8923
  call void @llvm.dbg.value(metadata i32 %0, metadata !8917, metadata !DIExpression()), !dbg !8923
  call void @llvm.dbg.value(metadata i8* %1, metadata !8918, metadata !DIExpression()), !dbg !8923
  call void @llvm.dbg.value(metadata i32 0, metadata !8919, metadata !DIExpression()), !dbg !8923
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.91, i32 0, i32 0), i32 noundef 69) #27, !dbg !8924
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8929
  %4 = and i32 %3, 4096, !dbg !8931
  %5 = icmp eq i32 %4, 0, !dbg !8931
  br i1 %5, label %7, label %6, !dbg !8932

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.92, i32 0, i32 0), i32 noundef 69) #27, !dbg !8933
  br label %7, !dbg !8939

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8940
  %9 = and i32 %8, 2048, !dbg !8942
  %10 = icmp eq i32 %9, 0, !dbg !8942
  br i1 %10, label %12, label %11, !dbg !8943

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.93, i32 0, i32 0), i32 noundef 69) #27, !dbg !8944
  br label %12, !dbg !8950

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8951
  %14 = and i32 %13, 512, !dbg !8952
  %15 = icmp eq i32 %14, 0, !dbg !8952
  br i1 %15, label %26, label %16, !dbg !8953

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15.94, i32 0, i32 0), i32 noundef 69) #27, !dbg !8954
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8959
  call void @llvm.dbg.value(metadata i32 %17, metadata !8920, metadata !DIExpression()), !dbg !8960
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8961
  %19 = and i32 %18, 32768, !dbg !8963
  %20 = icmp eq i32 %19, 0, !dbg !8964
  br i1 %20, label %26, label %21, !dbg !8965

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16.95, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !8966
  %22 = icmp eq i32 %0, 0, !dbg !8972
  br i1 %22, label %26, label %23, !dbg !8974

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8975
  %25 = and i32 %24, -32769, !dbg !8975
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8975
  br label %26, !dbg !8977

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8978
  %28 = and i32 %27, 1024, !dbg !8980
  %29 = icmp eq i32 %28, 0, !dbg !8980
  br i1 %29, label %31, label %30, !dbg !8981

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17.96, i32 0, i32 0), i32 noundef 69) #27, !dbg !8982
  br label %31, !dbg !8988

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8989
  %33 = and i32 %32, 256, !dbg !8991
  %34 = icmp eq i32 %33, 0, !dbg !8992
  br i1 %34, label %35, label %39, !dbg !8993

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8994
  %37 = and i32 %36, 8192, !dbg !8996
  %38 = icmp eq i32 %37, 0, !dbg !8996
  br i1 %38, label %41, label %39, !dbg !8997

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18.97, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.98, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #27, !dbg !8998
  br label %41, !dbg !8999

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8999
  %43 = or i32 %42, 65280, !dbg !8999
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8999
  store i8 0, i8* %1, align 1, !dbg !9000
  ret void, !dbg !9001
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !9002 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9008, metadata !DIExpression()), !dbg !9010
  call void @llvm.dbg.value(metadata i32 0, metadata !9009, metadata !DIExpression()), !dbg !9010
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19.84, i32 0, i32 0), i32 noundef 69) #27, !dbg !9011
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9016
  %2 = and i32 %1, 33554432, !dbg !9018
  %3 = icmp eq i32 %2, 0, !dbg !9019
  br i1 %3, label %5, label %4, !dbg !9020

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20.85, i32 0, i32 0), i32 noundef 69) #27, !dbg !9021
  br label %5, !dbg !9027

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9028
  %7 = and i32 %6, 16777216, !dbg !9030
  %8 = icmp eq i32 %7, 0, !dbg !9031
  br i1 %8, label %10, label %9, !dbg !9032

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21.86, i32 0, i32 0), i32 noundef 69) #27, !dbg !9033
  br label %10, !dbg !9039

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9040
  %12 = and i32 %11, 524288, !dbg !9042
  %13 = icmp eq i32 %12, 0, !dbg !9043
  br i1 %13, label %15, label %14, !dbg !9044

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22.87, i32 0, i32 0), i32 noundef 69) #27, !dbg !9045
  br label %15, !dbg !9051

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9052
  %17 = and i32 %16, 262144, !dbg !9054
  %18 = icmp eq i32 %17, 0, !dbg !9055
  br i1 %18, label %20, label %19, !dbg !9056

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23.88, i32 0, i32 0), i32 noundef 69) #27, !dbg !9057
  br label %20, !dbg !9063

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9064
  %22 = and i32 %21, 131072, !dbg !9066
  %23 = icmp eq i32 %22, 0, !dbg !9067
  br i1 %23, label %25, label %24, !dbg !9068

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.89, i32 0, i32 0), i32 noundef 69) #27, !dbg !9069
  br label %25, !dbg !9075

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9076
  %27 = and i32 %26, 65536, !dbg !9078
  %28 = icmp eq i32 %27, 0, !dbg !9079
  br i1 %28, label %30, label %29, !dbg !9080

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25.90, i32 0, i32 0), i32 noundef 69) #27, !dbg !9081
  br label %30, !dbg !9087

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9088
  %32 = or i32 %31, -65536, !dbg !9088
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9088
  ret void, !dbg !9089
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !9090 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9094, metadata !DIExpression()), !dbg !9096
  call void @llvm.dbg.value(metadata i8* %0, metadata !9095, metadata !DIExpression()), !dbg !9096
  store i8 0, i8* %0, align 1, !dbg !9097
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26.83, i32 0, i32 0), i32 noundef 69) #27, !dbg !9098
  ret void, !dbg !9103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !9104 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9108, metadata !DIExpression()), !dbg !9110
  call void @llvm.dbg.value(metadata i32 %0, metadata !9109, metadata !DIExpression()), !dbg !9110
  %2 = icmp slt i32 %0, 16, !dbg !9111
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28.80, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29.81, i32 0, i32 0), !dbg !9111
  %4 = add nsw i32 %0, -16, !dbg !9111
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27.82, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #27, !dbg !9111
  ret void, !dbg !9116
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9117 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !9121, metadata !DIExpression()), !dbg !9124
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !9125
  %3 = load i32, i32* %2, align 4, !dbg !9125
  %4 = inttoptr i32 %3 to i16*, !dbg !9126
  call void @llvm.dbg.value(metadata i16* %4, metadata !9122, metadata !DIExpression()), !dbg !9124
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9127
  %6 = or i32 %5, 256, !dbg !9127
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9127
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9128, !srcloc !9131
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9132, !srcloc !9135
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !9136
  %8 = load i16, i16* %7, align 2, !dbg !9137
  call void @llvm.dbg.value(metadata i16 %8, metadata !9123, metadata !DIExpression()), !dbg !9124
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9138
  %10 = and i32 %9, -257, !dbg !9138
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9138
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9139, !srcloc !9131
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9141, !srcloc !9135
  %11 = icmp eq i16 %8, -8446, !dbg !9143
  ret i1 %11, !dbg !9145
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !9146 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9147
  %2 = or i32 %1, 16, !dbg !9147
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9147
  ret void, !dbg !9148
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !9149 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9152, metadata !DIExpression()), !dbg !9153
  br label %1, !dbg !9154

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !9152, metadata !DIExpression()), !dbg !9153
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef %2) #26, !dbg !9156
  %3 = add nuw nsw i32 %2, 1, !dbg !9159
  call void @llvm.dbg.value(metadata i32 %3, metadata !9152, metadata !DIExpression()), !dbg !9153
  %4 = icmp eq i32 %3, 86, !dbg !9160
  br i1 %4, label %5, label %1, !dbg !9154, !llvm.loop !9161

5:                                                ; preds = %1
  ret void, !dbg !9163
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.112(i32 noundef %0) unnamed_addr #15 !dbg !9164 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9166, metadata !DIExpression()), !dbg !9168
  call void @llvm.dbg.value(metadata i32 1, metadata !9167, metadata !DIExpression()), !dbg !9168
  %2 = and i32 %0, 15, !dbg !9169
  %3 = add nsw i32 %2, -4, !dbg !9169
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !9169
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !9169
  %6 = icmp slt i32 %0, 0, !dbg !9169
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !9169
  store volatile i8 16, i8* %7, align 1, !dbg !9170
  ret void, !dbg !9172
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !9173 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9279, metadata !DIExpression()), !dbg !9280
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9281
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !9283
  br i1 %3, label %4, label %12, !dbg !9284

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !9285, !srcloc !9297
  call void @llvm.dbg.value(metadata i32 %5, metadata !9288, metadata !DIExpression()) #25, !dbg !9298
  %6 = icmp eq i32 %5, 0, !dbg !9299
  br i1 %6, label %12, label %7, !dbg !9300

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9301
  %9 = or i32 %8, 268435456, !dbg !9301
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9301
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9303
  %11 = and i32 %10, -32769, !dbg !9303
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9303
  br label %12, !dbg !9304

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !9305
  ret void, !dbg !9306
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !9307 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !9308
  ret void, !dbg !9309
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !525 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !646, metadata !DIExpression()), !dbg !9310
  call void @llvm.dbg.value(metadata i8 0, metadata !647, metadata !DIExpression()), !dbg !9310
  call void @llvm.dbg.value(metadata i32 64, metadata !649, metadata !DIExpression()), !dbg !9310
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !9311
  %3 = load i32, i32* %2, align 4, !dbg !9311
  %4 = add i32 %3, -64, !dbg !9313
  call void @llvm.dbg.value(metadata i32 %4, metadata !648, metadata !DIExpression()), !dbg !9310
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !9314
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !9315
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !9316
  call void @llvm.dbg.value(metadata i8 1, metadata !647, metadata !DIExpression()), !dbg !9310
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !9317
  ret void, !dbg !9318
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !9319 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !9320
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9321, !srcloc !9324
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9325, !srcloc !9328
  ret void, !dbg !9329
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !9330 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !9331, !srcloc !9334
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !9335
  ret void, !dbg !9336
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9337 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9352, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.value(metadata i8 %1, metadata !9353, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.value(metadata i32 %2, metadata !9354, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.value(metadata i32 %3, metadata !9355, metadata !DIExpression()), !dbg !9356
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !9357
  ret void, !dbg !9359
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9360 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9365, metadata !DIExpression()), !dbg !9370
  call void @llvm.dbg.value(metadata i8 %1, metadata !9366, metadata !DIExpression()), !dbg !9370
  call void @llvm.dbg.value(metadata i32 undef, metadata !9367, metadata !DIExpression()), !dbg !9370
  call void @llvm.dbg.value(metadata i32 undef, metadata !9368, metadata !DIExpression()), !dbg !9370
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9371
  call void @llvm.dbg.value(metadata i8 %3, metadata !9369, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9370
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !9372
  call void @llvm.dbg.value(metadata i32 %4, metadata !9369, metadata !DIExpression()), !dbg !9370
  %5 = trunc i32 %4 to i8, !dbg !9373
  store i8 %5, i8* @static_regions_num, align 1, !dbg !9374
  ret void, !dbg !9375
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !9376 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9380, metadata !DIExpression()), !dbg !9386
  call void @llvm.dbg.value(metadata i8 %1, metadata !9381, metadata !DIExpression()), !dbg !9386
  call void @llvm.dbg.value(metadata i8 %2, metadata !9382, metadata !DIExpression()), !dbg !9386
  call void @llvm.dbg.value(metadata i1 %3, metadata !9383, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9386
  %5 = zext i8 %2 to i32, !dbg !9387
  call void @llvm.dbg.value(metadata i32 %5, metadata !9385, metadata !DIExpression()), !dbg !9386
  call void @llvm.dbg.value(metadata i32 0, metadata !9384, metadata !DIExpression()), !dbg !9386
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !9385, metadata !DIExpression()), !dbg !9386
  call void @llvm.dbg.value(metadata i32 0, metadata !9384, metadata !DIExpression()), !dbg !9386
  %7 = icmp eq i8 %1, 0, !dbg !9388
  br i1 %7, label %30, label %8, !dbg !9391

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9385, metadata !DIExpression()), !dbg !9386
  call void @llvm.dbg.value(metadata i32 %10, metadata !9384, metadata !DIExpression()), !dbg !9386
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !9392
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !9395
  %13 = load i32, i32* %12, align 4, !dbg !9395
  %14 = icmp eq i32 %13, 0, !dbg !9396
  br i1 %14, label %26, label %15, !dbg !9397

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !9398

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !9400
  %18 = icmp eq i32 %17, 0, !dbg !9400
  br i1 %18, label %19, label %20, !dbg !9401

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.121, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #27, !dbg !9402
  br label %30, !dbg !9408

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !9409
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !9410
  call void @llvm.dbg.value(metadata i32 %22, metadata !9385, metadata !DIExpression()), !dbg !9386
  %23 = icmp eq i32 %22, -22, !dbg !9411
  br i1 %23, label %30, label %24, !dbg !9413

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !9414
  call void @llvm.dbg.value(metadata i32 %25, metadata !9385, metadata !DIExpression()), !dbg !9386
  br label %26, !dbg !9415

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !9386
  call void @llvm.dbg.value(metadata i32 %27, metadata !9385, metadata !DIExpression()), !dbg !9386
  %28 = add nuw nsw i32 %10, 1, !dbg !9416
  call void @llvm.dbg.value(metadata i32 %28, metadata !9384, metadata !DIExpression()), !dbg !9386
  %29 = icmp eq i32 %28, %6, !dbg !9388
  br i1 %29, label %30, label %8, !dbg !9391, !llvm.loop !9417

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !9386
  ret i32 %31, !dbg !9419
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !9420 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9424, metadata !DIExpression()), !dbg !9426
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !9427
  %3 = load i32, i32* %2, align 4, !dbg !9427
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !9428, !range !9429
  %5 = icmp ult i32 %4, 2, !dbg !9428
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !9430
  br i1 %7, label %8, label %15, !dbg !9430

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !9431
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !9432
  %11 = load i32, i32* %10, align 4, !dbg !9432
  %12 = and i32 %11, %9, !dbg !9433
  %13 = icmp eq i32 %12, 0, !dbg !9434
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9425, metadata !DIExpression()), !dbg !9426
  ret i32 %16, !dbg !9435
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9436 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !9440, metadata !DIExpression()), !dbg !9443
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !9441, metadata !DIExpression()), !dbg !9443
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !9444
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9444
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !9442, metadata !DIExpression()), !dbg !9445
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !9446
  %6 = load i32, i32* %5, align 4, !dbg !9446
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !9447
  store i32 %6, i32* %7, align 4, !dbg !9448
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !9449
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !9450
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !9451
  %11 = load i32, i32* %10, align 4, !dbg !9451
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.ctr_params* noundef nonnull %8, %struct.ctr_params* noundef nonnull %9, i32 noundef %11) #26, !dbg !9452
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !9453
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9454
  ret i32 %12, !dbg !9455
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.ctr_params* nocapture noundef writeonly %0, %struct.ctr_params* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #19 !dbg !9456 {
  call void @llvm.dbg.value(metadata %struct.ctr_params* %0, metadata !9463, metadata !DIExpression()), !dbg !9467
  call void @llvm.dbg.value(metadata %struct.ctr_params* %1, metadata !9464, metadata !DIExpression()), !dbg !9467
  call void @llvm.dbg.value(metadata i32 undef, metadata !9465, metadata !DIExpression()), !dbg !9467
  call void @llvm.dbg.value(metadata i32 %2, metadata !9466, metadata !DIExpression()), !dbg !9467
  %4 = getelementptr inbounds %struct.ctr_params, %struct.ctr_params* %1, i32 0, i32 0, !dbg !9468
  %5 = load i32, i32* %4, align 4, !dbg !9468
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !9469
  %7 = or i32 %6, %5, !dbg !9470
  %8 = getelementptr inbounds %struct.ctr_params, %struct.ctr_params* %0, i32 0, i32 0, !dbg !9471
  store i32 %7, i32* %8, align 4, !dbg !9472
  ret void, !dbg !9473
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9474 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9478, metadata !DIExpression()), !dbg !9480
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9479, metadata !DIExpression()), !dbg !9480
  %3 = zext i8 %0 to i32, !dbg !9481
  %4 = icmp ugt i8 %0, 7, !dbg !9483
  br i1 %4, label %5, label %6, !dbg !9484

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.122, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #27, !dbg !9485
  br label %7, !dbg !9491

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !9492
  br label %7, !dbg !9493

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !9480
  ret i32 %8, !dbg !9494
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !9495 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9499, metadata !DIExpression()), !dbg !9501
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9500, metadata !DIExpression()), !dbg !9501
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !9502
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !9503
  %4 = load i32, i32* %3, align 4, !dbg !9503
  %5 = and i32 %4, -32, !dbg !9504
  %6 = or i32 %5, %0, !dbg !9505
  %7 = or i32 %6, 16, !dbg !9505
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !9506
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !9507
  %9 = load i32, i32* %8, align 4, !dbg !9507
  %10 = or i32 %9, 1, !dbg !9508
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9509
  ret void, !dbg !9510
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !9511 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9514, metadata !DIExpression()), !dbg !9515
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9516
  ret void, !dbg !9517
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #13 !dbg !9518 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9522, metadata !DIExpression()), !dbg !9523
  %2 = icmp ult i32 %0, 33, !dbg !9524
  br i1 %2, label %11, label %3, !dbg !9526

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !9527
  br i1 %4, label %11, label %5, !dbg !9529

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !9530
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !9531, !range !9429
  %8 = mul nsw i32 %7, -2, !dbg !9532
  %9 = add nsw i32 %8, 62, !dbg !9532
  %10 = and i32 %9, 62, !dbg !9533
  br label %11, !dbg !9534

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !9523
  ret i32 %12, !dbg !9535
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !9536 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9540, metadata !DIExpression()), !dbg !9542
  call void @llvm.dbg.value(metadata i8 %1, metadata !9541, metadata !DIExpression()), !dbg !9542
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !9543
  ret void, !dbg !9545
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9546 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9550, metadata !DIExpression()), !dbg !9557
  call void @llvm.dbg.value(metadata i8 %1, metadata !9551, metadata !DIExpression()), !dbg !9557
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9558
  call void @llvm.dbg.value(metadata i8 %3, metadata !9552, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9557
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !9559
  call void @llvm.dbg.value(metadata i32 %4, metadata !9552, metadata !DIExpression()), !dbg !9557
  %5 = icmp ne i32 %4, -22, !dbg !9560
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !9561
  call void @llvm.dbg.value(metadata i32 %4, metadata !9553, metadata !DIExpression()), !dbg !9562
  br i1 %7, label %8, label %12, !dbg !9561

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9553, metadata !DIExpression()), !dbg !9562
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !9563
  %10 = add i32 %9, 1, !dbg !9566
  call void @llvm.dbg.value(metadata i32 %10, metadata !9553, metadata !DIExpression()), !dbg !9562
  %11 = icmp eq i32 %10, 8, !dbg !9567
  br i1 %11, label %12, label %8, !dbg !9568, !llvm.loop !9569

12:                                               ; preds = %8, %2
  ret void, !dbg !9571
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !9572 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9575, metadata !DIExpression()), !dbg !9576
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9577
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9578
  ret void, !dbg !9579
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !9580 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !9585
  %2 = icmp ugt i32 %1, 8, !dbg !9587
  br i1 %2, label %14, label %3, !dbg !9588

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !9589
  call void @llvm.dbg.value(metadata i32 0, metadata !9584, metadata !DIExpression()), !dbg !9590
  %4 = icmp eq i32 %1, 0, !dbg !9591
  br i1 %4, label %12, label %5, !dbg !9594

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !9594

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9584, metadata !DIExpression()), !dbg !9590
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !9595
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !9597
  %10 = add nuw i32 %8, 1, !dbg !9598
  call void @llvm.dbg.value(metadata i32 %10, metadata !9584, metadata !DIExpression()), !dbg !9590
  %11 = icmp eq i32 %10, %1, !dbg !9591
  br i1 %11, label %12, label %7, !dbg !9594, !llvm.loop !9599

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !9601
  store i8 %13, i8* @static_regions_num, align 1, !dbg !9602
  tail call void @arm_core_mpu_enable() #26, !dbg !9603
  br label %14, !dbg !9604

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !9590
  ret i32 %15, !dbg !9605
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !9606 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9613, metadata !DIExpression()), !dbg !9616
  call void @llvm.dbg.value(metadata i8* %1, metadata !9614, metadata !DIExpression()), !dbg !9616
  call void @llvm.dbg.value(metadata i8* %0, metadata !9615, metadata !DIExpression()), !dbg !9616
  %3 = load i8, i8* %1, align 1, !dbg !9617
  %4 = icmp eq i8 %3, 0, !dbg !9618
  br i1 %4, label %13, label %5, !dbg !9619

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !9613, metadata !DIExpression()), !dbg !9616
  call void @llvm.dbg.value(metadata i8* %8, metadata !9614, metadata !DIExpression()), !dbg !9616
  store i8 %6, i8* %7, align 1, !dbg !9620
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9622
  call void @llvm.dbg.value(metadata i8* %9, metadata !9613, metadata !DIExpression()), !dbg !9616
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9623
  call void @llvm.dbg.value(metadata i8* %10, metadata !9614, metadata !DIExpression()), !dbg !9616
  %11 = load i8, i8* %10, align 1, !dbg !9617
  %12 = icmp eq i8 %11, 0, !dbg !9618
  br i1 %12, label %13, label %5, !dbg !9619, !llvm.loop !9624

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !9626
  ret i8* %0, !dbg !9627
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9628 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9632, metadata !DIExpression()), !dbg !9636
  call void @llvm.dbg.value(metadata i8* %1, metadata !9633, metadata !DIExpression()), !dbg !9636
  call void @llvm.dbg.value(metadata i32 %2, metadata !9634, metadata !DIExpression()), !dbg !9636
  call void @llvm.dbg.value(metadata i8* %0, metadata !9635, metadata !DIExpression()), !dbg !9636
  %4 = icmp eq i32 %2, 0, !dbg !9637
  br i1 %4, label %22, label %5, !dbg !9638

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9632, metadata !DIExpression()), !dbg !9636
  call void @llvm.dbg.value(metadata i32 %7, metadata !9634, metadata !DIExpression()), !dbg !9636
  call void @llvm.dbg.value(metadata i8* %8, metadata !9633, metadata !DIExpression()), !dbg !9636
  %9 = load i8, i8* %8, align 1, !dbg !9639
  %10 = icmp eq i8 %9, 0, !dbg !9640
  br i1 %10, label %16, label %11, !dbg !9641

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !9642
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9644
  call void @llvm.dbg.value(metadata i8* %12, metadata !9633, metadata !DIExpression()), !dbg !9636
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9645
  call void @llvm.dbg.value(metadata i8* %13, metadata !9632, metadata !DIExpression()), !dbg !9636
  %14 = add i32 %7, -1, !dbg !9646
  call void @llvm.dbg.value(metadata i32 %14, metadata !9634, metadata !DIExpression()), !dbg !9636
  %15 = icmp eq i32 %14, 0, !dbg !9637
  br i1 %15, label %22, label %5, !dbg !9638, !llvm.loop !9647

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !9632, metadata !DIExpression()), !dbg !9636
  call void @llvm.dbg.value(metadata i32 %18, metadata !9634, metadata !DIExpression()), !dbg !9636
  store i8 0, i8* %17, align 1, !dbg !9649
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9651
  call void @llvm.dbg.value(metadata i8* %19, metadata !9632, metadata !DIExpression()), !dbg !9636
  %20 = add i32 %18, -1, !dbg !9652
  call void @llvm.dbg.value(metadata i32 %20, metadata !9634, metadata !DIExpression()), !dbg !9636
  %21 = icmp eq i32 %20, 0, !dbg !9653
  br i1 %21, label %22, label %16, !dbg !9654, !llvm.loop !9655

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !9657
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9658 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9662, metadata !DIExpression()), !dbg !9665
  call void @llvm.dbg.value(metadata i32 %1, metadata !9663, metadata !DIExpression()), !dbg !9665
  call void @llvm.dbg.value(metadata i32 %1, metadata !9664, metadata !DIExpression()), !dbg !9665
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9666

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !9662, metadata !DIExpression()), !dbg !9665
  %6 = load i8, i8* %5, align 1, !dbg !9667
  %7 = icmp eq i8 %6, %3, !dbg !9668
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !9669
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9670
  call void @llvm.dbg.value(metadata i8* %10, metadata !9662, metadata !DIExpression()), !dbg !9665
  br i1 %9, label %11, label %4, !dbg !9669, !llvm.loop !9672

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !9674
  ret i8* %12, !dbg !9675
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9676 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9678, metadata !DIExpression()), !dbg !9681
  call void @llvm.dbg.value(metadata i32 %1, metadata !9679, metadata !DIExpression()), !dbg !9681
  call void @llvm.dbg.value(metadata i8* null, metadata !9680, metadata !DIExpression()), !dbg !9681
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9682

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !9681
  call void @llvm.dbg.value(metadata i8* %6, metadata !9680, metadata !DIExpression()), !dbg !9681
  call void @llvm.dbg.value(metadata i8* %5, metadata !9678, metadata !DIExpression()), !dbg !9681
  %7 = load i8, i8* %5, align 1, !dbg !9683
  %8 = icmp eq i8 %7, %3, !dbg !9686
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !9687
  call void @llvm.dbg.value(metadata i8* %9, metadata !9680, metadata !DIExpression()), !dbg !9681
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9688
  call void @llvm.dbg.value(metadata i8* %10, metadata !9678, metadata !DIExpression()), !dbg !9681
  %11 = icmp eq i8 %7, 0, !dbg !9689
  br i1 %11, label %12, label %4, !dbg !9689, !llvm.loop !9690

12:                                               ; preds = %4
  ret i8* %9, !dbg !9692
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !9693 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9697, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata i32 0, metadata !9698, metadata !DIExpression()), !dbg !9699
  %2 = load i8, i8* %0, align 1, !dbg !9700
  %3 = icmp eq i8 %2, 0, !dbg !9701
  br i1 %3, label %11, label %4, !dbg !9702

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !9698, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata i8* %6, metadata !9697, metadata !DIExpression()), !dbg !9699
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9703
  call void @llvm.dbg.value(metadata i8* %7, metadata !9697, metadata !DIExpression()), !dbg !9699
  %8 = add i32 %5, 1, !dbg !9705
  call void @llvm.dbg.value(metadata i32 %8, metadata !9698, metadata !DIExpression()), !dbg !9699
  %9 = load i8, i8* %7, align 1, !dbg !9700
  %10 = icmp eq i8 %9, 0, !dbg !9701
  br i1 %10, label %11, label %4, !dbg !9702, !llvm.loop !9706

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !9699
  ret i32 %12, !dbg !9708
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9709 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9713, metadata !DIExpression()), !dbg !9716
  call void @llvm.dbg.value(metadata i32 %1, metadata !9714, metadata !DIExpression()), !dbg !9716
  call void @llvm.dbg.value(metadata i32 0, metadata !9715, metadata !DIExpression()), !dbg !9716
  %3 = load i8, i8* %0, align 1, !dbg !9717
  %4 = icmp ne i8 %3, 0, !dbg !9718
  %5 = icmp ne i32 %1, 0, !dbg !9719
  %6 = and i1 %4, %5, !dbg !9719
  br i1 %6, label %7, label %16, !dbg !9720

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9715, metadata !DIExpression()), !dbg !9716
  call void @llvm.dbg.value(metadata i8* %9, metadata !9713, metadata !DIExpression()), !dbg !9716
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9721
  call void @llvm.dbg.value(metadata i8* %10, metadata !9713, metadata !DIExpression()), !dbg !9716
  %11 = add nuw i32 %8, 1, !dbg !9723
  call void @llvm.dbg.value(metadata i32 %11, metadata !9715, metadata !DIExpression()), !dbg !9716
  %12 = load i8, i8* %10, align 1, !dbg !9717
  %13 = icmp ne i8 %12, 0, !dbg !9718
  %14 = icmp ult i32 %11, %1, !dbg !9719
  %15 = select i1 %13, i1 %14, i1 false, !dbg !9719
  br i1 %15, label %7, label %16, !dbg !9720, !llvm.loop !9724

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !9716
  ret i32 %17, !dbg !9726
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !9727 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9731, metadata !DIExpression()), !dbg !9733
  call void @llvm.dbg.value(metadata i8* %1, metadata !9732, metadata !DIExpression()), !dbg !9733
  %3 = load i8, i8* %0, align 1, !dbg !9734
  %4 = load i8, i8* %1, align 1, !dbg !9735
  %5 = icmp ne i8 %3, %4, !dbg !9736
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !9737
  br i1 %7, label %18, label %8, !dbg !9737

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !9732, metadata !DIExpression()), !dbg !9733
  call void @llvm.dbg.value(metadata i8* %10, metadata !9731, metadata !DIExpression()), !dbg !9733
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9738
  call void @llvm.dbg.value(metadata i8* %11, metadata !9731, metadata !DIExpression()), !dbg !9733
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9740
  call void @llvm.dbg.value(metadata i8* %12, metadata !9732, metadata !DIExpression()), !dbg !9733
  %13 = load i8, i8* %11, align 1, !dbg !9734
  %14 = load i8, i8* %12, align 1, !dbg !9735
  %15 = icmp ne i8 %13, %14, !dbg !9736
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !9737
  br i1 %17, label %18, label %8, !dbg !9737, !llvm.loop !9741

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !9734
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !9735
  %21 = zext i8 %19 to i32, !dbg !9744
  %22 = zext i8 %20 to i32, !dbg !9745
  %23 = sub nsw i32 %21, %22, !dbg !9746
  ret i32 %23, !dbg !9747
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9748 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9752, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.value(metadata i8* %1, metadata !9753, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.value(metadata i32 %2, metadata !9754, metadata !DIExpression()), !dbg !9755
  %4 = icmp eq i32 %2, 0, !dbg !9756
  br i1 %4, label %23, label %5, !dbg !9756

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !9754, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.value(metadata i8* %7, metadata !9753, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.value(metadata i8* %8, metadata !9752, metadata !DIExpression()), !dbg !9755
  %9 = load i8, i8* %8, align 1, !dbg !9757
  %10 = load i8, i8* %7, align 1, !dbg !9758
  %11 = icmp ne i8 %9, %10, !dbg !9759
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !9760
  br i1 %13, label %19, label %14, !dbg !9760

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9761
  call void @llvm.dbg.value(metadata i8* %15, metadata !9752, metadata !DIExpression()), !dbg !9755
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9763
  call void @llvm.dbg.value(metadata i8* %16, metadata !9753, metadata !DIExpression()), !dbg !9755
  %17 = add i32 %6, -1, !dbg !9764
  call void @llvm.dbg.value(metadata i32 %17, metadata !9754, metadata !DIExpression()), !dbg !9755
  %18 = icmp eq i32 %17, 0, !dbg !9756
  br i1 %18, label %23, label %5, !dbg !9756, !llvm.loop !9765

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !9768
  %21 = zext i8 %10 to i32, !dbg !9769
  %22 = sub nsw i32 %20, %21, !dbg !9770
  br label %23, !dbg !9771

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !9771
  ret i32 %24, !dbg !9772
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !9773 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9777, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata i8* %1, metadata !9778, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata i8** %2, metadata !9779, metadata !DIExpression()), !dbg !9782
  %4 = icmp eq i8* %0, null, !dbg !9783
  br i1 %4, label %5, label %7, !dbg !9783

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !9784
  br label %7, !dbg !9783

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !9783
  call void @llvm.dbg.value(metadata i8* %8, metadata !9780, metadata !DIExpression()), !dbg !9782
  %9 = load i8, i8* %8, align 1, !dbg !9785
  %10 = icmp eq i8 %9, 0, !dbg !9785
  br i1 %10, label %33, label %11, !dbg !9786

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9780, metadata !DIExpression()), !dbg !9782
  %14 = zext i8 %12 to i32, !dbg !9785
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !9787
  %16 = icmp eq i8* %15, null, !dbg !9786
  br i1 %16, label %21, label %17, !dbg !9788

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9789
  call void @llvm.dbg.value(metadata i8* %18, metadata !9780, metadata !DIExpression()), !dbg !9782
  %19 = load i8, i8* %18, align 1, !dbg !9785
  %20 = icmp eq i8 %19, 0, !dbg !9785
  br i1 %20, label %33, label %11, !dbg !9786, !llvm.loop !9791

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !9781, metadata !DIExpression()), !dbg !9782
  %24 = zext i8 %22 to i32, !dbg !9793
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !9794
  %26 = icmp eq i8* %25, null, !dbg !9795
  br i1 %26, label %27, label %31, !dbg !9796

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9797
  call void @llvm.dbg.value(metadata i8* %28, metadata !9781, metadata !DIExpression()), !dbg !9782
  %29 = load i8, i8* %28, align 1, !dbg !9793
  %30 = icmp eq i8 %29, 0, !dbg !9793
  br i1 %30, label %33, label %21, !dbg !9799, !llvm.loop !9800

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !9802
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9805
  br label %33, !dbg !9806

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !9782
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !9782
  store i8* %34, i8** %2, align 4, !dbg !9782
  ret i8* %35, !dbg !9807
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !9808 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9810, metadata !DIExpression()), !dbg !9812
  call void @llvm.dbg.value(metadata i8* %1, metadata !9811, metadata !DIExpression()), !dbg !9812
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !9813
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9814
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !9815
  ret i8* %0, !dbg !9816
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9817 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9819, metadata !DIExpression()), !dbg !9824
  call void @llvm.dbg.value(metadata i8* %1, metadata !9820, metadata !DIExpression()), !dbg !9824
  call void @llvm.dbg.value(metadata i32 %2, metadata !9821, metadata !DIExpression()), !dbg !9824
  call void @llvm.dbg.value(metadata i8* %0, metadata !9822, metadata !DIExpression()), !dbg !9824
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !9825
  call void @llvm.dbg.value(metadata i32 %4, metadata !9823, metadata !DIExpression()), !dbg !9824
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !9826
  call void @llvm.dbg.value(metadata i8* %5, metadata !9819, metadata !DIExpression()), !dbg !9824
  call void @llvm.dbg.value(metadata i8* %1, metadata !9820, metadata !DIExpression()), !dbg !9824
  call void @llvm.dbg.value(metadata i32 %2, metadata !9821, metadata !DIExpression()), !dbg !9824
  call void @llvm.dbg.value(metadata i32 %2, metadata !9821, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9824
  %6 = icmp eq i32 %2, 0, !dbg !9827
  br i1 %6, label %18, label %7, !dbg !9828

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !9829
  call void @llvm.dbg.value(metadata i8* %9, metadata !9819, metadata !DIExpression()), !dbg !9824
  call void @llvm.dbg.value(metadata i8* %10, metadata !9820, metadata !DIExpression()), !dbg !9824
  %12 = load i8, i8* %10, align 1, !dbg !9830
  %13 = icmp eq i8 %12, 0, !dbg !9831
  br i1 %13, label %18, label %14, !dbg !9832

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9833
  call void @llvm.dbg.value(metadata i8* %15, metadata !9820, metadata !DIExpression()), !dbg !9824
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9835
  call void @llvm.dbg.value(metadata i8* %16, metadata !9819, metadata !DIExpression()), !dbg !9824
  store i8 %12, i8* %9, align 1, !dbg !9836
  call void @llvm.dbg.value(metadata i32 %11, metadata !9821, metadata !DIExpression()), !dbg !9824
  call void @llvm.dbg.value(metadata i32 %11, metadata !9821, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9824
  %17 = icmp eq i32 %11, 0, !dbg !9827
  br i1 %17, label %18, label %7, !dbg !9828, !llvm.loop !9837

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !9824
  store i8 0, i8* %19, align 1, !dbg !9839
  ret i8* %0, !dbg !9840
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9841 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9845, metadata !DIExpression()), !dbg !9850
  call void @llvm.dbg.value(metadata i8* %1, metadata !9846, metadata !DIExpression()), !dbg !9850
  call void @llvm.dbg.value(metadata i32 %2, metadata !9847, metadata !DIExpression()), !dbg !9850
  call void @llvm.dbg.value(metadata i8* %0, metadata !9848, metadata !DIExpression()), !dbg !9850
  call void @llvm.dbg.value(metadata i8* %1, metadata !9849, metadata !DIExpression()), !dbg !9850
  %4 = icmp eq i32 %2, 0, !dbg !9851
  br i1 %4, label %31, label %5, !dbg !9853

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9849, metadata !DIExpression()), !dbg !9850
  call void @llvm.dbg.value(metadata i8* %0, metadata !9848, metadata !DIExpression()), !dbg !9850
  call void @llvm.dbg.value(metadata i32 %2, metadata !9847, metadata !DIExpression()), !dbg !9850
  %6 = add i32 %2, -1, !dbg !9854
  call void @llvm.dbg.value(metadata i32 %6, metadata !9847, metadata !DIExpression()), !dbg !9850
  %7 = icmp eq i32 %6, 0, !dbg !9855
  br i1 %7, label %23, label %8, !dbg !9856

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !9857
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !9857
  br label %11, !dbg !9857

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9849, metadata !DIExpression()), !dbg !9850
  call void @llvm.dbg.value(metadata i8* %14, metadata !9848, metadata !DIExpression()), !dbg !9850
  %15 = load i8, i8* %14, align 1, !dbg !9858
  %16 = load i8, i8* %13, align 1, !dbg !9859
  %17 = icmp eq i8 %15, %16, !dbg !9860
  br i1 %17, label %18, label %23, !dbg !9857

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9861
  call void @llvm.dbg.value(metadata i8* %19, metadata !9848, metadata !DIExpression()), !dbg !9850
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9863
  call void @llvm.dbg.value(metadata i8* %20, metadata !9849, metadata !DIExpression()), !dbg !9850
  call void @llvm.dbg.value(metadata i32 %12, metadata !9847, metadata !DIExpression()), !dbg !9850
  %21 = add i32 %12, -1, !dbg !9854
  call void @llvm.dbg.value(metadata i32 %21, metadata !9847, metadata !DIExpression()), !dbg !9850
  %22 = icmp eq i32 %21, 0, !dbg !9855
  br i1 %22, label %23, label %11, !dbg !9856, !llvm.loop !9864

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !9850
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !9850
  %26 = load i8, i8* %24, align 1, !dbg !9866
  %27 = zext i8 %26 to i32, !dbg !9866
  %28 = load i8, i8* %25, align 1, !dbg !9867
  %29 = zext i8 %28 to i32, !dbg !9867
  %30 = sub nsw i32 %27, %29, !dbg !9868
  br label %31, !dbg !9869

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !9850
  ret i32 %32, !dbg !9870
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9871 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9875, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i8* %1, metadata !9876, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i32 %2, metadata !9877, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i8* %0, metadata !9878, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i8* %1, metadata !9879, metadata !DIExpression()), !dbg !9880
  %4 = ptrtoint i8* %0 to i32, !dbg !9881
  %5 = ptrtoint i8* %1 to i32, !dbg !9881
  %6 = sub i32 %4, %5, !dbg !9881
  %7 = icmp ult i32 %6, %2, !dbg !9883
  br i1 %7, label %10, label %8, !dbg !9884

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9879, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i8* %0, metadata !9878, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i32 %2, metadata !9877, metadata !DIExpression()), !dbg !9880
  %9 = icmp eq i32 %2, 0, !dbg !9885
  br i1 %9, label %26, label %17, !dbg !9887

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9877, metadata !DIExpression()), !dbg !9880
  %12 = add i32 %11, -1, !dbg !9888
  call void @llvm.dbg.value(metadata i32 %12, metadata !9877, metadata !DIExpression()), !dbg !9880
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !9891
  %14 = load i8, i8* %13, align 1, !dbg !9891
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9892
  store i8 %14, i8* %15, align 1, !dbg !9893
  %16 = icmp eq i32 %12, 0, !dbg !9894
  br i1 %16, label %26, label %10, !dbg !9895, !llvm.loop !9896

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !9879, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i8* %19, metadata !9878, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i32 %20, metadata !9877, metadata !DIExpression()), !dbg !9880
  %21 = load i8, i8* %18, align 1, !dbg !9898
  store i8 %21, i8* %19, align 1, !dbg !9900
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9901
  call void @llvm.dbg.value(metadata i8* %22, metadata !9878, metadata !DIExpression()), !dbg !9880
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9902
  call void @llvm.dbg.value(metadata i8* %23, metadata !9879, metadata !DIExpression()), !dbg !9880
  %24 = add i32 %20, -1, !dbg !9903
  call void @llvm.dbg.value(metadata i32 %24, metadata !9877, metadata !DIExpression()), !dbg !9880
  %25 = icmp eq i32 %24, 0, !dbg !9885
  br i1 %25, label %26, label %17, !dbg !9887, !llvm.loop !9904

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9906
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9907 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9913, metadata !DIExpression()), !dbg !9918
  call void @llvm.dbg.value(metadata i8* %1, metadata !9914, metadata !DIExpression()), !dbg !9918
  call void @llvm.dbg.value(metadata i32 %2, metadata !9915, metadata !DIExpression()), !dbg !9918
  call void @llvm.dbg.value(metadata i8* %0, metadata !9916, metadata !DIExpression()), !dbg !9918
  call void @llvm.dbg.value(metadata i8* %1, metadata !9917, metadata !DIExpression()), !dbg !9918
  %4 = icmp eq i32 %2, 0, !dbg !9919
  br i1 %4, label %14, label %5, !dbg !9920

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9917, metadata !DIExpression()), !dbg !9918
  call void @llvm.dbg.value(metadata i8* %7, metadata !9916, metadata !DIExpression()), !dbg !9918
  call void @llvm.dbg.value(metadata i32 %8, metadata !9915, metadata !DIExpression()), !dbg !9918
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9921
  call void @llvm.dbg.value(metadata i8* %9, metadata !9917, metadata !DIExpression()), !dbg !9918
  %10 = load i8, i8* %6, align 1, !dbg !9923
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9924
  call void @llvm.dbg.value(metadata i8* %11, metadata !9916, metadata !DIExpression()), !dbg !9918
  store i8 %10, i8* %7, align 1, !dbg !9925
  %12 = add i32 %8, -1, !dbg !9926
  call void @llvm.dbg.value(metadata i32 %12, metadata !9915, metadata !DIExpression()), !dbg !9918
  %13 = icmp eq i32 %12, 0, !dbg !9919
  br i1 %13, label %14, label %5, !dbg !9920, !llvm.loop !9927

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !9929
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !9930 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9934, metadata !DIExpression()), !dbg !9939
  call void @llvm.dbg.value(metadata i32 %1, metadata !9935, metadata !DIExpression()), !dbg !9939
  call void @llvm.dbg.value(metadata i32 %2, metadata !9936, metadata !DIExpression()), !dbg !9939
  call void @llvm.dbg.value(metadata i8* %0, metadata !9937, metadata !DIExpression()), !dbg !9939
  %4 = trunc i32 %1 to i8, !dbg !9940
  call void @llvm.dbg.value(metadata i8 %4, metadata !9938, metadata !DIExpression()), !dbg !9939
  call void @llvm.dbg.value(metadata i32 %2, metadata !9936, metadata !DIExpression()), !dbg !9939
  call void @llvm.dbg.value(metadata i8* %0, metadata !9937, metadata !DIExpression()), !dbg !9939
  %5 = icmp eq i32 %2, 0, !dbg !9941
  br i1 %5, label %12, label %6, !dbg !9942

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9936, metadata !DIExpression()), !dbg !9939
  call void @llvm.dbg.value(metadata i8* %8, metadata !9937, metadata !DIExpression()), !dbg !9939
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9943
  call void @llvm.dbg.value(metadata i8* %9, metadata !9937, metadata !DIExpression()), !dbg !9939
  store i8 %4, i8* %8, align 1, !dbg !9945
  %10 = add i32 %7, -1, !dbg !9946
  call void @llvm.dbg.value(metadata i32 %10, metadata !9936, metadata !DIExpression()), !dbg !9939
  %11 = icmp eq i32 %10, 0, !dbg !9941
  br i1 %11, label %12, label %6, !dbg !9942, !llvm.loop !9947

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !9949
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9950 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9954, metadata !DIExpression()), !dbg !9960
  call void @llvm.dbg.value(metadata i32 %1, metadata !9955, metadata !DIExpression()), !dbg !9960
  call void @llvm.dbg.value(metadata i32 %2, metadata !9956, metadata !DIExpression()), !dbg !9960
  %4 = icmp eq i32 %2, 0, !dbg !9961
  br i1 %4, label %17, label %5, !dbg !9962

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9963

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9964
  call void @llvm.dbg.value(metadata i8* %9, metadata !9957, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata i32 %8, metadata !9956, metadata !DIExpression()), !dbg !9960
  call void @llvm.dbg.value(metadata i8* %9, metadata !9957, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9964
  %10 = load i8, i8* %9, align 1, !dbg !9965
  %11 = icmp eq i8 %10, %6, !dbg !9968
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !9969
  call void @llvm.dbg.value(metadata i8* %12, metadata !9957, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata i32 %13, metadata !9956, metadata !DIExpression()), !dbg !9960
  br i1 %15, label %16, label %7, !dbg !9969, !llvm.loop !9970

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !9972

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !9960
  ret i8* %19, !dbg !9973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !9974 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9976, metadata !DIExpression()), !dbg !9977
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9978
  ret void, !dbg !9979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #3 !dbg !9980 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9982, metadata !DIExpression()), !dbg !9983
  ret i32 -1, !dbg !9984
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9985 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9989, metadata !DIExpression()), !dbg !9991
  call void @llvm.dbg.value(metadata i32* %1, metadata !9990, metadata !DIExpression()), !dbg !9991
  %3 = ptrtoint i32* %1 to i32, !dbg !9992
  %4 = and i32 %3, -2, !dbg !9992
  %5 = icmp eq i32 %4, 2, !dbg !9992
  br i1 %5, label %6, label %9, !dbg !9992

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9993
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !9993
  br label %9, !dbg !9994

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9994
  ret i32 %10, !dbg !9995
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9996 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9998, metadata !DIExpression()), !dbg !10000
  call void @llvm.dbg.value(metadata i32* %1, metadata !9999, metadata !DIExpression()), !dbg !10000
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !10001
  ret i32 %3, !dbg !10002
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !10003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10006, metadata !DIExpression()), !dbg !10008
  call void @llvm.dbg.value(metadata i32* %1, metadata !10007, metadata !DIExpression()), !dbg !10008
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10009, !srcloc !10011
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !10012
  ret i32 %3, !dbg !10013
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !10014 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10019, metadata !DIExpression()), !dbg !10023
  call void @llvm.dbg.value(metadata i32* %1, metadata !10020, metadata !DIExpression()), !dbg !10023
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !10024
  call void @llvm.dbg.value(metadata i32 %3, metadata !10021, metadata !DIExpression()), !dbg !10023
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !10025
  call void @llvm.dbg.value(metadata i32 %4, metadata !10022, metadata !DIExpression()), !dbg !10023
  %5 = icmp ne i32 %3, %4, !dbg !10026
  %6 = sext i1 %5 to i32, !dbg !10027
  ret i32 %6, !dbg !10028
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !10029 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10033, metadata !DIExpression()), !dbg !10037
  call void @llvm.dbg.value(metadata i32 %1, metadata !10034, metadata !DIExpression()), !dbg !10037
  call void @llvm.dbg.value(metadata i32 %2, metadata !10035, metadata !DIExpression()), !dbg !10037
  call void @llvm.dbg.value(metadata i32* %3, metadata !10036, metadata !DIExpression()), !dbg !10037
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !10038
  ret i32 %5, !dbg !10039
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !10040 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10042, metadata !DIExpression()), !dbg !10046
  call void @llvm.dbg.value(metadata i32 %1, metadata !10043, metadata !DIExpression()), !dbg !10046
  call void @llvm.dbg.value(metadata i32 %2, metadata !10044, metadata !DIExpression()), !dbg !10046
  call void @llvm.dbg.value(metadata i32* %3, metadata !10045, metadata !DIExpression()), !dbg !10046
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10047, !srcloc !10049
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !10050
  ret i32 %5, !dbg !10051
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !10052 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10054, metadata !DIExpression()), !dbg !10062
  call void @llvm.dbg.value(metadata i32 %1, metadata !10055, metadata !DIExpression()), !dbg !10062
  call void @llvm.dbg.value(metadata i32 %2, metadata !10056, metadata !DIExpression()), !dbg !10062
  call void @llvm.dbg.value(metadata i32* %3, metadata !10057, metadata !DIExpression()), !dbg !10062
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !10063
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !10065
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !10065
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !10065
  br i1 %11, label %33, label %12, !dbg !10065

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !10062
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !10062
  call void @llvm.dbg.value(metadata i8* %14, metadata !10060, metadata !DIExpression()), !dbg !10062
  call void @llvm.dbg.value(metadata i32 %13, metadata !10058, metadata !DIExpression()), !dbg !10062
  call void @llvm.dbg.value(metadata i32 %1, metadata !10059, metadata !DIExpression()), !dbg !10062
  br label %15, !dbg !10066

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !10068
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !10062
  call void @llvm.dbg.value(metadata i8* %17, metadata !10060, metadata !DIExpression()), !dbg !10062
  call void @llvm.dbg.value(metadata i32 %16, metadata !10059, metadata !DIExpression()), !dbg !10062
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !10069
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !10072
  call void @llvm.dbg.value(metadata i8* %19, metadata !10060, metadata !DIExpression()), !dbg !10062
  %20 = load i8, i8* %17, align 1, !dbg !10073
  %21 = zext i8 %20 to i32, !dbg !10074
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !10069
  %23 = icmp eq i32 %22, -1, !dbg !10075
  br i1 %23, label %30, label %24, !dbg !10076

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !10077
  call void @llvm.dbg.value(metadata i32 %25, metadata !10059, metadata !DIExpression()), !dbg !10062
  %26 = icmp eq i32 %25, 0, !dbg !10078
  br i1 %26, label %27, label %15, !dbg !10079, !llvm.loop !10080

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !10082
  call void @llvm.dbg.value(metadata i32 %28, metadata !10058, metadata !DIExpression()), !dbg !10062
  %29 = icmp eq i32 %28, 0, !dbg !10083
  br i1 %29, label %30, label %12, !dbg !10084, !llvm.loop !10085

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !10062
  call void @llvm.dbg.value(metadata i32 %31, metadata !10058, metadata !DIExpression()), !dbg !10062
  call void @llvm.dbg.label(metadata !10061), !dbg !10088
  %32 = sub i32 %2, %31, !dbg !10089
  br label %33, !dbg !10090

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !10062
  ret i32 %34, !dbg !10091
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !10092 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10096, metadata !DIExpression()), !dbg !10097
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !10098
  %3 = icmp eq i32 %2, -1, !dbg !10100
  br i1 %3, label %8, label %4, !dbg !10101

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !10102
  %6 = icmp eq i32 %5, -1, !dbg !10103
  %7 = sext i1 %6 to i32, !dbg !10102
  br label %8, !dbg !10104

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !10097
  ret i32 %9, !dbg !10105
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !10106 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10108, metadata !DIExpression()), !dbg !10109
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !10110
  ret void, !dbg !10111
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !10112 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10116, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.value(metadata i32 %1, metadata !10117, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !10118, metadata !DIExpression()), !dbg !10122
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !10123
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !10123
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !10123
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !10119, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.value(metadata i32 %0, metadata !10121, metadata !DIExpression()), !dbg !10122
  %7 = icmp slt i32 %0, %1, !dbg !10124
  br i1 %7, label %8, label %22, !dbg !10127

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10121, metadata !DIExpression()), !dbg !10122
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !10128
  %11 = icmp eq i32 %10, 0, !dbg !10128
  br i1 %11, label %19, label %12, !dbg !10131

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !10132
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !10134
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !10134
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !10136
  br i1 %15, label %19, label %16, !dbg !10137

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !10138
  %18 = load i8*, i8** %17, align 4, !dbg !10138
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !10139
  br label %19, !dbg !10140

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !10141
  call void @llvm.dbg.value(metadata i32 %20, metadata !10121, metadata !DIExpression()), !dbg !10122
  %21 = icmp eq i32 %20, %1, !dbg !10124
  br i1 %21, label %22, label %8, !dbg !10127, !llvm.loop !10142

22:                                               ; preds = %19, %3
  ret void, !dbg !10144
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #17 !dbg !10145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10147, metadata !DIExpression()), !dbg !10148
  %2 = shl nuw i32 1, %0, !dbg !10149
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !10152
  ret i32 %3, !dbg !10153
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !10154 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10158, metadata !DIExpression()), !dbg !10159
  %2 = shl nuw i32 1, %0, !dbg !10160
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !10163
  ret void, !dbg !10164
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10168, metadata !DIExpression()), !dbg !10169
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !10170
  ret void, !dbg !10171
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10174, metadata !DIExpression()), !dbg !10175
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !10176
  %3 = and i32 %2, %0, !dbg !10176
  %4 = icmp eq i32 %3, %0, !dbg !10177
  %5 = zext i1 %4 to i32, !dbg !10177
  ret i32 %5, !dbg !10178
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !10179 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10181, metadata !DIExpression()), !dbg !10182
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !10183
  ret void, !dbg !10184
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !10185 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10187, metadata !DIExpression()), !dbg !10188
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !10189
  ret void, !dbg !10190
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !10191 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10193, metadata !DIExpression()), !dbg !10194
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !10195
  ret void, !dbg !10196
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !10197 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10199, metadata !DIExpression()), !dbg !10200
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !10201
  ret void, !dbg !10202
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !10203 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10205, metadata !DIExpression()), !dbg !10206
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !10207
  ret void, !dbg !10208
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !10209 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10211, metadata !DIExpression()), !dbg !10212
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !10213
  ret void, !dbg !10214
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !10215 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10217, metadata !DIExpression()), !dbg !10218
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !10219
  ret void, !dbg !10220
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !10221 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10223, metadata !DIExpression()), !dbg !10224
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !10225
  ret void, !dbg !10226
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !10227 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10229, metadata !DIExpression()), !dbg !10230
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !10231
  ret void, !dbg !10232
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !10233 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10235, metadata !DIExpression()), !dbg !10236
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !10237
  ret void, !dbg !10238
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10239 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10241, metadata !DIExpression()), !dbg !10242
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !10243
  ret i32 0, !dbg !10244
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !880 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !884, metadata !DIExpression()), !dbg !10245
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !10246
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !10248
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !10250
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !10252
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !10254
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !10256
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !10258
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !10260
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !10262
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !10264
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !10266
  ret void, !dbg !10268
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !10269 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10271, metadata !DIExpression()), !dbg !10273
  call void @llvm.dbg.value(metadata i32 0, metadata !10272, metadata !DIExpression()), !dbg !10273
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !10274
  %3 = load i32, i32* %2, align 4, !dbg !10274
  call void @llvm.dbg.value(metadata i32 %3, metadata !10272, metadata !DIExpression()), !dbg !10273
  %4 = shl nuw i32 1, %0, !dbg !10275
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !10276
  tail call void @arch_irq_enable(i32 noundef %3) #27, !dbg !10277
  ret void, !dbg !10278
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10279 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10281, metadata !DIExpression()), !dbg !10282
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10283
  %3 = or i32 %2, %0, !dbg !10283
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10283
  ret void, !dbg !10284
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !10285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10287, metadata !DIExpression()), !dbg !10288
  %2 = icmp slt i32 %0, 32, !dbg !10289
  br i1 %2, label %3, label %5, !dbg !10291

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !10292
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !10294
  br label %5, !dbg !10295

5:                                                ; preds = %1, %3
  ret void, !dbg !10296
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10299, metadata !DIExpression()), !dbg !10300
  %2 = xor i32 %0, -1, !dbg !10301
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10301
  %4 = and i32 %3, %2, !dbg !10301
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10301
  ret void, !dbg !10302
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !10303 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10307, metadata !DIExpression()), !dbg !10309
  call void @llvm.dbg.value(metadata i32 %1, metadata !10308, metadata !DIExpression()), !dbg !10309
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !10310

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !10311
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !10313
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !10314
  br label %11, !dbg !10315

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !10316
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !10317
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !10318
  br label %11, !dbg !10319

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !10320
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !10321
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !10322
  br label %11, !dbg !10323

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !10324
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !10325
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !10326
  br label %11, !dbg !10327

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !10328
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10329 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10331, metadata !DIExpression()), !dbg !10332
  %2 = xor i32 %0, -1, !dbg !10333
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10333
  %4 = and i32 %3, %2, !dbg !10333
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10333
  ret void, !dbg !10334
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10335 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10337, metadata !DIExpression()), !dbg !10338
  %2 = xor i32 %0, -1, !dbg !10339
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10339
  %4 = and i32 %3, %2, !dbg !10339
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10339
  ret void, !dbg !10340
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10341 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10343, metadata !DIExpression()), !dbg !10344
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10345
  %3 = or i32 %2, %0, !dbg !10345
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10345
  ret void, !dbg !10346
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10347 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10349, metadata !DIExpression()), !dbg !10350
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10351
  %3 = or i32 %2, %0, !dbg !10351
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10351
  ret void, !dbg !10352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !10353 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10357, metadata !DIExpression()), !dbg !10363
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !10358, metadata !DIExpression()), !dbg !10363
  call void @llvm.dbg.value(metadata i8* %2, metadata !10359, metadata !DIExpression()), !dbg !10363
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !10360, metadata !DIExpression()), !dbg !10363
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10362, metadata !DIExpression()), !dbg !10363
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10364
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !10364
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !10366
  br i1 %6, label %7, label %9, !dbg !10367

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !10368
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10369
  store i8* %2, i8** %8, align 4, !dbg !10370
  br label %9, !dbg !10371

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !10363
  ret i32 %10, !dbg !10372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #9 !dbg !10373 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10375, metadata !DIExpression()), !dbg !10378
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !10376, metadata !DIExpression()), !dbg !10378
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10377, metadata !DIExpression()), !dbg !10378
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10379
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !10380
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10381
  store i8* null, i8** %3, align 4, !dbg !10382
  ret void, !dbg !10383
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !10384 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10386, metadata !DIExpression()), !dbg !10391
  call void @llvm.dbg.value(metadata i8* %1, metadata !10387, metadata !DIExpression()), !dbg !10391
  call void @llvm.dbg.value(metadata i8* %1, metadata !10388, metadata !DIExpression()), !dbg !10391
  %3 = bitcast i8* %1 to i32*, !dbg !10392
  %4 = load i32, i32* %3, align 4, !dbg !10392
  %5 = add i32 %4, -169, !dbg !10392
  %6 = icmp ult i32 %5, -121, !dbg !10392
  br i1 %6, label %15, label %7, !dbg !10394

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10395
  %9 = inttoptr i32 %8 to i32*, !dbg !10396
  call void @llvm.dbg.value(metadata i32* %9, metadata !10389, metadata !DIExpression()), !dbg !10391
  %10 = load volatile i32, i32* %9, align 4, !dbg !10397
  call void @llvm.dbg.value(metadata i32 %10, metadata !10390, metadata !DIExpression()), !dbg !10391
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10398
  %12 = bitcast i8* %11 to i32*, !dbg !10398
  %13 = load i32, i32* %12, align 4, !dbg !10398
  %14 = or i32 %13, %10, !dbg !10399
  call void @llvm.dbg.value(metadata i32 %14, metadata !10390, metadata !DIExpression()), !dbg !10391
  store volatile i32 %14, i32* %9, align 4, !dbg !10400
  br label %15, !dbg !10401

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10391
  ret i32 %16, !dbg !10402
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !10403 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10405, metadata !DIExpression()), !dbg !10410
  call void @llvm.dbg.value(metadata i8* %1, metadata !10406, metadata !DIExpression()), !dbg !10410
  call void @llvm.dbg.value(metadata i8* %1, metadata !10407, metadata !DIExpression()), !dbg !10410
  %3 = bitcast i8* %1 to i32*, !dbg !10411
  %4 = load i32, i32* %3, align 4, !dbg !10411
  %5 = add i32 %4, -169, !dbg !10411
  %6 = icmp ult i32 %5, -121, !dbg !10411
  br i1 %6, label %16, label %7, !dbg !10413

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10414
  %9 = inttoptr i32 %8 to i32*, !dbg !10415
  call void @llvm.dbg.value(metadata i32* %9, metadata !10408, metadata !DIExpression()), !dbg !10410
  %10 = load volatile i32, i32* %9, align 4, !dbg !10416
  call void @llvm.dbg.value(metadata i32 %10, metadata !10409, metadata !DIExpression()), !dbg !10410
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10417
  %12 = bitcast i8* %11 to i32*, !dbg !10417
  %13 = load i32, i32* %12, align 4, !dbg !10417
  %14 = xor i32 %13, -1, !dbg !10418
  %15 = and i32 %10, %14, !dbg !10419
  call void @llvm.dbg.value(metadata i32 %15, metadata !10409, metadata !DIExpression()), !dbg !10410
  store volatile i32 %15, i32* %9, align 4, !dbg !10420
  br label %16, !dbg !10421

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10410
  ret i32 %17, !dbg !10422
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !10423 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10425, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata i8* %1, metadata !10426, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata i32* %2, metadata !10427, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata i8* %1, metadata !10428, metadata !DIExpression()), !dbg !10433
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !10434
  call void @llvm.dbg.value(metadata i32 %4, metadata !10429, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata i32 undef, metadata !10430, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata i32 undef, metadata !10431, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata i32 %4, metadata !10432, metadata !DIExpression()), !dbg !10433
  %5 = bitcast i8* %1 to i32*, !dbg !10435
  %6 = load i32, i32* %5, align 4, !dbg !10435
  switch i32 %6, label %18 [
    i32 48, label %16
    i32 52, label %16
    i32 56, label %16
    i32 64, label %7
    i32 68, label %9
    i32 168, label %16
    i32 6, label %16
    i32 1, label %11
    i32 4, label %14
    i32 5, label %15
  ], !dbg !10436

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !10437
  call void @llvm.dbg.value(metadata i32 %8, metadata !10430, metadata !DIExpression()), !dbg !10433
  br label %16, !dbg !10438

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #26, !dbg !10440
  call void @llvm.dbg.value(metadata i32 %10, metadata !10431, metadata !DIExpression()), !dbg !10433
  br label %16, !dbg !10441

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #27, !dbg !10442
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12) #26, !dbg !10443
  br label %16, !dbg !10444

14:                                               ; preds = %3
  br label %16, !dbg !10445

15:                                               ; preds = %3
  br label %16, !dbg !10446

16:                                               ; preds = %3, %3, %3, %3, %3, %15, %14, %11, %9, %7
  %17 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ 0, %14 ], [ 32000, %15 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %17, i32* %2, align 4, !dbg !10447
  br label %18, !dbg !10448

18:                                               ; preds = %16, %3
  %19 = phi i32 [ -134, %3 ], [ 0, %16 ], !dbg !10433
  ret i32 %19, !dbg !10448
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !10449 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10451, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.value(metadata i8* %1, metadata !10452, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.value(metadata i8* %2, metadata !10453, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.value(metadata i8* %1, metadata !10454, metadata !DIExpression()), !dbg !10459
  %4 = bitcast i8* %1 to i32*, !dbg !10460
  %5 = load i32, i32* %4, align 4, !dbg !10460
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !10461
  call void @llvm.dbg.value(metadata i32 %6, metadata !10458, metadata !DIExpression()), !dbg !10459
  %7 = icmp slt i32 %6, 0, !dbg !10462
  br i1 %7, label %22, label %8, !dbg !10464

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10454, metadata !DIExpression()), !dbg !10459
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10465
  %10 = bitcast i8* %9 to i32*, !dbg !10465
  %11 = load i32, i32* %10, align 4, !dbg !10465
  %12 = lshr i32 %11, 16, !dbg !10465
  %13 = and i32 %12, 7, !dbg !10465
  %14 = lshr i32 %11, 8, !dbg !10466
  %15 = and i32 %14, 31, !dbg !10466
  %16 = shl i32 %13, %15, !dbg !10467
  call void @llvm.dbg.value(metadata i32 %16, metadata !10457, metadata !DIExpression()), !dbg !10459
  %17 = and i32 %11, 255, !dbg !10468
  %18 = or i32 %17, 1073887232, !dbg !10469
  %19 = inttoptr i32 %18 to i32*, !dbg !10470
  call void @llvm.dbg.value(metadata i32* %19, metadata !10455, metadata !DIExpression()), !dbg !10459
  %20 = load volatile i32, i32* %19, align 4, !dbg !10471
  call void @llvm.dbg.value(metadata i32 %20, metadata !10456, metadata !DIExpression()), !dbg !10459
  %21 = or i32 %16, %20, !dbg !10472
  call void @llvm.dbg.value(metadata i32 %21, metadata !10456, metadata !DIExpression()), !dbg !10459
  store volatile i32 %21, i32* %19, align 4, !dbg !10473
  br label %22, !dbg !10474

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !10459
  ret i32 %23, !dbg !10475
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #3 !dbg !10476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10480, metadata !DIExpression()), !dbg !10482
  call void @llvm.dbg.value(metadata i32 0, metadata !10481, metadata !DIExpression()), !dbg !10482
  %2 = add i32 %0, -1, !dbg !10483
  %3 = icmp ult i32 %2, 6, !dbg !10483
  br i1 %3, label %4, label %7, !dbg !10483

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !10483
  %6 = load i32, i32* %5, align 4, !dbg !10483
  call void @llvm.dbg.value(metadata i32 %6, metadata !10481, metadata !DIExpression()), !dbg !10482
  br label %7, !dbg !10484

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !10482
  ret i32 %8, !dbg !10485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !10486 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10490, metadata !DIExpression()), !dbg !10492
  call void @llvm.dbg.value(metadata i32 %1, metadata !10491, metadata !DIExpression()), !dbg !10492
  %3 = udiv i32 %0, %1, !dbg !10493
  ret i32 %3, !dbg !10494
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0) unnamed_addr #3 !dbg !10495 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10499, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata i32 16, metadata !10500, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata i32 336, metadata !10501, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata i32 4, metadata !10502, metadata !DIExpression()), !dbg !10503
  %2 = mul i32 %0, 336, !dbg !10504
  %3 = lshr i32 %2, 6, !dbg !10505
  ret i32 %3, !dbg !10506
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !10507 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10509, metadata !DIExpression()), !dbg !10512
  tail call void @config_enable_default_clocks() #27, !dbg !10513
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !10514
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !10514
  %4 = lshr i32 %3, 4, !dbg !10514
  %5 = and i32 %4, 15, !dbg !10514
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10514
  %7 = load i8, i8* %6, align 1, !dbg !10514
  %8 = zext i8 %7 to i32, !dbg !10514
  %9 = lshr i32 %2, %8, !dbg !10514
  call void @llvm.dbg.value(metadata i32 %9, metadata !10510, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !10511, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10512
  %10 = icmp ult i32 %9, 84000000, !dbg !10515
  br i1 %10, label %11, label %13, !dbg !10517

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !10518
  br label %13, !dbg !10520

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !10521
  tail call fastcc void @set_up_plls() #26, !dbg !10522
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !10523
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !10526
  br label %14, !dbg !10527

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10528
  %16 = icmp eq i32 %15, 8, !dbg !10529
  br i1 %16, label %17, label %14, !dbg !10527, !llvm.loop !10530

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !10532
  br i1 %18, label %19, label %21, !dbg !10534

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !10535
  br label %21, !dbg !10537

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !10538
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !10539
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !10540
  ret i32 0, !dbg !10541
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #17 !dbg !10542 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10544
  %2 = and i32 %1, 240, !dbg !10544
  ret i32 %2, !dbg !10545
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !10546 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10547
  %2 = icmp eq i32 %1, 1, !dbg !10551
  br i1 %2, label %7, label %3, !dbg !10552

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !10553
  br label %4, !dbg !10555

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10556
  %6 = icmp eq i32 %5, 1, !dbg !10557
  br i1 %6, label %7, label %4, !dbg !10555, !llvm.loop !10558

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !10560
  br label %8, !dbg !10563

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !10564
  %10 = icmp eq i32 %9, 1, !dbg !10565
  br i1 %10, label %11, label %8, !dbg !10563, !llvm.loop !10566

11:                                               ; preds = %8
  ret void, !dbg !10568
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10569 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10570
  %2 = icmp eq i32 %1, 8, !dbg !10572
  br i1 %2, label %3, label %4, !dbg !10573

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !10574
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !10576
  br label %4, !dbg !10577

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !10578
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10579
  %6 = and i32 %5, -196609, !dbg !10579
  %7 = or i32 %6, 65536, !dbg !10579
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10579
  tail call void @config_pll_sysclock() #27, !dbg !10580
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !10581
  br label %8, !dbg !10582

8:                                                ; preds = %8, %4
  %9 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !10583
  %10 = icmp eq i32 %9, 1, !dbg !10584
  br i1 %10, label %11, label %8, !dbg !10582, !llvm.loop !10585

11:                                               ; preds = %8
  ret void, !dbg !10587
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !10588 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10590, metadata !DIExpression()), !dbg !10591
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10592
  %2 = and i32 %1, -241, !dbg !10592
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10592
  ret void, !dbg !10593
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !10594 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10596, metadata !DIExpression()), !dbg !10597
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10598
  %3 = and i32 %2, -4, !dbg !10598
  %4 = or i32 %3, %0, !dbg !10598
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10598
  ret void, !dbg !10599
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #17 !dbg !10600 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10601
  %2 = and i32 %1, 12, !dbg !10601
  ret i32 %2, !dbg !10602
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !10603 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !10605, metadata !DIExpression()), !dbg !10606
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10607
  %2 = and i32 %1, -7169, !dbg !10607
  %3 = or i32 %2, 4096, !dbg !10607
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10607
  ret void, !dbg !10608
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !10609 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10611, metadata !DIExpression()), !dbg !10612
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10613
  %2 = and i32 %1, -57345, !dbg !10613
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10613
  ret void, !dbg !10614
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !10615 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10616
  %2 = icmp eq i32 %1, 1, !dbg !10618
  br i1 %2, label %7, label %3, !dbg !10619

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !10620
  br label %4, !dbg !10622

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10623
  %6 = icmp eq i32 %5, 1, !dbg !10624
  br i1 %6, label %7, label %4, !dbg !10622, !llvm.loop !10625

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !10627
  br label %8, !dbg !10628

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10629
  %10 = icmp eq i32 %9, 0, !dbg !10630
  br i1 %10, label %11, label %8, !dbg !10628, !llvm.loop !10631

11:                                               ; preds = %8
  ret void, !dbg !10633
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !10634 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10635
  %2 = and i32 %1, -16777217, !dbg !10635
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10635
  ret void, !dbg !10636
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !10637 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10638
  %2 = or i32 %1, 16777216, !dbg !10638
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10638
  ret void, !dbg !10639
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #17 !dbg !10640 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10641
  %2 = lshr i32 %1, 25, !dbg !10642
  %3 = and i32 %2, 1, !dbg !10642
  ret i32 %3, !dbg !10643
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #17 !dbg !10644 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10645
  %2 = lshr i32 %1, 1, !dbg !10646
  %3 = and i32 %2, 1, !dbg !10646
  ret i32 %3, !dbg !10647
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !10648 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10649
  %2 = or i32 %1, 1, !dbg !10649
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10649
  ret void, !dbg !10650
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !10651 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10652
  %2 = or i32 %1, 1, !dbg !10652
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10652
  ret void, !dbg !10653
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #17 !dbg !10654 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10655
  %2 = lshr i32 %1, 1, !dbg !10656
  %3 = and i32 %2, 1, !dbg !10656
  ret i32 %3, !dbg !10657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #3 !dbg !10658 {
  ret i32 16000000, !dbg !10660
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !10663 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !10664
  ret void, !dbg !10665
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !10666 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10670, metadata !DIExpression()), !dbg !10674
  call void @llvm.dbg.value(metadata i32 16, metadata !10671, metadata !DIExpression()), !dbg !10674
  call void @llvm.dbg.value(metadata i32 336, metadata !10672, metadata !DIExpression()), !dbg !10674
  call void @llvm.dbg.value(metadata i32 65536, metadata !10673, metadata !DIExpression()), !dbg !10674
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10675
  %2 = and i32 %1, -4227072, !dbg !10675
  %3 = or i32 %2, 21520, !dbg !10675
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10675
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10676
  %5 = and i32 %4, -196609, !dbg !10676
  %6 = or i32 %5, 65536, !dbg !10676
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10676
  ret void, !dbg !10677
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #21 !dbg !10678 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !10679
  ret void, !dbg !10680
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #21 !dbg !10681 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10684, metadata !DIExpression()), !dbg !10686
  %2 = bitcast i32* %1 to i8*, !dbg !10687
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10687
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10685, metadata !DIExpression()), !dbg !10688
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10689
  %4 = or i32 %3, 268435456, !dbg !10689
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10689
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10690
  %6 = and i32 %5, 268435456, !dbg !10690
  store volatile i32 %6, i32* %1, align 4, !dbg !10691
  %7 = load volatile i32, i32* %1, align 4, !dbg !10692
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10693
  ret void, !dbg !10693
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10694 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10696, metadata !DIExpression()), !dbg !10697
  %2 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !10698
  br i1 %2, label %3, label %4, !dbg !10700

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !10701
  br label %4, !dbg !10702

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10697
  ret i32 %5, !dbg !10703
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10704 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10708, metadata !DIExpression()), !dbg !10709
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10710, !srcloc !10712
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !10713
  ret i1 %1, !dbg !10714
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10715 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10716
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10717
  ret void, !dbg !10718
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10719 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10721, metadata !DIExpression()), !dbg !10722
  %2 = icmp eq i32 %0, 10, !dbg !10723
  br i1 %2, label %3, label %4, !dbg !10725

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !10726
  br label %4, !dbg !10728

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10729
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !10730
  ret i32 %0, !dbg !10731
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10732 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10735, metadata !DIExpression()), !dbg !10737
  call void @llvm.dbg.value(metadata i8 %0, metadata !10736, metadata !DIExpression()), !dbg !10737
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10738, !srcloc !10740
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !10741
  ret void, !dbg !10742
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10743 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10745, metadata !DIExpression()), !dbg !10748
  call void @llvm.dbg.value(metadata i8 %0, metadata !10746, metadata !DIExpression()), !dbg !10748
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10749
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10747, metadata !DIExpression()), !dbg !10748
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10750
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10750
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #27, !dbg !10751
  ret void, !dbg !10752
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10753 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10755, metadata !DIExpression()), !dbg !10756
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #27, !dbg !10757
  ret i1 %1, !dbg !10758
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #3 !dbg !10759 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10806, metadata !DIExpression()), !dbg !10809
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10807, metadata !DIExpression()), !dbg !10809
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10808, metadata !DIExpression()), !dbg !10809
  ret void, !dbg !10810
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define internal i32 @tc_shim_init(%struct.device* nocapture noundef readnone %0) #20 !dbg !10811 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10813, metadata !DIExpression()), !dbg !10815
  call void @llvm.dbg.value(metadata i32 0, metadata !10814, metadata !DIExpression()), !dbg !10815
  call void @llvm.dbg.value(metadata i32 0, metadata !10814, metadata !DIExpression()), !dbg !10815
  store i32 0, i32* getelementptr inbounds ([2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 0, i32 0), align 4, !dbg !10816
  call void @llvm.dbg.value(metadata i32 1, metadata !10814, metadata !DIExpression()), !dbg !10815
  call void @llvm.dbg.value(metadata i32 1, metadata !10814, metadata !DIExpression()), !dbg !10815
  store i32 0, i32* getelementptr inbounds ([2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 1, i32 0), align 4, !dbg !10816
  call void @llvm.dbg.value(metadata i32 2, metadata !10814, metadata !DIExpression()), !dbg !10815
  ret i32 0, !dbg !10820
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @tc_query_caps(%struct.device* nocapture noundef readnone %0) #3 !dbg !10821 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10823, metadata !DIExpression()), !dbg !10824
  ret i32 50, !dbg !10825
}

; Function Attrs: noinline nounwind optsize
define internal i32 @tc_session_setup(%struct.device* nocapture noundef readnone %0, %struct.cipher_ctx* nocapture noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #1 !dbg !10826 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10828, metadata !DIExpression()), !dbg !10836
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !10829, metadata !DIExpression()), !dbg !10836
  call void @llvm.dbg.value(metadata i32 %2, metadata !10830, metadata !DIExpression()), !dbg !10836
  call void @llvm.dbg.value(metadata i32 %3, metadata !10831, metadata !DIExpression()), !dbg !10836
  call void @llvm.dbg.value(metadata i32 %4, metadata !10832, metadata !DIExpression()), !dbg !10836
  %6 = icmp eq i32 %2, 1, !dbg !10837
  br i1 %6, label %8, label %7, !dbg !10839

7:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 69) #27, !dbg !10840
  br label %70, !dbg !10846

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 7, !dbg !10847
  %10 = load i16, i16* %9, align 2, !dbg !10847
  %11 = and i16 %10, 32, !dbg !10849
  %12 = icmp eq i16 %11, 0, !dbg !10849
  br i1 %12, label %13, label %14, !dbg !10850

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.154, i32 0, i32 0), i32 noundef 69) #27, !dbg !10851
  br label %70, !dbg !10857

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 6, !dbg !10858
  %16 = load i16, i16* %15, align 4, !dbg !10858
  %17 = icmp eq i16 %16, 16, !dbg !10860
  br i1 %17, label %19, label %18, !dbg !10861

18:                                               ; preds = %14
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.155, i32 0, i32 0), i32 noundef 69) #27, !dbg !10862
  br label %70, !dbg !10868

19:                                               ; preds = %14
  %20 = icmp eq i32 %4, 1, !dbg !10869
  br i1 %20, label %21, label %37, !dbg !10871

21:                                               ; preds = %19
  switch i32 %3, label %36 [
    i32 2, label %22
    i32 3, label %25
    i32 4, label %33
  ], !dbg !10872

22:                                               ; preds = %21
  %23 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10874
  %24 = bitcast %union.anon.3* %23 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !10874
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_cbc_encrypt, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %24, align 4, !dbg !10876
  br label %53, !dbg !10877

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 5, i32 0, i32 0, !dbg !10878
  %27 = load i32, i32* %26, align 4, !dbg !10878
  %28 = icmp eq i32 %27, 32, !dbg !10880
  br i1 %28, label %30, label %29, !dbg !10881

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5.156, i32 0, i32 0), i32 noundef 69) #27, !dbg !10882
  br label %70, !dbg !10888

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10889
  %32 = bitcast %union.anon.3* %31 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !10889
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_ctr_op, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %32, align 4, !dbg !10890
  br label %53, !dbg !10891

33:                                               ; preds = %21
  %34 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10892
  %35 = bitcast %union.anon.3* %34 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !10892
  store i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)* @do_ccm_encrypt_mac, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %35, align 4, !dbg !10893
  br label %53, !dbg !10894

36:                                               ; preds = %21
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.157, i32 0, i32 0), i32 noundef 69) #27, !dbg !10895
  br label %70, !dbg !10900

37:                                               ; preds = %19
  switch i32 %3, label %52 [
    i32 2, label %38
    i32 3, label %41
    i32 4, label %49
  ], !dbg !10901

38:                                               ; preds = %37
  %39 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10903
  %40 = bitcast %union.anon.3* %39 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !10903
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_cbc_decrypt, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %40, align 4, !dbg !10905
  br label %53, !dbg !10906

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 5, i32 0, i32 0, !dbg !10907
  %43 = load i32, i32* %42, align 4, !dbg !10907
  %44 = icmp eq i32 %43, 32, !dbg !10909
  br i1 %44, label %46, label %45, !dbg !10910

45:                                               ; preds = %41
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5.156, i32 0, i32 0), i32 noundef 69) #27, !dbg !10911
  br label %70, !dbg !10917

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10918
  %48 = bitcast %union.anon.3* %47 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !10918
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_ctr_op, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %48, align 4, !dbg !10919
  br label %53, !dbg !10920

49:                                               ; preds = %37
  %50 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10921
  %51 = bitcast %union.anon.3* %50 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !10921
  store i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)* @do_ccm_decrypt_auth, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %51, align 4, !dbg !10922
  br label %53, !dbg !10923

52:                                               ; preds = %37
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.157, i32 0, i32 0), i32 noundef 69) #27, !dbg !10924
  br label %70, !dbg !10929

53:                                               ; preds = %38, %46, %49, %22, %30, %33
  %54 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 0, !dbg !10930
  store i32 %3, i32* %54, align 4, !dbg !10931
  %55 = tail call fastcc i32 @get_unused_session() #26, !dbg !10932
  call void @llvm.dbg.value(metadata i32 %55, metadata !10835, metadata !DIExpression()), !dbg !10836
  %56 = icmp eq i32 %55, 2, !dbg !10933
  br i1 %56, label %57, label %58, !dbg !10935

57:                                               ; preds = %53
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7.158, i32 0, i32 0), i32 noundef 69) #27, !dbg !10936
  br label %70, !dbg !10942

58:                                               ; preds = %53
  %59 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %55, !dbg !10943
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %59, metadata !10833, metadata !DIExpression()), !dbg !10836
  %60 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %55, i32 1, !dbg !10944
  %61 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 1, i32 0, !dbg !10946
  %62 = load i8*, i8** %61, align 4, !dbg !10946
  %63 = tail call i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef nonnull %60, i8* noundef %62) #27, !dbg !10947
  %64 = icmp eq i32 %63, 0, !dbg !10948
  br i1 %64, label %65, label %67, !dbg !10949

65:                                               ; preds = %58
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8.159, i32 0, i32 0), i32 noundef 69) #27, !dbg !10950
  %66 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %59, i32 0, i32 0, !dbg !10956
  store i32 0, i32* %66, align 4, !dbg !10957
  br label %70, !dbg !10958

67:                                               ; preds = %58
  %68 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 3, !dbg !10959
  %69 = bitcast i8** %68 to %struct.tc_shim_drv_state**, !dbg !10960
  store %struct.tc_shim_drv_state* %59, %struct.tc_shim_drv_state** %69, align 4, !dbg !10960
  br label %70, !dbg !10961

70:                                               ; preds = %67, %65, %57, %52, %45, %36, %29, %18, %13, %7
  %71 = phi i32 [ -22, %7 ], [ -22, %18 ], [ -22, %36 ], [ -28, %57 ], [ -5, %65 ], [ 0, %67 ], [ -22, %29 ], [ -22, %52 ], [ -22, %45 ], [ -22, %13 ], !dbg !10836
  ret i32 %71, !dbg !10962
}

; Function Attrs: noinline nounwind optsize
define internal i32 @tc_session_free(%struct.device* nocapture noundef readnone %0, %struct.cipher_ctx* nocapture noundef readonly %1) #1 !dbg !10963 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10965, metadata !DIExpression()), !dbg !10968
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !10966, metadata !DIExpression()), !dbg !10968
  %3 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 3, !dbg !10969
  %4 = load i8*, i8** %3, align 4, !dbg !10969
  call void @llvm.dbg.value(metadata i8* %4, metadata !10967, metadata !DIExpression()), !dbg !10968
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 180) #27, !dbg !10970
  %6 = bitcast i8* %4 to i32*, !dbg !10971
  store i32 0, i32* %6, align 4, !dbg !10972
  ret i32 0, !dbg !10973
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_cbc_encrypt(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef %2) #1 !dbg !10974 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !10976, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !10977, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata i8* %2, metadata !10978, metadata !DIExpression()), !dbg !10980
  %4 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !10981
  %5 = bitcast i8** %4 to %struct.tc_shim_drv_state**, !dbg !10981
  %6 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %5, align 4, !dbg !10981
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %6, metadata !10979, metadata !DIExpression()), !dbg !10980
  %7 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !10982
  %8 = load i8*, i8** %7, align 4, !dbg !10982
  %9 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !10984
  %10 = load i32, i32* %9, align 4, !dbg !10984
  %11 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !10985
  %12 = load i8*, i8** %11, align 4, !dbg !10985
  %13 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !10986
  %14 = load i32, i32* %13, align 4, !dbg !10986
  %15 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %6, i32 0, i32 1, !dbg !10987
  %16 = tail call i32 @tc_cbc_mode_encrypt(i8* noundef %8, i32 noundef %10, i8* noundef %12, i32 noundef %14, i8* noundef %2, %struct.tc_aes_key_sched_struct* noundef nonnull %15) #27, !dbg !10988
  %17 = icmp eq i32 %16, 0, !dbg !10989
  br i1 %17, label %18, label %19, !dbg !10990

18:                                               ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9.168, i32 0, i32 0), i32 noundef 69) #27, !dbg !10991
  br label %22, !dbg !10997

19:                                               ; preds = %3
  %20 = load i32, i32* %13, align 4, !dbg !10998
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !10999
  store i32 %20, i32* %21, align 4, !dbg !11000
  br label %22, !dbg !11001

22:                                               ; preds = %19, %18
  %23 = phi i32 [ -5, %18 ], [ 0, %19 ], !dbg !10980
  ret i32 %23, !dbg !11002
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ctr_op(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef %2) #1 !dbg !11003 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11005, metadata !DIExpression()), !dbg !11011
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !11006, metadata !DIExpression()), !dbg !11011
  call void @llvm.dbg.value(metadata i8* %2, metadata !11007, metadata !DIExpression()), !dbg !11011
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11012
  %6 = bitcast i8** %5 to %struct.tc_shim_drv_state**, !dbg !11012
  %7 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %6, align 4, !dbg !11012
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %7, metadata !11008, metadata !DIExpression()), !dbg !11011
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !11013
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #25, !dbg !11013
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !11009, metadata !DIExpression()), !dbg !11014
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %8, i8 0, i32 16, i1 false), !dbg !11014
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 6, !dbg !11015
  %10 = load i16, i16* %9, align 4, !dbg !11015
  %11 = zext i16 %10 to i32, !dbg !11016
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, i32 0, i32 0, !dbg !11017
  %13 = load i32, i32* %12, align 4, !dbg !11017
  %14 = lshr i32 %13, 3, !dbg !11018
  %15 = sub nsw i32 %11, %14, !dbg !11019
  call void @llvm.dbg.value(metadata i32 %15, metadata !11010, metadata !DIExpression()), !dbg !11011
  %16 = call i8* @memcpy(i8* noundef nonnull %8, i8* noundef %2, i32 noundef %15) #27, !dbg !11020
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !11021
  %18 = load i8*, i8** %17, align 4, !dbg !11021
  %19 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !11023
  %20 = load i32, i32* %19, align 4, !dbg !11023
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !11024
  %22 = load i8*, i8** %21, align 4, !dbg !11024
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !11025
  %24 = load i32, i32* %23, align 4, !dbg !11025
  %25 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %7, i32 0, i32 1, !dbg !11026
  %26 = call i32 @tc_ctr_mode(i8* noundef %18, i32 noundef %20, i8* noundef %22, i32 noundef %24, i8* noundef nonnull %8, %struct.tc_aes_key_sched_struct* noundef nonnull %25) #27, !dbg !11027
  %27 = icmp eq i32 %26, 0, !dbg !11028
  br i1 %27, label %28, label %29, !dbg !11029

28:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10.167, i32 0, i32 0), i32 noundef 69) #27, !dbg !11030
  br label %32, !dbg !11036

29:                                               ; preds = %3
  %30 = load i32, i32* %23, align 4, !dbg !11037
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !11038
  store i32 %30, i32* %31, align 4, !dbg !11039
  br label %32, !dbg !11040

32:                                               ; preds = %29, %28
  %33 = phi i32 [ -5, %28 ], [ 0, %29 ], !dbg !11011
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #25, !dbg !11041
  ret i32 %33, !dbg !11041
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ccm_encrypt_mac(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_aead_pkt* nocapture noundef readonly %1, i8* noundef %2) #1 !dbg !11042 {
  %4 = alloca %struct.tc_ccm_mode_struct, align 4
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11044, metadata !DIExpression()), !dbg !11059
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !11045, metadata !DIExpression()), !dbg !11059
  call void @llvm.dbg.value(metadata i8* %2, metadata !11046, metadata !DIExpression()), !dbg !11059
  %5 = bitcast %struct.tc_ccm_mode_struct* %4 to i8*, !dbg !11060
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11060
  call void @llvm.dbg.declare(metadata %struct.tc_ccm_mode_struct* %4, metadata !11047, metadata !DIExpression()), !dbg !11061
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11062
  %7 = bitcast i8** %6 to %struct.tc_shim_drv_state**, !dbg !11062
  %8 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %7, align 4, !dbg !11062
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %8, metadata !11055, metadata !DIExpression()), !dbg !11059
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, !dbg !11063
  %10 = bitcast %union.anon.5* %9 to %struct.ccm_params*, !dbg !11064
  call void @llvm.dbg.value(metadata %struct.ccm_params* %10, metadata !11056, metadata !DIExpression()), !dbg !11059
  %11 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !11065
  %12 = load %struct.cipher_pkt*, %struct.cipher_pkt** %11, align 4, !dbg !11065
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %12, metadata !11058, metadata !DIExpression()), !dbg !11059
  %13 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %8, i32 0, i32 1, !dbg !11066
  %14 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %10, i32 0, i32 1, !dbg !11068
  %15 = load i16, i16* %14, align 2, !dbg !11068
  %16 = zext i16 %15 to i32, !dbg !11069
  %17 = bitcast %union.anon.5* %9 to i16*, !dbg !11070
  %18 = load i16, i16* %17, align 2, !dbg !11070
  %19 = zext i16 %18 to i32, !dbg !11071
  %20 = call i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef nonnull %4, %struct.tc_aes_key_sched_struct* noundef nonnull %13, i8* noundef %2, i32 noundef %16, i32 noundef %19) #27, !dbg !11072
  %21 = icmp eq i32 %20, 0, !dbg !11073
  br i1 %21, label %22, label %23, !dbg !11074

22:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.11.165, i32 0, i32 0), i32 noundef 69) #27, !dbg !11075
  br label %56, !dbg !11081

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 2, !dbg !11082
  %25 = load i8*, i8** %24, align 4, !dbg !11082
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 3, !dbg !11084
  %27 = load i32, i32* %26, align 4, !dbg !11084
  %28 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 1, !dbg !11085
  %29 = load i8*, i8** %28, align 4, !dbg !11085
  %30 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 2, !dbg !11086
  %31 = load i32, i32* %30, align 4, !dbg !11086
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 0, !dbg !11087
  %33 = load i8*, i8** %32, align 4, !dbg !11087
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 1, !dbg !11088
  %35 = load i32, i32* %34, align 4, !dbg !11088
  %36 = call i32 @tc_ccm_generation_encryption(i8* noundef %25, i32 noundef %27, i8* noundef %29, i32 noundef %31, i8* noundef %33, i32 noundef %35, %struct.tc_ccm_mode_struct* noundef nonnull %4) #27, !dbg !11089
  %37 = icmp eq i32 %36, 0, !dbg !11090
  br i1 %37, label %38, label %39, !dbg !11091

38:                                               ; preds = %23
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.166, i32 0, i32 0), i32 noundef 69) #27, !dbg !11092
  br label %56, !dbg !11098

39:                                               ; preds = %23
  %40 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 3, !dbg !11099
  %41 = load i8*, i8** %40, align 4, !dbg !11099
  %42 = icmp eq i8* %41, null, !dbg !11101
  br i1 %42, label %50, label %43, !dbg !11102

43:                                               ; preds = %39
  %44 = load i8*, i8** %24, align 4, !dbg !11103
  %45 = load i32, i32* %34, align 4, !dbg !11105
  %46 = getelementptr inbounds i8, i8* %44, i32 %45, !dbg !11106
  %47 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %4, i32 0, i32 2, !dbg !11107
  %48 = load i32, i32* %47, align 4, !dbg !11107
  %49 = call i8* @memcpy(i8* noundef nonnull %41, i8* noundef %46, i32 noundef %48) #27, !dbg !11108
  br label %50, !dbg !11109

50:                                               ; preds = %43, %39
  %51 = load i32, i32* %34, align 4, !dbg !11110
  %52 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %4, i32 0, i32 2, !dbg !11111
  %53 = load i32, i32* %52, align 4, !dbg !11111
  %54 = add i32 %53, %51, !dbg !11112
  %55 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 4, !dbg !11113
  store i32 %54, i32* %55, align 4, !dbg !11114
  br label %56, !dbg !11115

56:                                               ; preds = %50, %38, %22
  %57 = phi i32 [ -5, %22 ], [ -5, %38 ], [ 0, %50 ], !dbg !11059
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11116
  ret i32 %57, !dbg !11116
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_cbc_decrypt(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef readnone %2) #1 !dbg !11117 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11119, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !11120, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.value(metadata i8* %2, metadata !11121, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* undef, metadata !11122, metadata !DIExpression()), !dbg !11123
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !11124
  %5 = load i8*, i8** %4, align 4, !dbg !11124
  %6 = icmp eq i8* %5, %2, !dbg !11126
  br i1 %6, label %8, label %7, !dbg !11127

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.163, i32 0, i32 0), i32 noundef 69) #27, !dbg !11128
  br label %27, !dbg !11134

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11135
  %10 = bitcast i8** %9 to %struct.tc_shim_drv_state**, !dbg !11135
  %11 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %10, align 4, !dbg !11135
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %11, metadata !11122, metadata !DIExpression()), !dbg !11123
  %12 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !11136
  %13 = load i8*, i8** %12, align 4, !dbg !11136
  %14 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !11138
  %15 = load i32, i32* %14, align 4, !dbg !11138
  %16 = getelementptr inbounds i8, i8* %2, i32 16, !dbg !11139
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !11140
  %18 = load i32, i32* %17, align 4, !dbg !11140
  %19 = add nsw i32 %18, -16, !dbg !11141
  %20 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %11, i32 0, i32 1, !dbg !11142
  %21 = tail call i32 @tc_cbc_mode_decrypt(i8* noundef %13, i32 noundef %15, i8* noundef nonnull %16, i32 noundef %19, i8* noundef %2, %struct.tc_aes_key_sched_struct* noundef nonnull %20) #27, !dbg !11143
  %22 = icmp eq i32 %21, 0, !dbg !11144
  br i1 %22, label %23, label %24, !dbg !11145

23:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.14.164, i32 0, i32 0), i32 noundef 69) #27, !dbg !11146
  br label %27, !dbg !11152

24:                                               ; preds = %8
  %25 = load i32, i32* %17, align 4, !dbg !11153
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !11154
  store i32 %25, i32* %26, align 4, !dbg !11155
  br label %27, !dbg !11156

27:                                               ; preds = %24, %23, %7
  %28 = phi i32 [ -5, %7 ], [ -5, %23 ], [ 0, %24 ], !dbg !11123
  ret i32 %28, !dbg !11157
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ccm_decrypt_auth(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_aead_pkt* nocapture noundef readonly %1, i8* noundef %2) #1 !dbg !11158 {
  %4 = alloca %struct.tc_ccm_mode_struct, align 4
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11160, metadata !DIExpression()), !dbg !11167
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !11161, metadata !DIExpression()), !dbg !11167
  call void @llvm.dbg.value(metadata i8* %2, metadata !11162, metadata !DIExpression()), !dbg !11167
  %5 = bitcast %struct.tc_ccm_mode_struct* %4 to i8*, !dbg !11168
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11168
  call void @llvm.dbg.declare(metadata %struct.tc_ccm_mode_struct* %4, metadata !11163, metadata !DIExpression()), !dbg !11169
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11170
  %7 = bitcast i8** %6 to %struct.tc_shim_drv_state**, !dbg !11170
  %8 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %7, align 4, !dbg !11170
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %8, metadata !11164, metadata !DIExpression()), !dbg !11167
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, !dbg !11171
  %10 = bitcast %union.anon.5* %9 to %struct.ccm_params*, !dbg !11172
  call void @llvm.dbg.value(metadata %struct.ccm_params* %10, metadata !11165, metadata !DIExpression()), !dbg !11167
  %11 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !11173
  %12 = load %struct.cipher_pkt*, %struct.cipher_pkt** %11, align 4, !dbg !11173
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %12, metadata !11166, metadata !DIExpression()), !dbg !11167
  %13 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %8, i32 0, i32 1, !dbg !11174
  %14 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %10, i32 0, i32 1, !dbg !11176
  %15 = load i16, i16* %14, align 2, !dbg !11176
  %16 = zext i16 %15 to i32, !dbg !11177
  %17 = bitcast %union.anon.5* %9 to i16*, !dbg !11178
  %18 = load i16, i16* %17, align 2, !dbg !11178
  %19 = zext i16 %18 to i32, !dbg !11179
  %20 = call i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef nonnull %4, %struct.tc_aes_key_sched_struct* noundef nonnull %13, i8* noundef %2, i32 noundef %16, i32 noundef %19) #27, !dbg !11180
  %21 = icmp eq i32 %20, 0, !dbg !11181
  br i1 %21, label %22, label %23, !dbg !11182

22:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.15.160, i32 0, i32 0), i32 noundef 69) #27, !dbg !11183
  br label %54, !dbg !11189

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 3, !dbg !11190
  %25 = load i8*, i8** %24, align 4, !dbg !11190
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 0, !dbg !11192
  %27 = load i8*, i8** %26, align 4, !dbg !11192
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 1, !dbg !11193
  %29 = load i32, i32* %28, align 4, !dbg !11193
  %30 = getelementptr inbounds i8, i8* %27, i32 %29, !dbg !11194
  %31 = icmp eq i8* %25, %30, !dbg !11195
  br i1 %31, label %33, label %32, !dbg !11196

32:                                               ; preds = %23
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.16.161, i32 0, i32 0), i32 noundef 69) #27, !dbg !11197
  br label %54, !dbg !11203

33:                                               ; preds = %23
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 2, !dbg !11204
  %35 = load i8*, i8** %34, align 4, !dbg !11204
  %36 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 3, !dbg !11206
  %37 = load i32, i32* %36, align 4, !dbg !11206
  %38 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 1, !dbg !11207
  %39 = load i8*, i8** %38, align 4, !dbg !11207
  %40 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 2, !dbg !11208
  %41 = load i32, i32* %40, align 4, !dbg !11208
  %42 = load i16, i16* %17, align 2, !dbg !11209
  %43 = zext i16 %42 to i32, !dbg !11210
  %44 = add nsw i32 %29, %43, !dbg !11211
  %45 = call i32 @tc_ccm_decryption_verification(i8* noundef %35, i32 noundef %37, i8* noundef %39, i32 noundef %41, i8* noundef %27, i32 noundef %44, %struct.tc_ccm_mode_struct* noundef nonnull %4) #27, !dbg !11212
  %46 = icmp eq i32 %45, 0, !dbg !11213
  br i1 %46, label %47, label %48, !dbg !11214

47:                                               ; preds = %33
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.17.162, i32 0, i32 0), i32 noundef 69) #27, !dbg !11215
  br label %54, !dbg !11221

48:                                               ; preds = %33
  %49 = load i32, i32* %28, align 4, !dbg !11222
  %50 = load i16, i16* %17, align 2, !dbg !11223
  %51 = zext i16 %50 to i32, !dbg !11224
  %52 = add nsw i32 %49, %51, !dbg !11225
  %53 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 4, !dbg !11226
  store i32 %52, i32* %53, align 4, !dbg !11227
  br label %54, !dbg !11228

54:                                               ; preds = %48, %47, %32, %22
  %55 = phi i32 [ -5, %22 ], [ -5, %32 ], [ -5, %47 ], [ 0, %48 ], !dbg !11167
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11229
  ret i32 %55, !dbg !11229
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @get_unused_session() unnamed_addr #14 !dbg !11230 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11232, metadata !DIExpression()), !dbg !11233
  br label %1, !dbg !11234

1:                                                ; preds = %0, %8
  %2 = phi i1 [ true, %0 ], [ false, %8 ]
  %3 = phi i32 [ 0, %0 ], [ 1, %8 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !11232, metadata !DIExpression()), !dbg !11233
  %4 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %3, i32 0, !dbg !11236
  %5 = load i32, i32* %4, align 4, !dbg !11236
  %6 = icmp eq i32 %5, 0, !dbg !11240
  br i1 %6, label %7, label %8, !dbg !11241

7:                                                ; preds = %1
  store i32 1, i32* %4, align 4, !dbg !11242
  br label %9, !dbg !11244

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11232, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11233
  br i1 %2, label %1, label %9, !dbg !11234, !llvm.loop !11245

9:                                                ; preds = %8, %7
  %10 = phi i32 [ %3, %7 ], [ 2, %8 ]
  ret i32 %10, !dbg !11247
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !11248 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11250, metadata !DIExpression()), !dbg !11255
  call void @llvm.dbg.value(metadata i8 %1, metadata !11251, metadata !DIExpression()), !dbg !11255
  call void @llvm.dbg.value(metadata i32 %2, metadata !11252, metadata !DIExpression()), !dbg !11255
  %5 = bitcast i32* %4 to i8*, !dbg !11256
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11256
  call void @llvm.dbg.value(metadata i32* %4, metadata !11254, metadata !DIExpression(DW_OP_deref)), !dbg !11255
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !11257
  call void @llvm.dbg.value(metadata i32 %6, metadata !11253, metadata !DIExpression()), !dbg !11255
  %7 = icmp eq i32 %6, 0, !dbg !11258
  br i1 %7, label %8, label %31, !dbg !11260

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !11253, metadata !DIExpression()), !dbg !11255
  %9 = and i32 %2, 131072, !dbg !11261
  %10 = icmp eq i32 %9, 0, !dbg !11263
  br i1 %10, label %28, label %11, !dbg !11264

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !11265
  %13 = icmp eq i32 %12, 0, !dbg !11268
  br i1 %13, label %18, label %14, !dbg !11269

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !11270
  %16 = shl nuw i32 1, %15, !dbg !11270
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !11272
  br label %25, !dbg !11273

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !11274
  %20 = icmp eq i32 %19, 0, !dbg !11276
  %21 = zext i8 %1 to i32, !dbg !11255
  br i1 %20, label %25, label %22, !dbg !11277

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !11278
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !11280
  br label %25, !dbg !11281

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !11282
  %27 = load i32, i32* %4, align 4, !dbg !11283
  call void @llvm.dbg.value(metadata i32 %30, metadata !11254, metadata !DIExpression()), !dbg !11255
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !11284
  br label %31, !dbg !11285

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !11282
  %30 = load i32, i32* %4, align 4, !dbg !11283
  call void @llvm.dbg.value(metadata i32 %30, metadata !11254, metadata !DIExpression()), !dbg !11255
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !11284
  call void @llvm.dbg.value(metadata i32 0, metadata !11253, metadata !DIExpression()), !dbg !11255
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11286
  ret i32 %6, !dbg !11286
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !11287 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11291, metadata !DIExpression()), !dbg !11296
  call void @llvm.dbg.value(metadata i32* %1, metadata !11292, metadata !DIExpression()), !dbg !11296
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11297
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11297
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11297
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11293, metadata !DIExpression()), !dbg !11296
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11298
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11298
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11298
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11295, metadata !DIExpression()), !dbg !11296
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !11299
  store i32 %9, i32* %1, align 4, !dbg !11300
  ret i32 0, !dbg !11301
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !11302 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11304, metadata !DIExpression()), !dbg !11310
  call void @llvm.dbg.value(metadata i32 %1, metadata !11305, metadata !DIExpression()), !dbg !11310
  call void @llvm.dbg.value(metadata i32 %2, metadata !11306, metadata !DIExpression()), !dbg !11310
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11311
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !11311
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !11311
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !11307, metadata !DIExpression()), !dbg !11310
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !11312
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !11312
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !11312
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !11308, metadata !DIExpression()), !dbg !11310
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !11313
  call void @llvm.dbg.value(metadata i32 %10, metadata !11309, metadata !DIExpression()), !dbg !11310
  %11 = xor i32 %1, -1, !dbg !11314
  %12 = and i32 %10, %11, !dbg !11315
  %13 = and i32 %2, %1, !dbg !11316
  %14 = or i32 %12, %13, !dbg !11317
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !11318
  ret i32 0, !dbg !11319
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !11320 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11322, metadata !DIExpression()), !dbg !11326
  call void @llvm.dbg.value(metadata i32 %1, metadata !11323, metadata !DIExpression()), !dbg !11326
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11327
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11327
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11327
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11324, metadata !DIExpression()), !dbg !11326
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11328
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11328
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11328
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11325, metadata !DIExpression()), !dbg !11326
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !11329
  store volatile i32 %1, i32* %9, align 4, !dbg !11329
  ret i32 0, !dbg !11330
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !11331 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11333, metadata !DIExpression()), !dbg !11337
  call void @llvm.dbg.value(metadata i32 %1, metadata !11334, metadata !DIExpression()), !dbg !11337
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11338
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11338
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11338
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11335, metadata !DIExpression()), !dbg !11337
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11339
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11339
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11339
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11336, metadata !DIExpression()), !dbg !11337
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !11340
  ret i32 0, !dbg !11341
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !11342 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11344, metadata !DIExpression()), !dbg !11348
  call void @llvm.dbg.value(metadata i32 %1, metadata !11345, metadata !DIExpression()), !dbg !11348
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11349
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11349
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11349
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11346, metadata !DIExpression()), !dbg !11348
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11350
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11350
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11350
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11347, metadata !DIExpression()), !dbg !11348
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !11351
  %10 = load volatile i32, i32* %9, align 4, !dbg !11351
  %11 = xor i32 %10, %1, !dbg !11351
  store volatile i32 %11, i32* %9, align 4, !dbg !11351
  ret i32 0, !dbg !11352
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !11353 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11355, metadata !DIExpression()), !dbg !11365
  call void @llvm.dbg.value(metadata i8 %1, metadata !11356, metadata !DIExpression()), !dbg !11365
  call void @llvm.dbg.value(metadata i32 %2, metadata !11357, metadata !DIExpression()), !dbg !11365
  call void @llvm.dbg.value(metadata i32 %3, metadata !11358, metadata !DIExpression()), !dbg !11365
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11366
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11366
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11366
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11359, metadata !DIExpression()), !dbg !11365
  call void @llvm.dbg.value(metadata i8* undef, metadata !11360, metadata !DIExpression()), !dbg !11365
  call void @llvm.dbg.value(metadata i32 0, metadata !11362, metadata !DIExpression()), !dbg !11365
  call void @llvm.dbg.value(metadata i32 0, metadata !11363, metadata !DIExpression()), !dbg !11365
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !11367

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !11368
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !11372
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11373
  %12 = load i32, i32* %11, align 4, !dbg !11373
  %13 = icmp eq i32 %10, %12, !dbg !11374
  br i1 %13, label %14, label %29, !dbg !11375

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !11376
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !11378
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !11379
  br label %29, !dbg !11380

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11381
  %17 = load i8*, i8** %16, align 4, !dbg !11381
  call void @llvm.dbg.value(metadata i8* %17, metadata !11360, metadata !DIExpression()), !dbg !11365
  %18 = zext i8 %1 to i32, !dbg !11382
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !11384
  %20 = icmp eq i32 %19, 0, !dbg !11385
  br i1 %20, label %21, label %29, !dbg !11386

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11387
  %23 = load i32, i32* %22, align 4, !dbg !11387
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !11388
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !11389

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !11362, metadata !DIExpression()), !dbg !11365
  br label %27, !dbg !11390

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !11362, metadata !DIExpression()), !dbg !11365
  br label %27, !dbg !11392

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !11362, metadata !DIExpression()), !dbg !11365
  br label %27, !dbg !11393

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !11365
  call void @llvm.dbg.value(metadata i32 %28, metadata !11362, metadata !DIExpression()), !dbg !11365
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !11394
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !11395
  br label %29, !dbg !11395

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !11365
  call void @llvm.dbg.value(metadata i32 %30, metadata !11363, metadata !DIExpression()), !dbg !11365
  call void @llvm.dbg.label(metadata !11364), !dbg !11396
  ret i32 %30, !dbg !11397
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !11398 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11400, metadata !DIExpression()), !dbg !11404
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11401, metadata !DIExpression()), !dbg !11404
  call void @llvm.dbg.value(metadata i1 %2, metadata !11402, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11404
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11405
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !11405
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !11405
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !11403, metadata !DIExpression()), !dbg !11404
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !11406
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !11407
  ret i32 %8, !dbg !11408
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !11409 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11415, metadata !DIExpression()), !dbg !11418
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11416, metadata !DIExpression()), !dbg !11418
  call void @llvm.dbg.value(metadata i1 %2, metadata !11417, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11418
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !11419
  br i1 %4, label %10, label %5, !dbg !11421

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11422
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !11425
  %8 = or i1 %7, %2, !dbg !11426
  %9 = select i1 %8, i32 0, i32 -22, !dbg !11426
  br i1 %2, label %11, label %13, !dbg !11426

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !11427

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11428
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !11431
  br label %13, !dbg !11432

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !11418
  ret i32 %14, !dbg !11433
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11434 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11438, metadata !DIExpression()), !dbg !11439
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11440
  %3 = icmp eq %struct._snode* %2, null, !dbg !11440
  ret i1 %3, !dbg !11440
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !11441 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11445, metadata !DIExpression()), !dbg !11449
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11446, metadata !DIExpression()), !dbg !11449
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11447, metadata !DIExpression()), !dbg !11449
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11450
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11448, metadata !DIExpression()), !dbg !11449
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11447, metadata !DIExpression()), !dbg !11449
  %4 = icmp eq %struct._snode* %3, null, !dbg !11452
  br i1 %4, label %15, label %5, !dbg !11450

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11448, metadata !DIExpression()), !dbg !11449
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11447, metadata !DIExpression()), !dbg !11449
  %6 = icmp eq %struct._snode* %3, %1, !dbg !11454
  br i1 %6, label %9, label %11, !dbg !11457

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11448, metadata !DIExpression()), !dbg !11449
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11447, metadata !DIExpression()), !dbg !11449
  %8 = icmp eq %struct._snode* %13, %1, !dbg !11454
  br i1 %8, label %9, label %11, !dbg !11457, !llvm.loop !11458

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !11459
  br label %15, !dbg !11459

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11448, metadata !DIExpression()), !dbg !11449
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11447, metadata !DIExpression()), !dbg !11449
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !11452
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11448, metadata !DIExpression()), !dbg !11449
  %14 = icmp eq %struct._snode* %13, null, !dbg !11452
  br i1 %14, label %15, label %7, !dbg !11450, !llvm.loop !11458

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !11461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !11462 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11466, metadata !DIExpression()), !dbg !11468
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11467, metadata !DIExpression()), !dbg !11468
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11469
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !11469
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !11469
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !11470
  %5 = icmp eq %struct._snode* %4, null, !dbg !11470
  br i1 %5, label %6, label %8, !dbg !11469

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11472
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !11472
  br label %8, !dbg !11472

8:                                                ; preds = %6, %2
  ret void, !dbg !11469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11474 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11478, metadata !DIExpression()), !dbg !11479
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11480
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11480
  ret %struct._snode* %3, !dbg !11481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11482 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11486, metadata !DIExpression()), !dbg !11488
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11487, metadata !DIExpression()), !dbg !11488
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11489
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11490
  ret void, !dbg !11491
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11492 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11494, metadata !DIExpression()), !dbg !11496
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11495, metadata !DIExpression()), !dbg !11496
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11497
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11498
  ret void, !dbg !11499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11500 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11502, metadata !DIExpression()), !dbg !11503
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11504
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11504
  ret %struct._snode* %3, !dbg !11505
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11506 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11508, metadata !DIExpression()), !dbg !11510
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11509, metadata !DIExpression()), !dbg !11510
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11511
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11512
  ret void, !dbg !11513
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !11514 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11518, metadata !DIExpression()), !dbg !11521
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11519, metadata !DIExpression()), !dbg !11521
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !11520, metadata !DIExpression()), !dbg !11521
  %4 = icmp eq %struct._snode* %1, null, !dbg !11522
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !11524
  br i1 %4, label %6, label %11, !dbg !11525

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !11526
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !11528
  %8 = icmp eq %struct._snode* %7, %2, !dbg !11528
  br i1 %8, label %9, label %15, !dbg !11526

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11530
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !11530
  br label %15, !dbg !11530

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !11532
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !11534
  %13 = icmp eq %struct._snode* %12, %2, !dbg !11534
  br i1 %13, label %14, label %15, !dbg !11532

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !11536
  br label %15, !dbg !11536

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !11525
  ret void, !dbg !11525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !11538 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11542, metadata !DIExpression()), !dbg !11543
  %2 = icmp eq %struct._snode* %0, null, !dbg !11544
  br i1 %2, label %5, label %3, !dbg !11544

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !11544
  br label %5, !dbg !11544

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !11544
  ret %struct._snode* %6, !dbg !11544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11545 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11547, metadata !DIExpression()), !dbg !11548
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !11549
  ret %struct._snode* %2, !dbg !11549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11550 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11552, metadata !DIExpression()), !dbg !11553
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11554
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11554
  ret %struct._snode* %3, !dbg !11555
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !11556 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11558, metadata !DIExpression()), !dbg !11561
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !11562, !range !11563
  call void @llvm.dbg.value(metadata i32 %2, metadata !11559, metadata !DIExpression()), !dbg !11561
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !11564
  call void @llvm.dbg.value(metadata i32 %3, metadata !11560, metadata !DIExpression()), !dbg !11561
  ret i32 %3, !dbg !11565
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !11566 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11568, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.value(metadata i8* %1, metadata !11569, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.value(metadata i8* %1, metadata !11570, metadata !DIExpression()), !dbg !11571
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !11572
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !11572
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !11573
  %6 = bitcast i8* %5 to %struct.device**, !dbg !11573
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !11573
  %8 = shl nuw i32 1, %0, !dbg !11574
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !11575
  ret void, !dbg !11576
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11577 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !11581, metadata !DIExpression()), !dbg !11587
  call void @llvm.dbg.value(metadata i32 %1, metadata !11582, metadata !DIExpression()), !dbg !11587
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11583, metadata !DIExpression()), !dbg !11587
  %4 = bitcast i64* %3 to i8*, !dbg !11588
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11588
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !11585, metadata !DIExpression()), !dbg !11587
  store i64 70368744177732, i64* %3, align 8, !dbg !11589
  call void @llvm.dbg.value(metadata i64* %3, metadata !11585, metadata !DIExpression(DW_OP_deref)), !dbg !11587
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !11590
  call void @llvm.dbg.value(metadata i32 %5, metadata !11586, metadata !DIExpression()), !dbg !11587
  %6 = icmp eq i32 %5, 0, !dbg !11591
  br i1 %6, label %7, label %8, !dbg !11593

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !11594
  br label %8, !dbg !11595

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11596
  ret void, !dbg !11596
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !11597 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11599, metadata !DIExpression()), !dbg !11602
  call void @llvm.dbg.value(metadata i8* %0, metadata !11600, metadata !DIExpression()), !dbg !11602
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !11603
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !11601, metadata !DIExpression()), !dbg !11602
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !11604
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !11604
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #27, !dbg !11605
  ret i32 %5, !dbg !11606
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11607 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11609, metadata !DIExpression()), !dbg !11612
  call void @llvm.dbg.value(metadata i32 %1, metadata !11610, metadata !DIExpression()), !dbg !11612
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !11613
  call void @llvm.dbg.value(metadata i32 %3, metadata !11611, metadata !DIExpression()), !dbg !11612
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !11614
  ret void, !dbg !11615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #3 !dbg !11616 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11620, metadata !DIExpression()), !dbg !11621
  %2 = sdiv i32 %0, 4, !dbg !11622
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !11623
  %6 = add nsw i32 %5, 16, !dbg !11624
  %7 = shl i32 15, %6, !dbg !11625
  %8 = or i32 %7, %2, !dbg !11626
  ret i32 %8, !dbg !11627
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11628 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11632, metadata !DIExpression()), !dbg !11634
  call void @llvm.dbg.value(metadata i32 %1, metadata !11633, metadata !DIExpression()), !dbg !11634
  %3 = and i32 %1, 255, !dbg !11635
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !11635
  %5 = load volatile i32, i32* %4, align 4, !dbg !11635
  %6 = lshr i32 %1, 16, !dbg !11635
  %7 = xor i32 %6, -1, !dbg !11635
  %8 = and i32 %5, %7, !dbg !11635
  call void @llvm.dbg.value(metadata i32 %6, metadata !11636, metadata !DIExpression()) #25, !dbg !11640
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !11642, !srcloc !11643
  call void @llvm.dbg.value(metadata i32 %9, metadata !11639, metadata !DIExpression()) #25, !dbg !11640
  call void @llvm.dbg.value(metadata i32 %9, metadata !11644, metadata !DIExpression()) #25, !dbg !11649
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !11651, !range !9429
  %11 = shl i32 %0, %10, !dbg !11635
  %12 = or i32 %11, %8, !dbg !11635
  store volatile i32 %12, i32* %4, align 4, !dbg !11635
  ret void, !dbg !11652
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11653 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11657, metadata !DIExpression()), !dbg !11662
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !11658, metadata !DIExpression()), !dbg !11662
  call void @llvm.dbg.value(metadata i32 %2, metadata !11659, metadata !DIExpression()), !dbg !11662
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11663
  %5 = icmp eq %struct._snode* %4, null, !dbg !11663
  br i1 %5, label %21, label %6, !dbg !11663

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !11665
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !11661, metadata !DIExpression()), !dbg !11662
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !11660, metadata !DIExpression()), !dbg !11662
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !11666
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !11666
  %11 = load i32, i32* %10, align 4, !dbg !11666
  %12 = and i32 %11, %2, !dbg !11670
  %13 = icmp eq i32 %12, 0, !dbg !11670
  br i1 %13, label %19, label %14, !dbg !11671

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !11660, metadata !DIExpression()), !dbg !11662
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !11672
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !11672
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !11672
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #27, !dbg !11674
  br label %19, !dbg !11675

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !11660, metadata !DIExpression()), !dbg !11662
  %20 = icmp eq %struct._snode* %8, null, !dbg !11676
  br i1 %20, label %21, label %6, !dbg !11676

21:                                               ; preds = %19, %3
  ret void, !dbg !11677
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !11678 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11680, metadata !DIExpression()), !dbg !11681
  %2 = and i32 %0, 255, !dbg !11682
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !11682
  %4 = load volatile i32, i32* %3, align 4, !dbg !11682
  %5 = lshr i32 %0, 16, !dbg !11682
  %6 = and i32 %4, %5, !dbg !11682
  call void @llvm.dbg.value(metadata i32 %5, metadata !11636, metadata !DIExpression()) #25, !dbg !11683
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !11685, !srcloc !11643
  call void @llvm.dbg.value(metadata i32 %7, metadata !11639, metadata !DIExpression()) #25, !dbg !11683
  call void @llvm.dbg.value(metadata i32 %7, metadata !11644, metadata !DIExpression()) #25, !dbg !11686
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !11688, !range !9429
  %9 = lshr i32 %6, %8, !dbg !11689
  ret i32 %9, !dbg !11690
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11691 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11696, metadata !DIExpression()), !dbg !11698
  call void @llvm.dbg.value(metadata i32 %1, metadata !11697, metadata !DIExpression()), !dbg !11698
  %3 = shl i32 %1, 16, !dbg !11699
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !11699
  store volatile i32 %3, i32* %4, align 4, !dbg !11699
  ret void, !dbg !11700
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !11701 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11705, metadata !DIExpression()), !dbg !11706
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !11707
  %3 = load volatile i32, i32* %2, align 4, !dbg !11707
  ret i32 %3, !dbg !11708
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11709 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11711, metadata !DIExpression()), !dbg !11713
  call void @llvm.dbg.value(metadata i32 %1, metadata !11712, metadata !DIExpression()), !dbg !11713
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !11714
  store volatile i32 %1, i32* %3, align 4, !dbg !11714
  ret void, !dbg !11715
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !11716 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11718, metadata !DIExpression()), !dbg !11719
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !11720
  %3 = load volatile i32, i32* %2, align 4, !dbg !11720
  ret i32 %3, !dbg !11721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #11 !dbg !11722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11726, metadata !DIExpression()), !dbg !11728
  call void @llvm.dbg.value(metadata i32* %1, metadata !11727, metadata !DIExpression()), !dbg !11728
  %3 = and i32 %0, 131072, !dbg !11729
  %4 = icmp eq i32 %3, 0, !dbg !11731
  br i1 %4, label %22, label %5, !dbg !11732

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !11733
  %6 = and i32 %0, 2, !dbg !11735
  %7 = icmp eq i32 %6, 0, !dbg !11737
  br i1 %7, label %11, label %8, !dbg !11738

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !11739
  %10 = icmp eq i32 %9, 0, !dbg !11739
  br i1 %10, label %33, label %11, !dbg !11742

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !11743
  store i32 %12, i32* %1, align 4, !dbg !11743
  %13 = and i32 %0, 16, !dbg !11744
  %14 = icmp eq i32 %13, 0, !dbg !11746
  br i1 %14, label %17, label %15, !dbg !11747

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !11748
  br label %31, !dbg !11750

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !11751
  %19 = icmp eq i32 %18, 0, !dbg !11753
  br i1 %19, label %33, label %20, !dbg !11754

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !11755
  br label %31, !dbg !11757

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !11758
  %24 = icmp eq i32 %23, 0, !dbg !11760
  br i1 %24, label %31, label %25, !dbg !11761

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !11762
  %27 = icmp eq i32 %26, 0, !dbg !11765
  br i1 %27, label %28, label %31, !dbg !11766

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !11767
  br label %33, !dbg !11768

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !11728
  ret i32 %34, !dbg !11768
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11769 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11773, metadata !DIExpression()), !dbg !11784
  call void @llvm.dbg.value(metadata i32 %1, metadata !11774, metadata !DIExpression()), !dbg !11784
  call void @llvm.dbg.value(metadata i32 %2, metadata !11775, metadata !DIExpression()), !dbg !11784
  call void @llvm.dbg.value(metadata i32 %3, metadata !11776, metadata !DIExpression()), !dbg !11784
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11785
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11785
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11785
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11777, metadata !DIExpression()), !dbg !11784
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !11786
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !11786
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !11786
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !11778, metadata !DIExpression()), !dbg !11784
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !11787
  call void @llvm.dbg.value(metadata i32 %11, metadata !11779, metadata !DIExpression()), !dbg !11784
  %12 = and i32 %2, 48, !dbg !11788
  call void @llvm.dbg.value(metadata i32 %12, metadata !11780, metadata !DIExpression()), !dbg !11784
  call void @llvm.dbg.value(metadata i32 %2, metadata !11781, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !11784
  call void @llvm.dbg.value(metadata i32 %2, metadata !11782, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !11784
  call void @llvm.dbg.value(metadata i32 %2, metadata !11783, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !11784
  %13 = lshr i32 %2, 6, !dbg !11789
  %14 = and i32 %13, 1, !dbg !11789
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !11790
  %15 = lshr i32 %2, 7, !dbg !11791
  %16 = and i32 %15, 3, !dbg !11791
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !11792
  %17 = lshr i32 %2, 9, !dbg !11793
  %18 = and i32 %17, 3, !dbg !11793
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !11794
  %19 = icmp eq i32 %12, 32, !dbg !11795
  br i1 %19, label %20, label %24, !dbg !11797

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !11798
  br i1 %21, label %22, label %23, !dbg !11801

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !11802
  br label %24, !dbg !11804

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !11805
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !11807
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !11808
  ret void, !dbg !11809
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #3 !dbg !11810 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11812, metadata !DIExpression()), !dbg !11814
  %2 = shl nuw i32 1, %0, !dbg !11815
  call void @llvm.dbg.value(metadata i32 %2, metadata !11813, metadata !DIExpression()), !dbg !11814
  ret i32 %2, !dbg !11816
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11817 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11821, metadata !DIExpression()), !dbg !11824
  call void @llvm.dbg.value(metadata i32 %1, metadata !11822, metadata !DIExpression()), !dbg !11824
  call void @llvm.dbg.value(metadata i32 %2, metadata !11823, metadata !DIExpression()), !dbg !11824
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !11825
  %5 = load volatile i32, i32* %4, align 4, !dbg !11825
  %6 = xor i32 %1, -1, !dbg !11825
  %7 = and i32 %5, %6, !dbg !11825
  %8 = mul i32 %2, %1, !dbg !11825
  %9 = or i32 %7, %8, !dbg !11825
  store volatile i32 %9, i32* %4, align 4, !dbg !11825
  ret void, !dbg !11826
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11827 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11829, metadata !DIExpression()), !dbg !11832
  call void @llvm.dbg.value(metadata i32 %1, metadata !11830, metadata !DIExpression()), !dbg !11832
  call void @llvm.dbg.value(metadata i32 %2, metadata !11831, metadata !DIExpression()), !dbg !11832
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !11833
  %5 = load volatile i32, i32* %4, align 4, !dbg !11833
  call void @llvm.dbg.value(metadata i32 %1, metadata !11636, metadata !DIExpression()) #25, !dbg !11834
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11836, !srcloc !11643
  call void @llvm.dbg.value(metadata i32 %6, metadata !11639, metadata !DIExpression()) #25, !dbg !11834
  call void @llvm.dbg.value(metadata i32 %6, metadata !11644, metadata !DIExpression()) #25, !dbg !11837
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11839, !range !9429
  %8 = shl nuw nsw i32 %7, 1, !dbg !11833
  %9 = shl i32 3, %8, !dbg !11833
  %10 = xor i32 %9, -1, !dbg !11833
  %11 = and i32 %5, %10, !dbg !11833
  call void @llvm.dbg.value(metadata i32 %1, metadata !11636, metadata !DIExpression()) #25, !dbg !11840
  call void @llvm.dbg.value(metadata i32 %6, metadata !11639, metadata !DIExpression()) #25, !dbg !11840
  call void @llvm.dbg.value(metadata i32 %6, metadata !11644, metadata !DIExpression()) #25, !dbg !11842
  %12 = shl i32 %2, %8, !dbg !11833
  %13 = or i32 %11, %12, !dbg !11833
  store volatile i32 %13, i32* %4, align 4, !dbg !11833
  ret void, !dbg !11844
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11845 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11847, metadata !DIExpression()), !dbg !11850
  call void @llvm.dbg.value(metadata i32 %1, metadata !11848, metadata !DIExpression()), !dbg !11850
  call void @llvm.dbg.value(metadata i32 %2, metadata !11849, metadata !DIExpression()), !dbg !11850
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !11851
  %5 = load volatile i32, i32* %4, align 4, !dbg !11851
  call void @llvm.dbg.value(metadata i32 %1, metadata !11636, metadata !DIExpression()) #25, !dbg !11852
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11854, !srcloc !11643
  call void @llvm.dbg.value(metadata i32 %6, metadata !11639, metadata !DIExpression()) #25, !dbg !11852
  call void @llvm.dbg.value(metadata i32 %6, metadata !11644, metadata !DIExpression()) #25, !dbg !11855
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11857, !range !9429
  %8 = shl nuw nsw i32 %7, 1, !dbg !11851
  %9 = shl i32 3, %8, !dbg !11851
  %10 = xor i32 %9, -1, !dbg !11851
  %11 = and i32 %5, %10, !dbg !11851
  call void @llvm.dbg.value(metadata i32 %1, metadata !11636, metadata !DIExpression()) #25, !dbg !11858
  call void @llvm.dbg.value(metadata i32 %6, metadata !11639, metadata !DIExpression()) #25, !dbg !11858
  call void @llvm.dbg.value(metadata i32 %6, metadata !11644, metadata !DIExpression()) #25, !dbg !11860
  %12 = shl i32 %2, %8, !dbg !11851
  %13 = or i32 %11, %12, !dbg !11851
  store volatile i32 %13, i32* %4, align 4, !dbg !11851
  ret void, !dbg !11862
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11863 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11865, metadata !DIExpression()), !dbg !11868
  call void @llvm.dbg.value(metadata i32 %1, metadata !11866, metadata !DIExpression()), !dbg !11868
  call void @llvm.dbg.value(metadata i32 %2, metadata !11867, metadata !DIExpression()), !dbg !11868
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !11869
  %5 = load volatile i32, i32* %4, align 4, !dbg !11869
  call void @llvm.dbg.value(metadata i32 %1, metadata !11636, metadata !DIExpression()) #25, !dbg !11870
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11872, !srcloc !11643
  call void @llvm.dbg.value(metadata i32 %6, metadata !11639, metadata !DIExpression()) #25, !dbg !11870
  call void @llvm.dbg.value(metadata i32 %6, metadata !11644, metadata !DIExpression()) #25, !dbg !11873
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11875, !range !9429
  %8 = shl nuw nsw i32 %7, 2, !dbg !11869
  %9 = shl i32 15, %8, !dbg !11869
  %10 = xor i32 %9, -1, !dbg !11869
  %11 = and i32 %5, %10, !dbg !11869
  call void @llvm.dbg.value(metadata i32 %1, metadata !11636, metadata !DIExpression()) #25, !dbg !11876
  call void @llvm.dbg.value(metadata i32 %6, metadata !11639, metadata !DIExpression()) #25, !dbg !11876
  call void @llvm.dbg.value(metadata i32 %6, metadata !11644, metadata !DIExpression()) #25, !dbg !11878
  %12 = shl i32 %2, %8, !dbg !11869
  %13 = or i32 %11, %12, !dbg !11869
  store volatile i32 %13, i32* %4, align 4, !dbg !11869
  ret void, !dbg !11880
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11881 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11883, metadata !DIExpression()), !dbg !11886
  call void @llvm.dbg.value(metadata i32 %1, metadata !11884, metadata !DIExpression()), !dbg !11886
  call void @llvm.dbg.value(metadata i32 %2, metadata !11885, metadata !DIExpression()), !dbg !11886
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !11887
  %5 = load volatile i32, i32* %4, align 4, !dbg !11887
  %6 = lshr i32 %1, 8, !dbg !11887
  call void @llvm.dbg.value(metadata i32 %6, metadata !11636, metadata !DIExpression()) #25, !dbg !11888
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !11890, !srcloc !11643
  call void @llvm.dbg.value(metadata i32 %7, metadata !11639, metadata !DIExpression()) #25, !dbg !11888
  call void @llvm.dbg.value(metadata i32 %7, metadata !11644, metadata !DIExpression()) #25, !dbg !11891
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !11893, !range !9429
  %9 = shl nuw nsw i32 %8, 2, !dbg !11887
  %10 = shl i32 15, %9, !dbg !11887
  %11 = xor i32 %10, -1, !dbg !11887
  %12 = and i32 %5, %11, !dbg !11887
  call void @llvm.dbg.value(metadata i32 %6, metadata !11636, metadata !DIExpression()) #25, !dbg !11894
  call void @llvm.dbg.value(metadata i32 %7, metadata !11639, metadata !DIExpression()) #25, !dbg !11894
  call void @llvm.dbg.value(metadata i32 %7, metadata !11644, metadata !DIExpression()) #25, !dbg !11896
  %13 = shl i32 %2, %9, !dbg !11887
  %14 = or i32 %12, %13, !dbg !11887
  store volatile i32 %14, i32* %4, align 4, !dbg !11887
  ret void, !dbg !11898
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11899 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11901, metadata !DIExpression()), !dbg !11904
  call void @llvm.dbg.value(metadata i32 %1, metadata !11902, metadata !DIExpression()), !dbg !11904
  call void @llvm.dbg.value(metadata i32 %2, metadata !11903, metadata !DIExpression()), !dbg !11904
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !11905
  %5 = load volatile i32, i32* %4, align 4, !dbg !11905
  call void @llvm.dbg.value(metadata i32 %1, metadata !11636, metadata !DIExpression()) #25, !dbg !11906
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11908, !srcloc !11643
  call void @llvm.dbg.value(metadata i32 %6, metadata !11639, metadata !DIExpression()) #25, !dbg !11906
  call void @llvm.dbg.value(metadata i32 %6, metadata !11644, metadata !DIExpression()) #25, !dbg !11909
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11911, !range !9429
  %8 = shl nuw nsw i32 %7, 1, !dbg !11905
  %9 = shl i32 3, %8, !dbg !11905
  %10 = xor i32 %9, -1, !dbg !11905
  %11 = and i32 %5, %10, !dbg !11905
  call void @llvm.dbg.value(metadata i32 %1, metadata !11636, metadata !DIExpression()) #25, !dbg !11912
  call void @llvm.dbg.value(metadata i32 %6, metadata !11639, metadata !DIExpression()) #25, !dbg !11912
  call void @llvm.dbg.value(metadata i32 %6, metadata !11644, metadata !DIExpression()) #25, !dbg !11914
  %12 = shl i32 %2, %8, !dbg !11905
  %13 = or i32 %11, %12, !dbg !11905
  store volatile i32 %13, i32* %4, align 4, !dbg !11905
  ret void, !dbg !11916
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !11917 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11919, metadata !DIExpression()), !dbg !11922
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11923
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !11923
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !11923
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !11920, metadata !DIExpression()), !dbg !11922
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !11924
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !11925
  %6 = tail call fastcc zeroext i1 @device_is_ready.178() #26, !dbg !11926
  br i1 %6, label %7, label %11, !dbg !11928

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !11929
  call void @llvm.dbg.value(metadata i32 %8, metadata !11921, metadata !DIExpression()), !dbg !11922
  %9 = icmp slt i32 %8, 0, !dbg !11930
  %10 = select i1 %9, i32 %8, i32 0, !dbg !11932
  br label %11, !dbg !11932

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !11922
  ret i32 %12, !dbg !11933
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.178() unnamed_addr #1 !dbg !11934 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11938, metadata !DIExpression()), !dbg !11939
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11940, !srcloc !11942
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.179() #26, !dbg !11943
  ret i1 %1, !dbg !11944
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11945 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11949, metadata !DIExpression()), !dbg !11954
  call void @llvm.dbg.value(metadata i8 1, metadata !11950, metadata !DIExpression()), !dbg !11954
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !11951, metadata !DIExpression()), !dbg !11954
  call void @llvm.dbg.value(metadata i32 0, metadata !11952, metadata !DIExpression()), !dbg !11954
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11953, metadata !DIExpression()), !dbg !11954
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11955
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !11955
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !11955
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !11951, metadata !DIExpression()), !dbg !11954
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !11956
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !11959
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !11960
  call void @llvm.dbg.value(metadata i32 %7, metadata !11952, metadata !DIExpression()), !dbg !11954
  call void @llvm.dbg.value(metadata i32 %7, metadata !11952, metadata !DIExpression()), !dbg !11954
  ret i32 %7, !dbg !11961
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.179() unnamed_addr #1 !dbg !11962 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11964, metadata !DIExpression()), !dbg !11965
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #27, !dbg !11966
  ret i1 %1, !dbg !11967
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !11968 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11972, metadata !DIExpression()), !dbg !11980
  call void @llvm.dbg.value(metadata i32 %1, metadata !11973, metadata !DIExpression()), !dbg !11980
  call void @llvm.dbg.value(metadata i32 %2, metadata !11974, metadata !DIExpression()), !dbg !11980
  call void @llvm.dbg.value(metadata i32 %3, metadata !11975, metadata !DIExpression()), !dbg !11980
  call void @llvm.dbg.value(metadata i32 0, metadata !11976, metadata !DIExpression()), !dbg !11980
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !11981
  %5 = icmp eq i32 %3, 17, !dbg !11982
  br i1 %5, label %6, label %14, !dbg !11983

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11984
  call void @llvm.dbg.value(metadata i32 %7, metadata !11977, metadata !DIExpression()), !dbg !11985
  %8 = icmp eq i32 %7, 0, !dbg !11986
  %9 = shl nuw i32 1, %1, !dbg !11988
  br i1 %8, label %12, label %10, !dbg !11989

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !11990
  br label %14, !dbg !11992

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !11993
  br label %14, !dbg !11996

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !11997
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #21 !dbg !11998 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12000, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.value(metadata i8* %1, metadata !12001, metadata !DIExpression()), !dbg !12004
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12005
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12005
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12005
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12002, metadata !DIExpression()), !dbg !12004
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12006
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12006
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !12008
  %9 = icmp eq i32 %8, 0, !dbg !12008
  br i1 %9, label %12, label %10, !dbg !12009

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12010
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !12012
  br label %12, !dbg !12013

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12014
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !12016
  %15 = icmp eq i32 %14, 0, !dbg !12016
  br i1 %15, label %19, label %16, !dbg !12017

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12018
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !12019
  store i8 %18, i8* %1, align 1, !dbg !12020
  br label %19, !dbg !12021

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !12004
  ret i32 %20, !dbg !12022
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !12023 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12025, metadata !DIExpression()), !dbg !12029
  call void @llvm.dbg.value(metadata i8 %1, metadata !12026, metadata !DIExpression()), !dbg !12029
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12030
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12030
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12030
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12027, metadata !DIExpression()), !dbg !12029
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !12031

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12032
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !12035
  %10 = icmp eq i32 %9, 0, !dbg !12035
  br i1 %10, label %18, label %11, !dbg !12036

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12037, !srcloc !12044
  call void @llvm.dbg.value(metadata i32 undef, metadata !12040, metadata !DIExpression()) #25, !dbg !12045
  call void @llvm.dbg.value(metadata i32 undef, metadata !12041, metadata !DIExpression()) #25, !dbg !12045
  call void @llvm.dbg.value(metadata i32 undef, metadata !12028, metadata !DIExpression()), !dbg !12029
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12046
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !12048
  %15 = icmp eq i32 %14, 0, !dbg !12048
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !12037
  br i1 %15, label %17, label %19, !dbg !12049

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !12040, metadata !DIExpression()) #25, !dbg !12045
  call void @llvm.dbg.value(metadata i32 %16, metadata !12028, metadata !DIExpression()), !dbg !12029
  call void @llvm.dbg.value(metadata i32 undef, metadata !12050, metadata !DIExpression()) #25, !dbg !12053
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !12055, !srcloc !12056
  br label %18, !dbg !12057

18:                                               ; preds = %17, %7
  br label %7, !dbg !12032, !llvm.loop !12058

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !12037
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12060
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !12061
  call void @llvm.dbg.value(metadata i32 %20, metadata !12050, metadata !DIExpression()) #25, !dbg !12062
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !12064, !srcloc !12056
  ret void, !dbg !12065
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #21 !dbg !12066 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12068, metadata !DIExpression()), !dbg !12071
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12072
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12072
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12072
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12069, metadata !DIExpression()), !dbg !12071
  call void @llvm.dbg.value(metadata i32 0, metadata !12070, metadata !DIExpression()), !dbg !12071
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12073
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12073
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !12075
  %8 = icmp ne i32 %7, 0, !dbg !12075
  %9 = zext i1 %8 to i32, !dbg !12076
  call void @llvm.dbg.value(metadata i32 %9, metadata !12070, metadata !DIExpression()), !dbg !12071
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12077
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !12079
  %12 = icmp eq i32 %11, 0, !dbg !12079
  %13 = or i32 %9, 2, !dbg !12080
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !12080
  call void @llvm.dbg.value(metadata i32 %14, metadata !12070, metadata !DIExpression()), !dbg !12071
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12081
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !12083
  %17 = icmp eq i32 %16, 0, !dbg !12083
  %18 = or i32 %14, 4, !dbg !12084
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !12084
  call void @llvm.dbg.value(metadata i32 %19, metadata !12070, metadata !DIExpression()), !dbg !12071
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12085
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !12087
  %22 = icmp eq i32 %21, 0, !dbg !12087
  %23 = or i32 %19, 8, !dbg !12088
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !12088
  call void @llvm.dbg.value(metadata i32 %24, metadata !12070, metadata !DIExpression()), !dbg !12071
  %25 = and i32 %24, 8, !dbg !12089
  %26 = icmp eq i32 %25, 0, !dbg !12089
  br i1 %26, label %29, label %27, !dbg !12091

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12092
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !12094
  br label %29, !dbg !12095

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !12096
  %31 = icmp eq i32 %30, 0, !dbg !12096
  br i1 %31, label %34, label %32, !dbg !12098

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12099
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !12101
  br label %34, !dbg !12102

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !12103
  %36 = icmp eq i32 %35, 0, !dbg !12103
  br i1 %36, label %39, label %37, !dbg !12105

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12106
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !12108
  br label %39, !dbg !12109

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !12110
  %41 = icmp eq i32 %40, 0, !dbg !12110
  br i1 %41, label %44, label %42, !dbg !12112

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12113
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !12115
  br label %44, !dbg !12116

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12117
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !12118
  ret i32 %24, !dbg !12119
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !12120 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12122, metadata !DIExpression()), !dbg !12131
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !12123, metadata !DIExpression()), !dbg !12131
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12132
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12132
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12132
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12124, metadata !DIExpression()), !dbg !12131
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12133
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !12133
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !12133
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !12125, metadata !DIExpression()), !dbg !12131
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !12134
  %10 = load i8, i8* %9, align 4, !dbg !12134
  %11 = zext i8 %10 to i32, !dbg !12135
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !12136
  call void @llvm.dbg.value(metadata i32 %12, metadata !12127, metadata !DIExpression()), !dbg !12131
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !12137
  %14 = load i8, i8* %13, align 1, !dbg !12137
  %15 = zext i8 %14 to i32, !dbg !12138
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !12139
  call void @llvm.dbg.value(metadata i32 %16, metadata !12128, metadata !DIExpression()), !dbg !12131
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !12140
  %18 = load i8, i8* %17, align 2, !dbg !12140
  %19 = zext i8 %18 to i32, !dbg !12141
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !12142
  call void @llvm.dbg.value(metadata i32 %20, metadata !12129, metadata !DIExpression()), !dbg !12131
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !12143
  %22 = load i8, i8* %21, align 1, !dbg !12143
  %23 = zext i8 %22 to i32, !dbg !12144
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !12145
  call void @llvm.dbg.value(metadata i32 %24, metadata !12130, metadata !DIExpression()), !dbg !12131
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !12146

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !12148
  br i1 %26, label %69, label %27, !dbg !12150

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !12151

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !12152
  br i1 %29, label %65, label %30, !dbg !12152

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !12154
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !12131
  br i1 %31, label %38, label %34, !dbg !12156

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !12157
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !12157

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !12160
  br i1 %37, label %38, label %69, !dbg !12161

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12162
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !12163
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !12164
  %41 = icmp eq i32 %12, %40, !dbg !12166
  br i1 %41, label %43, label %42, !dbg !12167

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !12168
  br label %43, !dbg !12170

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !12171
  %45 = icmp eq i32 %16, %44, !dbg !12173
  br i1 %45, label %47, label %46, !dbg !12174

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !12175
  br label %47, !dbg !12177

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !12178
  %49 = icmp eq i32 %20, %48, !dbg !12180
  br i1 %49, label %51, label %50, !dbg !12181

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !12182
  br label %51, !dbg !12184

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !12185
  %53 = icmp eq i32 %24, %52, !dbg !12187
  br i1 %53, label %55, label %54, !dbg !12188

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !12189
  br label %55, !dbg !12191

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !12192
  %57 = load i32, i32* %56, align 4, !dbg !12192
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !12194
  %59 = load i32, i32* %58, align 4, !dbg !12194
  %60 = icmp eq i32 %57, %59, !dbg !12195
  br i1 %60, label %63, label %61, !dbg !12196

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !12197
  %62 = load i32, i32* %56, align 4, !dbg !12199
  store i32 %62, i32* %58, align 4, !dbg !12200
  br label %63, !dbg !12201

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !12202
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !12203
  br label %69, !dbg !12204

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !12152
  %67 = and i8 %66, 1, !dbg !12152
  %68 = icmp eq i8 %67, 0, !dbg !12152
  br i1 %68, label %30, label %69, !dbg !12152

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !12131
  ret i32 %70, !dbg !12205
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #22 !dbg !12206 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12208, metadata !DIExpression()), !dbg !12211
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !12209, metadata !DIExpression()), !dbg !12211
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12212
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !12212
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !12212
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !12210, metadata !DIExpression()), !dbg !12211
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !12213
  %7 = load i32, i32* %6, align 4, !dbg !12213
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !12214
  store i32 %7, i32* %8, align 4, !dbg !12215
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !12216, !range !12217
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !12218
  %11 = trunc i32 %10 to i8, !dbg !12218
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !12219
  store i8 %11, i8* %12, align 4, !dbg !12220
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !12221, !range !12222
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !12223
  %15 = trunc i32 %14 to i8, !dbg !12223
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !12224
  store i8 %15, i8* %16, align 1, !dbg !12225
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !12226
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !12227, !range !12217
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !12228
  %20 = trunc i32 %19 to i8, !dbg !12228
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !12229
  store i8 %20, i8* %21, align 2, !dbg !12230
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !12231, !range !12232
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !12233
  %24 = trunc i32 %23 to i8, !dbg !12233
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !12234
  store i8 %24, i8* %25, align 1, !dbg !12235
  ret i32 0, !dbg !12236
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12237 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12241, metadata !DIExpression()), !dbg !12243
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12244
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12244
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12244
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12242, metadata !DIExpression()), !dbg !12243
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12245
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12245
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !12246
  ret i32 %7, !dbg !12247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #3 !dbg !12248 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12252, metadata !DIExpression()), !dbg !12253
  %2 = icmp eq i32 %0, 1024, !dbg !12254
  %3 = select i1 %2, i32 2, i32 0, !dbg !12254
  %4 = icmp eq i32 %0, 1536, !dbg !12254
  %5 = select i1 %4, i32 1, i32 %3, !dbg !12254
  ret i32 %5, !dbg !12255
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12256 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12258, metadata !DIExpression()), !dbg !12260
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12261
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12261
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12261
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12259, metadata !DIExpression()), !dbg !12260
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12262
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12262
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !12263
  ret i32 %7, !dbg !12264
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #13 !dbg !12265 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12269, metadata !DIExpression()), !dbg !12270
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !12271
  %3 = icmp ult i32 %2, 4, !dbg !12271
  br i1 %3, label %4, label %7, !dbg !12271

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !12271
  %6 = load i32, i32* %5, align 4, !dbg !12271
  br label %7, !dbg !12271

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !12272
  ret i32 %8, !dbg !12274
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12275 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12277, metadata !DIExpression()), !dbg !12279
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12280
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12280
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12280
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12278, metadata !DIExpression()), !dbg !12279
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12281
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12281
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !12282
  ret i32 %7, !dbg !12283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !12284 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12288, metadata !DIExpression()), !dbg !12290
  call void @llvm.dbg.value(metadata i32 %1, metadata !12289, metadata !DIExpression()), !dbg !12290
  %3 = icmp eq i32 %0, 4096, !dbg !12291
  %4 = icmp eq i32 %1, 0, !dbg !12291
  %5 = select i1 %4, i32 4, i32 3, !dbg !12291
  %6 = select i1 %4, i32 3, i32 2, !dbg !12291
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !12291
  ret i32 %7, !dbg !12292
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12293 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12295, metadata !DIExpression()), !dbg !12297
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12298
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12298
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12298
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12296, metadata !DIExpression()), !dbg !12297
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12299
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12299
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !12300
  ret i32 %7, !dbg !12301
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !12302 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12306, metadata !DIExpression()), !dbg !12307
  %2 = icmp eq i32 %0, 768, !dbg !12308
  %3 = zext i1 %2 to i32, !dbg !12307
  ret i32 %3, !dbg !12310
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12311 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12316, metadata !DIExpression()), !dbg !12317
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12318
  %3 = load volatile i32, i32* %2, align 4, !dbg !12318
  %4 = and i32 %3, 768, !dbg !12318
  ret i32 %4, !dbg !12319
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12320 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12322, metadata !DIExpression()), !dbg !12323
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12324
  %3 = load volatile i32, i32* %2, align 4, !dbg !12324
  %4 = and i32 %3, 4096, !dbg !12324
  ret i32 %4, !dbg !12325
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12326 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12328, metadata !DIExpression()), !dbg !12329
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12330
  %3 = load volatile i32, i32* %2, align 4, !dbg !12330
  %4 = and i32 %3, 12288, !dbg !12330
  ret i32 %4, !dbg !12331
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12332 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12334, metadata !DIExpression()), !dbg !12335
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12336
  %3 = load volatile i32, i32* %2, align 4, !dbg !12336
  %4 = and i32 %3, 1536, !dbg !12336
  ret i32 %4, !dbg !12337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #3 !dbg !12338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12342, metadata !DIExpression()), !dbg !12343
  %2 = icmp eq i32 %0, 2, !dbg !12344
  %3 = select i1 %2, i32 1024, i32 0, !dbg !12344
  %4 = icmp eq i32 %0, 1, !dbg !12344
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !12344
  ret i32 %5, !dbg !12345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #3 !dbg !12346 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12350, metadata !DIExpression()), !dbg !12351
  %2 = icmp ult i32 %0, 3, !dbg !12352
  br i1 %2, label %3, label %6, !dbg !12352

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !12352
  %5 = load i32, i32* %4, align 4, !dbg !12352
  br label %6, !dbg !12352

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !12353
  ret i32 %7, !dbg !12355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !12356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12360, metadata !DIExpression()), !dbg !12362
  call void @llvm.dbg.value(metadata i32 %1, metadata !12361, metadata !DIExpression()), !dbg !12362
  %3 = icmp eq i32 %0, 4, !dbg !12363
  %4 = icmp eq i32 %1, 0, !dbg !12363
  %5 = select i1 %4, i32 0, i32 4096, !dbg !12363
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !12363
  ret i32 %6, !dbg !12364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !12365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12369, metadata !DIExpression()), !dbg !12370
  %2 = icmp eq i32 %0, 1, !dbg !12371
  %3 = select i1 %2, i32 768, i32 0, !dbg !12370
  ret i32 %3, !dbg !12373
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12374 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12378, metadata !DIExpression()), !dbg !12379
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12380
  %3 = load volatile i32, i32* %2, align 4, !dbg !12380
  %4 = and i32 %3, -8193, !dbg !12380
  store volatile i32 %4, i32* %2, align 4, !dbg !12380
  ret void, !dbg !12381
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12382 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12386, metadata !DIExpression()), !dbg !12389
  call void @llvm.dbg.value(metadata i32 %1, metadata !12387, metadata !DIExpression()), !dbg !12389
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12390
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12390
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12390
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12388, metadata !DIExpression()), !dbg !12389
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12391
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12391
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12392
  ret void, !dbg !12393
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12394 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12396, metadata !DIExpression()), !dbg !12399
  call void @llvm.dbg.value(metadata i32 %1, metadata !12397, metadata !DIExpression()), !dbg !12399
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12400
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12400
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12400
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12398, metadata !DIExpression()), !dbg !12399
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12401
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12401
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12402
  ret void, !dbg !12403
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12404 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12406, metadata !DIExpression()), !dbg !12409
  call void @llvm.dbg.value(metadata i32 %1, metadata !12407, metadata !DIExpression()), !dbg !12409
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12410
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12410
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12410
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12408, metadata !DIExpression()), !dbg !12409
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12411
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12411
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12412
  ret void, !dbg !12413
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12414 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12416, metadata !DIExpression()), !dbg !12419
  call void @llvm.dbg.value(metadata i32 %1, metadata !12417, metadata !DIExpression()), !dbg !12419
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12420
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12420
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12420
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12418, metadata !DIExpression()), !dbg !12419
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12421
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12421
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12422
  ret void, !dbg !12423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !12424 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12426, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i32 %1, metadata !12427, metadata !DIExpression()), !dbg !12431
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12432
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !12432
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !12432
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !12428, metadata !DIExpression()), !dbg !12431
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12433
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !12433
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !12433
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !12429, metadata !DIExpression()), !dbg !12431
  %10 = bitcast i32* %3 to i8*, !dbg !12434
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12434
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !12435
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !12435
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !12439
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !12439
  %15 = load i8*, i8** %14, align 4, !dbg !12439
  call void @llvm.dbg.value(metadata i32* %3, metadata !12430, metadata !DIExpression(DW_OP_deref)), !dbg !12431
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !12440
  %17 = icmp slt i32 %16, 0, !dbg !12441
  br i1 %17, label %18, label %21, !dbg !12442

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef 1) #26, !dbg !12443
  %20 = zext i8 %19 to i32, !dbg !12443
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef %20) #27, !dbg !12443
  br label %26, !dbg !12449

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !12450
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12450
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #26, !dbg !12451
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12452
  %25 = load i32, i32* %3, align 4, !dbg !12453
  call void @llvm.dbg.value(metadata i32 %25, metadata !12430, metadata !DIExpression()), !dbg !12431
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #26, !dbg !12454
  br label %26, !dbg !12455

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12455
  ret void, !dbg !12455
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12456 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12458, metadata !DIExpression()), !dbg !12459
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12460
  %3 = load volatile i32, i32* %2, align 4, !dbg !12460
  %4 = or i32 %3, 8192, !dbg !12460
  store volatile i32 %4, i32* %2, align 4, !dbg !12460
  ret void, !dbg !12461
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !12462 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12464, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i8* %1, metadata !12465, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i32* %2, metadata !12466, metadata !DIExpression()), !dbg !12468
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12469
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !12469
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !12469
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !12467, metadata !DIExpression()), !dbg !12468
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !12470
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !12470
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !12472
  br i1 %9, label %12, label %10, !dbg !12473

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !12474
  br label %12, !dbg !12475

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !12468
  ret i32 %13, !dbg !12476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef %0) unnamed_addr #3 !dbg !12477 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12479, metadata !DIExpression()), !dbg !12480
  %2 = icmp eq i32 %0, 2, !dbg !12481
  %3 = select i1 %2, i8 87, i8 63, !dbg !12481
  %4 = icmp eq i32 %0, 1, !dbg !12481
  %5 = select i1 %4, i8 69, i8 %3, !dbg !12481
  ret i8 %5, !dbg !12482
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12483 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12487, metadata !DIExpression()), !dbg !12489
  call void @llvm.dbg.value(metadata i32 0, metadata !12488, metadata !DIExpression()), !dbg !12489
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12490
  %3 = load volatile i32, i32* %2, align 4, !dbg !12490
  %4 = and i32 %3, -32769, !dbg !12490
  store volatile i32 %4, i32* %2, align 4, !dbg !12490
  ret void, !dbg !12491
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !12492 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12496, metadata !DIExpression()), !dbg !12500
  call void @llvm.dbg.value(metadata i32 %1, metadata !12497, metadata !DIExpression()), !dbg !12500
  call void @llvm.dbg.value(metadata i32 0, metadata !12498, metadata !DIExpression()), !dbg !12500
  call void @llvm.dbg.value(metadata i32 %2, metadata !12499, metadata !DIExpression()), !dbg !12500
  %4 = zext i32 %1 to i64, !dbg !12501
  %5 = mul nuw nsw i64 %4, 25, !dbg !12501
  %6 = zext i32 %2 to i64, !dbg !12501
  %7 = shl nuw nsw i64 %6, 2, !dbg !12501
  %8 = udiv i64 %5, %7, !dbg !12501
  %9 = trunc i64 %8 to i32, !dbg !12501
  %10 = udiv i32 %9, 100, !dbg !12501
  %11 = shl nuw nsw i32 %10, 4, !dbg !12501
  %12 = mul i32 %10, -100, !dbg !12501
  %13 = add i32 %12, %9, !dbg !12501
  %14 = shl i32 %13, 4, !dbg !12501
  %15 = add i32 %14, 50, !dbg !12501
  %16 = udiv i32 %15, 100, !dbg !12501
  %17 = and i32 %16, 240, !dbg !12501
  %18 = add nuw nsw i32 %17, %11, !dbg !12501
  %19 = and i32 %16, 15, !dbg !12501
  %20 = and i32 %18, 65520, !dbg !12504
  %21 = or i32 %20, %19, !dbg !12504
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !12505
  store volatile i32 %21, i32* %22, align 4, !dbg !12506
  ret void, !dbg !12507
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12508 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12510, metadata !DIExpression()), !dbg !12512
  call void @llvm.dbg.value(metadata i32 %1, metadata !12511, metadata !DIExpression()), !dbg !12512
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12513
  %4 = load volatile i32, i32* %3, align 4, !dbg !12513
  %5 = and i32 %4, -769, !dbg !12513
  %6 = or i32 %5, %1, !dbg !12513
  store volatile i32 %6, i32* %3, align 4, !dbg !12513
  ret void, !dbg !12514
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12515 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12517, metadata !DIExpression()), !dbg !12519
  call void @llvm.dbg.value(metadata i32 %1, metadata !12518, metadata !DIExpression()), !dbg !12519
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12520
  %4 = load volatile i32, i32* %3, align 4, !dbg !12520
  %5 = and i32 %4, -4097, !dbg !12520
  %6 = or i32 %5, %1, !dbg !12520
  store volatile i32 %6, i32* %3, align 4, !dbg !12520
  ret void, !dbg !12521
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12522 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12524, metadata !DIExpression()), !dbg !12526
  call void @llvm.dbg.value(metadata i32 %1, metadata !12525, metadata !DIExpression()), !dbg !12526
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12527
  %4 = load volatile i32, i32* %3, align 4, !dbg !12527
  %5 = and i32 %4, -12289, !dbg !12527
  %6 = or i32 %5, %1, !dbg !12527
  store volatile i32 %6, i32* %3, align 4, !dbg !12527
  ret void, !dbg !12528
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12529 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12531, metadata !DIExpression()), !dbg !12533
  call void @llvm.dbg.value(metadata i32 %1, metadata !12532, metadata !DIExpression()), !dbg !12533
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12534
  %4 = load volatile i32, i32* %3, align 4, !dbg !12534
  %5 = and i32 %4, -1537, !dbg !12534
  %6 = or i32 %5, %1, !dbg !12534
  store volatile i32 %6, i32* %3, align 4, !dbg !12534
  ret void, !dbg !12535
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12536 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12538, metadata !DIExpression()), !dbg !12539
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12540
  %3 = load volatile i32, i32* %2, align 4, !dbg !12540
  %4 = lshr i32 %3, 3, !dbg !12541
  %5 = and i32 %4, 1, !dbg !12541
  ret i32 %5, !dbg !12542
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12543 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12545, metadata !DIExpression()), !dbg !12546
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12547
  %3 = load volatile i32, i32* %2, align 4, !dbg !12547
  %4 = and i32 %3, 1, !dbg !12547
  ret i32 %4, !dbg !12548
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12549 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12551, metadata !DIExpression()), !dbg !12552
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12553
  %3 = load volatile i32, i32* %2, align 4, !dbg !12553
  %4 = lshr i32 %3, 1, !dbg !12554
  %5 = and i32 %4, 1, !dbg !12554
  ret i32 %5, !dbg !12555
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12556 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12558, metadata !DIExpression()), !dbg !12559
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12560
  %3 = load volatile i32, i32* %2, align 4, !dbg !12560
  %4 = lshr i32 %3, 8, !dbg !12561
  %5 = and i32 %4, 1, !dbg !12561
  ret i32 %5, !dbg !12562
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12563 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12565, metadata !DIExpression()), !dbg !12566
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12567
  store volatile i32 -257, i32* %2, align 4, !dbg !12567
  ret void, !dbg !12568
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12569 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12571, metadata !DIExpression()), !dbg !12573
  %3 = bitcast i32* %2 to i8*, !dbg !12574
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12574
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12572, metadata !DIExpression()), !dbg !12575
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12576
  %5 = load volatile i32, i32* %4, align 4, !dbg !12576
  store volatile i32 %5, i32* %2, align 4, !dbg !12577
  %6 = load volatile i32, i32* %2, align 4, !dbg !12578
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12579
  %8 = load volatile i32, i32* %7, align 4, !dbg !12579
  store volatile i32 %8, i32* %2, align 4, !dbg !12580
  %9 = load volatile i32, i32* %2, align 4, !dbg !12581
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12582
  ret void, !dbg !12582
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12583 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12585, metadata !DIExpression()), !dbg !12587
  %3 = bitcast i32* %2 to i8*, !dbg !12588
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12588
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12586, metadata !DIExpression()), !dbg !12589
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12590
  %5 = load volatile i32, i32* %4, align 4, !dbg !12590
  store volatile i32 %5, i32* %2, align 4, !dbg !12591
  %6 = load volatile i32, i32* %2, align 4, !dbg !12592
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12593
  %8 = load volatile i32, i32* %7, align 4, !dbg !12593
  store volatile i32 %8, i32* %2, align 4, !dbg !12594
  %9 = load volatile i32, i32* %2, align 4, !dbg !12595
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12596
  ret void, !dbg !12596
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12597 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12599, metadata !DIExpression()), !dbg !12601
  %3 = bitcast i32* %2 to i8*, !dbg !12602
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12602
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12600, metadata !DIExpression()), !dbg !12603
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12604
  %5 = load volatile i32, i32* %4, align 4, !dbg !12604
  store volatile i32 %5, i32* %2, align 4, !dbg !12605
  %6 = load volatile i32, i32* %2, align 4, !dbg !12606
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12607
  %8 = load volatile i32, i32* %7, align 4, !dbg !12607
  store volatile i32 %8, i32* %2, align 4, !dbg !12608
  %9 = load volatile i32, i32* %2, align 4, !dbg !12609
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12610
  ret void, !dbg !12610
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12611 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12613, metadata !DIExpression()), !dbg !12615
  %3 = bitcast i32* %2 to i8*, !dbg !12616
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12616
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12614, metadata !DIExpression()), !dbg !12617
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12618
  %5 = load volatile i32, i32* %4, align 4, !dbg !12618
  store volatile i32 %5, i32* %2, align 4, !dbg !12619
  %6 = load volatile i32, i32* %2, align 4, !dbg !12620
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12621
  %8 = load volatile i32, i32* %7, align 4, !dbg !12621
  store volatile i32 %8, i32* %2, align 4, !dbg !12622
  %9 = load volatile i32, i32* %2, align 4, !dbg !12623
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12624
  ret void, !dbg !12624
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12625 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12627, metadata !DIExpression()), !dbg !12628
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12629
  %3 = load volatile i32, i32* %2, align 4, !dbg !12629
  %4 = lshr i32 %3, 7, !dbg !12630
  %5 = and i32 %4, 1, !dbg !12630
  ret i32 %5, !dbg !12631
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !12632 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12636, metadata !DIExpression()), !dbg !12638
  call void @llvm.dbg.value(metadata i8 %1, metadata !12637, metadata !DIExpression()), !dbg !12638
  %3 = zext i8 %1 to i32, !dbg !12639
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12640
  store volatile i32 %3, i32* %4, align 4, !dbg !12641
  ret void, !dbg !12642
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12643 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12645, metadata !DIExpression()), !dbg !12646
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12647
  %3 = load volatile i32, i32* %2, align 4, !dbg !12647
  %4 = lshr i32 %3, 5, !dbg !12648
  %5 = and i32 %4, 1, !dbg !12648
  ret i32 %5, !dbg !12649
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12650 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12654, metadata !DIExpression()), !dbg !12655
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12656
  %3 = load volatile i32, i32* %2, align 4, !dbg !12656
  %4 = trunc i32 %3 to i8, !dbg !12657
  ret i8 %4, !dbg !12658
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !12659 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12661, metadata !DIExpression()), !dbg !12667
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12668
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12668
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12668
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12662, metadata !DIExpression()), !dbg !12667
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12669
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !12669
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !12669
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !12663, metadata !DIExpression()), !dbg !12667
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !12670
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !12671
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !12671
  %10 = tail call fastcc zeroext i1 @device_is_ready.187(%struct.device* noundef %9) #26, !dbg !12673
  br i1 %10, label %14, label %11, !dbg !12674

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef 1) #26, !dbg !12675
  %13 = zext i8 %12 to i32, !dbg !12675
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3.188, i32 0, i32 0), i32 noundef %13) #27, !dbg !12675
  br label %62, !dbg !12681

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !12682
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !12683
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !12683
  %18 = load i8*, i8** %17, align 4, !dbg !12683
  %19 = tail call fastcc i32 @clock_control_on.189(%struct.device* noundef %15, i8* noundef %18) #26, !dbg !12684
  call void @llvm.dbg.value(metadata i32 %19, metadata !12666, metadata !DIExpression()), !dbg !12667
  %20 = icmp eq i32 %19, 0, !dbg !12685
  br i1 %20, label %24, label %21, !dbg !12687

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef 1) #26, !dbg !12688
  %23 = zext i8 %22 to i32, !dbg !12688
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4.190, i32 0, i32 0), i32 noundef %23) #27, !dbg !12688
  br label %62, !dbg !12694

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !12695
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !12695
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #26, !dbg !12696
  call void @llvm.dbg.value(metadata i32 %27, metadata !12666, metadata !DIExpression()), !dbg !12667
  %28 = icmp slt i32 %27, 0, !dbg !12697
  br i1 %28, label %62, label %29, !dbg !12699

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12700
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12700
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #26, !dbg !12701
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12702
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #26, !dbg !12703
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !12704
  %34 = load i32, i32* %33, align 4, !dbg !12704
  %35 = icmp ult i32 %34, 3, !dbg !12706
  br i1 %35, label %39, label %36, !dbg !12706

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef 2) #26, !dbg !12707
  %38 = zext i8 %37 to i32, !dbg !12707
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5.191, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #27, !dbg !12707
  call void @llvm.dbg.value(metadata i32 0, metadata !12664, metadata !DIExpression()), !dbg !12667
  call void @llvm.dbg.value(metadata i32 0, metadata !12665, metadata !DIExpression()), !dbg !12667
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !12706
  %41 = load i32, i32* %40, align 4, !dbg !12706
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.6, i32 0, i32 %34, !dbg !12706
  %43 = load i32, i32* %42, align 4, !dbg !12706
  br label %44, !dbg !12706

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !12716
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !12716
  call void @llvm.dbg.value(metadata i32 %46, metadata !12665, metadata !DIExpression()), !dbg !12667
  call void @llvm.dbg.value(metadata i32 %45, metadata !12664, metadata !DIExpression()), !dbg !12667
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12717
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #26, !dbg !12718
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !12719
  %49 = load i8, i8* %48, align 4, !dbg !12719, !range !8618
  %50 = icmp eq i8 %49, 0, !dbg !12719
  br i1 %50, label %52, label %51, !dbg !12721

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !12722
  br label %52, !dbg !12724

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !12725
  %54 = load i32, i32* %53, align 4, !dbg !12725
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #26, !dbg !12726
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !12727
  %56 = load i8, i8* %55, align 4, !dbg !12727, !range !8618
  %57 = icmp eq i8 %56, 0, !dbg !12727
  br i1 %57, label %60, label %58, !dbg !12729

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12730
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #26, !dbg !12732
  br label %60, !dbg !12733

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12734
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #26, !dbg !12735
  br label %62, !dbg !12736

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !12667
  ret i32 %63, !dbg !12737
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #11 !dbg !12738 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12742, metadata !DIExpression()), !dbg !12746
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12747
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !12747
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !12747
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !12743, metadata !DIExpression()), !dbg !12746
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !12744, metadata !DIExpression()), !dbg !12746
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !12748
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !12749
  ret void, !dbg !12750
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.187(%struct.device* noundef %0) unnamed_addr #1 !dbg !12751 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12755, metadata !DIExpression()), !dbg !12756
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12757, !srcloc !12759
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.192(%struct.device* noundef %0) #26, !dbg !12760
  ret i1 %2, !dbg !12761
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.189(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !12762 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12764, metadata !DIExpression()), !dbg !12767
  call void @llvm.dbg.value(metadata i8* %1, metadata !12765, metadata !DIExpression()), !dbg !12767
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12768
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !12768
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !12768
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !12766, metadata !DIExpression()), !dbg !12767
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !12769
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !12769
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !12770
  ret i32 %8, !dbg !12771
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !12772 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12776, metadata !DIExpression()), !dbg !12780
  call void @llvm.dbg.value(metadata i8 0, metadata !12777, metadata !DIExpression()), !dbg !12780
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !12781
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !12781
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12779, metadata !DIExpression(DW_OP_deref)), !dbg !12780
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !12782
  call void @llvm.dbg.value(metadata i32 %4, metadata !12778, metadata !DIExpression()), !dbg !12780
  %5 = icmp slt i32 %4, 0, !dbg !12783
  br i1 %5, label %9, label %6, !dbg !12785

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !12786
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !12779, metadata !DIExpression()), !dbg !12780
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !12787
  br label %9, !dbg !12788

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !12780
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !12789
  ret i32 %10, !dbg !12789
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !12790 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12792, metadata !DIExpression()), !dbg !12796
  call void @llvm.dbg.value(metadata i32 12, metadata !12793, metadata !DIExpression()), !dbg !12796
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !12797

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !12798, metadata !DIExpression()) #25, !dbg !12804
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !12807, !srcloc !12808
  call void @llvm.dbg.value(metadata i32 %4, metadata !12803, metadata !DIExpression()) #25, !dbg !12804
  %5 = or i32 %4, 12, !dbg !12809
  call void @llvm.dbg.value(metadata i32 %5, metadata !12794, metadata !DIExpression()), !dbg !12810
  call void @llvm.dbg.value(metadata i32 %5, metadata !12811, metadata !DIExpression()) #25, !dbg !12818
  call void @llvm.dbg.value(metadata i32* %2, metadata !12816, metadata !DIExpression()) #25, !dbg !12818
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !12820, !srcloc !12821
  call void @llvm.dbg.value(metadata i32 %6, metadata !12817, metadata !DIExpression()) #25, !dbg !12818
  %7 = icmp eq i32 %6, 0, !dbg !12797
  br i1 %7, label %8, label %3, !dbg !12809, !llvm.loop !12822

8:                                                ; preds = %3
  ret void, !dbg !12823
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !12824 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12826, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.value(metadata i32 %1, metadata !12827, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.value(metadata i32 %2, metadata !12828, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.value(metadata i32 0, metadata !12829, metadata !DIExpression()), !dbg !12830
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12831
  %5 = load volatile i32, i32* %4, align 4, !dbg !12831
  %6 = and i32 %5, -5633, !dbg !12831
  %7 = or i32 %2, %1, !dbg !12831
  %8 = or i32 %7, %6, !dbg !12831
  store volatile i32 %8, i32* %4, align 4, !dbg !12831
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12832
  %10 = load volatile i32, i32* %9, align 4, !dbg !12832
  %11 = and i32 %10, -12289, !dbg !12832
  store volatile i32 %11, i32* %9, align 4, !dbg !12832
  ret void, !dbg !12833
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12834 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12836, metadata !DIExpression()), !dbg !12837
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12838
  %3 = load volatile i32, i32* %2, align 4, !dbg !12838
  %4 = or i32 %3, 8, !dbg !12838
  store volatile i32 %4, i32* %2, align 4, !dbg !12838
  ret void, !dbg !12839
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !12840 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !12844, metadata !DIExpression()), !dbg !12847
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !12845, metadata !DIExpression()), !dbg !12847
  call void @llvm.dbg.value(metadata i32 0, metadata !12846, metadata !DIExpression()), !dbg !12847
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !12848
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !12848
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !12849
  %5 = load i8, i8* %4, align 4, !dbg !12849
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !12850
  ret i32 %6, !dbg !12851
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.192(%struct.device* noundef %0) unnamed_addr #1 !dbg !12852 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12854, metadata !DIExpression()), !dbg !12855
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !12856
  ret i1 %2, !dbg !12857
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !12858 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12860, metadata !DIExpression()), !dbg !12861
  tail call fastcc void @__NVIC_SetPriority.194() #26, !dbg !12862
  store i32 8399, i32* @last_load, align 4, !dbg !12863
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12864
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12865
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12866
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12867
  %3 = or i32 %2, 7, !dbg !12867
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12867
  ret i32 0, !dbg !12868
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.194() unnamed_addr #15 !dbg !12869 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !12871, metadata !DIExpression()), !dbg !12873
  call void @llvm.dbg.value(metadata i32 1, metadata !12872, metadata !DIExpression()), !dbg !12873
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !12874
  ret void, !dbg !12877
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !12878 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12880, metadata !DIExpression()), !dbg !12882
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !12883
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12884
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12885
  %5 = add i32 %4, %3, !dbg !12885
  store i32 %5, i32* @cycle_count, align 4, !dbg !12885
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12886
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12887
  %7 = sub i32 %5, %6, !dbg !12890
  %8 = udiv i32 %7, 8400, !dbg !12891
  call void @llvm.dbg.value(metadata i32 %8, metadata !12881, metadata !DIExpression()), !dbg !12882
  %9 = mul nuw i32 %8, 8400, !dbg !12892
  %10 = add i32 %9, %6, !dbg !12893
  store i32 %10, i32* @announced_cycles, align 4, !dbg !12893
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !12894
  tail call void @z_arm_int_exit() #27, !dbg !12895
  ret void, !dbg !12896
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !12897 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12902
  call void @llvm.dbg.value(metadata i32 %1, metadata !12899, metadata !DIExpression()), !dbg !12903
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12904
  call void @llvm.dbg.value(metadata i32 %2, metadata !12900, metadata !DIExpression()), !dbg !12903
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12905
  call void @llvm.dbg.value(metadata i32 %3, metadata !12901, metadata !DIExpression()), !dbg !12903
  %4 = and i32 %2, 65536, !dbg !12906
  %5 = icmp ne i32 %4, 0, !dbg !12906
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !12908
  %8 = load i32, i32* @last_load, align 4, !dbg !12903
  br i1 %7, label %9, label %13, !dbg !12908

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12909
  %11 = add i32 %10, %8, !dbg !12909
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !12909
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12911
  br label %13, !dbg !12912

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !12913
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12914
  %16 = add i32 %14, %15, !dbg !12915
  ret i32 %16, !dbg !12916
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !12917 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12921, metadata !DIExpression()), !dbg !12934
  call void @llvm.dbg.value(metadata i1 %1, metadata !12922, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12934
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !12935
  br i1 %4, label %5, label %8, !dbg !12935

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12937
  %7 = and i32 %6, -2, !dbg !12937
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12937
  store i32 -16777216, i32* @last_load, align 4, !dbg !12939
  br label %54, !dbg !12940

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12941
  call void @llvm.dbg.value(metadata i32 %9, metadata !12926, metadata !DIExpression()), !dbg !12934
  br i1 %3, label %18, label %10, !dbg !12942

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12942
  call void @llvm.dbg.value(metadata i32 undef, metadata !12921, metadata !DIExpression()), !dbg !12934
  %12 = icmp slt i32 %11, 1, !dbg !12943
  br i1 %12, label %18, label %13, !dbg !12943

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !12943
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !12943
  %16 = mul nuw nsw i32 %15, 8400, !dbg !12943
  %17 = add nuw nsw i32 %16, 8399, !dbg !12943
  br label %18, !dbg !12943

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12921, metadata !DIExpression()), !dbg !12934
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12944, metadata !DIExpression()) #25, !dbg !12951
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12953, !srcloc !12959
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !12953
  call void @llvm.dbg.value(metadata i32 %21, metadata !12956, metadata !DIExpression()) #25, !dbg !12960
  call void @llvm.dbg.value(metadata i32 undef, metadata !12957, metadata !DIExpression()) #25, !dbg !12960
  call void @llvm.dbg.value(metadata i32 %21, metadata !12950, metadata !DIExpression()) #25, !dbg !12951
  call void @llvm.dbg.value(metadata i32 %21, metadata !12927, metadata !DIExpression()), !dbg !12934
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !12961
  call void @llvm.dbg.value(metadata i32 %22, metadata !12932, metadata !DIExpression()), !dbg !12934
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12962
  call void @llvm.dbg.value(metadata i32 %23, metadata !12924, metadata !DIExpression()), !dbg !12934
  %24 = load i32, i32* @cycle_count, align 4, !dbg !12963
  %25 = add i32 %24, %22, !dbg !12963
  store i32 %25, i32* @cycle_count, align 4, !dbg !12963
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12964
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !12965
  %27 = sub i32 %25, %26, !dbg !12966
  call void @llvm.dbg.value(metadata i32 %27, metadata !12933, metadata !DIExpression()), !dbg !12934
  %28 = icmp slt i32 %27, 0, !dbg !12967
  br i1 %28, label %38, label %29, !dbg !12969

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !12923, metadata !DIExpression()), !dbg !12934
  call void @llvm.dbg.value(metadata i32 undef, metadata !12923, metadata !DIExpression()), !dbg !12934
  %30 = add nuw i32 %19, %27, !dbg !12970
  %31 = urem i32 %30, 8400, !dbg !12972
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !12923, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12934
  %32 = sub nuw nsw i32 %19, %31, !dbg !12973
  call void @llvm.dbg.value(metadata i32 %32, metadata !12923, metadata !DIExpression()), !dbg !12934
  %33 = icmp ugt i32 %32, 1024, !dbg !12974
  br i1 %33, label %34, label %36, !dbg !12974

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !12923, metadata !DIExpression()), !dbg !12934
  %35 = icmp ugt i32 %32, 16766400, !dbg !12975
  br i1 %35, label %38, label %36, !dbg !12977

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !12978
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12979
  call void @llvm.dbg.value(metadata i32 %40, metadata !12925, metadata !DIExpression()), !dbg !12934
  %41 = add nsw i32 %39, -1, !dbg !12980
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12981
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12982
  %42 = icmp ult i32 %23, %40, !dbg !12983
  br i1 %42, label %43, label %48, !dbg !12985

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !12986
  %45 = add i32 %23, %9, !dbg !12988
  %46 = sub i32 %45, %40, !dbg !12989
  %47 = add i32 %46, %44, !dbg !12986
  br label %52, !dbg !12990

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !12991
  %50 = load i32, i32* @cycle_count, align 4, !dbg !12993
  %51 = add i32 %49, %50, !dbg !12993
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !12994
  store i32 %53, i32* @cycle_count, align 4, !dbg !12994
  call void @llvm.dbg.value(metadata i32 %21, metadata !12995, metadata !DIExpression()) #25, !dbg !13001
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #25, !dbg !13001
  call void @llvm.dbg.value(metadata i32 %21, metadata !13003, metadata !DIExpression()) #25, !dbg !13006
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !13008, !srcloc !13009
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !13010
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !13011 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12944, metadata !DIExpression()) #25, !dbg !13015
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13017, !srcloc !12959
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13017
  call void @llvm.dbg.value(metadata i32 %2, metadata !12956, metadata !DIExpression()) #25, !dbg !13019
  call void @llvm.dbg.value(metadata i32 undef, metadata !12957, metadata !DIExpression()) #25, !dbg !13019
  call void @llvm.dbg.value(metadata i32 %2, metadata !12950, metadata !DIExpression()) #25, !dbg !13015
  call void @llvm.dbg.value(metadata i32 %2, metadata !13013, metadata !DIExpression()), !dbg !13020
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !13021
  %4 = load i32, i32* @cycle_count, align 4, !dbg !13022
  %5 = add i32 %4, %3, !dbg !13023
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !13024
  %7 = sub i32 %5, %6, !dbg !13025
  call void @llvm.dbg.value(metadata i32 %7, metadata !13014, metadata !DIExpression()), !dbg !13020
  call void @llvm.dbg.value(metadata i32 %2, metadata !12995, metadata !DIExpression()) #25, !dbg !13026
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #25, !dbg !13026
  call void @llvm.dbg.value(metadata i32 %2, metadata !13003, metadata !DIExpression()) #25, !dbg !13028
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !13030, !srcloc !13009
  %8 = udiv i32 %7, 8400, !dbg !13031
  ret i32 %8, !dbg !13032
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !13033 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12944, metadata !DIExpression()) #25, !dbg !13037
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13039, !srcloc !12959
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13039
  call void @llvm.dbg.value(metadata i32 %2, metadata !12956, metadata !DIExpression()) #25, !dbg !13041
  call void @llvm.dbg.value(metadata i32 undef, metadata !12957, metadata !DIExpression()) #25, !dbg !13041
  call void @llvm.dbg.value(metadata i32 %2, metadata !12950, metadata !DIExpression()) #25, !dbg !13037
  call void @llvm.dbg.value(metadata i32 %2, metadata !13035, metadata !DIExpression()), !dbg !13042
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !13043
  %4 = load i32, i32* @cycle_count, align 4, !dbg !13044
  %5 = add i32 %4, %3, !dbg !13045
  call void @llvm.dbg.value(metadata i32 %5, metadata !13036, metadata !DIExpression()), !dbg !13042
  call void @llvm.dbg.value(metadata i32 %2, metadata !12995, metadata !DIExpression()) #25, !dbg !13046
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13000, metadata !DIExpression()) #25, !dbg !13046
  call void @llvm.dbg.value(metadata i32 %2, metadata !13003, metadata !DIExpression()) #25, !dbg !13048
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !13050, !srcloc !13009
  ret i32 %5, !dbg !13051
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !13052 {
  %1 = load i32, i32* @last_load, align 4, !dbg !13053
  %2 = icmp eq i32 %1, -16777216, !dbg !13055
  br i1 %2, label %3, label %6, !dbg !13056

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13057
  %5 = or i32 %4, 1, !dbg !13057
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13057
  br label %6, !dbg !13059

6:                                                ; preds = %3, %0
  ret void, !dbg !13060
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !13061 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13062
  %2 = and i32 %1, -2, !dbg !13062
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13062
  ret void, !dbg !13063
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !13064 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !13090, metadata !DIExpression()), !dbg !13093
  call void @llvm.dbg.value(metadata i8 %1, metadata !13091, metadata !DIExpression()), !dbg !13093
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !13092, metadata !DIExpression()), !dbg !13093
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !13094
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13094
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !13093
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13095
  %8 = load i8, i8* %6, align 4, !dbg !13096
  %9 = zext i8 %8 to i32, !dbg !13097
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !13097
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !13098
  br i1 %11, label %18, label %24, !dbg !13099

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !13093
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13095
  %14 = load i8, i8* %6, align 4, !dbg !13096
  %15 = zext i8 %14 to i32, !dbg !13097
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !13097
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !13098
  br i1 %17, label %18, label %24, !dbg !13099, !llvm.loop !13100

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !13102
  %21 = load i8, i8* %20, align 1, !dbg !13102
  %22 = icmp eq i8 %21, %1, !dbg !13105
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !13106
  br i1 %22, label %24, label %12, !dbg !13107

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !13093
  ret i32 %25, !dbg !13108
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13109 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !13120, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata i8 %1, metadata !13121, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata i32 %2, metadata !13122, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata i32 0, metadata !13125, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata i32 0, metadata !13126, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata i8 0, metadata !13127, metadata !DIExpression()), !dbg !13137
  %4 = icmp eq i8 %1, 0, !dbg !13138
  br i1 %4, label %35, label %5, !dbg !13139

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !13138
  br label %9, !dbg !13139

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !13127, metadata !DIExpression()), !dbg !13137
  call void @llvm.dbg.value(metadata i32 %29, metadata !13125, metadata !DIExpression()), !dbg !13136
  %8 = icmp eq i32 %34, %6, !dbg !13138
  br i1 %8, label %35, label %9, !dbg !13139, !llvm.loop !13140

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13127, metadata !DIExpression()), !dbg !13137
  call void @llvm.dbg.value(metadata i32 %11, metadata !13125, metadata !DIExpression()), !dbg !13136
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !13142
  %13 = load i32, i32* %12, align 4, !dbg !13142
  call void @llvm.dbg.value(metadata i32 %13, metadata !13124, metadata !DIExpression()), !dbg !13136
  %14 = and i32 %13, 31, !dbg !13143
  %15 = icmp ult i32 %14, 16, !dbg !13144
  br i1 %15, label %16, label %20, !dbg !13145

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !13146
  %18 = load i32, i32* %17, align 4, !dbg !13146
  %19 = or i32 %18, 32, !dbg !13148
  call void @llvm.dbg.value(metadata i32 %19, metadata !13125, metadata !DIExpression()), !dbg !13136
  br label %28, !dbg !13149

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !13150

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !13151
  %23 = load i32, i32* %22, align 4, !dbg !13151
  call void @llvm.dbg.value(metadata i32 %23, metadata !13129, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !13152
  %24 = lshr i32 %23, 7, !dbg !13153
  %25 = and i32 %24, 16, !dbg !13153
  %26 = or i32 %25, %23, !dbg !13153
  call void @llvm.dbg.value(metadata i32 %26, metadata !13125, metadata !DIExpression()), !dbg !13136
  br label %28, !dbg !13154

27:                                               ; preds = %20
  br label %28, !dbg !13155

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !13136
  call void @llvm.dbg.value(metadata i32 %29, metadata !13125, metadata !DIExpression()), !dbg !13136
  %30 = lshr i32 %13, 5, !dbg !13155
  %31 = and i32 %30, 255, !dbg !13155
  call void @llvm.dbg.value(metadata i32 %31, metadata !13123, metadata !DIExpression()), !dbg !13136
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !13156
  call void @llvm.dbg.value(metadata i32 %32, metadata !13126, metadata !DIExpression()), !dbg !13136
  %33 = icmp slt i32 %32, 0, !dbg !13157
  %34 = add nuw nsw i32 %10, 1, !dbg !13159
  call void @llvm.dbg.value(metadata i32 %34, metadata !13127, metadata !DIExpression()), !dbg !13137
  br i1 %33, label %35, label %7, !dbg !13160

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !13161
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !13162 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13166, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.value(metadata i32 %1, metadata !13167, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.value(metadata i32 %2, metadata !13168, metadata !DIExpression()), !dbg !13170
  %4 = icmp ugt i32 %0, 175, !dbg !13171
  br i1 %4, label %16, label %5, !dbg !13173

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !13174
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !13175
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !13175
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13169, metadata !DIExpression()), !dbg !13170
  %9 = add nsw i32 %6, -8, !dbg !13176
  %10 = icmp ult i32 %9, 3, !dbg !13176
  br i1 %10, label %16, label %11, !dbg !13178

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.199(%struct.device* noundef %8) #26, !dbg !13179
  br i1 %12, label %13, label %16, !dbg !13180

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !13181
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !13182
  br label %16, !dbg !13183

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !13170
  ret i32 %17, !dbg !13184
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.199(%struct.device* noundef %0) unnamed_addr #1 !dbg !13185 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13189, metadata !DIExpression()), !dbg !13190
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13191, !srcloc !13193
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.200(%struct.device* noundef %0) #26, !dbg !13194
  ret i1 %2, !dbg !13195
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.200(%struct.device* noundef %0) unnamed_addr #1 !dbg !13196 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13198, metadata !DIExpression()), !dbg !13199
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !13200
  ret i1 %2, !dbg !13201
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #3 !dbg !13202 {
  ret void, !dbg !13203
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #17 !dbg !13204 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13206, metadata !DIExpression()), !dbg !13211
  call void @llvm.dbg.value(metadata i32 0, metadata !13207, metadata !DIExpression()), !dbg !13211
  call void @llvm.dbg.value(metadata i32 2, metadata !13208, metadata !DIExpression()), !dbg !13211
  call void @llvm.dbg.value(metadata i32 0, metadata !13209, metadata !DIExpression()), !dbg !13211
  call void @llvm.dbg.value(metadata i32 2, metadata !13210, metadata !DIExpression()), !dbg !13211
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13212
  %2 = and i32 %1, 12, !dbg !13213
  call void @llvm.dbg.value(metadata i32 %2, metadata !13206, metadata !DIExpression()), !dbg !13211
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !13214

3:                                                ; preds = %0
  br label %21, !dbg !13215

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13217
  call void @llvm.dbg.value(metadata i32 %5, metadata !13209, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !13211
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13218
  %7 = and i32 %6, 63, !dbg !13219
  call void @llvm.dbg.value(metadata i32 %7, metadata !13210, metadata !DIExpression()), !dbg !13211
  %8 = and i32 %5, 4194304, !dbg !13220
  %9 = icmp eq i32 %8, 0, !dbg !13220
  %10 = select i1 %9, i32 16000000, i32 8000000
  %11 = udiv i32 %10, %7, !dbg !13222
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13222
  %13 = lshr i32 %12, 6, !dbg !13222
  %14 = and i32 %13, 511, !dbg !13222
  %15 = mul i32 %14, %11, !dbg !13222
  call void @llvm.dbg.value(metadata i32 %15, metadata !13207, metadata !DIExpression()), !dbg !13211
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13223
  %17 = lshr i32 %16, 15, !dbg !13224
  %18 = and i32 %17, 6, !dbg !13224
  %19 = add nuw nsw i32 %18, 2, !dbg !13224
  call void @llvm.dbg.value(metadata i32 %19, metadata !13208, metadata !DIExpression()), !dbg !13211
  %20 = udiv i32 %15, %19, !dbg !13225
  br label %21, !dbg !13226

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 8000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !13227
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13228
  %24 = lshr i32 %23, 4, !dbg !13229
  %25 = and i32 %24, 15, !dbg !13229
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !13230
  %27 = load i8, i8* %26, align 1, !dbg !13230
  %28 = zext i8 %27 to i32, !dbg !13230
  call void @llvm.dbg.value(metadata i32 %28, metadata !13206, metadata !DIExpression()), !dbg !13211
  %29 = lshr i32 %22, %28, !dbg !13231
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !13231
  ret void, !dbg !13232
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !13233 {
  ret i32 0, !dbg !13238
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !13239 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13265, metadata !DIExpression()), !dbg !13276
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !13277
  br i1 %3, label %311, label %4, !dbg !13279

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13280
  %6 = load i32, i32* %5, align 4, !dbg !13280
  %7 = and i32 %6, 1, !dbg !13282
  %8 = icmp eq i32 %7, 0, !dbg !13283
  br i1 %8, label %66, label %9, !dbg !13284

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13285
  %11 = and i32 %10, 12, !dbg !13285
  %12 = icmp eq i32 %11, 4, !dbg !13288
  br i1 %12, label %21, label %13, !dbg !13289

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13290
  %15 = and i32 %14, 12, !dbg !13290
  %16 = icmp eq i32 %15, 8, !dbg !13291
  br i1 %16, label %17, label %29, !dbg !13292

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13293
  %19 = and i32 %18, 4194304, !dbg !13294
  %20 = icmp eq i32 %19, 0, !dbg !13295
  br i1 %20, label %29, label %21, !dbg !13296

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13297
  %23 = and i32 %22, 131072, !dbg !13297
  %24 = icmp eq i32 %23, 0, !dbg !13297
  br i1 %24, label %66, label %25, !dbg !13300

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13301
  %27 = load i32, i32* %26, align 4, !dbg !13301
  %28 = icmp eq i32 %27, 0, !dbg !13302
  br i1 %28, label %311, label %66, !dbg !13303

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13304
  %31 = load i32, i32* %30, align 4, !dbg !13304
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !13308

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13309
  %34 = or i32 %33, 65536, !dbg !13309
  br label %45, !dbg !13309

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13311
  %37 = or i32 %36, 262144, !dbg !13311
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13311
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13311
  %39 = or i32 %38, 65536, !dbg !13311
  br label %45, !dbg !13311

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13314
  %42 = and i32 %41, -65537, !dbg !13314
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13314
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13314
  %44 = and i32 %43, -262145, !dbg !13314
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13316
  %47 = load i32, i32* %30, align 4, !dbg !13317
  %48 = icmp eq i32 %47, 0, !dbg !13319
  %49 = tail call i32 @HAL_GetTick() #27, !dbg !13320
  call void @llvm.dbg.value(metadata i32 %49, metadata !13266, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.value(metadata i32 %49, metadata !13266, metadata !DIExpression()), !dbg !13276
  br i1 %48, label %58, label %50, !dbg !13321

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13322
  %52 = and i32 %51, 131072, !dbg !13324
  %53 = icmp eq i32 %52, 0, !dbg !13324
  br i1 %53, label %54, label %66, !dbg !13325

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #27, !dbg !13326
  %56 = sub i32 %55, %49, !dbg !13329
  %57 = icmp ugt i32 %56, 100, !dbg !13330
  br i1 %57, label %311, label %50, !dbg !13331, !llvm.loop !13332

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13334
  %60 = and i32 %59, 131072, !dbg !13334
  %61 = icmp eq i32 %60, 0, !dbg !13334
  br i1 %61, label %66, label %62, !dbg !13336

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !13337
  %64 = sub i32 %63, %49, !dbg !13340
  %65 = icmp ugt i32 %64, 100, !dbg !13341
  br i1 %65, label %311, label %58, !dbg !13342, !llvm.loop !13343

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !13345
  %68 = and i32 %67, 2, !dbg !13347
  %69 = icmp eq i32 %68, 0, !dbg !13348
  br i1 %69, label %121, label %70, !dbg !13349

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13350
  %72 = and i32 %71, 12, !dbg !13350
  %73 = icmp eq i32 %72, 0, !dbg !13353
  br i1 %73, label %82, label %74, !dbg !13354

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13355
  %76 = and i32 %75, 12, !dbg !13355
  %77 = icmp eq i32 %76, 8, !dbg !13356
  br i1 %77, label %78, label %90, !dbg !13357

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13358
  %80 = and i32 %79, 4194304, !dbg !13359
  %81 = icmp eq i32 %80, 0, !dbg !13360
  br i1 %81, label %82, label %90, !dbg !13361

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13362
  %84 = and i32 %83, 2, !dbg !13362
  %85 = icmp eq i32 %84, 0, !dbg !13362
  br i1 %85, label %114, label %86, !dbg !13365

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13366
  %88 = load i32, i32* %87, align 4, !dbg !13366
  %89 = icmp eq i32 %88, 1, !dbg !13367
  br i1 %89, label %114, label %311, !dbg !13368

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13369
  %92 = load i32, i32* %91, align 4, !dbg !13369
  %93 = icmp eq i32 %92, 0, !dbg !13372
  br i1 %93, label %104, label %94, !dbg !13373

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13374
  %95 = tail call i32 @HAL_GetTick() #27, !dbg !13376
  call void @llvm.dbg.value(metadata i32 %95, metadata !13266, metadata !DIExpression()), !dbg !13276
  br label %96, !dbg !13377

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13378
  %98 = and i32 %97, 2, !dbg !13379
  %99 = icmp eq i32 %98, 0, !dbg !13379
  br i1 %99, label %100, label %114, !dbg !13377

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #27, !dbg !13380
  %102 = sub i32 %101, %95, !dbg !13383
  %103 = icmp ugt i32 %102, 2, !dbg !13384
  br i1 %103, label %311, label %96, !dbg !13385, !llvm.loop !13386

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13388
  %105 = tail call i32 @HAL_GetTick() #27, !dbg !13390
  call void @llvm.dbg.value(metadata i32 %105, metadata !13266, metadata !DIExpression()), !dbg !13276
  br label %106, !dbg !13391

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13392
  %108 = and i32 %107, 2, !dbg !13392
  %109 = icmp eq i32 %108, 0, !dbg !13392
  br i1 %109, label %121, label %110, !dbg !13391

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !13393
  %112 = sub i32 %111, %105, !dbg !13396
  %113 = icmp ugt i32 %112, 2, !dbg !13397
  br i1 %113, label %311, label %106, !dbg !13398, !llvm.loop !13399

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13401
  %116 = and i32 %115, -249, !dbg !13401
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13401
  %118 = load i32, i32* %117, align 4, !dbg !13401
  %119 = shl i32 %118, 3, !dbg !13401
  %120 = or i32 %119, %116, !dbg !13401
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13401
  br label %121, !dbg !13402

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !13402
  %123 = and i32 %122, 8, !dbg !13404
  %124 = icmp eq i32 %123, 0, !dbg !13405
  br i1 %124, label %149, label %125, !dbg !13406

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13407
  %127 = load i32, i32* %126, align 4, !dbg !13407
  %128 = icmp eq i32 %127, 0, !dbg !13410
  br i1 %128, label %139, label %129, !dbg !13411

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13412
  %130 = tail call i32 @HAL_GetTick() #27, !dbg !13414
  call void @llvm.dbg.value(metadata i32 %130, metadata !13266, metadata !DIExpression()), !dbg !13276
  br label %131, !dbg !13415

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13416
  %133 = and i32 %132, 2, !dbg !13417
  %134 = icmp eq i32 %133, 0, !dbg !13417
  br i1 %134, label %135, label %149, !dbg !13415

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #27, !dbg !13418
  %137 = sub i32 %136, %130, !dbg !13421
  %138 = icmp ugt i32 %137, 2, !dbg !13422
  br i1 %138, label %311, label %131, !dbg !13423, !llvm.loop !13424

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13426
  %140 = tail call i32 @HAL_GetTick() #27, !dbg !13428
  call void @llvm.dbg.value(metadata i32 %140, metadata !13266, metadata !DIExpression()), !dbg !13276
  br label %141, !dbg !13429

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13430
  %143 = and i32 %142, 2, !dbg !13430
  %144 = icmp eq i32 %143, 0, !dbg !13430
  br i1 %144, label %149, label %145, !dbg !13429

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !13431
  %147 = sub i32 %146, %140, !dbg !13434
  %148 = icmp ugt i32 %147, 2, !dbg !13435
  br i1 %148, label %311, label %141, !dbg !13436, !llvm.loop !13437

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !13439
  %151 = and i32 %150, 4, !dbg !13440
  %152 = icmp eq i32 %151, 0, !dbg !13441
  br i1 %152, label %221, label %153, !dbg !13442

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !13268, metadata !DIExpression()), !dbg !13443
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13444
  %155 = and i32 %154, 268435456, !dbg !13444
  %156 = icmp eq i32 %155, 0, !dbg !13444
  br i1 %156, label %157, label %164, !dbg !13445

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !13446
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !13446
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13272, metadata !DIExpression()), !dbg !13446
  store volatile i32 0, i32* %2, align 4, !dbg !13446
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13446
  %160 = or i32 %159, 268435456, !dbg !13446
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13446
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13446
  %162 = and i32 %161, 268435456, !dbg !13446
  store volatile i32 %162, i32* %2, align 4, !dbg !13446
  %163 = load volatile i32, i32* %2, align 4, !dbg !13446
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !13447
  call void @llvm.dbg.value(metadata i32 1, metadata !13268, metadata !DIExpression()), !dbg !13443
  br label %164, !dbg !13448

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !13268, metadata !DIExpression()), !dbg !13443
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13449
  %166 = and i32 %165, 256, !dbg !13449
  %167 = icmp eq i32 %166, 0, !dbg !13449
  br i1 %167, label %168, label %180, !dbg !13451

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13452
  %170 = or i32 %169, 256, !dbg !13452
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13452
  %171 = tail call i32 @HAL_GetTick() #27, !dbg !13454
  call void @llvm.dbg.value(metadata i32 %171, metadata !13266, metadata !DIExpression()), !dbg !13276
  br label %172, !dbg !13455

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13456
  %174 = and i32 %173, 256, !dbg !13456
  %175 = icmp eq i32 %174, 0, !dbg !13456
  br i1 %175, label %176, label %180, !dbg !13455

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #27, !dbg !13457
  %178 = sub i32 %177, %171, !dbg !13460
  %179 = icmp ugt i32 %178, 2, !dbg !13461
  br i1 %179, label %311, label %172, !dbg !13462, !llvm.loop !13463

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13465
  %182 = load i32, i32* %181, align 4, !dbg !13465
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !13468

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13469
  %185 = or i32 %184, 1, !dbg !13469
  br label %196, !dbg !13469

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13471
  %188 = or i32 %187, 4, !dbg !13471
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13471
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13471
  %190 = or i32 %189, 1, !dbg !13471
  br label %196, !dbg !13471

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13474
  %193 = and i32 %192, -2, !dbg !13474
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13474
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13474
  %195 = and i32 %194, -5, !dbg !13474
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13476
  %198 = load i32, i32* %181, align 4, !dbg !13477
  %199 = icmp eq i32 %198, 0, !dbg !13479
  %200 = tail call i32 @HAL_GetTick() #27, !dbg !13480
  call void @llvm.dbg.value(metadata i32 %200, metadata !13266, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.value(metadata i32 %200, metadata !13266, metadata !DIExpression()), !dbg !13276
  br i1 %199, label %209, label %201, !dbg !13481

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13482
  %203 = and i32 %202, 2, !dbg !13484
  %204 = icmp eq i32 %203, 0, !dbg !13484
  br i1 %204, label %205, label %217, !dbg !13485

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !13486
  %207 = sub i32 %206, %200, !dbg !13489
  %208 = icmp ugt i32 %207, 5000, !dbg !13490
  br i1 %208, label %311, label %201, !dbg !13491, !llvm.loop !13492

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13494
  %211 = and i32 %210, 2, !dbg !13494
  %212 = icmp eq i32 %211, 0, !dbg !13494
  br i1 %212, label %217, label %213, !dbg !13496

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #27, !dbg !13497
  %215 = sub i32 %214, %200, !dbg !13500
  %216 = icmp ugt i32 %215, 5000, !dbg !13501
  br i1 %216, label %311, label %209, !dbg !13502, !llvm.loop !13503

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !13505

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13506
  %220 = and i32 %219, -268435457, !dbg !13506
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13506
  br label %221, !dbg !13509

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13510
  %223 = load i32, i32* %222, align 4, !dbg !13510
  %224 = icmp eq i32 %223, 0, !dbg !13512
  br i1 %224, label %310, label %225, !dbg !13513

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13514
  %227 = and i32 %226, 12, !dbg !13514
  %228 = icmp eq i32 %227, 8, !dbg !13517
  br i1 %228, label %277, label %229, !dbg !13518

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !13519
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13522
  %231 = tail call i32 @HAL_GetTick() #27, !dbg !13522
  call void @llvm.dbg.value(metadata i32 %231, metadata !13266, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.value(metadata i32 %231, metadata !13266, metadata !DIExpression()), !dbg !13276
  br i1 %230, label %232, label %269, !dbg !13523

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13524
  %234 = and i32 %233, 33554432, !dbg !13524
  %235 = icmp eq i32 %234, 0, !dbg !13524
  br i1 %235, label %240, label %236, !dbg !13526

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #27, !dbg !13527
  %238 = sub i32 %237, %231, !dbg !13530
  %239 = icmp ugt i32 %238, 2, !dbg !13531
  br i1 %239, label %311, label %232, !dbg !13532, !llvm.loop !13533

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13535
  %242 = load i32, i32* %241, align 4, !dbg !13535
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13535
  %244 = load i32, i32* %243, align 4, !dbg !13535
  %245 = or i32 %244, %242, !dbg !13535
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13535
  %247 = load i32, i32* %246, align 4, !dbg !13535
  %248 = shl i32 %247, 6, !dbg !13535
  %249 = or i32 %245, %248, !dbg !13535
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13535
  %251 = load i32, i32* %250, align 4, !dbg !13535
  %252 = shl i32 %251, 15, !dbg !13535
  %253 = add i32 %252, -65536, !dbg !13535
  %254 = and i32 %253, -65536, !dbg !13535
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13535
  %256 = load i32, i32* %255, align 4, !dbg !13535
  %257 = shl i32 %256, 24, !dbg !13535
  %258 = or i32 %249, %257, !dbg !13535
  %259 = or i32 %258, %254, !dbg !13535
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13535
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13536
  %260 = tail call i32 @HAL_GetTick() #27, !dbg !13537
  call void @llvm.dbg.value(metadata i32 %260, metadata !13266, metadata !DIExpression()), !dbg !13276
  br label %261, !dbg !13538

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13539
  %263 = and i32 %262, 33554432, !dbg !13540
  %264 = icmp eq i32 %263, 0, !dbg !13540
  br i1 %264, label %265, label %310, !dbg !13538

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #27, !dbg !13541
  %267 = sub i32 %266, %260, !dbg !13544
  %268 = icmp ugt i32 %267, 2, !dbg !13545
  br i1 %268, label %311, label %261, !dbg !13546, !llvm.loop !13547

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13549
  %271 = and i32 %270, 33554432, !dbg !13549
  %272 = icmp eq i32 %271, 0, !dbg !13549
  br i1 %272, label %310, label %273, !dbg !13551

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #27, !dbg !13552
  %275 = sub i32 %274, %231, !dbg !13555
  %276 = icmp ugt i32 %275, 2, !dbg !13556
  br i1 %276, label %311, label %269, !dbg !13557, !llvm.loop !13558

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !13560
  br i1 %278, label %311, label %279, !dbg !13563

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13564
  call void @llvm.dbg.value(metadata i32 %280, metadata !13267, metadata !DIExpression()), !dbg !13276
  %281 = and i32 %280, 4194304, !dbg !13566
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13568
  %283 = load i32, i32* %282, align 4, !dbg !13568
  %284 = icmp eq i32 %281, %283, !dbg !13569
  br i1 %284, label %285, label %311, !dbg !13570

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !13571
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13572
  %288 = load i32, i32* %287, align 4, !dbg !13572
  %289 = icmp eq i32 %286, %288, !dbg !13573
  br i1 %289, label %290, label %311, !dbg !13574

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !13575
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13576
  %293 = load i32, i32* %292, align 4, !dbg !13576
  %294 = shl i32 %293, 6, !dbg !13577
  %295 = icmp eq i32 %291, %294, !dbg !13578
  br i1 %295, label %296, label %311, !dbg !13579

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !13580
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13581
  %299 = load i32, i32* %298, align 4, !dbg !13581
  %300 = shl i32 %299, 15, !dbg !13582
  %301 = add i32 %300, -65536, !dbg !13582
  %302 = and i32 %301, -65536, !dbg !13582
  %303 = icmp eq i32 %297, %302, !dbg !13583
  br i1 %303, label %304, label %311, !dbg !13584

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !13585
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13586
  %307 = load i32, i32* %306, align 4, !dbg !13586
  %308 = shl i32 %307, 24, !dbg !13587
  %309 = icmp eq i32 %305, %308, !dbg !13588
  br i1 %309, label %310, label %311, !dbg !13589

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !13590

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !13276
  ret i32 %312, !dbg !13591
}

; Function Attrs: optsize
declare !dbg !13592 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13594 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !13607, metadata !DIExpression()), !dbg !13610
  call void @llvm.dbg.value(metadata i32 %1, metadata !13608, metadata !DIExpression()), !dbg !13610
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !13611
  br i1 %3, label %115, label %4, !dbg !13613

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13614
  %6 = and i32 %5, 7, !dbg !13614
  %7 = icmp ult i32 %6, %1, !dbg !13616
  br i1 %7, label %8, label %13, !dbg !13617

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !13618
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !13618
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13620
  %11 = and i32 %10, 7, !dbg !13620
  %12 = icmp eq i32 %11, %1, !dbg !13622
  br i1 %12, label %13, label %115, !dbg !13623

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !13624
  %15 = load i32, i32* %14, align 4, !dbg !13624
  %16 = and i32 %15, 2, !dbg !13626
  %17 = icmp eq i32 %16, 0, !dbg !13627
  br i1 %17, label %39, label %18, !dbg !13628

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !13629
  %20 = icmp eq i32 %19, 0, !dbg !13632
  br i1 %20, label %25, label %21, !dbg !13633

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13634
  %23 = or i32 %22, 7168, !dbg !13634
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13634
  %24 = load i32, i32* %14, align 4, !dbg !13636
  br label %25, !dbg !13638

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !13636
  %27 = and i32 %26, 8, !dbg !13639
  %28 = icmp eq i32 %27, 0, !dbg !13640
  br i1 %28, label %32, label %29, !dbg !13641

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13642
  %31 = or i32 %30, 57344, !dbg !13642
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13642
  br label %32, !dbg !13644

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13645
  %34 = and i32 %33, -241, !dbg !13645
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !13645
  %36 = load i32, i32* %35, align 4, !dbg !13645
  %37 = or i32 %34, %36, !dbg !13645
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13645
  %38 = load i32, i32* %14, align 4, !dbg !13646
  br label %39, !dbg !13648

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !13646
  %41 = and i32 %40, 1, !dbg !13649
  %42 = icmp eq i32 %41, 0, !dbg !13650
  br i1 %42, label %73, label %43, !dbg !13651

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !13652
  %45 = load i32, i32* %44, align 4, !dbg !13652
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !13655

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13656
  %48 = and i32 %47, 131072, !dbg !13659
  %49 = icmp eq i32 %48, 0, !dbg !13659
  br i1 %49, label %115, label %58, !dbg !13660

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13661
  %52 = and i32 %51, 33554432, !dbg !13665
  %53 = icmp eq i32 %52, 0, !dbg !13665
  br i1 %53, label %115, label %58, !dbg !13666

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13667
  %56 = and i32 %55, 2, !dbg !13670
  %57 = icmp eq i32 %56, 0, !dbg !13670
  br i1 %57, label %115, label %58, !dbg !13671

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13672
  %60 = and i32 %59, -4, !dbg !13672
  %61 = or i32 %60, %45, !dbg !13672
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13672
  %62 = tail call i32 @HAL_GetTick() #27, !dbg !13673
  call void @llvm.dbg.value(metadata i32 %62, metadata !13609, metadata !DIExpression()), !dbg !13610
  br label %63, !dbg !13674

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13675
  %65 = and i32 %64, 12, !dbg !13675
  %66 = load i32, i32* %44, align 4, !dbg !13676
  %67 = shl i32 %66, 2, !dbg !13677
  %68 = icmp eq i32 %65, %67, !dbg !13678
  br i1 %68, label %73, label %69, !dbg !13674

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #27, !dbg !13679
  %71 = sub i32 %70, %62, !dbg !13682
  %72 = icmp ugt i32 %71, 5000, !dbg !13683
  br i1 %72, label %115, label %63, !dbg !13684, !llvm.loop !13685

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13687
  %75 = and i32 %74, 7, !dbg !13687
  %76 = icmp ugt i32 %75, %1, !dbg !13689
  br i1 %76, label %77, label %82, !dbg !13690

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !13691
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !13691
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13693
  %80 = and i32 %79, 7, !dbg !13693
  %81 = icmp eq i32 %80, %1, !dbg !13695
  br i1 %81, label %82, label %115, !dbg !13696

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !13697
  %84 = and i32 %83, 4, !dbg !13699
  %85 = icmp eq i32 %84, 0, !dbg !13700
  br i1 %85, label %93, label %86, !dbg !13701

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13702
  %88 = and i32 %87, -7169, !dbg !13702
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !13702
  %90 = load i32, i32* %89, align 4, !dbg !13702
  %91 = or i32 %88, %90, !dbg !13702
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13702
  %92 = load i32, i32* %14, align 4, !dbg !13704
  br label %93, !dbg !13706

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !13704
  %95 = and i32 %94, 8, !dbg !13707
  %96 = icmp eq i32 %95, 0, !dbg !13708
  br i1 %96, label %104, label %97, !dbg !13709

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13710
  %99 = and i32 %98, -57345, !dbg !13710
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !13710
  %101 = load i32, i32* %100, align 4, !dbg !13710
  %102 = shl i32 %101, 3, !dbg !13710
  %103 = or i32 %102, %99, !dbg !13710
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13710
  br label %104, !dbg !13712

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !13713
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13714
  %107 = lshr i32 %106, 4, !dbg !13715
  %108 = and i32 %107, 15, !dbg !13715
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !13716
  %110 = load i8, i8* %109, align 1, !dbg !13716
  %111 = zext i8 %110 to i32, !dbg !13716
  %112 = lshr i32 %105, %111, !dbg !13717
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !13718
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !13719
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #27, !dbg !13720
  br label %115, !dbg !13721

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !13610
  ret i32 %116, !dbg !13722
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !13723 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13725, metadata !DIExpression()), !dbg !13729
  call void @llvm.dbg.value(metadata i32 0, metadata !13726, metadata !DIExpression()), !dbg !13729
  call void @llvm.dbg.value(metadata i32 0, metadata !13727, metadata !DIExpression()), !dbg !13729
  call void @llvm.dbg.value(metadata i32 0, metadata !13728, metadata !DIExpression()), !dbg !13729
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13730
  %2 = and i32 %1, 12, !dbg !13731
  switch i32 %2, label %29 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !13732

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !13728, metadata !DIExpression()), !dbg !13729
  br label %29, !dbg !13733

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13736
  %6 = and i32 %5, 63, !dbg !13738
  call void @llvm.dbg.value(metadata i32 %6, metadata !13725, metadata !DIExpression()), !dbg !13729
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13739
  %8 = and i32 %7, 4194304, !dbg !13739
  %9 = icmp eq i32 %8, 0, !dbg !13741
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13742
  %11 = lshr i32 %10, 6, !dbg !13742
  %12 = and i32 %11, 511, !dbg !13742
  br i1 %9, label %16, label %13, !dbg !13743

13:                                               ; preds = %4
  %14 = mul nuw i32 %12, 8000000, !dbg !13744
  %15 = udiv i32 %14, %6, !dbg !13746
  call void @llvm.dbg.value(metadata i32 %15, metadata !13726, metadata !DIExpression()), !dbg !13729
  br label %22, !dbg !13747

16:                                               ; preds = %4
  %17 = zext i32 %12 to i64, !dbg !13748
  %18 = mul nuw nsw i64 %17, 16000000, !dbg !13750
  %19 = zext i32 %6 to i64, !dbg !13751
  %20 = udiv i64 %18, %19, !dbg !13752
  %21 = trunc i64 %20 to i32, !dbg !13753
  call void @llvm.dbg.value(metadata i32 %21, metadata !13726, metadata !DIExpression()), !dbg !13729
  br label %22

22:                                               ; preds = %16, %13
  %23 = phi i32 [ %15, %13 ], [ %21, %16 ], !dbg !13742
  call void @llvm.dbg.value(metadata i32 %23, metadata !13726, metadata !DIExpression()), !dbg !13729
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13754
  %25 = lshr i32 %24, 15, !dbg !13755
  %26 = and i32 %25, 6, !dbg !13755
  %27 = add nuw nsw i32 %26, 2, !dbg !13755
  call void @llvm.dbg.value(metadata i32 %27, metadata !13727, metadata !DIExpression()), !dbg !13729
  %28 = udiv i32 %23, %27, !dbg !13756
  call void @llvm.dbg.value(metadata i32 %28, metadata !13728, metadata !DIExpression()), !dbg !13729
  br label %29, !dbg !13757

29:                                               ; preds = %0, %22, %3
  %30 = phi i32 [ %28, %22 ], [ 8000000, %3 ], [ 16000000, %0 ], !dbg !13758
  call void @llvm.dbg.value(metadata i32 %30, metadata !13728, metadata !DIExpression()), !dbg !13729
  ret i32 %30, !dbg !13759
}

; Function Attrs: optsize
declare !dbg !13760 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13763 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13767, metadata !DIExpression()), !dbg !13787
  call void @llvm.dbg.value(metadata i32 %1, metadata !13768, metadata !DIExpression()), !dbg !13787
  call void @llvm.dbg.value(metadata i32 %2, metadata !13769, metadata !DIExpression()), !dbg !13787
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !13788
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #25, !dbg !13788
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !13770, metadata !DIExpression()), !dbg !13789
  %8 = icmp eq i32 %0, 0, !dbg !13790
  br i1 %8, label %9, label %23, !dbg !13791

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !13792
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !13792
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13780, metadata !DIExpression()), !dbg !13792
  store volatile i32 0, i32* %5, align 4, !dbg !13792
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13792
  %12 = or i32 %11, 1, !dbg !13792
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13792
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13792
  %14 = and i32 %13, 1, !dbg !13792
  store volatile i32 %14, i32* %5, align 4, !dbg !13792
  %15 = load volatile i32, i32* %5, align 4, !dbg !13792
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !13793
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !13794
  store i32 256, i32* %16, align 4, !dbg !13795
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !13796
  store i32 2, i32* %17, align 4, !dbg !13797
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !13798
  store i32 3, i32* %18, align 4, !dbg !13799
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !13800
  store i32 0, i32* %19, align 4, !dbg !13801
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !13802
  store i32 0, i32* %20, align 4, !dbg !13803
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !13804
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13805
  %22 = and i32 %21, -123731969, !dbg !13805
  br label %38, !dbg !13806

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !13807
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !13807
  call void @llvm.dbg.declare(metadata i32* %6, metadata !13784, metadata !DIExpression()), !dbg !13807
  store volatile i32 0, i32* %6, align 4, !dbg !13807
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13807
  %26 = or i32 %25, 4, !dbg !13807
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13807
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13807
  %28 = and i32 %27, 4, !dbg !13807
  store volatile i32 %28, i32* %6, align 4, !dbg !13807
  %29 = load volatile i32, i32* %6, align 4, !dbg !13807
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !13808
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !13809
  store i32 512, i32* %30, align 4, !dbg !13810
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !13811
  store i32 2, i32* %31, align 4, !dbg !13812
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !13813
  store i32 3, i32* %32, align 4, !dbg !13814
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !13815
  store i32 0, i32* %33, align 4, !dbg !13816
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !13817
  store i32 0, i32* %34, align 4, !dbg !13818
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !13819
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13820
  %36 = and i32 %35, 134217727, !dbg !13820
  %37 = shl i32 %2, 3, !dbg !13820
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !13821
  %42 = or i32 %41, %40, !dbg !13821
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13821
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #25, !dbg !13822
  ret void, !dbg !13822
}

; Function Attrs: optsize
declare !dbg !13823 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !13827 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13828
  ret void, !dbg !13829
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !13830 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13831
  ret void, !dbg !13832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #10 !dbg !13833 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !13834
  ret i32 %1, !dbg !13835
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #17 !dbg !13836 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !13837
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13838
  %3 = lshr i32 %2, 10, !dbg !13839
  %4 = and i32 %3, 7, !dbg !13839
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13840
  %6 = load i8, i8* %5, align 1, !dbg !13840
  %7 = zext i8 %6 to i32, !dbg !13840
  %8 = lshr i32 %1, %7, !dbg !13841
  ret i32 %8, !dbg !13842
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #17 !dbg !13843 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !13844
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13845
  %3 = lshr i32 %2, 13, !dbg !13846
  %4 = and i32 %3, 7, !dbg !13846
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13847
  %6 = load i8, i8* %5, align 1, !dbg !13847
  %7 = zext i8 %6 to i32, !dbg !13847
  %8 = lshr i32 %1, %7, !dbg !13848
  ret i32 %8, !dbg !13849
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !13850 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13854, metadata !DIExpression()), !dbg !13855
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13856
  store i32 15, i32* %2, align 4, !dbg !13857
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13858
  %4 = and i32 %3, 262144, !dbg !13860
  %5 = icmp eq i32 %4, 0, !dbg !13861
  br i1 %5, label %8, label %6, !dbg !13862

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13863
  store i32 327680, i32* %7, align 4, !dbg !13865
  br label %15, !dbg !13866

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13867
  %10 = and i32 %9, 65536, !dbg !13869
  %11 = icmp eq i32 %10, 0, !dbg !13870
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13871
  br i1 %11, label %14, label %13, !dbg !13872

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !13873
  br label %15, !dbg !13875

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13876
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13878
  %17 = and i32 %16, 1, !dbg !13880
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13881
  store i32 %17, i32* %18, align 4, !dbg !13883
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13884
  %20 = lshr i32 %19, 3, !dbg !13885
  %21 = and i32 %20, 31, !dbg !13885
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13886
  store i32 %21, i32* %22, align 4, !dbg !13887
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13888
  %24 = and i32 %23, 4, !dbg !13890
  %25 = icmp eq i32 %24, 0, !dbg !13891
  br i1 %25, label %28, label %26, !dbg !13892

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13893
  store i32 5, i32* %27, align 4, !dbg !13895
  br label %35, !dbg !13896

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13897
  %30 = and i32 %29, 1, !dbg !13899
  %31 = icmp eq i32 %30, 0, !dbg !13900
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13901
  br i1 %31, label %34, label %33, !dbg !13902

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !13903
  br label %35, !dbg !13905

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !13906
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13908
  %37 = and i32 %36, 1, !dbg !13910
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13911
  store i32 %37, i32* %38, align 4, !dbg !13913
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13914
  %40 = and i32 %39, 16777216, !dbg !13916
  %41 = icmp eq i32 %40, 0, !dbg !13917
  %42 = select i1 %41, i32 1, i32 2, !dbg !13918
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13919
  store i32 %42, i32* %43, align 4, !dbg !13921
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13922
  %45 = and i32 %44, 4194304, !dbg !13923
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13924
  store i32 %45, i32* %46, align 4, !dbg !13925
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13926
  %48 = and i32 %47, 63, !dbg !13927
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13928
  store i32 %48, i32* %49, align 4, !dbg !13929
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13930
  %51 = lshr i32 %50, 6, !dbg !13931
  %52 = and i32 %51, 511, !dbg !13931
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13932
  store i32 %52, i32* %53, align 4, !dbg !13933
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13934
  %55 = shl i32 %54, 1, !dbg !13935
  %56 = and i32 %55, 393216, !dbg !13935
  %57 = add nuw nsw i32 %56, 131072, !dbg !13935
  %58 = lshr exact i32 %57, 16, !dbg !13936
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13937
  store i32 %58, i32* %59, align 4, !dbg !13938
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13939
  %61 = lshr i32 %60, 24, !dbg !13940
  %62 = and i32 %61, 15, !dbg !13940
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13941
  store i32 %62, i32* %63, align 4, !dbg !13942
  ret void, !dbg !13943
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #17 !dbg !13944 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !13948, metadata !DIExpression()), !dbg !13950
  call void @llvm.dbg.value(metadata i32* %1, metadata !13949, metadata !DIExpression()), !dbg !13950
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !13951
  store i32 15, i32* %3, align 4, !dbg !13952
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13953
  %5 = and i32 %4, 3, !dbg !13954
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !13955
  store i32 %5, i32* %6, align 4, !dbg !13956
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13957
  %8 = and i32 %7, 240, !dbg !13958
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !13959
  store i32 %8, i32* %9, align 4, !dbg !13960
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13961
  %11 = and i32 %10, 7168, !dbg !13962
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !13963
  store i32 %11, i32* %12, align 4, !dbg !13964
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13965
  %14 = lshr i32 %13, 3, !dbg !13966
  %15 = and i32 %14, 7168, !dbg !13966
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !13967
  store i32 %15, i32* %16, align 4, !dbg !13968
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13969
  %18 = and i32 %17, 7, !dbg !13970
  store i32 %18, i32* %1, align 4, !dbg !13971
  ret void, !dbg !13972
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !13973 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13974
  %2 = and i32 %1, 128, !dbg !13974
  %3 = icmp eq i32 %2, 0, !dbg !13974
  br i1 %3, label %5, label %4, !dbg !13976

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !13977
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !13979
  br label %5, !dbg !13980

5:                                                ; preds = %4, %0
  ret void, !dbg !13981
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !13982 {
  ret void, !dbg !13983
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !13984 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13987, metadata !DIExpression()), !dbg !13988
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !13989
  ret void, !dbg !13990
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !13991 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13994, metadata !DIExpression()), !dbg !13996
  call void @llvm.dbg.value(metadata i32 1000, metadata !13995, metadata !DIExpression()), !dbg !13996
  %2 = udiv i32 %0, 1000, !dbg !13997
  %3 = add nsw i32 %2, -1, !dbg !13998
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13999
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !14000
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14001
  ret void, !dbg !14002
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #21 !dbg !14003 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !14005, metadata !DIExpression()), !dbg !14007
  %3 = bitcast i32* %2 to i8*, !dbg !14008
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !14008
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14006, metadata !DIExpression()), !dbg !14009
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14010
  store volatile i32 %4, i32* %2, align 4, !dbg !14009
  %5 = load volatile i32, i32* %2, align 4, !dbg !14011
  %6 = icmp eq i32 %0, -1, !dbg !14012
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()), !dbg !14007
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !14007
  call void @llvm.dbg.value(metadata i32 %8, metadata !14005, metadata !DIExpression()), !dbg !14007
  br label %9, !dbg !14014

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !14005, metadata !DIExpression()), !dbg !14007
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14015
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()), !dbg !14007
  %12 = shl i32 %11, 15, !dbg !14007
  %13 = ashr i32 %12, 31, !dbg !14007
  %14 = add i32 %13, %10, !dbg !14007
  call void @llvm.dbg.value(metadata i32 %14, metadata !14005, metadata !DIExpression()), !dbg !14007
  %15 = icmp eq i32 %14, 0, !dbg !14014
  br i1 %15, label %16, label %9, !dbg !14014

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !14018
  ret void, !dbg !14018
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #9 !dbg !14019 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14021, metadata !DIExpression()), !dbg !14022
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !14023
  ret void, !dbg !14024
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !14025 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14030, metadata !DIExpression()), !dbg !14035
  call void @llvm.dbg.value(metadata i32 0, metadata !14033, metadata !DIExpression()), !dbg !14035
  call void @llvm.dbg.value(metadata i32 0, metadata !14034, metadata !DIExpression()), !dbg !14035
  %2 = icmp eq i32 %0, 0, !dbg !14036
  br i1 %2, label %50, label %3, !dbg !14038

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !14039
  %5 = icmp eq i32 %4, 49152, !dbg !14042
  br i1 %5, label %6, label %15, !dbg !14043

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()), !dbg !14035
  %7 = add i32 %0, -64000001, !dbg !14044
  %8 = icmp ult i32 %7, 26000000, !dbg !14044
  br i1 %8, label %15, label %9, !dbg !14044

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !14047
  %11 = select i1 %10, i32 0, i32 3, !dbg !14049
  call void @llvm.dbg.value(metadata i32 %11, metadata !14033, metadata !DIExpression()), !dbg !14035
  %12 = add i32 %0, -30000001, !dbg !14050
  %13 = icmp ult i32 %12, 60000000, !dbg !14050
  %14 = select i1 %13, i32 1, i32 %11, !dbg !14050
  call void @llvm.dbg.value(metadata i32 %14, metadata !14033, metadata !DIExpression()), !dbg !14035
  br label %15, !dbg !14050

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !14035
  call void @llvm.dbg.value(metadata i32 %16, metadata !14033, metadata !DIExpression()), !dbg !14035
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !14053
  %18 = icmp eq i32 %17, 32768, !dbg !14055
  br i1 %18, label %19, label %27, !dbg !14056

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !14057
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !14060
  br i1 %22, label %27, label %23, !dbg !14060

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !14061
  %25 = and i1 %24, %21, !dbg !14064
  %26 = select i1 %25, i32 1, i32 %16, !dbg !14064
  call void @llvm.dbg.value(metadata i32 %26, metadata !14033, metadata !DIExpression()), !dbg !14035
  br label %27, !dbg !14064

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !14065
  call void @llvm.dbg.value(metadata i32 %28, metadata !14033, metadata !DIExpression()), !dbg !14035
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !14066
  %30 = icmp eq i32 %29, 16384, !dbg !14068
  br i1 %30, label %31, label %39, !dbg !14069

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !14070
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !14073
  br i1 %34, label %39, label %35, !dbg !14073

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !14074
  %37 = select i1 %36, i1 %33, i1 false, !dbg !14077
  %38 = select i1 %37, i32 1, i32 %28, !dbg !14077
  call void @llvm.dbg.value(metadata i32 %38, metadata !14033, metadata !DIExpression()), !dbg !14035
  br label %39, !dbg !14077

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !14065
  call void @llvm.dbg.value(metadata i32 %40, metadata !14033, metadata !DIExpression()), !dbg !14035
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #26, !dbg !14078
  call void @llvm.dbg.value(metadata i32 2, metadata !14031, metadata !DIExpression()), !dbg !14035
  br label %41, !dbg !14079

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !14065
  call void @llvm.dbg.value(metadata i32 %42, metadata !14031, metadata !DIExpression()), !dbg !14035
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !14080
  call void @llvm.dbg.value(metadata i32 %43, metadata !14032, metadata !DIExpression()), !dbg !14035
  %44 = add nsw i32 %42, -1, !dbg !14082
  call void @llvm.dbg.value(metadata i32 %44, metadata !14031, metadata !DIExpression()), !dbg !14035
  %45 = icmp ne i32 %43, %40, !dbg !14083
  %46 = icmp ne i32 %44, 0, !dbg !14084
  %47 = select i1 %45, i1 %46, i1 false, !dbg !14084
  br i1 %47, label %41, label %48, !dbg !14085, !llvm.loop !14086

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !14088
  call void @llvm.dbg.value(metadata i32 %51, metadata !14034, metadata !DIExpression()), !dbg !14035
  ret i32 %51, !dbg !14089
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #17 !dbg !14090 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14092
  %2 = and i32 %1, 49152, !dbg !14092
  ret i32 %2, !dbg !14093
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !14094 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14096, metadata !DIExpression()), !dbg !14097
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14098
  %3 = and i32 %2, -8, !dbg !14098
  %4 = or i32 %3, %0, !dbg !14098
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14098
  ret void, !dbg !14099
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #17 !dbg !14100 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14101
  %2 = and i32 %1, 7, !dbg !14101
  ret i32 %2, !dbg !14102
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !14103 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !14121, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14122, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata i32 0, metadata !14123, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata i32 0, metadata !14124, metadata !DIExpression()), !dbg !14125
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !14126
  %4 = icmp eq i32 %3, 0, !dbg !14128
  br i1 %4, label %5, label %21, !dbg !14129

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !14130
  call void @llvm.dbg.value(metadata i32 %6, metadata !14124, metadata !DIExpression()), !dbg !14125
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.209() #26, !dbg !14132
  %8 = icmp eq i32 %7, 1, !dbg !14134
  br i1 %8, label %13, label %9, !dbg !14135

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.210() #26, !dbg !14136
  br label %10, !dbg !14138

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.209() #26, !dbg !14139
  %12 = icmp eq i32 %11, 1, !dbg !14140
  br i1 %12, label %13, label %10, !dbg !14138, !llvm.loop !14141

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !14143
  %15 = load i32, i32* %14, align 4, !dbg !14143
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !14144
  %17 = load i32, i32* %16, align 4, !dbg !14144
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !14145
  %19 = load i32, i32* %18, align 4, !dbg !14145
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.211(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !14146
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !14147
  call void @llvm.dbg.value(metadata i32 %20, metadata !14123, metadata !DIExpression()), !dbg !14125
  br label %21, !dbg !14148

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !14149
  call void @llvm.dbg.value(metadata i32 %22, metadata !14123, metadata !DIExpression()), !dbg !14125
  ret i32 %22, !dbg !14150
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #17 !dbg !14151 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14155, metadata !DIExpression()), !dbg !14156
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.213() #26, !dbg !14157
  %2 = icmp ne i32 %1, 0, !dbg !14159
  call void @llvm.dbg.value(metadata i1 %2, metadata !14155, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14156
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !14160
  %4 = icmp ne i32 %3, 0, !dbg !14162
  %5 = select i1 %4, i1 true, i1 %2, !dbg !14163
  %6 = zext i1 %5 to i32, !dbg !14163
  call void @llvm.dbg.value(metadata i32 %6, metadata !14155, metadata !DIExpression()), !dbg !14156
  ret i32 %6, !dbg !14164
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #10 !dbg !14165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14169, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14170, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata i32 0, metadata !14171, metadata !DIExpression()), !dbg !14172
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14173
  %4 = load i32, i32* %3, align 4, !dbg !14173
  %5 = and i32 %4, 63, !dbg !14174
  %6 = udiv i32 %0, %5, !dbg !14175
  call void @llvm.dbg.value(metadata i32 %6, metadata !14171, metadata !DIExpression()), !dbg !14172
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14176
  %8 = load i32, i32* %7, align 4, !dbg !14176
  %9 = and i32 %8, 511, !dbg !14177
  %10 = mul i32 %9, %6, !dbg !14178
  call void @llvm.dbg.value(metadata i32 %10, metadata !14171, metadata !DIExpression()), !dbg !14172
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14179
  %12 = load i32, i32* %11, align 4, !dbg !14179
  %13 = lshr i32 %12, 15, !dbg !14180
  %14 = and i32 %13, 131070, !dbg !14180
  %15 = add nuw nsw i32 %14, 2, !dbg !14180
  %16 = udiv i32 %10, %15, !dbg !14181
  call void @llvm.dbg.value(metadata i32 %16, metadata !14171, metadata !DIExpression()), !dbg !14172
  ret i32 %16, !dbg !14182
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.209() unnamed_addr #17 !dbg !14183 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14184
  %2 = lshr i32 %1, 1, !dbg !14185
  %3 = and i32 %2, 1, !dbg !14185
  ret i32 %3, !dbg !14186
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.210() unnamed_addr #15 !dbg !14187 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14188
  %2 = or i32 %1, 1, !dbg !14188
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14188
  ret void, !dbg !14189
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.211(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !14190 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14192, metadata !DIExpression()), !dbg !14196
  call void @llvm.dbg.value(metadata i32 %1, metadata !14193, metadata !DIExpression()), !dbg !14196
  call void @llvm.dbg.value(metadata i32 %2, metadata !14194, metadata !DIExpression()), !dbg !14196
  call void @llvm.dbg.value(metadata i32 %3, metadata !14195, metadata !DIExpression()), !dbg !14196
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14197
  %6 = and i32 %5, -4227072, !dbg !14197
  %7 = or i32 %1, %0, !dbg !14197
  %8 = shl i32 %2, 6, !dbg !14197
  %9 = or i32 %7, %8, !dbg !14197
  %10 = or i32 %9, %6, !dbg !14197
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14197
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14198
  %12 = and i32 %11, -196609, !dbg !14198
  %13 = or i32 %12, %3, !dbg !14198
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14198
  ret void, !dbg !14199
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !14200 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14204, metadata !DIExpression()), !dbg !14208
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14205, metadata !DIExpression()), !dbg !14208
  call void @llvm.dbg.value(metadata i32 0, metadata !14206, metadata !DIExpression()), !dbg !14208
  call void @llvm.dbg.value(metadata i32 0, metadata !14207, metadata !DIExpression()), !dbg !14208
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14209
  %4 = load i32, i32* %3, align 4, !dbg !14209
  %5 = lshr i32 %4, 4, !dbg !14209
  %6 = and i32 %5, 15, !dbg !14209
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !14209
  %8 = load i8, i8* %7, align 1, !dbg !14209
  %9 = zext i8 %8 to i32, !dbg !14209
  %10 = lshr i32 %0, %9, !dbg !14209
  call void @llvm.dbg.value(metadata i32 %10, metadata !14207, metadata !DIExpression()), !dbg !14208
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !14210
  %12 = icmp ult i32 %11, %10, !dbg !14212
  br i1 %12, label %13, label %16, !dbg !14213

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !14214
  call void @llvm.dbg.value(metadata i32 %14, metadata !14206, metadata !DIExpression()), !dbg !14208
  %15 = icmp eq i32 %14, 0, !dbg !14216
  br i1 %15, label %16, label %30, !dbg !14218

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.212() #26, !dbg !14219
  br label %17, !dbg !14221

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.213() #26, !dbg !14222
  %19 = icmp eq i32 %18, 1, !dbg !14223
  br i1 %19, label %20, label %17, !dbg !14221, !llvm.loop !14224

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !14226
  tail call fastcc void @LL_RCC_SetAHBPrescaler.214(i32 noundef %21) #26, !dbg !14227
  tail call fastcc void @LL_RCC_SetSysClkSource.215() #26, !dbg !14228
  br label %22, !dbg !14229

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.216() #26, !dbg !14230
  %24 = icmp eq i32 %23, 8, !dbg !14231
  br i1 %24, label %25, label %22, !dbg !14229, !llvm.loop !14232

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14234
  %27 = load i32, i32* %26, align 4, !dbg !14234
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.217(i32 noundef %27) #26, !dbg !14235
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14236
  %29 = load i32, i32* %28, align 4, !dbg !14236
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.218(i32 noundef %29) #26, !dbg !14237
  br label %30, !dbg !14238

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !14239
  %33 = icmp ugt i32 %32, %10, !dbg !14241
  br i1 %33, label %34, label %36, !dbg !14242

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !14243
  call void @llvm.dbg.value(metadata i32 %35, metadata !14206, metadata !DIExpression()), !dbg !14208
  br label %36, !dbg !14245

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !14208
  call void @llvm.dbg.value(metadata i32 %37, metadata !14206, metadata !DIExpression()), !dbg !14208
  %38 = icmp eq i32 %37, 0, !dbg !14246
  br i1 %38, label %39, label %40, !dbg !14248

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !14249
  br label %40, !dbg !14251

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !14252
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.212() unnamed_addr #15 !dbg !14253 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14254
  %2 = or i32 %1, 16777216, !dbg !14254
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14254
  ret void, !dbg !14255
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.213() unnamed_addr #17 !dbg !14256 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14257
  %2 = lshr i32 %1, 25, !dbg !14258
  %3 = and i32 %2, 1, !dbg !14258
  ret i32 %3, !dbg !14259
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.214(i32 noundef %0) unnamed_addr #15 !dbg !14260 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14262, metadata !DIExpression()), !dbg !14263
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14264
  %3 = and i32 %2, -241, !dbg !14264
  %4 = or i32 %3, %0, !dbg !14264
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14264
  ret void, !dbg !14265
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.215() unnamed_addr #15 !dbg !14266 {
  call void @llvm.dbg.value(metadata i32 2, metadata !14268, metadata !DIExpression()), !dbg !14269
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14270
  %2 = and i32 %1, -4, !dbg !14270
  %3 = or i32 %2, 2, !dbg !14270
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14270
  ret void, !dbg !14271
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.216() unnamed_addr #17 !dbg !14272 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14273
  %2 = and i32 %1, 12, !dbg !14273
  ret i32 %2, !dbg !14274
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.217(i32 noundef %0) unnamed_addr #15 !dbg !14275 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14277, metadata !DIExpression()), !dbg !14278
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14279
  %3 = and i32 %2, -7169, !dbg !14279
  %4 = or i32 %3, %0, !dbg !14279
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14279
  ret void, !dbg !14280
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.218(i32 noundef %0) unnamed_addr #15 !dbg !14281 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14283, metadata !DIExpression()), !dbg !14284
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14285
  %3 = and i32 %2, -57345, !dbg !14285
  %4 = or i32 %3, %0, !dbg !14285
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14285
  ret void, !dbg !14286
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #17 !dbg !14287 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14288
  %2 = lshr i32 %1, 27, !dbg !14289
  %3 = and i32 %2, 1, !dbg !14289
  ret i32 %3, !dbg !14290
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !14291 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14295, metadata !DIExpression()), !dbg !14301
  call void @llvm.dbg.value(metadata i32 %1, metadata !14296, metadata !DIExpression()), !dbg !14301
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !14297, metadata !DIExpression()), !dbg !14301
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !14298, metadata !DIExpression()), !dbg !14301
  call void @llvm.dbg.value(metadata i32 0, metadata !14299, metadata !DIExpression()), !dbg !14301
  call void @llvm.dbg.value(metadata i32 0, metadata !14300, metadata !DIExpression()), !dbg !14301
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !14302
  %6 = icmp eq i32 %5, 0, !dbg !14304
  br i1 %6, label %7, label %27, !dbg !14305

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !14306
  call void @llvm.dbg.value(metadata i32 %8, metadata !14300, metadata !DIExpression()), !dbg !14301
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !14308
  %10 = icmp eq i32 %9, 1, !dbg !14310
  br i1 %10, label %19, label %11, !dbg !14311

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !14312
  br i1 %12, label %13, label %14, !dbg !14315

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !14316
  br label %15, !dbg !14318

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !14319
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !14321
  br label %16, !dbg !14322

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !14323
  %18 = icmp eq i32 %17, 1, !dbg !14324
  br i1 %18, label %19, label %16, !dbg !14322, !llvm.loop !14325

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !14327
  %21 = load i32, i32* %20, align 4, !dbg !14327
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !14328
  %23 = load i32, i32* %22, align 4, !dbg !14328
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !14329
  %25 = load i32, i32* %24, align 4, !dbg !14329
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.211(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !14330
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !14331
  call void @llvm.dbg.value(metadata i32 %26, metadata !14299, metadata !DIExpression()), !dbg !14301
  br label %27, !dbg !14332

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !14333
  call void @llvm.dbg.value(metadata i32 %28, metadata !14299, metadata !DIExpression()), !dbg !14301
  ret i32 %28, !dbg !14334
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #17 !dbg !14335 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14336
  %2 = lshr i32 %1, 17, !dbg !14337
  %3 = and i32 %2, 1, !dbg !14337
  ret i32 %3, !dbg !14338
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !14339 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14340
  %2 = or i32 %1, 262144, !dbg !14340
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14340
  ret void, !dbg !14341
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !14342 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14343
  %2 = and i32 %1, -262145, !dbg !14343
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14343
  ret void, !dbg !14344
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !14345 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14346
  %2 = or i32 %1, 65536, !dbg !14346
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14346
  ret void, !dbg !14347
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #23 !dbg !14348 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14351, metadata !DIExpression()), !dbg !14367
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()), !dbg !14367
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !14367
  ret void, !dbg !14368
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !14369 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14373, metadata !DIExpression()), !dbg !14375
  %2 = icmp eq i8* %0, null, !dbg !14376
  br i1 %2, label %29, label %3, !dbg !14378

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !14379
  %5 = icmp eq i8 %4, 0, !dbg !14380
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !14381
  br i1 %6, label %29, label %8, !dbg !14381

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14374, metadata !DIExpression()), !dbg !14375
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !14382

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !14374, metadata !DIExpression()), !dbg !14375
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !14384
  br i1 %10, label %11, label %15, !dbg !14389

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !14390
  %13 = load i8*, i8** %12, align 4, !dbg !14390
  %14 = icmp eq i8* %13, %0, !dbg !14391
  br i1 %14, label %29, label %15, !dbg !14392

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !14393
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !14374, metadata !DIExpression()), !dbg !14375
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14394
  br i1 %17, label %7, label %8, !dbg !14395, !llvm.loop !14396

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !14374, metadata !DIExpression()), !dbg !14375
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !14398
  br i1 %20, label %21, label %26, !dbg !14402

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !14403
  %23 = load i8*, i8** %22, align 4, !dbg !14403
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !14404
  %25 = icmp eq i32 %24, 0, !dbg !14405
  br i1 %25, label %29, label %26, !dbg !14406

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !14407
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !14374, metadata !DIExpression()), !dbg !14375
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14408
  br i1 %28, label %29, label %18, !dbg !14382, !llvm.loop !14409

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !14375
  ret %struct.device* %30, !dbg !14411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !14412 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14416, metadata !DIExpression()), !dbg !14417
  %2 = icmp eq %struct.device* %0, null, !dbg !14418
  br i1 %2, label %14, label %3, !dbg !14420

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !14421
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !14421
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14422
  %7 = load i8, i8* %6, align 1, !dbg !14422
  %8 = and i8 %7, 1, !dbg !14422
  %9 = icmp eq i8 %8, 0, !dbg !14422
  br i1 %9, label %14, label %10, !dbg !14423

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !14424
  %12 = load i8, i8* %11, align 1, !dbg !14424
  %13 = icmp eq i8 %12, 0, !dbg !14425
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !14417
  ret i1 %15, !dbg !14426
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14427 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !14432, metadata !DIExpression()), !dbg !14433
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !14434
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !14435
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14436 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14444, metadata !DIExpression()), !dbg !14449
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14445, metadata !DIExpression()), !dbg !14449
  call void @llvm.dbg.value(metadata i8* %2, metadata !14446, metadata !DIExpression()), !dbg !14449
  %5 = bitcast i32* %4 to i8*, !dbg !14450
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14450
  call void @llvm.dbg.value(metadata i32 0, metadata !14447, metadata !DIExpression()), !dbg !14449
  store i32 0, i32* %4, align 4, !dbg !14451
  call void @llvm.dbg.value(metadata i32* %4, metadata !14447, metadata !DIExpression(DW_OP_deref)), !dbg !14449
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !14452
  call void @llvm.dbg.value(metadata i16* %6, metadata !14448, metadata !DIExpression()), !dbg !14449
  %7 = load i32, i32* %4, align 4, !dbg !14453
  call void @llvm.dbg.value(metadata i32 %7, metadata !14447, metadata !DIExpression()), !dbg !14449
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !14454
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14455
  ret i32 %8, !dbg !14456
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !14457 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14461, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata i32* %1, metadata !14462, metadata !DIExpression()), !dbg !14467
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14468
  %4 = load i16*, i16** %3, align 4, !dbg !14468
  call void @llvm.dbg.value(metadata i16* %4, metadata !14463, metadata !DIExpression()), !dbg !14467
  %5 = icmp eq i16* %4, null, !dbg !14469
  br i1 %5, label %14, label %6, !dbg !14470

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !14471
  call void @llvm.dbg.value(metadata i32 %7, metadata !14464, metadata !DIExpression()), !dbg !14471
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !14472
  %9 = load i16, i16* %8, align 2, !dbg !14472
  %10 = add i16 %9, -32767, !dbg !14473
  %11 = icmp ult i16 %10, 2, !dbg !14473
  %12 = add i32 %7, 1, !dbg !14474
  call void @llvm.dbg.value(metadata i32 %12, metadata !14464, metadata !DIExpression()), !dbg !14471
  br i1 %11, label %13, label %6, !dbg !14473, !llvm.loop !14476

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !14479
  br label %14, !dbg !14480

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !14481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !14482 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !14486, metadata !DIExpression()), !dbg !14497
  call void @llvm.dbg.value(metadata i32 %1, metadata !14487, metadata !DIExpression()), !dbg !14497
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !14488, metadata !DIExpression()), !dbg !14497
  call void @llvm.dbg.value(metadata i8* %3, metadata !14489, metadata !DIExpression()), !dbg !14497
  call void @llvm.dbg.value(metadata i32 0, metadata !14490, metadata !DIExpression()), !dbg !14498
  %5 = icmp eq i32 %1, 0, !dbg !14499
  br i1 %5, label %16, label %8, !dbg !14500

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !14490, metadata !DIExpression()), !dbg !14498
  %7 = icmp eq i32 %15, %1, !dbg !14499
  br i1 %7, label %16, label %8, !dbg !14500, !llvm.loop !14501

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !14490, metadata !DIExpression()), !dbg !14498
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !14503
  %11 = load i16, i16* %10, align 2, !dbg !14503
  call void @llvm.dbg.value(metadata i16 %11, metadata !14492, metadata !DIExpression()), !dbg !14504
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !14505
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !14495, metadata !DIExpression()), !dbg !14504
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !14506
  call void @llvm.dbg.value(metadata i32 %13, metadata !14496, metadata !DIExpression()), !dbg !14504
  %14 = icmp slt i32 %13, 0, !dbg !14507
  %15 = add nuw i32 %9, 1, !dbg !14509
  call void @llvm.dbg.value(metadata i32 %15, metadata !14490, metadata !DIExpression()), !dbg !14498
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !14510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #3 !dbg !14511 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14515, metadata !DIExpression()), !dbg !14518
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !14516, metadata !DIExpression()), !dbg !14518
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !14517, metadata !DIExpression()), !dbg !14518
  %2 = sext i16 %0 to i32, !dbg !14519
  %3 = icmp slt i16 %0, 1, !dbg !14521
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !14522
  %6 = add nsw i32 %2, -1, !dbg !14522
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !14522
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !14522
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !14516, metadata !DIExpression()), !dbg !14518
  ret %struct.device* %8, !dbg !14523
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14524 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14526, metadata !DIExpression()), !dbg !14531
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14527, metadata !DIExpression()), !dbg !14531
  call void @llvm.dbg.value(metadata i8* %2, metadata !14528, metadata !DIExpression()), !dbg !14531
  %5 = bitcast i32* %4 to i8*, !dbg !14532
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14532
  call void @llvm.dbg.value(metadata i32 0, metadata !14529, metadata !DIExpression()), !dbg !14531
  store i32 0, i32* %4, align 4, !dbg !14533
  call void @llvm.dbg.value(metadata i32* %4, metadata !14529, metadata !DIExpression(DW_OP_deref)), !dbg !14531
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !14534
  call void @llvm.dbg.value(metadata i16* %6, metadata !14530, metadata !DIExpression()), !dbg !14531
  %7 = load i32, i32* %4, align 4, !dbg !14535
  call void @llvm.dbg.value(metadata i32 %7, metadata !14529, metadata !DIExpression()), !dbg !14531
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !14536
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14537
  ret i32 %8, !dbg !14538
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !14539 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14541, metadata !DIExpression()), !dbg !14546
  call void @llvm.dbg.value(metadata i32* %1, metadata !14542, metadata !DIExpression()), !dbg !14546
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14547
  %4 = load i16*, i16** %3, align 4, !dbg !14547
  call void @llvm.dbg.value(metadata i16* %4, metadata !14543, metadata !DIExpression()), !dbg !14546
  call void @llvm.dbg.value(metadata i32 0, metadata !14544, metadata !DIExpression()), !dbg !14546
  call void @llvm.dbg.value(metadata i32 0, metadata !14545, metadata !DIExpression()), !dbg !14546
  %5 = icmp eq i16* %4, null, !dbg !14548
  br i1 %5, label %22, label %6, !dbg !14550

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !14544, metadata !DIExpression()), !dbg !14546
  call void @llvm.dbg.value(metadata i16* %8, metadata !14543, metadata !DIExpression()), !dbg !14546
  %9 = load i16, i16* %8, align 2, !dbg !14551
  %10 = icmp eq i16 %9, -32768, !dbg !14555
  call void @llvm.dbg.value(metadata i32 undef, metadata !14544, metadata !DIExpression()), !dbg !14546
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !14556
  call void @llvm.dbg.value(metadata i16* %11, metadata !14543, metadata !DIExpression()), !dbg !14546
  %12 = zext i1 %10 to i32, !dbg !14557
  %13 = add i32 %7, %12, !dbg !14557
  call void @llvm.dbg.value(metadata i32 %13, metadata !14544, metadata !DIExpression()), !dbg !14546
  %14 = icmp eq i32 %13, 2, !dbg !14558
  br i1 %14, label %15, label %6, !dbg !14559

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !14546
  call void @llvm.dbg.value(metadata i32 %16, metadata !14545, metadata !DIExpression()), !dbg !14546
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !14560
  %18 = load i16, i16* %17, align 2, !dbg !14560
  %19 = icmp eq i16 %18, 32767, !dbg !14561
  %20 = add i32 %16, 1, !dbg !14562
  call void @llvm.dbg.value(metadata i32 %20, metadata !14545, metadata !DIExpression()), !dbg !14546
  br i1 %19, label %21, label %15, !dbg !14564, !llvm.loop !14565

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !14567
  br label %22, !dbg !14568

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !14569
  call void @llvm.dbg.value(metadata i16* %23, metadata !14543, metadata !DIExpression()), !dbg !14546
  ret i16* %23, !dbg !14570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !14571 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14574
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !14575
  ret i32* %2, !dbg !14576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #3 !dbg !14577 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14725, metadata !DIExpression()), !dbg !14728
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !14726, metadata !DIExpression()), !dbg !14728
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14727, metadata !DIExpression()), !dbg !14728
  ret void, !dbg !14729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !14730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14734, metadata !DIExpression()), !dbg !14736
  call void @llvm.dbg.value(metadata i32 %1, metadata !14735, metadata !DIExpression()), !dbg !14736
  ret void, !dbg !14737
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !14738 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14742, metadata !DIExpression()), !dbg !14744
  call void @llvm.dbg.value(metadata i32 %1, metadata !14743, metadata !DIExpression()), !dbg !14744
  ret void, !dbg !14745
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !14746 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14750, metadata !DIExpression()), !dbg !14752
  call void @llvm.dbg.value(metadata i8* %1, metadata !14751, metadata !DIExpression()), !dbg !14752
  ret i32 -134, !dbg !14753
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !14754 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14758, metadata !DIExpression()), !dbg !14760
  call void @llvm.dbg.value(metadata i8* %1, metadata !14759, metadata !DIExpression()), !dbg !14760
  ret i32 -134, !dbg !14761
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !14762 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14765, metadata !DIExpression()), !dbg !14766
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14767, !srcloc !14773
  call void @llvm.dbg.value(metadata i32 undef, metadata !14770, metadata !DIExpression()) #25, !dbg !14774
  call void @llvm.dbg.value(metadata i32 undef, metadata !14771, metadata !DIExpression()) #25, !dbg !14774
  br label %3, !dbg !14775

3:                                                ; preds = %3, %1
  br label %3, !dbg !14776, !llvm.loop !14779
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14782 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14786, metadata !DIExpression()), !dbg !14788
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14787, metadata !DIExpression()), !dbg !14788
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.225, i32 0, i32 0), i32 noundef 69) #27, !dbg !14789
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !14794
  unreachable, !dbg !14794
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !14795 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14797, metadata !DIExpression()), !dbg !14798
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !14799
  unreachable, !dbg !14799
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14800 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14802, metadata !DIExpression()), !dbg !14806
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14803, metadata !DIExpression()), !dbg !14806
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14807, !srcloc !14773
  call void @llvm.dbg.value(metadata i32 undef, metadata !14770, metadata !DIExpression()) #25, !dbg !14809
  call void @llvm.dbg.value(metadata i32 undef, metadata !14771, metadata !DIExpression()) #25, !dbg !14809
  call void @llvm.dbg.value(metadata i32 undef, metadata !14804, metadata !DIExpression()), !dbg !14806
  %4 = tail call fastcc %struct.k_thread* @k_current_get.228() #28, !dbg !14810
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14805, metadata !DIExpression()), !dbg !14806
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #26, !dbg !14811
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.229, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #27, !dbg !14811
  %6 = icmp eq %struct.__esf* %1, null, !dbg !14816
  br i1 %6, label %15, label %7, !dbg !14818

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14819, metadata !DIExpression()), !dbg !14824
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !14826
  %9 = load i32, i32* %8, align 4, !dbg !14826
  %10 = and i32 %9, 511, !dbg !14827
  %11 = icmp eq i32 %10, 0, !dbg !14828
  br i1 %11, label %13, label %12, !dbg !14829

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.230, i32 0, i32 0), i32 noundef 69) #27, !dbg !14830
  br label %13, !dbg !14836

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !14837
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.231, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #27, !dbg !14837
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !14842
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14819, metadata !DIExpression()), !dbg !14843
  br label %17, !dbg !14848

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !14837
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.231, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #27, !dbg !14837
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !14842
  br label %17, !dbg !14849

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !14807
  call void @llvm.dbg.value(metadata i32 %18, metadata !14770, metadata !DIExpression()) #25, !dbg !14809
  call void @llvm.dbg.value(metadata i32 %18, metadata !14804, metadata !DIExpression()), !dbg !14806
  call void @llvm.dbg.value(metadata i32 undef, metadata !14850, metadata !DIExpression()) #25, !dbg !14853
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !14855, !srcloc !14856
  tail call fastcc void @k_thread_abort.232(%struct.k_thread* noundef %4) #26, !dbg !14857
  ret void, !dbg !14860
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.228() unnamed_addr #13 !dbg !14861 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.240() #28, !dbg !14865
  ret %struct.k_thread* %1, !dbg !14866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #3 !dbg !14867 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14871, metadata !DIExpression()), !dbg !14872
  %2 = icmp ult i32 %0, 5, !dbg !14873
  br i1 %2, label %3, label %6, !dbg !14873

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !14873
  %5 = load i8*, i8** %4, align 4, !dbg !14873
  br label %6, !dbg !14873

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.234, i32 0, i32 0), %1 ], !dbg !14874
  ret i8* %7, !dbg !14876
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14877 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14881, metadata !DIExpression()), !dbg !14883
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !14884
  br i1 %2, label %9, label %3, !dbg !14885

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #27, !dbg !14886
  call void @llvm.dbg.value(metadata i8* %4, metadata !14882, metadata !DIExpression()), !dbg !14883
  %5 = icmp eq i8* %4, null, !dbg !14887
  br i1 %5, label %9, label %6, !dbg !14889

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !14890
  %8 = icmp eq i8 %7, 0, !dbg !14891
  br i1 %8, label %9, label %10, !dbg !14892

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.233, i32 0, i32 0), metadata !14882, metadata !DIExpression()), !dbg !14883
  br label %10, !dbg !14893

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.233, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !14883
  call void @llvm.dbg.value(metadata i8* %11, metadata !14882, metadata !DIExpression()), !dbg !14883
  ret i8* %11, !dbg !14895
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.232(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14896 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14900, metadata !DIExpression()), !dbg !14901
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14902, !srcloc !14904
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !14905
  ret void, !dbg !14906
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.240() unnamed_addr #13 !dbg !14907 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14908, !srcloc !14910
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !14911
  ret %struct.k_thread* %1, !dbg !14912
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14913 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14917, metadata !DIExpression()), !dbg !14920
  call void @llvm.dbg.value(metadata i32 %1, metadata !14918, metadata !DIExpression()), !dbg !14920
  call void @llvm.dbg.value(metadata i32 %2, metadata !14919, metadata !DIExpression()), !dbg !14920
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !14921
  ret void, !dbg !14922
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14923 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14927, metadata !DIExpression()), !dbg !14930
  call void @llvm.dbg.value(metadata i8* %1, metadata !14928, metadata !DIExpression()), !dbg !14930
  call void @llvm.dbg.value(metadata i32 %2, metadata !14929, metadata !DIExpression()), !dbg !14930
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !14931
  ret void, !dbg !14932
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14933 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !14934
  ret void, !dbg !14935
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14938, metadata !DIExpression()), !dbg !14939
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !14940
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14941
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14942
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14943
  %4 = trunc i32 %0 to i8, !dbg !14944
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !14945
  store i8 %4, i8* %5, align 4, !dbg !14946
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14947
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !14948
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14949
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14950
  store i8* %8, i8** %9, align 4, !dbg !14951
  ret void, !dbg !14952
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14953 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14955, metadata !DIExpression()), !dbg !14961
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14962
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14956, metadata !DIExpression()), !dbg !14961
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14963
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14957, metadata !DIExpression()), !dbg !14961
  call void @llvm.dbg.value(metadata i8* null, metadata !14960, metadata !DIExpression()), !dbg !14961
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14964
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14965
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !14966
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !14967
  ret void, !dbg !14968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !14969 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14973, metadata !DIExpression()), !dbg !14974
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14975
  ret i8* %2, !dbg !14976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14977 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14982, metadata !DIExpression()), !dbg !14983
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14984
  %3 = load i8, i8* %2, align 1, !dbg !14985
  %4 = and i8 %3, -5, !dbg !14985
  store i8 %4, i8* %2, align 1, !dbg !14985
  ret void, !dbg !14986
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #12 !dbg !14987 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !14990
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !14991
  %3 = ptrtoint i8* %2 to i32, !dbg !15000
  %4 = add i32 %3, 2048, !dbg !15001
  call void @llvm.dbg.value(metadata i32 %4, metadata !14995, metadata !DIExpression()) #25, !dbg !15002
  call void @llvm.dbg.value(metadata i32 %4, metadata !15003, metadata !DIExpression()) #25, !dbg !15006
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !15008, !srcloc !15009
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15010
  %6 = or i32 %5, 512, !dbg !15010
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15010
  tail call fastcc void @__NVIC_SetPriority.249(i32 noundef -2, i32 noundef 255) #27, !dbg !15011
  tail call fastcc void @__NVIC_SetPriority.249(i32 noundef -5, i32 noundef 0) #27, !dbg !15014
  tail call fastcc void @__NVIC_SetPriority.249(i32 noundef -12, i32 noundef 0) #27, !dbg !15015
  tail call fastcc void @__NVIC_SetPriority.249(i32 noundef -11, i32 noundef 0) #27, !dbg !15016
  tail call fastcc void @__NVIC_SetPriority.249(i32 noundef -10, i32 noundef 0) #27, !dbg !15017
  tail call fastcc void @__NVIC_SetPriority.249(i32 noundef -4, i32 noundef 0) #27, !dbg !15018
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15019
  %8 = or i32 %7, 458752, !dbg !15019
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15019
  tail call void @z_arm_fault_init() #27, !dbg !15020
  tail call void @z_arm_cpu_idle_init() #27, !dbg !15021
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !15022
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !15025
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !15026
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !15027
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !15028
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !15028
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14989, metadata !DIExpression()), !dbg !15029
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !15030
  call void @z_device_state_init() #27, !dbg !15031
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !15032
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !15033
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !15034
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !15035
  unreachable, !dbg !15035
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2358, metadata !DIExpression()), !dbg !15036
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !15037
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !15037
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2359, metadata !DIExpression()), !dbg !15036
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2359, metadata !DIExpression()), !dbg !15036
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !15038
  br i1 %7, label %8, label %35, !dbg !15039

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2359, metadata !DIExpression()), !dbg !15036
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !15040
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !15040
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2369, metadata !DIExpression()), !dbg !15041
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !15042
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !15042
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !15043
  call void @llvm.dbg.value(metadata i32 %14, metadata !2373, metadata !DIExpression()), !dbg !15041
  %15 = icmp eq %struct.device* %11, null, !dbg !15044
  br i1 %15, label %32, label %16, !dbg !15046

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !15047
  br i1 %17, label %26, label %18, !dbg !15050

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !15051
  call void @llvm.dbg.value(metadata i32 %19, metadata !2373, metadata !DIExpression()), !dbg !15041
  %20 = icmp ult i32 %19, 255, !dbg !15053
  %21 = select i1 %20, i32 %19, i32 255, !dbg !15053
  call void @llvm.dbg.value(metadata i32 %21, metadata !2373, metadata !DIExpression()), !dbg !15041
  %22 = trunc i32 %21 to i8, !dbg !15054
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !15055
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !15055
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !15056
  store i8 %22, i8* %25, align 1, !dbg !15057
  br label %26, !dbg !15058

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !15059
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !15059
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !15060
  %30 = load i8, i8* %29, align 1, !dbg !15061
  %31 = or i8 %30, 1, !dbg !15061
  store i8 %31, i8* %29, align 1, !dbg !15061
  br label %32, !dbg !15062

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !15063
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2359, metadata !DIExpression()), !dbg !15036
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !15038
  br i1 %34, label %8, label %35, !dbg !15039, !llvm.loop !15064

35:                                               ; preds = %32, %1
  ret void, !dbg !15066
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.249(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !15067 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15069, metadata !DIExpression()), !dbg !15071
  call void @llvm.dbg.value(metadata i32 %1, metadata !15070, metadata !DIExpression()), !dbg !15071
  %3 = trunc i32 %1 to i8, !dbg !15072
  %4 = shl i8 %3, 4, !dbg !15072
  %5 = and i32 %0, 15, !dbg !15075
  %6 = add nsw i32 %5, -4, !dbg !15076
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !15077
  store volatile i8 %4, i8* %7, align 1, !dbg !15078
  ret void, !dbg !15079
}

; Function Attrs: optsize
declare !dbg !15080 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !15081 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15084, metadata !DIExpression()), !dbg !15085
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15086
  store i8 1, i8* %2, align 1, !dbg !15087
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15088
  store i8 1, i8* %3, align 4, !dbg !15089
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !15090
  store i32 0, i32* %4, align 4, !dbg !15091
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !15092
  store i32 0, i32* %5, align 4, !dbg !15093
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !15094
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !15095
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15096
  ret void, !dbg !15097
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !15098 {
  tail call void @z_sched_init() #27, !dbg !15103
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15104
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.250, i32 0, i32 0)) #27, !dbg !15105
  call void @llvm.dbg.value(metadata i8* %1, metadata !15102, metadata !DIExpression()), !dbg !15106
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !15107
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !15108
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !15109
  ret i8* %1, !dbg !15110
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #12 !dbg !15111 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15115, metadata !DIExpression()), !dbg !15116
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !15117
  unreachable, !dbg !15118
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !15119 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15121, metadata !DIExpression()), !dbg !15124
  call void @llvm.dbg.value(metadata i8* %1, metadata !15122, metadata !DIExpression()), !dbg !15124
  call void @llvm.dbg.value(metadata i8* %2, metadata !15123, metadata !DIExpression()), !dbg !15124
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !15125
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !15126
  tail call void @boot_banner() #27, !dbg !15127
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !15128
  tail call void @z_init_static_threads() #27, !dbg !15129
  tail call void @main() #27, !dbg !15130
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15131
  %5 = and i8 %4, -2, !dbg !15131
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15131
  ret void, !dbg !15132
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !15133 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !15143, metadata !DIExpression()), !dbg !15145
  call void @llvm.dbg.value(metadata i8* %1, metadata !15144, metadata !DIExpression()), !dbg !15145
  ret void, !dbg !15146
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !15147 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !15149, metadata !DIExpression()), !dbg !15151
  call void @llvm.dbg.value(metadata i8* %1, metadata !15150, metadata !DIExpression()), !dbg !15151
  ret void, !dbg !15152
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !15153 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15154, !srcloc !15161
  call void @llvm.dbg.value(metadata i32 %1, metadata !15157, metadata !DIExpression()) #25, !dbg !15162
  %2 = icmp ne i32 %1, 0, !dbg !15163
  ret i1 %2, !dbg !15164
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !15165 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15166
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15167
  %3 = load i8, i8* %2, align 4, !dbg !15168
  %4 = or i8 %3, 1, !dbg !15168
  store i8 %4, i8* %2, align 4, !dbg !15168
  ret void, !dbg !15169
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !15170 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15171
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15172
  %3 = load i8, i8* %2, align 4, !dbg !15173
  %4 = and i8 %3, -2, !dbg !15173
  store i8 %4, i8* %2, align 4, !dbg !15173
  ret void, !dbg !15174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !15175 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15176
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15177
  %3 = load i8, i8* %2, align 4, !dbg !15177
  %4 = and i8 %3, 1, !dbg !15178
  %5 = icmp ne i8 %4, 0, !dbg !15179
  ret i1 %5, !dbg !15180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !15181 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15185, metadata !DIExpression()), !dbg !15187
  call void @llvm.dbg.value(metadata i8* %1, metadata !15186, metadata !DIExpression()), !dbg !15187
  ret i32 -88, !dbg !15188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !15189 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15193, metadata !DIExpression()), !dbg !15194
  ret i8* null, !dbg !15195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #3 !dbg !15196 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15200, metadata !DIExpression()), !dbg !15203
  call void @llvm.dbg.value(metadata i8* %1, metadata !15201, metadata !DIExpression()), !dbg !15203
  call void @llvm.dbg.value(metadata i32 %2, metadata !15202, metadata !DIExpression()), !dbg !15203
  ret i32 -88, !dbg !15204
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2384 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2498, metadata !DIExpression()), !dbg !15205
  call void @llvm.dbg.value(metadata i8* %1, metadata !2499, metadata !DIExpression()), !dbg !15205
  call void @llvm.dbg.value(metadata i32 %2, metadata !2500, metadata !DIExpression()), !dbg !15205
  call void @llvm.dbg.value(metadata i32 0, metadata !2501, metadata !DIExpression()), !dbg !15205
  call void @llvm.dbg.value(metadata i8 undef, metadata !2503, metadata !DIExpression()), !dbg !15205
  %4 = icmp eq i8* %1, null, !dbg !15206
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !15208
  br i1 %6, label %46, label %7, !dbg !15208

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15209
  %9 = load i8, i8* %8, align 1, !dbg !15209
  call void @llvm.dbg.value(metadata i8 %9, metadata !2503, metadata !DIExpression()), !dbg !15205
  %10 = add i32 %2, -1, !dbg !15210
  call void @llvm.dbg.value(metadata i32 %10, metadata !2500, metadata !DIExpression()), !dbg !15205
  call void @llvm.dbg.value(metadata i8 0, metadata !2504, metadata !DIExpression()), !dbg !15211
  call void @llvm.dbg.value(metadata i8 %9, metadata !2503, metadata !DIExpression()), !dbg !15205
  call void @llvm.dbg.value(metadata i32 0, metadata !2501, metadata !DIExpression()), !dbg !15205
  %11 = icmp eq i8 %9, 0, !dbg !15212
  br i1 %11, label %12, label %15, !dbg !15214

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !15215
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !15216
  store i8 0, i8* %14, align 1, !dbg !15217
  br label %46, !dbg !15218

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2504, metadata !DIExpression()), !dbg !15211
  call void @llvm.dbg.value(metadata i8 %17, metadata !2503, metadata !DIExpression()), !dbg !15205
  call void @llvm.dbg.value(metadata i32 %18, metadata !2501, metadata !DIExpression()), !dbg !15205
  %19 = zext i8 %17 to i32, !dbg !15219
  %20 = zext i8 %16 to i32, !dbg !15220
  %21 = shl nuw i32 1, %20, !dbg !15220
  call void @llvm.dbg.value(metadata i32 %21, metadata !2502, metadata !DIExpression()), !dbg !15205
  %22 = and i32 %21, %19, !dbg !15222
  %23 = icmp eq i32 %22, 0, !dbg !15224
  br i1 %23, label %42, label %24, !dbg !15225

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !15226
  %26 = sub i32 %10, %18, !dbg !15227
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !15228
  %28 = load i8*, i8** %27, align 4, !dbg !15228
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !15229
  %30 = load i32, i32* %29, align 4, !dbg !15229
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !15230
  %32 = add i32 %31, %18, !dbg !15231
  call void @llvm.dbg.value(metadata i32 %32, metadata !2501, metadata !DIExpression()), !dbg !15205
  %33 = trunc i32 %21 to i8, !dbg !15232
  %34 = xor i8 %33, -1, !dbg !15232
  %35 = and i8 %17, %34, !dbg !15232
  call void @llvm.dbg.value(metadata i8 %35, metadata !2503, metadata !DIExpression()), !dbg !15205
  %36 = icmp eq i8 %35, 0, !dbg !15233
  br i1 %36, label %12, label %37, !dbg !15235

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !15236
  %39 = sub i32 %10, %32, !dbg !15238
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.253, i32 0, i32 0), i32 noundef 1) #26, !dbg !15239
  %41 = add i32 %40, %32, !dbg !15240
  call void @llvm.dbg.value(metadata i32 %41, metadata !2501, metadata !DIExpression()), !dbg !15205
  br label %42, !dbg !15241

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !15205
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !15205
  call void @llvm.dbg.value(metadata i8 %44, metadata !2503, metadata !DIExpression()), !dbg !15205
  call void @llvm.dbg.value(metadata i32 %43, metadata !2501, metadata !DIExpression()), !dbg !15205
  %45 = add i8 %16, 1, !dbg !15242
  call void @llvm.dbg.value(metadata i8 %45, metadata !2504, metadata !DIExpression()), !dbg !15211
  br label %15, !dbg !15214

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.254, i32 0, i32 0), %3 ], !dbg !15205
  ret i8* %47, !dbg !15243
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !15244 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15248, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata i32 %1, metadata !15249, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata i8* %2, metadata !15250, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata i32 %3, metadata !15251, metadata !DIExpression()), !dbg !15253
  %5 = icmp ult i32 %1, %3, !dbg !15254
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !15254
  call void @llvm.dbg.value(metadata i32 %6, metadata !15252, metadata !DIExpression()), !dbg !15253
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !15255
  ret i32 %6, !dbg !15256
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15257 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15261, metadata !DIExpression()), !dbg !15262
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !15263
  ret void, !dbg !15264
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !15265 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15274, metadata !DIExpression()), !dbg !15285
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15275, metadata !DIExpression()), !dbg !15285
  call void @llvm.dbg.value(metadata i32 %2, metadata !15276, metadata !DIExpression()), !dbg !15285
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15277, metadata !DIExpression()), !dbg !15285
  call void @llvm.dbg.value(metadata i8* %4, metadata !15278, metadata !DIExpression()), !dbg !15285
  call void @llvm.dbg.value(metadata i8* %5, metadata !15279, metadata !DIExpression()), !dbg !15285
  call void @llvm.dbg.value(metadata i8* %6, metadata !15280, metadata !DIExpression()), !dbg !15285
  call void @llvm.dbg.value(metadata i32 %7, metadata !15281, metadata !DIExpression()), !dbg !15285
  call void @llvm.dbg.value(metadata i32 %8, metadata !15282, metadata !DIExpression()), !dbg !15285
  call void @llvm.dbg.value(metadata i8* undef, metadata !15283, metadata !DIExpression()), !dbg !15285
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15286
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !15287
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !15288
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !15289
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !15290
  call void @llvm.dbg.value(metadata i8* %13, metadata !15284, metadata !DIExpression()), !dbg !15285
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !15291
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !15292
  store i8* null, i8** %14, align 4, !dbg !15293
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15294
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !15294
  br i1 %16, label %20, label %17, !dbg !15296

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !15297
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !15297
  br label %20, !dbg !15298

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !15285
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !15299
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !15301
  ret i8* %13, !dbg !15302
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #9 !dbg !15303 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15308, metadata !DIExpression()), !dbg !15309
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15310
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !15311
  ret void, !dbg !15312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !15313 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15318, metadata !DIExpression()), !dbg !15322
  call void @llvm.dbg.value(metadata i32 %1, metadata !15319, metadata !DIExpression()), !dbg !15322
  call void @llvm.dbg.value(metadata i32 %2, metadata !15320, metadata !DIExpression()), !dbg !15322
  call void @llvm.dbg.value(metadata i32 %3, metadata !15321, metadata !DIExpression()), !dbg !15322
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !15323
  store %union.anon* null, %union.anon** %5, align 8, !dbg !15324
  %6 = trunc i32 %3 to i8, !dbg !15325
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !15326
  store i8 %6, i8* %7, align 4, !dbg !15327
  %8 = trunc i32 %2 to i8, !dbg !15328
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !15329
  store i8 %8, i8* %9, align 1, !dbg !15330
  %10 = trunc i32 %1 to i8, !dbg !15331
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !15332
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !15332
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !15332
  store i8 %10, i8* %13, align 2, !dbg !15333
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !15334
  store i8 0, i8* %14, align 1, !dbg !15335
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !15336
  ret void, !dbg !15337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !15338 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15342, metadata !DIExpression()), !dbg !15350
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15343, metadata !DIExpression()), !dbg !15350
  call void @llvm.dbg.value(metadata i32 %2, metadata !15344, metadata !DIExpression()), !dbg !15350
  call void @llvm.dbg.value(metadata i32 0, metadata !15349, metadata !DIExpression()), !dbg !15350
  %4 = add i32 %2, 7, !dbg !15351
  %5 = and i32 %4, -8, !dbg !15351
  %6 = add i32 %5, 64, !dbg !15351
  call void @llvm.dbg.value(metadata i32 %6, metadata !15345, metadata !DIExpression()), !dbg !15350
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.264(%struct.z_thread_stack_element* noundef %1) #26, !dbg !15353
  call void @llvm.dbg.value(metadata i8* %7, metadata !15348, metadata !DIExpression()), !dbg !15350
  call void @llvm.dbg.value(metadata i32 %5, metadata !15346, metadata !DIExpression()), !dbg !15350
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !15354
  call void @llvm.dbg.value(metadata i8* %8, metadata !15347, metadata !DIExpression()), !dbg !15350
  call void @llvm.dbg.value(metadata i32 0, metadata !15349, metadata !DIExpression()), !dbg !15350
  %9 = ptrtoint i8* %7 to i32, !dbg !15355
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !15356
  store i32 %9, i32* %10, align 4, !dbg !15357
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !15358
  store i32 %5, i32* %11, align 4, !dbg !15359
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !15360
  store i32 0, i32* %12, align 4, !dbg !15361
  call void @llvm.dbg.value(metadata i8* %8, metadata !15347, metadata !DIExpression()), !dbg !15350
  ret i8* %8, !dbg !15362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.264(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !15363 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !15367, metadata !DIExpression()), !dbg !15368
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !15369
  ret i8* %2, !dbg !15370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !15371 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15376, metadata !DIExpression()), !dbg !15377
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !15378
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15379
  ret void, !dbg !15380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !15381 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15383, metadata !DIExpression()), !dbg !15384
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15385
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !15386
  ret void, !dbg !15387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !15388 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15392, metadata !DIExpression()), !dbg !15393
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15394
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15395
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15396
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15397
  ret void, !dbg !15398
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !15399 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15404, metadata !DIExpression()), !dbg !15405
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15406
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15407
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15408
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15409
  ret void, !dbg !15410
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !15411 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !15428, metadata !DIExpression()), !dbg !15429
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15419, metadata !DIExpression()), !dbg !15429
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15420, metadata !DIExpression()), !dbg !15429
  call void @llvm.dbg.value(metadata i32 %2, metadata !15421, metadata !DIExpression()), !dbg !15429
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15422, metadata !DIExpression()), !dbg !15429
  call void @llvm.dbg.value(metadata i8* %4, metadata !15423, metadata !DIExpression()), !dbg !15429
  call void @llvm.dbg.value(metadata i8* %5, metadata !15424, metadata !DIExpression()), !dbg !15429
  call void @llvm.dbg.value(metadata i8* %6, metadata !15425, metadata !DIExpression()), !dbg !15429
  call void @llvm.dbg.value(metadata i32 %7, metadata !15426, metadata !DIExpression()), !dbg !15429
  call void @llvm.dbg.value(metadata i32 %8, metadata !15427, metadata !DIExpression()), !dbg !15429
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !15430
  %13 = icmp eq i64 %11, -1, !dbg !15431
  br i1 %13, label %15, label %14, !dbg !15433

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !15434
  br label %15, !dbg !15436

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !15437
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15438 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15443, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15442, metadata !DIExpression()), !dbg !15444
  %4 = icmp eq i64 %3, 0, !dbg !15445
  br i1 %4, label %5, label %6, !dbg !15447

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !15448
  br label %7, !dbg !15450

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !15451
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !15453
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15454 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15458, metadata !DIExpression()), !dbg !15459
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15460, !srcloc !15462
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !15463
  ret void, !dbg !15464
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15465 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15468, metadata !DIExpression()), !dbg !15469
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15467, metadata !DIExpression()), !dbg !15469
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15470
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !15471
  ret void, !dbg !15472
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !15473 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15475, metadata !DIExpression()), !dbg !15495
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !15496

1:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !15497
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15493, metadata !DIExpression()), !dbg !15498
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !15499

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !15475, metadata !DIExpression()), !dbg !15495
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !15500
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !15500
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !15503
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !15503
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !15504
  %9 = load i32, i32* %8, align 4, !dbg !15504
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !15505
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !15505
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !15506
  %13 = load i8*, i8** %12, align 4, !dbg !15506
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !15507
  %15 = load i8*, i8** %14, align 4, !dbg !15507
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !15508
  %17 = load i8*, i8** %16, align 4, !dbg !15508
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !15509
  %19 = load i32, i32* %18, align 4, !dbg !15509
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !15510
  %21 = load i32, i32* %20, align 4, !dbg !15510
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !15511
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !15512
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !15513
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !15514
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !15514
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !15515
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !15475, metadata !DIExpression()), !dbg !15495
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15516
  br i1 %27, label %2, label %1, !dbg !15496, !llvm.loop !15518

28:                                               ; preds = %0
  tail call void @k_sched_lock() #27, !dbg !15497
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15493, metadata !DIExpression()), !dbg !15498
  br label %29, !dbg !15499

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #27, !dbg !15520
  ret void, !dbg !15521

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !15493, metadata !DIExpression()), !dbg !15498
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !15522
  %33 = load i32, i32* %32, align 4, !dbg !15522
  %34 = icmp eq i32 %33, -1, !dbg !15526
  br i1 %34, label %43, label %35, !dbg !15527

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !15528
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !15528
  %38 = icmp sgt i32 %33, 0, !dbg !15530
  %39 = select i1 %38, i32 %33, i32 0, !dbg !15530
  %40 = zext i32 %39 to i64, !dbg !15530
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #26, !dbg !15530
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !15531
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !15531
  br label %43, !dbg !15532

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !15533
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !15493, metadata !DIExpression()), !dbg !15498
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15534
  br i1 %45, label %30, label %29, !dbg !15499, !llvm.loop !15536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !15538 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15543, metadata !DIExpression()), !dbg !15544
  call void @llvm.dbg.value(metadata i64 %0, metadata !15545, metadata !DIExpression()), !dbg !15562
  call void @llvm.dbg.value(metadata i32 1000, metadata !15550, metadata !DIExpression()), !dbg !15562
  call void @llvm.dbg.value(metadata i32 10000, metadata !15551, metadata !DIExpression()), !dbg !15562
  call void @llvm.dbg.value(metadata i8 1, metadata !15552, metadata !DIExpression()), !dbg !15562
  call void @llvm.dbg.value(metadata i8 0, metadata !15553, metadata !DIExpression()), !dbg !15562
  call void @llvm.dbg.value(metadata i8 1, metadata !15554, metadata !DIExpression()), !dbg !15562
  call void @llvm.dbg.value(metadata i8 0, metadata !15555, metadata !DIExpression()), !dbg !15562
  call void @llvm.dbg.value(metadata i8 1, metadata !15556, metadata !DIExpression()), !dbg !15562
  call void @llvm.dbg.value(metadata i8 0, metadata !15557, metadata !DIExpression()), !dbg !15562
  call void @llvm.dbg.value(metadata i64 0, metadata !15558, metadata !DIExpression()), !dbg !15562
  call void @llvm.dbg.value(metadata i64 0, metadata !15558, metadata !DIExpression()), !dbg !15562
  %2 = mul i64 %0, 10, !dbg !15564
  ret i64 %2, !dbg !15570
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #12 !dbg !15571 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !15573, metadata !DIExpression()), !dbg !15577
  call void @llvm.dbg.value(metadata i8* %1, metadata !15574, metadata !DIExpression()), !dbg !15577
  call void @llvm.dbg.value(metadata i8* %2, metadata !15575, metadata !DIExpression()), !dbg !15577
  call void @llvm.dbg.value(metadata i8* %3, metadata !15576, metadata !DIExpression()), !dbg !15577
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15578
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !15579
  %7 = load i8, i8* %6, align 4, !dbg !15580
  %8 = or i8 %7, 4, !dbg !15580
  store i8 %8, i8* %6, align 4, !dbg !15580
  tail call void @z_thread_essential_clear() #26, !dbg !15581
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !15582
  unreachable, !dbg !15582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !15583 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15587, metadata !DIExpression()), !dbg !15588
  ret i32 -134, !dbg !15589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #3 !dbg !15590 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15594, metadata !DIExpression()), !dbg !15596
  call void @llvm.dbg.value(metadata i32 %1, metadata !15595, metadata !DIExpression()), !dbg !15596
  ret i32 -134, !dbg !15597
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #3 !dbg !15598 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15605, metadata !DIExpression()), !dbg !15607
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !15606, metadata !DIExpression()), !dbg !15607
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !15608
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !15610
  %6 = select i1 %5, i32 -22, i32 0, !dbg !15607
  ret i32 %6, !dbg !15611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #3 !dbg !15612 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15616, metadata !DIExpression()), !dbg !15617
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !15618
  %3 = select i1 %2, i32 -22, i32 0, !dbg !15617
  ret i32 %3, !dbg !15620
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !15621 {
  tail call void @sys_clock_idle_exit() #27, !dbg !15623
  ret void, !dbg !15624
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #12 !dbg !15625 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15627, metadata !DIExpression()), !dbg !15630
  call void @llvm.dbg.value(metadata i8* %1, metadata !15628, metadata !DIExpression()), !dbg !15630
  call void @llvm.dbg.value(metadata i8* %2, metadata !15629, metadata !DIExpression()), !dbg !15630
  br label %4, !dbg !15631

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15632, !srcloc !15639
  call void @llvm.dbg.value(metadata i32 undef, metadata !15635, metadata !DIExpression()) #25, !dbg !15640
  call void @llvm.dbg.value(metadata i32 undef, metadata !15636, metadata !DIExpression()) #25, !dbg !15640
  tail call fastcc void @k_cpu_idle() #26, !dbg !15641
  br label %4, !dbg !15631, !llvm.loop !15642
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !15644 {
  tail call void @arch_cpu_idle() #27, !dbg !15645
  ret void, !dbg !15646
}

; Function Attrs: optsize
declare !dbg !15647 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !15648 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15652, metadata !DIExpression()), !dbg !15656
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15653, metadata !DIExpression()), !dbg !15656
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15657
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15657
  %5 = load i8, i8* %4, align 2, !dbg !15657
  call void @llvm.dbg.value(metadata i8 %5, metadata !15654, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15656
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15658
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15658
  %8 = load i8, i8* %7, align 2, !dbg !15658
  call void @llvm.dbg.value(metadata i8 %8, metadata !15655, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15656
  %9 = icmp eq i8 %8, %5, !dbg !15659
  %10 = sext i8 %5 to i32, !dbg !15661
  %11 = sext i8 %8 to i32, !dbg !15661
  %12 = sub nsw i32 %11, %10, !dbg !15661
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15661
  ret i32 %13, !dbg !15662
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15663 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15667, metadata !DIExpression()), !dbg !15668
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !15669
  %3 = icmp eq i32 %2, 0, !dbg !15671
  br i1 %3, label %8, label %4, !dbg !15672

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !15673
  %6 = add i32 %5, %2, !dbg !15675
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15676
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !15677
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !15678
  br label %8, !dbg !15679

8:                                                ; preds = %4, %1
  ret void, !dbg !15680
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !15681 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15685, metadata !DIExpression()), !dbg !15687
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15688
  call void @llvm.dbg.value(metadata i32 %1, metadata !15686, metadata !DIExpression()), !dbg !15687
  ret i32 %1, !dbg !15689
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15690 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15694, metadata !DIExpression()), !dbg !15703
  call void @llvm.dbg.value(metadata i32 %1, metadata !15695, metadata !DIExpression()), !dbg !15703
  call void @llvm.dbg.value(metadata i32 0, metadata !15696, metadata !DIExpression()), !dbg !15704
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !15712
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15714, !srcloc !15720
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15714
  call void @llvm.dbg.value(metadata i32 %4, metadata !15717, metadata !DIExpression()) #25, !dbg !15721
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !15721
  call void @llvm.dbg.value(metadata i32 %4, metadata !15711, metadata !DIExpression()) #25, !dbg !15712
  call void @llvm.dbg.value(metadata i32 %4, metadata !15702, metadata !DIExpression()), !dbg !15704
  call void @llvm.dbg.value(metadata i32 undef, metadata !15696, metadata !DIExpression()), !dbg !15704
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15722
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !15725
  %6 = icmp sgt i32 %0, 0, !dbg !15726
  %7 = icmp sgt i32 %5, 2, !dbg !15728
  %8 = select i1 %7, i32 %5, i32 2, !dbg !15728
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !15728
  store i32 %9, i32* @slice_ticks, align 4, !dbg !15729
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15730
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15731
  call void @llvm.dbg.value(metadata i32 %4, metadata !15732, metadata !DIExpression()) #25, !dbg !15738
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !15738
  call void @llvm.dbg.value(metadata i32 %4, metadata !15740, metadata !DIExpression()) #25, !dbg !15743
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15745, !srcloc !15746
  call void @llvm.dbg.value(metadata i32 1, metadata !15696, metadata !DIExpression()), !dbg !15704
  call void @llvm.dbg.value(metadata i32 undef, metadata !15696, metadata !DIExpression()), !dbg !15704
  ret void, !dbg !15747
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #3 !dbg !15748 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15750, metadata !DIExpression()), !dbg !15751
  call void @llvm.dbg.value(metadata i32 %0, metadata !15752, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15767
  call void @llvm.dbg.value(metadata i32 1000, metadata !15755, metadata !DIExpression()), !dbg !15767
  call void @llvm.dbg.value(metadata i32 10000, metadata !15756, metadata !DIExpression()), !dbg !15767
  call void @llvm.dbg.value(metadata i8 1, metadata !15757, metadata !DIExpression()), !dbg !15767
  call void @llvm.dbg.value(metadata i1 true, metadata !15758, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15767
  call void @llvm.dbg.value(metadata i1 true, metadata !15759, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15767
  call void @llvm.dbg.value(metadata i8 0, metadata !15760, metadata !DIExpression()), !dbg !15767
  call void @llvm.dbg.value(metadata i1 true, metadata !15761, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15767
  call void @llvm.dbg.value(metadata i1 false, metadata !15762, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15767
  call void @llvm.dbg.value(metadata i64 0, metadata !15763, metadata !DIExpression()), !dbg !15767
  call void @llvm.dbg.value(metadata i64 0, metadata !15763, metadata !DIExpression()), !dbg !15767
  %2 = mul i32 %0, 10, !dbg !15769
  ret i32 %2, !dbg !15775
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15776 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15778, metadata !DIExpression()), !dbg !15780
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !15781
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15783, !srcloc !15720
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15783
  call void @llvm.dbg.value(metadata i32 %3, metadata !15717, metadata !DIExpression()) #25, !dbg !15785
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !15785
  call void @llvm.dbg.value(metadata i32 %3, metadata !15711, metadata !DIExpression()) #25, !dbg !15781
  call void @llvm.dbg.value(metadata i32 %3, metadata !15779, metadata !DIExpression()), !dbg !15780
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15786
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15788
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !15789
  br i1 %6, label %7, label %8, !dbg !15790

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15791
  call void @llvm.dbg.value(metadata i32 %3, metadata !15732, metadata !DIExpression()) #25, !dbg !15793
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !15793
  call void @llvm.dbg.value(metadata i32 %3, metadata !15740, metadata !DIExpression()) #25, !dbg !15795
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15797, !srcloc !15746
  br label %24, !dbg !15798

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15799
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !15800
  %10 = icmp eq i32 %9, 0, !dbg !15800
  br i1 %10, label %21, label %11, !dbg !15802

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !15803
  br i1 %12, label %13, label %21, !dbg !15804

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15805
  %15 = icmp sgt i32 %14, %0, !dbg !15808
  br i1 %15, label %19, label %16, !dbg !15809

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15810
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !15810
  call void @llvm.dbg.value(metadata i32 %18, metadata !15779, metadata !DIExpression()), !dbg !15780
  br label %22, !dbg !15812

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !15813
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15813
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15815
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !15780
  call void @llvm.dbg.value(metadata i32 %23, metadata !15779, metadata !DIExpression()), !dbg !15780
  call void @llvm.dbg.value(metadata i32 %23, metadata !15732, metadata !DIExpression()) #25, !dbg !15817
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !15817
  call void @llvm.dbg.value(metadata i32 %23, metadata !15740, metadata !DIExpression()) #25, !dbg !15819
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !15821, !srcloc !15746
  br label %24, !dbg !15822

24:                                               ; preds = %22, %7
  ret void, !dbg !15822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !15823 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15827, metadata !DIExpression()), !dbg !15829
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !15830
  %3 = icmp eq i32 %2, 0, !dbg !15830
  br i1 %3, label %16, label %4, !dbg !15831

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15832
  br i1 %5, label %16, label %6, !dbg !15833

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15834
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15834
  %9 = load i8, i8* %8, align 2, !dbg !15834
  %10 = sext i8 %9 to i32, !dbg !15835
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15836
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !15837
  br i1 %12, label %16, label %13, !dbg !15838

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !15839
  %15 = xor i1 %14, true, !dbg !15840
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15829
  call void @llvm.dbg.value(metadata i1 %17, metadata !15828, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15829
  ret i1 %17, !dbg !15841
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15842 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15846, metadata !DIExpression()), !dbg !15848
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15849
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15847, metadata !DIExpression()), !dbg !15848
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !15850
  br i1 %3, label %5, label %4, !dbg !15852

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !15853
  br label %5, !dbg !15855

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15846, metadata !DIExpression()), !dbg !15848
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15856
  ret i32 %6, !dbg !15857
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15858 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15860, metadata !DIExpression()), !dbg !15862
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15863
  %3 = load i8, i8* %2, align 1, !dbg !15863
  call void @llvm.dbg.value(metadata i8 %3, metadata !15861, metadata !DIExpression()), !dbg !15862
  %4 = and i8 %3, 31, !dbg !15864
  %5 = icmp ne i8 %4, 0, !dbg !15865
  ret i1 %5, !dbg !15866
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15867 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15869, metadata !DIExpression()), !dbg !15870
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15871
  br i1 %2, label %3, label %7, !dbg !15873

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15874, metadata !DIExpression()) #25, !dbg !15877
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15880
  %5 = load i8, i8* %4, align 1, !dbg !15881
  %6 = and i8 %5, 127, !dbg !15881
  store i8 %6, i8* %4, align 1, !dbg !15881
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15882, metadata !DIExpression()) #25, !dbg !15885
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15889
  br label %7, !dbg !15890

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15891, metadata !DIExpression()) #25, !dbg !15894
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15896
  %9 = load i8, i8* %8, align 1, !dbg !15897
  %10 = or i8 %9, -128, !dbg !15897
  store i8 %10, i8* %8, align 1, !dbg !15897
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15898, metadata !DIExpression()) #25, !dbg !15901
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15905, metadata !DIExpression()) #25, !dbg !15913
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15911, metadata !DIExpression()) #25, !dbg !15913
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15915
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !15912, metadata !DIExpression()) #25, !dbg !15913
  %12 = icmp eq %struct._dnode* %11, null, !dbg !15917
  br i1 %12, label %23, label %13, !dbg !15915

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !15912, metadata !DIExpression()) #25, !dbg !15913
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !15919
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !15912, metadata !DIExpression()) #25, !dbg !15913
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #27, !dbg !15920
  %17 = icmp sgt i32 %16, 0, !dbg !15923
  br i1 %17, label %18, label %20, !dbg !15924

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15925
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #27, !dbg !15927
  br label %25, !dbg !15928

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #27, !dbg !15917
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !15912, metadata !DIExpression()) #25, !dbg !15913
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15917
  br i1 %22, label %23, label %13, !dbg !15915, !llvm.loop !15929

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15931
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #27, !dbg !15932
  br label %25, !dbg !15933

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15934
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !15935
  %28 = zext i1 %27 to i32, !dbg !15935
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !15936
  ret void, !dbg !15937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15938 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15940, metadata !DIExpression()), !dbg !15941
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !15942
  ret i1 %2, !dbg !15943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #11 !dbg !15944 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15946, metadata !DIExpression()), !dbg !15948
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15947, metadata !DIExpression()), !dbg !15948
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15949
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !15950
  ret void, !dbg !15951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !15952 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15956, metadata !DIExpression()), !dbg !15957
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !15958
  br i1 %2, label %6, label %3, !dbg !15958

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15959
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15959
  br label %6, !dbg !15958

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15958
  ret %struct._dnode* %7, !dbg !15960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !15961 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15965, metadata !DIExpression()), !dbg !15969
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15966, metadata !DIExpression()), !dbg !15969
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15970
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15970
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15967, metadata !DIExpression()), !dbg !15969
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15971
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15972
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15973
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15974
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15975
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15976
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15977
  ret void, !dbg !15978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !15979 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15983, metadata !DIExpression()), !dbg !15985
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15984, metadata !DIExpression()), !dbg !15985
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15986
  br i1 %3, label %6, label %4, !dbg !15987

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !15988
  br label %6, !dbg !15987

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15987
  ret %struct._dnode* %7, !dbg !15989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !15990 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15994, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15995, metadata !DIExpression()), !dbg !15997
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15998
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15998
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15996, metadata !DIExpression()), !dbg !15997
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15999
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16000
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16001
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !16002
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16003
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16004
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16005
  ret void, !dbg !16006
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !16007 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16009, metadata !DIExpression()), !dbg !16011
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16012
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16019, metadata !DIExpression()) #25, !dbg !16021
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16022
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !16023
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !16023
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16010, metadata !DIExpression()), !dbg !16011
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16024, metadata !DIExpression()) #25, !dbg !16030
  call void @llvm.dbg.value(metadata i32 %0, metadata !16029, metadata !DIExpression()) #25, !dbg !16030
  %6 = icmp eq i32 %0, 0, !dbg !16033
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16035
  br i1 %6, label %8, label %15, !dbg !16036

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #27, !dbg !16037
  br i1 %9, label %15, label %10, !dbg !16039

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !16040
  br i1 %11, label %15, label %12, !dbg !16042

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #27, !dbg !16043
  %14 = icmp eq i32 %13, 0, !dbg !16043
  br i1 %14, label %18, label %15, !dbg !16045

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !16046
  br i1 %16, label %18, label %17, !dbg !16049

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !16050
  br label %18, !dbg !16052

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !16035
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16035
  ret void, !dbg !16053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !16054 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16058, metadata !DIExpression()), !dbg !16061
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16059, metadata !DIExpression()), !dbg !16061
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !16062
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16060, metadata !DIExpression()), !dbg !16061
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16059, metadata !DIExpression()), !dbg !16061
  ret %struct.k_thread* %3, !dbg !16063
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16064 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16066, metadata !DIExpression()), !dbg !16067
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16068
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !16069
  %4 = xor i1 %3, true, !dbg !16070
  ret i1 %4, !dbg !16071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16072 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16074, metadata !DIExpression()), !dbg !16075
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !16076
  %3 = load i16, i16* %2, align 2, !dbg !16076
  %4 = icmp ult i16 %3, 128, !dbg !16077
  %5 = zext i1 %4 to i32, !dbg !16077
  ret i32 %5, !dbg !16078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16079 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16085, metadata !DIExpression()), !dbg !16086
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16087
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !16088
  %4 = xor i1 %3, true, !dbg !16089
  ret i1 %4, !dbg !16090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16091 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16097, metadata !DIExpression()), !dbg !16098
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16099
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16099
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16100
  ret i1 %4, !dbg !16101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !16102 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16104, metadata !DIExpression()), !dbg !16106
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16105, metadata !DIExpression()), !dbg !16106
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16107
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16107
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !16108
  br i1 %5, label %9, label %6, !dbg !16109

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16110
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !16110
  br label %9, !dbg !16109

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !16109
  ret %struct._dnode* %10, !dbg !16111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16112 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16116, metadata !DIExpression()), !dbg !16117
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16118
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16118
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16119
  ret i1 %4, !dbg !16120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !16121 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16125, metadata !DIExpression()), !dbg !16128
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16129
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16129
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16126, metadata !DIExpression()), !dbg !16128
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16130
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16130
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16127, metadata !DIExpression()), !dbg !16128
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16131
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16132
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16133
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16134
  tail call fastcc void @sys_dnode_init.269(%struct._dnode* noundef %0) #26, !dbg !16135
  ret void, !dbg !16136
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.269(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16137 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16139, metadata !DIExpression()), !dbg !16140
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16141
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16142
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16143
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16144
  ret void, !dbg !16145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16146 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16150, metadata !DIExpression()), !dbg !16152
  call void @llvm.dbg.value(metadata i32 128, metadata !16151, metadata !DIExpression()), !dbg !16152
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16153
  %3 = load i8, i8* %2, align 1, !dbg !16153
  %4 = icmp slt i8 %3, 0, !dbg !16154
  ret i1 %4, !dbg !16155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !16156 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16160, metadata !DIExpression()), !dbg !16162
  call void @llvm.dbg.value(metadata i32 %1, metadata !16161, metadata !DIExpression()), !dbg !16162
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !16163
  ret i1 %3, !dbg !16164
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #3 !dbg !16165 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16167, metadata !DIExpression()), !dbg !16168
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !16169
  ret i1 %2, !dbg !16170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !16171 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16173, metadata !DIExpression()), !dbg !16175
  call void @llvm.dbg.value(metadata i32 %1, metadata !16174, metadata !DIExpression()), !dbg !16175
  %3 = icmp slt i32 %0, %1, !dbg !16176
  ret i1 %3, !dbg !16177
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16178 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16180, metadata !DIExpression()), !dbg !16184
  call void @llvm.dbg.value(metadata i32 0, metadata !16181, metadata !DIExpression()), !dbg !16185
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !16186
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16188, !srcloc !15720
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16188
  call void @llvm.dbg.value(metadata i32 %3, metadata !15717, metadata !DIExpression()) #25, !dbg !16190
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !16190
  call void @llvm.dbg.value(metadata i32 %3, metadata !15711, metadata !DIExpression()) #25, !dbg !16186
  call void @llvm.dbg.value(metadata i32 %3, metadata !16183, metadata !DIExpression()), !dbg !16185
  call void @llvm.dbg.value(metadata i32 undef, metadata !16181, metadata !DIExpression()), !dbg !16185
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16191
  call void @llvm.dbg.value(metadata i32 %3, metadata !15732, metadata !DIExpression()) #25, !dbg !16196
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !16196
  call void @llvm.dbg.value(metadata i32 %3, metadata !15740, metadata !DIExpression()) #25, !dbg !16198
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16200, !srcloc !15746
  call void @llvm.dbg.value(metadata i32 1, metadata !16181, metadata !DIExpression()), !dbg !16185
  call void @llvm.dbg.value(metadata i32 undef, metadata !16181, metadata !DIExpression()), !dbg !16185
  ret void, !dbg !16201
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16202 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16204, metadata !DIExpression()), !dbg !16205
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16206
  br i1 %2, label %24, label %3, !dbg !16208

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !16209
  br i1 %4, label %5, label %24, !dbg !16210

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15891, metadata !DIExpression()) #25, !dbg !16211
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16214
  %7 = load i8, i8* %6, align 1, !dbg !16215
  %8 = or i8 %7, -128, !dbg !16215
  store i8 %8, i8* %6, align 1, !dbg !16215
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15898, metadata !DIExpression()) #25, !dbg !16216
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15905, metadata !DIExpression()) #25, !dbg !16218
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15911, metadata !DIExpression()) #25, !dbg !16218
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16220
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !15912, metadata !DIExpression()) #25, !dbg !16218
  %10 = icmp eq %struct._dnode* %9, null, !dbg !16221
  br i1 %10, label %21, label %11, !dbg !16220

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !15912, metadata !DIExpression()) #25, !dbg !16218
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !16222
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15912, metadata !DIExpression()) #25, !dbg !16218
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #27, !dbg !16223
  %15 = icmp sgt i32 %14, 0, !dbg !16224
  br i1 %15, label %16, label %18, !dbg !16225

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16226
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #27, !dbg !16227
  br label %23, !dbg !16228

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #27, !dbg !16221
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !15912, metadata !DIExpression()) #25, !dbg !16218
  %20 = icmp eq %struct._dnode* %19, null, !dbg !16221
  br i1 %20, label %21, label %11, !dbg !16220, !llvm.loop !16229

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16231
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #27, !dbg !16232
  br label %23, !dbg !16233

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16234
  br label %24, !dbg !16235

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !16236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16237 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16239, metadata !DIExpression()), !dbg !16240
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !16241
  br i1 %2, label %6, label %3, !dbg !16242

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !16243
  %5 = xor i1 %4, true, !dbg !16242
  br label %6, !dbg !16242

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !16244
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16245 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16247, metadata !DIExpression()), !dbg !16251
  call void @llvm.dbg.value(metadata i32 0, metadata !16248, metadata !DIExpression()), !dbg !16252
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !16253
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16255, !srcloc !15720
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16255
  call void @llvm.dbg.value(metadata i32 %3, metadata !15717, metadata !DIExpression()) #25, !dbg !16257
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !16257
  call void @llvm.dbg.value(metadata i32 %3, metadata !15711, metadata !DIExpression()) #25, !dbg !16253
  call void @llvm.dbg.value(metadata i32 %3, metadata !16250, metadata !DIExpression()), !dbg !16252
  call void @llvm.dbg.value(metadata i32 undef, metadata !16248, metadata !DIExpression()), !dbg !16252
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !16258
  call void @llvm.dbg.value(metadata i32 %3, metadata !15732, metadata !DIExpression()) #25, !dbg !16261
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !16261
  call void @llvm.dbg.value(metadata i32 %3, metadata !15740, metadata !DIExpression()) #25, !dbg !16263
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16265, !srcloc !15746
  call void @llvm.dbg.value(metadata i32 1, metadata !16248, metadata !DIExpression()), !dbg !16252
  call void @llvm.dbg.value(metadata i32 undef, metadata !16248, metadata !DIExpression()), !dbg !16252
  ret void, !dbg !16266
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16267 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16269, metadata !DIExpression()), !dbg !16271
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !16272
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16274, !srcloc !15720
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16274
  call void @llvm.dbg.value(metadata i32 %3, metadata !15717, metadata !DIExpression()) #25, !dbg !16276
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !16276
  call void @llvm.dbg.value(metadata i32 %3, metadata !15711, metadata !DIExpression()) #25, !dbg !16272
  call void @llvm.dbg.value(metadata i32 %3, metadata !16270, metadata !DIExpression()), !dbg !16271
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !16277
  br i1 %4, label %5, label %6, !dbg !16279

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15732, metadata !DIExpression()) #25, !dbg !16280
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !16280
  call void @llvm.dbg.value(metadata i32 %3, metadata !15740, metadata !DIExpression()) #25, !dbg !16283
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16285, !srcloc !15746
  br label %8, !dbg !16286

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.274(%struct.k_thread* noundef %0) #26, !dbg !16287
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16288
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16289
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16289
  br label %8, !dbg !16290

8:                                                ; preds = %6, %5
  ret void, !dbg !16290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16291 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16293, metadata !DIExpression()), !dbg !16294
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16295
  %3 = load i8, i8* %2, align 1, !dbg !16295
  %4 = and i8 %3, 4, !dbg !16296
  %5 = icmp eq i8 %4, 0, !dbg !16297
  ret i1 %5, !dbg !16298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.274(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16299 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16301, metadata !DIExpression()), !dbg !16302
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16303
  %3 = load i8, i8* %2, align 1, !dbg !16304
  %4 = and i8 %3, -5, !dbg !16304
  store i8 %4, i8* %2, align 1, !dbg !16304
  ret void, !dbg !16305
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16306 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16309, metadata !DIExpression()), !dbg !16310
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16308, metadata !DIExpression()), !dbg !16310
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !16311
  br i1 %4, label %5, label %9, !dbg !16313

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !16314
  br i1 %6, label %7, label %9, !dbg !16315

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !16316, metadata !DIExpression()) #25, !dbg !16322
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16321, metadata !DIExpression()) #25, !dbg !16322
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !16325
  br label %10, !dbg !16326

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !15732, metadata !DIExpression()) #25, !dbg !16327
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !16327
  call void @llvm.dbg.value(metadata i32 %3, metadata !15740, metadata !DIExpression()) #25, !dbg !16330
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16332, !srcloc !15746
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !16333
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16334 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16338, metadata !DIExpression()), !dbg !16339
  call void @llvm.dbg.value(metadata i32 %0, metadata !16340, metadata !DIExpression()), !dbg !16345
  %2 = icmp eq i32 %0, 0, !dbg !16347
  br i1 %2, label %3, label %6, !dbg !16348

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16349, !srcloc !16356
  call void @llvm.dbg.value(metadata i32 %4, metadata !16352, metadata !DIExpression()) #25, !dbg !16357
  %5 = icmp eq i32 %4, 0, !dbg !16358
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16339
  ret i1 %7, !dbg !16359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !16360 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16363
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16362, metadata !DIExpression()), !dbg !16364
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16365
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16366
  ret i1 %3, !dbg !16367
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16370, metadata !DIExpression()), !dbg !16372
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !16373
  call void @llvm.dbg.value(metadata i32 %2, metadata !16371, metadata !DIExpression()), !dbg !16372
  ret i32 %2, !dbg !16374
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16375 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16377, metadata !DIExpression()), !dbg !16381
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16382
  call void @llvm.dbg.value(metadata i32 0, metadata !16378, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !16384
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16386, !srcloc !15720
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16386
  call void @llvm.dbg.value(metadata i32 %4, metadata !15717, metadata !DIExpression()) #25, !dbg !16388
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !16388
  call void @llvm.dbg.value(metadata i32 %4, metadata !15711, metadata !DIExpression()) #25, !dbg !16384
  call void @llvm.dbg.value(metadata i32 %4, metadata !16380, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.value(metadata i32 undef, metadata !16378, metadata !DIExpression()), !dbg !16383
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16389
  br i1 %5, label %6, label %10, !dbg !16393

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15874, metadata !DIExpression()) #25, !dbg !16394
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16397
  %8 = load i8, i8* %7, align 1, !dbg !16398
  %9 = and i8 %8, 127, !dbg !16398
  store i8 %9, i8* %7, align 1, !dbg !16398
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15882, metadata !DIExpression()) #25, !dbg !16399
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16401
  br label %10, !dbg !16402

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !16403
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16404
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !16405
  %13 = zext i1 %12 to i32, !dbg !16405
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !16406
  call void @llvm.dbg.value(metadata i32 %4, metadata !15732, metadata !DIExpression()) #25, !dbg !16407
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !16407
  call void @llvm.dbg.value(metadata i32 %4, metadata !15740, metadata !DIExpression()) #25, !dbg !16409
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16411, !srcloc !15746
  call void @llvm.dbg.value(metadata i32 1, metadata !16378, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.value(metadata i32 undef, metadata !16378, metadata !DIExpression()), !dbg !16383
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16412
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16414
  br i1 %15, label %16, label %17, !dbg !16415

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16416
  br label %17, !dbg !16418

17:                                               ; preds = %16, %10
  ret void, !dbg !16419
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16420 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16422, metadata !DIExpression()), !dbg !16423
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16424
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16425
  ret i32 %3, !dbg !16426
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16427 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16429, metadata !DIExpression()), !dbg !16430
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16431
  %3 = load i8, i8* %2, align 1, !dbg !16432
  %4 = or i8 %3, 16, !dbg !16432
  store i8 %4, i8* %2, align 1, !dbg !16432
  ret void, !dbg !16433
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16434 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16435, !srcloc !15720
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16435
  call void @llvm.dbg.value(metadata i32 %2, metadata !15717, metadata !DIExpression()) #25, !dbg !16437
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !16437
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !16438
  ret void, !dbg !16439
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16440 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16442, metadata !DIExpression()), !dbg !16443
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !16444
  br i1 %2, label %3, label %5, !dbg !16446

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16447
  br label %6, !dbg !16449

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15740, metadata !DIExpression()) #25, !dbg !16450
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !16453, !srcloc !15746
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16454
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16455 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16457, metadata !DIExpression()), !dbg !16459
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !16460
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16462, !srcloc !15720
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16462
  call void @llvm.dbg.value(metadata i32 %3, metadata !15717, metadata !DIExpression()) #25, !dbg !16464
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !16464
  call void @llvm.dbg.value(metadata i32 %3, metadata !15711, metadata !DIExpression()) #25, !dbg !16460
  call void @llvm.dbg.value(metadata i32 %3, metadata !16458, metadata !DIExpression()), !dbg !16459
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !16465
  br i1 %4, label %6, label %5, !dbg !16467

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15732, metadata !DIExpression()) #25, !dbg !16468
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !16468
  call void @llvm.dbg.value(metadata i32 %3, metadata !15740, metadata !DIExpression()) #25, !dbg !16471
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16473, !srcloc !15746
  br label %8, !dbg !16474

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16475
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16476
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16477
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16477
  br label %8, !dbg !16478

8:                                                ; preds = %6, %5
  ret void, !dbg !16478
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16479 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16481, metadata !DIExpression()), !dbg !16482
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16483
  %3 = load i8, i8* %2, align 1, !dbg !16483
  %4 = and i8 %3, 16, !dbg !16484
  %5 = icmp ne i8 %4, 0, !dbg !16485
  ret i1 %5, !dbg !16486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16487 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16489, metadata !DIExpression()), !dbg !16490
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16491
  %3 = load i8, i8* %2, align 1, !dbg !16492
  %4 = and i8 %3, -17, !dbg !16492
  store i8 %4, i8* %2, align 1, !dbg !16492
  ret void, !dbg !16493
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16494 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16504, metadata !DIExpression()), !dbg !16508
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16502, metadata !DIExpression()), !dbg !16508
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16503, metadata !DIExpression()), !dbg !16508
  call void @llvm.dbg.value(metadata i32 0, metadata !16505, metadata !DIExpression()), !dbg !16509
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !16510
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16512, !srcloc !15720
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !16512
  call void @llvm.dbg.value(metadata i32 %5, metadata !15717, metadata !DIExpression()) #25, !dbg !16514
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !16514
  call void @llvm.dbg.value(metadata i32 %5, metadata !15711, metadata !DIExpression()) #25, !dbg !16510
  call void @llvm.dbg.value(metadata i32 %5, metadata !16507, metadata !DIExpression()), !dbg !16509
  call void @llvm.dbg.value(metadata i32 undef, metadata !16505, metadata !DIExpression()), !dbg !16509
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !16515
  call void @llvm.dbg.value(metadata i32 %5, metadata !15732, metadata !DIExpression()) #25, !dbg !16518
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !16518
  call void @llvm.dbg.value(metadata i32 %5, metadata !15740, metadata !DIExpression()) #25, !dbg !16520
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !16522, !srcloc !15746
  call void @llvm.dbg.value(metadata i32 1, metadata !16505, metadata !DIExpression()), !dbg !16509
  call void @llvm.dbg.value(metadata i32 undef, metadata !16505, metadata !DIExpression()), !dbg !16509
  ret void, !dbg !16523
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16524 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16528, metadata !DIExpression()), !dbg !16529
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16526, metadata !DIExpression()), !dbg !16529
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16527, metadata !DIExpression()), !dbg !16529
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !16530
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !16531
  ret void, !dbg !16532
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !16533 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16537, metadata !DIExpression()), !dbg !16539
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16538, metadata !DIExpression()), !dbg !16539
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !16540
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !16541
  %3 = icmp eq %union.anon* %1, null, !dbg !16542
  br i1 %3, label %21, label %4, !dbg !16544

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16545
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !16547
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !16548
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !15905, metadata !DIExpression()) #25, !dbg !16549
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15911, metadata !DIExpression()) #25, !dbg !16549
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #27, !dbg !16551
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15912, metadata !DIExpression()) #25, !dbg !16549
  %8 = icmp eq %struct._dnode* %7, null, !dbg !16552
  br i1 %8, label %19, label %9, !dbg !16551

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15912, metadata !DIExpression()) #25, !dbg !16549
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !16553
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15912, metadata !DIExpression()) #25, !dbg !16549
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #27, !dbg !16554
  %13 = icmp sgt i32 %12, 0, !dbg !16555
  br i1 %13, label %14, label %16, !dbg !16556

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16557
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #27, !dbg !16558
  br label %21, !dbg !16559

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #27, !dbg !16552
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !15912, metadata !DIExpression()) #25, !dbg !16549
  %18 = icmp eq %struct._dnode* %17, null, !dbg !16552
  br i1 %18, label %19, label %9, !dbg !16551, !llvm.loop !16560

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16562
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #27, !dbg !16563
  br label %21, !dbg !16564

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !16565
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16566 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16571, metadata !DIExpression()), !dbg !16572
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16570, metadata !DIExpression()), !dbg !16572
  %4 = icmp eq i64 %3, -1, !dbg !16573
  br i1 %4, label %6, label %5, !dbg !16575

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.275(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !16576
  br label %6, !dbg !16578

6:                                                ; preds = %5, %2
  ret void, !dbg !16579
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.275(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16580 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16583, metadata !DIExpression()), !dbg !16584
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16582, metadata !DIExpression()), !dbg !16584
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16585
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !16586
  ret void, !dbg !16587
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16588 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16590, metadata !DIExpression()), !dbg !16598
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16599
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16599
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16591, metadata !DIExpression()), !dbg !16598
  call void @llvm.dbg.value(metadata i32 0, metadata !16592, metadata !DIExpression()), !dbg !16600
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !16601
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16603, !srcloc !15720
  call void @llvm.dbg.value(metadata i32 undef, metadata !15717, metadata !DIExpression()) #25, !dbg !16605
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !16605
  call void @llvm.dbg.value(metadata i32 undef, metadata !15711, metadata !DIExpression()) #25, !dbg !16601
  call void @llvm.dbg.value(metadata i32 undef, metadata !16594, metadata !DIExpression()), !dbg !16600
  call void @llvm.dbg.value(metadata i32 undef, metadata !16592, metadata !DIExpression()), !dbg !16600
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16606
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !16607
  %7 = load i8, i8* %6, align 1, !dbg !16607
  %8 = and i8 %7, 40, !dbg !16608
  %9 = icmp eq i8 %8, 0, !dbg !16608
  call void @llvm.dbg.value(metadata i1 %9, metadata !16595, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16609
  br i1 %9, label %10, label %17, !dbg !16610

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16611
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !16611
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !16611
  %14 = icmp eq %union.anon* %13, null, !dbg !16615
  br i1 %14, label %16, label %15, !dbg !16616

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !16617
  br label %16, !dbg !16619

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.274(%struct.k_thread* noundef nonnull %3) #26, !dbg !16620
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !16621
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !16622
  br label %17, !dbg !16623

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !16603
  call void @llvm.dbg.value(metadata i32 %18, metadata !15717, metadata !DIExpression()) #25, !dbg !16605
  call void @llvm.dbg.value(metadata i32 %18, metadata !15711, metadata !DIExpression()) #25, !dbg !16601
  call void @llvm.dbg.value(metadata i32 %18, metadata !16594, metadata !DIExpression()), !dbg !16600
  call void @llvm.dbg.value(metadata i32 undef, metadata !15732, metadata !DIExpression()) #25, !dbg !16624
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !16624
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !16626
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !16628, !srcloc !15746
  call void @llvm.dbg.value(metadata i32 1, metadata !16592, metadata !DIExpression()), !dbg !16600
  call void @llvm.dbg.value(metadata i32 undef, metadata !16592, metadata !DIExpression()), !dbg !16600
  ret void, !dbg !16629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16630 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16632, metadata !DIExpression()), !dbg !16633
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !16634
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !16635
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16636
  store %union.anon* null, %union.anon** %2, align 8, !dbg !16637
  ret void, !dbg !16638
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16639 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16641, metadata !DIExpression()), !dbg !16642
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16643
  %3 = load i8, i8* %2, align 1, !dbg !16644
  %4 = and i8 %3, -3, !dbg !16644
  store i8 %4, i8* %2, align 1, !dbg !16644
  ret void, !dbg !16645
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16646 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16648, metadata !DIExpression()), !dbg !16649
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16650
  br i1 %2, label %3, label %7, !dbg !16652

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15874, metadata !DIExpression()) #25, !dbg !16653
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16656
  %5 = load i8, i8* %4, align 1, !dbg !16657
  %6 = and i8 %5, 127, !dbg !16657
  store i8 %6, i8* %4, align 1, !dbg !16657
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15882, metadata !DIExpression()) #25, !dbg !16658
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16660
  br label %7, !dbg !16661

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16662
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16663
  %10 = zext i1 %9 to i32, !dbg !16663
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !16664
  ret void, !dbg !16665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16666 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16668, metadata !DIExpression()), !dbg !16669
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16670
  %3 = load i8, i8* %2, align 1, !dbg !16671
  %4 = or i8 %3, 2, !dbg !16671
  store i8 %4, i8* %2, align 1, !dbg !16671
  ret void, !dbg !16672
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #24 !dbg !16673 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16675, metadata !DIExpression()), !dbg !16679
  call void @llvm.dbg.value(metadata i32 0, metadata !16676, metadata !DIExpression()), !dbg !16680
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !16681
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16683, !srcloc !15720
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16683
  call void @llvm.dbg.value(metadata i32 %3, metadata !15717, metadata !DIExpression()) #25, !dbg !16685
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !16685
  call void @llvm.dbg.value(metadata i32 %3, metadata !15711, metadata !DIExpression()) #25, !dbg !16681
  call void @llvm.dbg.value(metadata i32 %3, metadata !16678, metadata !DIExpression()), !dbg !16680
  call void @llvm.dbg.value(metadata i32 undef, metadata !16676, metadata !DIExpression()), !dbg !16680
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !16686
  call void @llvm.dbg.value(metadata i32 %3, metadata !15732, metadata !DIExpression()) #25, !dbg !16689
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !16689
  call void @llvm.dbg.value(metadata i32 %3, metadata !15740, metadata !DIExpression()) #25, !dbg !16691
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16693, !srcloc !15746
  call void @llvm.dbg.value(metadata i32 1, metadata !16676, metadata !DIExpression()), !dbg !16680
  call void @llvm.dbg.value(metadata i32 undef, metadata !16676, metadata !DIExpression()), !dbg !16680
  ret void, !dbg !16694
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16695 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16701, metadata !DIExpression()), !dbg !16706
  call void @llvm.dbg.value(metadata i32 %0, metadata !16699, metadata !DIExpression()), !dbg !16706
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16700, metadata !DIExpression()), !dbg !16706
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16707
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !16708
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16709
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16710
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16711
  call void @llvm.dbg.value(metadata i32 %6, metadata !16702, metadata !DIExpression()), !dbg !16706
  call void @llvm.dbg.value(metadata i32 0, metadata !16703, metadata !DIExpression()), !dbg !16712
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !16713
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16715, !srcloc !15720
  call void @llvm.dbg.value(metadata i32 undef, metadata !15717, metadata !DIExpression()) #25, !dbg !16717
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !16717
  call void @llvm.dbg.value(metadata i32 undef, metadata !15711, metadata !DIExpression()) #25, !dbg !16713
  call void @llvm.dbg.value(metadata i32 undef, metadata !16705, metadata !DIExpression()), !dbg !16712
  call void @llvm.dbg.value(metadata i32 undef, metadata !16703, metadata !DIExpression()), !dbg !16712
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16718
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16722
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !16723
  br i1 %10, label %11, label %12, !dbg !16724

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16725
  br label %12, !dbg !16727

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !16715
  call void @llvm.dbg.value(metadata i32 %13, metadata !15717, metadata !DIExpression()) #25, !dbg !16717
  call void @llvm.dbg.value(metadata i32 %13, metadata !15711, metadata !DIExpression()) #25, !dbg !16713
  call void @llvm.dbg.value(metadata i32 %13, metadata !16705, metadata !DIExpression()), !dbg !16712
  call void @llvm.dbg.value(metadata i32 undef, metadata !15732, metadata !DIExpression()) #25, !dbg !16728
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !16728
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !16730
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !16732, !srcloc !15746
  call void @llvm.dbg.value(metadata i32 1, metadata !16703, metadata !DIExpression()), !dbg !16712
  call void @llvm.dbg.value(metadata i32 undef, metadata !16703, metadata !DIExpression()), !dbg !16712
  ret i32 %6, !dbg !16733
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16734 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16739, metadata !DIExpression()), !dbg !16742
  call void @llvm.dbg.value(metadata i64 undef, metadata !16741, metadata !DIExpression()), !dbg !16742
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16738, metadata !DIExpression()), !dbg !16742
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16740, metadata !DIExpression()), !dbg !16742
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16743
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16744
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !16745
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16747, !srcloc !15720
  call void @llvm.dbg.value(metadata i32 undef, metadata !15717, metadata !DIExpression()) #25, !dbg !16749
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !16749
  call void @llvm.dbg.value(metadata i32 undef, metadata !15711, metadata !DIExpression()) #25, !dbg !16745
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16750
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !16751
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !16316, metadata !DIExpression()) #25, !dbg !16752
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16321, metadata !DIExpression()) #25, !dbg !16752
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #27, !dbg !16754
  ret i32 %9, !dbg !16755
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16756 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16760, metadata !DIExpression()), !dbg !16765
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16761, metadata !DIExpression()), !dbg !16765
  call void @llvm.dbg.value(metadata i32 0, metadata !16762, metadata !DIExpression()), !dbg !16766
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !16767
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16769, !srcloc !15720
  call void @llvm.dbg.value(metadata i32 undef, metadata !15717, metadata !DIExpression()) #25, !dbg !16771
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !16771
  call void @llvm.dbg.value(metadata i32 undef, metadata !15711, metadata !DIExpression()) #25, !dbg !16767
  call void @llvm.dbg.value(metadata i32 undef, metadata !16764, metadata !DIExpression()), !dbg !16766
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16761, metadata !DIExpression()), !dbg !16765
  call void @llvm.dbg.value(metadata i32 undef, metadata !16762, metadata !DIExpression()), !dbg !16766
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16772
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16761, metadata !DIExpression()), !dbg !16765
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16775
  br i1 %5, label %7, label %6, !dbg !16777

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16778
  br label %7, !dbg !16780

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16769
  call void @llvm.dbg.value(metadata i32 %8, metadata !15717, metadata !DIExpression()) #25, !dbg !16771
  call void @llvm.dbg.value(metadata i32 %8, metadata !15711, metadata !DIExpression()) #25, !dbg !16767
  call void @llvm.dbg.value(metadata i32 %8, metadata !16764, metadata !DIExpression()), !dbg !16766
  call void @llvm.dbg.value(metadata i32 undef, metadata !15732, metadata !DIExpression()) #25, !dbg !16781
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !16781
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !16783
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !16785, !srcloc !15746
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16761, metadata !DIExpression()), !dbg !16765
  call void @llvm.dbg.value(metadata i32 undef, metadata !16762, metadata !DIExpression()), !dbg !16766
  ret %struct.k_thread* %4, !dbg !16786
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16787 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16789, metadata !DIExpression()), !dbg !16794
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16790, metadata !DIExpression()), !dbg !16794
  call void @llvm.dbg.value(metadata i32 0, metadata !16791, metadata !DIExpression()), !dbg !16795
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !16796
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16798, !srcloc !15720
  call void @llvm.dbg.value(metadata i32 undef, metadata !15717, metadata !DIExpression()) #25, !dbg !16800
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !16800
  call void @llvm.dbg.value(metadata i32 undef, metadata !15711, metadata !DIExpression()) #25, !dbg !16796
  call void @llvm.dbg.value(metadata i32 undef, metadata !16793, metadata !DIExpression()), !dbg !16795
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16790, metadata !DIExpression()), !dbg !16794
  call void @llvm.dbg.value(metadata i32 undef, metadata !16791, metadata !DIExpression()), !dbg !16795
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16801
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16790, metadata !DIExpression()), !dbg !16794
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16804
  br i1 %5, label %8, label %6, !dbg !16806

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16807
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16809
  br label %8, !dbg !16810

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16798
  call void @llvm.dbg.value(metadata i32 %9, metadata !15717, metadata !DIExpression()) #25, !dbg !16800
  call void @llvm.dbg.value(metadata i32 %9, metadata !15711, metadata !DIExpression()) #25, !dbg !16796
  call void @llvm.dbg.value(metadata i32 %9, metadata !16793, metadata !DIExpression()), !dbg !16795
  call void @llvm.dbg.value(metadata i32 undef, metadata !15732, metadata !DIExpression()) #25, !dbg !16811
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !16811
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !16813
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16815, !srcloc !15746
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16790, metadata !DIExpression()), !dbg !16794
  call void @llvm.dbg.value(metadata i32 undef, metadata !16791, metadata !DIExpression()), !dbg !16795
  ret %struct.k_thread* %4, !dbg !16816
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16817 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16819, metadata !DIExpression()), !dbg !16820
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16675, metadata !DIExpression()) #25, !dbg !16821
  call void @llvm.dbg.value(metadata i32 0, metadata !16676, metadata !DIExpression()) #25, !dbg !16823
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !16824
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16826, !srcloc !15720
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16826
  call void @llvm.dbg.value(metadata i32 %3, metadata !15717, metadata !DIExpression()) #25, !dbg !16828
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !16828
  call void @llvm.dbg.value(metadata i32 %3, metadata !15711, metadata !DIExpression()) #25, !dbg !16824
  call void @llvm.dbg.value(metadata i32 %3, metadata !16678, metadata !DIExpression()) #25, !dbg !16823
  call void @llvm.dbg.value(metadata i32 undef, metadata !16676, metadata !DIExpression()) #25, !dbg !16823
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !16829
  call void @llvm.dbg.value(metadata i32 %3, metadata !15732, metadata !DIExpression()) #25, !dbg !16830
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !16830
  call void @llvm.dbg.value(metadata i32 %3, metadata !15740, metadata !DIExpression()) #25, !dbg !16832
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16834, !srcloc !15746
  call void @llvm.dbg.value(metadata i32 1, metadata !16676, metadata !DIExpression()) #25, !dbg !16823
  call void @llvm.dbg.value(metadata i32 undef, metadata !16676, metadata !DIExpression()) #25, !dbg !16823
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16835
  ret void, !dbg !16836
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16837 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16839, metadata !DIExpression()), !dbg !16845
  call void @llvm.dbg.value(metadata i32 %1, metadata !16840, metadata !DIExpression()), !dbg !16845
  call void @llvm.dbg.value(metadata i8 0, metadata !16841, metadata !DIExpression()), !dbg !16845
  call void @llvm.dbg.value(metadata i32 0, metadata !16842, metadata !DIExpression()), !dbg !16846
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !16847
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16849, !srcloc !15720
  call void @llvm.dbg.value(metadata i32 undef, metadata !15717, metadata !DIExpression()) #25, !dbg !16851
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !16851
  call void @llvm.dbg.value(metadata i32 undef, metadata !15711, metadata !DIExpression()) #25, !dbg !16847
  call void @llvm.dbg.value(metadata i32 undef, metadata !16844, metadata !DIExpression()), !dbg !16846
  call void @llvm.dbg.value(metadata i8 poison, metadata !16841, metadata !DIExpression()), !dbg !16845
  call void @llvm.dbg.value(metadata i32 undef, metadata !16842, metadata !DIExpression()), !dbg !16846
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !16852
  call void @llvm.dbg.value(metadata i1 %6, metadata !16841, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16845
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !16855

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15874, metadata !DIExpression()) #25, !dbg !16856
  %11 = load i8, i8* %4, align 1, !dbg !16862
  %12 = and i8 %11, 127, !dbg !16862
  store i8 %12, i8* %4, align 1, !dbg !16862
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15882, metadata !DIExpression()) #25, !dbg !16863
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16865
  store i8 %9, i8* %8, align 2, !dbg !16866
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15891, metadata !DIExpression()) #25, !dbg !16867
  %13 = load i8, i8* %4, align 1, !dbg !16869
  %14 = or i8 %13, -128, !dbg !16869
  store i8 %14, i8* %4, align 1, !dbg !16869
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15898, metadata !DIExpression()) #25, !dbg !16870
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15905, metadata !DIExpression()) #25, !dbg !16872
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15911, metadata !DIExpression()) #25, !dbg !16872
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16874
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !15912, metadata !DIExpression()) #25, !dbg !16872
  %16 = icmp eq %struct._dnode* %15, null, !dbg !16875
  br i1 %16, label %26, label %17, !dbg !16874

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !15912, metadata !DIExpression()) #25, !dbg !16872
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !16876
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !15912, metadata !DIExpression()) #25, !dbg !16872
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #27, !dbg !16877
  %21 = icmp sgt i32 %20, 0, !dbg !16878
  br i1 %21, label %22, label %23, !dbg !16879

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #27, !dbg !16880
  br label %27, !dbg !16881

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #27, !dbg !16875
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15912, metadata !DIExpression()) #25, !dbg !16872
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16875
  br i1 %25, label %26, label %17, !dbg !16874, !llvm.loop !16882

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #27, !dbg !16884
  br label %27, !dbg !16885

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16886
  br label %29, !dbg !16887

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !16888
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !16849
  call void @llvm.dbg.value(metadata i32 %30, metadata !15717, metadata !DIExpression()) #25, !dbg !16851
  call void @llvm.dbg.value(metadata i32 %30, metadata !15711, metadata !DIExpression()) #25, !dbg !16847
  call void @llvm.dbg.value(metadata i32 %30, metadata !16844, metadata !DIExpression()), !dbg !16846
  call void @llvm.dbg.value(metadata i32 undef, metadata !15732, metadata !DIExpression()) #25, !dbg !16890
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !16890
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !16892
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !16894, !srcloc !15746
  call void @llvm.dbg.value(metadata i8 poison, metadata !16841, metadata !DIExpression()), !dbg !16845
  call void @llvm.dbg.value(metadata i32 undef, metadata !16842, metadata !DIExpression()), !dbg !16846
  ret i1 %6, !dbg !16895
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16896 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16900, metadata !DIExpression()), !dbg !16903
  call void @llvm.dbg.value(metadata i32 %1, metadata !16901, metadata !DIExpression()), !dbg !16903
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16904
  call void @llvm.dbg.value(metadata i1 %3, metadata !16902, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16903
  br i1 %3, label %4, label %12, !dbg !16905

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16907
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16908
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16908
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16908
  %9 = load i8, i8* %8, align 1, !dbg !16908
  %10 = icmp eq i8 %9, 0, !dbg !16909
  br i1 %10, label %11, label %12, !dbg !16910

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16911
  br label %12, !dbg !16913

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16914
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16915 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16917, metadata !DIExpression()), !dbg !16920
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !16921
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16923, !srcloc !15720
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16923
  call void @llvm.dbg.value(metadata i32 %2, metadata !15717, metadata !DIExpression()) #25, !dbg !16925
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !16925
  call void @llvm.dbg.value(metadata i32 %2, metadata !15711, metadata !DIExpression()) #25, !dbg !16921
  call void @llvm.dbg.value(metadata i32 %2, metadata !16919, metadata !DIExpression()), !dbg !16920
  call void @llvm.dbg.value(metadata i32 undef, metadata !16917, metadata !DIExpression()), !dbg !16920
  tail call fastcc void @z_sched_lock() #26, !dbg !16926
  call void @llvm.dbg.value(metadata i32 %2, metadata !15732, metadata !DIExpression()) #25, !dbg !16929
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !16929
  call void @llvm.dbg.value(metadata i32 %2, metadata !15740, metadata !DIExpression()) #25, !dbg !16931
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16933, !srcloc !15746
  call void @llvm.dbg.value(metadata i32 1, metadata !16917, metadata !DIExpression()), !dbg !16920
  call void @llvm.dbg.value(metadata i32 undef, metadata !16917, metadata !DIExpression()), !dbg !16920
  ret void, !dbg !16934
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16935 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16936
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16937
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !16937
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !16937
  %5 = load i8, i8* %4, align 1, !dbg !16938
  %6 = add i8 %5, -1, !dbg !16938
  store i8 %6, i8* %4, align 1, !dbg !16938
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !16939, !srcloc !16941
  ret void, !dbg !16942
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16943 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16945, metadata !DIExpression()), !dbg !16948
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !16949
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16951, !srcloc !15720
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16951
  call void @llvm.dbg.value(metadata i32 %2, metadata !15717, metadata !DIExpression()) #25, !dbg !16953
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !16953
  call void @llvm.dbg.value(metadata i32 %2, metadata !15711, metadata !DIExpression()) #25, !dbg !16949
  call void @llvm.dbg.value(metadata i32 %2, metadata !16947, metadata !DIExpression()), !dbg !16948
  call void @llvm.dbg.value(metadata i32 undef, metadata !16945, metadata !DIExpression()), !dbg !16948
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16954
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !16957
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !16957
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !16957
  %7 = load i8, i8* %6, align 1, !dbg !16958
  %8 = add i8 %7, 1, !dbg !16958
  store i8 %8, i8* %6, align 1, !dbg !16958
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16959
  call void @llvm.dbg.value(metadata i32 %2, metadata !15732, metadata !DIExpression()) #25, !dbg !16960
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !16960
  call void @llvm.dbg.value(metadata i32 %2, metadata !15740, metadata !DIExpression()) #25, !dbg !16962
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16964, !srcloc !15746
  call void @llvm.dbg.value(metadata i32 1, metadata !16945, metadata !DIExpression()), !dbg !16948
  call void @llvm.dbg.value(metadata i32 undef, metadata !16945, metadata !DIExpression()), !dbg !16948
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16965
  ret void, !dbg !16966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !16967 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16968
  ret %struct.k_thread* %1, !dbg !16969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !16970 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16974, metadata !DIExpression()), !dbg !16979
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16975, metadata !DIExpression()), !dbg !16979
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16980
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16976, metadata !DIExpression()), !dbg !16979
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16981
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16977, metadata !DIExpression()), !dbg !16979
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !16982
  call void @llvm.dbg.value(metadata i32 %5, metadata !16978, metadata !DIExpression()), !dbg !16979
  %6 = icmp sgt i32 %5, 0, !dbg !16983
  br i1 %6, label %17, label %7, !dbg !16985

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16986
  br i1 %8, label %17, label %9, !dbg !16988

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16989
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16989
  %12 = load i32, i32* %11, align 8, !dbg !16989
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16991
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16991
  %15 = load i32, i32* %14, align 8, !dbg !16991
  %16 = icmp ult i32 %12, %15, !dbg !16992
  br label %17, !dbg !16993

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16994
  ret i1 %18, !dbg !16995
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16996 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17013, metadata !DIExpression()), !dbg !17028
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17014, metadata !DIExpression()), !dbg !17028
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17029
  %5 = load i32, i32* %4, align 4, !dbg !17030
  %6 = add nsw i32 %5, 1, !dbg !17030
  store i32 %6, i32* %4, align 4, !dbg !17030
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !17031
  store i32 %5, i32* %7, align 8, !dbg !17032
  %8 = load i32, i32* %4, align 4, !dbg !17033
  %9 = icmp eq i32 %8, 0, !dbg !17034
  br i1 %9, label %10, label %32, !dbg !17035

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !17036
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !17036
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !17016, metadata !DIExpression()), !dbg !17036
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17036
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !17036
  %14 = load i32, i32* %13, align 4, !dbg !17036
  %15 = shl i32 %14, 2, !dbg !17036
  %16 = alloca i8, i32 %15, align 8, !dbg !17036
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !17036
  store i8* %16, i8** %17, align 4, !dbg !17036
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !17036
  %19 = alloca i8, i32 %14, align 8, !dbg !17036
  store i8* %19, i8** %18, align 4, !dbg !17036
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !17036
  store i32 -1, i32* %20, align 4, !dbg !17036
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17037
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !17025, metadata !DIExpression()), !dbg !17038
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !17015, metadata !DIExpression()), !dbg !17028
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !17039
  br i1 %22, label %23, label %24, !dbg !17036

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !17039
  br label %32, !dbg !17040

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !17015, metadata !DIExpression()), !dbg !17028
  %26 = load i32, i32* %4, align 4, !dbg !17041
  %27 = add nsw i32 %26, 1, !dbg !17041
  store i32 %27, i32* %4, align 4, !dbg !17041
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !17043
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !17043
  store i32 %26, i32* %29, align 8, !dbg !17044
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17037
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !17025, metadata !DIExpression()), !dbg !17038
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !17015, metadata !DIExpression()), !dbg !17028
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !17039
  br i1 %31, label %23, label %24, !dbg !17036, !llvm.loop !17045

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17047
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17048
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #27, !dbg !17049
  ret void, !dbg !17050
}

; Function Attrs: optsize
declare !dbg !17051 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !17056 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17059 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17061, metadata !DIExpression()), !dbg !17063
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17062, metadata !DIExpression()), !dbg !17063
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17064
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17065
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #27, !dbg !17066
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !17067
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !17067
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !17069
  br i1 %7, label %8, label %10, !dbg !17070

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17071
  store i32 0, i32* %9, align 4, !dbg !17073
  br label %10, !dbg !17074

10:                                               ; preds = %8, %2
  ret void, !dbg !17075
}

; Function Attrs: optsize
declare !dbg !17076 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !17077 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17081, metadata !DIExpression()), !dbg !17084
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17082, metadata !DIExpression()), !dbg !17084
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17085
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !17086
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !17083, metadata !DIExpression()), !dbg !17084
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17082, metadata !DIExpression()), !dbg !17084
  ret %struct.k_thread* %4, !dbg !17087
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !17088 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !17092, metadata !DIExpression()), !dbg !17093
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !17094
  ret %struct.rbnode* %2, !dbg !17095
}

; Function Attrs: optsize
declare !dbg !17096 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !17099 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !17111, metadata !DIExpression()), !dbg !17115
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !17116
  %3 = load i32, i32* %2, align 4, !dbg !17116
  %4 = icmp eq i32 %3, 0, !dbg !17118
  br i1 %4, label %10, label %5, !dbg !17119

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17112, metadata !DIExpression()), !dbg !17115
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !17120, !range !9429
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !17121
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !17113, metadata !DIExpression()), !dbg !17115
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !17122
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !17114, metadata !DIExpression()), !dbg !17115
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17112, metadata !DIExpression()), !dbg !17115
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !17115
  ret %struct.k_thread* %11, !dbg !17123
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17124 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17128, metadata !DIExpression()), !dbg !17131
  call void @llvm.dbg.value(metadata i32 0, metadata !17129, metadata !DIExpression()), !dbg !17131
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17132
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17130, metadata !DIExpression()), !dbg !17131
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17133
  br i1 %3, label %8, label %4, !dbg !17134

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17135
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17137
  call void @llvm.dbg.value(metadata i32 1, metadata !17129, metadata !DIExpression()), !dbg !17131
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17132
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17130, metadata !DIExpression()), !dbg !17131
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17133
  br i1 %7, label %8, label %4, !dbg !17134, !llvm.loop !17138

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !17131
  ret i32 %9, !dbg !17140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #10 !dbg !17141 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17143, metadata !DIExpression()), !dbg !17144
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17145
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !17146
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17147
  ret %struct.k_thread* %4, !dbg !17148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #9 !dbg !17149 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !17158, metadata !DIExpression()), !dbg !17159
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !17160
  tail call fastcc void @sys_dlist_init.282(%struct._dnode* noundef nonnull %2) #26, !dbg !17161
  ret void, !dbg !17162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.282(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17163 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17167, metadata !DIExpression()), !dbg !17168
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17169
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17170
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17171
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17172
  ret void, !dbg !17173
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !17174 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !17175
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !17176
  ret void, !dbg !17177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !17178 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17183, metadata !DIExpression()), !dbg !17184
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !17185
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !17185
  %4 = load i8, i8* %3, align 2, !dbg !17185
  %5 = sext i8 %4 to i32, !dbg !17186
  ret i32 %5, !dbg !17187
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17188 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17192, metadata !DIExpression()), !dbg !17195
  call void @llvm.dbg.value(metadata i32 %1, metadata !17193, metadata !DIExpression()), !dbg !17195
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17194, metadata !DIExpression()), !dbg !17195
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !17196
  ret void, !dbg !17197
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !17198 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !17199
  br i1 %1, label %8, label %2, !dbg !17200

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !17201
  br i1 %3, label %8, label %4, !dbg !17202

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17203
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !17204
  %7 = xor i1 %6, true, !dbg !17202
  br label %8, !dbg !17202

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !17205
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !17206 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !17207, !range !8618
  %2 = icmp eq i8 %1, 0, !dbg !17207
  ret i1 %2, !dbg !17208
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !17209 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !17212
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17214, !srcloc !15720
  call void @llvm.dbg.value(metadata i32 undef, metadata !15717, metadata !DIExpression()) #25, !dbg !17216
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !17216
  call void @llvm.dbg.value(metadata i32 undef, metadata !15711, metadata !DIExpression()) #25, !dbg !17212
  call void @llvm.dbg.value(metadata i32 undef, metadata !17211, metadata !DIExpression()), !dbg !17217
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17218
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15874, metadata !DIExpression()) #25, !dbg !17221
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !17223
  %4 = load i8, i8* %3, align 1, !dbg !17224
  %5 = and i8 %4, 127, !dbg !17224
  store i8 %5, i8* %3, align 1, !dbg !17224
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15882, metadata !DIExpression()) #25, !dbg !17225
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #27, !dbg !17227
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17228
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15891, metadata !DIExpression()) #25, !dbg !17229
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !17231
  %8 = load i8, i8* %7, align 1, !dbg !17232
  %9 = or i8 %8, -128, !dbg !17232
  store i8 %9, i8* %7, align 1, !dbg !17232
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15898, metadata !DIExpression()) #25, !dbg !17233
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15905, metadata !DIExpression()) #25, !dbg !17235
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15911, metadata !DIExpression()) #25, !dbg !17235
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17237
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15912, metadata !DIExpression()) #25, !dbg !17235
  %11 = icmp eq %struct._dnode* %10, null, !dbg !17238
  br i1 %11, label %22, label %12, !dbg !17237

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !15912, metadata !DIExpression()) #25, !dbg !17235
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !17239
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15912, metadata !DIExpression()) #25, !dbg !17235
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #27, !dbg !17240
  %16 = icmp sgt i32 %15, 0, !dbg !17241
  br i1 %16, label %17, label %19, !dbg !17242

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17243
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !17244
  br label %24, !dbg !17245

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #27, !dbg !17238
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15912, metadata !DIExpression()) #25, !dbg !17235
  %21 = icmp eq %struct._dnode* %20, null, !dbg !17238
  br i1 %21, label %22, label %12, !dbg !17237, !llvm.loop !17246

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17248
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #27, !dbg !17249
  br label %24, !dbg !17250

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !17214
  call void @llvm.dbg.value(metadata i32 %25, metadata !15717, metadata !DIExpression()) #25, !dbg !17216
  call void @llvm.dbg.value(metadata i32 %25, metadata !15711, metadata !DIExpression()) #25, !dbg !17212
  call void @llvm.dbg.value(metadata i32 %25, metadata !17211, metadata !DIExpression()), !dbg !17217
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17251
  call void @llvm.dbg.value(metadata i32 undef, metadata !16316, metadata !DIExpression()) #25, !dbg !17252
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16321, metadata !DIExpression()) #25, !dbg !17252
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #27, !dbg !17254
  ret void, !dbg !17255
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !17256 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17260, metadata !DIExpression()), !dbg !17263
  %3 = icmp eq i64 %2, -1, !dbg !17264
  br i1 %3, label %4, label %6, !dbg !17266

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17267
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !17269
  br label %11, !dbg !17270

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17261, metadata !DIExpression()), !dbg !17263
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !17271
  %8 = sext i32 %7 to i64, !dbg !17271
  call void @llvm.dbg.value(metadata i64 %8, metadata !17261, metadata !DIExpression()), !dbg !17263
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !17272
  %10 = trunc i64 %9 to i32, !dbg !17272
  call void @llvm.dbg.value(metadata i32 %10, metadata !17262, metadata !DIExpression()), !dbg !17263
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !17263
  ret i32 %12, !dbg !17273
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17274 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17278, metadata !DIExpression()), !dbg !17279
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17280, !srcloc !17282
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !17283
  ret void, !dbg !17284
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17285 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17289, metadata !DIExpression()), !dbg !17293
  %2 = icmp eq i64 %0, 0, !dbg !17294
  br i1 %2, label %3, label %4, !dbg !17296

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !17297
  br label %29, !dbg !17299

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !17291, metadata !DIExpression()), !dbg !17293
  %5 = icmp sgt i64 %0, -3, !dbg !17300
  br i1 %5, label %6, label %10, !dbg !17302

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17303
  %8 = trunc i64 %0 to i32, !dbg !17305
  %9 = add i32 %7, %8, !dbg !17305
  call void @llvm.dbg.value(metadata i32 %9, metadata !17290, metadata !DIExpression()), !dbg !17293
  br label %13, !dbg !17306

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !17307
  %12 = sub i32 -2, %11, !dbg !17307
  call void @llvm.dbg.value(metadata i32 %12, metadata !17290, metadata !DIExpression()), !dbg !17293
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !17309
  call void @llvm.dbg.value(metadata i32 %14, metadata !17290, metadata !DIExpression()), !dbg !17293
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !17310
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17312, !srcloc !15720
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !17312
  call void @llvm.dbg.value(metadata i32 %16, metadata !15717, metadata !DIExpression()) #25, !dbg !17314
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !17314
  call void @llvm.dbg.value(metadata i32 %16, metadata !15711, metadata !DIExpression()) #25, !dbg !17310
  call void @llvm.dbg.value(metadata i32 %16, metadata !17292, metadata !DIExpression()), !dbg !17293
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17315
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !17316
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !17317
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17318
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17319
  tail call fastcc void @z_add_thread_timeout.275(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !17319
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17320
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !17321
  call void @llvm.dbg.value(metadata i32 %16, metadata !16316, metadata !DIExpression()) #25, !dbg !17322
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16321, metadata !DIExpression()) #25, !dbg !17322
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #27, !dbg !17324
  %22 = zext i32 %14 to i64, !dbg !17325
  %23 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17326
  %24 = zext i32 %23 to i64, !dbg !17326
  %25 = sub nsw i64 %22, %24, !dbg !17327
  call void @llvm.dbg.value(metadata i64 %25, metadata !17289, metadata !DIExpression()), !dbg !17293
  %26 = icmp sgt i64 %25, 0, !dbg !17328
  %27 = select i1 %26, i64 %25, i64 0, !dbg !17328
  %28 = trunc i64 %27 to i32, !dbg !17328
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !17293
  ret i32 %30, !dbg !17329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #3 !dbg !17330 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17332, metadata !DIExpression()), !dbg !17333
  call void @llvm.dbg.value(metadata i64 %0, metadata !15752, metadata !DIExpression()), !dbg !17334
  call void @llvm.dbg.value(metadata i32 10000, metadata !15755, metadata !DIExpression()), !dbg !17334
  call void @llvm.dbg.value(metadata i32 1000, metadata !15756, metadata !DIExpression()), !dbg !17334
  call void @llvm.dbg.value(metadata i8 1, metadata !15757, metadata !DIExpression()), !dbg !17334
  call void @llvm.dbg.value(metadata i1 false, metadata !15758, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17334
  call void @llvm.dbg.value(metadata i1 false, metadata !15759, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17334
  call void @llvm.dbg.value(metadata i8 0, metadata !15760, metadata !DIExpression()), !dbg !17334
  call void @llvm.dbg.value(metadata i1 false, metadata !15761, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17334
  call void @llvm.dbg.value(metadata i1 true, metadata !15762, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17334
  call void @llvm.dbg.value(metadata i64 0, metadata !15763, metadata !DIExpression()), !dbg !17334
  call void @llvm.dbg.value(metadata i64 0, metadata !15763, metadata !DIExpression()), !dbg !17334
  call void @llvm.dbg.value(metadata i64 %0, metadata !15752, metadata !DIExpression()), !dbg !17334
  %2 = udiv i64 %0, 10, !dbg !17336
  ret i64 %2, !dbg !17340
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17341 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17342, !srcloc !17344
  tail call void @z_impl_k_yield() #26, !dbg !17345
  ret void, !dbg !17346
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17347 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17351, metadata !DIExpression()), !dbg !17353
  %2 = sext i32 %0 to i64, !dbg !17354
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !17355
  call void @llvm.dbg.value(metadata i64 %3, metadata !17352, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17353
  %4 = shl i64 %3, 32, !dbg !17356
  %5 = ashr exact i64 %4, 32, !dbg !17356
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !17357
  call void @llvm.dbg.value(metadata i32 %6, metadata !17352, metadata !DIExpression()), !dbg !17353
  %7 = sext i32 %6 to i64, !dbg !17358
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !17359
  %9 = trunc i64 %8 to i32, !dbg !17359
  ret i32 %9, !dbg !17360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !17361 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17363, metadata !DIExpression()), !dbg !17364
  call void @llvm.dbg.value(metadata i64 %0, metadata !15752, metadata !DIExpression()), !dbg !17365
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15755, metadata !DIExpression()), !dbg !17365
  call void @llvm.dbg.value(metadata i32 10000, metadata !15756, metadata !DIExpression()), !dbg !17365
  call void @llvm.dbg.value(metadata i8 1, metadata !15757, metadata !DIExpression()), !dbg !17365
  call void @llvm.dbg.value(metadata i1 false, metadata !15758, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17365
  call void @llvm.dbg.value(metadata i1 true, metadata !15759, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17365
  call void @llvm.dbg.value(metadata i8 0, metadata !15760, metadata !DIExpression()), !dbg !17365
  call void @llvm.dbg.value(metadata i1 false, metadata !15761, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17365
  call void @llvm.dbg.value(metadata i1 true, metadata !15762, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17365
  call void @llvm.dbg.value(metadata i64 0, metadata !15763, metadata !DIExpression()), !dbg !17365
  call void @llvm.dbg.value(metadata i64 0, metadata !15763, metadata !DIExpression()), !dbg !17365
  %2 = add i64 %0, 99, !dbg !17367
  call void @llvm.dbg.value(metadata i64 %2, metadata !15752, metadata !DIExpression()), !dbg !17365
  %3 = udiv i64 %2, 100, !dbg !17368
  ret i64 %3, !dbg !17369
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #3 !dbg !17370 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17372, metadata !DIExpression()), !dbg !17373
  call void @llvm.dbg.value(metadata i64 %0, metadata !15752, metadata !DIExpression()), !dbg !17374
  call void @llvm.dbg.value(metadata i32 10000, metadata !15755, metadata !DIExpression()), !dbg !17374
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15756, metadata !DIExpression()), !dbg !17374
  call void @llvm.dbg.value(metadata i8 1, metadata !15757, metadata !DIExpression()), !dbg !17374
  call void @llvm.dbg.value(metadata i1 false, metadata !15758, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17374
  call void @llvm.dbg.value(metadata i1 false, metadata !15759, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17374
  call void @llvm.dbg.value(metadata i8 0, metadata !15760, metadata !DIExpression()), !dbg !17374
  call void @llvm.dbg.value(metadata i1 true, metadata !15761, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17374
  call void @llvm.dbg.value(metadata i1 false, metadata !15762, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17374
  call void @llvm.dbg.value(metadata i64 0, metadata !15763, metadata !DIExpression()), !dbg !17374
  call void @llvm.dbg.value(metadata i64 0, metadata !15763, metadata !DIExpression()), !dbg !17374
  %2 = mul i64 %0, 100, !dbg !17376
  ret i64 %2, !dbg !17378
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17379 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17381, metadata !DIExpression()), !dbg !17382
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !17383
  br i1 %2, label %14, label %3, !dbg !17385

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !17386
  %5 = icmp slt i32 %4, 0, !dbg !17388
  br i1 %5, label %6, label %10, !dbg !17389

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17390
  %8 = load i8, i8* %7, align 1, !dbg !17390
  %9 = icmp eq i8 %8, 16, !dbg !17393
  br i1 %9, label %10, label %14, !dbg !17394

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !17395
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !17396
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17397, !srcloc !16356
  call void @llvm.dbg.value(metadata i32 %11, metadata !16352, metadata !DIExpression()) #25, !dbg !17401
  %12 = icmp eq i32 %11, 0, !dbg !17402
  br i1 %12, label %13, label %14, !dbg !17403

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17404
  br label %14, !dbg !17406

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17407
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17408 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17410, metadata !DIExpression()), !dbg !17411
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17412
  %3 = load i8, i8* %2, align 1, !dbg !17412
  %4 = and i8 %3, 2, !dbg !17413
  %5 = icmp ne i8 %4, 0, !dbg !17414
  ret i1 %5, !dbg !17415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !17416 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17421
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17420, metadata !DIExpression()), !dbg !17422
  ret %struct.k_thread* %1, !dbg !17423
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17424 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17425, !srcloc !16356
  call void @llvm.dbg.value(metadata i32 %1, metadata !16352, metadata !DIExpression()) #25, !dbg !17428
  %2 = icmp eq i32 %1, 0, !dbg !17429
  br i1 %2, label %3, label %8, !dbg !17430

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17431
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !17432
  %6 = icmp ne i32 %5, 0, !dbg !17430
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17433
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17434 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17436, metadata !DIExpression()), !dbg !17438
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !17439
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17441, !srcloc !15720
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17441
  call void @llvm.dbg.value(metadata i32 %3, metadata !15717, metadata !DIExpression()) #25, !dbg !17443
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !17443
  call void @llvm.dbg.value(metadata i32 %3, metadata !15711, metadata !DIExpression()) #25, !dbg !17439
  call void @llvm.dbg.value(metadata i32 %3, metadata !17437, metadata !DIExpression()), !dbg !17438
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17444
  %5 = load i8, i8* %4, align 4, !dbg !17444
  %6 = and i8 %5, 1, !dbg !17446
  %7 = icmp eq i8 %6, 0, !dbg !17447
  br i1 %7, label %9, label %8, !dbg !17448

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15732, metadata !DIExpression()) #25, !dbg !17449
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !17449
  call void @llvm.dbg.value(metadata i32 %3, metadata !15740, metadata !DIExpression()) #25, !dbg !17452
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17454, !srcloc !15746
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !17455, !srcloc !17457
  br label %24, !dbg !17458

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17459
  %11 = load i8, i8* %10, align 1, !dbg !17459
  %12 = and i8 %11, 8, !dbg !17461
  %13 = icmp eq i8 %12, 0, !dbg !17462
  br i1 %13, label %15, label %14, !dbg !17463

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !15732, metadata !DIExpression()) #25, !dbg !17464
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !17464
  call void @llvm.dbg.value(metadata i32 %3, metadata !15740, metadata !DIExpression()) #25, !dbg !17467
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17469, !srcloc !15746
  br label %24, !dbg !17470

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !17471
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17472
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !17474
  br i1 %17, label %18, label %23, !dbg !17475

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17476, !srcloc !16356
  call void @llvm.dbg.value(metadata i32 %19, metadata !16352, metadata !DIExpression()) #25, !dbg !17479
  %20 = icmp eq i32 %19, 0, !dbg !17480
  br i1 %20, label %21, label %23, !dbg !17481

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !16316, metadata !DIExpression()) #25, !dbg !17482
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16321, metadata !DIExpression()) #25, !dbg !17482
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !17485
  br label %23, !dbg !17486

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !15732, metadata !DIExpression()) #25, !dbg !17487
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !17487
  call void @llvm.dbg.value(metadata i32 %3, metadata !15740, metadata !DIExpression()) #25, !dbg !17489
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17491, !srcloc !15746
  br label %24, !dbg !17492

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !17492
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17493 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17495, metadata !DIExpression()), !dbg !17496
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17497
  %3 = load i8, i8* %2, align 1, !dbg !17497
  %4 = and i8 %3, 8, !dbg !17499
  %5 = icmp eq i8 %4, 0, !dbg !17500
  br i1 %5, label %6, label %20, !dbg !17501

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !17502
  %8 = or i8 %7, 8, !dbg !17502
  store i8 %8, i8* %2, align 1, !dbg !17502
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !17504
  br i1 %9, label %10, label %12, !dbg !17506

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15874, metadata !DIExpression()) #25, !dbg !17507
  %11 = and i8 %8, 95, !dbg !17510
  store i8 %11, i8* %2, align 1, !dbg !17510
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15882, metadata !DIExpression()) #25, !dbg !17511
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !17513
  br label %12, !dbg !17514

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17515
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !17515
  %15 = icmp eq %union.anon* %14, null, !dbg !17517
  br i1 %15, label %17, label %16, !dbg !17518

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17519
  br label %17, !dbg !17521

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17522
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17523
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !17524
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17525
  br label %20, !dbg !17526

20:                                               ; preds = %17, %1
  ret void, !dbg !17527
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !17528 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17532, metadata !DIExpression()), !dbg !17534
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17535
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17533, metadata !DIExpression()), !dbg !17534
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17536
  br i1 %3, label %10, label %4, !dbg !17537

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17538
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17540
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17541, metadata !DIExpression()), !dbg !17547
  call void @llvm.dbg.value(metadata i32 0, metadata !17546, metadata !DIExpression()), !dbg !17547
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !17549
  store i32 0, i32* %7, align 4, !dbg !17550
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17551
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17535
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17533, metadata !DIExpression()), !dbg !17534
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17536
  br i1 %9, label %10, label %4, !dbg !17537, !llvm.loop !17552

10:                                               ; preds = %4, %1
  ret void, !dbg !17554
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !17555 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17560, metadata !DIExpression()), !dbg !17563
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17559, metadata !DIExpression()), !dbg !17563
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !17564
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17566, !srcloc !15720
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17566
  call void @llvm.dbg.value(metadata i32 %4, metadata !15717, metadata !DIExpression()) #25, !dbg !17568
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !17568
  call void @llvm.dbg.value(metadata i32 %4, metadata !15711, metadata !DIExpression()) #25, !dbg !17564
  call void @llvm.dbg.value(metadata i32 %4, metadata !17561, metadata !DIExpression()), !dbg !17563
  call void @llvm.dbg.value(metadata i32 0, metadata !17562, metadata !DIExpression()), !dbg !17563
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17569
  %6 = load i8, i8* %5, align 1, !dbg !17569
  %7 = and i8 %6, 8, !dbg !17571
  %8 = icmp eq i8 %7, 0, !dbg !17572
  br i1 %8, label %9, label %24, !dbg !17573

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !17560, metadata !DIExpression()), !dbg !17563
  %11 = icmp eq i64 %10, 0, !dbg !17574
  br i1 %11, label %24, label %12, !dbg !17576

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17577
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !17579
  br i1 %14, label %24, label %15, !dbg !17580

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17581
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !17581
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !17582
  %19 = icmp eq %union.anon* %17, %18, !dbg !17583
  br i1 %19, label %24, label %20, !dbg !17584

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17585
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !17587
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17588
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !17589
  call void @llvm.dbg.value(metadata i32 %4, metadata !16316, metadata !DIExpression()) #25, !dbg !17590
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16321, metadata !DIExpression()) #25, !dbg !17590
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #27, !dbg !17592
  call void @llvm.dbg.value(metadata i32 %23, metadata !17562, metadata !DIExpression()), !dbg !17563
  br label %26, !dbg !17593

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !17594
  call void @llvm.dbg.value(metadata i32 %25, metadata !17562, metadata !DIExpression()), !dbg !17563
  call void @llvm.dbg.value(metadata i32 %4, metadata !15732, metadata !DIExpression()) #25, !dbg !17595
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !17595
  call void @llvm.dbg.value(metadata i32 %4, metadata !15740, metadata !DIExpression()) #25, !dbg !17597
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !17599, !srcloc !15746
  br label %26, !dbg !17600

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !17563
  ret i32 %27, !dbg !17601
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !17602 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17606, metadata !DIExpression()), !dbg !17614
  call void @llvm.dbg.value(metadata i32 %1, metadata !17607, metadata !DIExpression()), !dbg !17614
  call void @llvm.dbg.value(metadata i8* %2, metadata !17608, metadata !DIExpression()), !dbg !17614
  call void @llvm.dbg.value(metadata i8 0, metadata !17610, metadata !DIExpression()), !dbg !17614
  call void @llvm.dbg.value(metadata i32 0, metadata !17611, metadata !DIExpression()), !dbg !17615
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15705, metadata !DIExpression()) #25, !dbg !17616
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17618, !srcloc !15720
  call void @llvm.dbg.value(metadata i32 undef, metadata !15717, metadata !DIExpression()) #25, !dbg !17620
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()) #25, !dbg !17620
  call void @llvm.dbg.value(metadata i32 undef, metadata !15711, metadata !DIExpression()) #25, !dbg !17616
  call void @llvm.dbg.value(metadata i32 undef, metadata !17613, metadata !DIExpression()), !dbg !17615
  call void @llvm.dbg.value(metadata i8 poison, metadata !17610, metadata !DIExpression()), !dbg !17614
  call void @llvm.dbg.value(metadata i32 undef, metadata !17611, metadata !DIExpression()), !dbg !17615
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !17621
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17609, metadata !DIExpression()), !dbg !17614
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17624
  br i1 %7, label %12, label %8, !dbg !17626

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17627, metadata !DIExpression()), !dbg !17635
  call void @llvm.dbg.value(metadata i32 %1, metadata !17633, metadata !DIExpression()), !dbg !17635
  call void @llvm.dbg.value(metadata i8* %2, metadata !17634, metadata !DIExpression()), !dbg !17635
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17541, metadata !DIExpression()), !dbg !17638
  call void @llvm.dbg.value(metadata i32 %1, metadata !17546, metadata !DIExpression()), !dbg !17638
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !17640
  store i32 %1, i32* %9, align 4, !dbg !17641
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !17642
  store i8* %2, i8** %10, align 4, !dbg !17643
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17644
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17645
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !17646
  call void @llvm.dbg.value(metadata i8 1, metadata !17610, metadata !DIExpression()), !dbg !17614
  br label %12, !dbg !17647

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !17618
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !17618
  call void @llvm.dbg.value(metadata i32 %14, metadata !15717, metadata !DIExpression()) #25, !dbg !17620
  call void @llvm.dbg.value(metadata i32 %14, metadata !15711, metadata !DIExpression()) #25, !dbg !17616
  call void @llvm.dbg.value(metadata i32 %14, metadata !17613, metadata !DIExpression()), !dbg !17615
  call void @llvm.dbg.value(metadata i8 poison, metadata !17610, metadata !DIExpression()), !dbg !17614
  call void @llvm.dbg.value(metadata i32 undef, metadata !15732, metadata !DIExpression()) #25, !dbg !17648
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15737, metadata !DIExpression()) #25, !dbg !17648
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !17650
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !17652, !srcloc !15746
  call void @llvm.dbg.value(metadata i32 undef, metadata !17611, metadata !DIExpression()), !dbg !17615
  ret i1 %13, !dbg !17653
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !17654 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17660, metadata !DIExpression()), !dbg !17665
  call void @llvm.dbg.value(metadata i64 undef, metadata !17662, metadata !DIExpression()), !dbg !17665
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17659, metadata !DIExpression()), !dbg !17665
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !17661, metadata !DIExpression()), !dbg !17665
  call void @llvm.dbg.value(metadata i8** %4, metadata !17663, metadata !DIExpression()), !dbg !17665
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !17666
  call void @llvm.dbg.value(metadata i32 %6, metadata !17664, metadata !DIExpression()), !dbg !17665
  %7 = icmp eq i8** %4, null, !dbg !17667
  br i1 %7, label %12, label %8, !dbg !17669

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17670
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17672
  %11 = load i8*, i8** %10, align 4, !dbg !17672
  store i8* %11, i8** %4, align 4, !dbg !17673
  br label %12, !dbg !17674

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !17675
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !17676 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !17678
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !17679
  ret void, !dbg !17680
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17681 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17691, metadata !DIExpression()), !dbg !17708
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17689, metadata !DIExpression()), !dbg !17708
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17690, metadata !DIExpression()), !dbg !17708
  %5 = icmp eq i64 %4, -1, !dbg !17709
  br i1 %5, label %55, label %6, !dbg !17711

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17712
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !17713
  call void @llvm.dbg.value(metadata i32 0, metadata !17692, metadata !DIExpression()), !dbg !17714
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17715, metadata !DIExpression()) #25, !dbg !17722
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17724, !srcloc !17730
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !17724
  call void @llvm.dbg.value(metadata i32 %9, metadata !17727, metadata !DIExpression()) #25, !dbg !17731
  call void @llvm.dbg.value(metadata i32 undef, metadata !17728, metadata !DIExpression()) #25, !dbg !17731
  call void @llvm.dbg.value(metadata i32 %9, metadata !17721, metadata !DIExpression()) #25, !dbg !17722
  call void @llvm.dbg.value(metadata i32 %9, metadata !17698, metadata !DIExpression()), !dbg !17714
  call void @llvm.dbg.value(metadata i32 undef, metadata !17692, metadata !DIExpression()), !dbg !17714
  %10 = icmp slt i64 %4, -1, !dbg !17732
  br i1 %10, label %11, label %17, !dbg !17733

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !17734
  %13 = add i64 %4, %12, !dbg !17735
  %14 = sub i64 -2, %13, !dbg !17735
  call void @llvm.dbg.value(metadata i64 %14, metadata !17702, metadata !DIExpression()), !dbg !17736
  %15 = icmp sgt i64 %14, 1, !dbg !17737
  %16 = select i1 %15, i64 %14, i64 1, !dbg !17737
  br label %22, !dbg !17738

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !17739
  %19 = tail call fastcc i32 @elapsed.293() #26, !dbg !17741
  %20 = sext i32 %19 to i64, !dbg !17741
  %21 = add nsw i64 %18, %20, !dbg !17742
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !17743
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17744
  store i64 %23, i64* %24, align 8, !dbg !17745
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !17746
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !17699, metadata !DIExpression()), !dbg !17748
  %26 = icmp eq %struct._timeout* %25, null, !dbg !17749
  br i1 %26, label %42, label %27, !dbg !17749

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !17750
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !17699, metadata !DIExpression()), !dbg !17748
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17754
  %31 = load i64, i64* %30, align 8, !dbg !17754
  %32 = icmp slt i64 %28, %31, !dbg !17755
  br i1 %32, label %33, label %38, !dbg !17756

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17754
  %35 = sub nsw i64 %31, %28, !dbg !17757
  store i64 %35, i64* %34, align 8, !dbg !17757
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !17759
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17760
  tail call fastcc void @sys_dlist_insert.294(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !17761
  br label %44, !dbg !17762

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !17763
  store i64 %39, i64* %24, align 8, !dbg !17763
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !17764
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !17699, metadata !DIExpression()), !dbg !17748
  %41 = icmp eq %struct._timeout* %40, null, !dbg !17749
  br i1 %41, label %42, label %27, !dbg !17749, !llvm.loop !17765

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17767
  tail call fastcc void @sys_dlist_append.295(%struct._dnode* noundef %43) #26, !dbg !17770
  br label %44, !dbg !17771

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !17772
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !17773
  br i1 %46, label %47, label %54, !dbg !17774

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !17775
  call void @llvm.dbg.value(metadata i32 %48, metadata !17705, metadata !DIExpression()), !dbg !17776
  %49 = icmp ne i32 %48, 0, !dbg !17777
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !17779
  br i1 %52, label %54, label %53, !dbg !17779

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #27, !dbg !17780
  br label %54, !dbg !17782

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !17783, metadata !DIExpression()) #25, !dbg !17789
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17788, metadata !DIExpression()) #25, !dbg !17789
  call void @llvm.dbg.value(metadata i32 %9, metadata !17791, metadata !DIExpression()) #25, !dbg !17794
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17796, !srcloc !17797
  call void @llvm.dbg.value(metadata i32 undef, metadata !17692, metadata !DIExpression()), !dbg !17714
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !17798
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.293() unnamed_addr #1 !dbg !17799 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17802
  %2 = icmp eq i32 %1, 0, !dbg !17803
  br i1 %2, label %3, label %5, !dbg !17802

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !17804
  br label %5, !dbg !17802

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17802
  ret i32 %6, !dbg !17805
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !17806 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.298() #26, !dbg !17812
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17810, metadata !DIExpression()), !dbg !17813
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17814
  ret %struct._timeout* %2, !dbg !17815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.294(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !17816 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17820, metadata !DIExpression()), !dbg !17824
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17821, metadata !DIExpression()), !dbg !17824
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17825
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17825
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17822, metadata !DIExpression()), !dbg !17824
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17826
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17827
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17828
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17829
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17830
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17831
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17832
  ret void, !dbg !17833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !17834 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17838, metadata !DIExpression()), !dbg !17840
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17841
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.296(%struct._dnode* noundef %2) #26, !dbg !17842
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17839, metadata !DIExpression()), !dbg !17840
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17843
  ret %struct._timeout* %4, !dbg !17844
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.295(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !17845 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17850, metadata !DIExpression()), !dbg !17853
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17851, metadata !DIExpression()), !dbg !17853
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17854
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17852, metadata !DIExpression()), !dbg !17853
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17855
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17856
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17857
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17858
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17859
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17860
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17861
  ret void, !dbg !17862
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17863 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !17868
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17865, metadata !DIExpression()), !dbg !17869
  %2 = tail call fastcc i32 @elapsed.293() #26, !dbg !17870
  call void @llvm.dbg.value(metadata i32 %2, metadata !17866, metadata !DIExpression()), !dbg !17869
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17871
  br i1 %3, label %14, label %4, !dbg !17873

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17874
  %6 = load i64, i64* %5, align 8, !dbg !17874
  %7 = sext i32 %2 to i64, !dbg !17875
  %8 = sub nsw i64 %6, %7, !dbg !17876
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17877
  br i1 %9, label %14, label %10, !dbg !17878

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17879
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17879
  %13 = trunc i64 %12 to i32, !dbg !17879
  call void @llvm.dbg.value(metadata i32 %13, metadata !17867, metadata !DIExpression()), !dbg !17869
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17881
  call void @llvm.dbg.value(metadata i32 %15, metadata !17867, metadata !DIExpression()), !dbg !17869
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17882
  %17 = icmp ne i32 %16, 0, !dbg !17884
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17885
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17885
  call void @llvm.dbg.value(metadata i32 %20, metadata !17867, metadata !DIExpression()), !dbg !17869
  ret i32 %20, !dbg !17886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.296(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17887 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17891, metadata !DIExpression()), !dbg !17893
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17892, metadata !DIExpression()), !dbg !17893
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17894
  br i1 %2, label %5, label %3, !dbg !17895

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.297(%struct._dnode* noundef nonnull %0) #26, !dbg !17896
  br label %5, !dbg !17895

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17895
  ret %struct._dnode* %6, !dbg !17897
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.297(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17898 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17900, metadata !DIExpression()), !dbg !17902
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17901, metadata !DIExpression()), !dbg !17902
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17903
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17904
  br i1 %3, label %7, label %4, !dbg !17905

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17906
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17906
  br label %7, !dbg !17905

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17905
  ret %struct._dnode* %8, !dbg !17907
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.298() unnamed_addr #10 !dbg !17908 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17912, metadata !DIExpression()), !dbg !17913
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.299() #26, !dbg !17914
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17914
  ret %struct._dnode* %3, !dbg !17915
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.299() unnamed_addr #10 !dbg !17916 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17920, metadata !DIExpression()), !dbg !17921
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17922
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17923
  ret i1 %2, !dbg !17924
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17925 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17929, metadata !DIExpression()), !dbg !17934
  call void @llvm.dbg.value(metadata i32 -22, metadata !17930, metadata !DIExpression()), !dbg !17934
  call void @llvm.dbg.value(metadata i32 0, metadata !17931, metadata !DIExpression()), !dbg !17935
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17715, metadata !DIExpression()) #25, !dbg !17936
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17938, !srcloc !17730
  call void @llvm.dbg.value(metadata i32 undef, metadata !17727, metadata !DIExpression()) #25, !dbg !17940
  call void @llvm.dbg.value(metadata i32 undef, metadata !17728, metadata !DIExpression()) #25, !dbg !17940
  call void @llvm.dbg.value(metadata i32 undef, metadata !17721, metadata !DIExpression()) #25, !dbg !17936
  call void @llvm.dbg.value(metadata i32 undef, metadata !17933, metadata !DIExpression()), !dbg !17935
  call void @llvm.dbg.value(metadata i32 -22, metadata !17930, metadata !DIExpression()), !dbg !17934
  call void @llvm.dbg.value(metadata i32 undef, metadata !17931, metadata !DIExpression()), !dbg !17935
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17930, metadata !DIExpression()), !dbg !17934
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.302(%struct._dnode* noundef %3) #26, !dbg !17941
  br i1 %4, label %5, label %6, !dbg !17945

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !17946
  call void @llvm.dbg.value(metadata i32 0, metadata !17930, metadata !DIExpression()), !dbg !17934
  br label %6, !dbg !17948

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !17934
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !17938
  call void @llvm.dbg.value(metadata i32 %8, metadata !17727, metadata !DIExpression()) #25, !dbg !17940
  call void @llvm.dbg.value(metadata i32 %8, metadata !17721, metadata !DIExpression()) #25, !dbg !17936
  call void @llvm.dbg.value(metadata i32 %8, metadata !17933, metadata !DIExpression()), !dbg !17935
  call void @llvm.dbg.value(metadata i32 %7, metadata !17930, metadata !DIExpression()), !dbg !17934
  call void @llvm.dbg.value(metadata i32 undef, metadata !17783, metadata !DIExpression()) #25, !dbg !17949
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17788, metadata !DIExpression()) #25, !dbg !17949
  call void @llvm.dbg.value(metadata i32 undef, metadata !17791, metadata !DIExpression()) #25, !dbg !17951
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !17953, !srcloc !17797
  call void @llvm.dbg.value(metadata i32 undef, metadata !17931, metadata !DIExpression()), !dbg !17935
  ret i32 %7, !dbg !17954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.302(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17955 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17961, metadata !DIExpression()), !dbg !17962
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17963
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17963
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17964
  ret i1 %4, !dbg !17965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !17966 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17968, metadata !DIExpression()), !dbg !17969
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !17970
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17972
  br i1 %3, label %10, label %4, !dbg !17973

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17974
  %6 = load i64, i64* %5, align 8, !dbg !17974
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17976
  %8 = load i64, i64* %7, align 8, !dbg !17977
  %9 = add nsw i64 %8, %6, !dbg !17977
  store i64 %9, i64* %7, align 8, !dbg !17977
  br label %10, !dbg !17978

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17979
  tail call fastcc void @sys_dlist_remove.303(%struct._dnode* noundef %11) #26, !dbg !17980
  ret void, !dbg !17981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.303(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !17982 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17986, metadata !DIExpression()), !dbg !17989
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17990
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17990
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17987, metadata !DIExpression()), !dbg !17989
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17991
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17991
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17988, metadata !DIExpression()), !dbg !17989
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17992
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17993
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17994
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17995
  tail call fastcc void @sys_dnode_init.304(%struct._dnode* noundef %0) #26, !dbg !17996
  ret void, !dbg !17997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.304(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !17998 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18000, metadata !DIExpression()), !dbg !18001
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18002
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !18003
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18004
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !18005
  ret void, !dbg !18006
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18007 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18013, metadata !DIExpression()), !dbg !18018
  call void @llvm.dbg.value(metadata i64 0, metadata !18014, metadata !DIExpression()), !dbg !18018
  call void @llvm.dbg.value(metadata i32 0, metadata !18015, metadata !DIExpression()), !dbg !18019
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17715, metadata !DIExpression()) #25, !dbg !18020
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18022, !srcloc !17730
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18022
  call void @llvm.dbg.value(metadata i32 %3, metadata !17727, metadata !DIExpression()) #25, !dbg !18024
  call void @llvm.dbg.value(metadata i32 undef, metadata !17728, metadata !DIExpression()) #25, !dbg !18024
  call void @llvm.dbg.value(metadata i32 %3, metadata !17721, metadata !DIExpression()) #25, !dbg !18020
  call void @llvm.dbg.value(metadata i32 %3, metadata !18017, metadata !DIExpression()), !dbg !18019
  call void @llvm.dbg.value(metadata i64 0, metadata !18014, metadata !DIExpression()), !dbg !18018
  call void @llvm.dbg.value(metadata i32 undef, metadata !18015, metadata !DIExpression()), !dbg !18019
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !18025
  call void @llvm.dbg.value(metadata i64 %4, metadata !18014, metadata !DIExpression()), !dbg !18018
  call void @llvm.dbg.value(metadata i32 %3, metadata !17783, metadata !DIExpression()) #25, !dbg !18028
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17788, metadata !DIExpression()) #25, !dbg !18028
  call void @llvm.dbg.value(metadata i32 %3, metadata !17791, metadata !DIExpression()) #25, !dbg !18030
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !18032, !srcloc !17797
  call void @llvm.dbg.value(metadata i32 undef, metadata !18015, metadata !DIExpression()), !dbg !18019
  ret i64 %4, !dbg !18033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !18034 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18036, metadata !DIExpression()), !dbg !18040
  call void @llvm.dbg.value(metadata i64 0, metadata !18037, metadata !DIExpression()), !dbg !18040
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.305(%struct._timeout* noundef %0) #26, !dbg !18041
  br i1 %2, label %21, label %3, !dbg !18043

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !18044
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !18038, metadata !DIExpression()), !dbg !18045
  call void @llvm.dbg.value(metadata i64 0, metadata !18037, metadata !DIExpression()), !dbg !18040
  %5 = icmp eq %struct._timeout* %4, null, !dbg !18046
  br i1 %5, label %16, label %6, !dbg !18048

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !18038, metadata !DIExpression()), !dbg !18045
  call void @llvm.dbg.value(metadata i64 %8, metadata !18037, metadata !DIExpression()), !dbg !18040
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !18049
  %10 = load i64, i64* %9, align 8, !dbg !18049
  %11 = add nsw i64 %10, %8, !dbg !18051
  call void @llvm.dbg.value(metadata i64 %11, metadata !18037, metadata !DIExpression()), !dbg !18040
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !18052
  br i1 %12, label %16, label %13, !dbg !18054

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !18055
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !18038, metadata !DIExpression()), !dbg !18045
  call void @llvm.dbg.value(metadata i64 %11, metadata !18037, metadata !DIExpression()), !dbg !18040
  %15 = icmp eq %struct._timeout* %14, null, !dbg !18046
  br i1 %15, label %16, label %6, !dbg !18048, !llvm.loop !18056

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !18040
  call void @llvm.dbg.value(metadata i64 %17, metadata !18037, metadata !DIExpression()), !dbg !18040
  %18 = tail call fastcc i32 @elapsed.293() #26, !dbg !18058
  %19 = sext i32 %18 to i64, !dbg !18058
  %20 = sub nsw i64 %17, %19, !dbg !18059
  br label %21, !dbg !18060

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !18040
  ret i64 %22, !dbg !18061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.305(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18062 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18066, metadata !DIExpression()), !dbg !18067
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18068
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.302(%struct._dnode* noundef %2) #26, !dbg !18069
  %4 = xor i1 %3, true, !dbg !18070
  ret i1 %4, !dbg !18071
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18072 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18074, metadata !DIExpression()), !dbg !18079
  call void @llvm.dbg.value(metadata i64 0, metadata !18075, metadata !DIExpression()), !dbg !18079
  call void @llvm.dbg.value(metadata i32 0, metadata !18076, metadata !DIExpression()), !dbg !18080
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17715, metadata !DIExpression()) #25, !dbg !18081
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18083, !srcloc !17730
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18083
  call void @llvm.dbg.value(metadata i32 %3, metadata !17727, metadata !DIExpression()) #25, !dbg !18085
  call void @llvm.dbg.value(metadata i32 undef, metadata !17728, metadata !DIExpression()) #25, !dbg !18085
  call void @llvm.dbg.value(metadata i32 %3, metadata !17721, metadata !DIExpression()) #25, !dbg !18081
  call void @llvm.dbg.value(metadata i32 %3, metadata !18078, metadata !DIExpression()), !dbg !18080
  call void @llvm.dbg.value(metadata i64 0, metadata !18075, metadata !DIExpression()), !dbg !18079
  call void @llvm.dbg.value(metadata i32 undef, metadata !18076, metadata !DIExpression()), !dbg !18080
  %4 = load i64, i64* @curr_tick, align 8, !dbg !18086
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !18089
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !18075, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18079
  call void @llvm.dbg.value(metadata i32 %3, metadata !17783, metadata !DIExpression()) #25, !dbg !18090
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17788, metadata !DIExpression()) #25, !dbg !18090
  call void @llvm.dbg.value(metadata i32 %3, metadata !17791, metadata !DIExpression()) #25, !dbg !18092
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !18094, !srcloc !17797
  call void @llvm.dbg.value(metadata i32 undef, metadata !18076, metadata !DIExpression()), !dbg !18080
  %6 = add i64 %5, %4, !dbg !18095
  ret i64 %6, !dbg !18096
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !18097 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !18099, metadata !DIExpression()), !dbg !18103
  call void @llvm.dbg.value(metadata i32 0, metadata !18100, metadata !DIExpression()), !dbg !18104
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17715, metadata !DIExpression()) #25, !dbg !18105
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18107, !srcloc !17730
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18107
  call void @llvm.dbg.value(metadata i32 %2, metadata !17727, metadata !DIExpression()) #25, !dbg !18109
  call void @llvm.dbg.value(metadata i32 undef, metadata !17728, metadata !DIExpression()) #25, !dbg !18109
  call void @llvm.dbg.value(metadata i32 %2, metadata !17721, metadata !DIExpression()) #25, !dbg !18105
  call void @llvm.dbg.value(metadata i32 %2, metadata !18102, metadata !DIExpression()), !dbg !18104
  call void @llvm.dbg.value(metadata i32 -1, metadata !18099, metadata !DIExpression()), !dbg !18103
  call void @llvm.dbg.value(metadata i32 undef, metadata !18100, metadata !DIExpression()), !dbg !18104
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !18110
  call void @llvm.dbg.value(metadata i32 %3, metadata !18099, metadata !DIExpression()), !dbg !18103
  call void @llvm.dbg.value(metadata i32 %2, metadata !17783, metadata !DIExpression()) #25, !dbg !18113
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17788, metadata !DIExpression()) #25, !dbg !18113
  call void @llvm.dbg.value(metadata i32 %2, metadata !17791, metadata !DIExpression()) #25, !dbg !18115
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !18117, !srcloc !17797
  call void @llvm.dbg.value(metadata i32 undef, metadata !18100, metadata !DIExpression()), !dbg !18104
  ret i32 %3, !dbg !18118
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !18119 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18121, metadata !DIExpression()), !dbg !18131
  call void @llvm.dbg.value(metadata i1 %1, metadata !18122, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18131
  call void @llvm.dbg.value(metadata i32 0, metadata !18123, metadata !DIExpression()), !dbg !18132
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17715, metadata !DIExpression()) #25, !dbg !18133
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18135, !srcloc !17730
  call void @llvm.dbg.value(metadata i32 undef, metadata !17727, metadata !DIExpression()) #25, !dbg !18137
  call void @llvm.dbg.value(metadata i32 undef, metadata !17728, metadata !DIExpression()) #25, !dbg !18137
  call void @llvm.dbg.value(metadata i32 undef, metadata !17721, metadata !DIExpression()) #25, !dbg !18133
  call void @llvm.dbg.value(metadata i32 undef, metadata !18125, metadata !DIExpression()), !dbg !18132
  call void @llvm.dbg.value(metadata i32 undef, metadata !18123, metadata !DIExpression()), !dbg !18132
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !18138
  call void @llvm.dbg.value(metadata i32 %4, metadata !18126, metadata !DIExpression()), !dbg !18139
  call void @llvm.dbg.value(metadata i1 undef, metadata !18129, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18139
  %5 = icmp slt i32 %4, 2, !dbg !18140
  call void @llvm.dbg.value(metadata i1 %5, metadata !18130, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18139
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !18141
  call void @llvm.dbg.value(metadata i1 %6, metadata !18129, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18139
  br i1 %7, label %11, label %8, !dbg !18141

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !18143
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !18143
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #27, !dbg !18145
  br label %11, !dbg !18146

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !18135
  call void @llvm.dbg.value(metadata i32 %12, metadata !17727, metadata !DIExpression()) #25, !dbg !18137
  call void @llvm.dbg.value(metadata i32 %12, metadata !17721, metadata !DIExpression()) #25, !dbg !18133
  call void @llvm.dbg.value(metadata i32 %12, metadata !18125, metadata !DIExpression()), !dbg !18132
  call void @llvm.dbg.value(metadata i32 undef, metadata !17783, metadata !DIExpression()) #25, !dbg !18147
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17788, metadata !DIExpression()) #25, !dbg !18147
  call void @llvm.dbg.value(metadata i32 undef, metadata !17791, metadata !DIExpression()) #25, !dbg !18149
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !18151, !srcloc !17797
  call void @llvm.dbg.value(metadata i32 1, metadata !18123, metadata !DIExpression()), !dbg !18132
  call void @llvm.dbg.value(metadata i32 undef, metadata !18123, metadata !DIExpression()), !dbg !18132
  ret void, !dbg !18152
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !18153 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18157, metadata !DIExpression()), !dbg !18162
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !18163
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17715, metadata !DIExpression()) #25, !dbg !18164
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18166, !srcloc !17730
  call void @llvm.dbg.value(metadata i32 undef, metadata !17727, metadata !DIExpression()) #25, !dbg !18168
  call void @llvm.dbg.value(metadata i32 undef, metadata !17728, metadata !DIExpression()) #25, !dbg !18168
  call void @llvm.dbg.value(metadata i32 undef, metadata !17721, metadata !DIExpression()) #25, !dbg !18164
  call void @llvm.dbg.value(metadata i32 undef, metadata !18158, metadata !DIExpression()), !dbg !18162
  store i32 %0, i32* @announce_remaining, align 4, !dbg !18162
  call void @llvm.dbg.value(metadata i32 undef, metadata !18158, metadata !DIExpression()), !dbg !18162
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !18169
  %4 = icmp eq %struct._timeout* %3, null, !dbg !18170
  br i1 %4, label %28, label %5, !dbg !18171

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !18172
  %10 = load i64, i64* %9, align 8, !dbg !18172
  %11 = sext i32 %8 to i64, !dbg !18173
  %12 = icmp sgt i64 %10, %11, !dbg !18174
  br i1 %12, label %26, label %13, !dbg !18175

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !18162
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !18159, metadata !DIExpression()), !dbg !18176
  %15 = trunc i64 %10 to i32, !dbg !18177
  call void @llvm.dbg.value(metadata i32 %15, metadata !18161, metadata !DIExpression()), !dbg !18176
  %16 = sext i32 %15 to i64, !dbg !18178
  %17 = load i64, i64* @curr_tick, align 8, !dbg !18179
  %18 = add i64 %17, %16, !dbg !18179
  store i64 %18, i64* @curr_tick, align 8, !dbg !18179
  store i64 0, i64* %9, align 8, !dbg !18180
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !18181
  call void @llvm.dbg.value(metadata i32 %14, metadata !17783, metadata !DIExpression()) #25, !dbg !18182
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17788, metadata !DIExpression()) #25, !dbg !18182
  call void @llvm.dbg.value(metadata i32 %14, metadata !17791, metadata !DIExpression()) #25, !dbg !18184
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !18186, !srcloc !17797
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !18187
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !18187
  tail call void %20(%struct._timeout* noundef nonnull %6) #27, !dbg !18188
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17715, metadata !DIExpression()) #25, !dbg !18189
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18191, !srcloc !17730
  call void @llvm.dbg.value(metadata i32 undef, metadata !17727, metadata !DIExpression()) #25, !dbg !18193
  call void @llvm.dbg.value(metadata i32 undef, metadata !17728, metadata !DIExpression()) #25, !dbg !18193
  call void @llvm.dbg.value(metadata i32 undef, metadata !17721, metadata !DIExpression()) #25, !dbg !18189
  call void @llvm.dbg.value(metadata i32 undef, metadata !18158, metadata !DIExpression()), !dbg !18162
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !18194
  %23 = sub nsw i32 %22, %15, !dbg !18194
  store i32 %23, i32* @announce_remaining, align 4, !dbg !18162
  call void @llvm.dbg.value(metadata i32 undef, metadata !18158, metadata !DIExpression()), !dbg !18162
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !18169
  %25 = icmp eq %struct._timeout* %24, null, !dbg !18170
  br i1 %25, label %28, label %5, !dbg !18171, !llvm.loop !18195

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !18197
  store i64 %27, i64* %9, align 8, !dbg !18197
  br label %32, !dbg !18200

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !18162
  %31 = sext i32 %30 to i64, !dbg !18201
  br label %32, !dbg !18201

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !18201
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !18162
  %36 = load i64, i64* @curr_tick, align 8, !dbg !18202
  %37 = add i64 %36, %33, !dbg !18202
  store i64 %37, i64* @curr_tick, align 8, !dbg !18202
  store i32 0, i32* @announce_remaining, align 4, !dbg !18203
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !18204
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #27, !dbg !18205
  call void @llvm.dbg.value(metadata i32 %35, metadata !17783, metadata !DIExpression()) #25, !dbg !18206
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17788, metadata !DIExpression()) #25, !dbg !18206
  call void @llvm.dbg.value(metadata i32 %35, metadata !17791, metadata !DIExpression()) #25, !dbg !18208
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !18210, !srcloc !17797
  ret void, !dbg !18211
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !18212 {
  call void @llvm.dbg.value(metadata i64 0, metadata !18216, metadata !DIExpression()), !dbg !18220
  call void @llvm.dbg.value(metadata i32 0, metadata !18217, metadata !DIExpression()), !dbg !18221
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17715, metadata !DIExpression()) #25, !dbg !18222
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18224, !srcloc !17730
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18224
  call void @llvm.dbg.value(metadata i32 %2, metadata !17727, metadata !DIExpression()) #25, !dbg !18226
  call void @llvm.dbg.value(metadata i32 undef, metadata !17728, metadata !DIExpression()) #25, !dbg !18226
  call void @llvm.dbg.value(metadata i32 %2, metadata !17721, metadata !DIExpression()) #25, !dbg !18222
  call void @llvm.dbg.value(metadata i32 %2, metadata !18219, metadata !DIExpression()), !dbg !18221
  call void @llvm.dbg.value(metadata i64 0, metadata !18216, metadata !DIExpression()), !dbg !18220
  call void @llvm.dbg.value(metadata i32 undef, metadata !18217, metadata !DIExpression()), !dbg !18221
  %3 = load i64, i64* @curr_tick, align 8, !dbg !18227
  %4 = tail call fastcc i32 @elapsed.293() #26, !dbg !18230
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !18216, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18220
  call void @llvm.dbg.value(metadata i32 %2, metadata !17783, metadata !DIExpression()) #25, !dbg !18231
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17788, metadata !DIExpression()) #25, !dbg !18231
  call void @llvm.dbg.value(metadata i32 %2, metadata !17791, metadata !DIExpression()) #25, !dbg !18233
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !18235, !srcloc !17797
  call void @llvm.dbg.value(metadata i32 undef, metadata !18217, metadata !DIExpression()), !dbg !18221
  %5 = sext i32 %4 to i64, !dbg !18230
  %6 = add i64 %3, %5, !dbg !18236
  ret i64 %6, !dbg !18237
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !18238 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !18239
  %2 = trunc i64 %1 to i32, !dbg !18240
  ret i32 %2, !dbg !18241
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !18242 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !18243
  ret i64 %1, !dbg !18244
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !18245 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18247, metadata !DIExpression()), !dbg !18254
  %2 = icmp eq i32 %0, 0, !dbg !18255
  br i1 %2, label %10, label %3, !dbg !18257

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !18258
  call void @llvm.dbg.value(metadata i32 %4, metadata !18248, metadata !DIExpression()), !dbg !18254
  %5 = mul i32 %0, 84, !dbg !18259
  call void @llvm.dbg.value(metadata i32 %5, metadata !18249, metadata !DIExpression()), !dbg !18254
  br label %6, !dbg !18260

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !18261
  call void @llvm.dbg.value(metadata i32 %7, metadata !18250, metadata !DIExpression()), !dbg !18262
  %8 = sub i32 %7, %4, !dbg !18263
  %9 = icmp ult i32 %8, %5, !dbg !18265
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !18266
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !18267 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !18268
  ret i32 %1, !dbg !18269
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !18270 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !18272
  ret i32 %1, !dbg !18273
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18274 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18278, metadata !DIExpression()), !dbg !18280
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18281

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !18282
  br label %14, !dbg !18286

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18279, metadata !DIExpression()), !dbg !18280
  %6 = icmp slt i64 %2, -1, !dbg !18287
  br i1 %6, label %7, label %9, !dbg !18290

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18291
  br label %14, !dbg !18292

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !18294
  %11 = icmp ugt i64 %2, 1, !dbg !18295
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18295
  %13 = add nsw i64 %10, %12, !dbg !18296
  br label %14, !dbg !18297

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18298
  ret i64 %15, !dbg !18299
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18300 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.314, i32 0, i32 0)) #27, !dbg !18302
  ret void, !dbg !18303
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { argmemonly nofree nounwind willreturn }
attributes #6 = { argmemonly nofree nounwind willreturn writeonly }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!917, !2, !2661, !27, !379, !403, !2663, !2665, !2699, !414, !458, !2701, !2704, !487, !507, !2706, !2714, !2722, !2738, !2749, !2795, !2797, !2825, !2853, !2896, !2968, !3013, !519, !675, !3041, !711, !721, !746, !949, !3046, !1085, !1151, !1333, !1636, !1860, !3085, !1973, !2063, !3087, !3173, !3238, !2112, !3241, !2119, !2489, !3259, !2509, !3261, !2624, !3264}
!llvm.ident = !{!3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266, !3266}
!llvm.module.flags = !{!3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 98, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5504, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 86)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2752, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !294, line: 18, type: !371, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !123, globals: !290, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/drivers/crypto/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!29 = !{!30, !39, !42, !46, !116}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_mode", file: !31, line: 44, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/crypto/cipher.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38}
!34 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_ECB", value: 1)
!35 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CBC", value: 2)
!36 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CTR", value: 3)
!37 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CCM", value: 4)
!38 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_GCM", value: 5)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_algo", file: !31, line: 29, baseType: !32, size: 32, elements: !40)
!40 = !{!41}
!41 = !DIEnumerator(name: "CRYPTO_CIPHER_ALGO_AES", value: 1)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_op", file: !31, line: 34, baseType: !32, size: 32, elements: !43)
!43 = !{!44, !45}
!44 = !DIEnumerator(name: "CRYPTO_CIPHER_OP_DECRYPT", value: 0)
!45 = !DIEnumerator(name: "CRYPTO_CIPHER_OP_ENCRYPT", value: 1)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !47, line: 27, baseType: !32, size: 32, elements: !48)
!47 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!48 = !{!49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115}
!49 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!50 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!51 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!52 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!53 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!54 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!55 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!56 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!57 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!58 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!59 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!60 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!61 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!62 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!63 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!64 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!65 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!104 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!105 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!106 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!107 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!108 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!109 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!110 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!111 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!112 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!113 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!114 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!115 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!116 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hash_algo", file: !117, line: 26, baseType: !32, size: 32, elements: !118)
!117 = !DIFile(filename: "zephyr/include/zephyr/crypto/hash.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = !{!119, !120, !121, !122}
!119 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA224", value: 1)
!120 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA256", value: 2)
!121 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA384", value: 3)
!122 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA512", value: 4)
!123 = !{!124, !125, !126}
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!125 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 32)
!127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_driver_api", file: !128, line: 65, size: 224, elements: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/crypto/crypto.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = !{!130, !161, !241, !245, !253, !278, !282}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "query_hw_caps", scope: !127, file: !128, line: 66, baseType: !131, size: 32)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!132 = !DISubroutineType(types: !133)
!133 = !{!125, !134}
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !136)
!136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = !{!139, !143, !144, !145, !154, !155}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !136, file: !137, line: 380, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!142 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !136, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !136, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !136, file: !137, line: 386, baseType: !146, size: 32, offset: 96)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !148)
!148 = !{!149, !152}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !147, file: !137, line: 359, baseType: !150, size: 8)
!150 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !151)
!151 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !147, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!153 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !136, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !136, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !158)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !137, line: 43, baseType: !159)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !160)
!160 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_begin_session", scope: !127, file: !128, line: 69, baseType: !162, size: 32, offset: 32)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 32)
!163 = !DISubroutineType(types: !164)
!164 = !{!125, !134, !165, !39, !30, !42}
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ctx", file: !31, line: 110, size: 256, elements: !167)
!167 = !{!168, !212, !217, !218, !219, !220, !239, !240}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !166, file: !31, line: 116, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ops", file: !31, line: 74, size: 64, elements: !170)
!170 = !{!171, !172}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_mode", scope: !169, file: !31, line: 76, baseType: !30, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_member, scope: !169, file: !31, line: 78, baseType: !173, size: 32, offset: 32)
!173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !169, file: !31, line: 78, size: 32, elements: !174)
!174 = !{!175, !190, !195, !197, !210}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "block_crypt_hndlr", scope: !173, file: !31, line: 79, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "block_op_t", file: !31, line: 57, baseType: !177)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!178 = !DISubroutineType(types: !179)
!179 = !{!125, !165, !180}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_pkt", file: !31, line: 180, size: 192, elements: !182)
!182 = !{!183, !185, !186, !187, !188, !189}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !181, file: !31, line: 183, baseType: !184, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !181, file: !31, line: 186, baseType: !125, size: 32, offset: 32)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !181, file: !31, line: 192, baseType: !184, size: 32, offset: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf_max", scope: !181, file: !31, line: 197, baseType: !125, size: 32, offset: 96)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "out_len", scope: !181, file: !31, line: 202, baseType: !125, size: 32, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !181, file: !31, line: 208, baseType: !165, size: 32, offset: 160)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "cbc_crypt_hndlr", scope: !173, file: !31, line: 80, baseType: !191, size: 32)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbc_op_t", file: !31, line: 62, baseType: !192)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DISubroutineType(types: !194)
!194 = !{!125, !165, !180, !184}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_crypt_hndlr", scope: !173, file: !31, line: 81, baseType: !196, size: 32)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "ctr_op_t", file: !31, line: 65, baseType: !192)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_crypt_hndlr", scope: !173, file: !31, line: 82, baseType: !198, size: 32)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "ccm_op_t", file: !31, line: 68, baseType: !199)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DISubroutineType(types: !201)
!201 = !{!125, !165, !202, !184}
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_aead_pkt", file: !31, line: 217, size: 128, elements: !204)
!204 = !{!205, !206, !207, !209}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !203, file: !31, line: 219, baseType: !180, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "ad", scope: !203, file: !31, line: 224, baseType: !184, size: 32, offset: 32)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "ad_len", scope: !203, file: !31, line: 227, baseType: !208, size: 32, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !203, file: !31, line: 233, baseType: !184, size: 32, offset: 96)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_crypt_hndlr", scope: !173, file: !31, line: 83, baseType: !211, size: 32)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcm_op_t", file: !31, line: 71, baseType: !199)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !166, file: !31, line: 126, baseType: !213, size: 32, offset: 64)
!213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !31, line: 119, size: 32, elements: !214)
!214 = !{!215, !216}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "bit_stream", scope: !213, file: !31, line: 121, baseType: !184, size: 32)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !213, file: !31, line: 125, baseType: !124, size: 32)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !166, file: !31, line: 131, baseType: !134, size: 32, offset: 96)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !166, file: !31, line: 140, baseType: !124, size: 32, offset: 128)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "app_sessn_state", scope: !166, file: !31, line: 146, baseType: !124, size: 32, offset: 160)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "mode_params", scope: !166, file: !31, line: 156, baseType: !221, size: 32, offset: 192)
!221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !31, line: 152, size: 32, elements: !222)
!222 = !{!223, !230, !234}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_info", scope: !221, file: !31, line: 153, baseType: !224, size: 32)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ccm_params", file: !31, line: 87, size: 32, elements: !225)
!225 = !{!226, !229}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !224, file: !31, line: 88, baseType: !227, size: 16)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !228)
!228 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !224, file: !31, line: 89, baseType: !227, size: 16, offset: 16)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_info", scope: !221, file: !31, line: 154, baseType: !231, size: 32)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctr_params", file: !31, line: 92, size: 32, elements: !232)
!232 = !{!233}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_len", scope: !231, file: !31, line: 96, baseType: !208, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_info", scope: !221, file: !31, line: 155, baseType: !235, size: 32)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gcm_params", file: !31, line: 99, size: 32, elements: !236)
!236 = !{!237, !238}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !235, file: !31, line: 100, baseType: !227, size: 16)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !235, file: !31, line: 101, baseType: !227, size: 16, offset: 16)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !166, file: !31, line: 161, baseType: !227, size: 16, offset: 224)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !166, file: !31, line: 169, baseType: !227, size: 16, offset: 240)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_free_session", scope: !127, file: !128, line: 74, baseType: !242, size: 32, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 32)
!243 = !DISubroutineType(types: !244)
!244 = !{!125, !134, !165}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_async_callback_set", scope: !127, file: !128, line: 77, baseType: !246, size: 32, offset: 96)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 32)
!247 = !DISubroutineType(types: !248)
!248 = !{!125, !134, !249}
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "cipher_completion_cb", file: !31, line: 242, baseType: !250)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 32)
!251 = !DISubroutineType(types: !252)
!252 = !{null, !180, !125}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "hash_begin_session", scope: !127, file: !128, line: 81, baseType: !254, size: 32, offset: 128)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 32)
!255 = !DISubroutineType(types: !256)
!256 = !{!125, !134, !257, !116}
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 32)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_ctx", file: !117, line: 47, size: 128, elements: !259)
!259 = !{!260, !261, !262, !276, !277}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !258, file: !117, line: 51, baseType: !134, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !258, file: !117, line: 60, baseType: !124, size: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "hash_hndlr", scope: !258, file: !117, line: 65, baseType: !263, size: 32, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_op_t", file: !117, line: 38, baseType: !264)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DISubroutineType(types: !266)
!266 = !{!125, !257, !267, !153}
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 32)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_pkt", file: !117, line: 88, size: 128, elements: !269)
!269 = !{!270, !271, !274, !275}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !268, file: !117, line: 91, baseType: !184, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !268, file: !117, line: 94, baseType: !272, size: 32, offset: 32)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !273, line: 214, baseType: !32)
!273 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!274 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !268, file: !117, line: 101, baseType: !184, size: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !268, file: !117, line: 107, baseType: !257, size: 32, offset: 96)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "started", scope: !258, file: !117, line: 70, baseType: !153, size: 8, offset: 96)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !258, file: !117, line: 78, baseType: !227, size: 16, offset: 112)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "hash_free_session", scope: !127, file: !128, line: 84, baseType: !279, size: 32, offset: 160)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DISubroutineType(types: !281)
!281 = !{!125, !134, !257}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "hash_async_callback_set", scope: !127, file: !128, line: 86, baseType: !283, size: 32, offset: 192)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 32)
!284 = !DISubroutineType(types: !285)
!285 = !{!125, !134, !286}
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_completion_cb", file: !117, line: 114, baseType: !287)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DISubroutineType(types: !289)
!289 = !{null, !267, !125}
!290 = !{!25, !291, !314, !316, !318, !320, !324, !327, !329, !334, !339, !344, !349, !351, !356, !361, !366}
!291 = !DIGlobalVariableExpression(var: !292, expr: !DIExpression())
!292 = distinct !DIGlobalVariable(name: "iv", scope: !293, file: !294, line: 227, type: !311, isLocal: true, isDefinition: true)
!293 = distinct !DISubprogram(name: "cbc_mode", scope: !294, file: !294, line: 205, type: !295, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !297)
!294 = !DIFile(filename: "zephyr/samples/drivers/crypto/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!295 = !DISubroutineType(types: !296)
!296 = !{null, !134}
!297 = !{!298, !299, !303, !307, !308, !309, !310}
!298 = !DILocalVariable(name: "dev", arg: 1, scope: !293, file: !294, line: 205, type: !134)
!299 = !DILocalVariable(name: "encrypted", scope: !293, file: !294, line: 207, type: !300)
!300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 640, elements: !301)
!301 = !{!302}
!302 = !DISubrange(count: 80)
!303 = !DILocalVariable(name: "decrypted", scope: !293, file: !294, line: 208, type: !304)
!304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 512, elements: !305)
!305 = !{!306}
!306 = !DISubrange(count: 64)
!307 = !DILocalVariable(name: "ini", scope: !293, file: !294, line: 209, type: !166)
!308 = !DILocalVariable(name: "encrypt", scope: !293, file: !294, line: 214, type: !181)
!309 = !DILocalVariable(name: "decrypt", scope: !293, file: !294, line: 220, type: !181)
!310 = !DILabel(scope: !293, name: "out", file: !294, line: 279)
!311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 128, elements: !312)
!312 = !{!313}
!313 = !DISubrange(count: 16)
!314 = !DIGlobalVariableExpression(var: !315, expr: !DIExpression())
!315 = distinct !DIGlobalVariable(name: "cap_flags", scope: !27, file: !294, line: 48, type: !208, isLocal: false, isDefinition: true)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "key", scope: !27, file: !294, line: 34, type: !311, isLocal: true, isDefinition: true)
!318 = !DIGlobalVariableExpression(var: !319, expr: !DIExpression())
!319 = distinct !DIGlobalVariable(name: "plaintext", scope: !27, file: !294, line: 39, type: !304, isLocal: true, isDefinition: true)
!320 = !DIGlobalVariableExpression(var: !321, expr: !DIExpression())
!321 = distinct !DIGlobalVariable(name: "cbc_ciphertext", scope: !27, file: !294, line: 195, type: !322, isLocal: true, isDefinition: true)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 640, elements: !301)
!323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!324 = !DIGlobalVariableExpression(var: !325, expr: !DIExpression())
!325 = distinct !DIGlobalVariable(name: "ctr_ciphertext", scope: !27, file: !294, line: 283, type: !326, isLocal: true, isDefinition: true)
!326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 512, elements: !305)
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "ccm_key", scope: !27, file: !294, line: 373, type: !311, isLocal: true, isDefinition: true)
!329 = !DIGlobalVariableExpression(var: !330, expr: !DIExpression())
!330 = distinct !DIGlobalVariable(name: "ccm_data", scope: !27, file: !294, line: 384, type: !331, isLocal: true, isDefinition: true)
!331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 184, elements: !332)
!332 = !{!333}
!333 = !DISubrange(count: 23)
!334 = !DIGlobalVariableExpression(var: !335, expr: !DIExpression())
!335 = distinct !DIGlobalVariable(name: "ccm_hdr", scope: !27, file: !294, line: 381, type: !336, isLocal: true, isDefinition: true)
!336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 64, elements: !337)
!337 = !{!338}
!338 = !DISubrange(count: 8)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "ccm_nonce", scope: !27, file: !294, line: 377, type: !341, isLocal: true, isDefinition: true)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 104, elements: !342)
!342 = !{!343}
!343 = !DISubrange(count: 13)
!344 = !DIGlobalVariableExpression(var: !345, expr: !DIExpression())
!345 = distinct !DIGlobalVariable(name: "ccm_expected", scope: !27, file: !294, line: 388, type: !346, isLocal: true, isDefinition: true)
!346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 248, elements: !347)
!347 = !{!348}
!348 = !DISubrange(count: 31)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "gcm_key", scope: !27, file: !294, line: 485, type: !311, isLocal: true, isDefinition: true)
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "gcm_data", scope: !27, file: !294, line: 496, type: !353, isLocal: true, isDefinition: true)
!353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 336, elements: !354)
!354 = !{!355}
!355 = !DISubrange(count: 42)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "gcm_hdr", scope: !27, file: !294, line: 492, type: !358, isLocal: true, isDefinition: true)
!358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 160, elements: !359)
!359 = !{!360}
!360 = !DISubrange(count: 20)
!361 = !DIGlobalVariableExpression(var: !362, expr: !DIExpression())
!362 = distinct !DIGlobalVariable(name: "gcm_nonce", scope: !27, file: !294, line: 489, type: !363, isLocal: true, isDefinition: true)
!363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 96, elements: !364)
!364 = !{!365}
!365 = !DISubrange(count: 12)
!366 = !DIGlobalVariableExpression(var: !367, expr: !DIExpression())
!367 = distinct !DIGlobalVariable(name: "gcm_expected", scope: !27, file: !294, line: 502, type: !368, isLocal: true, isDefinition: true)
!368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 464, elements: !369)
!369 = !{!370}
!370 = !DISubrange(count: 58)
!371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !372)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !374)
!373 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!374 = !{!375, !376}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !372, file: !373, line: 17, baseType: !140, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !372, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !379, file: !395, line: 18, type: !396, isLocal: false, isDefinition: true)
!379 = distinct !DICompileUnit(language: DW_LANG_C99, file: !380, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !381, globals: !394, splitDebugInlining: false, nameTableKind: None)
!380 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!381 = !{!22, !124, !24, !382, !384, !386, !272, !125, !387, !388, !390, !392, !393, !184, !227, !140}
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 32)
!383 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 32)
!385 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!389 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!391 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!394 = !{!377}
!395 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !397)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !398)
!398 = !{!399, !400}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !397, file: !373, line: 17, baseType: !140, size: 32)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !397, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!401 = !DIGlobalVariableExpression(var: !402, expr: !DIExpression())
!402 = distinct !DIGlobalVariable(name: "_char_out", scope: !403, file: !408, line: 54, type: !409, isLocal: false, isDefinition: true)
!403 = distinct !DICompileUnit(language: DW_LANG_C99, file: !404, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, globals: !407, splitDebugInlining: false, nameTableKind: None)
!404 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!405 = !{!46}
!406 = !{!124, !125}
!407 = !{!401}
!408 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 32)
!410 = !DISubroutineType(types: !411)
!411 = !{!125, !125}
!412 = !DIGlobalVariableExpression(var: !413, expr: !DIExpression())
!413 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !414, file: !431, line: 56, type: !432, isLocal: true, isDefinition: true, align: 32)
!414 = distinct !DICompileUnit(language: DW_LANG_C99, file: !415, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !416, globals: !430, splitDebugInlining: false, nameTableKind: None)
!415 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!416 = !{!417}
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !419, line: 259, baseType: !420)
!419 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f411xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 250, size: 224, elements: !421)
!421 = !{!422, !424, !425, !426, !427, !428, !429}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !420, file: !419, line: 252, baseType: !423, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !208)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !420, file: !419, line: 253, baseType: !423, size: 32, offset: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !420, file: !419, line: 254, baseType: !423, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !420, file: !419, line: 255, baseType: !423, size: 32, offset: 96)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !420, file: !419, line: 256, baseType: !423, size: 32, offset: 128)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !420, file: !419, line: 257, baseType: !423, size: 32, offset: 160)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !420, file: !419, line: 258, baseType: !423, size: 32, offset: 192)
!430 = !{!412}
!431 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!432 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !433)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !435)
!434 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!435 = !{!436, !455}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !433, file: !434, line: 60, baseType: !437, size: 32)
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 32)
!438 = !DISubroutineType(types: !439)
!439 = !{!125, !440}
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 32)
!441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !442)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !443)
!443 = !{!444, !445, !446, !447, !453, !454}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !442, file: !137, line: 380, baseType: !140, size: 32)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !442, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !442, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !442, file: !137, line: 386, baseType: !448, size: 32, offset: 96)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 32)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !450)
!450 = !{!451, !452}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !449, file: !137, line: 359, baseType: !150, size: 8)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !449, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !442, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !442, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !433, file: !434, line: 65, baseType: !440, size: 32, offset: 32)
!456 = !DIGlobalVariableExpression(var: !457, expr: !DIExpression())
!457 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !458, file: !461, line: 71, type: !462, isLocal: true, isDefinition: true, align: 32)
!458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !460, splitDebugInlining: false, nameTableKind: None)
!459 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!460 = !{!456}
!461 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !464)
!464 = !{!465, !484}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !463, file: !434, line: 60, baseType: !466, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 32)
!467 = !DISubroutineType(types: !468)
!468 = !{!125, !469}
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !472)
!472 = !{!473, !474, !475, !476, !482, !483}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !471, file: !137, line: 380, baseType: !140, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !471, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !471, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !471, file: !137, line: 386, baseType: !477, size: 32, offset: 96)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 32)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !479)
!479 = !{!480, !481}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !478, file: !137, line: 359, baseType: !150, size: 8)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !478, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !471, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !471, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !463, file: !434, line: 65, baseType: !469, size: 32, offset: 32)
!485 = !DIGlobalVariableExpression(var: !486, expr: !DIExpression())
!486 = distinct !DIGlobalVariable(name: "inv_sbox", scope: !487, file: !501, line: 37, type: !502, isLocal: true, isDefinition: true)
!487 = distinct !DICompileUnit(language: DW_LANG_C99, file: !488, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !489, globals: !500, splitDebugInlining: false, nameTableKind: None)
!488 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/aes_decrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!489 = !{!184, !490, !491, !150}
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 32)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !493)
!492 = !DIFile(filename: "modules/crypto/tinycrypt/lib/include/tinycrypt/aes.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 32)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !495)
!495 = !{!496}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !494, file: !492, line: 65, baseType: !497, size: 1408)
!497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 1408, elements: !498)
!498 = !{!499}
!499 = !DISubrange(count: 44)
!500 = !{!485}
!501 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/aes_decrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 2048, elements: !503)
!503 = !{!504}
!504 = !DISubrange(count: 256)
!505 = !DIGlobalVariableExpression(var: !506, expr: !DIExpression())
!506 = distinct !DIGlobalVariable(name: "sbox", scope: !507, file: !516, line: 37, type: !502, isLocal: true, isDefinition: true)
!507 = distinct !DICompileUnit(language: DW_LANG_C99, file: !508, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !509, globals: !515, splitDebugInlining: false, nameTableKind: None)
!508 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/aes_encrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!509 = !{!510, !490, !184, !150}
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !511)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 32)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !513)
!513 = !{!514}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !512, file: !492, line: 65, baseType: !497, size: 1408)
!515 = !{!505}
!516 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/aes_encrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!517 = !DIGlobalVariableExpression(var: !518, expr: !DIExpression())
!518 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !519, file: !526, line: 17, type: !668, isLocal: false, isDefinition: true)
!519 = distinct !DICompileUnit(language: DW_LANG_C99, file: !520, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !521, globals: !522, splitDebugInlining: false, nameTableKind: None)
!520 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!521 = !{!272, !125, !208, !124}
!522 = !{!517, !523, !664}
!523 = !DIGlobalVariableExpression(var: !524, expr: !DIExpression())
!524 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !525, file: !526, line: 198, type: !650, isLocal: true, isDefinition: true)
!525 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !526, file: !526, line: 175, type: !527, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !519, retainedNodes: !645)
!526 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!527 = !DISubroutineType(types: !528)
!528 = !{null, !529}
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 32)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !532)
!531 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!532 = !{!533, !599, !612, !613, !614, !615, !621, !640}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !530, file: !531, line: 247, baseType: !534, size: 384)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !535)
!535 = !{!536, !564, !572, !573, !574, !585, !586, !587}
!536 = !DIDerivedType(tag: DW_TAG_member, scope: !534, file: !531, line: 60, baseType: !537, size: 64)
!537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !534, file: !531, line: 60, size: 64, elements: !538)
!538 = !{!539, !555}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !537, file: !531, line: 61, baseType: !540, size: 64)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !542)
!541 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !543)
!543 = !{!544, !550}
!544 = !DIDerivedType(tag: DW_TAG_member, scope: !542, file: !541, line: 38, baseType: !545, size: 32)
!545 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !542, file: !541, line: 38, size: 32, elements: !546)
!546 = !{!547, !549}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !545, file: !541, line: 39, baseType: !548, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !545, file: !541, line: 40, baseType: !548, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_member, scope: !542, file: !541, line: 42, baseType: !551, size: 32, offset: 32)
!551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !542, file: !541, line: 42, size: 32, elements: !552)
!552 = !{!553, !554}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !551, file: !541, line: 43, baseType: !548, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !551, file: !541, line: 44, baseType: !548, size: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !537, file: !531, line: 62, baseType: !556, size: 64)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !558)
!557 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!558 = !{!559}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !556, file: !557, line: 50, baseType: !560, size: 64)
!560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !561, size: 64, elements: !562)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 32)
!562 = !{!563}
!563 = !DISubrange(count: 2)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !534, file: !531, line: 68, baseType: !565, size: 32, offset: 64)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !568)
!567 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !569)
!569 = !{!570}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !568, file: !567, line: 232, baseType: !571, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !542)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !534, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !534, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!574 = !DIDerivedType(tag: DW_TAG_member, scope: !534, file: !531, line: 90, baseType: !575, size: 16, offset: 112)
!575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !534, file: !531, line: 90, size: 16, elements: !576)
!576 = !{!577, !584}
!577 = !DIDerivedType(tag: DW_TAG_member, scope: !575, file: !531, line: 91, baseType: !578, size: 16)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !575, file: !531, line: 91, size: 16, elements: !579)
!579 = !{!580, !583}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !578, file: !531, line: 96, baseType: !581, size: 8)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !582)
!582 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !578, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !575, file: !531, line: 100, baseType: !227, size: 16)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !534, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !534, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !534, file: !531, line: 131, baseType: !588, size: 192, offset: 192)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !589)
!589 = !{!590, !591, !597}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !588, file: !567, line: 245, baseType: !540, size: 64)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !588, file: !567, line: 246, baseType: !592, size: 32, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !593)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 32)
!594 = !DISubroutineType(types: !595)
!595 = !{null, !596}
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 32)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !588, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!598 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !391)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !530, file: !531, line: 250, baseType: !600, size: 288, offset: 384)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !602)
!601 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!602 = !{!603, !604, !605, !606, !607, !608, !609, !610, !611}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !600, file: !601, line: 26, baseType: !208, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !600, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !600, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !600, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !600, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !600, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !600, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !600, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !600, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !530, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !530, file: !531, line: 256, baseType: !566, size: 64, offset: 704)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !530, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !530, file: !531, line: 300, baseType: !616, size: 96, offset: 800)
!616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !617)
!617 = !{!618, !619, !620}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !616, file: !531, line: 153, baseType: !22, size: 32)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !616, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !616, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !530, file: !531, line: 325, baseType: !622, size: 32, offset: 896)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 32)
!623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !625)
!624 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!625 = !{!626, !635, !636}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !623, file: !624, line: 5074, baseType: !627, size: 96)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !629)
!628 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!629 = !{!630, !633, !634}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !627, file: !628, line: 57, baseType: !631, size: 32)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 32)
!632 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !628, line: 57, flags: DIFlagFwdDecl)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !627, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !627, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !623, file: !624, line: 5075, baseType: !566, size: 64, offset: 96)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !623, file: !624, line: 5076, baseType: !637, offset: 160)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!638 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!639 = !{}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !530, file: !531, line: 343, baseType: !641, size: 64, offset: 928)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !642)
!642 = !{!643, !644}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !641, file: !601, line: 63, baseType: !208, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !641, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!645 = !{!646, !647, !648, !649}
!646 = !DILocalVariable(name: "thread", arg: 1, scope: !525, file: !526, line: 175, type: !529)
!647 = !DILocalVariable(name: "region_num", scope: !525, file: !526, line: 200, type: !150)
!648 = !DILocalVariable(name: "guard_start", scope: !525, file: !526, line: 265, type: !22)
!649 = !DILocalVariable(name: "guard_size", scope: !525, file: !526, line: 266, type: !272)
!650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !651, size: 96, elements: !662)
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !652, line: 52, size: 96, elements: !653)
!652 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!653 = !{!654, !655, !656}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !651, file: !652, line: 53, baseType: !22, size: 32)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !651, file: !652, line: 54, baseType: !272, size: 32, offset: 32)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !651, file: !652, line: 55, baseType: !657, size: 32, offset: 64)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !658, line: 151, baseType: !659)
!658 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !658, line: 149, size: 32, elements: !660)
!660 = !{!661}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !659, file: !658, line: 150, baseType: !208, size: 32)
!662 = !{!663}
!663 = !DISubrange(count: 1)
!664 = !DIGlobalVariableExpression(var: !665, expr: !DIExpression())
!665 = distinct !DIGlobalVariable(name: "static_regions", scope: !519, file: !526, line: 62, type: !666, isLocal: true, isDefinition: true)
!666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !667, size: 96, elements: !662)
!667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !651)
!668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !669)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !670)
!670 = !{!671, !672}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !669, file: !373, line: 17, baseType: !140, size: 32)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !669, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!673 = !DIGlobalVariableExpression(var: !674, expr: !DIExpression())
!674 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !675, file: !708, line: 39, type: !150, isLocal: true, isDefinition: true)
!675 = distinct !DICompileUnit(language: DW_LANG_C99, file: !676, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !677, globals: !707, splitDebugInlining: false, nameTableKind: None)
!676 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!677 = !{!678, !124, !125, !695, !150}
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !680, line: 1226, baseType: !681)
!680 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 1213, size: 352, elements: !682)
!682 = !{!683, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !681, file: !680, line: 1215, baseType: !684, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !423)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !681, file: !680, line: 1216, baseType: !423, size: 32, offset: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !681, file: !680, line: 1217, baseType: !423, size: 32, offset: 64)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !681, file: !680, line: 1218, baseType: !423, size: 32, offset: 96)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !681, file: !680, line: 1219, baseType: !423, size: 32, offset: 128)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !681, file: !680, line: 1220, baseType: !423, size: 32, offset: 160)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !681, file: !680, line: 1221, baseType: !423, size: 32, offset: 192)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !681, file: !680, line: 1222, baseType: !423, size: 32, offset: 224)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !681, file: !680, line: 1223, baseType: !423, size: 32, offset: 256)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !681, file: !680, line: 1224, baseType: !423, size: 32, offset: 288)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !681, file: !680, line: 1225, baseType: !423, size: 32, offset: 320)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 32)
!696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !697)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !698, line: 27, size: 96, elements: !699)
!698 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!699 = !{!700, !701, !702}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !697, file: !698, line: 29, baseType: !208, size: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !697, file: !698, line: 31, baseType: !140, size: 32, offset: 32)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !697, file: !698, line: 37, baseType: !703, size: 32, offset: 64)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !658, line: 146, baseType: !704)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !658, line: 141, size: 32, elements: !705)
!705 = !{!706}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !704, file: !658, line: 143, baseType: !208, size: 32)
!707 = !{!673}
!708 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!709 = !DIGlobalVariableExpression(var: !710, expr: !DIExpression())
!710 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !711, file: !718, line: 21, type: !409, isLocal: true, isDefinition: true)
!711 = distinct !DICompileUnit(language: DW_LANG_C99, file: !712, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !713, globals: !717, splitDebugInlining: false, nameTableKind: None)
!712 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!713 = !{!714, !125, !124}
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 32)
!715 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !716, line: 22, baseType: !125)
!716 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!717 = !{!709}
!718 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!719 = !DIGlobalVariableExpression(var: !720, expr: !DIExpression())
!720 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !721, file: !726, line: 13, type: !743, isLocal: true, isDefinition: true)
!721 = distinct !DICompileUnit(language: DW_LANG_C99, file: !722, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !723, splitDebugInlining: false, nameTableKind: None)
!722 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!723 = !{!724, !719}
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "mpu_config", scope: !721, file: !726, line: 37, type: !727, isLocal: false, isDefinition: true)
!726 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !728)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !698, line: 41, size: 64, elements: !729)
!729 = !{!730, !731}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !728, file: !698, line: 43, baseType: !208, size: 32)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !728, file: !698, line: 45, baseType: !732, size: 32, offset: 32)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 32)
!733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !698, line: 27, size: 96, elements: !735)
!735 = !{!736, !737, !738}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !734, file: !698, line: 29, baseType: !208, size: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !734, file: !698, line: 31, baseType: !140, size: 32, offset: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !734, file: !698, line: 37, baseType: !739, size: 32, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !658, line: 146, baseType: !740)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !658, line: 141, size: 32, elements: !741)
!741 = !{!742}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !740, file: !658, line: 143, baseType: !208, size: 32)
!743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !733, size: 192, elements: !562)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !746, file: !830, line: 72, type: !912, isLocal: true, isDefinition: true)
!746 = distinct !DICompileUnit(language: DW_LANG_C99, file: !747, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !748, retainedTypes: !816, globals: !827, splitDebugInlining: false, nameTableKind: None)
!747 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!748 = !{!46, !749}
!749 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !419, line: 65, baseType: !125, size: 32, elements: !750)
!750 = !{!751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815}
!751 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!752 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!753 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!754 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!755 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!756 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!757 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!758 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!759 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!760 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!761 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!762 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!763 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!764 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!765 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!766 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!767 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!768 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!769 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!770 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!771 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!772 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!773 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!774 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!775 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!776 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!777 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!778 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!779 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!780 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!781 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!782 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!783 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!784 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!785 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!786 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!787 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!788 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!789 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!790 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!791 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!792 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!793 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!794 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!795 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!796 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!797 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!798 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!799 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!800 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!801 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!802 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!803 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!804 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!805 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!806 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!807 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!808 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!809 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!810 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!811 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!812 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!813 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!814 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!815 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!816 = !{!272, !125, !124, !817}
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !419, line: 244, baseType: !819)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 236, size: 192, elements: !820)
!820 = !{!821, !822, !823, !824, !825, !826}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !819, file: !419, line: 238, baseType: !423, size: 32)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !819, file: !419, line: 239, baseType: !423, size: 32, offset: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !819, file: !419, line: 240, baseType: !423, size: 32, offset: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !819, file: !419, line: 241, baseType: !423, size: 32, offset: 96)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !819, file: !419, line: 242, baseType: !423, size: 32, offset: 128)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !819, file: !419, line: 243, baseType: !423, size: 32, offset: 160)
!827 = !{!828, !834, !850, !861, !876, !744, !878, !892, !894, !896, !898, !900, !902, !904, !906, !908, !910}
!828 = !DIGlobalVariableExpression(var: !829, expr: !DIExpression())
!829 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !746, file: !830, line: 424, type: !831, isLocal: false, isDefinition: true, align: 16)
!830 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 64, elements: !832)
!832 = !{!833}
!833 = !DISubrange(count: 4)
!834 = !DIGlobalVariableExpression(var: !835, expr: !DIExpression())
!835 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !746, file: !830, line: 424, type: !836, isLocal: false, isDefinition: true, align: 32)
!836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !837)
!837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !838)
!838 = !{!839, !840, !841, !842, !848, !849}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !837, file: !137, line: 380, baseType: !140, size: 32)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !837, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !837, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !837, file: !137, line: 386, baseType: !843, size: 32, offset: 96)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 32)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !845)
!845 = !{!846, !847}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !844, file: !137, line: 359, baseType: !150, size: 8)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !844, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !837, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !837, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!850 = !DIGlobalVariableExpression(var: !851, expr: !DIExpression())
!851 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !746, file: !830, line: 424, type: !852, isLocal: true, isDefinition: true, align: 32)
!852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !853)
!853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !854)
!854 = !{!855, !860}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !853, file: !434, line: 60, baseType: !856, size: 32)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 32)
!857 = !DISubroutineType(types: !858)
!858 = !{!125, !859}
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 32)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !853, file: !434, line: 65, baseType: !859, size: 32, offset: 32)
!861 = !DIGlobalVariableExpression(var: !862, expr: !DIExpression())
!862 = distinct !DIGlobalVariable(name: "exti_data", scope: !746, file: !830, line: 423, type: !863, isLocal: true, isDefinition: true)
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !830, line: 107, size: 1472, elements: !864)
!864 = !{!865}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !863, file: !830, line: 109, baseType: !866, size: 1472)
!866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !867, size: 1472, elements: !332)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !830, line: 101, size: 64, elements: !868)
!868 = !{!869, !875}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !867, file: !830, line: 102, baseType: !870, size: 32)
!870 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !871, line: 63, baseType: !872)
!871 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 32)
!873 = !DISubroutineType(types: !874)
!874 = !{null, !125, !124}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !867, file: !830, line: 103, baseType: !124, size: 32, offset: 32)
!876 = !DIGlobalVariableExpression(var: !877, expr: !DIExpression())
!877 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !746, file: !830, line: 424, type: !844, isLocal: true, isDefinition: true, align: 8)
!878 = !DIGlobalVariableExpression(var: !879, expr: !DIExpression())
!879 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !880, file: !830, line: 493, type: !885, isLocal: true, isDefinition: true, align: 32)
!880 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !830, file: !830, line: 460, type: !881, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !883)
!881 = !DISubroutineType(types: !882)
!882 = !{null, !859}
!883 = !{!884}
!884 = !DILocalVariable(name: "dev", arg: 1, scope: !880, file: !830, line: 460, type: !859)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !886)
!886 = !{!887, !889, !890, !891}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !885, file: !10, line: 55, baseType: !888, size: 32)
!888 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !125)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !885, file: !10, line: 57, baseType: !888, size: 32, offset: 32)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !885, file: !10, line: 59, baseType: !124, size: 32, offset: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !885, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !880, file: !830, line: 497, type: !885, isLocal: true, isDefinition: true, align: 32)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !880, file: !830, line: 507, type: !885, isLocal: true, isDefinition: true, align: 32)
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !880, file: !830, line: 512, type: !885, isLocal: true, isDefinition: true, align: 32)
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !880, file: !830, line: 516, type: !885, isLocal: true, isDefinition: true, align: 32)
!900 = !DIGlobalVariableExpression(var: !901, expr: !DIExpression())
!901 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !880, file: !830, line: 523, type: !885, isLocal: true, isDefinition: true, align: 32)
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !880, file: !830, line: 527, type: !885, isLocal: true, isDefinition: true, align: 32)
!904 = !DIGlobalVariableExpression(var: !905, expr: !DIExpression())
!905 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !880, file: !830, line: 581, type: !885, isLocal: true, isDefinition: true, align: 32)
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !880, file: !830, line: 586, type: !885, isLocal: true, isDefinition: true, align: 32)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !880, file: !830, line: 591, type: !885, isLocal: true, isDefinition: true, align: 32)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !880, file: !830, line: 595, type: !885, isLocal: true, isDefinition: true, align: 32)
!912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !913, size: 736, elements: !332)
!913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !914)
!914 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !419, line: 134, baseType: !749)
!915 = !DIGlobalVariableExpression(var: !916, expr: !DIExpression())
!916 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !917, file: !922, line: 22, type: !944, isLocal: false, isDefinition: true, align: 16)
!917 = distinct !DICompileUnit(language: DW_LANG_C99, file: !918, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !919, splitDebugInlining: false, nameTableKind: None)
!918 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!919 = !{!920, !915, !924, !926, !928, !930, !932, !934, !936, !938, !940, !942}
!920 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression())
!921 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !917, file: !922, line: 17, type: !923, isLocal: false, isDefinition: true, align: 16)
!922 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 192, elements: !364)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !917, file: !922, line: 29, type: !831, isLocal: false, isDefinition: true, align: 16)
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !917, file: !922, line: 36, type: !831, isLocal: false, isDefinition: true, align: 16)
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression())
!929 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !917, file: !922, line: 43, type: !831, isLocal: false, isDefinition: true, align: 16)
!930 = !DIGlobalVariableExpression(var: !931, expr: !DIExpression())
!931 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !917, file: !922, line: 50, type: !831, isLocal: false, isDefinition: true, align: 16)
!932 = !DIGlobalVariableExpression(var: !933, expr: !DIExpression())
!933 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !917, file: !922, line: 57, type: !831, isLocal: false, isDefinition: true, align: 16)
!934 = !DIGlobalVariableExpression(var: !935, expr: !DIExpression())
!935 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !917, file: !922, line: 64, type: !831, isLocal: false, isDefinition: true, align: 16)
!936 = !DIGlobalVariableExpression(var: !937, expr: !DIExpression())
!937 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !917, file: !922, line: 71, type: !831, isLocal: false, isDefinition: true, align: 16)
!938 = !DIGlobalVariableExpression(var: !939, expr: !DIExpression())
!939 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !917, file: !922, line: 78, type: !831, isLocal: false, isDefinition: true, align: 16)
!940 = !DIGlobalVariableExpression(var: !941, expr: !DIExpression())
!941 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !917, file: !922, line: 85, type: !831, isLocal: false, isDefinition: true, align: 16)
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "__devicehdl_crypto_tinycrypt", scope: !917, file: !922, line: 90, type: !944, isLocal: false, isDefinition: true, align: 16)
!944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 48, elements: !945)
!945 = !{!946}
!946 = !DISubrange(count: 3)
!947 = !DIGlobalVariableExpression(var: !948, expr: !DIExpression())
!948 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !949, file: !1013, line: 398, type: !1044, isLocal: true, isDefinition: true)
!949 = distinct !DICompileUnit(language: DW_LANG_C99, file: !950, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !951, retainedTypes: !964, globals: !1010, splitDebugInlining: false, nameTableKind: None)
!950 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!951 = !{!952, !46, !957}
!952 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !953, line: 197, baseType: !32, size: 32, elements: !954)
!953 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!954 = !{!955, !956}
!955 = !DIEnumerator(name: "SUCCESS", value: 0)
!956 = !DIEnumerator(name: "ERROR", value: 1)
!957 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !958, line: 44, baseType: !32, size: 32, elements: !959)
!958 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!959 = !{!960, !961, !962, !963}
!960 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!961 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!962 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!963 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!964 = !{!124, !125, !208, !965, !1003, !1009}
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 32)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 370, baseType: !967)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 336, size: 1152, elements: !968)
!968 = !{!969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1002}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !967, file: !419, line: 338, baseType: !423, size: 32)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !967, file: !419, line: 339, baseType: !423, size: 32, offset: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !967, file: !419, line: 340, baseType: !423, size: 32, offset: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !967, file: !419, line: 341, baseType: !423, size: 32, offset: 96)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !967, file: !419, line: 342, baseType: !423, size: 32, offset: 128)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !967, file: !419, line: 343, baseType: !423, size: 32, offset: 160)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !967, file: !419, line: 344, baseType: !423, size: 32, offset: 192)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !967, file: !419, line: 345, baseType: !208, size: 32, offset: 224)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !967, file: !419, line: 346, baseType: !423, size: 32, offset: 256)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !967, file: !419, line: 347, baseType: !423, size: 32, offset: 288)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !967, file: !419, line: 348, baseType: !980, size: 64, offset: 320)
!980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 64, elements: !562)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !967, file: !419, line: 349, baseType: !423, size: 32, offset: 384)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !967, file: !419, line: 350, baseType: !423, size: 32, offset: 416)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !967, file: !419, line: 351, baseType: !423, size: 32, offset: 448)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !967, file: !419, line: 352, baseType: !208, size: 32, offset: 480)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !967, file: !419, line: 353, baseType: !423, size: 32, offset: 512)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !967, file: !419, line: 354, baseType: !423, size: 32, offset: 544)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !967, file: !419, line: 355, baseType: !980, size: 64, offset: 576)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !967, file: !419, line: 356, baseType: !423, size: 32, offset: 640)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !967, file: !419, line: 357, baseType: !423, size: 32, offset: 672)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !967, file: !419, line: 358, baseType: !423, size: 32, offset: 704)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !967, file: !419, line: 359, baseType: !208, size: 32, offset: 736)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !967, file: !419, line: 360, baseType: !423, size: 32, offset: 768)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !967, file: !419, line: 361, baseType: !423, size: 32, offset: 800)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !967, file: !419, line: 362, baseType: !980, size: 64, offset: 832)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !967, file: !419, line: 363, baseType: !423, size: 32, offset: 896)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !967, file: !419, line: 364, baseType: !423, size: 32, offset: 928)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !967, file: !419, line: 365, baseType: !980, size: 64, offset: 960)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !967, file: !419, line: 366, baseType: !423, size: 32, offset: 1024)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !967, file: !419, line: 367, baseType: !423, size: 32, offset: 1056)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !967, file: !419, line: 368, baseType: !1001, size: 32, offset: 1088)
!1001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 32, elements: !662)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !967, file: !419, line: 369, baseType: !423, size: 32, offset: 1120)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 32)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1005, line: 343, size: 64, elements: !1006)
!1005 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1006 = !{!1007, !1008}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1004, file: !1005, line: 344, baseType: !208, size: 32)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1004, file: !1005, line: 345, baseType: !208, size: 32, offset: 32)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!1010 = !{!1011, !1015, !1031, !1042, !947}
!1011 = !DIGlobalVariableExpression(var: !1012, expr: !DIExpression())
!1012 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !949, file: !1013, line: 752, type: !1014, isLocal: false, isDefinition: true, align: 16)
!1013 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 704, elements: !498)
!1015 = !DIGlobalVariableExpression(var: !1016, expr: !DIExpression())
!1016 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !949, file: !1013, line: 752, type: !1017, isLocal: false, isDefinition: true, align: 32)
!1017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1018)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1019)
!1019 = !{!1020, !1021, !1022, !1023, !1029, !1030}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1018, file: !137, line: 380, baseType: !140, size: 32)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1018, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1018, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1018, file: !137, line: 386, baseType: !1024, size: 32, offset: 96)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 32)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1026)
!1026 = !{!1027, !1028}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1025, file: !137, line: 359, baseType: !150, size: 8)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1025, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1018, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1018, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1031 = !DIGlobalVariableExpression(var: !1032, expr: !DIExpression())
!1032 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !949, file: !1013, line: 752, type: !1033, isLocal: true, isDefinition: true, align: 32)
!1033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1034)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1035)
!1035 = !{!1036, !1041}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1034, file: !434, line: 60, baseType: !1037, size: 32)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!125, !1040}
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1034, file: !434, line: 65, baseType: !1040, size: 32, offset: 32)
!1042 = !DIGlobalVariableExpression(var: !1043, expr: !DIExpression())
!1043 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !949, file: !1013, line: 752, type: !1025, isLocal: true, isDefinition: true, align: 8)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !958, line: 100, size: 224, elements: !1045)
!1045 = !{!1046, !1052, !1053, !1062, !1067, !1072, !1078}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1044, file: !958, line: 101, baseType: !1047, size: 32)
!1047 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !958, line: 76, baseType: !1048)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!125, !1040, !1051}
!1051 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !958, line: 56, baseType: !124)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1044, file: !958, line: 102, baseType: !1047, size: 32, offset: 32)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1044, file: !958, line: 103, baseType: !1054, size: 32, offset: 64)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !958, line: 83, baseType: !1055)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 32)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!125, !1040, !1051, !1058, !124}
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !958, line: 72, baseType: !1059)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 32)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{null, !1040, !1051, !124}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1044, file: !958, line: 104, baseType: !1063, size: 32, offset: 96)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !958, line: 79, baseType: !1064)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!125, !1040, !1051, !1009}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1044, file: !958, line: 105, baseType: !1068, size: 32, offset: 128)
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !958, line: 88, baseType: !1069)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!957, !1040, !1051}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1044, file: !958, line: 106, baseType: !1073, size: 32, offset: 160)
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !958, line: 92, baseType: !1074)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 32)
!1075 = !DISubroutineType(types: !1076)
!1076 = !{!125, !1040, !1051, !1077}
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !958, line: 64, baseType: !124)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1044, file: !958, line: 107, baseType: !1079, size: 32, offset: 192)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !958, line: 96, baseType: !1080)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 32)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{!125, !1040, !1051, !124}
!1083 = !DIGlobalVariableExpression(var: !1084, expr: !DIExpression())
!1084 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1085, file: !1142, line: 603, type: !1144, isLocal: true, isDefinition: true, align: 32)
!1085 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1086, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !1087, globals: !1139, splitDebugInlining: false, nameTableKind: None)
!1086 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!1087 = !{!124, !125, !1088}
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 32)
!1089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1090)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1091, line: 336, size: 160, elements: !1092)
!1091 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1092 = !{!1093, !1113, !1117, !1121, !1134}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1090, file: !1091, line: 365, baseType: !1094, size: 32)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!125, !1097, !1112}
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1099)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1100)
!1100 = !{!1101, !1102, !1103, !1104, !1110, !1111}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1099, file: !137, line: 380, baseType: !140, size: 32)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1099, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1099, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1099, file: !137, line: 386, baseType: !1105, size: 32, offset: 96)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 32)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1107)
!1107 = !{!1108, !1109}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1106, file: !137, line: 359, baseType: !150, size: 8)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1106, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1099, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1099, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1090, file: !1091, line: 366, baseType: !1114, size: 32, offset: 32)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{null, !1097, !151}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1090, file: !1091, line: 374, baseType: !1118, size: 32, offset: 64)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 32)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!125, !1097}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1090, file: !1091, line: 377, baseType: !1122, size: 32, offset: 96)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 32)
!1123 = !DISubroutineType(types: !1124)
!1124 = !{!125, !1097, !1125}
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1127)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1091, line: 122, size: 64, elements: !1128)
!1128 = !{!1129, !1130, !1131, !1132, !1133}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1127, file: !1091, line: 123, baseType: !208, size: 32)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1127, file: !1091, line: 124, baseType: !150, size: 8, offset: 32)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1127, file: !1091, line: 125, baseType: !150, size: 8, offset: 40)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1127, file: !1091, line: 126, baseType: !150, size: 8, offset: 48)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1127, file: !1091, line: 127, baseType: !150, size: 8, offset: 56)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1090, file: !1091, line: 379, baseType: !1135, size: 32, offset: 128)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 32)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!125, !1097, !1138}
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 32)
!1139 = !{!1083, !1140}
!1140 = !DIGlobalVariableExpression(var: !1141, expr: !DIExpression())
!1141 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1085, file: !1142, line: 38, type: !1143, isLocal: true, isDefinition: true)
!1142 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1143 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1097)
!1144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1145)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1146)
!1146 = !{!1147, !1148}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1145, file: !434, line: 60, baseType: !1118, size: 32)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1145, file: !434, line: 65, baseType: !1097, size: 32, offset: 32)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "log_const_tinycrypt", scope: !1151, file: !1157, line: 22, type: !1326, isLocal: false, isDefinition: true)
!1151 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1152, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1153, globals: !1154, splitDebugInlining: false, nameTableKind: None)
!1152 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/crypto/crypto_tc_shim.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!1153 = !{!30, !39, !42, !116}
!1154 = !{!1149, !1155, !1158, !1174, !1185, !1187, !1315}
!1155 = !DIGlobalVariableExpression(var: !1156, expr: !DIExpression())
!1156 = distinct !DIGlobalVariable(name: "__devicehdl_crypto_tinycrypt", scope: !1151, file: !1157, line: 324, type: !944, isLocal: false, isDefinition: true, align: 16)
!1157 = !DIFile(filename: "zephyr/drivers/crypto/crypto_tc_shim.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1158 = !DIGlobalVariableExpression(var: !1159, expr: !DIExpression())
!1159 = distinct !DIGlobalVariable(name: "__device_crypto_tinycrypt", scope: !1151, file: !1157, line: 324, type: !1160, isLocal: true, isDefinition: true, align: 32)
!1160 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1161)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1162)
!1162 = !{!1163, !1164, !1165, !1166, !1172, !1173}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1161, file: !137, line: 380, baseType: !140, size: 32)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1161, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1161, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1161, file: !137, line: 386, baseType: !1167, size: 32, offset: 96)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 32)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1169)
!1169 = !{!1170, !1171}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1168, file: !137, line: 359, baseType: !150, size: 8)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1168, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1161, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1161, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1174 = !DIGlobalVariableExpression(var: !1175, expr: !DIExpression())
!1175 = distinct !DIGlobalVariable(name: "__init___device_crypto_tinycrypt", scope: !1151, file: !1157, line: 324, type: !1176, isLocal: true, isDefinition: true, align: 32)
!1176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1177)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1178)
!1178 = !{!1179, !1184}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1177, file: !434, line: 60, baseType: !1180, size: 32)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 32)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{!125, !1183}
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 32)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1177, file: !434, line: 65, baseType: !1183, size: 32, offset: 32)
!1185 = !DIGlobalVariableExpression(var: !1186, expr: !DIExpression())
!1186 = distinct !DIGlobalVariable(name: "__devstate_crypto_tinycrypt", scope: !1151, file: !1157, line: 324, type: !1168, isLocal: true, isDefinition: true, align: 8)
!1187 = !DIGlobalVariableExpression(var: !1188, expr: !DIExpression())
!1188 = distinct !DIGlobalVariable(name: "crypto_enc_funcs", scope: !1151, file: !1157, line: 317, type: !1189, isLocal: true, isDefinition: true)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_driver_api", file: !128, line: 65, size: 224, elements: !1190)
!1190 = !{!1191, !1192, !1268, !1272, !1280, !1303, !1307}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "query_hw_caps", scope: !1189, file: !128, line: 66, baseType: !1180, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_begin_session", scope: !1189, file: !128, line: 69, baseType: !1193, size: 32, offset: 32)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!125, !1183, !1196, !39, !30, !42}
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 32)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ctx", file: !31, line: 110, size: 256, elements: !1198)
!1198 = !{!1199, !1241, !1246, !1247, !1248, !1249, !1266, !1267}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1197, file: !31, line: 116, baseType: !1200, size: 64)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ops", file: !31, line: 74, size: 64, elements: !1201)
!1201 = !{!1202, !1203}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_mode", scope: !1200, file: !31, line: 76, baseType: !30, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_member, scope: !1200, file: !31, line: 78, baseType: !1204, size: 32, offset: 32)
!1204 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1200, file: !31, line: 78, size: 32, elements: !1205)
!1205 = !{!1206, !1220, !1225, !1227, !1239}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "block_crypt_hndlr", scope: !1204, file: !31, line: 79, baseType: !1207, size: 32)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "block_op_t", file: !31, line: 57, baseType: !1208)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 32)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{!125, !1196, !1211}
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_pkt", file: !31, line: 180, size: 192, elements: !1213)
!1213 = !{!1214, !1215, !1216, !1217, !1218, !1219}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !1212, file: !31, line: 183, baseType: !184, size: 32)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !1212, file: !31, line: 186, baseType: !125, size: 32, offset: 32)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !1212, file: !31, line: 192, baseType: !184, size: 32, offset: 64)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf_max", scope: !1212, file: !31, line: 197, baseType: !125, size: 32, offset: 96)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "out_len", scope: !1212, file: !31, line: 202, baseType: !125, size: 32, offset: 128)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1212, file: !31, line: 208, baseType: !1196, size: 32, offset: 160)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "cbc_crypt_hndlr", scope: !1204, file: !31, line: 80, baseType: !1221, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbc_op_t", file: !31, line: 62, baseType: !1222)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 32)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{!125, !1196, !1211, !184}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_crypt_hndlr", scope: !1204, file: !31, line: 81, baseType: !1226, size: 32)
!1226 = !DIDerivedType(tag: DW_TAG_typedef, name: "ctr_op_t", file: !31, line: 65, baseType: !1222)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_crypt_hndlr", scope: !1204, file: !31, line: 82, baseType: !1228, size: 32)
!1228 = !DIDerivedType(tag: DW_TAG_typedef, name: "ccm_op_t", file: !31, line: 68, baseType: !1229)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 32)
!1230 = !DISubroutineType(types: !1231)
!1231 = !{!125, !1196, !1232, !184}
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 32)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_aead_pkt", file: !31, line: 217, size: 128, elements: !1234)
!1234 = !{!1235, !1236, !1237, !1238}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !1233, file: !31, line: 219, baseType: !1211, size: 32)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "ad", scope: !1233, file: !31, line: 224, baseType: !184, size: 32, offset: 32)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "ad_len", scope: !1233, file: !31, line: 227, baseType: !208, size: 32, offset: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !1233, file: !31, line: 233, baseType: !184, size: 32, offset: 96)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_crypt_hndlr", scope: !1204, file: !31, line: 83, baseType: !1240, size: 32)
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcm_op_t", file: !31, line: 71, baseType: !1229)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1197, file: !31, line: 126, baseType: !1242, size: 32, offset: 64)
!1242 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1197, file: !31, line: 119, size: 32, elements: !1243)
!1243 = !{!1244, !1245}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "bit_stream", scope: !1242, file: !31, line: 121, baseType: !184, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !1242, file: !31, line: 125, baseType: !124, size: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !1197, file: !31, line: 131, baseType: !1183, size: 32, offset: 96)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !1197, file: !31, line: 140, baseType: !124, size: 32, offset: 128)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "app_sessn_state", scope: !1197, file: !31, line: 146, baseType: !124, size: 32, offset: 160)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "mode_params", scope: !1197, file: !31, line: 156, baseType: !1250, size: 32, offset: 192)
!1250 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1197, file: !31, line: 152, size: 32, elements: !1251)
!1251 = !{!1252, !1257, !1261}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_info", scope: !1250, file: !31, line: 153, baseType: !1253, size: 32)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ccm_params", file: !31, line: 87, size: 32, elements: !1254)
!1254 = !{!1255, !1256}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !1253, file: !31, line: 88, baseType: !227, size: 16)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !1253, file: !31, line: 89, baseType: !227, size: 16, offset: 16)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_info", scope: !1250, file: !31, line: 154, baseType: !1258, size: 32)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctr_params", file: !31, line: 92, size: 32, elements: !1259)
!1259 = !{!1260}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_len", scope: !1258, file: !31, line: 96, baseType: !208, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_info", scope: !1250, file: !31, line: 155, baseType: !1262, size: 32)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gcm_params", file: !31, line: 99, size: 32, elements: !1263)
!1263 = !{!1264, !1265}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !1262, file: !31, line: 100, baseType: !227, size: 16)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !1262, file: !31, line: 101, baseType: !227, size: 16, offset: 16)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !1197, file: !31, line: 161, baseType: !227, size: 16, offset: 224)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1197, file: !31, line: 169, baseType: !227, size: 16, offset: 240)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_free_session", scope: !1189, file: !128, line: 74, baseType: !1269, size: 32, offset: 64)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 32)
!1270 = !DISubroutineType(types: !1271)
!1271 = !{!125, !1183, !1196}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_async_callback_set", scope: !1189, file: !128, line: 77, baseType: !1273, size: 32, offset: 96)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 32)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{!125, !1183, !1276}
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "cipher_completion_cb", file: !31, line: 242, baseType: !1277)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 32)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{null, !1211, !125}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "hash_begin_session", scope: !1189, file: !128, line: 81, baseType: !1281, size: 32, offset: 128)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 32)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{!125, !1183, !1284, !116}
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 32)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_ctx", file: !117, line: 47, size: 128, elements: !1286)
!1286 = !{!1287, !1288, !1289, !1301, !1302}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !1285, file: !117, line: 51, baseType: !1183, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !1285, file: !117, line: 60, baseType: !124, size: 32, offset: 32)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "hash_hndlr", scope: !1285, file: !117, line: 65, baseType: !1290, size: 32, offset: 64)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_op_t", file: !117, line: 38, baseType: !1291)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{!125, !1284, !1294, !153}
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 32)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_pkt", file: !117, line: 88, size: 128, elements: !1296)
!1296 = !{!1297, !1298, !1299, !1300}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !1295, file: !117, line: 91, baseType: !184, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !1295, file: !117, line: 94, baseType: !272, size: 32, offset: 32)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !1295, file: !117, line: 101, baseType: !184, size: 32, offset: 64)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1295, file: !117, line: 107, baseType: !1284, size: 32, offset: 96)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "started", scope: !1285, file: !117, line: 70, baseType: !153, size: 8, offset: 96)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1285, file: !117, line: 78, baseType: !227, size: 16, offset: 112)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "hash_free_session", scope: !1189, file: !128, line: 84, baseType: !1304, size: 32, offset: 160)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 32)
!1305 = !DISubroutineType(types: !1306)
!1306 = !{!125, !1183, !1284}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "hash_async_callback_set", scope: !1189, file: !128, line: 86, baseType: !1308, size: 32, offset: 192)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 32)
!1309 = !DISubroutineType(types: !1310)
!1310 = !{!125, !1183, !1311}
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_completion_cb", file: !117, line: 114, baseType: !1312)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 32)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{null, !1294, !125}
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "tc_driver_state", scope: !1151, file: !1157, line: 26, type: !1317, isLocal: true, isDefinition: true)
!1317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1318, size: 2880, elements: !562)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_shim_drv_state", file: !1319, line: 22, size: 1440, elements: !1320)
!1319 = !DIFile(filename: "zephyr/drivers/crypto/crypto_tc_shim_priv.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1320 = !{!1321, !1322}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "in_use", scope: !1318, file: !1319, line: 23, baseType: !125, size: 32)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "session_key", scope: !1318, file: !1319, line: 24, baseType: !1323, size: 1408, offset: 32)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !1324)
!1324 = !{!1325}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1323, file: !492, line: 65, baseType: !497, size: 1408)
!1326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1327)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !1328)
!1328 = !{!1329, !1330}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1327, file: !373, line: 17, baseType: !140, size: 32)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1327, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1333, file: !1502, line: 762, type: !1611, isLocal: true, isDefinition: true)
!1333 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1334, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1335, retainedTypes: !1353, globals: !1499, splitDebugInlining: false, nameTableKind: None)
!1334 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!1335 = !{!46, !1336, !1342, !1347, !957}
!1336 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1337, line: 506, baseType: !32, size: 32, elements: !1338)
!1337 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1338 = !{!1339, !1340, !1341}
!1339 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1340 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1341 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1342 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1337, line: 512, baseType: !32, size: 32, elements: !1343)
!1343 = !{!1344, !1345, !1346}
!1344 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1345 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1346 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1347 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !871, line: 43, baseType: !32, size: 32, elements: !1348)
!1348 = !{!1349, !1350, !1351, !1352}
!1349 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1350 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1351 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1352 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1353 = !{!124, !125, !1354, !1424, !1429, !1389, !1342, !1336, !1434, !1435, !208, !1449, !1404, !393, !1459, !1460}
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 32)
!1355 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1356)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1337, line: 523, size: 288, elements: !1357)
!1357 = !{!1358, !1379, !1385, !1390, !1394, !1395, !1396, !1400, !1420}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1356, file: !1337, line: 524, baseType: !1359, size: 32)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 32)
!1360 = !DISubroutineType(types: !1361)
!1361 = !{!125, !1362, !1377, !1378}
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 32)
!1363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1364)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1365)
!1365 = !{!1366, !1367, !1368, !1369, !1375, !1376}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1364, file: !137, line: 380, baseType: !140, size: 32)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1364, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1364, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1364, file: !137, line: 386, baseType: !1370, size: 32, offset: 96)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 32)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1372)
!1372 = !{!1373, !1374}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1371, file: !137, line: 359, baseType: !150, size: 8)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1371, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1364, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1364, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1337, line: 237, baseType: !150)
!1378 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1337, line: 257, baseType: !208)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1356, file: !1337, line: 530, baseType: !1380, size: 32, offset: 32)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 32)
!1381 = !DISubroutineType(types: !1382)
!1382 = !{!125, !1362, !1383}
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 32)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1337, line: 229, baseType: !208)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1356, file: !1337, line: 532, baseType: !1386, size: 32, offset: 64)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 32)
!1387 = !DISubroutineType(types: !1388)
!1388 = !{!125, !1362, !1389, !1384}
!1389 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1337, line: 216, baseType: !208)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1356, file: !1337, line: 535, baseType: !1391, size: 32, offset: 96)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 32)
!1392 = !DISubroutineType(types: !1393)
!1393 = !{!125, !1362, !1389}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1356, file: !1337, line: 537, baseType: !1391, size: 32, offset: 128)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1356, file: !1337, line: 539, baseType: !1391, size: 32, offset: 160)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1356, file: !1337, line: 541, baseType: !1397, size: 32, offset: 192)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 32)
!1398 = !DISubroutineType(types: !1399)
!1399 = !{!125, !1362, !1377, !1336, !1342}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1356, file: !1337, line: 544, baseType: !1401, size: 32, offset: 224)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 32)
!1402 = !DISubroutineType(types: !1403)
!1403 = !{!125, !1362, !1404, !153}
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 32)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1337, line: 478, size: 96, elements: !1406)
!1406 = !{!1407, !1414, !1419}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1405, file: !1337, line: 482, baseType: !1408, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1409, line: 33, baseType: !1410)
!1409 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1409, line: 29, size: 32, elements: !1411)
!1411 = !{!1412}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1410, file: !1409, line: 30, baseType: !1413, size: 32)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 32)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1405, file: !1337, line: 485, baseType: !1415, size: 32, offset: 32)
!1415 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1337, line: 464, baseType: !1416)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 32)
!1417 = !DISubroutineType(types: !1418)
!1418 = !{null, !1362, !1404, !1389}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1405, file: !1337, line: 493, baseType: !1389, size: 32, offset: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1356, file: !1337, line: 547, baseType: !1421, size: 32, offset: 256)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 32)
!1422 = !DISubroutineType(types: !1423)
!1423 = !{!208, !1362}
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 32)
!1425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1426)
!1426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1337, line: 428, size: 32, elements: !1427)
!1427 = !{!1428}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1426, file: !1337, line: 434, baseType: !1389, size: 32)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 32)
!1430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1431)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1337, line: 441, size: 32, elements: !1432)
!1432 = !{!1433}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1431, file: !1337, line: 447, baseType: !1389, size: 32)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 32)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 32)
!1436 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !419, line: 276, baseType: !1437)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 265, size: 320, elements: !1438)
!1438 = !{!1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1437, file: !419, line: 267, baseType: !423, size: 32)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1437, file: !419, line: 268, baseType: !423, size: 32, offset: 32)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1437, file: !419, line: 269, baseType: !423, size: 32, offset: 64)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1437, file: !419, line: 270, baseType: !423, size: 32, offset: 96)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1437, file: !419, line: 271, baseType: !423, size: 32, offset: 128)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1437, file: !419, line: 272, baseType: !423, size: 32, offset: 160)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1437, file: !419, line: 273, baseType: !423, size: 32, offset: 192)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1437, file: !419, line: 274, baseType: !423, size: 32, offset: 224)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1437, file: !419, line: 275, baseType: !1448, size: 64, offset: 256)
!1448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 64, elements: !562)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 32)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !419, line: 289, baseType: !1451)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 282, size: 288, elements: !1452)
!1452 = !{!1453, !1454, !1455, !1457, !1458}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1451, file: !419, line: 284, baseType: !423, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1451, file: !419, line: 285, baseType: !423, size: 32, offset: 32)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1451, file: !419, line: 286, baseType: !1456, size: 128, offset: 64)
!1456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 128, elements: !832)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1451, file: !419, line: 287, baseType: !980, size: 64, offset: 192)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1451, file: !419, line: 288, baseType: !423, size: 32, offset: 256)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 32)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 32)
!1461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1462)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !958, line: 100, size: 224, elements: !1463)
!1463 = !{!1464, !1469, !1470, !1479, !1484, !1489, !1494}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1462, file: !958, line: 101, baseType: !1465, size: 32)
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !958, line: 76, baseType: !1466)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 32)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{!125, !1362, !1051}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1462, file: !958, line: 102, baseType: !1465, size: 32, offset: 32)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1462, file: !958, line: 103, baseType: !1471, size: 32, offset: 64)
!1471 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !958, line: 83, baseType: !1472)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 32)
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!125, !1362, !1051, !1475, !124}
!1475 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !958, line: 72, baseType: !1476)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 32)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{null, !1362, !1051, !124}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1462, file: !958, line: 104, baseType: !1480, size: 32, offset: 96)
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !958, line: 79, baseType: !1481)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 32)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!125, !1362, !1051, !1009}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1462, file: !958, line: 105, baseType: !1485, size: 32, offset: 128)
!1485 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !958, line: 88, baseType: !1486)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 32)
!1487 = !DISubroutineType(types: !1488)
!1488 = !{!957, !1362, !1051}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1462, file: !958, line: 106, baseType: !1490, size: 32, offset: 160)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !958, line: 92, baseType: !1491)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 32)
!1492 = !DISubroutineType(types: !1493)
!1493 = !{!125, !1362, !1051, !1077}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1462, file: !958, line: 107, baseType: !1495, size: 32, offset: 192)
!1495 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !958, line: 96, baseType: !1496)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 32)
!1497 = !DISubroutineType(types: !1498)
!1498 = !{!125, !1362, !1051, !124}
!1499 = !{!1500, !1506, !1508, !1518, !1523, !1525, !1527, !1529, !1531, !1533, !1535, !1537, !1539, !1541, !1543, !1545, !1547, !1549, !1551, !1553, !1555, !1557, !1559, !1561, !1563, !1577, !1579, !1581, !1583, !1585, !1587, !1589, !1591, !1593, !1595, !1597, !1599, !1601, !1603, !1605, !1331, !1607, !1609, !1622, !1624, !1626, !1628, !1630, !1632}
!1500 = !DIGlobalVariableExpression(var: !1501, expr: !DIExpression())
!1501 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1333, file: !1502, line: 762, type: !1503, isLocal: false, isDefinition: true, align: 16)
!1502 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 80, elements: !1504)
!1504 = !{!1505}
!1505 = !DISubrange(count: 5)
!1506 = !DIGlobalVariableExpression(var: !1507, expr: !DIExpression())
!1507 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1333, file: !1502, line: 762, type: !1363, isLocal: false, isDefinition: true, align: 32)
!1508 = !DIGlobalVariableExpression(var: !1509, expr: !DIExpression())
!1509 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1333, file: !1502, line: 762, type: !1510, isLocal: true, isDefinition: true, align: 32)
!1510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1511)
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1512)
!1512 = !{!1513, !1517}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1511, file: !434, line: 60, baseType: !1514, size: 32)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 32)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{!125, !1362}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1511, file: !434, line: 65, baseType: !1362, size: 32, offset: 32)
!1518 = !DIGlobalVariableExpression(var: !1519, expr: !DIExpression())
!1519 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1333, file: !1502, line: 766, type: !1520, isLocal: false, isDefinition: true, align: 16)
!1520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 160, elements: !1521)
!1521 = !{!1522}
!1522 = !DISubrange(count: 10)
!1523 = !DIGlobalVariableExpression(var: !1524, expr: !DIExpression())
!1524 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1333, file: !1502, line: 766, type: !1363, isLocal: false, isDefinition: true, align: 32)
!1525 = !DIGlobalVariableExpression(var: !1526, expr: !DIExpression())
!1526 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1333, file: !1502, line: 766, type: !1510, isLocal: true, isDefinition: true, align: 32)
!1527 = !DIGlobalVariableExpression(var: !1528, expr: !DIExpression())
!1528 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1333, file: !1502, line: 770, type: !1503, isLocal: false, isDefinition: true, align: 16)
!1529 = !DIGlobalVariableExpression(var: !1530, expr: !DIExpression())
!1530 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1333, file: !1502, line: 770, type: !1363, isLocal: false, isDefinition: true, align: 32)
!1531 = !DIGlobalVariableExpression(var: !1532, expr: !DIExpression())
!1532 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1333, file: !1502, line: 770, type: !1510, isLocal: true, isDefinition: true, align: 32)
!1533 = !DIGlobalVariableExpression(var: !1534, expr: !DIExpression())
!1534 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1333, file: !1502, line: 774, type: !1503, isLocal: false, isDefinition: true, align: 16)
!1535 = !DIGlobalVariableExpression(var: !1536, expr: !DIExpression())
!1536 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1333, file: !1502, line: 774, type: !1363, isLocal: false, isDefinition: true, align: 32)
!1537 = !DIGlobalVariableExpression(var: !1538, expr: !DIExpression())
!1538 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1333, file: !1502, line: 774, type: !1510, isLocal: true, isDefinition: true, align: 32)
!1539 = !DIGlobalVariableExpression(var: !1540, expr: !DIExpression())
!1540 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1333, file: !1502, line: 778, type: !1503, isLocal: false, isDefinition: true, align: 16)
!1541 = !DIGlobalVariableExpression(var: !1542, expr: !DIExpression())
!1542 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1333, file: !1502, line: 778, type: !1363, isLocal: false, isDefinition: true, align: 32)
!1543 = !DIGlobalVariableExpression(var: !1544, expr: !DIExpression())
!1544 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1333, file: !1502, line: 778, type: !1510, isLocal: true, isDefinition: true, align: 32)
!1545 = !DIGlobalVariableExpression(var: !1546, expr: !DIExpression())
!1546 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1333, file: !1502, line: 782, type: !1503, isLocal: false, isDefinition: true, align: 16)
!1547 = !DIGlobalVariableExpression(var: !1548, expr: !DIExpression())
!1548 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1333, file: !1502, line: 782, type: !1363, isLocal: false, isDefinition: true, align: 32)
!1549 = !DIGlobalVariableExpression(var: !1550, expr: !DIExpression())
!1550 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1333, file: !1502, line: 782, type: !1510, isLocal: true, isDefinition: true, align: 32)
!1551 = !DIGlobalVariableExpression(var: !1552, expr: !DIExpression())
!1552 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1333, file: !1502, line: 786, type: !1503, isLocal: false, isDefinition: true, align: 16)
!1553 = !DIGlobalVariableExpression(var: !1554, expr: !DIExpression())
!1554 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1333, file: !1502, line: 786, type: !1363, isLocal: false, isDefinition: true, align: 32)
!1555 = !DIGlobalVariableExpression(var: !1556, expr: !DIExpression())
!1556 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1333, file: !1502, line: 786, type: !1510, isLocal: true, isDefinition: true, align: 32)
!1557 = !DIGlobalVariableExpression(var: !1558, expr: !DIExpression())
!1558 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1333, file: !1502, line: 790, type: !1503, isLocal: false, isDefinition: true, align: 16)
!1559 = !DIGlobalVariableExpression(var: !1560, expr: !DIExpression())
!1560 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1333, file: !1502, line: 790, type: !1363, isLocal: false, isDefinition: true, align: 32)
!1561 = !DIGlobalVariableExpression(var: !1562, expr: !DIExpression())
!1562 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1333, file: !1502, line: 790, type: !1510, isLocal: true, isDefinition: true, align: 32)
!1563 = !DIGlobalVariableExpression(var: !1564, expr: !DIExpression())
!1564 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1333, file: !1502, line: 762, type: !1565, isLocal: true, isDefinition: true)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1566, line: 237, size: 128, elements: !1567)
!1566 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1567 = !{!1568, !1569, !1570}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1565, file: !1566, line: 239, baseType: !1431, size: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1565, file: !1566, line: 241, baseType: !1362, size: 32, offset: 32)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1565, file: !1566, line: 243, baseType: !1571, size: 64, offset: 64)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1409, line: 40, baseType: !1572)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1409, line: 35, size: 64, elements: !1573)
!1573 = !{!1574, !1576}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1572, file: !1409, line: 36, baseType: !1575, size: 32)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1572, file: !1409, line: 37, baseType: !1575, size: 32, offset: 32)
!1577 = !DIGlobalVariableExpression(var: !1578, expr: !DIExpression())
!1578 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1333, file: !1502, line: 762, type: !1371, isLocal: true, isDefinition: true, align: 8)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1333, file: !1502, line: 766, type: !1565, isLocal: true, isDefinition: true)
!1581 = !DIGlobalVariableExpression(var: !1582, expr: !DIExpression())
!1582 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1333, file: !1502, line: 766, type: !1371, isLocal: true, isDefinition: true, align: 8)
!1583 = !DIGlobalVariableExpression(var: !1584, expr: !DIExpression())
!1584 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1333, file: !1502, line: 770, type: !1565, isLocal: true, isDefinition: true)
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1333, file: !1502, line: 770, type: !1371, isLocal: true, isDefinition: true, align: 8)
!1587 = !DIGlobalVariableExpression(var: !1588, expr: !DIExpression())
!1588 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1333, file: !1502, line: 774, type: !1565, isLocal: true, isDefinition: true)
!1589 = !DIGlobalVariableExpression(var: !1590, expr: !DIExpression())
!1590 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1333, file: !1502, line: 774, type: !1371, isLocal: true, isDefinition: true, align: 8)
!1591 = !DIGlobalVariableExpression(var: !1592, expr: !DIExpression())
!1592 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1333, file: !1502, line: 778, type: !1565, isLocal: true, isDefinition: true)
!1593 = !DIGlobalVariableExpression(var: !1594, expr: !DIExpression())
!1594 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1333, file: !1502, line: 778, type: !1371, isLocal: true, isDefinition: true, align: 8)
!1595 = !DIGlobalVariableExpression(var: !1596, expr: !DIExpression())
!1596 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1333, file: !1502, line: 782, type: !1565, isLocal: true, isDefinition: true)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1333, file: !1502, line: 782, type: !1371, isLocal: true, isDefinition: true, align: 8)
!1599 = !DIGlobalVariableExpression(var: !1600, expr: !DIExpression())
!1600 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1333, file: !1502, line: 786, type: !1565, isLocal: true, isDefinition: true)
!1601 = !DIGlobalVariableExpression(var: !1602, expr: !DIExpression())
!1602 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1333, file: !1502, line: 786, type: !1371, isLocal: true, isDefinition: true, align: 8)
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1333, file: !1502, line: 790, type: !1565, isLocal: true, isDefinition: true)
!1605 = !DIGlobalVariableExpression(var: !1606, expr: !DIExpression())
!1606 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1333, file: !1502, line: 790, type: !1371, isLocal: true, isDefinition: true, align: 8)
!1607 = !DIGlobalVariableExpression(var: !1608, expr: !DIExpression())
!1608 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1333, file: !1502, line: 656, type: !1355, isLocal: true, isDefinition: true)
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1333, file: !1502, line: 766, type: !1611, isLocal: true, isDefinition: true)
!1611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1612)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1566, line: 224, size: 160, elements: !1613)
!1613 = !{!1614, !1615, !1616, !1617}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1612, file: !1566, line: 226, baseType: !1426, size: 32)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1612, file: !1566, line: 228, baseType: !1009, size: 32, offset: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1612, file: !1566, line: 230, baseType: !125, size: 32, offset: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1612, file: !1566, line: 231, baseType: !1618, size: 64, offset: 96)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1005, line: 343, size: 64, elements: !1619)
!1619 = !{!1620, !1621}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1618, file: !1005, line: 344, baseType: !208, size: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1618, file: !1005, line: 345, baseType: !208, size: 32, offset: 32)
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1333, file: !1502, line: 770, type: !1611, isLocal: true, isDefinition: true)
!1624 = !DIGlobalVariableExpression(var: !1625, expr: !DIExpression())
!1625 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1333, file: !1502, line: 774, type: !1611, isLocal: true, isDefinition: true)
!1626 = !DIGlobalVariableExpression(var: !1627, expr: !DIExpression())
!1627 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1333, file: !1502, line: 778, type: !1611, isLocal: true, isDefinition: true)
!1628 = !DIGlobalVariableExpression(var: !1629, expr: !DIExpression())
!1629 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1333, file: !1502, line: 782, type: !1611, isLocal: true, isDefinition: true)
!1630 = !DIGlobalVariableExpression(var: !1631, expr: !DIExpression())
!1631 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1333, file: !1502, line: 786, type: !1611, isLocal: true, isDefinition: true)
!1632 = !DIGlobalVariableExpression(var: !1633, expr: !DIExpression())
!1633 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1333, file: !1502, line: 790, type: !1611, isLocal: true, isDefinition: true)
!1634 = !DIGlobalVariableExpression(var: !1635, expr: !DIExpression())
!1635 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1636, file: !1777, line: 44, type: !1853, isLocal: false, isDefinition: true)
!1636 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1637, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1638, retainedTypes: !1671, globals: !1774, splitDebugInlining: false, nameTableKind: None)
!1637 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!1638 = !{!46, !1639, !1646, !1653, !1660, !1666, !957}
!1639 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1091, line: 47, baseType: !32, size: 32, elements: !1640)
!1640 = !{!1641, !1642, !1643, !1644, !1645}
!1641 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1642 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1643 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1644 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1645 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1646 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1091, line: 75, baseType: !32, size: 32, elements: !1647)
!1647 = !{!1648, !1649, !1650, !1651, !1652}
!1648 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1649 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1650 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1651 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1652 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1653 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1091, line: 92, baseType: !32, size: 32, elements: !1654)
!1654 = !{!1655, !1656, !1657, !1658, !1659}
!1655 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1656 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1657 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1658 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1659 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1660 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1091, line: 84, baseType: !32, size: 32, elements: !1661)
!1661 = !{!1662, !1663, !1664, !1665}
!1662 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1663 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1664 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1665 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1666 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1091, line: 107, baseType: !32, size: 32, elements: !1667)
!1667 = !{!1668, !1669, !1670}
!1668 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1669 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1670 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1671 = !{!124, !125, !1672, !151, !150, !1721, !208, !1051, !1732, !227, !1771, !1773}
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1674)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1091, line: 336, size: 160, elements: !1675)
!1675 = !{!1676, !1695, !1699, !1703, !1716}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1674, file: !1091, line: 365, baseType: !1677, size: 32)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 32)
!1678 = !DISubroutineType(types: !1679)
!1679 = !{!125, !1680, !1112}
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1682)
!1682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1683)
!1683 = !{!1684, !1685, !1686, !1687, !1693, !1694}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1682, file: !137, line: 380, baseType: !140, size: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1682, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1682, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1682, file: !137, line: 386, baseType: !1688, size: 32, offset: 96)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 32)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1690)
!1690 = !{!1691, !1692}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1689, file: !137, line: 359, baseType: !150, size: 8)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1689, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1682, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1682, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1674, file: !1091, line: 366, baseType: !1696, size: 32, offset: 32)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 32)
!1697 = !DISubroutineType(types: !1698)
!1698 = !{null, !1680, !151}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1674, file: !1091, line: 374, baseType: !1700, size: 32, offset: 64)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 32)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!125, !1680}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1674, file: !1091, line: 377, baseType: !1704, size: 32, offset: 96)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 32)
!1705 = !DISubroutineType(types: !1706)
!1706 = !{!125, !1680, !1707}
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 32)
!1708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1709)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1091, line: 122, size: 64, elements: !1710)
!1710 = !{!1711, !1712, !1713, !1714, !1715}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1709, file: !1091, line: 123, baseType: !208, size: 32)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1709, file: !1091, line: 124, baseType: !150, size: 8, offset: 32)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1709, file: !1091, line: 125, baseType: !150, size: 8, offset: 40)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1709, file: !1091, line: 126, baseType: !150, size: 8, offset: 48)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1709, file: !1091, line: 127, baseType: !150, size: 8, offset: 56)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1674, file: !1091, line: 379, baseType: !1717, size: 32, offset: 128)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 32)
!1718 = !DISubroutineType(types: !1719)
!1719 = !{!125, !1680, !1720}
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 32)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !419, line: 508, baseType: !1723)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 499, size: 224, elements: !1724)
!1724 = !{!1725, !1726, !1727, !1728, !1729, !1730, !1731}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1723, file: !419, line: 501, baseType: !423, size: 32)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1723, file: !419, line: 502, baseType: !423, size: 32, offset: 32)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1723, file: !419, line: 503, baseType: !423, size: 32, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1723, file: !419, line: 504, baseType: !423, size: 32, offset: 96)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1723, file: !419, line: 505, baseType: !423, size: 32, offset: 128)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1723, file: !419, line: 506, baseType: !423, size: 32, offset: 160)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1723, file: !419, line: 507, baseType: !423, size: 32, offset: 192)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 32)
!1733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1734)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !958, line: 100, size: 224, elements: !1735)
!1735 = !{!1736, !1741, !1742, !1751, !1756, !1761, !1766}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1734, file: !958, line: 101, baseType: !1737, size: 32)
!1737 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !958, line: 76, baseType: !1738)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 32)
!1739 = !DISubroutineType(types: !1740)
!1740 = !{!125, !1680, !1051}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1734, file: !958, line: 102, baseType: !1737, size: 32, offset: 32)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1734, file: !958, line: 103, baseType: !1743, size: 32, offset: 64)
!1743 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !958, line: 83, baseType: !1744)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 32)
!1745 = !DISubroutineType(types: !1746)
!1746 = !{!125, !1680, !1051, !1747, !124}
!1747 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !958, line: 72, baseType: !1748)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 32)
!1749 = !DISubroutineType(types: !1750)
!1750 = !{null, !1680, !1051, !124}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1734, file: !958, line: 104, baseType: !1752, size: 32, offset: 96)
!1752 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !958, line: 79, baseType: !1753)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 32)
!1754 = !DISubroutineType(types: !1755)
!1755 = !{!125, !1680, !1051, !1009}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1734, file: !958, line: 105, baseType: !1757, size: 32, offset: 128)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !958, line: 88, baseType: !1758)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 32)
!1759 = !DISubroutineType(types: !1760)
!1760 = !{!957, !1680, !1051}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1734, file: !958, line: 106, baseType: !1762, size: 32, offset: 160)
!1762 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !958, line: 92, baseType: !1763)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 32)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{!125, !1680, !1051, !1077}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1734, file: !958, line: 107, baseType: !1767, size: 32, offset: 192)
!1767 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !958, line: 96, baseType: !1768)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 32)
!1769 = !DISubroutineType(types: !1770)
!1770 = !{!125, !1680, !1051, !124}
!1771 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1772)
!1772 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 32)
!1774 = !{!1634, !1775, !1779, !1781, !1788, !1790, !1834, !1837, !1839, !1842, !1845, !1847}
!1775 = !DIGlobalVariableExpression(var: !1776, expr: !DIExpression())
!1776 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1636, file: !1777, line: 1914, type: !1778, isLocal: false, isDefinition: true, align: 16)
!1777 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 128, elements: !337)
!1779 = !DIGlobalVariableExpression(var: !1780, expr: !DIExpression())
!1780 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1636, file: !1777, line: 1914, type: !1681, isLocal: false, isDefinition: true, align: 32)
!1781 = !DIGlobalVariableExpression(var: !1782, expr: !DIExpression())
!1782 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1636, file: !1777, line: 1914, type: !1783, isLocal: true, isDefinition: true, align: 32)
!1783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1784)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1785)
!1785 = !{!1786, !1787}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1784, file: !434, line: 60, baseType: !1700, size: 32)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1784, file: !434, line: 65, baseType: !1680, size: 32, offset: 32)
!1788 = !DIGlobalVariableExpression(var: !1789, expr: !DIExpression())
!1789 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1636, file: !1777, line: 1914, type: !1689, isLocal: true, isDefinition: true, align: 8)
!1790 = !DIGlobalVariableExpression(var: !1791, expr: !DIExpression())
!1791 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1636, file: !1777, line: 1914, type: !1792, isLocal: true, isDefinition: true)
!1792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1793)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1794, line: 22, size: 224, elements: !1795)
!1794 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1795 = !{!1796, !1797, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1793, file: !1794, line: 24, baseType: !1721, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1793, file: !1794, line: 26, baseType: !1798, size: 32, offset: 32)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 32)
!1799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1800)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1005, line: 343, size: 64, elements: !1801)
!1801 = !{!1802, !1803}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1800, file: !1005, line: 344, baseType: !208, size: 32)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1800, file: !1005, line: 345, baseType: !208, size: 32, offset: 32)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1793, file: !1794, line: 28, baseType: !272, size: 32, offset: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1793, file: !1794, line: 30, baseType: !153, size: 8, offset: 96)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1793, file: !1794, line: 32, baseType: !125, size: 32, offset: 128)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1793, file: !1794, line: 34, baseType: !153, size: 8, offset: 160)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1793, file: !1794, line: 36, baseType: !153, size: 8, offset: 168)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1793, file: !1794, line: 38, baseType: !153, size: 8, offset: 176)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1793, file: !1794, line: 40, baseType: !153, size: 8, offset: 184)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1793, file: !1794, line: 41, baseType: !1812, size: 32, offset: 192)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 32)
!1813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1814)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1815, line: 60, size: 64, elements: !1816)
!1815 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1816 = !{!1817, !1833}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1814, file: !1815, line: 69, baseType: !1818, size: 32)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1820)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1815, line: 50, size: 64, elements: !1821)
!1821 = !{!1822, !1831, !1832}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1820, file: !1815, line: 52, baseType: !1823, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1825)
!1825 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1826, line: 37, baseType: !1827)
!1826 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1826, line: 32, size: 64, elements: !1828)
!1828 = !{!1829, !1830}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1827, file: !1826, line: 34, baseType: !208, size: 32)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1827, file: !1826, line: 36, baseType: !208, size: 32, offset: 32)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1820, file: !1815, line: 54, baseType: !150, size: 8, offset: 32)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1820, file: !1815, line: 56, baseType: !150, size: 8, offset: 40)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1814, file: !1815, line: 71, baseType: !150, size: 8, offset: 32)
!1834 = !DIGlobalVariableExpression(var: !1835, expr: !DIExpression())
!1835 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1636, file: !1777, line: 1914, type: !1836, isLocal: true, isDefinition: true)
!1836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1799, size: 64, elements: !662)
!1837 = !DIGlobalVariableExpression(var: !1838, expr: !DIExpression())
!1838 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1636, file: !1777, line: 1914, type: !1813, isLocal: true, isDefinition: true)
!1839 = !DIGlobalVariableExpression(var: !1840, expr: !DIExpression())
!1840 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1636, file: !1777, line: 1914, type: !1841, isLocal: true, isDefinition: true)
!1841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 64, elements: !662)
!1842 = !DIGlobalVariableExpression(var: !1843, expr: !DIExpression())
!1843 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1636, file: !1777, line: 1914, type: !1844, isLocal: true, isDefinition: true)
!1844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1824, size: 128, elements: !562)
!1845 = !DIGlobalVariableExpression(var: !1846, expr: !DIExpression())
!1846 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1636, file: !1777, line: 1539, type: !1673, isLocal: true, isDefinition: true)
!1847 = !DIGlobalVariableExpression(var: !1848, expr: !DIExpression())
!1848 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1636, file: !1777, line: 1914, type: !1849, isLocal: true, isDefinition: true)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1794, line: 74, size: 64, elements: !1850)
!1850 = !{!1851, !1852}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1849, file: !1794, line: 76, baseType: !208, size: 32)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1849, file: !1794, line: 78, baseType: !1680, size: 32, offset: 32)
!1853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1854)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !1855)
!1855 = !{!1856, !1857}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1854, file: !373, line: 17, baseType: !140, size: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1854, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!1858 = !DIGlobalVariableExpression(var: !1859, expr: !DIExpression())
!1859 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1860, file: !1938, line: 65, type: !423, isLocal: true, isDefinition: true)
!1860 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1861, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1862, retainedTypes: !1863, globals: !1935, splitDebugInlining: false, nameTableKind: None)
!1861 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!1862 = !{!749}
!1863 = !{!1864, !1866, !888, !150, !208, !1874, !1905}
!1864 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1865, line: 46, baseType: !598)
!1865 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !680, line: 770, baseType: !1868)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 764, size: 128, elements: !1869)
!1869 = !{!1870, !1871, !1872, !1873}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1868, file: !680, line: 766, baseType: !423, size: 32)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1868, file: !680, line: 767, baseType: !423, size: 32, offset: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1868, file: !680, line: 768, baseType: !423, size: 32, offset: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1868, file: !680, line: 769, baseType: !684, size: 32, offset: 96)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !1876)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !1877)
!1877 = !{!1878, !1880, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1895, !1900, !1904}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1876, file: !680, line: 413, baseType: !1879, size: 256)
!1879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 256, elements: !337)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1876, file: !680, line: 414, baseType: !1881, size: 768, offset: 256)
!1881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 768, elements: !1882)
!1882 = !{!1883}
!1883 = !DISubrange(count: 24)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1876, file: !680, line: 415, baseType: !1879, size: 256, offset: 1024)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1876, file: !680, line: 416, baseType: !1881, size: 768, offset: 1280)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1876, file: !680, line: 417, baseType: !1879, size: 256, offset: 2048)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1876, file: !680, line: 418, baseType: !1881, size: 768, offset: 2304)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1876, file: !680, line: 419, baseType: !1879, size: 256, offset: 3072)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1876, file: !680, line: 420, baseType: !1881, size: 768, offset: 3328)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1876, file: !680, line: 421, baseType: !1879, size: 256, offset: 4096)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1876, file: !680, line: 422, baseType: !1892, size: 1792, offset: 4352)
!1892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 1792, elements: !1893)
!1893 = !{!1894}
!1894 = !DISubrange(count: 56)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1876, file: !680, line: 423, baseType: !1896, size: 1920, offset: 6144)
!1896 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1897, size: 1920, elements: !1898)
!1897 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !150)
!1898 = !{!1899}
!1899 = !DISubrange(count: 240)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1876, file: !680, line: 424, baseType: !1901, size: 20608, offset: 8064)
!1901 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 20608, elements: !1902)
!1902 = !{!1903}
!1903 = !DISubrange(count: 644)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1876, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !1907)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !1908)
!1908 = !{!1909, !1910, !1911, !1912, !1913, !1914, !1915, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1926, !1927, !1928, !1930, !1932, !1934}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1907, file: !680, line: 447, baseType: !684, size: 32)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1907, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1907, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1907, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1907, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1907, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1907, file: !680, line: 453, baseType: !1916, size: 96, offset: 192)
!1916 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1897, size: 96, elements: !364)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1907, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1907, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1907, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1907, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1907, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1907, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1907, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1907, file: !680, line: 461, baseType: !1925, size: 64, offset: 512)
!1925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 64, elements: !562)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1907, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1907, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1907, file: !680, line: 464, baseType: !1929, size: 128, offset: 640)
!1929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 128, elements: !832)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1907, file: !680, line: 465, baseType: !1931, size: 160, offset: 768)
!1931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 160, elements: !1504)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1907, file: !680, line: 466, baseType: !1933, size: 160, offset: 928)
!1933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 160, elements: !1504)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1907, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!1935 = !{!1936, !1962, !1965, !1967, !1969, !1858}
!1936 = !DIGlobalVariableExpression(var: !1937, expr: !DIExpression())
!1937 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1860, file: !1938, line: 285, type: !1939, isLocal: true, isDefinition: true, align: 32)
!1938 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1940)
!1940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1941)
!1941 = !{!1942, !1961}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1940, file: !434, line: 60, baseType: !1943, size: 32)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 32)
!1944 = !DISubroutineType(types: !1945)
!1945 = !{!125, !1946}
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 32)
!1947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1948)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1949)
!1949 = !{!1950, !1951, !1952, !1953, !1959, !1960}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1948, file: !137, line: 380, baseType: !140, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1948, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1948, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1948, file: !137, line: 386, baseType: !1954, size: 32, offset: 96)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 32)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1956)
!1956 = !{!1957, !1958}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1955, file: !137, line: 359, baseType: !150, size: 8)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1955, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1948, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1948, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1940, file: !434, line: 65, baseType: !1946, size: 32, offset: 32)
!1962 = !DIGlobalVariableExpression(var: !1963, expr: !DIExpression())
!1963 = distinct !DIGlobalVariable(name: "lock", scope: !1860, file: !1938, line: 34, type: !1964, isLocal: true, isDefinition: true)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!1965 = !DIGlobalVariableExpression(var: !1966, expr: !DIExpression())
!1966 = distinct !DIGlobalVariable(name: "last_load", scope: !1860, file: !1938, line: 36, type: !208, isLocal: true, isDefinition: true)
!1967 = !DIGlobalVariableExpression(var: !1968, expr: !DIExpression())
!1968 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1860, file: !1938, line: 48, type: !208, isLocal: true, isDefinition: true)
!1969 = !DIGlobalVariableExpression(var: !1970, expr: !DIExpression())
!1970 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1860, file: !1938, line: 54, type: !208, isLocal: true, isDefinition: true)
!1971 = !DIGlobalVariableExpression(var: !1972, expr: !DIExpression())
!1972 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1973, file: !2055, line: 22, type: !2057, isLocal: true, isDefinition: true)
!1973 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1974, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1975, retainedTypes: !1976, globals: !2052, splitDebugInlining: false, nameTableKind: None)
!1974 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!1975 = !{!1336, !1342}
!1976 = !{!1977, !2041, !2046, !1389, !1342, !1336, !2051, !124}
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 32)
!1978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1979)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1337, line: 523, size: 288, elements: !1980)
!1980 = !{!1981, !2000, !2004, !2008, !2012, !2013, !2014, !2018, !2037}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1979, file: !1337, line: 524, baseType: !1982, size: 32)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 32)
!1983 = !DISubroutineType(types: !1984)
!1984 = !{!125, !1985, !1377, !1378}
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 32)
!1986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1987)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1988)
!1988 = !{!1989, !1990, !1991, !1992, !1998, !1999}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1987, file: !137, line: 380, baseType: !140, size: 32)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1987, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1987, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1987, file: !137, line: 386, baseType: !1993, size: 32, offset: 96)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 32)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1995)
!1995 = !{!1996, !1997}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1994, file: !137, line: 359, baseType: !150, size: 8)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1994, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1987, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1987, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1979, file: !1337, line: 530, baseType: !2001, size: 32, offset: 32)
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 32)
!2002 = !DISubroutineType(types: !2003)
!2003 = !{!125, !1985, !1383}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1979, file: !1337, line: 532, baseType: !2005, size: 32, offset: 64)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 32)
!2006 = !DISubroutineType(types: !2007)
!2007 = !{!125, !1985, !1389, !1384}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1979, file: !1337, line: 535, baseType: !2009, size: 32, offset: 96)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 32)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!125, !1985, !1389}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1979, file: !1337, line: 537, baseType: !2009, size: 32, offset: 128)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1979, file: !1337, line: 539, baseType: !2009, size: 32, offset: 160)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1979, file: !1337, line: 541, baseType: !2015, size: 32, offset: 192)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 32)
!2016 = !DISubroutineType(types: !2017)
!2017 = !{!125, !1985, !1377, !1336, !1342}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1979, file: !1337, line: 544, baseType: !2019, size: 32, offset: 224)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 32)
!2020 = !DISubroutineType(types: !2021)
!2021 = !{!125, !1985, !2022, !153}
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 32)
!2023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1337, line: 478, size: 96, elements: !2024)
!2024 = !{!2025, !2031, !2036}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2023, file: !1337, line: 482, baseType: !2026, size: 32)
!2026 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1409, line: 33, baseType: !2027)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1409, line: 29, size: 32, elements: !2028)
!2028 = !{!2029}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2027, file: !1409, line: 30, baseType: !2030, size: 32)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2023, file: !1337, line: 485, baseType: !2032, size: 32, offset: 32)
!2032 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1337, line: 464, baseType: !2033)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 32)
!2034 = !DISubroutineType(types: !2035)
!2035 = !{null, !1985, !2022, !1389}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !2023, file: !1337, line: 493, baseType: !1389, size: 32, offset: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1979, file: !1337, line: 547, baseType: !2038, size: 32, offset: 256)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 32)
!2039 = !DISubroutineType(types: !2040)
!2040 = !{!208, !1985}
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2043)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1337, line: 428, size: 32, elements: !2044)
!2044 = !{!2045}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2043, file: !1337, line: 434, baseType: !1389, size: 32)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 32)
!2047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2048)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1337, line: 441, size: 32, elements: !2049)
!2049 = !{!2050}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2048, file: !1337, line: 447, baseType: !1389, size: 32)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 32)
!2052 = !{!2053, !1971}
!2053 = !DIGlobalVariableExpression(var: !2054, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!2054 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1973, file: !2055, line: 37, type: !2056, isLocal: true, isDefinition: true)
!2055 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !272)
!2057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2058, size: 352, elements: !2059)
!2058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1985)
!2059 = !{!2060}
!2060 = !DISubrange(count: 11)
!2061 = !DIGlobalVariableExpression(var: !2062, expr: !DIExpression())
!2062 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !2063, file: !2105, line: 139, type: !2109, isLocal: false, isDefinition: true)
!2063 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2064, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2065, globals: !2102, splitDebugInlining: false, nameTableKind: None)
!2064 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2065 = !{!2066}
!2066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 32)
!2067 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 370, baseType: !2068)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 336, size: 1152, elements: !2069)
!2069 = !{!2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2068, file: !419, line: 338, baseType: !423, size: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2068, file: !419, line: 339, baseType: !423, size: 32, offset: 32)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2068, file: !419, line: 340, baseType: !423, size: 32, offset: 64)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2068, file: !419, line: 341, baseType: !423, size: 32, offset: 96)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2068, file: !419, line: 342, baseType: !423, size: 32, offset: 128)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2068, file: !419, line: 343, baseType: !423, size: 32, offset: 160)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2068, file: !419, line: 344, baseType: !423, size: 32, offset: 192)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2068, file: !419, line: 345, baseType: !208, size: 32, offset: 224)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2068, file: !419, line: 346, baseType: !423, size: 32, offset: 256)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2068, file: !419, line: 347, baseType: !423, size: 32, offset: 288)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2068, file: !419, line: 348, baseType: !980, size: 64, offset: 320)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2068, file: !419, line: 349, baseType: !423, size: 32, offset: 384)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2068, file: !419, line: 350, baseType: !423, size: 32, offset: 416)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2068, file: !419, line: 351, baseType: !423, size: 32, offset: 448)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2068, file: !419, line: 352, baseType: !208, size: 32, offset: 480)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2068, file: !419, line: 353, baseType: !423, size: 32, offset: 512)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2068, file: !419, line: 354, baseType: !423, size: 32, offset: 544)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2068, file: !419, line: 355, baseType: !980, size: 64, offset: 576)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2068, file: !419, line: 356, baseType: !423, size: 32, offset: 640)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2068, file: !419, line: 357, baseType: !423, size: 32, offset: 672)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2068, file: !419, line: 358, baseType: !423, size: 32, offset: 704)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2068, file: !419, line: 359, baseType: !208, size: 32, offset: 736)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2068, file: !419, line: 360, baseType: !423, size: 32, offset: 768)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2068, file: !419, line: 361, baseType: !423, size: 32, offset: 800)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2068, file: !419, line: 362, baseType: !980, size: 64, offset: 832)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2068, file: !419, line: 363, baseType: !423, size: 32, offset: 896)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2068, file: !419, line: 364, baseType: !423, size: 32, offset: 928)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2068, file: !419, line: 365, baseType: !980, size: 64, offset: 960)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2068, file: !419, line: 366, baseType: !423, size: 32, offset: 1024)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2068, file: !419, line: 367, baseType: !423, size: 32, offset: 1056)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2068, file: !419, line: 368, baseType: !1001, size: 32, offset: 1088)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2068, file: !419, line: 369, baseType: !423, size: 32, offset: 1120)
!2102 = !{!2103, !2106, !2061}
!2103 = !DIGlobalVariableExpression(var: !2104, expr: !DIExpression())
!2104 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2063, file: !2105, line: 137, type: !208, isLocal: false, isDefinition: true)
!2105 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2106 = !DIGlobalVariableExpression(var: !2107, expr: !DIExpression())
!2107 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !2063, file: !2105, line: 138, type: !2108, isLocal: false, isDefinition: true)
!2108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 128, elements: !312)
!2109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 64, elements: !337)
!2110 = !DIGlobalVariableExpression(var: !2111, expr: !DIExpression())
!2111 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2112, file: !2115, line: 23, type: !2116, isLocal: false, isDefinition: true)
!2112 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2113, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, globals: !2114, splitDebugInlining: false, nameTableKind: None)
!2113 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2114 = !{!2110}
!2115 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !125)
!2117 = !DIGlobalVariableExpression(var: !2118, expr: !DIExpression())
!2118 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2119, file: !2123, line: 37, type: !2377, isLocal: false, isDefinition: true)
!2119 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2120, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2121, retainedTypes: !2130, globals: !2203, splitDebugInlining: false, nameTableKind: None)
!2120 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2121 = !{!2122, !46, !749}
!2122 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2123, line: 63, baseType: !32, size: 32, elements: !2124)
!2123 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2124 = !{!2125, !2126, !2127, !2128, !2129}
!2125 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2126 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2127 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2128 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2129 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2130 = !{!272, !124, !125, !2131, !393, !208, !2161, !888, !150, !2186}
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 32)
!2132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2133)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2134, line: 51, size: 64, elements: !2135)
!2134 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2135 = !{!2136, !2156}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2133, file: !2134, line: 52, baseType: !2137, size: 32)
!2137 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2134, line: 38, baseType: !2138)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 32)
!2139 = !DISubroutineType(types: !2140)
!2140 = !{!125, !2141, !184, !227}
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 32)
!2142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2143)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !2144)
!2144 = !{!2145, !2146, !2147, !2148, !2154, !2155}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2143, file: !137, line: 380, baseType: !140, size: 32)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2143, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2143, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2143, file: !137, line: 386, baseType: !2149, size: 32, offset: 96)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 32)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !2151)
!2151 = !{!2152, !2153}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2150, file: !137, line: 359, baseType: !150, size: 8)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2150, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2143, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2143, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2133, file: !2134, line: 53, baseType: !2157, size: 32, offset: 32)
!2157 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2134, line: 47, baseType: !2158)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 32)
!2159 = !DISubroutineType(types: !2160)
!2160 = !{!125, !2141, !184, !227, !208}
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 32)
!2162 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2163)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2164)
!2164 = !{!2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2163, file: !680, line: 447, baseType: !684, size: 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2163, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2163, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2163, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2163, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2163, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2163, file: !680, line: 453, baseType: !1916, size: 96, offset: 192)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2163, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2163, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2163, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2163, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2163, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2163, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2163, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2163, file: !680, line: 461, baseType: !1925, size: 64, offset: 512)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2163, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2163, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2163, file: !680, line: 464, baseType: !1929, size: 128, offset: 640)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2163, file: !680, line: 465, baseType: !1931, size: 160, offset: 768)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2163, file: !680, line: 466, baseType: !1933, size: 160, offset: 928)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2163, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !2188)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !2189)
!2189 = !{!2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2188, file: !680, line: 413, baseType: !1879, size: 256)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2188, file: !680, line: 414, baseType: !1881, size: 768, offset: 256)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2188, file: !680, line: 415, baseType: !1879, size: 256, offset: 1024)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2188, file: !680, line: 416, baseType: !1881, size: 768, offset: 1280)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2188, file: !680, line: 417, baseType: !1879, size: 256, offset: 2048)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2188, file: !680, line: 418, baseType: !1881, size: 768, offset: 2304)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2188, file: !680, line: 419, baseType: !1879, size: 256, offset: 3072)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2188, file: !680, line: 420, baseType: !1881, size: 768, offset: 3328)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2188, file: !680, line: 421, baseType: !1879, size: 256, offset: 4096)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2188, file: !680, line: 422, baseType: !1892, size: 1792, offset: 4352)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2188, file: !680, line: 423, baseType: !1896, size: 1920, offset: 6144)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2188, file: !680, line: 424, baseType: !1901, size: 20608, offset: 8064)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2188, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!2203 = !{!2117, !2204, !2326, !2335, !2337, !2340, !2345, !2347, !2352}
!2204 = !DIGlobalVariableExpression(var: !2205, expr: !DIExpression())
!2205 = distinct !DIGlobalVariable(name: "_kernel", scope: !2119, file: !2123, line: 40, type: !2206, isLocal: false, isDefinition: true)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !567, line: 158, size: 288, elements: !2207)
!2207 = !{!2208, !2321}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2206, file: !567, line: 159, baseType: !2209, size: 192)
!2209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2210, size: 192, elements: !662)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !567, line: 100, size: 192, elements: !2211)
!2211 = !{!2212, !2213, !2214, !2315, !2316, !2317, !2318}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2210, file: !567, line: 102, baseType: !208, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2210, file: !567, line: 105, baseType: !393, size: 32, offset: 32)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2210, file: !567, line: 108, baseType: !2215, size: 32, offset: 64)
!2215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 32)
!2216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !2217)
!2217 = !{!2218, !2276, !2288, !2289, !2290, !2291, !2297, !2310}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2216, file: !531, line: 247, baseType: !2219, size: 384)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !2220)
!2220 = !{!2221, !2245, !2252, !2253, !2254, !2263, !2264, !2265}
!2221 = !DIDerivedType(tag: DW_TAG_member, scope: !2219, file: !531, line: 60, baseType: !2222, size: 64)
!2222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2219, file: !531, line: 60, size: 64, elements: !2223)
!2223 = !{!2224, !2239}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2222, file: !531, line: 61, baseType: !2225, size: 64)
!2225 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2226)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2227)
!2227 = !{!2228, !2234}
!2228 = !DIDerivedType(tag: DW_TAG_member, scope: !2226, file: !541, line: 38, baseType: !2229, size: 32)
!2229 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2226, file: !541, line: 38, size: 32, elements: !2230)
!2230 = !{!2231, !2233}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2229, file: !541, line: 39, baseType: !2232, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2229, file: !541, line: 40, baseType: !2232, size: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, scope: !2226, file: !541, line: 42, baseType: !2235, size: 32, offset: 32)
!2235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2226, file: !541, line: 42, size: 32, elements: !2236)
!2236 = !{!2237, !2238}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2235, file: !541, line: 43, baseType: !2232, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2235, file: !541, line: 44, baseType: !2232, size: 32)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2222, file: !531, line: 62, baseType: !2240, size: 64)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !2241)
!2241 = !{!2242}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2240, file: !557, line: 50, baseType: !2243, size: 64)
!2243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2244, size: 64, elements: !562)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2219, file: !531, line: 68, baseType: !2246, size: 32, offset: 64)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 32)
!2247 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !2248)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !2249)
!2249 = !{!2250}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2248, file: !567, line: 232, baseType: !2251, size: 64)
!2251 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2226)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2219, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2219, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!2254 = !DIDerivedType(tag: DW_TAG_member, scope: !2219, file: !531, line: 90, baseType: !2255, size: 16, offset: 112)
!2255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2219, file: !531, line: 90, size: 16, elements: !2256)
!2256 = !{!2257, !2262}
!2257 = !DIDerivedType(tag: DW_TAG_member, scope: !2255, file: !531, line: 91, baseType: !2258, size: 16)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2255, file: !531, line: 91, size: 16, elements: !2259)
!2259 = !{!2260, !2261}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2258, file: !531, line: 96, baseType: !581, size: 8)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2258, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2255, file: !531, line: 100, baseType: !227, size: 16)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2219, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2219, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2219, file: !531, line: 131, baseType: !2266, size: 192, offset: 192)
!2266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2267)
!2267 = !{!2268, !2269, !2275}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2266, file: !567, line: 245, baseType: !2225, size: 64)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2266, file: !567, line: 246, baseType: !2270, size: 32, offset: 64)
!2270 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2271)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 32)
!2272 = !DISubroutineType(types: !2273)
!2273 = !{null, !2274}
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2266, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2216, file: !531, line: 250, baseType: !2277, size: 288, offset: 384)
!2277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !2278)
!2278 = !{!2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287}
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2277, file: !601, line: 26, baseType: !208, size: 32)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2277, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2277, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2277, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2277, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2277, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2277, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2277, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2277, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2216, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2216, file: !531, line: 256, baseType: !2247, size: 64, offset: 704)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2216, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2216, file: !531, line: 300, baseType: !2292, size: 96, offset: 800)
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !2293)
!2293 = !{!2294, !2295, !2296}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2292, file: !531, line: 153, baseType: !22, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2292, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2292, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2216, file: !531, line: 325, baseType: !2298, size: 32, offset: 896)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 32)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !2300)
!2300 = !{!2301, !2307, !2308}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2299, file: !624, line: 5074, baseType: !2302, size: 96)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !2303)
!2303 = !{!2304, !2305, !2306}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2302, file: !628, line: 57, baseType: !631, size: 32)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2302, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2302, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2299, file: !624, line: 5075, baseType: !2247, size: 64, offset: 96)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2299, file: !624, line: 5076, baseType: !2309, offset: 160)
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2216, file: !531, line: 343, baseType: !2311, size: 64, offset: 928)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !2312)
!2312 = !{!2313, !2314}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2311, file: !601, line: 63, baseType: !208, size: 32)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2311, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2210, file: !567, line: 111, baseType: !2215, size: 32, offset: 96)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2210, file: !567, line: 124, baseType: !125, size: 32, offset: 128)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2210, file: !567, line: 127, baseType: !150, size: 8, offset: 160)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2210, file: !567, line: 153, baseType: !2319, offset: 168)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2320, line: 33, elements: !639)
!2320 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2206, file: !567, line: 170, baseType: !2322, size: 96, offset: 192)
!2322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !567, line: 83, size: 96, elements: !2323)
!2323 = !{!2324, !2325}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2322, file: !567, line: 86, baseType: !2215, size: 32)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2322, file: !567, line: 90, baseType: !2251, size: 64, offset: 32)
!2326 = !DIGlobalVariableExpression(var: !2327, expr: !DIExpression())
!2327 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2119, file: !2123, line: 43, type: !2328, isLocal: false, isDefinition: true, align: 512)
!2328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2329, size: 8704, elements: !2333)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2330, line: 47, size: 8, elements: !2331)
!2330 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2331 = !{!2332}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2329, file: !2330, line: 48, baseType: !142, size: 8)
!2333 = !{!2334}
!2334 = !DISubrange(count: 1088)
!2335 = !DIGlobalVariableExpression(var: !2336, expr: !DIExpression())
!2336 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2119, file: !2123, line: 44, type: !2216, isLocal: false, isDefinition: true)
!2337 = !DIGlobalVariableExpression(var: !2338, expr: !DIExpression())
!2338 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2119, file: !2123, line: 48, type: !2339, isLocal: false, isDefinition: true)
!2339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2216, size: 1024, elements: !662)
!2340 = !DIGlobalVariableExpression(var: !2341, expr: !DIExpression())
!2341 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2119, file: !2123, line: 86, type: !2342, isLocal: false, isDefinition: true, align: 512)
!2342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2329, size: 16896, elements: !2343)
!2343 = !{!663, !2344}
!2344 = !DISubrange(count: 2112)
!2345 = !DIGlobalVariableExpression(var: !2346, expr: !DIExpression())
!2346 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2119, file: !2123, line: 217, type: !153, isLocal: false, isDefinition: true)
!2347 = !DIGlobalVariableExpression(var: !2348, expr: !DIExpression())
!2348 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2119, file: !2123, line: 50, type: !2349, isLocal: true, isDefinition: true, align: 512)
!2349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2329, size: 3072, elements: !2350)
!2350 = !{!663, !2351}
!2351 = !DISubrange(count: 384)
!2352 = !DIGlobalVariableExpression(var: !2353, expr: !DIExpression())
!2353 = distinct !DIGlobalVariable(name: "levels", scope: !2354, file: !2123, line: 232, type: !2374, isLocal: true, isDefinition: true)
!2354 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2123, file: !2123, line: 230, type: !2355, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2119, retainedNodes: !2357)
!2355 = !DISubroutineType(types: !2356)
!2356 = !{null, !2122}
!2357 = !{!2358, !2359, !2369, !2373}
!2358 = !DILocalVariable(name: "level", arg: 1, scope: !2354, file: !2123, line: 230, type: !2122)
!2359 = !DILocalVariable(name: "entry", scope: !2354, file: !2123, line: 244, type: !2360)
!2360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 32)
!2361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2362)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !2363)
!2363 = !{!2364, !2368}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2362, file: !434, line: 60, baseType: !2365, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 32)
!2366 = !DISubroutineType(types: !2367)
!2367 = !{!125, !2141}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2362, file: !434, line: 65, baseType: !2141, size: 32, offset: 32)
!2369 = !DILocalVariable(name: "dev", scope: !2370, file: !2123, line: 247, type: !2141)
!2370 = distinct !DILexicalBlock(scope: !2371, file: !2123, line: 246, column: 64)
!2371 = distinct !DILexicalBlock(scope: !2372, file: !2123, line: 246, column: 2)
!2372 = distinct !DILexicalBlock(scope: !2354, file: !2123, line: 246, column: 2)
!2373 = !DILocalVariable(name: "rc", scope: !2370, file: !2123, line: 248, type: !125)
!2374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2360, size: 192, elements: !2375)
!2375 = !{!2376}
!2376 = !DISubrange(count: 6)
!2377 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2378)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !2379)
!2379 = !{!2380, !2381}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2378, file: !373, line: 17, baseType: !140, size: 32)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2378, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!2382 = !DIGlobalVariableExpression(var: !2383, expr: !DIExpression())
!2383 = distinct !DIGlobalVariable(name: "states_str", scope: !2384, file: !2385, line: 276, type: !2506, isLocal: true, isDefinition: true)
!2384 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2385, file: !2385, line: 271, type: !2386, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !2497)
!2385 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2386 = !DISubroutineType(types: !2387)
!2387 = !{!140, !2388, !393, !272}
!2388 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !2389)
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 32)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !2391)
!2391 = !{!2392, !2450, !2462, !2463, !2464, !2465, !2471, !2484}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2390, file: !531, line: 247, baseType: !2393, size: 384)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !2394)
!2394 = !{!2395, !2419, !2426, !2427, !2428, !2437, !2438, !2439}
!2395 = !DIDerivedType(tag: DW_TAG_member, scope: !2393, file: !531, line: 60, baseType: !2396, size: 64)
!2396 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2393, file: !531, line: 60, size: 64, elements: !2397)
!2397 = !{!2398, !2413}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2396, file: !531, line: 61, baseType: !2399, size: 64)
!2399 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2400)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2401)
!2401 = !{!2402, !2408}
!2402 = !DIDerivedType(tag: DW_TAG_member, scope: !2400, file: !541, line: 38, baseType: !2403, size: 32)
!2403 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2400, file: !541, line: 38, size: 32, elements: !2404)
!2404 = !{!2405, !2407}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2403, file: !541, line: 39, baseType: !2406, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2400, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2403, file: !541, line: 40, baseType: !2406, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, scope: !2400, file: !541, line: 42, baseType: !2409, size: 32, offset: 32)
!2409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2400, file: !541, line: 42, size: 32, elements: !2410)
!2410 = !{!2411, !2412}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2409, file: !541, line: 43, baseType: !2406, size: 32)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2409, file: !541, line: 44, baseType: !2406, size: 32)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2396, file: !531, line: 62, baseType: !2414, size: 64)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !2415)
!2415 = !{!2416}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2414, file: !557, line: 50, baseType: !2417, size: 64)
!2417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2418, size: 64, elements: !562)
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2393, file: !531, line: 68, baseType: !2420, size: 32, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !2422)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !2423)
!2423 = !{!2424}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2422, file: !567, line: 232, baseType: !2425, size: 64)
!2425 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2400)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2393, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2393, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!2428 = !DIDerivedType(tag: DW_TAG_member, scope: !2393, file: !531, line: 90, baseType: !2429, size: 16, offset: 112)
!2429 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2393, file: !531, line: 90, size: 16, elements: !2430)
!2430 = !{!2431, !2436}
!2431 = !DIDerivedType(tag: DW_TAG_member, scope: !2429, file: !531, line: 91, baseType: !2432, size: 16)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2429, file: !531, line: 91, size: 16, elements: !2433)
!2433 = !{!2434, !2435}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2432, file: !531, line: 96, baseType: !581, size: 8)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2432, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2429, file: !531, line: 100, baseType: !227, size: 16)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2393, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2393, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2393, file: !531, line: 131, baseType: !2440, size: 192, offset: 192)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2441)
!2441 = !{!2442, !2443, !2449}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2440, file: !567, line: 245, baseType: !2399, size: 64)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2440, file: !567, line: 246, baseType: !2444, size: 32, offset: 64)
!2444 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2445)
!2445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2446, size: 32)
!2446 = !DISubroutineType(types: !2447)
!2447 = !{null, !2448}
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2440, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2390, file: !531, line: 250, baseType: !2451, size: 288, offset: 384)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !2452)
!2452 = !{!2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2451, file: !601, line: 26, baseType: !208, size: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2451, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2451, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2451, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2451, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2451, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2451, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2451, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2451, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2390, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2390, file: !531, line: 256, baseType: !2421, size: 64, offset: 704)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2390, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2390, file: !531, line: 300, baseType: !2466, size: 96, offset: 800)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !2467)
!2467 = !{!2468, !2469, !2470}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2466, file: !531, line: 153, baseType: !22, size: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2466, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2466, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2390, file: !531, line: 325, baseType: !2472, size: 32, offset: 896)
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 32)
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !2474)
!2474 = !{!2475, !2481, !2482}
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2473, file: !624, line: 5074, baseType: !2476, size: 96)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !2477)
!2477 = !{!2478, !2479, !2480}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2476, file: !628, line: 57, baseType: !631, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2476, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2476, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2473, file: !624, line: 5075, baseType: !2421, size: 64, offset: 96)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2473, file: !624, line: 5076, baseType: !2483, offset: 160)
!2483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2390, file: !531, line: 343, baseType: !2485, size: 64, offset: 928)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !2486)
!2486 = !{!2487, !2488}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2485, file: !601, line: 63, baseType: !208, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2485, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!2489 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2490, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2491, globals: !2493, splitDebugInlining: false, nameTableKind: None)
!2490 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2491 = !{!124, !140, !1864, !150, !125, !2492, !24, !272, !393, !22, !208, !1771}
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 32)
!2493 = !{!2382, !2494}
!2494 = !DIGlobalVariableExpression(var: !2495, expr: !DIExpression())
!2495 = distinct !DIGlobalVariable(name: "states_sz", scope: !2384, file: !2385, line: 279, type: !2496, isLocal: true, isDefinition: true)
!2496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2056, size: 256, elements: !337)
!2497 = !{!2498, !2499, !2500, !2501, !2502, !2503, !2504}
!2498 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2384, file: !2385, line: 271, type: !2388)
!2499 = !DILocalVariable(name: "buf", arg: 2, scope: !2384, file: !2385, line: 271, type: !393)
!2500 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2384, file: !2385, line: 271, type: !272)
!2501 = !DILocalVariable(name: "off", scope: !2384, file: !2385, line: 273, type: !272)
!2502 = !DILocalVariable(name: "bit", scope: !2384, file: !2385, line: 274, type: !150)
!2503 = !DILocalVariable(name: "thread_state", scope: !2384, file: !2385, line: 275, type: !150)
!2504 = !DILocalVariable(name: "index", scope: !2505, file: !2385, line: 293, type: !150)
!2505 = distinct !DILexicalBlock(scope: !2384, file: !2385, line: 293, column: 2)
!2506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 256, elements: !337)
!2507 = !DIGlobalVariableExpression(var: !2508, expr: !DIExpression())
!2508 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2509, file: !2617, line: 56, type: !2606, isLocal: false, isDefinition: true)
!2509 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2510, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2511, globals: !2614, splitDebugInlining: false, nameTableKind: None)
!2510 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2511 = !{!2512, !393, !124, !2612, !184, !1864, !888, !125, !208, !1771, !2613}
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 32)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !2514)
!2514 = !{!2515, !2573, !2585, !2586, !2587, !2588, !2594, !2607}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2513, file: !531, line: 247, baseType: !2516, size: 384)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !2517)
!2517 = !{!2518, !2542, !2549, !2550, !2551, !2560, !2561, !2562}
!2518 = !DIDerivedType(tag: DW_TAG_member, scope: !2516, file: !531, line: 60, baseType: !2519, size: 64)
!2519 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2516, file: !531, line: 60, size: 64, elements: !2520)
!2520 = !{!2521, !2536}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2519, file: !531, line: 61, baseType: !2522, size: 64)
!2522 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2523)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2524)
!2524 = !{!2525, !2531}
!2525 = !DIDerivedType(tag: DW_TAG_member, scope: !2523, file: !541, line: 38, baseType: !2526, size: 32)
!2526 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2523, file: !541, line: 38, size: 32, elements: !2527)
!2527 = !{!2528, !2530}
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2526, file: !541, line: 39, baseType: !2529, size: 32)
!2529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2526, file: !541, line: 40, baseType: !2529, size: 32)
!2531 = !DIDerivedType(tag: DW_TAG_member, scope: !2523, file: !541, line: 42, baseType: !2532, size: 32, offset: 32)
!2532 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2523, file: !541, line: 42, size: 32, elements: !2533)
!2533 = !{!2534, !2535}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2532, file: !541, line: 43, baseType: !2529, size: 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2532, file: !541, line: 44, baseType: !2529, size: 32)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2519, file: !531, line: 62, baseType: !2537, size: 64)
!2537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !2538)
!2538 = !{!2539}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2537, file: !557, line: 50, baseType: !2540, size: 64)
!2540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2541, size: 64, elements: !562)
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2537, size: 32)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2516, file: !531, line: 68, baseType: !2543, size: 32, offset: 64)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !2545)
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !2546)
!2546 = !{!2547}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2545, file: !567, line: 232, baseType: !2548, size: 64)
!2548 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2523)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2516, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2516, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!2551 = !DIDerivedType(tag: DW_TAG_member, scope: !2516, file: !531, line: 90, baseType: !2552, size: 16, offset: 112)
!2552 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2516, file: !531, line: 90, size: 16, elements: !2553)
!2553 = !{!2554, !2559}
!2554 = !DIDerivedType(tag: DW_TAG_member, scope: !2552, file: !531, line: 91, baseType: !2555, size: 16)
!2555 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2552, file: !531, line: 91, size: 16, elements: !2556)
!2556 = !{!2557, !2558}
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2555, file: !531, line: 96, baseType: !581, size: 8)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2555, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2552, file: !531, line: 100, baseType: !227, size: 16)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2516, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2516, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2516, file: !531, line: 131, baseType: !2563, size: 192, offset: 192)
!2563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2564)
!2564 = !{!2565, !2566, !2572}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2563, file: !567, line: 245, baseType: !2522, size: 64)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2563, file: !567, line: 246, baseType: !2567, size: 32, offset: 64)
!2567 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2568)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 32)
!2569 = !DISubroutineType(types: !2570)
!2570 = !{null, !2571}
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 32)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2563, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2513, file: !531, line: 250, baseType: !2574, size: 288, offset: 384)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !2575)
!2575 = !{!2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2574, file: !601, line: 26, baseType: !208, size: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2574, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2574, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2574, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2574, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2574, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2574, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2574, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2574, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2513, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2513, file: !531, line: 256, baseType: !2544, size: 64, offset: 704)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2513, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2513, file: !531, line: 300, baseType: !2589, size: 96, offset: 800)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !2590)
!2590 = !{!2591, !2592, !2593}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2589, file: !531, line: 153, baseType: !22, size: 32)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2589, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2589, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2513, file: !531, line: 325, baseType: !2595, size: 32, offset: 896)
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 32)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !2597)
!2597 = !{!2598, !2604, !2605}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2596, file: !624, line: 5074, baseType: !2599, size: 96)
!2599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !2600)
!2600 = !{!2601, !2602, !2603}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2599, file: !628, line: 57, baseType: !631, size: 32)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2599, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2599, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2596, file: !624, line: 5075, baseType: !2544, size: 64, offset: 96)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2596, file: !624, line: 5076, baseType: !2606, offset: 160)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2513, file: !531, line: 343, baseType: !2608, size: 64, offset: 928)
!2608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !2609)
!2609 = !{!2610, !2611}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2608, file: !601, line: 63, baseType: !208, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2608, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 32)
!2614 = !{!2507, !2615, !2618, !2620}
!2615 = !DIGlobalVariableExpression(var: !2616, expr: !DIExpression())
!2616 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2509, file: !2617, line: 404, type: !125, isLocal: true, isDefinition: true)
!2617 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2618 = !DIGlobalVariableExpression(var: !2619, expr: !DIExpression())
!2619 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2509, file: !2617, line: 405, type: !125, isLocal: true, isDefinition: true)
!2620 = !DIGlobalVariableExpression(var: !2621, expr: !DIExpression())
!2621 = distinct !DIGlobalVariable(name: "pending_current", scope: !2509, file: !2617, line: 425, type: !2512, isLocal: true, isDefinition: true)
!2622 = !DIGlobalVariableExpression(var: !2623, expr: !DIExpression())
!2623 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2624, file: !2654, line: 15, type: !1771, isLocal: true, isDefinition: true)
!2624 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2625, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2626, globals: !2651, splitDebugInlining: false, nameTableKind: None)
!2625 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2626 = !{!1864, !124, !888, !208, !1771, !125, !2627, !393, !598}
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 32)
!2628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2629)
!2629 = !{!2630, !2645, !2650}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2628, file: !567, line: 245, baseType: !2631, size: 64)
!2631 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2632)
!2632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2633)
!2633 = !{!2634, !2640}
!2634 = !DIDerivedType(tag: DW_TAG_member, scope: !2632, file: !541, line: 38, baseType: !2635, size: 32)
!2635 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2632, file: !541, line: 38, size: 32, elements: !2636)
!2636 = !{!2637, !2639}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2635, file: !541, line: 39, baseType: !2638, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2632, size: 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2635, file: !541, line: 40, baseType: !2638, size: 32)
!2640 = !DIDerivedType(tag: DW_TAG_member, scope: !2632, file: !541, line: 42, baseType: !2641, size: 32, offset: 32)
!2641 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2632, file: !541, line: 42, size: 32, elements: !2642)
!2642 = !{!2643, !2644}
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2641, file: !541, line: 43, baseType: !2638, size: 32)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2641, file: !541, line: 44, baseType: !2638, size: 32)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2628, file: !567, line: 246, baseType: !2646, size: 32, offset: 64)
!2646 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2647)
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 32)
!2648 = !DISubroutineType(types: !2649)
!2649 = !{null, !2627}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2628, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2651 = !{!2622, !2652, !2656, !2658}
!2652 = !DIGlobalVariableExpression(var: !2653, expr: !DIExpression())
!2653 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2624, file: !2654, line: 19, type: !2655, isLocal: true, isDefinition: true)
!2654 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2656 = !DIGlobalVariableExpression(var: !2657, expr: !DIExpression())
!2657 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2624, file: !2654, line: 25, type: !125, isLocal: true, isDefinition: true)
!2658 = !DIGlobalVariableExpression(var: !2659, expr: !DIExpression())
!2659 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2624, file: !2654, line: 17, type: !2660, isLocal: true, isDefinition: true)
!2660 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2632)
!2661 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2662, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2662 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2663 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2664, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2664 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2665 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2666, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2667, retainedTypes: !2687, splitDebugInlining: false, nameTableKind: None)
!2666 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2667 = !{!2668, !2676}
!2668 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2669, line: 69, baseType: !32, size: 32, elements: !2670)
!2669 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2670 = !{!2671, !2672, !2673, !2674, !2675}
!2671 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2672 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2673 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2674 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2675 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2676 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2669, line: 56, baseType: !32, size: 32, elements: !2677)
!2677 = !{!2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686}
!2678 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2679 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2680 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2681 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2682 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2683 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2684 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2685 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2686 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2687 = !{!125, !2668, !2676, !2688, !582, !160, !2690, !2691, !151, !228, !140, !272, !124, !22, !32, !387, !2693, !2694, !389, !388, !391, !390, !2689, !2695, !2696, !2697, !2698}
!2688 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2669, line: 31, baseType: !2689)
!2689 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !391)
!2690 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !273, line: 329, baseType: !32)
!2691 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2669, line: 32, baseType: !2692)
!2692 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1772)
!2693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 32)
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 32)
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 32)
!2696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !273, line: 145, baseType: !125)
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2697, size: 32)
!2699 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2700, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2700 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2701 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2702, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2703, splitDebugInlining: false, nameTableKind: None)
!2702 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2703 = !{!140, !151, !125, !32}
!2704 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2705, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2705 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2706 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2707, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2708, splitDebugInlining: false, nameTableKind: None)
!2707 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/cbc_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2708 = !{!184, !490, !2709}
!2709 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !2710)
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 32)
!2711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !2712)
!2712 = !{!2713}
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2711, file: !492, line: 65, baseType: !497, size: 1408)
!2714 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2715, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2716, splitDebugInlining: false, nameTableKind: None)
!2715 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/ctr_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2716 = !{!184, !2717, !150}
!2717 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !2718)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 32)
!2719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !2720)
!2720 = !{!2721}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2719, file: !492, line: 65, baseType: !497, size: 1408)
!2722 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2723, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2724, splitDebugInlining: false, nameTableKind: None)
!2723 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/ccm_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2724 = !{!2725, !2731, !184, !150, !227}
!2725 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCCcmMode_t", file: !2726, line: 95, baseType: !2727)
!2726 = !DIFile(filename: "modules/crypto/tinycrypt/lib/include/tinycrypt/ccm_mode.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 32)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_ccm_mode_struct", file: !2726, line: 91, size: 96, elements: !2729)
!2729 = !{!2730, !2736, !2737}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "sched", scope: !2728, file: !2726, line: 92, baseType: !2731, size: 32)
!2731 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !2732)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 32)
!2733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !2734)
!2734 = !{!2735}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2733, file: !492, line: 65, baseType: !497, size: 1408)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "nonce", scope: !2728, file: !2726, line: 93, baseType: !184, size: 32, offset: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "mlen", scope: !2728, file: !2726, line: 94, baseType: !32, size: 32, offset: 64)
!2738 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2739, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2740, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2739 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2740 = !{!2741, !46}
!2741 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2742, line: 27, baseType: !32, size: 32, elements: !2743)
!2742 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2743 = !{!2744, !2745, !2746, !2747, !2748}
!2744 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2745 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2746 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2747 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2748 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2749 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2750, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2751, retainedTypes: !2752, splitDebugInlining: false, nameTableKind: None)
!2750 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2751 = !{!749, !2741, !46}
!2752 = !{!914, !2753, !124, !125, !888, !208, !150, !2770}
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2754, size: 32)
!2754 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !2755)
!2755 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !2756)
!2756 = !{!2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2755, file: !680, line: 413, baseType: !1879, size: 256)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2755, file: !680, line: 414, baseType: !1881, size: 768, offset: 256)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2755, file: !680, line: 415, baseType: !1879, size: 256, offset: 1024)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2755, file: !680, line: 416, baseType: !1881, size: 768, offset: 1280)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2755, file: !680, line: 417, baseType: !1879, size: 256, offset: 2048)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2755, file: !680, line: 418, baseType: !1881, size: 768, offset: 2304)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2755, file: !680, line: 419, baseType: !1879, size: 256, offset: 3072)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2755, file: !680, line: 420, baseType: !1881, size: 768, offset: 3328)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2755, file: !680, line: 421, baseType: !1879, size: 256, offset: 4096)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2755, file: !680, line: 422, baseType: !1892, size: 1792, offset: 4352)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2755, file: !680, line: 423, baseType: !1896, size: 1920, offset: 6144)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2755, file: !680, line: 424, baseType: !1901, size: 20608, offset: 8064)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2755, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2771, size: 32)
!2771 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2772)
!2772 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2773)
!2773 = !{!2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2772, file: !680, line: 447, baseType: !684, size: 32)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2772, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2772, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2772, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2772, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2772, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2772, file: !680, line: 453, baseType: !1916, size: 96, offset: 192)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2772, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2772, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2772, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2772, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2772, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2772, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2772, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2772, file: !680, line: 461, baseType: !1925, size: 64, offset: 512)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2772, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2772, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2772, file: !680, line: 464, baseType: !1929, size: 128, offset: 640)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2772, file: !680, line: 465, baseType: !1931, size: 160, offset: 768)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2772, file: !680, line: 466, baseType: !1933, size: 160, offset: 928)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2772, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2795 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2796, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2796 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2797 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2798, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2799, splitDebugInlining: false, nameTableKind: None)
!2798 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2799 = !{!124, !125, !22, !2800}
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 32)
!2801 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2802)
!2802 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2803)
!2803 = !{!2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824}
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2802, file: !680, line: 447, baseType: !684, size: 32)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2802, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2802, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2802, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2802, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2802, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2802, file: !680, line: 453, baseType: !1916, size: 96, offset: 192)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2802, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2802, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2802, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2802, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2802, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2802, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2802, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2802, file: !680, line: 461, baseType: !1925, size: 64, offset: 512)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2802, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2802, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2802, file: !680, line: 464, baseType: !1929, size: 128, offset: 640)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2802, file: !680, line: 465, baseType: !1931, size: 160, offset: 768)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2802, file: !680, line: 466, baseType: !1933, size: 160, offset: 928)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2802, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2825 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2826, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2827, splitDebugInlining: false, nameTableKind: None)
!2826 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2827 = !{!2828, !124, !125}
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2830)
!2830 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2831)
!2831 = !{!2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2830, file: !680, line: 447, baseType: !684, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2830, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2830, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2830, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2830, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2830, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2830, file: !680, line: 453, baseType: !1916, size: 96, offset: 192)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2830, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2830, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2830, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2830, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2830, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2830, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2830, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2830, file: !680, line: 461, baseType: !1925, size: 64, offset: 512)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2830, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2830, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2830, file: !680, line: 464, baseType: !1929, size: 128, offset: 640)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2830, file: !680, line: 465, baseType: !1931, size: 160, offset: 768)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2830, file: !680, line: 466, baseType: !1933, size: 160, offset: 928)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2830, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2853 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2854, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2855, splitDebugInlining: false, nameTableKind: None)
!2854 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2855 = !{!2856, !208, !124, !125}
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 32)
!2857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2858, line: 98, size: 256, elements: !2859)
!2858 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2859 = !{!2860, !2865, !2870, !2875, !2880, !2885, !2890, !2895}
!2860 = !DIDerivedType(tag: DW_TAG_member, scope: !2857, file: !2858, line: 99, baseType: !2861, size: 32)
!2861 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2857, file: !2858, line: 99, size: 32, elements: !2862)
!2862 = !{!2863, !2864}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2861, file: !2858, line: 99, baseType: !208, size: 32)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2861, file: !2858, line: 99, baseType: !208, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_member, scope: !2857, file: !2858, line: 100, baseType: !2866, size: 32, offset: 32)
!2866 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2857, file: !2858, line: 100, size: 32, elements: !2867)
!2867 = !{!2868, !2869}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2866, file: !2858, line: 100, baseType: !208, size: 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2866, file: !2858, line: 100, baseType: !208, size: 32)
!2870 = !DIDerivedType(tag: DW_TAG_member, scope: !2857, file: !2858, line: 101, baseType: !2871, size: 32, offset: 64)
!2871 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2857, file: !2858, line: 101, size: 32, elements: !2872)
!2872 = !{!2873, !2874}
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2871, file: !2858, line: 101, baseType: !208, size: 32)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2871, file: !2858, line: 101, baseType: !208, size: 32)
!2875 = !DIDerivedType(tag: DW_TAG_member, scope: !2857, file: !2858, line: 102, baseType: !2876, size: 32, offset: 96)
!2876 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2857, file: !2858, line: 102, size: 32, elements: !2877)
!2877 = !{!2878, !2879}
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2876, file: !2858, line: 102, baseType: !208, size: 32)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2876, file: !2858, line: 102, baseType: !208, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_member, scope: !2857, file: !2858, line: 103, baseType: !2881, size: 32, offset: 128)
!2881 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2857, file: !2858, line: 103, size: 32, elements: !2882)
!2882 = !{!2883, !2884}
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2881, file: !2858, line: 103, baseType: !208, size: 32)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2881, file: !2858, line: 103, baseType: !208, size: 32)
!2885 = !DIDerivedType(tag: DW_TAG_member, scope: !2857, file: !2858, line: 104, baseType: !2886, size: 32, offset: 160)
!2886 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2857, file: !2858, line: 104, size: 32, elements: !2887)
!2887 = !{!2888, !2889}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2886, file: !2858, line: 104, baseType: !208, size: 32)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2886, file: !2858, line: 104, baseType: !208, size: 32)
!2890 = !DIDerivedType(tag: DW_TAG_member, scope: !2857, file: !2858, line: 105, baseType: !2891, size: 32, offset: 192)
!2891 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2857, file: !2858, line: 105, size: 32, elements: !2892)
!2892 = !{!2893, !2894}
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2891, file: !2858, line: 105, baseType: !208, size: 32)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2891, file: !2858, line: 105, baseType: !208, size: 32)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2857, file: !2858, line: 106, baseType: !208, size: 32, offset: 224)
!2896 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2897, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2740, retainedTypes: !2898, splitDebugInlining: false, nameTableKind: None)
!2897 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2898 = !{!2899, !124, !125, !2924, !2967, !208}
!2899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2900, size: 32)
!2900 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2901)
!2901 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2902)
!2902 = !{!2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923}
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2901, file: !680, line: 447, baseType: !684, size: 32)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2901, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2901, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2901, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2901, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2901, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2901, file: !680, line: 453, baseType: !1916, size: 96, offset: 192)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2901, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2901, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2901, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2901, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2901, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2901, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2901, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2901, file: !680, line: 461, baseType: !1925, size: 64, offset: 512)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2901, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2901, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2901, file: !680, line: 464, baseType: !1929, size: 128, offset: 640)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2901, file: !680, line: 465, baseType: !1931, size: 160, offset: 768)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2901, file: !680, line: 466, baseType: !1933, size: 160, offset: 928)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2901, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 32)
!2925 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2858, line: 141, baseType: !2926)
!2926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2858, line: 97, size: 256, elements: !2927)
!2927 = !{!2928}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2926, file: !2858, line: 107, baseType: !2929, size: 256)
!2929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2858, line: 98, size: 256, elements: !2930)
!2930 = !{!2931, !2936, !2941, !2946, !2951, !2956, !2961, !2966}
!2931 = !DIDerivedType(tag: DW_TAG_member, scope: !2929, file: !2858, line: 99, baseType: !2932, size: 32)
!2932 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2929, file: !2858, line: 99, size: 32, elements: !2933)
!2933 = !{!2934, !2935}
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2932, file: !2858, line: 99, baseType: !208, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2932, file: !2858, line: 99, baseType: !208, size: 32)
!2936 = !DIDerivedType(tag: DW_TAG_member, scope: !2929, file: !2858, line: 100, baseType: !2937, size: 32, offset: 32)
!2937 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2929, file: !2858, line: 100, size: 32, elements: !2938)
!2938 = !{!2939, !2940}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2937, file: !2858, line: 100, baseType: !208, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2937, file: !2858, line: 100, baseType: !208, size: 32)
!2941 = !DIDerivedType(tag: DW_TAG_member, scope: !2929, file: !2858, line: 101, baseType: !2942, size: 32, offset: 64)
!2942 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2929, file: !2858, line: 101, size: 32, elements: !2943)
!2943 = !{!2944, !2945}
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2942, file: !2858, line: 101, baseType: !208, size: 32)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2942, file: !2858, line: 101, baseType: !208, size: 32)
!2946 = !DIDerivedType(tag: DW_TAG_member, scope: !2929, file: !2858, line: 102, baseType: !2947, size: 32, offset: 96)
!2947 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2929, file: !2858, line: 102, size: 32, elements: !2948)
!2948 = !{!2949, !2950}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2947, file: !2858, line: 102, baseType: !208, size: 32)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2947, file: !2858, line: 102, baseType: !208, size: 32)
!2951 = !DIDerivedType(tag: DW_TAG_member, scope: !2929, file: !2858, line: 103, baseType: !2952, size: 32, offset: 128)
!2952 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2929, file: !2858, line: 103, size: 32, elements: !2953)
!2953 = !{!2954, !2955}
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2952, file: !2858, line: 103, baseType: !208, size: 32)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2952, file: !2858, line: 103, baseType: !208, size: 32)
!2956 = !DIDerivedType(tag: DW_TAG_member, scope: !2929, file: !2858, line: 104, baseType: !2957, size: 32, offset: 160)
!2957 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2929, file: !2858, line: 104, size: 32, elements: !2958)
!2958 = !{!2959, !2960}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2957, file: !2858, line: 104, baseType: !208, size: 32)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2957, file: !2858, line: 104, baseType: !208, size: 32)
!2961 = !DIDerivedType(tag: DW_TAG_member, scope: !2929, file: !2858, line: 105, baseType: !2962, size: 32, offset: 192)
!2962 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2929, file: !2858, line: 105, size: 32, elements: !2963)
!2963 = !{!2964, !2965}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2962, file: !2858, line: 105, baseType: !208, size: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2962, file: !2858, line: 105, baseType: !208, size: 32)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2929, file: !2858, line: 106, baseType: !208, size: 32, offset: 224)
!2967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!2968 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2969, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1862, retainedTypes: !2970, splitDebugInlining: false, nameTableKind: None)
!2969 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!2970 = !{!914, !888, !150, !208, !2971, !2988}
!2971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2972, size: 32)
!2972 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !2973)
!2973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !2974)
!2974 = !{!2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987}
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2973, file: !680, line: 413, baseType: !1879, size: 256)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2973, file: !680, line: 414, baseType: !1881, size: 768, offset: 256)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2973, file: !680, line: 415, baseType: !1879, size: 256, offset: 1024)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2973, file: !680, line: 416, baseType: !1881, size: 768, offset: 1280)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2973, file: !680, line: 417, baseType: !1879, size: 256, offset: 2048)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2973, file: !680, line: 418, baseType: !1881, size: 768, offset: 2304)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2973, file: !680, line: 419, baseType: !1879, size: 256, offset: 3072)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2973, file: !680, line: 420, baseType: !1881, size: 768, offset: 3328)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2973, file: !680, line: 421, baseType: !1879, size: 256, offset: 4096)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2973, file: !680, line: 422, baseType: !1892, size: 1792, offset: 4352)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2973, file: !680, line: 423, baseType: !1896, size: 1920, offset: 6144)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2973, file: !680, line: 424, baseType: !1901, size: 20608, offset: 8064)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2973, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 32)
!2989 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2990)
!2990 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2991)
!2991 = !{!2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2990, file: !680, line: 447, baseType: !684, size: 32)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2990, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2990, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2990, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2990, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2990, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2990, file: !680, line: 453, baseType: !1916, size: 96, offset: 192)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2990, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2990, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2990, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2990, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2990, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2990, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2990, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2990, file: !680, line: 461, baseType: !1925, size: 64, offset: 512)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2990, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2990, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2990, file: !680, line: 464, baseType: !1929, size: 128, offset: 640)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2990, file: !680, line: 465, baseType: !1931, size: 160, offset: 768)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2990, file: !680, line: 466, baseType: !1933, size: 160, offset: 928)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2990, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!3013 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3014, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3015, splitDebugInlining: false, nameTableKind: None)
!3014 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!3015 = !{!3016, !124, !125}
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 32)
!3017 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !3018)
!3018 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !3019)
!3019 = !{!3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040}
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3018, file: !680, line: 447, baseType: !684, size: 32)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3018, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3018, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3018, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3018, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3018, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3018, file: !680, line: 453, baseType: !1916, size: 96, offset: 192)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3018, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3018, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3018, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3018, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3018, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3018, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3018, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3018, file: !680, line: 461, baseType: !1925, size: 64, offset: 512)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3018, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3018, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3018, file: !680, line: 464, baseType: !1929, size: 128, offset: 640)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3018, file: !680, line: 465, baseType: !1931, size: 160, offset: 768)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3018, file: !680, line: 466, baseType: !1933, size: 160, offset: 928)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3018, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!3041 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3042, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3043, splitDebugInlining: false, nameTableKind: None)
!3042 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!3043 = !{!142, !393, !272, !1112, !3044, !151, !124}
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 32)
!3045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !151)
!3046 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3047, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3048, splitDebugInlining: false, nameTableKind: None)
!3047 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!3048 = !{!3049}
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3050, size: 32)
!3050 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 370, baseType: !3051)
!3051 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 336, size: 1152, elements: !3052)
!3052 = !{!3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3051, file: !419, line: 338, baseType: !423, size: 32)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3051, file: !419, line: 339, baseType: !423, size: 32, offset: 32)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3051, file: !419, line: 340, baseType: !423, size: 32, offset: 64)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3051, file: !419, line: 341, baseType: !423, size: 32, offset: 96)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3051, file: !419, line: 342, baseType: !423, size: 32, offset: 128)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3051, file: !419, line: 343, baseType: !423, size: 32, offset: 160)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3051, file: !419, line: 344, baseType: !423, size: 32, offset: 192)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3051, file: !419, line: 345, baseType: !208, size: 32, offset: 224)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3051, file: !419, line: 346, baseType: !423, size: 32, offset: 256)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3051, file: !419, line: 347, baseType: !423, size: 32, offset: 288)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3051, file: !419, line: 348, baseType: !980, size: 64, offset: 320)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3051, file: !419, line: 349, baseType: !423, size: 32, offset: 384)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3051, file: !419, line: 350, baseType: !423, size: 32, offset: 416)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3051, file: !419, line: 351, baseType: !423, size: 32, offset: 448)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3051, file: !419, line: 352, baseType: !208, size: 32, offset: 480)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3051, file: !419, line: 353, baseType: !423, size: 32, offset: 512)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3051, file: !419, line: 354, baseType: !423, size: 32, offset: 544)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3051, file: !419, line: 355, baseType: !980, size: 64, offset: 576)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3051, file: !419, line: 356, baseType: !423, size: 32, offset: 640)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3051, file: !419, line: 357, baseType: !423, size: 32, offset: 672)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3051, file: !419, line: 358, baseType: !423, size: 32, offset: 704)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3051, file: !419, line: 359, baseType: !208, size: 32, offset: 736)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3051, file: !419, line: 360, baseType: !423, size: 32, offset: 768)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3051, file: !419, line: 361, baseType: !423, size: 32, offset: 800)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3051, file: !419, line: 362, baseType: !980, size: 64, offset: 832)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3051, file: !419, line: 363, baseType: !423, size: 32, offset: 896)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3051, file: !419, line: 364, baseType: !423, size: 32, offset: 928)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3051, file: !419, line: 365, baseType: !980, size: 64, offset: 960)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3051, file: !419, line: 366, baseType: !423, size: 32, offset: 1024)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3051, file: !419, line: 367, baseType: !423, size: 32, offset: 1056)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3051, file: !419, line: 368, baseType: !1001, size: 32, offset: 1088)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3051, file: !419, line: 369, baseType: !423, size: 32, offset: 1120)
!3085 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3086, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3086 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!3087 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3088, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3089, retainedTypes: !3105, splitDebugInlining: false, nameTableKind: None)
!3088 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!3089 = !{!3090, !3097, !3101}
!3090 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3091, line: 38, baseType: !32, size: 32, elements: !3092)
!3091 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3092 = !{!3093, !3094, !3095, !3096}
!3093 = !DIEnumerator(name: "HAL_OK", value: 0)
!3094 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3095 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3096 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3097 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !953, line: 184, baseType: !32, size: 32, elements: !3098)
!3098 = !{!3099, !3100}
!3099 = !DIEnumerator(name: "RESET", value: 0)
!3100 = !DIEnumerator(name: "SET", value: 1)
!3101 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !953, line: 190, baseType: !32, size: 32, elements: !3102)
!3102 = !{!3103, !3104}
!3103 = !DIEnumerator(name: "DISABLE", value: 0)
!3104 = !DIEnumerator(name: "ENABLE", value: 1)
!3105 = !{!124, !3106, !150, !208, !1773, !3142, !3148, !3159, !227, !3160, !1771}
!3106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3107, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 370, baseType: !3108)
!3108 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 336, size: 1152, elements: !3109)
!3109 = !{!3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3108, file: !419, line: 338, baseType: !423, size: 32)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3108, file: !419, line: 339, baseType: !423, size: 32, offset: 32)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3108, file: !419, line: 340, baseType: !423, size: 32, offset: 64)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3108, file: !419, line: 341, baseType: !423, size: 32, offset: 96)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3108, file: !419, line: 342, baseType: !423, size: 32, offset: 128)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3108, file: !419, line: 343, baseType: !423, size: 32, offset: 160)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3108, file: !419, line: 344, baseType: !423, size: 32, offset: 192)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3108, file: !419, line: 345, baseType: !208, size: 32, offset: 224)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3108, file: !419, line: 346, baseType: !423, size: 32, offset: 256)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3108, file: !419, line: 347, baseType: !423, size: 32, offset: 288)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3108, file: !419, line: 348, baseType: !980, size: 64, offset: 320)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3108, file: !419, line: 349, baseType: !423, size: 32, offset: 384)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3108, file: !419, line: 350, baseType: !423, size: 32, offset: 416)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3108, file: !419, line: 351, baseType: !423, size: 32, offset: 448)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3108, file: !419, line: 352, baseType: !208, size: 32, offset: 480)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3108, file: !419, line: 353, baseType: !423, size: 32, offset: 512)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3108, file: !419, line: 354, baseType: !423, size: 32, offset: 544)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3108, file: !419, line: 355, baseType: !980, size: 64, offset: 576)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3108, file: !419, line: 356, baseType: !423, size: 32, offset: 640)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3108, file: !419, line: 357, baseType: !423, size: 32, offset: 672)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3108, file: !419, line: 358, baseType: !423, size: 32, offset: 704)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3108, file: !419, line: 359, baseType: !208, size: 32, offset: 736)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3108, file: !419, line: 360, baseType: !423, size: 32, offset: 768)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3108, file: !419, line: 361, baseType: !423, size: 32, offset: 800)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3108, file: !419, line: 362, baseType: !980, size: 64, offset: 832)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3108, file: !419, line: 363, baseType: !423, size: 32, offset: 896)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3108, file: !419, line: 364, baseType: !423, size: 32, offset: 928)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3108, file: !419, line: 365, baseType: !980, size: 64, offset: 960)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3108, file: !419, line: 366, baseType: !423, size: 32, offset: 1024)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3108, file: !419, line: 367, baseType: !423, size: 32, offset: 1056)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3108, file: !419, line: 368, baseType: !1001, size: 32, offset: 1088)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3108, file: !419, line: 369, baseType: !423, size: 32, offset: 1120)
!3142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3143, size: 32)
!3143 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !419, line: 330, baseType: !3144)
!3144 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 326, size: 64, elements: !3145)
!3145 = !{!3146, !3147}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3144, file: !419, line: 328, baseType: !423, size: 32)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3144, file: !419, line: 329, baseType: !423, size: 32, offset: 32)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 32)
!3149 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !419, line: 259, baseType: !3150)
!3150 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 250, size: 224, elements: !3151)
!3151 = !{!3152, !3153, !3154, !3155, !3156, !3157, !3158}
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3150, file: !419, line: 252, baseType: !423, size: 32)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3150, file: !419, line: 253, baseType: !423, size: 32, offset: 32)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3150, file: !419, line: 254, baseType: !423, size: 32, offset: 64)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3150, file: !419, line: 255, baseType: !423, size: 32, offset: 96)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3150, file: !419, line: 256, baseType: !423, size: 32, offset: 128)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3150, file: !419, line: 257, baseType: !423, size: 32, offset: 160)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3150, file: !419, line: 258, baseType: !423, size: 32, offset: 192)
!3159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 32)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 32)
!3161 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !419, line: 276, baseType: !3162)
!3162 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 265, size: 320, elements: !3163)
!3163 = !{!3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172}
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3162, file: !419, line: 267, baseType: !423, size: 32)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3162, file: !419, line: 268, baseType: !423, size: 32, offset: 32)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3162, file: !419, line: 269, baseType: !423, size: 32, offset: 64)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3162, file: !419, line: 270, baseType: !423, size: 32, offset: 96)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3162, file: !419, line: 271, baseType: !423, size: 32, offset: 128)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3162, file: !419, line: 272, baseType: !423, size: 32, offset: 160)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3162, file: !419, line: 273, baseType: !423, size: 32, offset: 192)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3162, file: !419, line: 274, baseType: !423, size: 32, offset: 224)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3162, file: !419, line: 275, baseType: !1448, size: 64, offset: 256)
!3173 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3174, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3175, retainedTypes: !3176, splitDebugInlining: false, nameTableKind: None)
!3174 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!3175 = !{!952}
!3176 = !{!3177, !208, !3185, !3191, !3202}
!3177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3178, size: 32)
!3178 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !680, line: 770, baseType: !3179)
!3179 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 764, size: 128, elements: !3180)
!3180 = !{!3181, !3182, !3183, !3184}
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3179, file: !680, line: 766, baseType: !423, size: 32)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3179, file: !680, line: 767, baseType: !423, size: 32, offset: 32)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3179, file: !680, line: 768, baseType: !423, size: 32, offset: 64)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3179, file: !680, line: 769, baseType: !684, size: 32, offset: 96)
!3185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3186, size: 32)
!3186 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !419, line: 330, baseType: !3187)
!3187 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 326, size: 64, elements: !3188)
!3188 = !{!3189, !3190}
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3187, file: !419, line: 328, baseType: !423, size: 32)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3187, file: !419, line: 329, baseType: !423, size: 32, offset: 32)
!3191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3192, size: 32)
!3192 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !419, line: 259, baseType: !3193)
!3193 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 250, size: 224, elements: !3194)
!3194 = !{!3195, !3196, !3197, !3198, !3199, !3200, !3201}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3193, file: !419, line: 252, baseType: !423, size: 32)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3193, file: !419, line: 253, baseType: !423, size: 32, offset: 32)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3193, file: !419, line: 254, baseType: !423, size: 32, offset: 64)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3193, file: !419, line: 255, baseType: !423, size: 32, offset: 96)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3193, file: !419, line: 256, baseType: !423, size: 32, offset: 128)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3193, file: !419, line: 257, baseType: !423, size: 32, offset: 160)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3193, file: !419, line: 258, baseType: !423, size: 32, offset: 192)
!3202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3203, size: 32)
!3203 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 370, baseType: !3204)
!3204 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 336, size: 1152, elements: !3205)
!3205 = !{!3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237}
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3204, file: !419, line: 338, baseType: !423, size: 32)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3204, file: !419, line: 339, baseType: !423, size: 32, offset: 32)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3204, file: !419, line: 340, baseType: !423, size: 32, offset: 64)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3204, file: !419, line: 341, baseType: !423, size: 32, offset: 96)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3204, file: !419, line: 342, baseType: !423, size: 32, offset: 128)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3204, file: !419, line: 343, baseType: !423, size: 32, offset: 160)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3204, file: !419, line: 344, baseType: !423, size: 32, offset: 192)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3204, file: !419, line: 345, baseType: !208, size: 32, offset: 224)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3204, file: !419, line: 346, baseType: !423, size: 32, offset: 256)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3204, file: !419, line: 347, baseType: !423, size: 32, offset: 288)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3204, file: !419, line: 348, baseType: !980, size: 64, offset: 320)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3204, file: !419, line: 349, baseType: !423, size: 32, offset: 384)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3204, file: !419, line: 350, baseType: !423, size: 32, offset: 416)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3204, file: !419, line: 351, baseType: !423, size: 32, offset: 448)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3204, file: !419, line: 352, baseType: !208, size: 32, offset: 480)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3204, file: !419, line: 353, baseType: !423, size: 32, offset: 512)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3204, file: !419, line: 354, baseType: !423, size: 32, offset: 544)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3204, file: !419, line: 355, baseType: !980, size: 64, offset: 576)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3204, file: !419, line: 356, baseType: !423, size: 32, offset: 640)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3204, file: !419, line: 357, baseType: !423, size: 32, offset: 672)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3204, file: !419, line: 358, baseType: !423, size: 32, offset: 704)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3204, file: !419, line: 359, baseType: !208, size: 32, offset: 736)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3204, file: !419, line: 360, baseType: !423, size: 32, offset: 768)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3204, file: !419, line: 361, baseType: !423, size: 32, offset: 800)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3204, file: !419, line: 362, baseType: !980, size: 64, offset: 832)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3204, file: !419, line: 363, baseType: !423, size: 32, offset: 896)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3204, file: !419, line: 364, baseType: !423, size: 32, offset: 928)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3204, file: !419, line: 365, baseType: !980, size: 64, offset: 960)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3204, file: !419, line: 366, baseType: !423, size: 32, offset: 1024)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3204, file: !419, line: 367, baseType: !423, size: 32, offset: 1056)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3204, file: !419, line: 368, baseType: !1001, size: 32, offset: 1088)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3204, file: !419, line: 369, baseType: !423, size: 32, offset: 1120)
!3238 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3239, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3240, splitDebugInlining: false, nameTableKind: None)
!3239 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!3240 = !{!124, !272}
!3241 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3242, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3243, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3242 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!3243 = !{!3244, !3251, !46}
!3244 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3245, line: 14, baseType: !32, size: 32, elements: !3246)
!3245 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3246 = !{!3247, !3248, !3249, !3250}
!3247 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3248 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3249 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3250 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3251 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3245, line: 42, baseType: !32, size: 32, elements: !3252)
!3252 = !{!3253, !3254, !3255, !3256, !3257, !3258}
!3253 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3254 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3255 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3256 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3257 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3258 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3259 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3260, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3260 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!3261 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3262, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3263, splitDebugInlining: false, nameTableKind: None)
!3262 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!3263 = !{!22, !124, !125}
!3264 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3265, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3265 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!3266 = !{!"Ubuntu clang version 14.0.6"}
!3267 = !{i32 7, !"Dwarf Version", i32 4}
!3268 = !{i32 2, !"Debug Info Version", i32 3}
!3269 = !{i32 1, !"wchar_size", i32 4}
!3270 = !{i32 1, !"min_enum_size", i32 4}
!3271 = !{i32 1, !"branch-target-enforcement", i32 0}
!3272 = !{i32 1, !"sign-return-address", i32 0}
!3273 = !{i32 1, !"sign-return-address-all", i32 0}
!3274 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3275 = !{i32 7, !"frame-pointer", i32 2}
!3276 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3277, file: !3277, line: 26, type: !3278, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2661, retainedNodes: !639)
!3277 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3278 = !DISubroutineType(types: !3279)
!3279 = !{null}
!3280 = !DILocation(line: 28, column: 1, scope: !3276)
!3281 = !{i64 2154341802, i64 2154341822, i64 2154341885}
!3282 = !DILocation(line: 29, column: 1, scope: !3276)
!3283 = !{i64 2154342217, i64 2154342237, i64 2154342300}
!3284 = !DILocation(line: 30, column: 1, scope: !3276)
!3285 = !{i64 2154342636, i64 2154342656, i64 2154342719}
!3286 = !DILocation(line: 31, column: 1, scope: !3276)
!3287 = !{i64 2154343055, i64 2154343075, i64 2154343138}
!3288 = !DILocation(line: 33, column: 1, scope: !3276)
!3289 = !{i64 2154343347, i64 2154343367, i64 2154343430}
!3290 = !DILocation(line: 35, column: 1, scope: !3276)
!3291 = !{i64 2154343672, i64 2154343692, i64 2154343755}
!3292 = !DILocation(line: 50, column: 1, scope: !3276)
!3293 = !{i64 2154344099, i64 2154344119, i64 2154344182}
!3294 = !DILocation(line: 54, column: 1, scope: !3276)
!3295 = !{i64 2154344538, i64 2154344558, i64 2154344621}
!3296 = !DILocation(line: 61, column: 1, scope: !3276)
!3297 = !{i64 2154344855, i64 2154344875, i64 2154344938}
!3298 = !DILocation(line: 63, column: 1, scope: !3276)
!3299 = !{i64 2154345235, i64 2154345255, i64 2154345318}
!3300 = !DILocation(line: 64, column: 1, scope: !3276)
!3301 = !{i64 2154345757, i64 2154345777, i64 2154345840}
!3302 = !DILocation(line: 65, column: 1, scope: !3276)
!3303 = !{i64 2154346255, i64 2154346275, i64 2154346338}
!3304 = !DILocation(line: 66, column: 1, scope: !3276)
!3305 = !{i64 2154346737, i64 2154346757, i64 2154346820}
!3306 = !DILocation(line: 67, column: 1, scope: !3276)
!3307 = !{i64 2154347244, i64 2154347264, i64 2154347327}
!3308 = !DILocation(line: 68, column: 1, scope: !3276)
!3309 = !{i64 2154347732, i64 2154347752, i64 2154347815}
!3310 = !DILocation(line: 70, column: 1, scope: !3276)
!3311 = !{i64 2154348200, i64 2154348220, i64 2154348283}
!3312 = !DILocation(line: 71, column: 1, scope: !3276)
!3313 = !{i64 2154348642, i64 2154348662, i64 2154348725}
!3314 = !DILocation(line: 72, column: 1, scope: !3276)
!3315 = !{i64 2154349100, i64 2154349120, i64 2154349183}
!3316 = !DILocation(line: 79, column: 1, scope: !3276)
!3317 = !{i64 2154349554, i64 2154349574, i64 2154349637}
!3318 = !DILocation(line: 80, column: 1, scope: !3276)
!3319 = !{i64 2154350065, i64 2154350085, i64 2154350148}
!3320 = !DILocation(line: 82, column: 1, scope: !3276)
!3321 = !{i64 2154354617, i64 2154354637, i64 2154354700}
!3322 = !DILocation(line: 97, column: 1, scope: !3276)
!3323 = !{i64 2154354954, i64 2154354974, i64 2154355037}
!3324 = !DILocation(line: 99, column: 1, scope: !3276)
!3325 = !{i64 2154355172, i64 2154355192, i64 2154355255}
!3326 = !DILocation(line: 102, column: 1, scope: !3276)
!3327 = !{i64 2154355429, i64 2154355449, i64 2154355512}
!3328 = !DILocation(line: 105, column: 1, scope: !3276)
!3329 = !{i64 2154355669, i64 2154355689, i64 2154355752}
!3330 = !DILocation(line: 115, column: 1, scope: !3276)
!3331 = !{i64 2154356008, i64 2154356028, i64 2154356091}
!3332 = !DILocation(line: 118, column: 1, scope: !3276)
!3333 = !{i64 2154356352, i64 2154356372, i64 2154356435}
!3334 = !DILocation(line: 32, column: 1, scope: !3335)
!3335 = !DILexicalBlockFile(scope: !3276, file: !3336, discriminator: 0)
!3336 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3337 = !{i64 2154356708, i64 2154356728, i64 2154356791}
!3338 = !DILocation(line: 33, column: 1, scope: !3335)
!3339 = !{i64 2154357220, i64 2154357240, i64 2154357303}
!3340 = !DILocation(line: 53, column: 1, scope: !3335)
!3341 = !{i64 2154357728, i64 2154357748, i64 2154357811}
!3342 = !DILocation(line: 54, column: 1, scope: !3335)
!3343 = !{i64 2154358146, i64 2154358166, i64 2154358229}
!3344 = !DILocation(line: 55, column: 1, scope: !3335)
!3345 = !{i64 2154358564, i64 2154358584, i64 2154358647}
!3346 = !DILocation(line: 56, column: 1, scope: !3335)
!3347 = !{i64 2154358982, i64 2154359002, i64 2154359065}
!3348 = !DILocation(line: 57, column: 1, scope: !3335)
!3349 = !{i64 2154359400, i64 2154359420, i64 2154359483}
!3350 = !DILocation(line: 58, column: 1, scope: !3335)
!3351 = !{i64 2154359818, i64 2154359838, i64 2154359901}
!3352 = !DILocation(line: 59, column: 1, scope: !3335)
!3353 = !{i64 2154360236, i64 2154360256, i64 2154360319}
!3354 = !DILocation(line: 60, column: 1, scope: !3335)
!3355 = !{i64 2154360660, i64 2154360680, i64 2154360743}
!3356 = !DILocation(line: 61, column: 1, scope: !3335)
!3357 = !{i64 2154360977, i64 2154360997, i64 2154361060}
!3358 = !DILocation(line: 70, column: 1, scope: !3335)
!3359 = !{i64 2154361206, i64 2154361226, i64 2154361289}
!3360 = !DILocation(line: 72, column: 1, scope: !3335)
!3361 = !{i64 2154361538, i64 2154361558, i64 2154361621}
!3362 = !DILocation(line: 73, column: 1, scope: !3335)
!3363 = !{i64 2154361988, i64 2154362008, i64 2154362071}
!3364 = !DILocation(line: 74, column: 1, scope: !3335)
!3365 = !{i64 2154362438, i64 2154362458, i64 2154362521}
!3366 = !DILocation(line: 75, column: 1, scope: !3335)
!3367 = !{i64 2154362888, i64 2154362908, i64 2154362971}
!3368 = !DILocation(line: 76, column: 1, scope: !3335)
!3369 = !{i64 2154363338, i64 2154363358, i64 2154363421}
!3370 = !DILocation(line: 77, column: 1, scope: !3335)
!3371 = !{i64 2154363788, i64 2154363808, i64 2154363871}
!3372 = !DILocation(line: 78, column: 1, scope: !3335)
!3373 = !{i64 2154368299, i64 2154368319, i64 2154368382}
!3374 = !DILocation(line: 79, column: 1, scope: !3335)
!3375 = !{i64 2154368749, i64 2154368769, i64 2154368832}
!3376 = !DILocation(line: 80, column: 1, scope: !3335)
!3377 = !{i64 2154369202, i64 2154369222, i64 2154369285}
!3378 = !DILocation(line: 84, column: 1, scope: !3335)
!3379 = !{i64 2154369534, i64 2154369554, i64 2154369617}
!3380 = !DILocation(line: 91, column: 1, scope: !3335)
!3381 = !{i64 2154369931, i64 2154369951, i64 2154370014}
!3382 = !DILocation(line: 93, column: 1, scope: !3335)
!3383 = !{i64 2154370298, i64 2154370318, i64 2154370381}
!3384 = !DILocation(line: 106, column: 1, scope: !3335)
!3385 = !{i64 2154370568, i64 2154370588, i64 2154370651}
!3386 = !DILocation(line: 11, column: 1, scope: !3387)
!3387 = !DILexicalBlockFile(scope: !3276, file: !3388, discriminator: 0)
!3388 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3389 = distinct !DISubprogram(name: "validate_hw_compatibility", scope: !294, file: !294, line: 80, type: !132, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3390)
!3390 = !{!3391, !3392}
!3391 = !DILocalVariable(name: "dev", arg: 1, scope: !3389, file: !294, line: 80, type: !134)
!3392 = !DILocalVariable(name: "flags", scope: !3389, file: !294, line: 82, type: !208)
!3393 = !DILocation(line: 0, scope: !3389)
!3394 = !DILocation(line: 84, column: 10, scope: !3389)
!3395 = !DILocation(line: 85, column: 13, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3389, file: !294, line: 85, column: 6)
!3397 = !DILocation(line: 85, column: 28, scope: !3396)
!3398 = !DILocation(line: 85, column: 6, scope: !3389)
!3399 = !DILocation(line: 86, column: 3, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3401, file: !294, line: 86, column: 3)
!3401 = distinct !DILexicalBlock(scope: !3402, file: !294, line: 86, column: 3)
!3402 = distinct !DILexicalBlock(scope: !3403, file: !294, line: 86, column: 3)
!3403 = distinct !DILexicalBlock(scope: !3404, file: !294, line: 86, column: 3)
!3404 = distinct !DILexicalBlock(scope: !3396, file: !294, line: 85, column: 35)
!3405 = !DILocation(line: 88, column: 3, scope: !3404)
!3406 = !DILocation(line: 91, column: 13, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3389, file: !294, line: 91, column: 6)
!3408 = !DILocation(line: 91, column: 29, scope: !3407)
!3409 = !DILocation(line: 91, column: 6, scope: !3389)
!3410 = !DILocation(line: 92, column: 3, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3412, file: !294, line: 92, column: 3)
!3412 = distinct !DILexicalBlock(scope: !3413, file: !294, line: 92, column: 3)
!3413 = distinct !DILexicalBlock(scope: !3414, file: !294, line: 92, column: 3)
!3414 = distinct !DILexicalBlock(scope: !3415, file: !294, line: 92, column: 3)
!3415 = distinct !DILexicalBlock(scope: !3407, file: !294, line: 91, column: 36)
!3416 = !DILocation(line: 94, column: 3, scope: !3415)
!3417 = !DILocation(line: 97, column: 13, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3389, file: !294, line: 97, column: 6)
!3419 = !DILocation(line: 97, column: 37, scope: !3418)
!3420 = !DILocation(line: 97, column: 6, scope: !3389)
!3421 = !DILocation(line: 98, column: 3, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3423, file: !294, line: 98, column: 3)
!3423 = distinct !DILexicalBlock(scope: !3424, file: !294, line: 98, column: 3)
!3424 = distinct !DILexicalBlock(scope: !3425, file: !294, line: 98, column: 3)
!3425 = distinct !DILexicalBlock(scope: !3426, file: !294, line: 98, column: 3)
!3426 = distinct !DILexicalBlock(scope: !3418, file: !294, line: 97, column: 44)
!3427 = !DILocation(line: 100, column: 3, scope: !3426)
!3428 = !DILocation(line: 103, column: 12, scope: !3389)
!3429 = !DILocation(line: 105, column: 2, scope: !3389)
!3430 = !DILocation(line: 107, column: 1, scope: !3389)
!3431 = distinct !DISubprogram(name: "crypto_query_hwcaps", scope: !128, file: !128, line: 108, type: !132, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3432)
!3432 = !{!3433, !3434, !3435}
!3433 = !DILocalVariable(name: "dev", arg: 1, scope: !3431, file: !128, line: 108, type: !134)
!3434 = !DILocalVariable(name: "api", scope: !3431, file: !128, line: 110, type: !126)
!3435 = !DILocalVariable(name: "tmp", scope: !3431, file: !128, line: 111, type: !125)
!3436 = !DILocation(line: 0, scope: !3431)
!3437 = !DILocation(line: 113, column: 42, scope: !3431)
!3438 = !DILocation(line: 115, column: 13, scope: !3431)
!3439 = !DILocation(line: 115, column: 8, scope: !3431)
!3440 = !DILocation(line: 125, column: 2, scope: !3431)
!3441 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3442, file: !3442, line: 175, type: !3443, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3445)
!3442 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3443 = !DISubroutineType(types: !3444)
!3444 = !{!142, !125}
!3445 = !{!3446}
!3446 = !DILocalVariable(name: "level", arg: 1, scope: !3441, file: !3442, line: 175, type: !125)
!3447 = !DILocation(line: 0, scope: !3441)
!3448 = !DILocation(line: 177, column: 2, scope: !3441)
!3449 = !DILocation(line: 189, column: 1, scope: !3441)
!3450 = distinct !DISubprogram(name: "ecb_mode", scope: !294, file: !294, line: 109, type: !295, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3451)
!3451 = !{!3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461}
!3452 = !DILocalVariable(name: "dev", arg: 1, scope: !3450, file: !294, line: 109, type: !134)
!3453 = !DILocalVariable(name: "ecb_key", scope: !3450, file: !294, line: 112, type: !311)
!3454 = !DILocalVariable(name: "ecb_plaintext", scope: !3450, file: !294, line: 116, type: !311)
!3455 = !DILocalVariable(name: "ecb_ciphertext", scope: !3450, file: !294, line: 120, type: !2108)
!3456 = !DILocalVariable(name: "encrypted", scope: !3450, file: !294, line: 125, type: !311)
!3457 = !DILocalVariable(name: "decrypted", scope: !3450, file: !294, line: 126, type: !311)
!3458 = !DILocalVariable(name: "ini", scope: !3450, file: !294, line: 127, type: !166)
!3459 = !DILocalVariable(name: "encrypt", scope: !3450, file: !294, line: 132, type: !181)
!3460 = !DILocalVariable(name: "decrypt", scope: !3450, file: !294, line: 138, type: !181)
!3461 = !DILabel(scope: !3450, name: "out", file: !294, line: 191)
!3462 = !DILocation(line: 0, scope: !3450)
!3463 = !DILocation(line: 112, column: 2, scope: !3450)
!3464 = !DILocation(line: 112, column: 10, scope: !3450)
!3465 = !DILocation(line: 116, column: 2, scope: !3450)
!3466 = !DILocation(line: 116, column: 10, scope: !3450)
!3467 = !DILocation(line: 120, column: 2, scope: !3450)
!3468 = !DILocation(line: 120, column: 16, scope: !3450)
!3469 = !DILocation(line: 125, column: 2, scope: !3450)
!3470 = !DILocation(line: 125, column: 10, scope: !3450)
!3471 = !DILocation(line: 126, column: 2, scope: !3450)
!3472 = !DILocation(line: 126, column: 10, scope: !3450)
!3473 = !DILocation(line: 127, column: 2, scope: !3450)
!3474 = !DILocation(line: 127, column: 20, scope: !3450)
!3475 = !DILocation(line: 129, column: 7, scope: !3450)
!3476 = !DILocation(line: 127, column: 26, scope: !3450)
!3477 = !DILocation(line: 130, column: 12, scope: !3450)
!3478 = !DILocation(line: 132, column: 2, scope: !3450)
!3479 = !DILocation(line: 132, column: 20, scope: !3450)
!3480 = !DILocation(line: 132, column: 30, scope: !3450)
!3481 = !DILocation(line: 138, column: 2, scope: !3450)
!3482 = !DILocation(line: 138, column: 20, scope: !3450)
!3483 = !DILocation(line: 138, column: 30, scope: !3450)
!3484 = !DILocation(line: 145, column: 6, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3450, file: !294, line: 145, column: 6)
!3486 = !DILocation(line: 145, column: 6, scope: !3450)
!3487 = !DILocation(line: 151, column: 6, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3450, file: !294, line: 151, column: 6)
!3489 = !DILocation(line: 151, column: 6, scope: !3450)
!3490 = !DILocation(line: 152, column: 3, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !294, line: 152, column: 3)
!3492 = distinct !DILexicalBlock(scope: !3493, file: !294, line: 152, column: 3)
!3493 = distinct !DILexicalBlock(scope: !3494, file: !294, line: 152, column: 3)
!3494 = distinct !DILexicalBlock(scope: !3495, file: !294, line: 152, column: 3)
!3495 = distinct !DILexicalBlock(scope: !3488, file: !294, line: 151, column: 39)
!3496 = !DILocation(line: 153, column: 3, scope: !3495)
!3497 = !DILocation(line: 156, column: 2, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3499, file: !294, line: 156, column: 2)
!3499 = distinct !DILexicalBlock(scope: !3500, file: !294, line: 156, column: 2)
!3500 = distinct !DILexicalBlock(scope: !3501, file: !294, line: 156, column: 2)
!3501 = distinct !DILexicalBlock(scope: !3450, file: !294, line: 156, column: 2)
!3502 = !DILocation(line: 158, column: 21, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3450, file: !294, line: 158, column: 6)
!3504 = !DILocation(line: 158, column: 6, scope: !3503)
!3505 = !DILocation(line: 158, column: 6, scope: !3450)
!3506 = !DILocation(line: 159, column: 3, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3508, file: !294, line: 159, column: 3)
!3508 = distinct !DILexicalBlock(scope: !3509, file: !294, line: 159, column: 3)
!3509 = distinct !DILexicalBlock(scope: !3510, file: !294, line: 159, column: 3)
!3510 = distinct !DILexicalBlock(scope: !3511, file: !294, line: 159, column: 3)
!3511 = distinct !DILexicalBlock(scope: !3503, file: !294, line: 158, column: 71)
!3512 = !DILocation(line: 161, column: 51, scope: !3511)
!3513 = !DILocation(line: 161, column: 3, scope: !3511)
!3514 = !DILocation(line: 163, column: 3, scope: !3511)
!3515 = !DILocation(line: 166, column: 2, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3517, file: !294, line: 166, column: 2)
!3517 = distinct !DILexicalBlock(scope: !3518, file: !294, line: 166, column: 2)
!3518 = distinct !DILexicalBlock(scope: !3519, file: !294, line: 166, column: 2)
!3519 = distinct !DILexicalBlock(scope: !3450, file: !294, line: 166, column: 2)
!3520 = !DILocation(line: 167, column: 2, scope: !3450)
!3521 = !DILocation(line: 169, column: 6, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3450, file: !294, line: 169, column: 6)
!3523 = !DILocation(line: 169, column: 6, scope: !3450)
!3524 = !DILocation(line: 175, column: 6, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3450, file: !294, line: 175, column: 6)
!3526 = !DILocation(line: 175, column: 6, scope: !3450)
!3527 = !DILocation(line: 176, column: 3, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3529, file: !294, line: 176, column: 3)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !294, line: 176, column: 3)
!3530 = distinct !DILexicalBlock(scope: !3531, file: !294, line: 176, column: 3)
!3531 = distinct !DILexicalBlock(scope: !3532, file: !294, line: 176, column: 3)
!3532 = distinct !DILexicalBlock(scope: !3525, file: !294, line: 175, column: 39)
!3533 = !DILocation(line: 177, column: 3, scope: !3532)
!3534 = !DILocation(line: 180, column: 2, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3536, file: !294, line: 180, column: 2)
!3536 = distinct !DILexicalBlock(scope: !3537, file: !294, line: 180, column: 2)
!3537 = distinct !DILexicalBlock(scope: !3538, file: !294, line: 180, column: 2)
!3538 = distinct !DILexicalBlock(scope: !3450, file: !294, line: 180, column: 2)
!3539 = !DILocation(line: 182, column: 21, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3450, file: !294, line: 182, column: 6)
!3541 = !DILocation(line: 182, column: 6, scope: !3540)
!3542 = !DILocation(line: 182, column: 6, scope: !3450)
!3543 = !DILocation(line: 183, column: 3, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3545, file: !294, line: 183, column: 3)
!3545 = distinct !DILexicalBlock(scope: !3546, file: !294, line: 183, column: 3)
!3546 = distinct !DILexicalBlock(scope: !3547, file: !294, line: 183, column: 3)
!3547 = distinct !DILexicalBlock(scope: !3548, file: !294, line: 183, column: 3)
!3548 = distinct !DILexicalBlock(scope: !3540, file: !294, line: 182, column: 69)
!3549 = !DILocation(line: 185, column: 50, scope: !3548)
!3550 = !DILocation(line: 185, column: 3, scope: !3548)
!3551 = !DILocation(line: 187, column: 3, scope: !3548)
!3552 = !DILocation(line: 190, column: 2, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3554, file: !294, line: 190, column: 2)
!3554 = distinct !DILexicalBlock(scope: !3555, file: !294, line: 190, column: 2)
!3555 = distinct !DILexicalBlock(scope: !3556, file: !294, line: 190, column: 2)
!3556 = distinct !DILexicalBlock(scope: !3450, file: !294, line: 190, column: 2)
!3557 = !DILocation(line: 190, column: 2, scope: !3556)
!3558 = !DILocation(line: 191, column: 1, scope: !3450)
!3559 = !DILocation(line: 192, column: 2, scope: !3450)
!3560 = !DILocation(line: 193, column: 1, scope: !3450)
!3561 = distinct !DISubprogram(name: "cipher_begin_session", scope: !128, file: !128, line: 159, type: !163, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3562)
!3562 = !{!3563, !3564, !3565, !3566, !3567, !3568, !3569}
!3563 = !DILocalVariable(name: "dev", arg: 1, scope: !3561, file: !128, line: 159, type: !134)
!3564 = !DILocalVariable(name: "ctx", arg: 2, scope: !3561, file: !128, line: 160, type: !165)
!3565 = !DILocalVariable(name: "algo", arg: 3, scope: !3561, file: !128, line: 161, type: !39)
!3566 = !DILocalVariable(name: "mode", arg: 4, scope: !3561, file: !128, line: 162, type: !30)
!3567 = !DILocalVariable(name: "optype", arg: 5, scope: !3561, file: !128, line: 163, type: !42)
!3568 = !DILocalVariable(name: "api", scope: !3561, file: !128, line: 165, type: !126)
!3569 = !DILocalVariable(name: "flags", scope: !3561, file: !128, line: 166, type: !208)
!3570 = !DILocation(line: 0, scope: !3561)
!3571 = !DILocation(line: 168, column: 42, scope: !3561)
!3572 = !DILocation(line: 169, column: 7, scope: !3561)
!3573 = !DILocation(line: 169, column: 14, scope: !3561)
!3574 = !DILocation(line: 170, column: 11, scope: !3561)
!3575 = !DILocation(line: 170, column: 23, scope: !3561)
!3576 = !DILocation(line: 187, column: 14, scope: !3561)
!3577 = !DILocation(line: 187, column: 9, scope: !3561)
!3578 = !DILocation(line: 187, column: 2, scope: !3561)
!3579 = distinct !DISubprogram(name: "cipher_block_op", scope: !128, file: !128, line: 249, type: !178, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3580)
!3580 = !{!3581, !3582}
!3581 = !DILocalVariable(name: "ctx", arg: 1, scope: !3579, file: !128, line: 249, type: !165)
!3582 = !DILocalVariable(name: "pkt", arg: 2, scope: !3579, file: !128, line: 250, type: !180)
!3583 = !DILocation(line: 0, scope: !3579)
!3584 = !DILocation(line: 255, column: 7, scope: !3579)
!3585 = !DILocation(line: 255, column: 11, scope: !3579)
!3586 = !DILocation(line: 256, column: 18, scope: !3579)
!3587 = !DILocation(line: 256, column: 9, scope: !3579)
!3588 = !DILocation(line: 256, column: 2, scope: !3579)
!3589 = distinct !DISubprogram(name: "print_buffer_comparison", scope: !294, file: !294, line: 50, type: !3590, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3592)
!3590 = !DISubroutineType(types: !3591)
!3591 = !{null, !490, !184, !272}
!3592 = !{!3593, !3594, !3595, !3596, !3597}
!3593 = !DILocalVariable(name: "wanted_result", arg: 1, scope: !3589, file: !294, line: 50, type: !490)
!3594 = !DILocalVariable(name: "result", arg: 2, scope: !3589, file: !294, line: 51, type: !184)
!3595 = !DILocalVariable(name: "length", arg: 3, scope: !3589, file: !294, line: 51, type: !272)
!3596 = !DILocalVariable(name: "i", scope: !3589, file: !294, line: 53, type: !125)
!3597 = !DILocalVariable(name: "j", scope: !3589, file: !294, line: 53, type: !125)
!3598 = !DILocation(line: 0, scope: !3589)
!3599 = !DILocation(line: 55, column: 2, scope: !3589)
!3600 = !DILocation(line: 57, column: 23, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3602, file: !294, line: 57, column: 2)
!3602 = distinct !DILexicalBlock(scope: !3589, file: !294, line: 57, column: 2)
!3603 = !DILocation(line: 57, column: 2, scope: !3602)
!3604 = !DILocation(line: 66, column: 2, scope: !3589)
!3605 = !DILocation(line: 68, column: 2, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3589, file: !294, line: 68, column: 2)
!3607 = !DILocation(line: 58, column: 21, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3601, file: !294, line: 57, column: 43)
!3609 = !DILocation(line: 58, column: 3, scope: !3608)
!3610 = !DILocation(line: 60, column: 9, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3608, file: !294, line: 60, column: 7)
!3612 = !DILocation(line: 60, column: 7, scope: !3608)
!3613 = !DILocation(line: 61, column: 4, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3611, file: !294, line: 60, column: 16)
!3615 = !DILocation(line: 63, column: 3, scope: !3614)
!3616 = !DILocation(line: 0, scope: !3602)
!3617 = !DILocation(line: 57, column: 34, scope: !3601)
!3618 = !DILocation(line: 57, column: 39, scope: !3601)
!3619 = distinct !{!3619, !3603, !3620}
!3620 = !DILocation(line: 64, column: 2, scope: !3602)
!3621 = !DILocation(line: 69, column: 21, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3623, file: !294, line: 68, column: 43)
!3623 = distinct !DILexicalBlock(scope: !3606, file: !294, line: 68, column: 2)
!3624 = !DILocation(line: 69, column: 3, scope: !3622)
!3625 = !DILocation(line: 71, column: 9, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3622, file: !294, line: 71, column: 7)
!3627 = !DILocation(line: 71, column: 7, scope: !3622)
!3628 = !DILocation(line: 72, column: 4, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3626, file: !294, line: 71, column: 16)
!3630 = !DILocation(line: 74, column: 3, scope: !3629)
!3631 = !DILocation(line: 0, scope: !3606)
!3632 = !DILocation(line: 68, column: 34, scope: !3623)
!3633 = !DILocation(line: 68, column: 39, scope: !3623)
!3634 = !DILocation(line: 68, column: 23, scope: !3623)
!3635 = distinct !{!3635, !3605, !3636}
!3636 = !DILocation(line: 75, column: 2, scope: !3606)
!3637 = !DILocation(line: 77, column: 2, scope: !3589)
!3638 = !DILocation(line: 78, column: 1, scope: !3589)
!3639 = distinct !DISubprogram(name: "cipher_free_session", scope: !128, file: !128, line: 201, type: !243, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3640)
!3640 = !{!3641, !3642, !3643}
!3641 = !DILocalVariable(name: "dev", arg: 1, scope: !3639, file: !128, line: 201, type: !134)
!3642 = !DILocalVariable(name: "ctx", arg: 2, scope: !3639, file: !128, line: 202, type: !165)
!3643 = !DILocalVariable(name: "api", scope: !3639, file: !128, line: 204, type: !126)
!3644 = !DILocation(line: 0, scope: !3639)
!3645 = !DILocation(line: 206, column: 42, scope: !3639)
!3646 = !DILocation(line: 208, column: 14, scope: !3639)
!3647 = !DILocation(line: 208, column: 9, scope: !3639)
!3648 = !DILocation(line: 208, column: 2, scope: !3639)
!3649 = !DILocation(line: 0, scope: !293)
!3650 = !DILocation(line: 207, column: 2, scope: !293)
!3651 = !DILocation(line: 207, column: 10, scope: !293)
!3652 = !DILocation(line: 208, column: 2, scope: !293)
!3653 = !DILocation(line: 208, column: 10, scope: !293)
!3654 = !DILocation(line: 209, column: 2, scope: !293)
!3655 = !DILocation(line: 209, column: 20, scope: !293)
!3656 = !DILocation(line: 211, column: 7, scope: !293)
!3657 = !DILocation(line: 209, column: 26, scope: !293)
!3658 = !DILocation(line: 212, column: 12, scope: !293)
!3659 = !DILocation(line: 214, column: 2, scope: !293)
!3660 = !DILocation(line: 214, column: 20, scope: !293)
!3661 = !DILocation(line: 214, column: 30, scope: !293)
!3662 = !DILocation(line: 220, column: 2, scope: !293)
!3663 = !DILocation(line: 220, column: 20, scope: !293)
!3664 = !DILocation(line: 220, column: 30, scope: !293)
!3665 = !DILocation(line: 232, column: 6, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !293, file: !294, line: 232, column: 6)
!3667 = !DILocation(line: 232, column: 6, scope: !293)
!3668 = !DILocation(line: 238, column: 6, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !293, file: !294, line: 238, column: 6)
!3670 = !DILocation(line: 238, column: 6, scope: !293)
!3671 = !DILocation(line: 239, column: 3, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3673, file: !294, line: 239, column: 3)
!3673 = distinct !DILexicalBlock(scope: !3674, file: !294, line: 239, column: 3)
!3674 = distinct !DILexicalBlock(scope: !3675, file: !294, line: 239, column: 3)
!3675 = distinct !DILexicalBlock(scope: !3676, file: !294, line: 239, column: 3)
!3676 = distinct !DILexicalBlock(scope: !3669, file: !294, line: 238, column: 41)
!3677 = !DILocation(line: 240, column: 3, scope: !3676)
!3678 = !DILocation(line: 243, column: 2, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3680, file: !294, line: 243, column: 2)
!3680 = distinct !DILexicalBlock(scope: !3681, file: !294, line: 243, column: 2)
!3681 = distinct !DILexicalBlock(scope: !3682, file: !294, line: 243, column: 2)
!3682 = distinct !DILexicalBlock(scope: !293, file: !294, line: 243, column: 2)
!3683 = !DILocation(line: 245, column: 21, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !293, file: !294, line: 245, column: 6)
!3685 = !DILocation(line: 245, column: 6, scope: !3684)
!3686 = !DILocation(line: 245, column: 6, scope: !293)
!3687 = !DILocation(line: 246, column: 3, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3689, file: !294, line: 246, column: 3)
!3689 = distinct !DILexicalBlock(scope: !3690, file: !294, line: 246, column: 3)
!3690 = distinct !DILexicalBlock(scope: !3691, file: !294, line: 246, column: 3)
!3691 = distinct !DILexicalBlock(scope: !3692, file: !294, line: 246, column: 3)
!3692 = distinct !DILexicalBlock(scope: !3684, file: !294, line: 245, column: 71)
!3693 = !DILocation(line: 248, column: 51, scope: !3692)
!3694 = !DILocation(line: 248, column: 3, scope: !3692)
!3695 = !DILocation(line: 250, column: 3, scope: !3692)
!3696 = !DILocation(line: 253, column: 2, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3698, file: !294, line: 253, column: 2)
!3698 = distinct !DILexicalBlock(scope: !3699, file: !294, line: 253, column: 2)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !294, line: 253, column: 2)
!3700 = distinct !DILexicalBlock(scope: !293, file: !294, line: 253, column: 2)
!3701 = !DILocation(line: 254, column: 2, scope: !293)
!3702 = !DILocation(line: 256, column: 6, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !293, file: !294, line: 256, column: 6)
!3704 = !DILocation(line: 256, column: 6, scope: !293)
!3705 = !DILocation(line: 263, column: 6, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !293, file: !294, line: 263, column: 6)
!3707 = !DILocation(line: 263, column: 6, scope: !293)
!3708 = !DILocation(line: 264, column: 3, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3710, file: !294, line: 264, column: 3)
!3710 = distinct !DILexicalBlock(scope: !3711, file: !294, line: 264, column: 3)
!3711 = distinct !DILexicalBlock(scope: !3712, file: !294, line: 264, column: 3)
!3712 = distinct !DILexicalBlock(scope: !3713, file: !294, line: 264, column: 3)
!3713 = distinct !DILexicalBlock(scope: !3706, file: !294, line: 263, column: 48)
!3714 = !DILocation(line: 265, column: 3, scope: !3713)
!3715 = !DILocation(line: 268, column: 2, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3717, file: !294, line: 268, column: 2)
!3717 = distinct !DILexicalBlock(scope: !3718, file: !294, line: 268, column: 2)
!3718 = distinct !DILexicalBlock(scope: !3719, file: !294, line: 268, column: 2)
!3719 = distinct !DILexicalBlock(scope: !293, file: !294, line: 268, column: 2)
!3720 = !DILocation(line: 270, column: 21, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !293, file: !294, line: 270, column: 6)
!3722 = !DILocation(line: 270, column: 6, scope: !3721)
!3723 = !DILocation(line: 270, column: 6, scope: !293)
!3724 = !DILocation(line: 271, column: 3, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3726, file: !294, line: 271, column: 3)
!3726 = distinct !DILexicalBlock(scope: !3727, file: !294, line: 271, column: 3)
!3727 = distinct !DILexicalBlock(scope: !3728, file: !294, line: 271, column: 3)
!3728 = distinct !DILexicalBlock(scope: !3729, file: !294, line: 271, column: 3)
!3729 = distinct !DILexicalBlock(scope: !3721, file: !294, line: 270, column: 61)
!3730 = !DILocation(line: 273, column: 46, scope: !3729)
!3731 = !DILocation(line: 273, column: 3, scope: !3729)
!3732 = !DILocation(line: 275, column: 3, scope: !3729)
!3733 = !DILocation(line: 278, column: 2, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3735, file: !294, line: 278, column: 2)
!3735 = distinct !DILexicalBlock(scope: !3736, file: !294, line: 278, column: 2)
!3736 = distinct !DILexicalBlock(scope: !3737, file: !294, line: 278, column: 2)
!3737 = distinct !DILexicalBlock(scope: !293, file: !294, line: 278, column: 2)
!3738 = !DILocation(line: 278, column: 2, scope: !3737)
!3739 = !DILocation(line: 279, column: 1, scope: !293)
!3740 = !DILocation(line: 280, column: 2, scope: !293)
!3741 = !DILocation(line: 281, column: 1, scope: !293)
!3742 = distinct !DISubprogram(name: "cipher_cbc_op", scope: !128, file: !128, line: 270, type: !193, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3743)
!3743 = !{!3744, !3745, !3746}
!3744 = !DILocalVariable(name: "ctx", arg: 1, scope: !3742, file: !128, line: 270, type: !165)
!3745 = !DILocalVariable(name: "pkt", arg: 2, scope: !3742, file: !128, line: 271, type: !180)
!3746 = !DILocalVariable(name: "iv", arg: 3, scope: !3742, file: !128, line: 271, type: !184)
!3747 = !DILocation(line: 0, scope: !3742)
!3748 = !DILocation(line: 276, column: 7, scope: !3742)
!3749 = !DILocation(line: 276, column: 11, scope: !3742)
!3750 = !DILocation(line: 277, column: 18, scope: !3742)
!3751 = !DILocation(line: 277, column: 9, scope: !3742)
!3752 = !DILocation(line: 277, column: 2, scope: !3742)
!3753 = distinct !DISubprogram(name: "ctr_mode", scope: !294, file: !294, line: 294, type: !295, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3754)
!3754 = !{!3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762}
!3755 = !DILocalVariable(name: "dev", arg: 1, scope: !3753, file: !294, line: 294, type: !134)
!3756 = !DILocalVariable(name: "encrypted", scope: !3753, file: !294, line: 296, type: !304)
!3757 = !DILocalVariable(name: "decrypted", scope: !3753, file: !294, line: 297, type: !304)
!3758 = !DILocalVariable(name: "ini", scope: !3753, file: !294, line: 298, type: !166)
!3759 = !DILocalVariable(name: "encrypt", scope: !3753, file: !294, line: 305, type: !181)
!3760 = !DILocalVariable(name: "decrypt", scope: !3753, file: !294, line: 311, type: !181)
!3761 = !DILocalVariable(name: "iv", scope: !3753, file: !294, line: 317, type: !363)
!3762 = !DILabel(scope: !3753, name: "out", file: !294, line: 368)
!3763 = !DILocation(line: 0, scope: !3753)
!3764 = !DILocation(line: 296, column: 2, scope: !3753)
!3765 = !DILocation(line: 296, column: 10, scope: !3753)
!3766 = !DILocation(line: 297, column: 2, scope: !3753)
!3767 = !DILocation(line: 297, column: 10, scope: !3753)
!3768 = !DILocation(line: 298, column: 2, scope: !3753)
!3769 = !DILocation(line: 298, column: 20, scope: !3753)
!3770 = !DILocation(line: 298, column: 26, scope: !3753)
!3771 = !DILocation(line: 300, column: 7, scope: !3753)
!3772 = !DILocation(line: 303, column: 24, scope: !3753)
!3773 = !DILocation(line: 301, column: 12, scope: !3753)
!3774 = !DILocation(line: 305, column: 2, scope: !3753)
!3775 = !DILocation(line: 305, column: 20, scope: !3753)
!3776 = !DILocation(line: 305, column: 30, scope: !3753)
!3777 = !DILocation(line: 311, column: 2, scope: !3753)
!3778 = !DILocation(line: 311, column: 20, scope: !3753)
!3779 = !DILocation(line: 311, column: 30, scope: !3753)
!3780 = !DILocation(line: 317, column: 2, scope: !3753)
!3781 = !DILocation(line: 317, column: 10, scope: !3753)
!3782 = !DILocation(line: 322, column: 6, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3753, file: !294, line: 322, column: 6)
!3784 = !DILocation(line: 322, column: 6, scope: !3753)
!3785 = !DILocation(line: 328, column: 6, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3753, file: !294, line: 328, column: 6)
!3787 = !DILocation(line: 328, column: 6, scope: !3753)
!3788 = !DILocation(line: 329, column: 3, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3790, file: !294, line: 329, column: 3)
!3790 = distinct !DILexicalBlock(scope: !3791, file: !294, line: 329, column: 3)
!3791 = distinct !DILexicalBlock(scope: !3792, file: !294, line: 329, column: 3)
!3792 = distinct !DILexicalBlock(scope: !3793, file: !294, line: 329, column: 3)
!3793 = distinct !DILexicalBlock(scope: !3786, file: !294, line: 328, column: 41)
!3794 = !DILocation(line: 330, column: 3, scope: !3793)
!3795 = !DILocation(line: 333, column: 2, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3797, file: !294, line: 333, column: 2)
!3797 = distinct !DILexicalBlock(scope: !3798, file: !294, line: 333, column: 2)
!3798 = distinct !DILexicalBlock(scope: !3799, file: !294, line: 333, column: 2)
!3799 = distinct !DILexicalBlock(scope: !3753, file: !294, line: 333, column: 2)
!3800 = !DILocation(line: 335, column: 21, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3753, file: !294, line: 335, column: 6)
!3802 = !DILocation(line: 335, column: 6, scope: !3801)
!3803 = !DILocation(line: 335, column: 6, scope: !3753)
!3804 = !DILocation(line: 336, column: 3, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3806, file: !294, line: 336, column: 3)
!3806 = distinct !DILexicalBlock(scope: !3807, file: !294, line: 336, column: 3)
!3807 = distinct !DILexicalBlock(scope: !3808, file: !294, line: 336, column: 3)
!3808 = distinct !DILexicalBlock(scope: !3809, file: !294, line: 336, column: 3)
!3809 = distinct !DILexicalBlock(scope: !3801, file: !294, line: 335, column: 71)
!3810 = !DILocation(line: 338, column: 51, scope: !3809)
!3811 = !DILocation(line: 338, column: 3, scope: !3809)
!3812 = !DILocation(line: 340, column: 3, scope: !3809)
!3813 = !DILocation(line: 343, column: 2, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3815, file: !294, line: 343, column: 2)
!3815 = distinct !DILexicalBlock(scope: !3816, file: !294, line: 343, column: 2)
!3816 = distinct !DILexicalBlock(scope: !3817, file: !294, line: 343, column: 2)
!3817 = distinct !DILexicalBlock(scope: !3753, file: !294, line: 343, column: 2)
!3818 = !DILocation(line: 344, column: 2, scope: !3753)
!3819 = !DILocation(line: 346, column: 6, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3753, file: !294, line: 346, column: 6)
!3821 = !DILocation(line: 346, column: 6, scope: !3753)
!3822 = !DILocation(line: 352, column: 6, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3753, file: !294, line: 352, column: 6)
!3824 = !DILocation(line: 352, column: 6, scope: !3753)
!3825 = !DILocation(line: 353, column: 3, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3827, file: !294, line: 353, column: 3)
!3827 = distinct !DILexicalBlock(scope: !3828, file: !294, line: 353, column: 3)
!3828 = distinct !DILexicalBlock(scope: !3829, file: !294, line: 353, column: 3)
!3829 = distinct !DILexicalBlock(scope: !3830, file: !294, line: 353, column: 3)
!3830 = distinct !DILexicalBlock(scope: !3823, file: !294, line: 352, column: 41)
!3831 = !DILocation(line: 354, column: 3, scope: !3830)
!3832 = !DILocation(line: 357, column: 2, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3834, file: !294, line: 357, column: 2)
!3834 = distinct !DILexicalBlock(scope: !3835, file: !294, line: 357, column: 2)
!3835 = distinct !DILexicalBlock(scope: !3836, file: !294, line: 357, column: 2)
!3836 = distinct !DILexicalBlock(scope: !3753, file: !294, line: 357, column: 2)
!3837 = !DILocation(line: 359, column: 21, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3753, file: !294, line: 359, column: 6)
!3839 = !DILocation(line: 359, column: 6, scope: !3838)
!3840 = !DILocation(line: 359, column: 6, scope: !3753)
!3841 = !DILocation(line: 360, column: 3, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3843, file: !294, line: 360, column: 3)
!3843 = distinct !DILexicalBlock(scope: !3844, file: !294, line: 360, column: 3)
!3844 = distinct !DILexicalBlock(scope: !3845, file: !294, line: 360, column: 3)
!3845 = distinct !DILexicalBlock(scope: !3846, file: !294, line: 360, column: 3)
!3846 = distinct !DILexicalBlock(scope: !3838, file: !294, line: 359, column: 61)
!3847 = !DILocation(line: 363, column: 14, scope: !3846)
!3848 = !DILocation(line: 362, column: 3, scope: !3846)
!3849 = !DILocation(line: 364, column: 3, scope: !3846)
!3850 = !DILocation(line: 367, column: 2, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3852, file: !294, line: 367, column: 2)
!3852 = distinct !DILexicalBlock(scope: !3853, file: !294, line: 367, column: 2)
!3853 = distinct !DILexicalBlock(scope: !3854, file: !294, line: 367, column: 2)
!3854 = distinct !DILexicalBlock(scope: !3753, file: !294, line: 367, column: 2)
!3855 = !DILocation(line: 367, column: 2, scope: !3854)
!3856 = !DILocation(line: 368, column: 1, scope: !3753)
!3857 = !DILocation(line: 369, column: 2, scope: !3753)
!3858 = !DILocation(line: 370, column: 1, scope: !3753)
!3859 = distinct !DISubprogram(name: "cipher_ctr_op", scope: !128, file: !128, line: 297, type: !193, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3860)
!3860 = !{!3861, !3862, !3863}
!3861 = !DILocalVariable(name: "ctx", arg: 1, scope: !3859, file: !128, line: 297, type: !165)
!3862 = !DILocalVariable(name: "pkt", arg: 2, scope: !3859, file: !128, line: 298, type: !180)
!3863 = !DILocalVariable(name: "iv", arg: 3, scope: !3859, file: !128, line: 298, type: !184)
!3864 = !DILocation(line: 0, scope: !3859)
!3865 = !DILocation(line: 303, column: 7, scope: !3859)
!3866 = !DILocation(line: 303, column: 11, scope: !3859)
!3867 = !DILocation(line: 304, column: 18, scope: !3859)
!3868 = !DILocation(line: 304, column: 9, scope: !3859)
!3869 = !DILocation(line: 304, column: 2, scope: !3859)
!3870 = distinct !DISubprogram(name: "ccm_mode", scope: !294, file: !294, line: 394, type: !295, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3871)
!3871 = !{!3872, !3873, !3877, !3881, !3882, !3883, !3884, !3885}
!3872 = !DILocalVariable(name: "dev", arg: 1, scope: !3870, file: !294, line: 394, type: !134)
!3873 = !DILocalVariable(name: "encrypted", scope: !3870, file: !294, line: 396, type: !3874)
!3874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 400, elements: !3875)
!3875 = !{!3876}
!3876 = !DISubrange(count: 50)
!3877 = !DILocalVariable(name: "decrypted", scope: !3870, file: !294, line: 397, type: !3878)
!3878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 200, elements: !3879)
!3879 = !{!3880}
!3880 = !DISubrange(count: 25)
!3881 = !DILocalVariable(name: "ini", scope: !3870, file: !294, line: 398, type: !166)
!3882 = !DILocalVariable(name: "encrypt", scope: !3870, file: !294, line: 407, type: !181)
!3883 = !DILocalVariable(name: "ccm_op", scope: !3870, file: !294, line: 413, type: !203)
!3884 = !DILocalVariable(name: "decrypt", scope: !3870, file: !294, line: 425, type: !181)
!3885 = !DILabel(scope: !3870, name: "out", file: !294, line: 480)
!3886 = !DILocation(line: 0, scope: !3870)
!3887 = !DILocation(line: 396, column: 2, scope: !3870)
!3888 = !DILocation(line: 396, column: 10, scope: !3870)
!3889 = !DILocation(line: 397, column: 2, scope: !3870)
!3890 = !DILocation(line: 397, column: 10, scope: !3870)
!3891 = !DILocation(line: 398, column: 2, scope: !3870)
!3892 = !DILocation(line: 398, column: 20, scope: !3870)
!3893 = !DILocation(line: 398, column: 26, scope: !3870)
!3894 = !DILocation(line: 400, column: 7, scope: !3870)
!3895 = !DILocation(line: 401, column: 15, scope: !3870)
!3896 = !DILocation(line: 401, column: 27, scope: !3870)
!3897 = !DILocation(line: 405, column: 12, scope: !3870)
!3898 = !DILocation(line: 407, column: 2, scope: !3870)
!3899 = !DILocation(line: 407, column: 20, scope: !3870)
!3900 = !DILocation(line: 407, column: 30, scope: !3870)
!3901 = !DILocation(line: 413, column: 2, scope: !3870)
!3902 = !DILocation(line: 413, column: 25, scope: !3870)
!3903 = !DILocation(line: 413, column: 34, scope: !3870)
!3904 = !DILocation(line: 423, column: 20, scope: !3870)
!3905 = !DILocation(line: 425, column: 2, scope: !3870)
!3906 = !DILocation(line: 425, column: 20, scope: !3870)
!3907 = !DILocation(line: 425, column: 30, scope: !3870)
!3908 = !DILocation(line: 432, column: 6, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3870, file: !294, line: 432, column: 6)
!3910 = !DILocation(line: 432, column: 6, scope: !3870)
!3911 = !DILocation(line: 438, column: 13, scope: !3870)
!3912 = !DILocation(line: 439, column: 6, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3870, file: !294, line: 439, column: 6)
!3914 = !DILocation(line: 439, column: 6, scope: !3870)
!3915 = !DILocation(line: 440, column: 3, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3917, file: !294, line: 440, column: 3)
!3917 = distinct !DILexicalBlock(scope: !3918, file: !294, line: 440, column: 3)
!3918 = distinct !DILexicalBlock(scope: !3919, file: !294, line: 440, column: 3)
!3919 = distinct !DILexicalBlock(scope: !3920, file: !294, line: 440, column: 3)
!3920 = distinct !DILexicalBlock(scope: !3913, file: !294, line: 439, column: 47)
!3921 = !DILocation(line: 441, column: 3, scope: !3920)
!3922 = !DILocation(line: 444, column: 2, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3924, file: !294, line: 444, column: 2)
!3924 = distinct !DILexicalBlock(scope: !3925, file: !294, line: 444, column: 2)
!3925 = distinct !DILexicalBlock(scope: !3926, file: !294, line: 444, column: 2)
!3926 = distinct !DILexicalBlock(scope: !3870, file: !294, line: 444, column: 2)
!3927 = !DILocation(line: 446, column: 21, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3870, file: !294, line: 446, column: 6)
!3929 = !DILocation(line: 446, column: 6, scope: !3928)
!3930 = !DILocation(line: 446, column: 6, scope: !3870)
!3931 = !DILocation(line: 447, column: 3, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3933, file: !294, line: 447, column: 3)
!3933 = distinct !DILexicalBlock(scope: !3934, file: !294, line: 447, column: 3)
!3934 = distinct !DILexicalBlock(scope: !3935, file: !294, line: 447, column: 3)
!3935 = distinct !DILexicalBlock(scope: !3936, file: !294, line: 447, column: 3)
!3936 = distinct !DILexicalBlock(scope: !3928, file: !294, line: 446, column: 67)
!3937 = !DILocation(line: 450, column: 14, scope: !3936)
!3938 = !DILocation(line: 449, column: 3, scope: !3936)
!3939 = !DILocation(line: 451, column: 3, scope: !3936)
!3940 = !DILocation(line: 454, column: 2, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3942, file: !294, line: 454, column: 2)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !294, line: 454, column: 2)
!3943 = distinct !DILexicalBlock(scope: !3944, file: !294, line: 454, column: 2)
!3944 = distinct !DILexicalBlock(scope: !3870, file: !294, line: 454, column: 2)
!3945 = !DILocation(line: 455, column: 2, scope: !3870)
!3946 = !DILocation(line: 457, column: 6, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3870, file: !294, line: 457, column: 6)
!3948 = !DILocation(line: 457, column: 6, scope: !3870)
!3949 = !DILocation(line: 463, column: 13, scope: !3870)
!3950 = !DILocation(line: 464, column: 6, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3870, file: !294, line: 464, column: 6)
!3952 = !DILocation(line: 464, column: 6, scope: !3870)
!3953 = !DILocation(line: 465, column: 3, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3955, file: !294, line: 465, column: 3)
!3955 = distinct !DILexicalBlock(scope: !3956, file: !294, line: 465, column: 3)
!3956 = distinct !DILexicalBlock(scope: !3957, file: !294, line: 465, column: 3)
!3957 = distinct !DILexicalBlock(scope: !3958, file: !294, line: 465, column: 3)
!3958 = distinct !DILexicalBlock(scope: !3951, file: !294, line: 464, column: 47)
!3959 = !DILocation(line: 466, column: 3, scope: !3958)
!3960 = !DILocation(line: 469, column: 2, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3962, file: !294, line: 469, column: 2)
!3962 = distinct !DILexicalBlock(scope: !3963, file: !294, line: 469, column: 2)
!3963 = distinct !DILexicalBlock(scope: !3964, file: !294, line: 469, column: 2)
!3964 = distinct !DILexicalBlock(scope: !3870, file: !294, line: 469, column: 2)
!3965 = !DILocation(line: 471, column: 21, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3870, file: !294, line: 471, column: 6)
!3967 = !DILocation(line: 471, column: 6, scope: !3966)
!3968 = !DILocation(line: 471, column: 6, scope: !3870)
!3969 = !DILocation(line: 472, column: 3, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3971, file: !294, line: 472, column: 3)
!3971 = distinct !DILexicalBlock(scope: !3972, file: !294, line: 472, column: 3)
!3972 = distinct !DILexicalBlock(scope: !3973, file: !294, line: 472, column: 3)
!3973 = distinct !DILexicalBlock(scope: !3974, file: !294, line: 472, column: 3)
!3974 = distinct !DILexicalBlock(scope: !3966, file: !294, line: 471, column: 59)
!3975 = !DILocation(line: 475, column: 14, scope: !3974)
!3976 = !DILocation(line: 474, column: 3, scope: !3974)
!3977 = !DILocation(line: 476, column: 3, scope: !3974)
!3978 = !DILocation(line: 479, column: 2, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3980, file: !294, line: 479, column: 2)
!3980 = distinct !DILexicalBlock(scope: !3981, file: !294, line: 479, column: 2)
!3981 = distinct !DILexicalBlock(scope: !3982, file: !294, line: 479, column: 2)
!3982 = distinct !DILexicalBlock(scope: !3870, file: !294, line: 479, column: 2)
!3983 = !DILocation(line: 479, column: 2, scope: !3982)
!3984 = !DILocation(line: 480, column: 1, scope: !3870)
!3985 = !DILocation(line: 481, column: 2, scope: !3870)
!3986 = !DILocation(line: 482, column: 1, scope: !3870)
!3987 = distinct !DISubprogram(name: "cipher_ccm_op", scope: !128, file: !128, line: 319, type: !200, scopeLine: 321, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3988)
!3988 = !{!3989, !3990, !3991}
!3989 = !DILocalVariable(name: "ctx", arg: 1, scope: !3987, file: !128, line: 319, type: !165)
!3990 = !DILocalVariable(name: "pkt", arg: 2, scope: !3987, file: !128, line: 320, type: !202)
!3991 = !DILocalVariable(name: "nonce", arg: 3, scope: !3987, file: !128, line: 320, type: !184)
!3992 = !DILocation(line: 0, scope: !3987)
!3993 = !DILocation(line: 325, column: 7, scope: !3987)
!3994 = !DILocation(line: 325, column: 12, scope: !3987)
!3995 = !DILocation(line: 325, column: 16, scope: !3987)
!3996 = !DILocation(line: 326, column: 18, scope: !3987)
!3997 = !DILocation(line: 326, column: 9, scope: !3987)
!3998 = !DILocation(line: 326, column: 2, scope: !3987)
!3999 = distinct !DISubprogram(name: "gcm_mode", scope: !294, file: !294, line: 511, type: !295, scopeLine: 512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4000)
!4000 = !{!4001, !4002, !4006, !4008, !4009, !4010, !4011, !4012}
!4001 = !DILocalVariable(name: "dev", arg: 1, scope: !3999, file: !294, line: 511, type: !134)
!4002 = !DILocalVariable(name: "encrypted", scope: !3999, file: !294, line: 513, type: !4003)
!4003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 480, elements: !4004)
!4004 = !{!4005}
!4005 = !DISubrange(count: 60)
!4006 = !DILocalVariable(name: "decrypted", scope: !3999, file: !294, line: 514, type: !4007)
!4007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 352, elements: !498)
!4008 = !DILocalVariable(name: "ini", scope: !3999, file: !294, line: 515, type: !166)
!4009 = !DILocalVariable(name: "encrypt", scope: !3999, file: !294, line: 524, type: !181)
!4010 = !DILocalVariable(name: "gcm_op", scope: !3999, file: !294, line: 530, type: !203)
!4011 = !DILocalVariable(name: "decrypt", scope: !3999, file: !294, line: 542, type: !181)
!4012 = !DILabel(scope: !3999, name: "out", file: !294, line: 597)
!4013 = !DILocation(line: 0, scope: !3999)
!4014 = !DILocation(line: 513, column: 2, scope: !3999)
!4015 = !DILocation(line: 513, column: 10, scope: !3999)
!4016 = !DILocation(line: 514, column: 2, scope: !3999)
!4017 = !DILocation(line: 514, column: 10, scope: !3999)
!4018 = !DILocation(line: 515, column: 2, scope: !3999)
!4019 = !DILocation(line: 515, column: 20, scope: !3999)
!4020 = !DILocation(line: 515, column: 26, scope: !3999)
!4021 = !DILocation(line: 517, column: 7, scope: !3999)
!4022 = !DILocation(line: 518, column: 15, scope: !3999)
!4023 = !DILocation(line: 518, column: 27, scope: !3999)
!4024 = !DILocation(line: 522, column: 12, scope: !3999)
!4025 = !DILocation(line: 524, column: 2, scope: !3999)
!4026 = !DILocation(line: 524, column: 20, scope: !3999)
!4027 = !DILocation(line: 524, column: 30, scope: !3999)
!4028 = !DILocation(line: 530, column: 2, scope: !3999)
!4029 = !DILocation(line: 530, column: 25, scope: !3999)
!4030 = !DILocation(line: 530, column: 34, scope: !3999)
!4031 = !DILocation(line: 540, column: 20, scope: !3999)
!4032 = !DILocation(line: 542, column: 2, scope: !3999)
!4033 = !DILocation(line: 542, column: 20, scope: !3999)
!4034 = !DILocation(line: 542, column: 30, scope: !3999)
!4035 = !DILocation(line: 549, column: 6, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !3999, file: !294, line: 549, column: 6)
!4037 = !DILocation(line: 549, column: 6, scope: !3999)
!4038 = !DILocation(line: 555, column: 13, scope: !3999)
!4039 = !DILocation(line: 556, column: 6, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !3999, file: !294, line: 556, column: 6)
!4041 = !DILocation(line: 556, column: 6, scope: !3999)
!4042 = !DILocation(line: 557, column: 3, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4044, file: !294, line: 557, column: 3)
!4044 = distinct !DILexicalBlock(scope: !4045, file: !294, line: 557, column: 3)
!4045 = distinct !DILexicalBlock(scope: !4046, file: !294, line: 557, column: 3)
!4046 = distinct !DILexicalBlock(scope: !4047, file: !294, line: 557, column: 3)
!4047 = distinct !DILexicalBlock(scope: !4040, file: !294, line: 556, column: 47)
!4048 = !DILocation(line: 558, column: 3, scope: !4047)
!4049 = !DILocation(line: 561, column: 2, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4051, file: !294, line: 561, column: 2)
!4051 = distinct !DILexicalBlock(scope: !4052, file: !294, line: 561, column: 2)
!4052 = distinct !DILexicalBlock(scope: !4053, file: !294, line: 561, column: 2)
!4053 = distinct !DILexicalBlock(scope: !3999, file: !294, line: 561, column: 2)
!4054 = !DILocation(line: 563, column: 21, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !3999, file: !294, line: 563, column: 6)
!4056 = !DILocation(line: 563, column: 6, scope: !4055)
!4057 = !DILocation(line: 563, column: 6, scope: !3999)
!4058 = !DILocation(line: 564, column: 3, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4060, file: !294, line: 564, column: 3)
!4060 = distinct !DILexicalBlock(scope: !4061, file: !294, line: 564, column: 3)
!4061 = distinct !DILexicalBlock(scope: !4062, file: !294, line: 564, column: 3)
!4062 = distinct !DILexicalBlock(scope: !4063, file: !294, line: 564, column: 3)
!4063 = distinct !DILexicalBlock(scope: !4055, file: !294, line: 563, column: 67)
!4064 = !DILocation(line: 567, column: 14, scope: !4063)
!4065 = !DILocation(line: 566, column: 3, scope: !4063)
!4066 = !DILocation(line: 568, column: 3, scope: !4063)
!4067 = !DILocation(line: 571, column: 2, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4069, file: !294, line: 571, column: 2)
!4069 = distinct !DILexicalBlock(scope: !4070, file: !294, line: 571, column: 2)
!4070 = distinct !DILexicalBlock(scope: !4071, file: !294, line: 571, column: 2)
!4071 = distinct !DILexicalBlock(scope: !3999, file: !294, line: 571, column: 2)
!4072 = !DILocation(line: 572, column: 2, scope: !3999)
!4073 = !DILocation(line: 574, column: 6, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !3999, file: !294, line: 574, column: 6)
!4075 = !DILocation(line: 574, column: 6, scope: !3999)
!4076 = !DILocation(line: 580, column: 13, scope: !3999)
!4077 = !DILocation(line: 581, column: 6, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !3999, file: !294, line: 581, column: 6)
!4079 = !DILocation(line: 581, column: 6, scope: !3999)
!4080 = !DILocation(line: 582, column: 3, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4082, file: !294, line: 582, column: 3)
!4082 = distinct !DILexicalBlock(scope: !4083, file: !294, line: 582, column: 3)
!4083 = distinct !DILexicalBlock(scope: !4084, file: !294, line: 582, column: 3)
!4084 = distinct !DILexicalBlock(scope: !4085, file: !294, line: 582, column: 3)
!4085 = distinct !DILexicalBlock(scope: !4078, file: !294, line: 581, column: 47)
!4086 = !DILocation(line: 583, column: 3, scope: !4085)
!4087 = !DILocation(line: 586, column: 2, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4089, file: !294, line: 586, column: 2)
!4089 = distinct !DILexicalBlock(scope: !4090, file: !294, line: 586, column: 2)
!4090 = distinct !DILexicalBlock(scope: !4091, file: !294, line: 586, column: 2)
!4091 = distinct !DILexicalBlock(scope: !3999, file: !294, line: 586, column: 2)
!4092 = !DILocation(line: 588, column: 21, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !3999, file: !294, line: 588, column: 6)
!4094 = !DILocation(line: 588, column: 6, scope: !4093)
!4095 = !DILocation(line: 588, column: 6, scope: !3999)
!4096 = !DILocation(line: 589, column: 3, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4098, file: !294, line: 589, column: 3)
!4098 = distinct !DILexicalBlock(scope: !4099, file: !294, line: 589, column: 3)
!4099 = distinct !DILexicalBlock(scope: !4100, file: !294, line: 589, column: 3)
!4100 = distinct !DILexicalBlock(scope: !4101, file: !294, line: 589, column: 3)
!4101 = distinct !DILexicalBlock(scope: !4093, file: !294, line: 588, column: 59)
!4102 = !DILocation(line: 592, column: 14, scope: !4101)
!4103 = !DILocation(line: 591, column: 3, scope: !4101)
!4104 = !DILocation(line: 593, column: 3, scope: !4101)
!4105 = !DILocation(line: 596, column: 2, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4107, file: !294, line: 596, column: 2)
!4107 = distinct !DILexicalBlock(scope: !4108, file: !294, line: 596, column: 2)
!4108 = distinct !DILexicalBlock(scope: !4109, file: !294, line: 596, column: 2)
!4109 = distinct !DILexicalBlock(scope: !3999, file: !294, line: 596, column: 2)
!4110 = !DILocation(line: 596, column: 2, scope: !4109)
!4111 = !DILocation(line: 597, column: 1, scope: !3999)
!4112 = !DILocation(line: 598, column: 2, scope: !3999)
!4113 = !DILocation(line: 599, column: 1, scope: !3999)
!4114 = distinct !DISubprogram(name: "cipher_gcm_op", scope: !128, file: !128, line: 341, type: !200, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4115)
!4115 = !{!4116, !4117, !4118}
!4116 = !DILocalVariable(name: "ctx", arg: 1, scope: !4114, file: !128, line: 341, type: !165)
!4117 = !DILocalVariable(name: "pkt", arg: 2, scope: !4114, file: !128, line: 342, type: !202)
!4118 = !DILocalVariable(name: "nonce", arg: 3, scope: !4114, file: !128, line: 342, type: !184)
!4119 = !DILocation(line: 0, scope: !4114)
!4120 = !DILocation(line: 347, column: 7, scope: !4114)
!4121 = !DILocation(line: 347, column: 12, scope: !4114)
!4122 = !DILocation(line: 347, column: 16, scope: !4114)
!4123 = !DILocation(line: 348, column: 18, scope: !4114)
!4124 = !DILocation(line: 348, column: 9, scope: !4114)
!4125 = !DILocation(line: 348, column: 2, scope: !4114)
!4126 = distinct !DISubprogram(name: "main", scope: !294, file: !294, line: 606, type: !3278, scopeLine: 607, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4127)
!4127 = !{!4128, !4129, !4137}
!4128 = !DILocalVariable(name: "dev", scope: !4126, file: !294, line: 609, type: !134)
!4129 = !DILocalVariable(name: "modes", scope: !4126, file: !294, line: 623, type: !4130)
!4130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4131, size: 384, elements: !2375)
!4131 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4132)
!4132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mode_test", file: !294, line: 601, size: 64, elements: !4133)
!4133 = !{!4134, !4135}
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4132, file: !294, line: 602, baseType: !140, size: 32)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "mode_func", scope: !4132, file: !294, line: 603, baseType: !4136, size: 32, offset: 32)
!4136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 32)
!4137 = !DILocalVariable(name: "i", scope: !4126, file: !294, line: 631, type: !125)
!4138 = !DILocation(line: 609, column: 29, scope: !4126)
!4139 = !DILocation(line: 0, scope: !4126)
!4140 = !DILocation(line: 611, column: 7, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4126, file: !294, line: 611, column: 6)
!4142 = !DILocation(line: 611, column: 6, scope: !4126)
!4143 = !DILocation(line: 612, column: 3, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4145, file: !294, line: 612, column: 3)
!4145 = distinct !DILexicalBlock(scope: !4146, file: !294, line: 612, column: 3)
!4146 = distinct !DILexicalBlock(scope: !4147, file: !294, line: 612, column: 3)
!4147 = distinct !DILexicalBlock(scope: !4148, file: !294, line: 612, column: 3)
!4148 = distinct !DILexicalBlock(scope: !4141, file: !294, line: 611, column: 12)
!4149 = !DILocation(line: 613, column: 3, scope: !4148)
!4150 = !DILocation(line: 623, column: 25, scope: !4126)
!4151 = !DILocation(line: 633, column: 6, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4126, file: !294, line: 633, column: 6)
!4153 = !DILocation(line: 633, column: 6, scope: !4126)
!4154 = !DILocation(line: 634, column: 3, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4156, file: !294, line: 634, column: 3)
!4156 = distinct !DILexicalBlock(scope: !4157, file: !294, line: 634, column: 3)
!4157 = distinct !DILexicalBlock(scope: !4158, file: !294, line: 634, column: 3)
!4158 = distinct !DILexicalBlock(scope: !4159, file: !294, line: 634, column: 3)
!4159 = distinct !DILexicalBlock(scope: !4152, file: !294, line: 633, column: 38)
!4160 = !DILocation(line: 635, column: 3, scope: !4159)
!4161 = !DILocation(line: 638, column: 2, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4163, file: !294, line: 638, column: 2)
!4163 = distinct !DILexicalBlock(scope: !4164, file: !294, line: 638, column: 2)
!4164 = distinct !DILexicalBlock(scope: !4165, file: !294, line: 638, column: 2)
!4165 = distinct !DILexicalBlock(scope: !4126, file: !294, line: 638, column: 2)
!4166 = !DILocation(line: 640, column: 2, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4126, file: !294, line: 640, column: 2)
!4168 = !DILocation(line: 640, column: 23, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4167, file: !294, line: 640, column: 2)
!4170 = !DILocation(line: 641, column: 3, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4172, file: !294, line: 641, column: 3)
!4172 = distinct !DILexicalBlock(scope: !4173, file: !294, line: 641, column: 3)
!4173 = distinct !DILexicalBlock(scope: !4174, file: !294, line: 641, column: 3)
!4174 = distinct !DILexicalBlock(scope: !4175, file: !294, line: 641, column: 3)
!4175 = distinct !DILexicalBlock(scope: !4169, file: !294, line: 640, column: 34)
!4176 = !DILocation(line: 642, column: 12, scope: !4175)
!4177 = !DILocation(line: 642, column: 3, scope: !4175)
!4178 = !DILocation(line: 640, column: 30, scope: !4169)
!4179 = distinct !{!4179, !4166, !4180}
!4180 = !DILocation(line: 643, column: 2, scope: !4167)
!4181 = !DILocation(line: 644, column: 1, scope: !4126)
!4182 = distinct !DISubprogram(name: "device_get_binding", scope: !4183, file: !4183, line: 24, type: !4184, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4186)
!4183 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!4184 = !DISubroutineType(types: !4185)
!4185 = !{!134, !140}
!4186 = !{!4187}
!4187 = !DILocalVariable(name: "name", arg: 1, scope: !4182, file: !4183, line: 24, type: !140)
!4188 = !DILocation(line: 0, scope: !4182)
!4189 = !DILocation(line: 32, column: 2, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4182, file: !4183, line: 32, column: 2)
!4191 = !{i64 2149121255}
!4192 = !DILocation(line: 33, column: 9, scope: !4182)
!4193 = !DILocation(line: 33, column: 2, scope: !4182)
!4194 = distinct !DISubprogram(name: "cbvprintf_package", scope: !395, file: !395, line: 233, type: !4195, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4204)
!4195 = !DISubroutineType(types: !4196)
!4196 = !{!125, !124, !272, !208, !140, !4197}
!4197 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4198, line: 99, baseType: !4199)
!4198 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4199 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4198, line: 40, baseType: !4200)
!4200 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !395, baseType: !4201)
!4201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4202)
!4202 = !{!4203}
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4201, file: !395, line: 18, baseType: !124, size: 32)
!4204 = !{!4205, !4206, !4207, !4208, !4209, !4210, !4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4239, !4248, !4251, !4252, !4255, !4258, !4261, !4264, !4270}
!4205 = !DILocalVariable(name: "packaged", arg: 1, scope: !4194, file: !395, line: 233, type: !124)
!4206 = !DILocalVariable(name: "len", arg: 2, scope: !4194, file: !395, line: 233, type: !272)
!4207 = !DILocalVariable(name: "flags", arg: 3, scope: !4194, file: !395, line: 233, type: !208)
!4208 = !DILocalVariable(name: "fmt", arg: 4, scope: !4194, file: !395, line: 234, type: !140)
!4209 = !DILocalVariable(name: "ap", arg: 5, scope: !4194, file: !395, line: 234, type: !4197)
!4210 = !DILocalVariable(name: "buf0", scope: !4194, file: !395, line: 247, type: !184)
!4211 = !DILocalVariable(name: "buf", scope: !4194, file: !395, line: 248, type: !184)
!4212 = !DILocalVariable(name: "size", scope: !4194, file: !395, line: 249, type: !32)
!4213 = !DILocalVariable(name: "align", scope: !4194, file: !395, line: 250, type: !32)
!4214 = !DILocalVariable(name: "str_ptr_pos", scope: !4194, file: !395, line: 251, type: !311)
!4215 = !DILocalVariable(name: "str_ptr_arg", scope: !4194, file: !395, line: 252, type: !311)
!4216 = !DILocalVariable(name: "s_idx", scope: !4194, file: !395, line: 253, type: !32)
!4217 = !DILocalVariable(name: "s_rw_cnt", scope: !4194, file: !395, line: 254, type: !32)
!4218 = !DILocalVariable(name: "s_ro_cnt", scope: !4194, file: !395, line: 255, type: !32)
!4219 = !DILocalVariable(name: "arg_idx", scope: !4194, file: !395, line: 256, type: !125)
!4220 = !DILocalVariable(name: "i", scope: !4194, file: !395, line: 257, type: !32)
!4221 = !DILocalVariable(name: "s", scope: !4194, file: !395, line: 258, type: !140)
!4222 = !DILocalVariable(name: "parsing", scope: !4194, file: !395, line: 259, type: !153)
!4223 = !DILocalVariable(name: "rws_pos_en", scope: !4194, file: !395, line: 263, type: !153)
!4224 = !DILocalVariable(name: "fros_cnt", scope: !4194, file: !395, line: 268, type: !125)
!4225 = !DILocalVariable(name: "is_str_arg", scope: !4194, file: !395, line: 269, type: !153)
!4226 = !DILocalVariable(name: "pkg_hdr", scope: !4194, file: !395, line: 270, type: !4227)
!4227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4228, size: 32)
!4228 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4229, line: 78, size: 32, elements: !4230)
!4229 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4230 = !{!4231, !4238}
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4228, file: !4229, line: 80, baseType: !4232, size: 32)
!4232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4229, line: 45, size: 32, elements: !4233)
!4233 = !{!4234, !4235, !4236, !4237}
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4232, file: !4229, line: 47, baseType: !150, size: 8)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4232, file: !4229, line: 50, baseType: !150, size: 8, offset: 8)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4232, file: !4229, line: 53, baseType: !150, size: 8, offset: 16)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4232, file: !4229, line: 56, baseType: !150, size: 8, offset: 24)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4228, file: !4229, line: 82, baseType: !124, size: 32)
!4239 = !DILocalVariable(name: "v", scope: !4240, file: !395, line: 567, type: !4244)
!4240 = distinct !DILexicalBlock(scope: !4241, file: !395, line: 562, column: 14)
!4241 = distinct !DILexicalBlock(scope: !4242, file: !395, line: 481, column: 18)
!4242 = distinct !DILexicalBlock(scope: !4243, file: !395, line: 466, column: 3)
!4243 = distinct !DILexicalBlock(scope: !4194, file: !395, line: 343, column: 15)
!4244 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4194, file: !395, line: 567, size: 64, elements: !4245)
!4245 = !{!4246, !4247}
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4244, file: !395, line: 567, baseType: !385, size: 64)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4244, file: !395, line: 567, baseType: !383, size: 64)
!4248 = !DILocalVariable(name: "is_ro", scope: !4249, file: !395, line: 620, type: !153)
!4249 = distinct !DILexicalBlock(scope: !4250, file: !395, line: 613, column: 19)
!4250 = distinct !DILexicalBlock(scope: !4243, file: !395, line: 613, column: 7)
!4251 = !DILocalVariable(name: "do_ro", scope: !4249, file: !395, line: 621, type: !153)
!4252 = !DILocalVariable(name: "s_ptr_idx", scope: !4253, file: !395, line: 626, type: !208)
!4253 = distinct !DILexicalBlock(scope: !4254, file: !395, line: 625, column: 11)
!4254 = distinct !DILexicalBlock(scope: !4249, file: !395, line: 623, column: 8)
!4255 = !DILocalVariable(name: "v", scope: !4256, file: !395, line: 684, type: !125)
!4256 = distinct !DILexicalBlock(scope: !4257, file: !395, line: 683, column: 35)
!4257 = distinct !DILexicalBlock(scope: !4250, file: !395, line: 683, column: 14)
!4258 = !DILocalVariable(name: "v", scope: !4259, file: !395, line: 691, type: !389)
!4259 = distinct !DILexicalBlock(scope: !4260, file: !395, line: 690, column: 36)
!4260 = distinct !DILexicalBlock(scope: !4257, file: !395, line: 690, column: 14)
!4261 = !DILocalVariable(name: "v", scope: !4262, file: !395, line: 698, type: !391)
!4262 = distinct !DILexicalBlock(scope: !4263, file: !395, line: 697, column: 41)
!4263 = distinct !DILexicalBlock(scope: !4260, file: !395, line: 697, column: 14)
!4264 = !DILocalVariable(name: "pos", scope: !4265, file: !395, line: 762, type: !150)
!4265 = distinct !DILexicalBlock(scope: !4266, file: !395, line: 757, column: 31)
!4266 = distinct !DILexicalBlock(scope: !4267, file: !395, line: 757, column: 3)
!4267 = distinct !DILexicalBlock(scope: !4268, file: !395, line: 757, column: 3)
!4268 = distinct !DILexicalBlock(scope: !4269, file: !395, line: 756, column: 16)
!4269 = distinct !DILexicalBlock(scope: !4194, file: !395, line: 756, column: 6)
!4270 = !DILabel(scope: !4249, name: "process_string", file: !395, line: 615)
!4271 = !DILocation(line: 0, scope: !4194)
!4272 = !DILocation(line: 251, column: 2, scope: !4194)
!4273 = !DILocation(line: 251, column: 10, scope: !4194)
!4274 = !DILocation(line: 252, column: 2, scope: !4194)
!4275 = !DILocation(line: 252, column: 10, scope: !4194)
!4276 = !DILocation(line: 263, column: 29, scope: !4194)
!4277 = !DILocation(line: 263, column: 21, scope: !4194)
!4278 = !DILocation(line: 268, column: 21, scope: !4194)
!4279 = !DILocation(line: 268, column: 19, scope: !4194)
!4280 = !DILocation(line: 273, column: 6, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4194, file: !395, line: 273, column: 6)
!4282 = !DILocation(line: 273, column: 26, scope: !4281)
!4283 = !DILocation(line: 273, column: 6, scope: !4194)
!4284 = !DILocation(line: 297, column: 6, scope: !4194)
!4285 = !DILocation(line: 305, column: 11, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4194, file: !395, line: 305, column: 6)
!4287 = !DILocation(line: 305, column: 6, scope: !4194)
!4288 = !DILocation(line: 327, column: 19, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4194, file: !395, line: 327, column: 6)
!4290 = !DILocation(line: 327, column: 22, scope: !4289)
!4291 = !DILocation(line: 327, column: 33, scope: !4289)
!4292 = !DILocation(line: 327, column: 50, scope: !4289)
!4293 = !DILocation(line: 327, column: 6, scope: !4194)
!4294 = !DILocation(line: 338, column: 9, scope: !4194)
!4295 = !DILocation(line: 341, column: 2, scope: !4194)
!4296 = !DILocation(line: 472, column: 8, scope: !4242)
!4297 = !DILocation(line: 473, column: 14, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4299, file: !395, line: 473, column: 9)
!4299 = distinct !DILexicalBlock(scope: !4300, file: !395, line: 472, column: 18)
!4300 = distinct !DILexicalBlock(scope: !4242, file: !395, line: 472, column: 8)
!4301 = !DILocation(line: 473, column: 9, scope: !4299)
!4302 = !DILocation(line: 479, column: 5, scope: !4299)
!4303 = !DILocation(line: 468, column: 9, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4242, file: !395, line: 468, column: 8)
!4305 = !DILocation(line: 468, column: 8, scope: !4304)
!4306 = !DILocation(line: 468, column: 15, scope: !4304)
!4307 = !DILocation(line: 468, column: 8, scope: !4242)
!4308 = distinct !{!4308, !4309, !4310}
!4309 = !DILocation(line: 343, column: 2, scope: !4194)
!4310 = !DILocation(line: 712, column: 2, scope: !4194)
!4311 = !DILocation(line: 481, column: 4, scope: !4242)
!4312 = !DILocation(line: 484, column: 12, scope: !4241)
!4313 = !DILocation(line: 485, column: 5, scope: !4241)
!4314 = !DILocation(line: 505, column: 5, scope: !4241)
!4315 = !DILocation(line: 518, column: 5, scope: !4241)
!4316 = !DILocation(line: 523, column: 5, scope: !4241)
!4317 = !DILocation(line: 532, column: 9, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4241, file: !395, line: 532, column: 9)
!4319 = !DILocation(line: 532, column: 17, scope: !4318)
!4320 = !DILocation(line: 532, column: 9, scope: !4241)
!4321 = !DILocation(line: 533, column: 10, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4323, file: !395, line: 533, column: 10)
!4323 = distinct !DILexicalBlock(scope: !4318, file: !395, line: 532, column: 25)
!4324 = !DILocation(line: 533, column: 18, scope: !4322)
!4325 = !DILocation(line: 0, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4240, file: !395, line: 569, column: 9)
!4327 = !DILocation(line: 0, scope: !4240)
!4328 = !DILocation(line: 579, column: 20, scope: !4240)
!4329 = !DILocation(line: 579, column: 11, scope: !4240)
!4330 = !DILocation(line: 580, column: 9, scope: !4240)
!4331 = !DILocation(line: 582, column: 21, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4333, file: !395, line: 582, column: 10)
!4333 = distinct !DILexicalBlock(scope: !4334, file: !395, line: 580, column: 23)
!4334 = distinct !DILexicalBlock(scope: !4240, file: !395, line: 580, column: 9)
!4335 = !DILocation(line: 582, column: 28, scope: !4332)
!4336 = !DILocation(line: 582, column: 10, scope: !4333)
!4337 = !DILocation(line: 0, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4339, file: !395, line: 587, column: 17)
!4339 = distinct !DILexicalBlock(scope: !4333, file: !395, line: 585, column: 10)
!4340 = !DILocation(line: 593, column: 9, scope: !4240)
!4341 = !DILocation(line: 600, column: 5, scope: !4241)
!4342 = !DILocation(line: 605, column: 18, scope: !4243)
!4343 = !DILocation(line: 605, column: 9, scope: !4243)
!4344 = !DILocation(line: 608, column: 20, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4243, file: !395, line: 608, column: 7)
!4346 = !DILocation(line: 608, column: 23, scope: !4345)
!4347 = !DILocation(line: 608, column: 34, scope: !4345)
!4348 = !DILocation(line: 608, column: 41, scope: !4345)
!4349 = !DILocation(line: 608, column: 7, scope: !4243)
!4350 = !DILocation(line: 613, column: 7, scope: !4243)
!4351 = !DILocation(line: 614, column: 8, scope: !4249)
!4352 = !DILocation(line: 614, column: 4, scope: !4249)
!4353 = !DILocation(line: 255, column: 15, scope: !4194)
!4354 = !DILocation(line: 256, column: 6, scope: !4194)
!4355 = !DILocation(line: 254, column: 15, scope: !4194)
!4356 = !DILocation(line: 253, column: 15, scope: !4194)
!4357 = !DILocation(line: 320, column: 7, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4286, file: !395, line: 305, column: 20)
!4359 = !DILocation(line: 615, column: 1, scope: !4249)
!4360 = !DILocation(line: 616, column: 8, scope: !4249)
!4361 = !DILocation(line: 617, column: 5, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4363, file: !395, line: 616, column: 22)
!4363 = distinct !DILexicalBlock(scope: !4249, file: !395, line: 616, column: 8)
!4364 = !DILocation(line: 617, column: 25, scope: !4362)
!4365 = !DILocation(line: 618, column: 4, scope: !4362)
!4366 = !DILocation(line: 620, column: 26, scope: !4249)
!4367 = !DILocation(line: 620, column: 29, scope: !4249)
!4368 = !DILocation(line: 620, column: 17, scope: !4249)
!4369 = !DILocation(line: 620, column: 43, scope: !4249)
!4370 = !DILocation(line: 0, scope: !4249)
!4371 = !DILocation(line: 623, column: 14, scope: !4254)
!4372 = !DILocation(line: 626, column: 26, scope: !4253)
!4373 = !DILocation(line: 626, column: 37, scope: !4253)
!4374 = !DILocation(line: 0, scope: !4253)
!4375 = !DILocation(line: 634, column: 15, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4253, file: !395, line: 634, column: 9)
!4377 = !DILocation(line: 644, column: 9, scope: !4253)
!4378 = !DILocation(line: 649, column: 27, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4380, file: !395, line: 644, column: 23)
!4380 = distinct !DILexicalBlock(scope: !4253, file: !395, line: 644, column: 9)
!4381 = !DILocation(line: 649, column: 6, scope: !4379)
!4382 = !DILocation(line: 649, column: 25, scope: !4379)
!4383 = !DILocation(line: 650, column: 27, scope: !4379)
!4384 = !DILocation(line: 650, column: 6, scope: !4379)
!4385 = !DILocation(line: 650, column: 25, scope: !4379)
!4386 = !DILocation(line: 651, column: 10, scope: !4379)
!4387 = !DILocation(line: 653, column: 26, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4389, file: !395, line: 651, column: 17)
!4389 = distinct !DILexicalBlock(scope: !4379, file: !395, line: 651, column: 10)
!4390 = !DILocation(line: 654, column: 15, scope: !4388)
!4391 = !DILocation(line: 655, column: 6, scope: !4388)
!4392 = !DILocation(line: 656, column: 15, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4389, file: !395, line: 655, column: 13)
!4394 = !DILocation(line: 658, column: 16, scope: !4380)
!4395 = !DILocation(line: 663, column: 10, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4397, file: !395, line: 658, column: 23)
!4397 = distinct !DILexicalBlock(scope: !4380, file: !395, line: 658, column: 16)
!4398 = !DILocation(line: 664, column: 5, scope: !4396)
!4399 = !DILocation(line: 664, column: 16, scope: !4397)
!4400 = !DILocation(line: 669, column: 10, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4402, file: !395, line: 664, column: 28)
!4402 = distinct !DILexicalBlock(scope: !4397, file: !395, line: 664, column: 16)
!4403 = !DILocation(line: 670, column: 5, scope: !4401)
!4404 = !DILocation(line: 675, column: 13, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4402, file: !395, line: 670, column: 12)
!4406 = !DILocation(line: 675, column: 27, scope: !4405)
!4407 = !DILocation(line: 675, column: 10, scope: !4405)
!4408 = !DILocation(line: 678, column: 10, scope: !4253)
!4409 = !DILocation(line: 680, column: 8, scope: !4249)
!4410 = !DILocation(line: 683, column: 14, scope: !4250)
!4411 = !DILocation(line: 684, column: 12, scope: !4256)
!4412 = !DILocation(line: 0, scope: !4256)
!4413 = !DILocation(line: 686, column: 8, scope: !4256)
!4414 = !DILocation(line: 687, column: 5, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4416, file: !395, line: 686, column: 22)
!4416 = distinct !DILexicalBlock(scope: !4256, file: !395, line: 686, column: 8)
!4417 = !DILocation(line: 687, column: 17, scope: !4415)
!4418 = !DILocation(line: 688, column: 4, scope: !4415)
!4419 = !DILocation(line: 698, column: 18, scope: !4262)
!4420 = !DILocation(line: 0, scope: !4262)
!4421 = !DILocation(line: 700, column: 8, scope: !4262)
!4422 = !DILocation(line: 704, column: 6, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4424, file: !395, line: 703, column: 12)
!4424 = distinct !DILexicalBlock(scope: !4425, file: !395, line: 701, column: 9)
!4425 = distinct !DILexicalBlock(scope: !4426, file: !395, line: 700, column: 22)
!4426 = distinct !DILexicalBlock(scope: !4262, file: !395, line: 700, column: 8)
!4427 = !DILocation(line: 704, column: 24, scope: !4423)
!4428 = !DILocation(line: 706, column: 4, scope: !4425)
!4429 = !DILocation(line: 0, scope: !4257)
!4430 = !DILocation(line: 0, scope: !4243)
!4431 = !DILocation(line: 720, column: 6, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4194, file: !395, line: 720, column: 6)
!4433 = !DILocation(line: 720, column: 17, scope: !4432)
!4434 = !DILocation(line: 720, column: 31, scope: !4432)
!4435 = !DILocation(line: 720, column: 6, scope: !4194)
!4436 = !DILocation(line: 729, column: 6, scope: !4194)
!4437 = !DILocation(line: 730, column: 21, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4439, file: !395, line: 729, column: 20)
!4439 = distinct !DILexicalBlock(scope: !4194, file: !395, line: 729, column: 6)
!4440 = !DILocation(line: 730, column: 27, scope: !4438)
!4441 = !DILocation(line: 730, column: 3, scope: !4438)
!4442 = !DILocation(line: 737, column: 22, scope: !4194)
!4443 = !DILocation(line: 737, column: 20, scope: !4194)
!4444 = !DILocation(line: 0, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4194, file: !395, line: 739, column: 6)
!4446 = !DILocation(line: 745, column: 17, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4445, file: !395, line: 743, column: 9)
!4448 = !DILocation(line: 745, column: 25, scope: !4447)
!4449 = !DILocation(line: 746, column: 17, scope: !4447)
!4450 = !DILocation(line: 746, column: 28, scope: !4447)
!4451 = !DILocation(line: 749, column: 29, scope: !4194)
!4452 = !DILocation(line: 749, column: 16, scope: !4194)
!4453 = !DILocation(line: 749, column: 27, scope: !4194)
!4454 = !DILocation(line: 756, column: 6, scope: !4269)
!4455 = !DILocation(line: 756, column: 6, scope: !4194)
!4456 = !DILocation(line: 757, column: 3, scope: !4267)
!4457 = !DILocation(line: 758, column: 10, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4265, file: !395, line: 758, column: 8)
!4459 = !DILocation(line: 758, column: 25, scope: !4458)
!4460 = !DILocation(line: 758, column: 8, scope: !4265)
!4461 = !DILocation(line: 0, scope: !4265)
!4462 = !DILocation(line: 765, column: 8, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4265, file: !395, line: 765, column: 8)
!4464 = !DILocation(line: 765, column: 19, scope: !4463)
!4465 = !DILocation(line: 765, column: 23, scope: !4463)
!4466 = !DILocation(line: 765, column: 8, scope: !4265)
!4467 = !DILocation(line: 762, column: 33, scope: !4265)
!4468 = !DILocation(line: 769, column: 8, scope: !4265)
!4469 = !DILocation(line: 769, column: 11, scope: !4265)
!4470 = !DILocation(line: 757, column: 27, scope: !4266)
!4471 = !DILocation(line: 757, column: 17, scope: !4266)
!4472 = distinct !{!4472, !4456, !4473}
!4473 = !DILocation(line: 770, column: 3, scope: !4267)
!4474 = !DILocation(line: 774, column: 16, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4476, file: !395, line: 774, column: 2)
!4476 = distinct !DILexicalBlock(scope: !4194, file: !395, line: 774, column: 2)
!4477 = !DILocation(line: 774, column: 2, scope: !4476)
!4478 = !DILocation(line: 776, column: 16, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4480, file: !395, line: 776, column: 7)
!4480 = distinct !DILexicalBlock(scope: !4475, file: !395, line: 774, column: 30)
!4481 = !DILocation(line: 776, column: 19, scope: !4479)
!4482 = !DILocation(line: 776, column: 34, scope: !4479)
!4483 = !DILocation(line: 776, column: 7, scope: !4480)
!4484 = !DILocation(line: 780, column: 7, scope: !4480)
!4485 = !DILocation(line: 782, column: 13, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4487, file: !395, line: 780, column: 19)
!4487 = distinct !DILexicalBlock(scope: !4480, file: !395, line: 780, column: 7)
!4488 = !DILocation(line: 782, column: 8, scope: !4486)
!4489 = !DILocation(line: 782, column: 11, scope: !4486)
!4490 = !DILocation(line: 783, column: 3, scope: !4486)
!4491 = !DILocation(line: 785, column: 26, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4487, file: !395, line: 783, column: 10)
!4493 = !DILocation(line: 785, column: 41, scope: !4492)
!4494 = !DILocation(line: 785, column: 24, scope: !4492)
!4495 = !DILocation(line: 785, column: 8, scope: !4492)
!4496 = !DILocation(line: 787, column: 52, scope: !4492)
!4497 = !DILocation(line: 789, column: 11, scope: !4492)
!4498 = !DILocation(line: 789, column: 21, scope: !4492)
!4499 = !DILocation(line: 0, scope: !4487)
!4500 = !DILocation(line: 793, column: 7, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4480, file: !395, line: 793, column: 7)
!4502 = !DILocation(line: 793, column: 18, scope: !4501)
!4503 = !DILocation(line: 793, column: 22, scope: !4501)
!4504 = !DILocation(line: 793, column: 29, scope: !4501)
!4505 = !DILocation(line: 793, column: 7, scope: !4480)
!4506 = !DILocation(line: 797, column: 12, scope: !4480)
!4507 = !DILocation(line: 797, column: 7, scope: !4480)
!4508 = !DILocation(line: 797, column: 10, scope: !4480)
!4509 = !DILocation(line: 799, column: 3, scope: !4480)
!4510 = !DILocation(line: 800, column: 7, scope: !4480)
!4511 = !DILocation(line: 801, column: 2, scope: !4480)
!4512 = !DILocation(line: 338, column: 4, scope: !4194)
!4513 = !DILocation(line: 774, column: 26, scope: !4475)
!4514 = distinct !{!4514, !4477, !4515}
!4515 = !DILocation(line: 801, column: 2, scope: !4476)
!4516 = !DILocation(line: 808, column: 9, scope: !4194)
!4517 = !DILocation(line: 808, column: 2, scope: !4194)
!4518 = !DILocation(line: 813, column: 1, scope: !4194)
!4519 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !395, file: !395, line: 33, type: !4520, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4522)
!4520 = !DISubroutineType(types: !4521)
!4521 = !{!153, !140}
!4522 = !{!4523}
!4523 = !DILocalVariable(name: "addr", arg: 1, scope: !4519, file: !395, line: 33, type: !140)
!4524 = !DILocation(line: 0, scope: !4519)
!4525 = !DILocation(line: 41, column: 9, scope: !4519)
!4526 = !DILocation(line: 41, column: 2, scope: !4519)
!4527 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4528, file: !4528, line: 24, type: !4529, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4531)
!4528 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4529 = !DISubroutineType(types: !4530)
!4530 = !{!153, !13}
!4531 = !{!4532}
!4532 = !DILocalVariable(name: "addr", arg: 1, scope: !4527, file: !4528, line: 24, type: !13)
!4533 = !DILocation(line: 0, scope: !4527)
!4534 = !DILocation(line: 49, column: 30, scope: !4527)
!4535 = !DILocation(line: 49, column: 57, scope: !4527)
!4536 = !DILocation(line: 49, column: 2, scope: !4527)
!4537 = distinct !DISubprogram(name: "cbprintf_package", scope: !395, file: !395, line: 815, type: !4538, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4540)
!4538 = !DISubroutineType(types: !4539)
!4539 = !{!125, !124, !272, !208, !140, null}
!4540 = !{!4541, !4542, !4543, !4544, !4545, !4546}
!4541 = !DILocalVariable(name: "packaged", arg: 1, scope: !4537, file: !395, line: 815, type: !124)
!4542 = !DILocalVariable(name: "len", arg: 2, scope: !4537, file: !395, line: 815, type: !272)
!4543 = !DILocalVariable(name: "flags", arg: 3, scope: !4537, file: !395, line: 815, type: !208)
!4544 = !DILocalVariable(name: "format", arg: 4, scope: !4537, file: !395, line: 816, type: !140)
!4545 = !DILocalVariable(name: "ap", scope: !4537, file: !395, line: 818, type: !4197)
!4546 = !DILocalVariable(name: "ret", scope: !4537, file: !395, line: 819, type: !125)
!4547 = !DILocation(line: 0, scope: !4537)
!4548 = !DILocation(line: 818, column: 2, scope: !4537)
!4549 = !DILocation(line: 818, column: 10, scope: !4537)
!4550 = !DILocation(line: 821, column: 2, scope: !4537)
!4551 = !DILocation(line: 822, column: 8, scope: !4537)
!4552 = !DILocation(line: 823, column: 2, scope: !4537)
!4553 = !DILocation(line: 825, column: 1, scope: !4537)
!4554 = !DILocation(line: 824, column: 2, scope: !4537)
!4555 = distinct !DISubprogram(name: "cbpprintf_external", scope: !395, file: !395, line: 827, type: !4556, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4566)
!4556 = !DISubroutineType(types: !4557)
!4557 = !{!125, !4558, !4562, !124, !124}
!4558 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4229, line: 297, baseType: !4559)
!4559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4560, size: 32)
!4560 = !DISubroutineType(types: !4561)
!4561 = !{!125, null}
!4562 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4229, line: 328, baseType: !4563)
!4563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4564, size: 32)
!4564 = !DISubroutineType(types: !4565)
!4565 = !{!125, !4558, !124, !140, !4197}
!4566 = !{!4567, !4568, !4569, !4570, !4571, !4572, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585}
!4567 = !DILocalVariable(name: "out", arg: 1, scope: !4555, file: !395, line: 827, type: !4558)
!4568 = !DILocalVariable(name: "formatter", arg: 2, scope: !4555, file: !395, line: 828, type: !4562)
!4569 = !DILocalVariable(name: "ctx", arg: 3, scope: !4555, file: !395, line: 829, type: !124)
!4570 = !DILocalVariable(name: "packaged", arg: 4, scope: !4555, file: !395, line: 829, type: !124)
!4571 = !DILocalVariable(name: "buf", scope: !4555, file: !395, line: 831, type: !184)
!4572 = !DILocalVariable(name: "hdr", scope: !4555, file: !395, line: 832, type: !4573)
!4573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4574, size: 32)
!4574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4229, line: 96, size: 64, elements: !4575)
!4575 = !{!4576, !4577}
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4574, file: !4229, line: 98, baseType: !4228, size: 32)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4574, file: !4229, line: 101, baseType: !393, size: 32, offset: 32)
!4578 = !DILocalVariable(name: "s", scope: !4555, file: !395, line: 833, type: !393)
!4579 = !DILocalVariable(name: "ps", scope: !4555, file: !395, line: 833, type: !392)
!4580 = !DILocalVariable(name: "i", scope: !4555, file: !395, line: 834, type: !32)
!4581 = !DILocalVariable(name: "args_size", scope: !4555, file: !395, line: 834, type: !32)
!4582 = !DILocalVariable(name: "s_nbr", scope: !4555, file: !395, line: 834, type: !32)
!4583 = !DILocalVariable(name: "ros_nbr", scope: !4555, file: !395, line: 834, type: !32)
!4584 = !DILocalVariable(name: "rws_nbr", scope: !4555, file: !395, line: 834, type: !32)
!4585 = !DILocalVariable(name: "s_idx", scope: !4555, file: !395, line: 834, type: !32)
!4586 = !DILocation(line: 0, scope: !4555)
!4587 = !DILocation(line: 836, column: 10, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4555, file: !395, line: 836, column: 6)
!4589 = !DILocation(line: 836, column: 6, scope: !4555)
!4590 = !DILocation(line: 842, column: 28, scope: !4555)
!4591 = !DILocation(line: 842, column: 14, scope: !4555)
!4592 = !DILocation(line: 852, column: 16, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4594, file: !395, line: 852, column: 2)
!4594 = distinct !DILexicalBlock(scope: !4555, file: !395, line: 852, column: 2)
!4595 = !DILocation(line: 852, column: 2, scope: !4594)
!4596 = !DILocation(line: 841, column: 28, scope: !4555)
!4597 = !DILocation(line: 841, column: 14, scope: !4555)
!4598 = !DILocation(line: 841, column: 32, scope: !4555)
!4599 = !DILocation(line: 847, column: 19, scope: !4555)
!4600 = !DILocation(line: 843, column: 28, scope: !4555)
!4601 = !DILocation(line: 843, column: 14, scope: !4555)
!4602 = !DILocation(line: 847, column: 31, scope: !4555)
!4603 = !DILocation(line: 844, column: 28, scope: !4555)
!4604 = !DILocation(line: 844, column: 14, scope: !4555)
!4605 = !DILocation(line: 847, column: 45, scope: !4555)
!4606 = !DILocation(line: 847, column: 41, scope: !4555)
!4607 = !DILocation(line: 854, column: 24, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4593, file: !395, line: 852, column: 30)
!4609 = !DILocation(line: 854, column: 11, scope: !4608)
!4610 = !DILocation(line: 855, column: 30, scope: !4608)
!4611 = !DILocation(line: 855, column: 22, scope: !4608)
!4612 = !DILocation(line: 855, column: 8, scope: !4608)
!4613 = !DILocation(line: 857, column: 7, scope: !4608)
!4614 = !DILocation(line: 859, column: 8, scope: !4608)
!4615 = !DILocation(line: 859, column: 18, scope: !4608)
!4616 = !DILocation(line: 859, column: 5, scope: !4608)
!4617 = !DILocation(line: 852, column: 26, scope: !4593)
!4618 = distinct !{!4618, !4595, !4619}
!4619 = !DILocation(line: 860, column: 2, scope: !4594)
!4620 = !DILocation(line: 863, column: 6, scope: !4555)
!4621 = !DILocation(line: 866, column: 56, scope: !4555)
!4622 = !DILocation(line: 866, column: 9, scope: !4555)
!4623 = !DILocation(line: 866, column: 2, scope: !4555)
!4624 = !DILocation(line: 867, column: 1, scope: !4555)
!4625 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !395, file: !395, line: 179, type: !4626, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4628)
!4626 = !DISubroutineType(types: !4627)
!4627 = !{!125, !4558, !4562, !124, !140, !124}
!4628 = !{!4629, !4630, !4631, !4632, !4633, !4634}
!4629 = !DILocalVariable(name: "out", arg: 1, scope: !4625, file: !395, line: 179, type: !4558)
!4630 = !DILocalVariable(name: "formatter", arg: 2, scope: !4625, file: !395, line: 180, type: !4562)
!4631 = !DILocalVariable(name: "ctx", arg: 3, scope: !4625, file: !395, line: 181, type: !124)
!4632 = !DILocalVariable(name: "fmt", arg: 4, scope: !4625, file: !395, line: 182, type: !140)
!4633 = !DILocalVariable(name: "buf", arg: 5, scope: !4625, file: !395, line: 182, type: !124)
!4634 = !DILocalVariable(name: "u", scope: !4625, file: !395, line: 187, type: !4635)
!4635 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4625, file: !395, line: 184, size: 32, elements: !4636)
!4636 = !{!4637, !4638}
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4635, file: !395, line: 185, baseType: !4197, size: 32)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4635, file: !395, line: 186, baseType: !124, size: 32)
!4639 = !DILocation(line: 0, scope: !4625)
!4640 = !DILocation(line: 191, column: 9, scope: !4625)
!4641 = !DILocation(line: 191, column: 2, scope: !4625)
!4642 = distinct !DISubprogram(name: "is_ptr", scope: !395, file: !395, line: 881, type: !4643, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4645)
!4643 = !DISubroutineType(types: !4644)
!4644 = !{!153, !140, !125}
!4645 = !{!4646, !4647, !4648, !4649, !4650}
!4646 = !DILocalVariable(name: "fmt", arg: 1, scope: !4642, file: !395, line: 881, type: !140)
!4647 = !DILocalVariable(name: "n", arg: 2, scope: !4642, file: !395, line: 881, type: !125)
!4648 = !DILocalVariable(name: "c", scope: !4642, file: !395, line: 883, type: !142)
!4649 = !DILocalVariable(name: "mod", scope: !4642, file: !395, line: 884, type: !153)
!4650 = !DILocalVariable(name: "cnt", scope: !4642, file: !395, line: 885, type: !125)
!4651 = !DILocation(line: 0, scope: !4642)
!4652 = !DILocation(line: 887, column: 14, scope: !4642)
!4653 = !DILocation(line: 887, column: 22, scope: !4642)
!4654 = !DILocation(line: 887, column: 2, scope: !4642)
!4655 = !DILocation(line: 887, column: 18, scope: !4642)
!4656 = !DILocation(line: 888, column: 7, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4642, file: !395, line: 887, column: 31)
!4658 = !DILocation(line: 889, column: 12, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4660, file: !395, line: 889, column: 8)
!4660 = distinct !DILexicalBlock(scope: !4661, file: !395, line: 888, column: 12)
!4661 = distinct !DILexicalBlock(scope: !4657, file: !395, line: 888, column: 7)
!4662 = !DILocation(line: 889, column: 8, scope: !4660)
!4663 = !DILocation(line: 890, column: 11, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4665, file: !395, line: 890, column: 9)
!4665 = distinct !DILexicalBlock(scope: !4659, file: !395, line: 889, column: 18)
!4666 = !DILocation(line: 890, column: 9, scope: !4665)
!4667 = !DILocation(line: 892, column: 16, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4664, file: !395, line: 892, column: 16)
!4669 = !DILocation(line: 892, column: 16, scope: !4664)
!4670 = !DILocation(line: 895, column: 15, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4659, file: !395, line: 895, column: 15)
!4672 = !DILocation(line: 895, column: 15, scope: !4659)
!4673 = !DILocation(line: 900, column: 9, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4657, file: !395, line: 900, column: 7)
!4675 = !DILocation(line: 900, column: 7, scope: !4657)
!4676 = distinct !{!4676, !4654, !4677}
!4677 = !DILocation(line: 903, column: 2, scope: !4642)
!4678 = !DILocation(line: 906, column: 1, scope: !4642)
!4679 = distinct !DISubprogram(name: "is_fmt_spec", scope: !395, file: !395, line: 873, type: !4680, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4682)
!4680 = !DISubroutineType(types: !4681)
!4681 = !{!153, !142}
!4682 = !{!4683}
!4683 = !DILocalVariable(name: "c", arg: 1, scope: !4679, file: !395, line: 873, type: !142)
!4684 = !DILocation(line: 0, scope: !4679)
!4685 = !DILocation(line: 875, column: 19, scope: !4679)
!4686 = !DILocation(line: 875, column: 2, scope: !4679)
!4687 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !395, file: !395, line: 908, type: !4688, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4694)
!4688 = !DISubroutineType(types: !4689)
!4689 = !{!125, !124, !272, !4690, !124, !208, !2967, !272}
!4690 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4229, line: 308, baseType: !4691)
!4691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4692, size: 32)
!4692 = !DISubroutineType(types: !4693)
!4693 = !{!125, !13, !272, !124}
!4694 = !{!4695, !4696, !4697, !4698, !4699, !4700, !4701, !4702, !4703, !4704, !4705, !4706, !4707, !4708, !4709, !4710, !4712, !4713, !4714, !4715, !4716, !4722, !4725, !4726, !4727, !4729, !4732, !4733, !4734, !4735, !4736, !4737, !4738, !4739, !4740, !4741, !4742, !4743, !4745, !4748, !4749, !4750, !4751, !4752, !4753, !4755, !4758, !4759, !4760}
!4695 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4687, file: !395, line: 908, type: !124)
!4696 = !DILocalVariable(name: "in_len", arg: 2, scope: !4687, file: !395, line: 909, type: !272)
!4697 = !DILocalVariable(name: "cb", arg: 3, scope: !4687, file: !395, line: 910, type: !4690)
!4698 = !DILocalVariable(name: "ctx", arg: 4, scope: !4687, file: !395, line: 911, type: !124)
!4699 = !DILocalVariable(name: "flags", arg: 5, scope: !4687, file: !395, line: 912, type: !208)
!4700 = !DILocalVariable(name: "strl", arg: 6, scope: !4687, file: !395, line: 913, type: !2967)
!4701 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4687, file: !395, line: 914, type: !272)
!4702 = !DILocalVariable(name: "buf", scope: !4687, file: !395, line: 918, type: !184)
!4703 = !DILocalVariable(name: "buf32", scope: !4687, file: !395, line: 919, type: !1009)
!4704 = !DILocalVariable(name: "args_size", scope: !4687, file: !395, line: 920, type: !32)
!4705 = !DILocalVariable(name: "ros_nbr", scope: !4687, file: !395, line: 920, type: !32)
!4706 = !DILocalVariable(name: "rws_nbr", scope: !4687, file: !395, line: 920, type: !32)
!4707 = !DILocalVariable(name: "fmt_present", scope: !4687, file: !395, line: 921, type: !153)
!4708 = !DILocalVariable(name: "rw_cpy", scope: !4687, file: !395, line: 922, type: !153)
!4709 = !DILocalVariable(name: "ro_cpy", scope: !4687, file: !395, line: 923, type: !153)
!4710 = !DILocalVariable(name: "in_desc", scope: !4687, file: !395, line: 924, type: !4711)
!4711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4232, size: 32)
!4712 = !DILocalVariable(name: "out_len", scope: !4687, file: !395, line: 960, type: !125)
!4713 = !DILocalVariable(name: "fmt", scope: !4687, file: !395, line: 965, type: !140)
!4714 = !DILocalVariable(name: "str_pos", scope: !4687, file: !395, line: 966, type: !184)
!4715 = !DILocalVariable(name: "strl_cnt", scope: !4687, file: !395, line: 967, type: !272)
!4716 = !DILocalVariable(name: "i", scope: !4717, file: !395, line: 973, type: !125)
!4717 = distinct !DILexicalBlock(scope: !4718, file: !395, line: 973, column: 4)
!4718 = distinct !DILexicalBlock(scope: !4719, file: !395, line: 972, column: 15)
!4719 = distinct !DILexicalBlock(scope: !4720, file: !395, line: 972, column: 7)
!4720 = distinct !DILexicalBlock(scope: !4721, file: !395, line: 970, column: 18)
!4721 = distinct !DILexicalBlock(scope: !4687, file: !395, line: 970, column: 6)
!4722 = !DILocalVariable(name: "str", scope: !4723, file: !395, line: 974, type: !140)
!4723 = distinct !DILexicalBlock(scope: !4724, file: !395, line: 973, column: 38)
!4724 = distinct !DILexicalBlock(scope: !4717, file: !395, line: 973, column: 4)
!4725 = !DILocalVariable(name: "len", scope: !4723, file: !395, line: 975, type: !125)
!4726 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4720, file: !395, line: 990, type: !153)
!4727 = !DILocalVariable(name: "i", scope: !4728, file: !395, line: 995, type: !125)
!4728 = distinct !DILexicalBlock(scope: !4720, file: !395, line: 995, column: 3)
!4729 = !DILocalVariable(name: "arg_idx", scope: !4730, file: !395, line: 996, type: !150)
!4730 = distinct !DILexicalBlock(scope: !4731, file: !395, line: 995, column: 37)
!4731 = distinct !DILexicalBlock(scope: !4728, file: !395, line: 995, column: 3)
!4732 = !DILocalVariable(name: "arg_pos", scope: !4730, file: !395, line: 997, type: !150)
!4733 = !DILocalVariable(name: "str", scope: !4730, file: !395, line: 998, type: !140)
!4734 = !DILocalVariable(name: "is_ro", scope: !4730, file: !395, line: 999, type: !153)
!4735 = !DILocalVariable(name: "len", scope: !4730, file: !395, line: 1000, type: !125)
!4736 = !DILocalVariable(name: "out_desc", scope: !4687, file: !395, line: 1038, type: !4232)
!4737 = !DILocalVariable(name: "cpy_str_pos", scope: !4687, file: !395, line: 1040, type: !311)
!4738 = !DILocalVariable(name: "keep_str_pos", scope: !4687, file: !395, line: 1042, type: !311)
!4739 = !DILocalVariable(name: "scpy_cnt", scope: !4687, file: !395, line: 1043, type: !150)
!4740 = !DILocalVariable(name: "keep_cnt", scope: !4687, file: !395, line: 1044, type: !150)
!4741 = !DILocalVariable(name: "dst", scope: !4687, file: !395, line: 1045, type: !184)
!4742 = !DILocalVariable(name: "rv", scope: !4687, file: !395, line: 1046, type: !125)
!4743 = !DILocalVariable(name: "i", scope: !4744, file: !395, line: 1074, type: !125)
!4744 = distinct !DILexicalBlock(scope: !4687, file: !395, line: 1074, column: 2)
!4745 = !DILocalVariable(name: "arg_idx", scope: !4746, file: !395, line: 1075, type: !150)
!4746 = distinct !DILexicalBlock(scope: !4747, file: !395, line: 1074, column: 36)
!4747 = distinct !DILexicalBlock(scope: !4744, file: !395, line: 1074, column: 2)
!4748 = !DILocalVariable(name: "arg_pos", scope: !4746, file: !395, line: 1076, type: !150)
!4749 = !DILocalVariable(name: "str", scope: !4746, file: !395, line: 1077, type: !140)
!4750 = !DILocalVariable(name: "is_ro", scope: !4746, file: !395, line: 1078, type: !153)
!4751 = !DILocalVariable(name: "in_desc_backup", scope: !4687, file: !395, line: 1114, type: !4232)
!4752 = !DILocalVariable(name: "strs_len", scope: !4687, file: !395, line: 1134, type: !272)
!4753 = !DILocalVariable(name: "i", scope: !4754, file: !395, line: 1143, type: !125)
!4754 = distinct !DILexicalBlock(scope: !4687, file: !395, line: 1143, column: 2)
!4755 = !DILocalVariable(name: "loc", scope: !4756, file: !395, line: 1144, type: !150)
!4756 = distinct !DILexicalBlock(scope: !4757, file: !395, line: 1143, column: 37)
!4757 = distinct !DILexicalBlock(scope: !4754, file: !395, line: 1143, column: 2)
!4758 = !DILocalVariable(name: "str", scope: !4756, file: !395, line: 1145, type: !140)
!4759 = !DILocalVariable(name: "str_len", scope: !4756, file: !395, line: 1146, type: !227)
!4760 = !DILabel(scope: !4761, name: "calculate_string_length", file: !395, line: 1021)
!4761 = distinct !DILexicalBlock(scope: !4762, file: !395, line: 1020, column: 56)
!4762 = distinct !DILexicalBlock(scope: !4763, file: !395, line: 1020, column: 15)
!4763 = distinct !DILexicalBlock(scope: !4730, file: !395, line: 1014, column: 8)
!4764 = !DILocation(line: 0, scope: !4687)
!4765 = !DILocation(line: 919, column: 20, scope: !4687)
!4766 = !DILocation(line: 921, column: 27, scope: !4687)
!4767 = !DILocation(line: 921, column: 21, scope: !4687)
!4768 = !DILocation(line: 926, column: 18, scope: !4687)
!4769 = !DILocation(line: 926, column: 11, scope: !4687)
!4770 = !DILocation(line: 926, column: 34, scope: !4687)
!4771 = !DILocation(line: 931, column: 21, scope: !4687)
!4772 = !DILocation(line: 931, column: 12, scope: !4687)
!4773 = !DILocation(line: 932, column: 11, scope: !4687)
!4774 = !DILocation(line: 932, column: 19, scope: !4687)
!4775 = !DILocation(line: 938, column: 21, scope: !4687)
!4776 = !DILocation(line: 938, column: 12, scope: !4687)
!4777 = !DILocation(line: 939, column: 19, scope: !4687)
!4778 = !DILocation(line: 939, column: 23, scope: !4687)
!4779 = !DILocation(line: 946, column: 14, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4687, file: !395, line: 946, column: 6)
!4781 = !DILocation(line: 947, column: 7, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4783, file: !395, line: 947, column: 7)
!4783 = distinct !DILexicalBlock(scope: !4780, file: !395, line: 946, column: 26)
!4784 = !DILocation(line: 947, column: 7, scope: !4783)
!4785 = !DILocation(line: 948, column: 4, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4782, file: !395, line: 947, column: 11)
!4787 = !DILocation(line: 949, column: 3, scope: !4786)
!4788 = !DILocation(line: 958, column: 23, scope: !4687)
!4789 = !DILocation(line: 958, column: 14, scope: !4687)
!4790 = !DILocation(line: 958, column: 27, scope: !4687)
!4791 = !DILocation(line: 965, column: 41, scope: !4687)
!4792 = !DILocation(line: 965, column: 20, scope: !4687)
!4793 = !DILocation(line: 966, column: 22, scope: !4687)
!4794 = !DILocation(line: 970, column: 9, scope: !4721)
!4795 = !DILocation(line: 970, column: 6, scope: !4687)
!4796 = !DILocation(line: 972, column: 7, scope: !4720)
!4797 = !DILocation(line: 0, scope: !4717)
!4798 = !DILocation(line: 973, column: 4, scope: !4717)
!4799 = !DILocation(line: 974, column: 46, scope: !4723)
!4800 = !DILocation(line: 974, column: 40, scope: !4723)
!4801 = !DILocation(line: 974, column: 23, scope: !4723)
!4802 = !DILocation(line: 0, scope: !4723)
!4803 = !DILocation(line: 975, column: 15, scope: !4723)
!4804 = !DILocation(line: 978, column: 14, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4723, file: !395, line: 978, column: 9)
!4806 = !DILocation(line: 979, column: 25, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4805, file: !395, line: 978, column: 38)
!4808 = !DILocation(line: 979, column: 19, scope: !4807)
!4809 = !DILocation(line: 979, column: 6, scope: !4807)
!4810 = !DILocation(line: 979, column: 23, scope: !4807)
!4811 = !DILocation(line: 980, column: 5, scope: !4807)
!4812 = !DILocation(line: 981, column: 13, scope: !4723)
!4813 = !DILocation(line: 982, column: 12, scope: !4723)
!4814 = !DILocation(line: 973, column: 34, scope: !4724)
!4815 = !DILocation(line: 973, column: 22, scope: !4724)
!4816 = distinct !{!4816, !4798, !4817}
!4817 = !DILocation(line: 983, column: 4, scope: !4717)
!4818 = !DILocation(line: 985, column: 16, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4820, file: !395, line: 985, column: 8)
!4820 = distinct !DILexicalBlock(scope: !4719, file: !395, line: 984, column: 10)
!4821 = !DILocation(line: 967, column: 9, scope: !4687)
!4822 = !DILocation(line: 971, column: 11, scope: !4720)
!4823 = !DILocation(line: 0, scope: !4720)
!4824 = !DILocation(line: 0, scope: !4728)
!4825 = !DILocation(line: 995, column: 21, scope: !4731)
!4826 = !DILocation(line: 995, column: 3, scope: !4728)
!4827 = !DILocation(line: 990, column: 34, scope: !4720)
!4828 = !DILocation(line: 990, column: 26, scope: !4720)
!4829 = !DILocation(line: 996, column: 30, scope: !4730)
!4830 = !DILocation(line: 0, scope: !4730)
!4831 = !DILocation(line: 997, column: 30, scope: !4730)
!4832 = !DILocation(line: 997, column: 22, scope: !4730)
!4833 = !DILocation(line: 998, column: 39, scope: !4730)
!4834 = !DILocation(line: 998, column: 22, scope: !4730)
!4835 = !DILocation(line: 999, column: 17, scope: !4730)
!4836 = !DILocation(line: 1002, column: 20, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4730, file: !395, line: 1002, column: 8)
!4838 = !DILocation(line: 996, column: 22, scope: !4730)
!4839 = !DILocation(line: 1002, column: 35, scope: !4837)
!4840 = !DILocation(line: 1002, column: 23, scope: !4837)
!4841 = !DILocation(line: 1002, column: 8, scope: !4730)
!4842 = !DILocation(line: 1003, column: 5, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4844, file: !395, line: 1003, column: 5)
!4844 = distinct !DILexicalBlock(scope: !4845, file: !395, line: 1003, column: 5)
!4845 = distinct !DILexicalBlock(scope: !4846, file: !395, line: 1003, column: 5)
!4846 = distinct !DILexicalBlock(scope: !4847, file: !395, line: 1003, column: 5)
!4847 = distinct !DILexicalBlock(scope: !4837, file: !395, line: 1002, column: 45)
!4848 = !DILocation(line: 1010, column: 13, scope: !4847)
!4849 = !DILocation(line: 1011, column: 5, scope: !4847)
!4850 = !DILocation(line: 1014, column: 8, scope: !4730)
!4851 = !DILocation(line: 1015, column: 9, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4763, file: !395, line: 1014, column: 15)
!4853 = !DILocation(line: 1018, column: 14, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4855, file: !395, line: 1017, column: 12)
!4855 = distinct !DILexicalBlock(scope: !4852, file: !395, line: 1015, column: 9)
!4856 = !DILocation(line: 1020, column: 4, scope: !4852)
!4857 = !DILocation(line: 1020, column: 15, scope: !4763)
!4858 = !DILocation(line: 1021, column: 1, scope: !4761)
!4859 = !DILocation(line: 1022, column: 11, scope: !4761)
!4860 = !DILocation(line: 1025, column: 14, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4761, file: !395, line: 1025, column: 9)
!4862 = !DILocation(line: 1026, column: 25, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4861, file: !395, line: 1025, column: 38)
!4864 = !DILocation(line: 1026, column: 19, scope: !4863)
!4865 = !DILocation(line: 1026, column: 6, scope: !4863)
!4866 = !DILocation(line: 1026, column: 23, scope: !4863)
!4867 = !DILocation(line: 1027, column: 5, scope: !4863)
!4868 = !DILocation(line: 1031, column: 21, scope: !4761)
!4869 = !DILocation(line: 1031, column: 13, scope: !4761)
!4870 = !DILocation(line: 1032, column: 4, scope: !4761)
!4871 = !DILocation(line: 995, column: 33, scope: !4731)
!4872 = distinct !{!4872, !4826, !4873}
!4873 = !DILocation(line: 1033, column: 3, scope: !4728)
!4874 = !DILocation(line: 1040, column: 10, scope: !4687)
!4875 = !DILocation(line: 1042, column: 10, scope: !4687)
!4876 = !DILocation(line: 1052, column: 6, scope: !4687)
!4877 = !DILocation(line: 1055, column: 9, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4879, file: !395, line: 1052, column: 14)
!4879 = distinct !DILexicalBlock(scope: !4687, file: !395, line: 1052, column: 6)
!4880 = !DILocation(line: 1056, column: 2, scope: !4878)
!4881 = !DILocation(line: 1056, column: 21, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4879, file: !395, line: 1056, column: 13)
!4883 = !DILocation(line: 1066, column: 3, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4885, file: !395, line: 1065, column: 11)
!4885 = distinct !DILexicalBlock(scope: !4687, file: !395, line: 1065, column: 6)
!4886 = !DILocation(line: 1067, column: 2, scope: !4884)
!4887 = !DILocation(line: 1068, column: 10, scope: !4687)
!4888 = !DILocation(line: 0, scope: !4744)
!4889 = !DILocation(line: 1074, column: 20, scope: !4747)
!4890 = !DILocation(line: 1074, column: 2, scope: !4744)
!4891 = !DILocation(line: 1110, column: 24, scope: !4687)
!4892 = !DILocation(line: 1053, column: 12, scope: !4878)
!4893 = !DILocation(line: 1054, column: 12, scope: !4878)
!4894 = !DILocation(line: 1108, column: 30, scope: !4687)
!4895 = !DILocation(line: 1108, column: 40, scope: !4687)
!4896 = !DILocation(line: 1108, column: 38, scope: !4687)
!4897 = !DILocation(line: 1109, column: 31, scope: !4687)
!4898 = !DILocation(line: 1109, column: 24, scope: !4687)
!4899 = !DILocation(line: 1110, column: 31, scope: !4687)
!4900 = !DILocation(line: 1114, column: 31, scope: !4687)
!4901 = !DILocation(line: 1114, column: 48, scope: !4687)
!4902 = !DILocation(line: 1115, column: 13, scope: !4687)
!4903 = !DILocation(line: 1118, column: 7, scope: !4687)
!4904 = !DILocation(line: 1119, column: 9, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4687, file: !395, line: 1119, column: 6)
!4906 = !DILocation(line: 1119, column: 6, scope: !4687)
!4907 = !DILocation(line: 1075, column: 29, scope: !4746)
!4908 = !DILocation(line: 1075, column: 21, scope: !4746)
!4909 = !DILocation(line: 0, scope: !4746)
!4910 = !DILocation(line: 1076, column: 29, scope: !4746)
!4911 = !DILocation(line: 1076, column: 21, scope: !4746)
!4912 = !DILocation(line: 1077, column: 38, scope: !4746)
!4913 = !DILocation(line: 1077, column: 21, scope: !4746)
!4914 = !DILocation(line: 1078, column: 16, scope: !4746)
!4915 = !DILocation(line: 1080, column: 19, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4746, file: !395, line: 1080, column: 7)
!4917 = !DILocation(line: 1080, column: 34, scope: !4916)
!4918 = !DILocation(line: 1080, column: 22, scope: !4916)
!4919 = !DILocation(line: 1080, column: 7, scope: !4746)
!4920 = !DILocation(line: 1084, column: 7, scope: !4746)
!4921 = !DILocation(line: 1085, column: 8, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4923, file: !395, line: 1084, column: 14)
!4923 = distinct !DILexicalBlock(scope: !4746, file: !395, line: 1084, column: 7)
!4924 = !DILocation(line: 1087, column: 25, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4926, file: !395, line: 1085, column: 49)
!4926 = distinct !DILexicalBlock(scope: !4922, file: !395, line: 1085, column: 8)
!4927 = !DILocation(line: 1088, column: 4, scope: !4925)
!4928 = !DILocation(line: 1088, column: 15, scope: !4926)
!4929 = !DILocation(line: 1090, column: 26, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4931, file: !395, line: 1088, column: 61)
!4931 = distinct !DILexicalBlock(scope: !4926, file: !395, line: 1088, column: 15)
!4932 = !DILocation(line: 1091, column: 4, scope: !4930)
!4933 = !DILocation(line: 1095, column: 8, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4923, file: !395, line: 1094, column: 10)
!4935 = !DILocation(line: 1097, column: 25, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4937, file: !395, line: 1095, column: 49)
!4937 = distinct !DILexicalBlock(scope: !4934, file: !395, line: 1095, column: 8)
!4938 = !DILocation(line: 1098, column: 4, scope: !4936)
!4939 = !DILocation(line: 1100, column: 26, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4937, file: !395, line: 1098, column: 11)
!4941 = !DILocation(line: 1100, column: 5, scope: !4940)
!4942 = !DILocation(line: 1100, column: 30, scope: !4940)
!4943 = !DILocation(line: 1101, column: 26, scope: !4940)
!4944 = !DILocation(line: 0, scope: !4923)
!4945 = !DILocation(line: 1074, column: 32, scope: !4747)
!4946 = distinct !{!4946, !4890, !4947}
!4947 = !DILocation(line: 1104, column: 2, scope: !4744)
!4948 = !DILocation(line: 1124, column: 13, scope: !4687)
!4949 = !DILocation(line: 1127, column: 10, scope: !4687)
!4950 = !DILocation(line: 1127, column: 7, scope: !4687)
!4951 = !DILocation(line: 1128, column: 9, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4687, file: !395, line: 1128, column: 6)
!4953 = !DILocation(line: 1128, column: 6, scope: !4687)
!4954 = !DILocation(line: 1134, column: 27, scope: !4687)
!4955 = !DILocation(line: 1136, column: 7, scope: !4687)
!4956 = !DILocation(line: 1137, column: 9, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4687, file: !395, line: 1137, column: 6)
!4958 = !DILocation(line: 1137, column: 6, scope: !4687)
!4959 = !DILocation(line: 1131, column: 10, scope: !4687)
!4960 = !DILocation(line: 1140, column: 10, scope: !4687)
!4961 = !DILocation(line: 0, scope: !4754)
!4962 = !DILocation(line: 1143, column: 20, scope: !4757)
!4963 = !DILocation(line: 1143, column: 2, scope: !4754)
!4964 = !DILocation(line: 1144, column: 3, scope: !4756)
!4965 = !DILocation(line: 1144, column: 17, scope: !4756)
!4966 = !DILocation(line: 0, scope: !4756)
!4967 = !DILocation(line: 1144, column: 11, scope: !4756)
!4968 = !DILocation(line: 1145, column: 38, scope: !4756)
!4969 = !DILocation(line: 1145, column: 21, scope: !4756)
!4970 = !DILocation(line: 1146, column: 22, scope: !4756)
!4971 = !DILocation(line: 1146, column: 29, scope: !4756)
!4972 = !DILocation(line: 1148, column: 8, scope: !4756)
!4973 = !DILocation(line: 1149, column: 10, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4756, file: !395, line: 1149, column: 7)
!4975 = !DILocation(line: 1149, column: 7, scope: !4756)
!4976 = !DILocation(line: 1154, column: 8, scope: !4756)
!4977 = !DILocation(line: 1155, column: 10, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4756, file: !395, line: 1155, column: 7)
!4979 = !DILocation(line: 1155, column: 7, scope: !4756)
!4980 = !DILocation(line: 1159, column: 2, scope: !4757)
!4981 = !DILocation(line: 1152, column: 11, scope: !4756)
!4982 = !DILocation(line: 1158, column: 11, scope: !4756)
!4983 = !DILocation(line: 1143, column: 33, scope: !4757)
!4984 = distinct !{!4984, !4963, !4985}
!4985 = !DILocation(line: 1159, column: 2, scope: !4754)
!4986 = !DILocation(line: 1162, column: 8, scope: !4687)
!4987 = !DILocation(line: 1164, column: 2, scope: !4687)
!4988 = !DILocation(line: 1165, column: 1, scope: !4687)
!4989 = distinct !DISubprogram(name: "get_package_len", scope: !395, file: !395, line: 196, type: !4990, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4992)
!4990 = !DISubroutineType(types: !4991)
!4991 = !{!272, !124}
!4992 = !{!4993, !4994, !4995, !4996, !4997, !4998, !4999}
!4993 = !DILocalVariable(name: "packaged", arg: 1, scope: !4989, file: !395, line: 196, type: !124)
!4994 = !DILocalVariable(name: "buf", scope: !4989, file: !395, line: 200, type: !184)
!4995 = !DILocalVariable(name: "start", scope: !4989, file: !395, line: 201, type: !184)
!4996 = !DILocalVariable(name: "args_size", scope: !4989, file: !395, line: 202, type: !32)
!4997 = !DILocalVariable(name: "s_nbr", scope: !4989, file: !395, line: 202, type: !32)
!4998 = !DILocalVariable(name: "ros_nbr", scope: !4989, file: !395, line: 202, type: !32)
!4999 = !DILocalVariable(name: "i", scope: !5000, file: !395, line: 215, type: !125)
!5000 = distinct !DILexicalBlock(scope: !4989, file: !395, line: 215, column: 2)
!5001 = !DILocation(line: 0, scope: !4989)
!5002 = !DILocation(line: 204, column: 14, scope: !4989)
!5003 = !DILocation(line: 204, column: 21, scope: !4989)
!5004 = !DILocation(line: 205, column: 14, scope: !4989)
!5005 = !DILocation(line: 206, column: 14, scope: !4989)
!5006 = !DILocation(line: 209, column: 6, scope: !4989)
!5007 = !DILocation(line: 212, column: 6, scope: !4989)
!5008 = !DILocation(line: 0, scope: !5000)
!5009 = !DILocation(line: 215, column: 20, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5000, file: !395, line: 215, column: 2)
!5011 = !DILocation(line: 215, column: 2, scope: !5000)
!5012 = !DILocation(line: 220, column: 33, scope: !4989)
!5013 = !DILocation(line: 220, column: 2, scope: !4989)
!5014 = !DILocation(line: 216, column: 6, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5010, file: !395, line: 215, column: 34)
!5016 = !DILocation(line: 217, column: 10, scope: !5015)
!5017 = !DILocation(line: 217, column: 36, scope: !5015)
!5018 = !DILocation(line: 217, column: 7, scope: !5015)
!5019 = !DILocation(line: 215, column: 30, scope: !5010)
!5020 = distinct !{!5020, !5011, !5021}
!5021 = !DILocation(line: 218, column: 2, scope: !5000)
!5022 = distinct !DISubprogram(name: "append_string", scope: !395, file: !395, line: 223, type: !5023, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5025)
!5023 = !DISubroutineType(types: !5024)
!5024 = !{!125, !4690, !124, !140, !227}
!5025 = !{!5026, !5027, !5028, !5029}
!5026 = !DILocalVariable(name: "cb", arg: 1, scope: !5022, file: !395, line: 223, type: !4690)
!5027 = !DILocalVariable(name: "ctx", arg: 2, scope: !5022, file: !395, line: 223, type: !124)
!5028 = !DILocalVariable(name: "str", arg: 3, scope: !5022, file: !395, line: 223, type: !140)
!5029 = !DILocalVariable(name: "strl", arg: 4, scope: !5022, file: !395, line: 223, type: !227)
!5030 = !DILocation(line: 0, scope: !5022)
!5031 = !DILocation(line: 225, column: 9, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5022, file: !395, line: 225, column: 6)
!5033 = !DILocation(line: 225, column: 6, scope: !5022)
!5034 = !DILocation(line: 226, column: 14, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5032, file: !395, line: 225, column: 18)
!5036 = !DILocation(line: 226, column: 12, scope: !5035)
!5037 = !DILocation(line: 226, column: 3, scope: !5035)
!5038 = !DILocation(line: 229, column: 14, scope: !5022)
!5039 = !DILocation(line: 229, column: 9, scope: !5022)
!5040 = !DILocation(line: 229, column: 27, scope: !5022)
!5041 = !DILocation(line: 229, column: 39, scope: !5022)
!5042 = !DILocation(line: 230, column: 17, scope: !5022)
!5043 = !DILocation(line: 230, column: 9, scope: !5022)
!5044 = !DILocation(line: 230, column: 2, scope: !5022)
!5045 = !DILocation(line: 231, column: 1, scope: !5022)
!5046 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !408, file: !408, line: 45, type: !410, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5047)
!5047 = !{!5048}
!5048 = !DILocalVariable(name: "c", arg: 1, scope: !5046, file: !408, line: 45, type: !125)
!5049 = !DILocation(line: 0, scope: !5046)
!5050 = !DILocation(line: 50, column: 2, scope: !5046)
!5051 = distinct !DISubprogram(name: "__printk_hook_install", scope: !408, file: !408, line: 63, type: !5052, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5054)
!5052 = !DISubroutineType(types: !5053)
!5053 = !{null, !409}
!5054 = !{!5055}
!5055 = !DILocalVariable(name: "fn", arg: 1, scope: !5051, file: !408, line: 63, type: !409)
!5056 = !DILocation(line: 0, scope: !5051)
!5057 = !DILocation(line: 65, column: 12, scope: !5051)
!5058 = !DILocation(line: 66, column: 1, scope: !5051)
!5059 = distinct !DISubprogram(name: "__printk_get_hook", scope: !408, file: !408, line: 76, type: !5060, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !639)
!5060 = !DISubroutineType(types: !5061)
!5061 = !{!124}
!5062 = !DILocation(line: 78, column: 9, scope: !5059)
!5063 = !DILocation(line: 78, column: 2, scope: !5059)
!5064 = distinct !DISubprogram(name: "vprintk", scope: !408, file: !408, line: 113, type: !5065, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5073)
!5065 = !DISubroutineType(types: !5066)
!5066 = !{null, !140, !5067}
!5067 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4198, line: 99, baseType: !5068)
!5068 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4198, line: 40, baseType: !5069)
!5069 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !408, baseType: !5070)
!5070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5071)
!5071 = !{!5072}
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5070, file: !408, line: 79, baseType: !124, size: 32)
!5073 = !{!5074, !5075, !5076}
!5074 = !DILocalVariable(name: "fmt", arg: 1, scope: !5064, file: !408, line: 113, type: !140)
!5075 = !DILocalVariable(name: "ap", arg: 2, scope: !5064, file: !408, line: 113, type: !5067)
!5076 = !DILocalVariable(name: "ctx", scope: !5077, file: !408, line: 121, type: !5079)
!5077 = distinct !DILexicalBlock(scope: !5078, file: !408, line: 120, column: 27)
!5078 = distinct !DILexicalBlock(scope: !5064, file: !408, line: 120, column: 6)
!5079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !408, line: 81, size: 32, elements: !5080)
!5080 = !{!5081, !5082}
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !5079, file: !408, line: 85, baseType: !32, size: 32)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5079, file: !408, line: 86, baseType: !5083, offset: 32)
!5083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, elements: !5084)
!5084 = !{!5085}
!5085 = !DISubrange(count: 0)
!5086 = !DILocation(line: 0, scope: !5064)
!5087 = !DILocation(line: 148, column: 3, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5078, file: !408, line: 138, column: 9)
!5089 = !DILocation(line: 155, column: 1, scope: !5064)
!5090 = distinct !DISubprogram(name: "char_out", scope: !408, file: !408, line: 107, type: !5091, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5093)
!5091 = !DISubroutineType(types: !5092)
!5092 = !{!125, !125, !124}
!5093 = !{!5094, !5095}
!5094 = !DILocalVariable(name: "c", arg: 1, scope: !5090, file: !408, line: 107, type: !125)
!5095 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !5090, file: !408, line: 107, type: !124)
!5096 = !DILocation(line: 0, scope: !5090)
!5097 = !DILocation(line: 110, column: 9, scope: !5090)
!5098 = !DILocation(line: 110, column: 2, scope: !5090)
!5099 = distinct !DISubprogram(name: "cbvprintf", scope: !4229, file: !4229, line: 739, type: !5100, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5102)
!5100 = !DISubroutineType(types: !5101)
!5101 = !{!125, !4558, !124, !140, !5067}
!5102 = !{!5103, !5104, !5105, !5106}
!5103 = !DILocalVariable(name: "out", arg: 1, scope: !5099, file: !4229, line: 739, type: !4558)
!5104 = !DILocalVariable(name: "ctx", arg: 2, scope: !5099, file: !4229, line: 739, type: !124)
!5105 = !DILocalVariable(name: "format", arg: 3, scope: !5099, file: !4229, line: 739, type: !140)
!5106 = !DILocalVariable(name: "ap", arg: 4, scope: !5099, file: !4229, line: 739, type: !5067)
!5107 = !DILocation(line: 0, scope: !5099)
!5108 = !DILocation(line: 741, column: 9, scope: !5099)
!5109 = !DILocation(line: 741, column: 2, scope: !5099)
!5110 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !408, file: !408, line: 157, type: !5111, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5113)
!5111 = !DISubroutineType(types: !5112)
!5112 = !{null, !393, !272}
!5113 = !{!5114, !5115, !5116}
!5114 = !DILocalVariable(name: "c", arg: 1, scope: !5110, file: !408, line: 157, type: !393)
!5115 = !DILocalVariable(name: "n", arg: 2, scope: !5110, file: !408, line: 157, type: !272)
!5116 = !DILocalVariable(name: "i", scope: !5110, file: !408, line: 159, type: !272)
!5117 = !DILocation(line: 0, scope: !5110)
!5118 = !DILocation(line: 164, column: 16, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5120, file: !408, line: 164, column: 2)
!5120 = distinct !DILexicalBlock(scope: !5110, file: !408, line: 164, column: 2)
!5121 = !DILocation(line: 164, column: 2, scope: !5120)
!5122 = !DILocation(line: 165, column: 3, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5119, file: !408, line: 164, column: 26)
!5124 = !DILocation(line: 165, column: 13, scope: !5123)
!5125 = !DILocation(line: 164, column: 22, scope: !5119)
!5126 = distinct !{!5126, !5121, !5127}
!5127 = !DILocation(line: 166, column: 2, scope: !5120)
!5128 = !DILocation(line: 171, column: 1, scope: !5110)
!5129 = distinct !DISubprogram(name: "printk", scope: !408, file: !408, line: 203, type: !5130, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5132)
!5130 = !DISubroutineType(types: !5131)
!5131 = !{null, !140, null}
!5132 = !{!5133, !5134}
!5133 = !DILocalVariable(name: "fmt", arg: 1, scope: !5129, file: !408, line: 203, type: !140)
!5134 = !DILocalVariable(name: "ap", scope: !5129, file: !408, line: 205, type: !5067)
!5135 = !DILocation(line: 0, scope: !5129)
!5136 = !DILocation(line: 205, column: 2, scope: !5129)
!5137 = !DILocation(line: 205, column: 10, scope: !5129)
!5138 = !DILocation(line: 207, column: 2, scope: !5129)
!5139 = !DILocation(line: 209, column: 2, scope: !5129)
!5140 = !DILocation(line: 211, column: 2, scope: !5129)
!5141 = !DILocation(line: 212, column: 1, scope: !5129)
!5142 = distinct !DISubprogram(name: "snprintk", scope: !408, file: !408, line: 239, type: !5143, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5145)
!5143 = !DISubroutineType(types: !5144)
!5144 = !{!125, !393, !272, !140, null}
!5145 = !{!5146, !5147, !5148, !5149, !5150}
!5146 = !DILocalVariable(name: "str", arg: 1, scope: !5142, file: !408, line: 239, type: !393)
!5147 = !DILocalVariable(name: "size", arg: 2, scope: !5142, file: !408, line: 239, type: !272)
!5148 = !DILocalVariable(name: "fmt", arg: 3, scope: !5142, file: !408, line: 239, type: !140)
!5149 = !DILocalVariable(name: "ap", scope: !5142, file: !408, line: 241, type: !5067)
!5150 = !DILocalVariable(name: "ret", scope: !5142, file: !408, line: 242, type: !125)
!5151 = !DILocation(line: 0, scope: !5142)
!5152 = !DILocation(line: 241, column: 2, scope: !5142)
!5153 = !DILocation(line: 241, column: 10, scope: !5142)
!5154 = !DILocation(line: 244, column: 2, scope: !5142)
!5155 = !DILocation(line: 245, column: 8, scope: !5142)
!5156 = !DILocation(line: 246, column: 2, scope: !5142)
!5157 = !DILocation(line: 249, column: 1, scope: !5142)
!5158 = !DILocation(line: 248, column: 2, scope: !5142)
!5159 = distinct !DISubprogram(name: "vsnprintk", scope: !408, file: !408, line: 251, type: !5160, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5162)
!5160 = !DISubroutineType(types: !5161)
!5161 = !{!125, !393, !272, !140, !5067}
!5162 = !{!5163, !5164, !5165, !5166, !5167}
!5163 = !DILocalVariable(name: "str", arg: 1, scope: !5159, file: !408, line: 251, type: !393)
!5164 = !DILocalVariable(name: "size", arg: 2, scope: !5159, file: !408, line: 251, type: !272)
!5165 = !DILocalVariable(name: "fmt", arg: 3, scope: !5159, file: !408, line: 251, type: !140)
!5166 = !DILocalVariable(name: "ap", arg: 4, scope: !5159, file: !408, line: 251, type: !5067)
!5167 = !DILocalVariable(name: "ctx", scope: !5159, file: !408, line: 253, type: !5168)
!5168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !408, line: 217, size: 96, elements: !5169)
!5169 = !{!5170, !5171, !5172}
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5168, file: !408, line: 218, baseType: !393, size: 32)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5168, file: !408, line: 219, baseType: !125, size: 32, offset: 32)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5168, file: !408, line: 220, baseType: !125, size: 32, offset: 64)
!5173 = !DILocation(line: 0, scope: !5159)
!5174 = !DILocation(line: 253, column: 2, scope: !5159)
!5175 = !DILocation(line: 253, column: 21, scope: !5159)
!5176 = !DILocation(line: 253, column: 27, scope: !5159)
!5177 = !DILocation(line: 255, column: 2, scope: !5159)
!5178 = !DILocation(line: 257, column: 10, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5159, file: !408, line: 257, column: 6)
!5180 = !DILocation(line: 257, column: 22, scope: !5179)
!5181 = !DILocation(line: 257, column: 16, scope: !5179)
!5182 = !DILocation(line: 257, column: 6, scope: !5159)
!5183 = !DILocation(line: 258, column: 3, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5179, file: !408, line: 257, column: 27)
!5185 = !DILocation(line: 258, column: 18, scope: !5184)
!5186 = !DILocation(line: 259, column: 2, scope: !5184)
!5187 = !DILocation(line: 262, column: 1, scope: !5159)
!5188 = !DILocation(line: 261, column: 2, scope: !5159)
!5189 = distinct !DISubprogram(name: "str_out", scope: !408, file: !408, line: 223, type: !5190, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5193)
!5190 = !DISubroutineType(types: !5191)
!5191 = !{!125, !125, !5192}
!5192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5168, size: 32)
!5193 = !{!5194, !5195}
!5194 = !DILocalVariable(name: "c", arg: 1, scope: !5189, file: !408, line: 223, type: !125)
!5195 = !DILocalVariable(name: "ctx", arg: 2, scope: !5189, file: !408, line: 223, type: !5192)
!5196 = !DILocation(line: 0, scope: !5189)
!5197 = !DILocation(line: 225, column: 11, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5189, file: !408, line: 225, column: 6)
!5199 = !DILocation(line: 225, column: 15, scope: !5198)
!5200 = !DILocation(line: 0, scope: !5198)
!5201 = !DILocation(line: 225, column: 23, scope: !5198)
!5202 = !DILocation(line: 225, column: 45, scope: !5198)
!5203 = !DILocation(line: 225, column: 37, scope: !5198)
!5204 = !DILocation(line: 225, column: 6, scope: !5189)
!5205 = !DILocation(line: 226, column: 8, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5198, file: !408, line: 225, column: 50)
!5207 = !DILocation(line: 226, column: 13, scope: !5206)
!5208 = !DILocation(line: 227, column: 3, scope: !5206)
!5209 = !DILocation(line: 230, column: 29, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5189, file: !408, line: 230, column: 6)
!5211 = !DILocation(line: 230, column: 17, scope: !5210)
!5212 = !DILocation(line: 230, column: 6, scope: !5189)
!5213 = !DILocation(line: 231, column: 22, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5210, file: !408, line: 230, column: 34)
!5215 = !DILocation(line: 231, column: 3, scope: !5214)
!5216 = !DILocation(line: 231, column: 26, scope: !5214)
!5217 = !DILocation(line: 232, column: 2, scope: !5214)
!5218 = !DILocation(line: 233, column: 28, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5210, file: !408, line: 232, column: 9)
!5220 = !DILocation(line: 233, column: 22, scope: !5219)
!5221 = !DILocation(line: 233, column: 3, scope: !5219)
!5222 = !DILocation(line: 233, column: 26, scope: !5219)
!5223 = !DILocation(line: 237, column: 1, scope: !5189)
!5224 = distinct !DISubprogram(name: "z_thread_entry", scope: !5225, file: !5225, line: 30, type: !5226, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !5233)
!5225 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5226 = !DISubroutineType(types: !5227)
!5227 = !{null, !5228, !124, !124, !124}
!5228 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !5229, line: 46, baseType: !5230)
!5229 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5231, size: 32)
!5231 = !DISubroutineType(types: !5232)
!5232 = !{null, !124, !124, !124}
!5233 = !{!5234, !5235, !5236, !5237}
!5234 = !DILocalVariable(name: "entry", arg: 1, scope: !5224, file: !5225, line: 30, type: !5228)
!5235 = !DILocalVariable(name: "p1", arg: 2, scope: !5224, file: !5225, line: 31, type: !124)
!5236 = !DILocalVariable(name: "p2", arg: 3, scope: !5224, file: !5225, line: 31, type: !124)
!5237 = !DILocalVariable(name: "p3", arg: 4, scope: !5224, file: !5225, line: 31, type: !124)
!5238 = !DILocation(line: 0, scope: !5224)
!5239 = !DILocation(line: 36, column: 2, scope: !5224)
!5240 = !DILocation(line: 38, column: 17, scope: !5224)
!5241 = !DILocation(line: 38, column: 2, scope: !5224)
!5242 = !DILocation(line: 45, column: 2, scope: !5224)
!5243 = distinct !DISubprogram(name: "k_current_get", scope: !624, file: !624, line: 530, type: !5244, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !639)
!5244 = !DISubroutineType(types: !5245)
!5245 = !{!5246}
!5246 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !5247)
!5247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5248, size: 32)
!5248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !5249)
!5249 = !{!5250, !5308, !5320, !5321, !5322, !5323, !5329, !5342}
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5248, file: !531, line: 247, baseType: !5251, size: 384)
!5251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !5252)
!5252 = !{!5253, !5277, !5284, !5285, !5286, !5295, !5296, !5297}
!5253 = !DIDerivedType(tag: DW_TAG_member, scope: !5251, file: !531, line: 60, baseType: !5254, size: 64)
!5254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5251, file: !531, line: 60, size: 64, elements: !5255)
!5255 = !{!5256, !5271}
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5254, file: !531, line: 61, baseType: !5257, size: 64)
!5257 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !5258)
!5258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !5259)
!5259 = !{!5260, !5266}
!5260 = !DIDerivedType(tag: DW_TAG_member, scope: !5258, file: !541, line: 38, baseType: !5261, size: 32)
!5261 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5258, file: !541, line: 38, size: 32, elements: !5262)
!5262 = !{!5263, !5265}
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5261, file: !541, line: 39, baseType: !5264, size: 32)
!5264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5258, size: 32)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5261, file: !541, line: 40, baseType: !5264, size: 32)
!5266 = !DIDerivedType(tag: DW_TAG_member, scope: !5258, file: !541, line: 42, baseType: !5267, size: 32, offset: 32)
!5267 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5258, file: !541, line: 42, size: 32, elements: !5268)
!5268 = !{!5269, !5270}
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5267, file: !541, line: 43, baseType: !5264, size: 32)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5267, file: !541, line: 44, baseType: !5264, size: 32)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5254, file: !531, line: 62, baseType: !5272, size: 64)
!5272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !5273)
!5273 = !{!5274}
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5272, file: !557, line: 50, baseType: !5275, size: 64)
!5275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5276, size: 64, elements: !562)
!5276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5272, size: 32)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5251, file: !531, line: 68, baseType: !5278, size: 32, offset: 64)
!5278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5279, size: 32)
!5279 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !5280)
!5280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !5281)
!5281 = !{!5282}
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5280, file: !567, line: 232, baseType: !5283, size: 64)
!5283 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !5258)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5251, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5251, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!5286 = !DIDerivedType(tag: DW_TAG_member, scope: !5251, file: !531, line: 90, baseType: !5287, size: 16, offset: 112)
!5287 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5251, file: !531, line: 90, size: 16, elements: !5288)
!5288 = !{!5289, !5294}
!5289 = !DIDerivedType(tag: DW_TAG_member, scope: !5287, file: !531, line: 91, baseType: !5290, size: 16)
!5290 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5287, file: !531, line: 91, size: 16, elements: !5291)
!5291 = !{!5292, !5293}
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5290, file: !531, line: 96, baseType: !581, size: 8)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5290, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5287, file: !531, line: 100, baseType: !227, size: 16)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5251, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5251, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5251, file: !531, line: 131, baseType: !5298, size: 192, offset: 192)
!5298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !5299)
!5299 = !{!5300, !5301, !5307}
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5298, file: !567, line: 245, baseType: !5257, size: 64)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5298, file: !567, line: 246, baseType: !5302, size: 32, offset: 64)
!5302 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !5303)
!5303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5304, size: 32)
!5304 = !DISubroutineType(types: !5305)
!5305 = !{null, !5306}
!5306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5298, size: 32)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5298, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5248, file: !531, line: 250, baseType: !5309, size: 288, offset: 384)
!5309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !5310)
!5310 = !{!5311, !5312, !5313, !5314, !5315, !5316, !5317, !5318, !5319}
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5309, file: !601, line: 26, baseType: !208, size: 32)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5309, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5309, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5309, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5309, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5309, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5309, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5309, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5309, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5248, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5248, file: !531, line: 256, baseType: !5279, size: 64, offset: 704)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5248, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5248, file: !531, line: 300, baseType: !5324, size: 96, offset: 800)
!5324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !5325)
!5325 = !{!5326, !5327, !5328}
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5324, file: !531, line: 153, baseType: !22, size: 32)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5324, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5324, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5248, file: !531, line: 325, baseType: !5330, size: 32, offset: 896)
!5330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5331, size: 32)
!5331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !5332)
!5332 = !{!5333, !5339, !5340}
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5331, file: !624, line: 5074, baseType: !5334, size: 96)
!5334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !5335)
!5335 = !{!5336, !5337, !5338}
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5334, file: !628, line: 57, baseType: !631, size: 32)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5334, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5334, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5331, file: !624, line: 5075, baseType: !5279, size: 64, offset: 96)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5331, file: !624, line: 5076, baseType: !5341, offset: 160)
!5341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5248, file: !531, line: 343, baseType: !5343, size: 64, offset: 928)
!5343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !5344)
!5344 = !{!5345, !5346}
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5343, file: !601, line: 63, baseType: !208, size: 32)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5343, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!5347 = !DILocation(line: 535, column: 9, scope: !5243)
!5348 = !DILocation(line: 535, column: 2, scope: !5243)
!5349 = distinct !DISubprogram(name: "k_thread_abort", scope: !5350, file: !5350, line: 188, type: !5351, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !5353)
!5350 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!5351 = !DISubroutineType(types: !5352)
!5352 = !{null, !5246}
!5353 = !{!5354}
!5354 = !DILocalVariable(name: "thread", arg: 1, scope: !5349, file: !5350, line: 188, type: !5246)
!5355 = !DILocation(line: 0, scope: !5349)
!5356 = !DILocation(line: 197, column: 2, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5349, file: !5350, line: 197, column: 2)
!5358 = !{i64 2154062761}
!5359 = !DILocation(line: 198, column: 2, scope: !5349)
!5360 = !DILocation(line: 199, column: 1, scope: !5349)
!5361 = distinct !DISubprogram(name: "z_current_get", scope: !5350, file: !5350, line: 173, type: !5244, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !639)
!5362 = !DILocation(line: 180, column: 2, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5361, file: !5350, line: 180, column: 2)
!5364 = !{i64 2154062693}
!5365 = !DILocation(line: 181, column: 9, scope: !5361)
!5366 = !DILocation(line: 181, column: 2, scope: !5361)
!5367 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2669, file: !2669, line: 1338, type: !5368, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2665, retainedNodes: !5376)
!5368 = !DISubroutineType(types: !5369)
!5369 = !{!125, !4558, !124, !140, !5370, !208}
!5370 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4198, line: 99, baseType: !5371)
!5371 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4198, line: 40, baseType: !5372)
!5372 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2669, baseType: !5373)
!5373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5374)
!5374 = !{!5375}
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5373, file: !2669, baseType: !124, size: 32)
!5376 = !{!5377, !5378, !5379, !5380, !5381, !5382, !5386, !5387, !5388, !5390, !5395, !5438, !5441, !5444, !5445, !5446, !5447, !5448, !5449, !5450, !5453, !5454, !5455, !5459, !5462, !5464, !5467, !5468, !5469, !5474, !5480, !5483, !5487, !5493, !5497, !5500, !5502, !5505}
!5377 = !DILocalVariable(name: "out", arg: 1, scope: !5367, file: !2669, line: 1338, type: !4558)
!5378 = !DILocalVariable(name: "ctx", arg: 2, scope: !5367, file: !2669, line: 1338, type: !124)
!5379 = !DILocalVariable(name: "fp", arg: 3, scope: !5367, file: !2669, line: 1338, type: !140)
!5380 = !DILocalVariable(name: "ap", arg: 4, scope: !5367, file: !2669, line: 1339, type: !5370)
!5381 = !DILocalVariable(name: "flags", arg: 5, scope: !5367, file: !2669, line: 1339, type: !208)
!5382 = !DILocalVariable(name: "buf", scope: !5367, file: !2669, line: 1341, type: !5383)
!5383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 176, elements: !5384)
!5384 = !{!5385}
!5385 = !DISubrange(count: 22)
!5386 = !DILocalVariable(name: "count", scope: !5367, file: !2669, line: 1342, type: !272)
!5387 = !DILocalVariable(name: "sint", scope: !5367, file: !2669, line: 1343, type: !2688)
!5388 = !DILocalVariable(name: "tagged_ap", scope: !5367, file: !2669, line: 1345, type: !5389)
!5389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!5390 = !DILocalVariable(name: "rc", scope: !5391, file: !2669, line: 1377, type: !125)
!5391 = distinct !DILexicalBlock(scope: !5392, file: !2669, line: 1377, column: 4)
!5392 = distinct !DILexicalBlock(scope: !5393, file: !2669, line: 1376, column: 19)
!5393 = distinct !DILexicalBlock(scope: !5394, file: !2669, line: 1376, column: 7)
!5394 = distinct !DILexicalBlock(scope: !5367, file: !2669, line: 1375, column: 19)
!5395 = !DILocalVariable(name: "state", scope: !5394, file: !2669, line: 1395, type: !5396)
!5396 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5367, file: !2669, line: 1392, size: 192, elements: !5397)
!5397 = !{!5398, !5406}
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5396, file: !2669, line: 1393, baseType: !5399, size: 64)
!5399 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2669, line: 166, size: 64, elements: !5400)
!5400 = !{!5401, !5402, !5403, !5404, !5405}
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5399, file: !2669, line: 168, baseType: !2688, size: 64)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5399, file: !2669, line: 171, baseType: !2691, size: 64)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5399, file: !2669, line: 174, baseType: !385, size: 64)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5399, file: !2669, line: 177, baseType: !383, size: 64)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5399, file: !2669, line: 180, baseType: !124, size: 32)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5396, file: !2669, line: 1394, baseType: !5407, size: 96, offset: 64)
!5407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2669, line: 189, size: 96, elements: !5408)
!5408 = !{!5409, !5410, !5411, !5412, !5413, !5414, !5415, !5416, !5417, !5418, !5419, !5420, !5421, !5422, !5423, !5424, !5425, !5426, !5427, !5428, !5433}
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5407, file: !2669, line: 191, baseType: !153, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5407, file: !2669, line: 194, baseType: !153, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5407, file: !2669, line: 197, baseType: !153, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5407, file: !2669, line: 200, baseType: !153, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5407, file: !2669, line: 203, baseType: !153, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5407, file: !2669, line: 206, baseType: !153, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5407, file: !2669, line: 209, baseType: !153, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5407, file: !2669, line: 212, baseType: !153, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5407, file: !2669, line: 219, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5407, file: !2669, line: 222, baseType: !153, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5407, file: !2669, line: 229, baseType: !153, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5407, file: !2669, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5407, file: !2669, line: 238, baseType: !153, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5407, file: !2669, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5407, file: !2669, line: 244, baseType: !153, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5407, file: !2669, line: 247, baseType: !153, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5407, file: !2669, line: 252, baseType: !153, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5407, file: !2669, line: 257, baseType: !153, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5407, file: !2669, line: 260, baseType: !151, size: 8, offset: 24)
!5428 = !DIDerivedType(tag: DW_TAG_member, scope: !5407, file: !2669, line: 262, baseType: !5429, size: 32, offset: 32)
!5429 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5407, file: !2669, line: 262, size: 32, elements: !5430)
!5430 = !{!5431, !5432}
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5429, file: !2669, line: 267, baseType: !125, size: 32)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5429, file: !2669, line: 289, baseType: !125, size: 32)
!5433 = !DIDerivedType(tag: DW_TAG_member, scope: !5407, file: !2669, line: 292, baseType: !5434, size: 32, offset: 64)
!5434 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5407, file: !2669, line: 292, size: 32, elements: !5435)
!5435 = !{!5436, !5437}
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5434, file: !2669, line: 297, baseType: !125, size: 32)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5434, file: !2669, line: 306, baseType: !125, size: 32)
!5438 = !DILocalVariable(name: "conv", scope: !5394, file: !2669, line: 1400, type: !5439)
!5439 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5440)
!5440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5407, size: 32)
!5441 = !DILocalVariable(name: "value", scope: !5394, file: !2669, line: 1401, type: !5442)
!5442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5443)
!5443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5399, size: 32)
!5444 = !DILocalVariable(name: "sp", scope: !5394, file: !2669, line: 1402, type: !140)
!5445 = !DILocalVariable(name: "width", scope: !5394, file: !2669, line: 1403, type: !125)
!5446 = !DILocalVariable(name: "precision", scope: !5394, file: !2669, line: 1404, type: !125)
!5447 = !DILocalVariable(name: "bps", scope: !5394, file: !2669, line: 1405, type: !140)
!5448 = !DILocalVariable(name: "bpe", scope: !5394, file: !2669, line: 1406, type: !140)
!5449 = !DILocalVariable(name: "sign", scope: !5394, file: !2669, line: 1407, type: !142)
!5450 = !DILocalVariable(name: "arg", scope: !5451, file: !2669, line: 1432, type: !125)
!5451 = distinct !DILexicalBlock(scope: !5452, file: !2669, line: 1431, column: 24)
!5452 = distinct !DILexicalBlock(scope: !5394, file: !2669, line: 1431, column: 7)
!5453 = !DILocalVariable(name: "specifier_cat", scope: !5394, file: !2669, line: 1468, type: !2668)
!5454 = !DILocalVariable(name: "length_mod", scope: !5394, file: !2669, line: 1470, type: !2676)
!5455 = !DILocalVariable(name: "rc", scope: !5456, file: !2669, line: 1575, type: !125)
!5456 = distinct !DILexicalBlock(scope: !5457, file: !2669, line: 1575, column: 4)
!5457 = distinct !DILexicalBlock(scope: !5458, file: !2669, line: 1574, column: 43)
!5458 = distinct !DILexicalBlock(scope: !5394, file: !2669, line: 1574, column: 7)
!5459 = !DILocalVariable(name: "rc", scope: !5460, file: !2669, line: 1584, type: !125)
!5460 = distinct !DILexicalBlock(scope: !5461, file: !2669, line: 1584, column: 4)
!5461 = distinct !DILexicalBlock(scope: !5394, file: !2669, line: 1582, column: 28)
!5462 = !DILocalVariable(name: "len", scope: !5463, file: !2669, line: 1589, type: !272)
!5463 = distinct !DILexicalBlock(scope: !5461, file: !2669, line: 1586, column: 13)
!5464 = !DILocalVariable(name: "len", scope: !5465, file: !2669, line: 1641, type: !272)
!5465 = distinct !DILexicalBlock(scope: !5466, file: !2669, line: 1640, column: 24)
!5466 = distinct !DILexicalBlock(scope: !5461, file: !2669, line: 1640, column: 8)
!5467 = !DILocalVariable(name: "nj_len", scope: !5394, file: !2669, line: 1722, type: !272)
!5468 = !DILocalVariable(name: "pad_len", scope: !5394, file: !2669, line: 1723, type: !125)
!5469 = !DILocalVariable(name: "pad", scope: !5470, file: !2669, line: 1751, type: !142)
!5470 = distinct !DILexicalBlock(scope: !5471, file: !2669, line: 1750, column: 26)
!5471 = distinct !DILexicalBlock(scope: !5472, file: !2669, line: 1750, column: 8)
!5472 = distinct !DILexicalBlock(scope: !5473, file: !2669, line: 1747, column: 18)
!5473 = distinct !DILexicalBlock(scope: !5394, file: !2669, line: 1747, column: 7)
!5474 = !DILocalVariable(name: "rc", scope: !5475, file: !2669, line: 1758, type: !125)
!5475 = distinct !DILexicalBlock(scope: !5476, file: !2669, line: 1758, column: 7)
!5476 = distinct !DILexicalBlock(scope: !5477, file: !2669, line: 1757, column: 21)
!5477 = distinct !DILexicalBlock(scope: !5478, file: !2669, line: 1757, column: 10)
!5478 = distinct !DILexicalBlock(scope: !5479, file: !2669, line: 1756, column: 26)
!5479 = distinct !DILexicalBlock(scope: !5470, file: !2669, line: 1756, column: 9)
!5480 = !DILocalVariable(name: "rc", scope: !5481, file: !2669, line: 1765, type: !125)
!5481 = distinct !DILexicalBlock(scope: !5482, file: !2669, line: 1765, column: 6)
!5482 = distinct !DILexicalBlock(scope: !5470, file: !2669, line: 1764, column: 25)
!5483 = !DILocalVariable(name: "rc", scope: !5484, file: !2669, line: 1774, type: !125)
!5484 = distinct !DILexicalBlock(scope: !5485, file: !2669, line: 1774, column: 4)
!5485 = distinct !DILexicalBlock(scope: !5486, file: !2669, line: 1773, column: 18)
!5486 = distinct !DILexicalBlock(scope: !5394, file: !2669, line: 1773, column: 7)
!5487 = !DILocalVariable(name: "rc", scope: !5488, file: !2669, line: 1819, type: !125)
!5488 = distinct !DILexicalBlock(scope: !5489, file: !2669, line: 1819, column: 5)
!5489 = distinct !DILexicalBlock(scope: !5490, file: !2669, line: 1818, column: 44)
!5490 = distinct !DILexicalBlock(scope: !5491, file: !2669, line: 1818, column: 8)
!5491 = distinct !DILexicalBlock(scope: !5492, file: !2669, line: 1817, column: 10)
!5492 = distinct !DILexicalBlock(scope: !5394, file: !2669, line: 1777, column: 7)
!5493 = !DILocalVariable(name: "rc", scope: !5494, file: !2669, line: 1823, type: !125)
!5494 = distinct !DILexicalBlock(scope: !5495, file: !2669, line: 1823, column: 5)
!5495 = distinct !DILexicalBlock(scope: !5496, file: !2669, line: 1822, column: 26)
!5496 = distinct !DILexicalBlock(scope: !5491, file: !2669, line: 1822, column: 8)
!5497 = !DILocalVariable(name: "rc", scope: !5498, file: !2669, line: 1828, type: !125)
!5498 = distinct !DILexicalBlock(scope: !5499, file: !2669, line: 1828, column: 5)
!5499 = distinct !DILexicalBlock(scope: !5491, file: !2669, line: 1827, column: 26)
!5500 = !DILocalVariable(name: "rc", scope: !5501, file: !2669, line: 1831, type: !125)
!5501 = distinct !DILexicalBlock(scope: !5491, file: !2669, line: 1831, column: 4)
!5502 = !DILocalVariable(name: "rc", scope: !5503, file: !2669, line: 1836, type: !125)
!5503 = distinct !DILexicalBlock(scope: !5504, file: !2669, line: 1836, column: 4)
!5504 = distinct !DILexicalBlock(scope: !5394, file: !2669, line: 1835, column: 21)
!5505 = !DILabel(scope: !5461, name: "prec_int_pad0", file: !2669, line: 1634)
!5506 = !DILocation(line: 0, scope: !5367)
!5507 = !DILocation(line: 1341, column: 2, scope: !5367)
!5508 = !DILocation(line: 1341, column: 7, scope: !5367)
!5509 = !DILocation(line: 1375, column: 2, scope: !5367)
!5510 = !DILocation(line: 1342, column: 9, scope: !5367)
!5511 = !DILocation(line: 1375, column: 9, scope: !5367)
!5512 = !DILocation(line: 1377, column: 4, scope: !5391)
!5513 = !DILocation(line: 0, scope: !5391)
!5514 = !DILocation(line: 1377, column: 4, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5391, file: !2669, line: 1377, column: 4)
!5516 = distinct !{!5516, !5509, !5517}
!5517 = !DILocation(line: 1839, column: 2, scope: !5367)
!5518 = !DILocation(line: 1392, column: 3, scope: !5394)
!5519 = !DILocation(line: 1395, column: 5, scope: !5394)
!5520 = !DILocation(line: 0, scope: !5394)
!5521 = !DILocation(line: 1409, column: 8, scope: !5394)
!5522 = !DILocation(line: 1414, column: 13, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5394, file: !2669, line: 1414, column: 7)
!5524 = !DILocation(line: 1414, column: 7, scope: !5394)
!5525 = !DILocation(line: 1415, column: 12, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5523, file: !2669, line: 1414, column: 25)
!5527 = !DILocation(line: 1417, column: 14, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5526, file: !2669, line: 1417, column: 8)
!5529 = !DILocation(line: 1417, column: 8, scope: !5526)
!5530 = !DILocation(line: 1418, column: 21, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5528, file: !2669, line: 1417, column: 19)
!5532 = !DILocation(line: 1419, column: 13, scope: !5531)
!5533 = !DILocation(line: 1420, column: 4, scope: !5531)
!5534 = !DILocation(line: 1421, column: 20, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5523, file: !2669, line: 1421, column: 14)
!5536 = !DILocation(line: 1421, column: 14, scope: !5523)
!5537 = !DILocation(line: 1431, column: 13, scope: !5452)
!5538 = !DILocation(line: 1431, column: 7, scope: !5394)
!5539 = !DILocation(line: 1432, column: 14, scope: !5451)
!5540 = !DILocation(line: 0, scope: !5451)
!5541 = !DILocation(line: 1434, column: 12, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5451, file: !2669, line: 1434, column: 8)
!5543 = !DILocation(line: 1434, column: 8, scope: !5451)
!5544 = !DILocation(line: 1435, column: 24, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5542, file: !2669, line: 1434, column: 17)
!5546 = !DILocation(line: 1436, column: 4, scope: !5545)
!5547 = !DILocation(line: 1439, column: 20, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5452, file: !2669, line: 1439, column: 14)
!5549 = !DILocation(line: 1439, column: 14, scope: !5452)
!5550 = !DILocation(line: 1469, column: 37, scope: !5394)
!5551 = !DILocation(line: 1448, column: 20, scope: !5394)
!5552 = !DILocation(line: 1449, column: 22, scope: !5394)
!5553 = !DILocation(line: 1471, column: 34, scope: !5394)
!5554 = !DILocation(line: 1478, column: 7, scope: !5394)
!5555 = !DILocation(line: 1479, column: 4, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5557, file: !2669, line: 1478, column: 40)
!5557 = distinct !DILexicalBlock(scope: !5394, file: !2669, line: 1478, column: 7)
!5558 = !DILocation(line: 1484, column: 19, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5556, file: !2669, line: 1479, column: 24)
!5560 = !DILocation(line: 1484, column: 17, scope: !5559)
!5561 = !DILocation(line: 1485, column: 5, scope: !5559)
!5562 = !DILocation(line: 1492, column: 20, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5564, file: !2669, line: 1491, column: 12)
!5564 = distinct !DILexicalBlock(scope: !5559, file: !2669, line: 1487, column: 9)
!5565 = !DILocation(line: 1492, column: 18, scope: !5563)
!5566 = !DILocation(line: 1494, column: 5, scope: !5559)
!5567 = !DILocation(line: 1497, column: 23, scope: !5559)
!5568 = !DILocation(line: 1496, column: 17, scope: !5559)
!5569 = !DILocation(line: 1498, column: 5, scope: !5559)
!5570 = !DILocation(line: 1501, column: 23, scope: !5559)
!5571 = !DILocation(line: 1500, column: 17, scope: !5559)
!5572 = !DILocation(line: 1502, column: 5, scope: !5559)
!5573 = !DILocation(line: 1513, column: 23, scope: !5559)
!5574 = !DILocation(line: 1513, column: 6, scope: !5559)
!5575 = !DILocation(line: 1512, column: 17, scope: !5559)
!5576 = !DILocation(line: 1514, column: 5, scope: !5559)
!5577 = !DILocation(line: 0, scope: !5559)
!5578 = !DILocation(line: 1516, column: 8, scope: !5556)
!5579 = !DILocation(line: 1517, column: 19, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5581, file: !2669, line: 1516, column: 33)
!5581 = distinct !DILexicalBlock(scope: !5556, file: !2669, line: 1516, column: 8)
!5582 = !DILocation(line: 1517, column: 17, scope: !5580)
!5583 = !DILocation(line: 1518, column: 4, scope: !5580)
!5584 = !DILocation(line: 1519, column: 19, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5586, file: !2669, line: 1518, column: 39)
!5586 = distinct !DILexicalBlock(scope: !5581, file: !2669, line: 1518, column: 15)
!5587 = !DILocation(line: 1519, column: 17, scope: !5585)
!5588 = !DILocation(line: 1520, column: 4, scope: !5585)
!5589 = !DILocation(line: 1522, column: 4, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5591, file: !2669, line: 1521, column: 47)
!5591 = distinct !DILexicalBlock(scope: !5557, file: !2669, line: 1521, column: 14)
!5592 = !DILocation(line: 1527, column: 19, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5590, file: !2669, line: 1522, column: 24)
!5594 = !DILocation(line: 1527, column: 17, scope: !5593)
!5595 = !DILocation(line: 1528, column: 5, scope: !5593)
!5596 = !DILocation(line: 0, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5593, file: !2669, line: 1530, column: 9)
!5598 = !DILocation(line: 1540, column: 23, scope: !5593)
!5599 = !DILocation(line: 1539, column: 17, scope: !5593)
!5600 = !DILocation(line: 1542, column: 5, scope: !5593)
!5601 = !DILocation(line: 1545, column: 23, scope: !5593)
!5602 = !DILocation(line: 1544, column: 17, scope: !5593)
!5603 = !DILocation(line: 1547, column: 5, scope: !5593)
!5604 = !DILocation(line: 1551, column: 23, scope: !5593)
!5605 = !DILocation(line: 1551, column: 6, scope: !5593)
!5606 = !DILocation(line: 1550, column: 17, scope: !5593)
!5607 = !DILocation(line: 1552, column: 5, scope: !5593)
!5608 = !DILocation(line: 0, scope: !5593)
!5609 = !DILocation(line: 1554, column: 8, scope: !5590)
!5610 = !DILocation(line: 1555, column: 19, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5612, file: !2669, line: 1554, column: 33)
!5612 = distinct !DILexicalBlock(scope: !5590, file: !2669, line: 1554, column: 8)
!5613 = !DILocation(line: 1555, column: 17, scope: !5611)
!5614 = !DILocation(line: 1556, column: 4, scope: !5611)
!5615 = !DILocation(line: 1557, column: 19, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5617, file: !2669, line: 1556, column: 39)
!5617 = distinct !DILexicalBlock(scope: !5612, file: !2669, line: 1556, column: 15)
!5618 = !DILocation(line: 1557, column: 17, scope: !5616)
!5619 = !DILocation(line: 1558, column: 4, scope: !5616)
!5620 = !DILocation(line: 0, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5622, file: !2669, line: 1560, column: 8)
!5622 = distinct !DILexicalBlock(scope: !5623, file: !2669, line: 1559, column: 45)
!5623 = distinct !DILexicalBlock(scope: !5591, file: !2669, line: 1559, column: 14)
!5624 = !DILocation(line: 1566, column: 17, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5626, file: !2669, line: 1565, column: 46)
!5626 = distinct !DILexicalBlock(scope: !5623, file: !2669, line: 1565, column: 14)
!5627 = !DILocation(line: 1566, column: 15, scope: !5625)
!5628 = !DILocation(line: 1567, column: 3, scope: !5625)
!5629 = !DILocation(line: 1574, column: 21, scope: !5458)
!5630 = !DILocation(line: 1575, column: 4, scope: !5456)
!5631 = !DILocation(line: 0, scope: !5456)
!5632 = !DILocation(line: 1575, column: 4, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5456, file: !2669, line: 1575, column: 4)
!5634 = !DILocation(line: 1582, column: 17, scope: !5394)
!5635 = !DILocation(line: 1582, column: 3, scope: !5394)
!5636 = !DILocation(line: 1584, column: 4, scope: !5460)
!5637 = !DILocation(line: 0, scope: !5460)
!5638 = !DILocation(line: 1584, column: 4, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5460, file: !2669, line: 1584, column: 4)
!5640 = !DILocation(line: 1587, column: 31, scope: !5463)
!5641 = !DILocation(line: 1591, column: 18, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5463, file: !2669, line: 1591, column: 8)
!5643 = !DILocation(line: 1591, column: 8, scope: !5463)
!5644 = !DILocation(line: 1592, column: 11, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5642, file: !2669, line: 1591, column: 24)
!5646 = !DILocation(line: 0, scope: !5463)
!5647 = !DILocation(line: 1593, column: 4, scope: !5645)
!5648 = !DILocation(line: 1594, column: 11, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5642, file: !2669, line: 1593, column: 11)
!5650 = !DILocation(line: 1604, column: 51, scope: !5461)
!5651 = !DILocation(line: 1604, column: 13, scope: !5461)
!5652 = !DILocation(line: 1604, column: 11, scope: !5461)
!5653 = !DILocation(line: 1606, column: 4, scope: !5461)
!5654 = !DILocation(line: 1609, column: 14, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5461, file: !2669, line: 1609, column: 8)
!5656 = !DILocation(line: 1609, column: 8, scope: !5461)
!5657 = !DILocation(line: 1619, column: 18, scope: !5461)
!5658 = !DILocation(line: 1620, column: 13, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5461, file: !2669, line: 1620, column: 8)
!5660 = !DILocation(line: 1620, column: 8, scope: !5461)
!5661 = !DILocation(line: 1622, column: 36, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5659, file: !2669, line: 1620, column: 18)
!5663 = !DILocation(line: 1622, column: 17, scope: !5662)
!5664 = !DILocation(line: 1623, column: 4, scope: !5662)
!5665 = !DILocation(line: 1632, column: 29, scope: !5461)
!5666 = !DILocation(line: 1632, column: 10, scope: !5461)
!5667 = !DILocation(line: 1632, column: 4, scope: !5461)
!5668 = !DILocation(line: 1407, column: 8, scope: !5394)
!5669 = !DILocation(line: 0, scope: !5461)
!5670 = !DILocation(line: 1634, column: 3, scope: !5461)
!5671 = !DILocation(line: 1640, column: 18, scope: !5466)
!5672 = !DILocation(line: 1640, column: 8, scope: !5461)
!5673 = !DILocation(line: 1729, column: 13, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5394, file: !2669, line: 1729, column: 7)
!5675 = !DILocation(line: 1641, column: 22, scope: !5465)
!5676 = !DILocation(line: 0, scope: !5465)
!5677 = !DILocation(line: 1646, column: 21, scope: !5465)
!5678 = !DILocation(line: 1649, column: 13, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5465, file: !2669, line: 1649, column: 9)
!5680 = !DILocation(line: 1649, column: 9, scope: !5465)
!5681 = !DILocation(line: 1650, column: 35, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5679, file: !2669, line: 1649, column: 34)
!5683 = !DILocation(line: 1650, column: 23, scope: !5682)
!5684 = !DILocation(line: 1651, column: 5, scope: !5682)
!5685 = !DILocation(line: 1660, column: 15, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5461, file: !2669, line: 1660, column: 8)
!5687 = !DILocation(line: 1660, column: 19, scope: !5686)
!5688 = !DILocation(line: 1660, column: 8, scope: !5461)
!5689 = !DILocation(line: 1661, column: 23, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5686, file: !2669, line: 1660, column: 28)
!5691 = !DILocation(line: 1661, column: 11, scope: !5690)
!5692 = !DILocation(line: 1665, column: 22, scope: !5690)
!5693 = !DILocation(line: 1666, column: 21, scope: !5690)
!5694 = !DILocation(line: 1668, column: 5, scope: !5690)
!5695 = !DILocation(line: 1677, column: 30, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5697, file: !2669, line: 1676, column: 49)
!5697 = distinct !DILexicalBlock(scope: !5461, file: !2669, line: 1676, column: 8)
!5698 = !DILocation(line: 1677, column: 5, scope: !5696)
!5699 = !DILocation(line: 1680, column: 4, scope: !5461)
!5700 = !DILocation(line: 0, scope: !5642)
!5701 = !DILocation(line: 1597, column: 14, scope: !5463)
!5702 = !DILocation(line: 1699, column: 11, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5394, file: !2669, line: 1699, column: 7)
!5704 = !DILocation(line: 1699, column: 7, scope: !5394)
!5705 = !DILocation(line: 1725, column: 7, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5394, file: !2669, line: 1725, column: 7)
!5707 = !DILocation(line: 1725, column: 12, scope: !5706)
!5708 = !DILocation(line: 1747, column: 13, scope: !5473)
!5709 = !DILocation(line: 1747, column: 7, scope: !5394)
!5710 = !DILocation(line: 1722, column: 24, scope: !5394)
!5711 = !DILocation(line: 1725, column: 7, scope: !5394)
!5712 = !DILocation(line: 1729, column: 7, scope: !5394)
!5713 = !DILocation(line: 1736, column: 13, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5394, file: !2669, line: 1736, column: 7)
!5715 = !DILocation(line: 1735, column: 19, scope: !5394)
!5716 = !DILocation(line: 1736, column: 7, scope: !5394)
!5717 = !DILocation(line: 1748, column: 10, scope: !5472)
!5718 = !DILocation(line: 1750, column: 15, scope: !5471)
!5719 = !DILocation(line: 1750, column: 8, scope: !5472)
!5720 = !DILocation(line: 0, scope: !5470)
!5721 = !DILocation(line: 1756, column: 15, scope: !5479)
!5722 = !DILocation(line: 1756, column: 9, scope: !5470)
!5723 = !DILocation(line: 1758, column: 7, scope: !5475)
!5724 = !DILocation(line: 0, scope: !5475)
!5725 = !DILocation(line: 1758, column: 7, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5475, file: !2669, line: 1758, column: 7)
!5727 = !DILocation(line: 1764, column: 5, scope: !5470)
!5728 = !DILocation(line: 0, scope: !5472)
!5729 = !DILocation(line: 1764, column: 20, scope: !5470)
!5730 = !DILocation(line: 1764, column: 17, scope: !5470)
!5731 = !DILocation(line: 1765, column: 6, scope: !5481)
!5732 = !DILocation(line: 0, scope: !5481)
!5733 = !DILocation(line: 1765, column: 6, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5481, file: !2669, line: 1765, column: 6)
!5735 = distinct !{!5735, !5727, !5736}
!5736 = !DILocation(line: 1766, column: 5, scope: !5470)
!5737 = !DILocation(line: 1773, column: 12, scope: !5486)
!5738 = !DILocation(line: 1773, column: 7, scope: !5394)
!5739 = !DILocation(line: 1773, column: 7, scope: !5486)
!5740 = !DILocation(line: 1774, column: 4, scope: !5484)
!5741 = !DILocation(line: 0, scope: !5484)
!5742 = !DILocation(line: 1774, column: 4, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5484, file: !2669, line: 1774, column: 4)
!5744 = !DILocation(line: 1818, column: 8, scope: !5490)
!5745 = !DILocation(line: 1818, column: 27, scope: !5490)
!5746 = !DILocation(line: 1818, column: 25, scope: !5490)
!5747 = !DILocation(line: 1818, column: 8, scope: !5491)
!5748 = !DILocation(line: 1819, column: 5, scope: !5488)
!5749 = !DILocation(line: 0, scope: !5488)
!5750 = !DILocation(line: 1819, column: 5, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5488, file: !2669, line: 1819, column: 5)
!5752 = !DILocation(line: 1822, column: 14, scope: !5496)
!5753 = !DILocation(line: 1822, column: 8, scope: !5491)
!5754 = !DILocation(line: 1823, column: 5, scope: !5494)
!5755 = !DILocation(line: 0, scope: !5494)
!5756 = !DILocation(line: 1823, column: 5, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5494, file: !2669, line: 1823, column: 5)
!5758 = !DILocation(line: 1826, column: 20, scope: !5491)
!5759 = !DILocation(line: 1827, column: 4, scope: !5491)
!5760 = !DILocation(line: 0, scope: !5491)
!5761 = !DILocation(line: 1827, column: 21, scope: !5491)
!5762 = !DILocation(line: 1827, column: 18, scope: !5491)
!5763 = !DILocation(line: 1828, column: 5, scope: !5498)
!5764 = !DILocation(line: 0, scope: !5498)
!5765 = !DILocation(line: 1828, column: 5, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5498, file: !2669, line: 1828, column: 5)
!5767 = distinct !{!5767, !5759, !5768}
!5768 = !DILocation(line: 1829, column: 4, scope: !5491)
!5769 = !DILocation(line: 1831, column: 4, scope: !5501)
!5770 = !DILocation(line: 0, scope: !5501)
!5771 = !DILocation(line: 1831, column: 4, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5501, file: !2669, line: 1831, column: 4)
!5773 = !DILocation(line: 1835, column: 16, scope: !5394)
!5774 = !DILocation(line: 1835, column: 3, scope: !5394)
!5775 = !DILocation(line: 1836, column: 4, scope: !5503)
!5776 = !DILocation(line: 0, scope: !5503)
!5777 = !DILocation(line: 1836, column: 4, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5503, file: !2669, line: 1836, column: 4)
!5779 = !DILocation(line: 1837, column: 4, scope: !5504)
!5780 = distinct !{!5780, !5774, !5781}
!5781 = !DILocation(line: 1838, column: 3, scope: !5394)
!5782 = !DILocation(line: 1844, column: 1, scope: !5367)
!5783 = distinct !DISubprogram(name: "extract_conversion", scope: !2669, file: !2669, line: 642, type: !5784, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2665, retainedNodes: !5786)
!5784 = !DISubroutineType(types: !5785)
!5785 = !{!140, !5440, !140}
!5786 = !{!5787, !5788}
!5787 = !DILocalVariable(name: "conv", arg: 1, scope: !5783, file: !2669, line: 642, type: !5440)
!5788 = !DILocalVariable(name: "sp", arg: 2, scope: !5783, file: !2669, line: 643, type: !140)
!5789 = !DILocation(line: 0, scope: !5783)
!5790 = !DILocation(line: 645, column: 10, scope: !5783)
!5791 = !DILocation(line: 653, column: 2, scope: !5783)
!5792 = !DILocation(line: 654, column: 6, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5783, file: !2669, line: 654, column: 6)
!5794 = !DILocation(line: 654, column: 10, scope: !5793)
!5795 = !DILocation(line: 654, column: 6, scope: !5783)
!5796 = !DILocation(line: 655, column: 24, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5793, file: !2669, line: 654, column: 18)
!5798 = !DILocation(line: 655, column: 19, scope: !5797)
!5799 = !DILocation(line: 656, column: 3, scope: !5797)
!5800 = !DILocation(line: 659, column: 7, scope: !5783)
!5801 = !DILocation(line: 660, column: 7, scope: !5783)
!5802 = !DILocation(line: 661, column: 7, scope: !5783)
!5803 = !DILocation(line: 662, column: 7, scope: !5783)
!5804 = !DILocation(line: 663, column: 7, scope: !5783)
!5805 = !DILocation(line: 665, column: 2, scope: !5783)
!5806 = !DILocation(line: 666, column: 1, scope: !5783)
!5807 = distinct !DISubprogram(name: "outs", scope: !2669, file: !2669, line: 1319, type: !5808, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2665, retainedNodes: !5810)
!5808 = !DISubroutineType(types: !5809)
!5809 = !{!125, !4558, !124, !140, !140}
!5810 = !{!5811, !5812, !5813, !5814, !5815, !5816}
!5811 = !DILocalVariable(name: "out", arg: 1, scope: !5807, file: !2669, line: 1319, type: !4558)
!5812 = !DILocalVariable(name: "ctx", arg: 2, scope: !5807, file: !2669, line: 1320, type: !124)
!5813 = !DILocalVariable(name: "sp", arg: 3, scope: !5807, file: !2669, line: 1321, type: !140)
!5814 = !DILocalVariable(name: "ep", arg: 4, scope: !5807, file: !2669, line: 1322, type: !140)
!5815 = !DILocalVariable(name: "count", scope: !5807, file: !2669, line: 1324, type: !272)
!5816 = !DILocalVariable(name: "rc", scope: !5817, file: !2669, line: 1327, type: !125)
!5817 = distinct !DILexicalBlock(scope: !5807, file: !2669, line: 1326, column: 45)
!5818 = !DILocation(line: 0, scope: !5807)
!5819 = !DILocation(line: 1326, column: 2, scope: !5807)
!5820 = !DILocation(line: 1324, column: 9, scope: !5807)
!5821 = !DILocation(line: 1326, column: 13, scope: !5807)
!5822 = !DILocation(line: 1326, column: 19, scope: !5807)
!5823 = !DILocation(line: 1327, column: 21, scope: !5817)
!5824 = !DILocation(line: 1326, column: 36, scope: !5807)
!5825 = !DILocation(line: 1326, column: 39, scope: !5807)
!5826 = !DILocation(line: 1327, column: 24, scope: !5817)
!5827 = !DILocation(line: 1327, column: 16, scope: !5817)
!5828 = !DILocation(line: 1327, column: 12, scope: !5817)
!5829 = !DILocation(line: 0, scope: !5817)
!5830 = !DILocation(line: 1329, column: 10, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5817, file: !2669, line: 1329, column: 7)
!5832 = !DILocation(line: 1329, column: 7, scope: !5817)
!5833 = distinct !{!5833, !5819, !5834}
!5834 = !DILocation(line: 1333, column: 2, scope: !5807)
!5835 = !DILocation(line: 1336, column: 1, scope: !5807)
!5836 = distinct !DISubprogram(name: "encode_uint", scope: !2669, file: !2669, line: 788, type: !5837, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2665, retainedNodes: !5839)
!5837 = !DISubroutineType(types: !5838)
!5838 = !{!393, !2691, !5440, !393, !140}
!5839 = !{!5840, !5841, !5842, !5843, !5844, !5845, !5847, !5848}
!5840 = !DILocalVariable(name: "value", arg: 1, scope: !5836, file: !2669, line: 788, type: !2691)
!5841 = !DILocalVariable(name: "conv", arg: 2, scope: !5836, file: !2669, line: 789, type: !5440)
!5842 = !DILocalVariable(name: "bps", arg: 3, scope: !5836, file: !2669, line: 790, type: !393)
!5843 = !DILocalVariable(name: "bpe", arg: 4, scope: !5836, file: !2669, line: 791, type: !140)
!5844 = !DILocalVariable(name: "upcase", scope: !5836, file: !2669, line: 793, type: !153)
!5845 = !DILocalVariable(name: "radix", scope: !5836, file: !2669, line: 794, type: !5846)
!5846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5847 = !DILocalVariable(name: "bp", scope: !5836, file: !2669, line: 795, type: !393)
!5848 = !DILocalVariable(name: "lsv", scope: !5849, file: !2669, line: 798, type: !32)
!5849 = distinct !DILexicalBlock(scope: !5836, file: !2669, line: 797, column: 5)
!5850 = !DILocation(line: 0, scope: !5836)
!5851 = !DILocation(line: 793, column: 35, scope: !5836)
!5852 = !DILocation(line: 793, column: 24, scope: !5836)
!5853 = !DILocation(line: 793, column: 16, scope: !5836)
!5854 = !DILocation(line: 794, column: 29, scope: !5836)
!5855 = !DILocation(line: 795, column: 24, scope: !5836)
!5856 = !DILocation(line: 795, column: 17, scope: !5836)
!5857 = !DILocation(line: 797, column: 2, scope: !5836)
!5858 = !DILocation(line: 802, column: 9, scope: !5849)
!5859 = !DILocation(line: 798, column: 22, scope: !5849)
!5860 = !DILocation(line: 0, scope: !5849)
!5861 = !DILocation(line: 800, column: 16, scope: !5849)
!5862 = !DILocation(line: 800, column: 11, scope: !5849)
!5863 = !DILocation(line: 800, column: 4, scope: !5849)
!5864 = !DILocation(line: 800, column: 9, scope: !5849)
!5865 = !DILocation(line: 803, column: 18, scope: !5836)
!5866 = !DILocation(line: 803, column: 24, scope: !5836)
!5867 = !DILocation(line: 803, column: 2, scope: !5849)
!5868 = distinct !{!5868, !5857, !5869}
!5869 = !DILocation(line: 803, column: 37, scope: !5836)
!5870 = !DILocation(line: 808, column: 12, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5836, file: !2669, line: 808, column: 6)
!5872 = !DILocation(line: 808, column: 6, scope: !5836)
!5873 = !DILocation(line: 809, column: 7, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5871, file: !2669, line: 808, column: 23)
!5875 = !DILocation(line: 813, column: 3, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5877, file: !2669, line: 811, column: 27)
!5877 = distinct !DILexicalBlock(scope: !5878, file: !2669, line: 811, column: 14)
!5878 = distinct !DILexicalBlock(scope: !5874, file: !2669, line: 809, column: 7)
!5879 = !DILocation(line: 0, scope: !5878)
!5880 = !DILocation(line: 818, column: 2, scope: !5836)
!5881 = distinct !DISubprogram(name: "store_count", scope: !2669, file: !2669, line: 1280, type: !5882, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2665, retainedNodes: !5886)
!5882 = !DISubroutineType(types: !5883)
!5883 = !{null, !5884, !124, !125}
!5884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5885, size: 32)
!5885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5407)
!5886 = !{!5887, !5888, !5889}
!5887 = !DILocalVariable(name: "conv", arg: 1, scope: !5881, file: !2669, line: 1280, type: !5884)
!5888 = !DILocalVariable(name: "dp", arg: 2, scope: !5881, file: !2669, line: 1281, type: !124)
!5889 = !DILocalVariable(name: "count", arg: 3, scope: !5881, file: !2669, line: 1282, type: !125)
!5890 = !DILocation(line: 0, scope: !5881)
!5891 = !DILocation(line: 1284, column: 38, scope: !5881)
!5892 = !DILocation(line: 1284, column: 2, scope: !5881)
!5893 = !DILocation(line: 1286, column: 4, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5881, file: !2669, line: 1284, column: 50)
!5895 = !DILocation(line: 1286, column: 14, scope: !5894)
!5896 = !DILocation(line: 1287, column: 3, scope: !5894)
!5897 = !DILocation(line: 1289, column: 24, scope: !5894)
!5898 = !DILocation(line: 1289, column: 22, scope: !5894)
!5899 = !DILocation(line: 1290, column: 3, scope: !5894)
!5900 = !DILocation(line: 1292, column: 18, scope: !5894)
!5901 = !DILocation(line: 1292, column: 4, scope: !5894)
!5902 = !DILocation(line: 1292, column: 16, scope: !5894)
!5903 = !DILocation(line: 1293, column: 3, scope: !5894)
!5904 = !DILocation(line: 1295, column: 4, scope: !5894)
!5905 = !DILocation(line: 1295, column: 15, scope: !5894)
!5906 = !DILocation(line: 1296, column: 3, scope: !5894)
!5907 = !DILocation(line: 1298, column: 22, scope: !5894)
!5908 = !DILocation(line: 1298, column: 4, scope: !5894)
!5909 = !DILocation(line: 1298, column: 20, scope: !5894)
!5910 = !DILocation(line: 1299, column: 3, scope: !5894)
!5911 = !DILocation(line: 1301, column: 21, scope: !5894)
!5912 = !DILocation(line: 1301, column: 4, scope: !5894)
!5913 = !DILocation(line: 1301, column: 19, scope: !5894)
!5914 = !DILocation(line: 1302, column: 3, scope: !5894)
!5915 = !DILocation(line: 1304, column: 4, scope: !5894)
!5916 = !DILocation(line: 1304, column: 17, scope: !5894)
!5917 = !DILocation(line: 1305, column: 3, scope: !5894)
!5918 = !DILocation(line: 1307, column: 4, scope: !5894)
!5919 = !DILocation(line: 1307, column: 20, scope: !5894)
!5920 = !DILocation(line: 1308, column: 3, scope: !5894)
!5921 = !DILocation(line: 1316, column: 1, scope: !5881)
!5922 = distinct !DISubprogram(name: "isupper", scope: !5923, file: !5923, line: 16, type: !410, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2665, retainedNodes: !5924)
!5923 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5924 = !{!5925}
!5925 = !DILocalVariable(name: "a", arg: 1, scope: !5922, file: !5923, line: 16, type: !125)
!5926 = !DILocation(line: 0, scope: !5922)
!5927 = !DILocation(line: 18, column: 29, scope: !5922)
!5928 = !DILocation(line: 18, column: 45, scope: !5922)
!5929 = !DILocation(line: 18, column: 2, scope: !5922)
!5930 = distinct !DISubprogram(name: "conversion_radix", scope: !2669, file: !2669, line: 761, type: !5931, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2665, retainedNodes: !5933)
!5931 = !DISubroutineType(types: !5932)
!5932 = !{!272, !142}
!5933 = !{!5934}
!5934 = !DILocalVariable(name: "specifier", arg: 1, scope: !5930, file: !2669, line: 761, type: !142)
!5935 = !DILocation(line: 0, scope: !5930)
!5936 = !DILocation(line: 763, column: 2, scope: !5930)
!5937 = !DILocation(line: 770, column: 3, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5930, file: !2669, line: 763, column: 21)
!5939 = !DILocation(line: 774, column: 3, scope: !5938)
!5940 = !DILocation(line: 0, scope: !5938)
!5941 = !DILocation(line: 776, column: 1, scope: !5930)
!5942 = distinct !DISubprogram(name: "extract_flags", scope: !2669, file: !2669, line: 339, type: !5784, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2665, retainedNodes: !5943)
!5943 = !{!5944, !5945, !5946}
!5944 = !DILocalVariable(name: "conv", arg: 1, scope: !5942, file: !2669, line: 339, type: !5440)
!5945 = !DILocalVariable(name: "sp", arg: 2, scope: !5942, file: !2669, line: 340, type: !140)
!5946 = !DILocalVariable(name: "loop", scope: !5942, file: !2669, line: 342, type: !153)
!5947 = !DILocation(line: 0, scope: !5942)
!5948 = !DILocation(line: 344, column: 2, scope: !5942)
!5949 = !DILocation(line: 345, column: 11, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5942, file: !2669, line: 344, column: 5)
!5951 = !DILocation(line: 345, column: 3, scope: !5950)
!5952 = !DILocation(line: 351, column: 4, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5950, file: !2669, line: 345, column: 16)
!5954 = !DILocation(line: 354, column: 4, scope: !5953)
!5955 = !DILocation(line: 357, column: 4, scope: !5953)
!5956 = !DILocation(line: 360, column: 4, scope: !5953)
!5957 = !DILocation(line: 0, scope: !5953)
!5958 = !DILocation(line: 370, column: 12, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5942, file: !2669, line: 370, column: 6)
!5960 = !DILocation(line: 370, column: 22, scope: !5959)
!5961 = !DILocation(line: 371, column: 19, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5959, file: !2669, line: 370, column: 42)
!5963 = !DILocation(line: 372, column: 2, scope: !5962)
!5964 = !DILocation(line: 376, column: 2, scope: !5942)
!5965 = distinct !DISubprogram(name: "extract_width", scope: !2669, file: !2669, line: 388, type: !5784, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2665, retainedNodes: !5966)
!5966 = !{!5967, !5968, !5969, !5970}
!5967 = !DILocalVariable(name: "conv", arg: 1, scope: !5965, file: !2669, line: 388, type: !5440)
!5968 = !DILocalVariable(name: "sp", arg: 2, scope: !5965, file: !2669, line: 389, type: !140)
!5969 = !DILocalVariable(name: "wp", scope: !5965, file: !2669, line: 398, type: !140)
!5970 = !DILocalVariable(name: "width", scope: !5965, file: !2669, line: 399, type: !272)
!5971 = !DILocation(line: 0, scope: !5965)
!5972 = !DILocation(line: 391, column: 8, scope: !5965)
!5973 = !DILocation(line: 391, column: 22, scope: !5965)
!5974 = !DILocation(line: 393, column: 6, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5965, file: !2669, line: 393, column: 6)
!5976 = !DILocation(line: 393, column: 10, scope: !5975)
!5977 = !DILocation(line: 393, column: 6, scope: !5965)
!5978 = !DILocation(line: 394, column: 20, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5975, file: !2669, line: 393, column: 18)
!5980 = !DILocation(line: 395, column: 10, scope: !5979)
!5981 = !DILocation(line: 395, column: 3, scope: !5979)
!5982 = !DILocation(line: 399, column: 17, scope: !5965)
!5983 = !DILocation(line: 401, column: 6, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5965, file: !2669, line: 401, column: 6)
!5985 = !DILocation(line: 401, column: 9, scope: !5984)
!5986 = !DILocation(line: 401, column: 6, scope: !5965)
!5987 = !DILocation(line: 402, column: 23, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5984, file: !2669, line: 401, column: 16)
!5989 = !DILocation(line: 403, column: 9, scope: !5988)
!5990 = !DILocation(line: 403, column: 21, scope: !5988)
!5991 = !DILocation(line: 405, column: 11, scope: !5988)
!5992 = !DILocation(line: 404, column: 21, scope: !5988)
!5993 = !DILocation(line: 406, column: 2, scope: !5988)
!5994 = !DILocation(line: 409, column: 1, scope: !5965)
!5995 = distinct !DISubprogram(name: "extract_prec", scope: !2669, file: !2669, line: 420, type: !5784, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2665, retainedNodes: !5996)
!5996 = !{!5997, !5998, !5999}
!5997 = !DILocalVariable(name: "conv", arg: 1, scope: !5995, file: !2669, line: 420, type: !5440)
!5998 = !DILocalVariable(name: "sp", arg: 2, scope: !5995, file: !2669, line: 421, type: !140)
!5999 = !DILocalVariable(name: "prec", scope: !5995, file: !2669, line: 435, type: !272)
!6000 = !DILocation(line: 0, scope: !5995)
!6001 = !DILocation(line: 423, column: 24, scope: !5995)
!6002 = !DILocation(line: 423, column: 28, scope: !5995)
!6003 = !DILocation(line: 423, column: 8, scope: !5995)
!6004 = !DILocation(line: 423, column: 21, scope: !5995)
!6005 = !DILocation(line: 425, column: 6, scope: !5995)
!6006 = !DILocation(line: 428, column: 2, scope: !5995)
!6007 = !DILocation(line: 430, column: 6, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !5995, file: !2669, line: 430, column: 6)
!6009 = !DILocation(line: 430, column: 10, scope: !6008)
!6010 = !DILocation(line: 430, column: 6, scope: !5995)
!6011 = !DILocation(line: 431, column: 19, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6008, file: !2669, line: 430, column: 18)
!6013 = !DILocation(line: 432, column: 10, scope: !6012)
!6014 = !DILocation(line: 432, column: 3, scope: !6012)
!6015 = !DILocation(line: 435, column: 16, scope: !5995)
!6016 = !DILocation(line: 437, column: 8, scope: !5995)
!6017 = !DILocation(line: 437, column: 19, scope: !5995)
!6018 = !DILocation(line: 439, column: 10, scope: !5995)
!6019 = !DILocation(line: 438, column: 20, scope: !5995)
!6020 = !DILocation(line: 441, column: 9, scope: !5995)
!6021 = !DILocation(line: 442, column: 1, scope: !5995)
!6022 = distinct !DISubprogram(name: "extract_length", scope: !2669, file: !2669, line: 453, type: !5784, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2665, retainedNodes: !6023)
!6023 = !{!6024, !6025}
!6024 = !DILocalVariable(name: "conv", arg: 1, scope: !6022, file: !2669, line: 453, type: !5440)
!6025 = !DILocalVariable(name: "sp", arg: 2, scope: !6022, file: !2669, line: 454, type: !140)
!6026 = !DILocation(line: 0, scope: !6022)
!6027 = !DILocation(line: 456, column: 10, scope: !6022)
!6028 = !DILocation(line: 456, column: 2, scope: !6022)
!6029 = !DILocation(line: 458, column: 8, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6031, file: !2669, line: 458, column: 7)
!6031 = distinct !DILexicalBlock(scope: !6022, file: !2669, line: 456, column: 15)
!6032 = !DILocation(line: 458, column: 7, scope: !6030)
!6033 = !DILocation(line: 458, column: 13, scope: !6030)
!6034 = !DILocation(line: 0, scope: !6030)
!6035 = !DILocation(line: 458, column: 7, scope: !6031)
!6036 = !DILocation(line: 459, column: 21, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6030, file: !2669, line: 458, column: 21)
!6038 = !DILocation(line: 460, column: 4, scope: !6037)
!6039 = !DILocation(line: 461, column: 3, scope: !6037)
!6040 = !DILocation(line: 462, column: 21, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6030, file: !2669, line: 461, column: 10)
!6042 = !DILocation(line: 466, column: 8, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6031, file: !2669, line: 466, column: 7)
!6044 = !DILocation(line: 466, column: 7, scope: !6043)
!6045 = !DILocation(line: 466, column: 13, scope: !6043)
!6046 = !DILocation(line: 0, scope: !6043)
!6047 = !DILocation(line: 466, column: 7, scope: !6031)
!6048 = !DILocation(line: 467, column: 21, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6043, file: !2669, line: 466, column: 21)
!6050 = !DILocation(line: 468, column: 4, scope: !6049)
!6051 = !DILocation(line: 469, column: 3, scope: !6049)
!6052 = !DILocation(line: 470, column: 21, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6043, file: !2669, line: 469, column: 10)
!6054 = !DILocation(line: 474, column: 9, scope: !6031)
!6055 = !DILocation(line: 474, column: 20, scope: !6031)
!6056 = !DILocation(line: 475, column: 3, scope: !6031)
!6057 = !DILocation(line: 476, column: 3, scope: !6031)
!6058 = !DILocation(line: 478, column: 9, scope: !6031)
!6059 = !DILocation(line: 478, column: 20, scope: !6031)
!6060 = !DILocation(line: 479, column: 3, scope: !6031)
!6061 = !DILocation(line: 480, column: 3, scope: !6031)
!6062 = !DILocation(line: 482, column: 9, scope: !6031)
!6063 = !DILocation(line: 482, column: 20, scope: !6031)
!6064 = !DILocation(line: 483, column: 3, scope: !6031)
!6065 = !DILocation(line: 484, column: 3, scope: !6031)
!6066 = !DILocation(line: 486, column: 9, scope: !6031)
!6067 = !DILocation(line: 486, column: 20, scope: !6031)
!6068 = !DILocation(line: 487, column: 3, scope: !6031)
!6069 = !DILocation(line: 492, column: 21, scope: !6031)
!6070 = !DILocation(line: 493, column: 3, scope: !6031)
!6071 = !DILocation(line: 495, column: 9, scope: !6031)
!6072 = !DILocation(line: 495, column: 20, scope: !6031)
!6073 = !DILocation(line: 496, column: 3, scope: !6031)
!6074 = !DILocation(line: 498, column: 2, scope: !6022)
!6075 = distinct !DISubprogram(name: "extract_specifier", scope: !2669, file: !2669, line: 513, type: !5784, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2665, retainedNodes: !6076)
!6076 = !{!6077, !6078, !6079, !6080}
!6077 = !DILocalVariable(name: "conv", arg: 1, scope: !6075, file: !2669, line: 513, type: !5440)
!6078 = !DILocalVariable(name: "sp", arg: 2, scope: !6075, file: !2669, line: 514, type: !140)
!6079 = !DILocalVariable(name: "unsupported", scope: !6075, file: !2669, line: 516, type: !153)
!6080 = !DILabel(scope: !6081, name: "int_conv", file: !2669, line: 526)
!6081 = distinct !DILexicalBlock(scope: !6075, file: !2669, line: 520, column: 27)
!6082 = !DILocation(line: 0, scope: !6075)
!6083 = !DILocation(line: 518, column: 20, scope: !6075)
!6084 = !DILocation(line: 518, column: 8, scope: !6075)
!6085 = !DILocation(line: 518, column: 18, scope: !6075)
!6086 = !DILocation(line: 520, column: 2, scope: !6075)
!6087 = !DILocation(line: 525, column: 3, scope: !6081)
!6088 = !DILocation(line: 0, scope: !6081)
!6089 = !DILocation(line: 526, column: 1, scope: !6081)
!6090 = !DILocation(line: 528, column: 24, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6081, file: !2669, line: 528, column: 7)
!6092 = !DILocation(line: 528, column: 7, scope: !6081)
!6093 = !DILocation(line: 535, column: 23, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6081, file: !2669, line: 535, column: 7)
!6095 = !DILocation(line: 535, column: 7, scope: !6081)
!6096 = !DILocation(line: 536, column: 36, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6094, file: !2669, line: 535, column: 31)
!6098 = !DILocation(line: 537, column: 3, scope: !6097)
!6099 = !DILocation(line: 570, column: 9, scope: !6081)
!6100 = !DILocation(line: 570, column: 23, scope: !6081)
!6101 = !DILocation(line: 575, column: 4, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6103, file: !2669, line: 573, column: 48)
!6103 = distinct !DILexicalBlock(scope: !6081, file: !2669, line: 573, column: 7)
!6104 = !DILocation(line: 603, column: 9, scope: !6081)
!6105 = !DILocation(line: 603, column: 23, scope: !6081)
!6106 = !DILocation(line: 605, column: 24, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6081, file: !2669, line: 605, column: 7)
!6108 = !DILocation(line: 605, column: 7, scope: !6081)
!6109 = !DILocation(line: 612, column: 9, scope: !6081)
!6110 = !DILocation(line: 612, column: 23, scope: !6081)
!6111 = !DILocation(line: 619, column: 24, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6081, file: !2669, line: 619, column: 7)
!6113 = !DILocation(line: 619, column: 7, scope: !6081)
!6114 = !DILocation(line: 625, column: 9, scope: !6081)
!6115 = !DILocation(line: 625, column: 17, scope: !6081)
!6116 = !DILocation(line: 626, column: 3, scope: !6081)
!6117 = !DILocation(line: 629, column: 20, scope: !6075)
!6118 = !DILocation(line: 629, column: 8, scope: !6075)
!6119 = !DILocation(line: 518, column: 23, scope: !6075)
!6120 = !DILocation(line: 631, column: 2, scope: !6075)
!6121 = distinct !DISubprogram(name: "extract_decimal", scope: !2669, file: !2669, line: 318, type: !6122, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2665, retainedNodes: !6124)
!6122 = !DISubroutineType(types: !6123)
!6123 = !{!272, !386}
!6124 = !{!6125, !6126, !6127}
!6125 = !DILocalVariable(name: "str", arg: 1, scope: !6121, file: !2669, line: 318, type: !386)
!6126 = !DILocalVariable(name: "sp", scope: !6121, file: !2669, line: 320, type: !140)
!6127 = !DILocalVariable(name: "val", scope: !6121, file: !2669, line: 321, type: !272)
!6128 = !DILocation(line: 0, scope: !6121)
!6129 = !DILocation(line: 320, column: 19, scope: !6121)
!6130 = !DILocation(line: 323, column: 37, scope: !6121)
!6131 = !DILocation(line: 323, column: 17, scope: !6121)
!6132 = !DILocation(line: 323, column: 9, scope: !6121)
!6133 = !DILocation(line: 323, column: 2, scope: !6121)
!6134 = !DILocation(line: 324, column: 13, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6121, file: !2669, line: 323, column: 43)
!6136 = !DILocation(line: 324, column: 24, scope: !6135)
!6137 = !DILocation(line: 324, column: 19, scope: !6135)
!6138 = !DILocation(line: 324, column: 27, scope: !6135)
!6139 = distinct !{!6139, !6133, !6140}
!6140 = !DILocation(line: 325, column: 2, scope: !6121)
!6141 = !DILocation(line: 326, column: 7, scope: !6121)
!6142 = !DILocation(line: 327, column: 2, scope: !6121)
!6143 = distinct !DISubprogram(name: "isdigit", scope: !5923, file: !5923, line: 43, type: !410, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2665, retainedNodes: !6144)
!6144 = !{!6145}
!6145 = !DILocalVariable(name: "a", arg: 1, scope: !6143, file: !5923, line: 43, type: !125)
!6146 = !DILocation(line: 0, scope: !6143)
!6147 = !DILocation(line: 45, column: 29, scope: !6143)
!6148 = !DILocation(line: 45, column: 45, scope: !6143)
!6149 = !DILocation(line: 45, column: 2, scope: !6143)
!6150 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6151, file: !6151, line: 9, type: !3278, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !639)
!6151 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!6152 = !DILocation(line: 11, column: 1, scope: !6150)
!6153 = !{i64 2147565127, i64 2147565170, i64 2147565210}
!6154 = !DILocation(line: 12, column: 1, scope: !6150)
!6155 = !{i64 2147569354, i64 2147569397, i64 2147569437}
!6156 = !DILocation(line: 13, column: 1, scope: !6150)
!6157 = !{i64 2147569563, i64 2147569606, i64 2147569646}
!6158 = !DILocation(line: 14, column: 1, scope: !6150)
!6159 = !{i64 2147569732, i64 2147569775, i64 2147569815}
!6160 = !DILocation(line: 15, column: 1, scope: !6150)
!6161 = !{i64 2147569895, i64 2147569938, i64 2147569978}
!6162 = !DILocation(line: 16, column: 1, scope: !6150)
!6163 = !{i64 2147570079, i64 2147570122, i64 2147570162}
!6164 = !DILocation(line: 17, column: 1, scope: !6150)
!6165 = !{i64 2147570258, i64 2147570301, i64 2147570341}
!6166 = !DILocation(line: 18, column: 1, scope: !6150)
!6167 = !{i64 2147570500, i64 2147570543, i64 2147570583}
!6168 = !DILocation(line: 19, column: 1, scope: !6150)
!6169 = !{i64 2147570735, i64 2147570778, i64 2147570818}
!6170 = !DILocation(line: 20, column: 1, scope: !6150)
!6171 = !{i64 2147570921, i64 2147570964, i64 2147571004}
!6172 = !DILocation(line: 21, column: 1, scope: !6150)
!6173 = !{i64 2147571137, i64 2147571180, i64 2147571220}
!6174 = !DILocation(line: 22, column: 1, scope: !6150)
!6175 = !{i64 2147571340, i64 2147571383, i64 2147571423}
!6176 = !DILocation(line: 23, column: 1, scope: !6150)
!6177 = !{i64 2147571543, i64 2147571586, i64 2147571626}
!6178 = !DILocation(line: 24, column: 1, scope: !6150)
!6179 = !{i64 2147571718, i64 2147571761, i64 2147571801}
!6180 = !DILocation(line: 25, column: 1, scope: !6150)
!6181 = !{i64 2147571926, i64 2147571969, i64 2147572009}
!6182 = !DILocation(line: 26, column: 1, scope: !6150)
!6183 = !{i64 2147572130, i64 2147572173, i64 2147572213}
!6184 = !DILocation(line: 27, column: 1, scope: !6150)
!6185 = !{i64 2147572323, i64 2147572366, i64 2147572406}
!6186 = !DILocation(line: 28, column: 1, scope: !6150)
!6187 = !{i64 2147572525, i64 2147572568, i64 2147572608}
!6188 = !DILocation(line: 29, column: 1, scope: !6150)
!6189 = !{i64 2147572724, i64 2147572767, i64 2147572807}
!6190 = !DILocation(line: 30, column: 1, scope: !6150)
!6191 = !{i64 2147572951, i64 2147572994, i64 2147573034}
!6192 = !DILocation(line: 31, column: 1, scope: !6150)
!6193 = !{i64 2147573153, i64 2147573196, i64 2147573236}
!6194 = !DILocation(line: 32, column: 1, scope: !6150)
!6195 = !{i64 2147573368, i64 2147573411, i64 2147573451}
!6196 = !DILocation(line: 33, column: 1, scope: !6150)
!6197 = !{i64 2147573549, i64 2147573592, i64 2147573632}
!6198 = !DILocation(line: 34, column: 1, scope: !6150)
!6199 = !{i64 2147573721, i64 2147573764, i64 2147573804}
!6200 = !DILocation(line: 35, column: 1, scope: !6150)
!6201 = !{i64 2147573923, i64 2147573966, i64 2147574006}
!6202 = !DILocation(line: 36, column: 1, scope: !6150)
!6203 = !{i64 2147574149, i64 2147574192, i64 2147574232}
!6204 = !DILocation(line: 37, column: 1, scope: !6150)
!6205 = !{i64 2147574348, i64 2147574391, i64 2147574431}
!6206 = !DILocation(line: 38, column: 1, scope: !6150)
!6207 = !{i64 2147574523, i64 2147574566, i64 2147574606}
!6208 = !DILocation(line: 39, column: 1, scope: !6150)
!6209 = !{i64 2147574776, i64 2147574819, i64 2147574859}
!6210 = !DILocation(line: 40, column: 1, scope: !6150)
!6211 = !{i64 2147575017, i64 2147575060, i64 2147575100}
!6212 = !DILocation(line: 41, column: 1, scope: !6150)
!6213 = !{i64 2147575252, i64 2147575295, i64 2147575335}
!6214 = !DILocation(line: 42, column: 1, scope: !6150)
!6215 = !{i64 2147575484, i64 2147575527, i64 2147575567}
!6216 = !DILocation(line: 43, column: 1, scope: !6150)
!6217 = !{i64 2147575710, i64 2147575753, i64 2147575793}
!6218 = !DILocation(line: 44, column: 1, scope: !6150)
!6219 = !{i64 2147575936, i64 2147575979, i64 2147576019}
!6220 = !DILocation(line: 45, column: 1, scope: !6150)
!6221 = !{i64 2147576162, i64 2147576205, i64 2147576245}
!6222 = !DILocation(line: 46, column: 1, scope: !6150)
!6223 = !{i64 2147576397, i64 2147576440, i64 2147576480}
!6224 = !DILocation(line: 47, column: 1, scope: !6150)
!6225 = !{i64 2147576635, i64 2147576678, i64 2147576718}
!6226 = !DILocation(line: 48, column: 1, scope: !6150)
!6227 = !{i64 2147576909, i64 2147576952, i64 2147576992}
!6228 = !DILocation(line: 49, column: 1, scope: !6150)
!6229 = !{i64 2147577147, i64 2147577190, i64 2147577230}
!6230 = !DILocation(line: 50, column: 1, scope: !6150)
!6231 = !{i64 2147577391, i64 2147577434, i64 2147577474}
!6232 = !DILocation(line: 51, column: 1, scope: !6150)
!6233 = !{i64 2147577641, i64 2147577684, i64 2147577724}
!6234 = !DILocation(line: 52, column: 1, scope: !6150)
!6235 = !{i64 2147577888, i64 2147577931, i64 2147577971}
!6236 = !DILocation(line: 53, column: 1, scope: !6150)
!6237 = !{i64 2147582184, i64 2147582227, i64 2147582267}
!6238 = !DILocation(line: 54, column: 1, scope: !6150)
!6239 = !{i64 2147582419, i64 2147582462, i64 2147582502}
!6240 = !DILocation(line: 55, column: 1, scope: !6150)
!6241 = !{i64 2147582654, i64 2147582697, i64 2147582737}
!6242 = !DILocation(line: 56, column: 1, scope: !6150)
!6243 = !{i64 2147582892, i64 2147582935, i64 2147582975}
!6244 = !DILocation(line: 57, column: 1, scope: !6150)
!6245 = !{i64 2147583133, i64 2147583176, i64 2147583216}
!6246 = !DILocation(line: 58, column: 1, scope: !6150)
!6247 = !{i64 2147583413, i64 2147583456, i64 2147583496}
!6248 = !DILocation(line: 59, column: 1, scope: !6150)
!6249 = !{i64 2147583672, i64 2147583715, i64 2147583755}
!6250 = !DILocation(line: 60, column: 1, scope: !6150)
!6251 = !{i64 2147583898, i64 2147583941, i64 2147583981}
!6252 = !DILocation(line: 61, column: 1, scope: !6150)
!6253 = !{i64 2147584136, i64 2147584179, i64 2147584219}
!6254 = !DILocation(line: 62, column: 1, scope: !6150)
!6255 = !{i64 2147584365, i64 2147584408, i64 2147584448}
!6256 = !DILocation(line: 63, column: 1, scope: !6150)
!6257 = !{i64 2147584573, i64 2147584616, i64 2147584656}
!6258 = !DILocation(line: 64, column: 1, scope: !6150)
!6259 = !{i64 2147584784, i64 2147584827, i64 2147584867}
!6260 = !DILocation(line: 65, column: 1, scope: !6150)
!6261 = !{i64 2147585019, i64 2147585062, i64 2147585102}
!6262 = !DILocation(line: 66, column: 1, scope: !6150)
!6263 = !{i64 2147585248, i64 2147585291, i64 2147585331}
!6264 = !DILocation(line: 67, column: 1, scope: !6150)
!6265 = !{i64 2147585465, i64 2147585508, i64 2147585548}
!6266 = !DILocation(line: 68, column: 1, scope: !6150)
!6267 = !{i64 2147585694, i64 2147585737, i64 2147585777}
!6268 = !DILocation(line: 69, column: 1, scope: !6150)
!6269 = !{i64 2147585932, i64 2147585975, i64 2147586015}
!6270 = !DILocation(line: 70, column: 1, scope: !6150)
!6271 = !{i64 2147586164, i64 2147586207, i64 2147586247}
!6272 = !DILocation(line: 71, column: 1, scope: !6150)
!6273 = !{i64 2147586390, i64 2147586433, i64 2147586473}
!6274 = !DILocation(line: 72, column: 1, scope: !6150)
!6275 = !{i64 2147586607, i64 2147586650, i64 2147586690}
!6276 = !DILocation(line: 73, column: 1, scope: !6150)
!6277 = !{i64 2147586839, i64 2147586882, i64 2147586922}
!6278 = !DILocation(line: 74, column: 1, scope: !6150)
!6279 = !{i64 2147587065, i64 2147587108, i64 2147587148}
!6280 = !DILocation(line: 75, column: 1, scope: !6150)
!6281 = !{i64 2147587279, i64 2147587322, i64 2147587362}
!6282 = !DILocation(line: 76, column: 1, scope: !6150)
!6283 = !{i64 2147587499, i64 2147587542, i64 2147587582}
!6284 = !DILocation(line: 77, column: 1, scope: !6150)
!6285 = !{i64 2147587731, i64 2147587774, i64 2147587814}
!6286 = !DILocation(line: 78, column: 1, scope: !6150)
!6287 = !{i64 2147587939, i64 2147587982, i64 2147588022}
!6288 = !DILocation(line: 79, column: 1, scope: !6150)
!6289 = !{i64 2147588144, i64 2147588187, i64 2147588227}
!6290 = !DILocation(line: 80, column: 1, scope: !6150)
!6291 = !{i64 2147588361, i64 2147588404, i64 2147588444}
!6292 = !DILocation(line: 81, column: 1, scope: !6150)
!6293 = !{i64 2147588575, i64 2147588618, i64 2147588658}
!6294 = !DILocation(line: 82, column: 1, scope: !6150)
!6295 = !{i64 2147588801, i64 2147588844, i64 2147588884}
!6296 = !DILocation(line: 83, column: 1, scope: !6150)
!6297 = !{i64 2147589021, i64 2147589064, i64 2147589104}
!6298 = !DILocation(line: 84, column: 1, scope: !6150)
!6299 = !{i64 2147589226, i64 2147589269, i64 2147589309}
!6300 = !DILocation(line: 85, column: 1, scope: !6150)
!6301 = !{i64 2147589458, i64 2147589501, i64 2147589541}
!6302 = !DILocation(line: 86, column: 1, scope: !6150)
!6303 = !{i64 2147589693, i64 2147589736, i64 2147589776}
!6304 = !DILocation(line: 87, column: 1, scope: !6150)
!6305 = !{i64 2147589943, i64 2147589986, i64 2147590026}
!6306 = !DILocation(line: 88, column: 1, scope: !6150)
!6307 = !{i64 2147590193, i64 2147590236, i64 2147590276}
!6308 = !DILocation(line: 89, column: 1, scope: !6150)
!6309 = !{i64 2147594492, i64 2147594535, i64 2147594575}
!6310 = !DILocation(line: 90, column: 1, scope: !6150)
!6311 = !{i64 2147594703, i64 2147594746, i64 2147594786}
!6312 = !DILocation(line: 91, column: 1, scope: !6150)
!6313 = !{i64 2147594920, i64 2147594963, i64 2147595003}
!6314 = !DILocation(line: 92, column: 1, scope: !6150)
!6315 = !{i64 2147595116, i64 2147595159, i64 2147595199}
!6316 = !DILocation(line: 93, column: 1, scope: !6150)
!6317 = !{i64 2147595318, i64 2147595361, i64 2147595401}
!6318 = !DILocation(line: 94, column: 1, scope: !6150)
!6319 = !{i64 2147595511, i64 2147595554, i64 2147595594}
!6320 = !DILocation(line: 95, column: 1, scope: !6150)
!6321 = !{i64 2147595719, i64 2147595762, i64 2147595802}
!6322 = !DILocation(line: 96, column: 1, scope: !6150)
!6323 = !{i64 2147595912, i64 2147595955, i64 2147595995}
!6324 = !DILocation(line: 97, column: 1, scope: !6150)
!6325 = !{i64 2147596117, i64 2147596160, i64 2147596200}
!6326 = !DILocation(line: 98, column: 1, scope: !6150)
!6327 = !{i64 2147596322, i64 2147596365, i64 2147596405}
!6328 = !DILocation(line: 99, column: 1, scope: !6150)
!6329 = !{i64 2147596527, i64 2147596570, i64 2147596610}
!6330 = !DILocation(line: 100, column: 1, scope: !6150)
!6331 = !{i64 2147596735, i64 2147596778, i64 2147596818}
!6332 = !DILocation(line: 101, column: 1, scope: !6150)
!6333 = !{i64 2147596931, i64 2147596974, i64 2147597014}
!6334 = !DILocation(line: 102, column: 1, scope: !6150)
!6335 = !{i64 2147597136, i64 2147597179, i64 2147597219}
!6336 = !DILocation(line: 103, column: 1, scope: !6150)
!6337 = !{i64 2147597347, i64 2147597390, i64 2147597430}
!6338 = !DILocation(line: 104, column: 1, scope: !6150)
!6339 = !{i64 2147597546, i64 2147597589, i64 2147597629}
!6340 = !DILocation(line: 105, column: 1, scope: !6150)
!6341 = !{i64 2147597721, i64 2147597764, i64 2147597804}
!6342 = !DILocation(line: 106, column: 1, scope: !6150)
!6343 = !{i64 2147597905, i64 2147597948, i64 2147597988}
!6344 = !DILocation(line: 107, column: 1, scope: !6150)
!6345 = !{i64 2147598107, i64 2147598150, i64 2147598190}
!6346 = !DILocation(line: 108, column: 1, scope: !6150)
!6347 = !{i64 2147598306, i64 2147598349, i64 2147598389}
!6348 = !DILocation(line: 109, column: 1, scope: !6150)
!6349 = !{i64 2147598511, i64 2147598554, i64 2147598594}
!6350 = !DILocation(line: 110, column: 1, scope: !6150)
!6351 = !{i64 2147598704, i64 2147598747, i64 2147598787}
!6352 = !DILocation(line: 111, column: 1, scope: !6150)
!6353 = !{i64 2147598870, i64 2147598913, i64 2147598953}
!6354 = !DILocation(line: 112, column: 1, scope: !6150)
!6355 = !{i64 2147599054, i64 2147599097, i64 2147599137}
!6356 = !DILocation(line: 113, column: 1, scope: !6150)
!6357 = !{i64 2147599244, i64 2147599287, i64 2147599327}
!6358 = !DILocation(line: 114, column: 1, scope: !6150)
!6359 = !{i64 2147599428, i64 2147599471, i64 2147599511}
!6360 = !DILocation(line: 115, column: 1, scope: !6150)
!6361 = !{i64 2147599642, i64 2147599685, i64 2147599725}
!6362 = !DILocation(line: 116, column: 1, scope: !6150)
!6363 = !{i64 2147599853, i64 2147599896, i64 2147599936}
!6364 = !DILocation(line: 117, column: 1, scope: !6150)
!6365 = !{i64 2147600076, i64 2147600119, i64 2147600159}
!6366 = !DILocation(line: 118, column: 1, scope: !6150)
!6367 = !{i64 2147600260, i64 2147600303, i64 2147600343}
!6368 = !DILocation(line: 119, column: 1, scope: !6150)
!6369 = !{i64 2147600474, i64 2147600517, i64 2147600557}
!6370 = !DILocation(line: 120, column: 1, scope: !6150)
!6371 = !{i64 2147600640, i64 2147600683, i64 2147600723}
!6372 = !DILocation(line: 121, column: 1, scope: !6150)
!6373 = !{i64 2147600821, i64 2147600864, i64 2147600904}
!6374 = !DILocation(line: 122, column: 1, scope: !6150)
!6375 = !{i64 2147601014, i64 2147601057, i64 2147601097}
!6376 = !DILocation(line: 123, column: 1, scope: !6150)
!6377 = !{i64 2147601240, i64 2147601283, i64 2147601323}
!6378 = !DILocation(line: 124, column: 1, scope: !6150)
!6379 = !{i64 2147601454, i64 2147601497, i64 2147601537}
!6380 = !DILocation(line: 125, column: 1, scope: !6150)
!6381 = !{i64 2147601680, i64 2147601723, i64 2147601763}
!6382 = !DILocation(line: 126, column: 1, scope: !6150)
!6383 = !{i64 2147601897, i64 2147601940, i64 2147601980}
!6384 = !DILocation(line: 127, column: 1, scope: !6150)
!6385 = !{i64 2147602174, i64 2147602217, i64 2147602257}
!6386 = !DILocation(line: 128, column: 1, scope: !6150)
!6387 = !{i64 2147602400, i64 2147602443, i64 2147602483}
!6388 = !DILocation(line: 129, column: 1, scope: !6150)
!6389 = !{i64 2147602608, i64 2147602651, i64 2147602691}
!6390 = !DILocation(line: 130, column: 1, scope: !6150)
!6391 = !{i64 2147602804, i64 2147602847, i64 2147602887}
!6392 = !DILocation(line: 131, column: 1, scope: !6150)
!6393 = !{i64 2147603069, i64 2147603112, i64 2147603152}
!6394 = !DILocation(line: 132, column: 1, scope: !6150)
!6395 = !{i64 2147603283, i64 2147603326, i64 2147603366}
!6396 = !DILocation(line: 133, column: 1, scope: !6150)
!6397 = !{i64 2147603458, i64 2147603501, i64 2147603541}
!6398 = !DILocation(line: 134, column: 1, scope: !6150)
!6399 = !{i64 2147607773, i64 2147607816, i64 2147607856}
!6400 = !DILocation(line: 135, column: 1, scope: !6150)
!6401 = !{i64 2147607972, i64 2147608015, i64 2147608055}
!6402 = !DILocation(line: 136, column: 1, scope: !6150)
!6403 = !{i64 2147608214, i64 2147608257, i64 2147608297}
!6404 = !DILocation(line: 137, column: 1, scope: !6150)
!6405 = !{i64 2147608377, i64 2147608420, i64 2147608460}
!6406 = !DILocation(line: 138, column: 1, scope: !6150)
!6407 = !{i64 2147608564, i64 2147608607, i64 2147608647}
!6408 = !DILocation(line: 139, column: 1, scope: !6150)
!6409 = !{i64 2147608772, i64 2147608815, i64 2147608855}
!6410 = !DILocation(line: 140, column: 1, scope: !6150)
!6411 = !{i64 2147608968, i64 2147609011, i64 2147609051}
!6412 = !DILocation(line: 141, column: 1, scope: !6150)
!6413 = !{i64 2147609161, i64 2147609204, i64 2147609244}
!6414 = !DILocation(line: 142, column: 1, scope: !6150)
!6415 = !{i64 2147609344, i64 2147609387, i64 2147609427}
!6416 = !DILocation(line: 143, column: 1, scope: !6150)
!6417 = !{i64 2147609558, i64 2147609601, i64 2147609641}
!6418 = !DILocation(line: 144, column: 1, scope: !6150)
!6419 = !{i64 2147609769, i64 2147609812, i64 2147609852}
!6420 = !DILocation(line: 145, column: 1, scope: !6150)
!6421 = !{i64 2147609989, i64 2147610032, i64 2147610072}
!6422 = !DILocation(line: 146, column: 1, scope: !6150)
!6423 = !{i64 2147610196, i64 2147610239, i64 2147610279}
!6424 = !DILocation(line: 147, column: 1, scope: !6150)
!6425 = !{i64 2147610469, i64 2147610512, i64 2147610552}
!6426 = !DILocation(line: 148, column: 1, scope: !6150)
!6427 = !{i64 2147610717, i64 2147610760, i64 2147610800}
!6428 = !DILocation(line: 149, column: 1, scope: !6150)
!6429 = !{i64 2147610916, i64 2147610959, i64 2147610999}
!6430 = !DILocation(line: 150, column: 1, scope: !6150)
!6431 = !{i64 2147611151, i64 2147611194, i64 2147611234}
!6432 = !DILocation(line: 151, column: 1, scope: !6150)
!6433 = !{i64 2147611401, i64 2147611444, i64 2147611484}
!6434 = !DILocation(line: 152, column: 1, scope: !6150)
!6435 = !{i64 2147611603, i64 2147611646, i64 2147611686}
!6436 = !DILocation(line: 153, column: 1, scope: !6150)
!6437 = !{i64 2147611826, i64 2147611869, i64 2147611909}
!6438 = !DILocation(line: 154, column: 1, scope: !6150)
!6439 = !{i64 2147612040, i64 2147612083, i64 2147612123}
!6440 = !DILocation(line: 155, column: 1, scope: !6150)
!6441 = !{i64 2147612284, i64 2147612327, i64 2147612367}
!6442 = !DILocation(line: 156, column: 1, scope: !6150)
!6443 = !{i64 2147612513, i64 2147612556, i64 2147612596}
!6444 = !DILocation(line: 157, column: 1, scope: !6150)
!6445 = !{i64 2147612742, i64 2147612785, i64 2147612825}
!6446 = !DILocation(line: 158, column: 1, scope: !6150)
!6447 = !{i64 2147612950, i64 2147612993, i64 2147613033}
!6448 = !DILocation(line: 159, column: 1, scope: !6150)
!6449 = !{i64 2147613188, i64 2147613231, i64 2147613271}
!6450 = !DILocation(line: 160, column: 1, scope: !6150)
!6451 = !{i64 2147613414, i64 2147613457, i64 2147613497}
!6452 = !DILocation(line: 161, column: 1, scope: !6150)
!6453 = !{i64 2147613673, i64 2147613716, i64 2147613756}
!6454 = !DILocation(line: 162, column: 1, scope: !6150)
!6455 = !{i64 2147613893, i64 2147613936, i64 2147613976}
!6456 = !DILocation(line: 163, column: 1, scope: !6150)
!6457 = !{i64 2147614125, i64 2147614168, i64 2147614208}
!6458 = !DILocation(line: 164, column: 1, scope: !6150)
!6459 = !{i64 2147614366, i64 2147614409, i64 2147614449}
!6460 = !DILocation(line: 165, column: 1, scope: !6150)
!6461 = !{i64 2147614607, i64 2147614650, i64 2147614690}
!6462 = !DILocation(line: 166, column: 1, scope: !6150)
!6463 = !{i64 2147614830, i64 2147614873, i64 2147614913}
!6464 = !DILocation(line: 167, column: 1, scope: !6150)
!6465 = !{i64 2147615047, i64 2147615090, i64 2147615130}
!6466 = !DILocation(line: 168, column: 1, scope: !6150)
!6467 = !{i64 2147615288, i64 2147615331, i64 2147615371}
!6468 = !DILocation(line: 169, column: 1, scope: !6150)
!6469 = !{i64 2147615475, i64 2147615518, i64 2147615558}
!6470 = !DILocation(line: 170, column: 1, scope: !6150)
!6471 = !{i64 2147615662, i64 2147615705, i64 2147615745}
!6472 = !DILocation(line: 171, column: 1, scope: !6150)
!6473 = !{i64 2147615825, i64 2147615868, i64 2147615908}
!6474 = !DILocation(line: 172, column: 1, scope: !6150)
!6475 = !{i64 2147616030, i64 2147616073, i64 2147616113}
!6476 = !DILocation(line: 173, column: 1, scope: !6150)
!6477 = !{i64 2147616223, i64 2147616266, i64 2147616306}
!6478 = !DILocation(line: 174, column: 1, scope: !6150)
!6479 = !{i64 2147620543, i64 2147620586, i64 2147620626}
!6480 = !DILocation(line: 175, column: 1, scope: !6150)
!6481 = !{i64 2147620766, i64 2147620809, i64 2147620849}
!6482 = !DILocation(line: 176, column: 1, scope: !6150)
!6483 = !{i64 2147620995, i64 2147621038, i64 2147621078}
!6484 = !DILocation(line: 177, column: 1, scope: !6150)
!6485 = !{i64 2147621209, i64 2147621252, i64 2147621292}
!6486 = !DILocation(line: 178, column: 1, scope: !6150)
!6487 = !{i64 2147621411, i64 2147621454, i64 2147621494}
!6488 = !DILocation(line: 179, column: 1, scope: !6150)
!6489 = !{i64 2147621607, i64 2147621650, i64 2147621690}
!6490 = !DILocation(line: 180, column: 1, scope: !6150)
!6491 = !{i64 2147621819, i64 2147621862, i64 2147621902}
!6492 = !DILocation(line: 181, column: 1, scope: !6150)
!6493 = !{i64 2147622040, i64 2147622083, i64 2147622123}
!6494 = !DILocation(line: 182, column: 1, scope: !6150)
!6495 = !{i64 2147622254, i64 2147622297, i64 2147622337}
!6496 = !DILocation(line: 183, column: 1, scope: !6150)
!6497 = !{i64 2147622444, i64 2147622487, i64 2147622527}
!6498 = !DILocation(line: 184, column: 1, scope: !6150)
!6499 = !{i64 2147622643, i64 2147622686, i64 2147622726}
!6500 = !DILocation(line: 185, column: 1, scope: !6150)
!6501 = !{i64 2147622848, i64 2147622891, i64 2147622931}
!6502 = !DILocation(line: 186, column: 1, scope: !6150)
!6503 = !{i64 2147623068, i64 2147623111, i64 2147623151}
!6504 = !DILocation(line: 187, column: 1, scope: !6150)
!6505 = !{i64 2147623269, i64 2147623312, i64 2147623352}
!6506 = !DILocation(line: 188, column: 1, scope: !6150)
!6507 = !{i64 2147623468, i64 2147623511, i64 2147623551}
!6508 = !DILocation(line: 189, column: 1, scope: !6150)
!6509 = !{i64 2147623673, i64 2147623716, i64 2147623756}
!6510 = !DILocation(line: 190, column: 1, scope: !6150)
!6511 = !{i64 2147623842, i64 2147623885, i64 2147623925}
!6512 = !DILocation(line: 191, column: 1, scope: !6150)
!6513 = !{i64 2147624026, i64 2147624069, i64 2147624109}
!6514 = !DILocation(line: 192, column: 1, scope: !6150)
!6515 = !{i64 2147624210, i64 2147624253, i64 2147624293}
!6516 = !DILocation(line: 193, column: 1, scope: !6150)
!6517 = !{i64 2147624397, i64 2147624440, i64 2147624480}
!6518 = !DILocation(line: 194, column: 1, scope: !6150)
!6519 = !{i64 2147624581, i64 2147624624, i64 2147624664}
!6520 = !DILocation(line: 195, column: 1, scope: !6150)
!6521 = !{i64 2147624819, i64 2147624862, i64 2147624902}
!6522 = !DILocation(line: 196, column: 1, scope: !6150)
!6523 = !{i64 2147625049, i64 2147625092, i64 2147625132}
!6524 = !DILocation(line: 197, column: 1, scope: !6150)
!6525 = !{i64 2147625278, i64 2147625321, i64 2147625361}
!6526 = !DILocation(line: 198, column: 1, scope: !6150)
!6527 = !{i64 2147625465, i64 2147625508, i64 2147625548}
!6528 = !DILocation(line: 199, column: 1, scope: !6150)
!6529 = !{i64 2147625661, i64 2147625704, i64 2147625744}
!6530 = !DILocation(line: 200, column: 1, scope: !6150)
!6531 = !{i64 2147625869, i64 2147625912, i64 2147625952}
!6532 = !DILocation(line: 201, column: 1, scope: !6150)
!6533 = !{i64 2147626081, i64 2147626124, i64 2147626164}
!6534 = !DILocation(line: 202, column: 1, scope: !6150)
!6535 = !{i64 2147626280, i64 2147626323, i64 2147626363}
!6536 = !DILocation(line: 203, column: 1, scope: !6150)
!6537 = !{i64 2147626518, i64 2147626561, i64 2147626601}
!6538 = !DILocation(line: 204, column: 1, scope: !6150)
!6539 = !{i64 2147626714, i64 2147626757, i64 2147626797}
!6540 = !DILocation(line: 205, column: 1, scope: !6150)
!6541 = !{i64 2147626916, i64 2147626959, i64 2147626999}
!6542 = !DILocation(line: 206, column: 1, scope: !6150)
!6543 = !{i64 2147627109, i64 2147627152, i64 2147627192}
!6544 = !DILocation(line: 207, column: 1, scope: !6150)
!6545 = !{i64 2147627343, i64 2147627386, i64 2147627426}
!6546 = !DILocation(line: 208, column: 1, scope: !6150)
!6547 = !{i64 2147627506, i64 2147627549, i64 2147627589}
!6548 = !DILocation(line: 209, column: 1, scope: !6150)
!6549 = !{i64 2147627745, i64 2147627788, i64 2147627828}
!6550 = !DILocation(line: 210, column: 1, scope: !6150)
!6551 = !{i64 2147627984, i64 2147628027, i64 2147628067}
!6552 = !DILocation(line: 211, column: 1, scope: !6150)
!6553 = !{i64 2147628220, i64 2147628263, i64 2147628303}
!6554 = !DILocation(line: 212, column: 1, scope: !6150)
!6555 = !{i64 2147628450, i64 2147628493, i64 2147628533}
!6556 = !DILocation(line: 213, column: 1, scope: !6150)
!6557 = !{i64 2147628637, i64 2147628680, i64 2147628720}
!6558 = !DILocation(line: 214, column: 1, scope: !6150)
!6559 = !{i64 2147628836, i64 2147628879, i64 2147628919}
!6560 = !DILocation(line: 215, column: 1, scope: !6150)
!6561 = !{i64 2147629107, i64 2147629150, i64 2147629190}
!6562 = !DILocation(line: 216, column: 1, scope: !6150)
!6563 = !{i64 2147629282, i64 2147629325, i64 2147629365}
!6564 = !DILocation(line: 217, column: 1, scope: !6150)
!6565 = !{i64 2147633577, i64 2147633620, i64 2147633660}
!6566 = !DILocation(line: 218, column: 1, scope: !6150)
!6567 = !{i64 2147633785, i64 2147633828, i64 2147633868}
!6568 = !DILocation(line: 219, column: 1, scope: !6150)
!6569 = !{i64 2147634003, i64 2147634046, i64 2147634086}
!6570 = !DILocation(line: 220, column: 1, scope: !6150)
!6571 = !{i64 2147634193, i64 2147634236, i64 2147634276}
!6572 = !DILocation(line: 221, column: 1, scope: !6150)
!6573 = !{i64 2147634425, i64 2147634468, i64 2147634508}
!6574 = !DILocation(line: 222, column: 1, scope: !6150)
!6575 = !{i64 2147634645, i64 2147634688, i64 2147634728}
!6576 = !DILocation(line: 223, column: 1, scope: !6150)
!6577 = !{i64 2147634841, i64 2147634884, i64 2147634924}
!6578 = !DILocation(line: 224, column: 1, scope: !6150)
!6579 = !{i64 2147635047, i64 2147635090, i64 2147635130}
!6580 = !DILocation(line: 225, column: 1, scope: !6150)
!6581 = !{i64 2147635252, i64 2147635295, i64 2147635335}
!6582 = !DILocation(line: 226, column: 1, scope: !6150)
!6583 = !{i64 2147635478, i64 2147635521, i64 2147635561}
!6584 = !DILocation(line: 227, column: 1, scope: !6150)
!6585 = !{i64 2147635686, i64 2147635729, i64 2147635769}
!6586 = !DILocation(line: 228, column: 1, scope: !6150)
!6587 = !{i64 2147635882, i64 2147635925, i64 2147635965}
!6588 = !DILocation(line: 229, column: 1, scope: !6150)
!6589 = !{i64 2147636114, i64 2147636157, i64 2147636197}
!6590 = !DILocation(line: 230, column: 1, scope: !6150)
!6591 = !{i64 2147636298, i64 2147636341, i64 2147636381}
!6592 = !DILocation(line: 231, column: 1, scope: !6150)
!6593 = !{i64 2147636507, i64 2147636550, i64 2147636590}
!6594 = !DILocation(line: 232, column: 1, scope: !6150)
!6595 = !{i64 2147636715, i64 2147636758, i64 2147636798}
!6596 = !DILocation(line: 233, column: 1, scope: !6150)
!6597 = !{i64 2147636911, i64 2147636954, i64 2147636994}
!6598 = !DILocation(line: 234, column: 1, scope: !6150)
!6599 = !{i64 2147637095, i64 2147637138, i64 2147637178}
!6600 = !DILocation(line: 235, column: 1, scope: !6150)
!6601 = !{i64 2147637321, i64 2147637364, i64 2147637404}
!6602 = !DILocation(line: 236, column: 1, scope: !6150)
!6603 = !{i64 2147637547, i64 2147637590, i64 2147637630}
!6604 = !DILocation(line: 237, column: 1, scope: !6150)
!6605 = !{i64 2147637773, i64 2147637816, i64 2147637856}
!6606 = !DILocation(line: 238, column: 1, scope: !6150)
!6607 = !{i64 2147637999, i64 2147638042, i64 2147638082}
!6608 = !DILocation(line: 239, column: 1, scope: !6150)
!6609 = !{i64 2147638225, i64 2147638268, i64 2147638308}
!6610 = !DILocation(line: 240, column: 1, scope: !6150)
!6611 = !{i64 2147638457, i64 2147638500, i64 2147638540}
!6612 = !DILocation(line: 241, column: 1, scope: !6150)
!6613 = !{i64 2147638695, i64 2147638738, i64 2147638778}
!6614 = !DILocation(line: 242, column: 1, scope: !6150)
!6615 = !{i64 2147638915, i64 2147638958, i64 2147638998}
!6616 = !DILocation(line: 243, column: 1, scope: !6150)
!6617 = !{i64 2147639159, i64 2147639202, i64 2147639242}
!6618 = !DILocation(line: 244, column: 1, scope: !6150)
!6619 = !{i64 2147639400, i64 2147639443, i64 2147639483}
!6620 = !DILocation(line: 245, column: 1, scope: !6150)
!6621 = !{i64 2147639635, i64 2147639678, i64 2147639718}
!6622 = !DILocation(line: 246, column: 1, scope: !6150)
!6623 = !{i64 2147639867, i64 2147639910, i64 2147639950}
!6624 = !DILocation(line: 247, column: 1, scope: !6150)
!6625 = !{i64 2147640069, i64 2147640112, i64 2147640152}
!6626 = !DILocation(line: 248, column: 1, scope: !6150)
!6627 = !{i64 2147640319, i64 2147640362, i64 2147640402}
!6628 = !DILocation(line: 249, column: 1, scope: !6150)
!6629 = !{i64 2147640557, i64 2147640600, i64 2147640640}
!6630 = !DILocation(line: 250, column: 1, scope: !6150)
!6631 = !{i64 2147640765, i64 2147640808, i64 2147640848}
!6632 = !DILocation(line: 251, column: 1, scope: !6150)
!6633 = !{i64 2147640961, i64 2147641004, i64 2147641044}
!6634 = !DILocation(line: 252, column: 1, scope: !6150)
!6635 = !{i64 2147641145, i64 2147641188, i64 2147641228}
!6636 = !DILocation(line: 253, column: 1, scope: !6150)
!6637 = !{i64 2147641362, i64 2147641405, i64 2147641445}
!6638 = !DILocation(line: 254, column: 1, scope: !6150)
!6639 = !{i64 2147641567, i64 2147641610, i64 2147641650}
!6640 = !DILocation(line: 255, column: 1, scope: !6150)
!6641 = !{i64 2147641802, i64 2147641845, i64 2147641885}
!6642 = !DILocation(line: 256, column: 1, scope: !6150)
!6643 = !{i64 2147642025, i64 2147642068, i64 2147642108}
!6644 = !DILocation(line: 257, column: 1, scope: !6150)
!6645 = !{i64 2147646309, i64 2147646352, i64 2147646392}
!6646 = !DILocation(line: 258, column: 1, scope: !6150)
!6647 = !{i64 2147646547, i64 2147646590, i64 2147646630}
!6648 = !DILocation(line: 259, column: 1, scope: !6150)
!6649 = !{i64 2147646785, i64 2147646828, i64 2147646868}
!6650 = !DILocation(line: 260, column: 1, scope: !6150)
!6651 = !{i64 2147646957, i64 2147647000, i64 2147647040}
!6652 = !DILocation(line: 261, column: 1, scope: !6150)
!6653 = !{i64 2147647172, i64 2147647215, i64 2147647255}
!6654 = !DILocation(line: 262, column: 1, scope: !6150)
!6655 = !{i64 2147647386, i64 2147647429, i64 2147647469}
!6656 = !DILocation(line: 263, column: 1, scope: !6150)
!6657 = !{i64 2147647588, i64 2147647631, i64 2147647671}
!6658 = !DILocation(line: 264, column: 1, scope: !6150)
!6659 = !{i64 2147647805, i64 2147647848, i64 2147647888}
!6660 = !DILocation(line: 265, column: 1, scope: !6150)
!6661 = !{i64 2147648058, i64 2147648101, i64 2147648141}
!6662 = !DILocation(line: 266, column: 1, scope: !6150)
!6663 = !{i64 2147648302, i64 2147648345, i64 2147648385}
!6664 = !DILocation(line: 267, column: 1, scope: !6150)
!6665 = !{i64 2147648519, i64 2147648562, i64 2147648602}
!6666 = !DILocation(line: 268, column: 1, scope: !6150)
!6667 = !{i64 2147648724, i64 2147648767, i64 2147648807}
!6668 = !DILocation(line: 269, column: 1, scope: !6150)
!6669 = !{i64 2147648917, i64 2147648960, i64 2147649000}
!6670 = !DILocation(line: 270, column: 1, scope: !6150)
!6671 = !{i64 2147649170, i64 2147649213, i64 2147649253}
!6672 = !DILocation(line: 271, column: 1, scope: !6150)
!6673 = !{i64 2147649378, i64 2147649421, i64 2147649461}
!6674 = !DILocation(line: 272, column: 1, scope: !6150)
!6675 = !{i64 2147649574, i64 2147649617, i64 2147649657}
!6676 = !DILocation(line: 273, column: 1, scope: !6150)
!6677 = !{i64 2147649788, i64 2147649831, i64 2147649871}
!6678 = !DILocation(line: 274, column: 1, scope: !6150)
!6679 = !{i64 2147649996, i64 2147650039, i64 2147650079}
!6680 = !DILocation(line: 275, column: 1, scope: !6150)
!6681 = !{i64 2147650186, i64 2147650229, i64 2147650269}
!6682 = !DILocation(line: 276, column: 1, scope: !6150)
!6683 = !{i64 2147650400, i64 2147650443, i64 2147650483}
!6684 = !DILocation(line: 277, column: 1, scope: !6150)
!6685 = !{i64 2147650662, i64 2147650705, i64 2147650745}
!6686 = !DILocation(line: 278, column: 1, scope: !6150)
!6687 = !{i64 2147650873, i64 2147650916, i64 2147650956}
!6688 = !DILocation(line: 279, column: 1, scope: !6150)
!6689 = !{i64 2147651117, i64 2147651160, i64 2147651200}
!6690 = !DILocation(line: 280, column: 1, scope: !6150)
!6691 = !{i64 2147651328, i64 2147651371, i64 2147651411}
!6692 = !DILocation(line: 281, column: 1, scope: !6150)
!6693 = !{i64 2147651557, i64 2147651600, i64 2147651640}
!6694 = !DILocation(line: 282, column: 1, scope: !6150)
!6695 = !{i64 2147651822, i64 2147651865, i64 2147651905}
!6696 = !DILocation(line: 283, column: 1, scope: !6150)
!6697 = !{i64 2147652027, i64 2147652070, i64 2147652110}
!6698 = !DILocation(line: 284, column: 1, scope: !6150)
!6699 = !{i64 2147652223, i64 2147652266, i64 2147652306}
!6700 = !DILocation(line: 285, column: 1, scope: !6150)
!6701 = !{i64 2147652446, i64 2147652489, i64 2147652529}
!6702 = !DILocation(line: 286, column: 1, scope: !6150)
!6703 = !{i64 2147652609, i64 2147652652, i64 2147652692}
!6704 = !DILocation(line: 287, column: 1, scope: !6150)
!6705 = !{i64 2147652814, i64 2147652857, i64 2147652897}
!6706 = !DILocation(line: 288, column: 1, scope: !6150)
!6707 = !{i64 2147653034, i64 2147653077, i64 2147653117}
!6708 = !DILocation(line: 289, column: 1, scope: !6150)
!6709 = !{i64 2147653248, i64 2147653291, i64 2147653331}
!6710 = !DILocation(line: 290, column: 1, scope: !6150)
!6711 = !{i64 2147653492, i64 2147653535, i64 2147653575}
!6712 = !DILocation(line: 291, column: 1, scope: !6150)
!6713 = !{i64 2147653724, i64 2147653767, i64 2147653807}
!6714 = !DILocation(line: 292, column: 1, scope: !6150)
!6715 = !{i64 2147653938, i64 2147653981, i64 2147654021}
!6716 = !DILocation(line: 293, column: 1, scope: !6150)
!6717 = !{i64 2147654149, i64 2147654192, i64 2147654232}
!6718 = !DILocation(line: 294, column: 1, scope: !6150)
!6719 = !{i64 2147654342, i64 2147654385, i64 2147654425}
!6720 = !DILocation(line: 295, column: 1, scope: !6150)
!6721 = !{i64 2147654541, i64 2147654584, i64 2147654624}
!6722 = !DILocation(line: 296, column: 1, scope: !6150)
!6723 = !{i64 2147654713, i64 2147654756, i64 2147654796}
!6724 = !DILocation(line: 297, column: 1, scope: !6150)
!6725 = !{i64 2147654906, i64 2147654949, i64 2147654989}
!6726 = !DILocation(line: 298, column: 1, scope: !6150)
!6727 = !{i64 2147659163, i64 2147659206, i64 2147659246}
!6728 = !DILocation(line: 299, column: 1, scope: !6150)
!6729 = !{i64 2147659326, i64 2147659369, i64 2147659409}
!6730 = !DILocation(line: 300, column: 1, scope: !6150)
!6731 = !{i64 2147659528, i64 2147659571, i64 2147659611}
!6732 = !DILocation(line: 301, column: 1, scope: !6150)
!6733 = !{i64 2147659733, i64 2147659776, i64 2147659816}
!6734 = !DILocation(line: 302, column: 1, scope: !6150)
!6735 = !{i64 2147659941, i64 2147659984, i64 2147660024}
!6736 = !DILocation(line: 303, column: 1, scope: !6150)
!6737 = !{i64 2147660134, i64 2147660177, i64 2147660217}
!6738 = !DILocation(line: 304, column: 1, scope: !6150)
!6739 = !{i64 2147660321, i64 2147660364, i64 2147660404}
!6740 = !DILocation(line: 305, column: 1, scope: !6150)
!6741 = !{i64 2147660548, i64 2147660591, i64 2147660631}
!6742 = !DILocation(line: 306, column: 1, scope: !6150)
!6743 = !{i64 2147660765, i64 2147660808, i64 2147660848}
!6744 = !DILocation(line: 307, column: 1, scope: !6150)
!6745 = !{i64 2147661057, i64 2147661100, i64 2147661140}
!6746 = !DILocation(line: 308, column: 1, scope: !6150)
!6747 = !{i64 2147661289, i64 2147661332, i64 2147661372}
!6748 = !DILocation(line: 309, column: 1, scope: !6150)
!6749 = !{i64 2147661506, i64 2147661549, i64 2147661589}
!6750 = !DILocation(line: 310, column: 1, scope: !6150)
!6751 = !{i64 2147661713, i64 2147661756, i64 2147661796}
!6752 = !DILocation(line: 311, column: 1, scope: !6150)
!6753 = !{i64 2147661914, i64 2147661957, i64 2147661997}
!6754 = !DILocation(line: 312, column: 1, scope: !6150)
!6755 = !{i64 2147662146, i64 2147662189, i64 2147662229}
!6756 = !DILocation(line: 313, column: 1, scope: !6150)
!6757 = !{i64 2147662354, i64 2147662397, i64 2147662437}
!6758 = !DILocation(line: 314, column: 1, scope: !6150)
!6759 = !{i64 2147662544, i64 2147662587, i64 2147662627}
!6760 = !DILocation(line: 315, column: 1, scope: !6150)
!6761 = !{i64 2147662770, i64 2147662813, i64 2147662853}
!6762 = !DILocation(line: 316, column: 1, scope: !6150)
!6763 = !{i64 2147662959, i64 2147663002, i64 2147663042}
!6764 = !DILocation(line: 317, column: 1, scope: !6150)
!6765 = !{i64 2147663230, i64 2147663273, i64 2147663313}
!6766 = !DILocation(line: 318, column: 1, scope: !6150)
!6767 = !{i64 2147663450, i64 2147663493, i64 2147663533}
!6768 = !DILocation(line: 319, column: 1, scope: !6150)
!6769 = !{i64 2147663703, i64 2147663746, i64 2147663786}
!6770 = !DILocation(line: 320, column: 1, scope: !6150)
!6771 = !{i64 2147663911, i64 2147663954, i64 2147663994}
!6772 = !DILocation(line: 321, column: 1, scope: !6150)
!6773 = !{i64 2147664143, i64 2147664186, i64 2147664226}
!6774 = !DILocation(line: 322, column: 1, scope: !6150)
!6775 = !{i64 2147664354, i64 2147664397, i64 2147664437}
!6776 = !DILocation(line: 323, column: 1, scope: !6150)
!6777 = !{i64 2147664544, i64 2147664587, i64 2147664627}
!6778 = !DILocation(line: 324, column: 1, scope: !6150)
!6779 = !{i64 2147664758, i64 2147664801, i64 2147664841}
!6780 = !DILocation(line: 325, column: 1, scope: !6150)
!6781 = !{i64 2147664957, i64 2147665000, i64 2147665040}
!6782 = !DILocation(line: 326, column: 1, scope: !6150)
!6783 = !{i64 2147665144, i64 2147665187, i64 2147665227}
!6784 = !DILocation(line: 327, column: 1, scope: !6150)
!6785 = !{i64 2147665352, i64 2147665395, i64 2147665435}
!6786 = !DILocation(line: 328, column: 1, scope: !6150)
!6787 = !{i64 2147665581, i64 2147665624, i64 2147665664}
!6788 = !DILocation(line: 329, column: 1, scope: !6150)
!6789 = !{i64 2147665783, i64 2147665826, i64 2147665866}
!6790 = !DILocation(line: 330, column: 1, scope: !6150)
!6791 = !{i64 2147665982, i64 2147666025, i64 2147666065}
!6792 = !DILocation(line: 331, column: 1, scope: !6150)
!6793 = !{i64 2147666172, i64 2147666215, i64 2147666255}
!6794 = !DILocation(line: 332, column: 1, scope: !6150)
!6795 = !{i64 2147666389, i64 2147666432, i64 2147666472}
!6796 = !DILocation(line: 334, column: 1, scope: !6150)
!6797 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !431, file: !431, line: 30, type: !438, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6798)
!6798 = !{!6799, !6800}
!6799 = !DILocalVariable(name: "arg", arg: 1, scope: !6797, file: !431, line: 30, type: !440)
!6800 = !DILocalVariable(name: "key", scope: !6797, file: !431, line: 32, type: !208)
!6801 = !DILocation(line: 0, scope: !6797)
!6802 = !DILocation(line: 37, column: 2, scope: !6797)
!6803 = !DILocation(line: 38, column: 2, scope: !6797)
!6804 = !DILocation(line: 55, column: 2, scope: !6805, inlinedAt: !6812)
!6805 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6806, file: !6806, line: 42, type: !6807, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6809)
!6806 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6807 = !DISubroutineType(types: !6808)
!6808 = !{!32}
!6809 = !{!6810, !6811}
!6810 = !DILocalVariable(name: "key", scope: !6805, file: !6806, line: 44, type: !32)
!6811 = !DILocalVariable(name: "tmp", scope: !6805, file: !6806, line: 53, type: !32)
!6812 = distinct !DILocation(line: 40, column: 8, scope: !6797)
!6813 = !{i64 1828433}
!6814 = !DILocation(line: 0, scope: !6805, inlinedAt: !6812)
!6815 = !DILocalVariable(name: "key", arg: 1, scope: !6816, file: !6806, line: 84, type: !32)
!6816 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6806, file: !6806, line: 84, type: !6817, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6819)
!6817 = !DISubroutineType(types: !6818)
!6818 = !{null, !32}
!6819 = !{!6815}
!6820 = !DILocation(line: 0, scope: !6816, inlinedAt: !6821)
!6821 = distinct !DILocation(line: 47, column: 2, scope: !6797)
!6822 = !DILocation(line: 95, column: 2, scope: !6816, inlinedAt: !6821)
!6823 = !{i64 1829250}
!6824 = !DILocation(line: 51, column: 18, scope: !6797)
!6825 = !DILocation(line: 53, column: 2, scope: !6797)
!6826 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6827, file: !6827, line: 1609, type: !3278, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !639)
!6827 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6828 = !DILocation(line: 1611, column: 3, scope: !6826)
!6829 = !DILocation(line: 1612, column: 1, scope: !6826)
!6830 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6827, file: !6827, line: 1629, type: !3278, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !639)
!6831 = !DILocation(line: 1631, column: 3, scope: !6830)
!6832 = !DILocation(line: 1632, column: 1, scope: !6830)
!6833 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !461, file: !461, line: 26, type: !467, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !6834)
!6834 = !{!6835}
!6835 = !DILocalVariable(name: "dev", arg: 1, scope: !6833, file: !461, line: 26, type: !469)
!6836 = !DILocation(line: 0, scope: !6833)
!6837 = !DILocation(line: 68, column: 2, scope: !6833)
!6838 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6839, file: !6839, line: 14, type: !5130, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !6840)
!6839 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6840 = !{!6841, !6842}
!6841 = !DILocalVariable(name: "fmt", arg: 1, scope: !6838, file: !6839, line: 14, type: !140)
!6842 = !DILocalVariable(name: "ap", scope: !6838, file: !6839, line: 16, type: !6843)
!6843 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4198, line: 99, baseType: !6844)
!6844 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4198, line: 40, baseType: !6845)
!6845 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6839, baseType: !6846)
!6846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6847)
!6847 = !{!6848}
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6846, file: !6839, line: 16, baseType: !124, size: 32)
!6849 = !DILocation(line: 0, scope: !6838)
!6850 = !DILocation(line: 16, column: 2, scope: !6838)
!6851 = !DILocation(line: 16, column: 10, scope: !6838)
!6852 = !DILocation(line: 18, column: 2, scope: !6838)
!6853 = !DILocation(line: 19, column: 2, scope: !6838)
!6854 = !DILocation(line: 20, column: 2, scope: !6838)
!6855 = !DILocation(line: 21, column: 1, scope: !6838)
!6856 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6839, file: !6839, line: 23, type: !6857, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !6859)
!6857 = !DISubroutineType(types: !6858)
!6858 = !{null, !140, !6843}
!6859 = !{!6860, !6861}
!6860 = !DILocalVariable(name: "fmt", arg: 1, scope: !6856, file: !6839, line: 23, type: !140)
!6861 = !DILocalVariable(name: "ap", arg: 2, scope: !6856, file: !6839, line: 23, type: !6843)
!6862 = !DILocation(line: 0, scope: !6856)
!6863 = !DILocation(line: 25, column: 2, scope: !6856)
!6864 = !DILocation(line: 26, column: 1, scope: !6856)
!6865 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6839, file: !6839, line: 52, type: !6866, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !6868)
!6866 = !DISubroutineType(types: !6867)
!6867 = !{null, !125, !13, !272}
!6868 = !{!6869, !6870, !6871, !6872}
!6869 = !DILocalVariable(name: "level", arg: 1, scope: !6865, file: !6839, line: 52, type: !125)
!6870 = !DILocalVariable(name: "data", arg: 2, scope: !6865, file: !6839, line: 52, type: !13)
!6871 = !DILocalVariable(name: "size", arg: 3, scope: !6865, file: !6839, line: 52, type: !272)
!6872 = !DILocalVariable(name: "data_buffer", scope: !6865, file: !6839, line: 54, type: !140)
!6873 = !DILocation(line: 0, scope: !6865)
!6874 = !DILocation(line: 55, column: 14, scope: !6865)
!6875 = !DILocation(line: 55, column: 2, scope: !6865)
!6876 = !DILocation(line: 56, column: 3, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6865, file: !6839, line: 55, column: 20)
!6878 = !DILocation(line: 57, column: 3, scope: !6877)
!6879 = !DILocation(line: 59, column: 7, scope: !6877)
!6880 = distinct !{!6880, !6875, !6881}
!6881 = !DILocation(line: 65, column: 2, scope: !6865)
!6882 = !DILocation(line: 66, column: 1, scope: !6865)
!6883 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3442, file: !3442, line: 175, type: !3443, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !6884)
!6884 = !{!6885}
!6885 = !DILocalVariable(name: "level", arg: 1, scope: !6883, file: !3442, line: 175, type: !125)
!6886 = !DILocation(line: 0, scope: !6883)
!6887 = !DILocation(line: 177, column: 2, scope: !6883)
!6888 = !DILocation(line: 189, column: 1, scope: !6883)
!6889 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6839, file: !6839, line: 28, type: !6890, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !6892)
!6890 = !DISubroutineType(types: !6891)
!6891 = !{null, !140, !272}
!6892 = !{!6893, !6894, !6895, !6897, !6899}
!6893 = !DILocalVariable(name: "data", arg: 1, scope: !6889, file: !6839, line: 28, type: !140)
!6894 = !DILocalVariable(name: "length", arg: 2, scope: !6889, file: !6839, line: 28, type: !272)
!6895 = !DILocalVariable(name: "i", scope: !6896, file: !6839, line: 30, type: !272)
!6896 = distinct !DILexicalBlock(scope: !6889, file: !6839, line: 30, column: 2)
!6897 = !DILocalVariable(name: "i", scope: !6898, file: !6839, line: 40, type: !272)
!6898 = distinct !DILexicalBlock(scope: !6889, file: !6839, line: 40, column: 2)
!6899 = !DILocalVariable(name: "c", scope: !6900, file: !6839, line: 42, type: !151)
!6900 = distinct !DILexicalBlock(scope: !6901, file: !6839, line: 41, column: 19)
!6901 = distinct !DILexicalBlock(scope: !6902, file: !6839, line: 41, column: 7)
!6902 = distinct !DILexicalBlock(scope: !6903, file: !6839, line: 40, column: 54)
!6903 = distinct !DILexicalBlock(scope: !6898, file: !6839, line: 40, column: 2)
!6904 = !DILocation(line: 0, scope: !6889)
!6905 = !DILocation(line: 0, scope: !6896)
!6906 = !DILocation(line: 30, column: 2, scope: !6896)
!6907 = !DILocation(line: 38, column: 2, scope: !6889)
!6908 = !DILocation(line: 0, scope: !6898)
!6909 = !DILocation(line: 40, column: 2, scope: !6898)
!6910 = !DILocation(line: 31, column: 9, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6912, file: !6839, line: 31, column: 7)
!6912 = distinct !DILexicalBlock(scope: !6913, file: !6839, line: 30, column: 54)
!6913 = distinct !DILexicalBlock(scope: !6896, file: !6839, line: 30, column: 2)
!6914 = !DILocation(line: 31, column: 7, scope: !6912)
!6915 = !DILocation(line: 32, column: 35, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6911, file: !6839, line: 31, column: 19)
!6917 = !DILocation(line: 32, column: 20, scope: !6916)
!6918 = !DILocation(line: 32, column: 4, scope: !6916)
!6919 = !DILocation(line: 33, column: 3, scope: !6916)
!6920 = !DILocation(line: 34, column: 4, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6911, file: !6839, line: 33, column: 10)
!6922 = !DILocation(line: 30, column: 50, scope: !6913)
!6923 = !DILocation(line: 30, column: 24, scope: !6913)
!6924 = distinct !{!6924, !6906, !6925}
!6925 = !DILocation(line: 36, column: 2, scope: !6896)
!6926 = !DILocation(line: 49, column: 2, scope: !6889)
!6927 = !DILocation(line: 50, column: 1, scope: !6889)
!6928 = !DILocation(line: 41, column: 9, scope: !6901)
!6929 = !DILocation(line: 41, column: 7, scope: !6902)
!6930 = !DILocation(line: 42, column: 22, scope: !6900)
!6931 = !DILocation(line: 0, scope: !6900)
!6932 = !DILocation(line: 44, column: 25, scope: !6900)
!6933 = !DILocation(line: 44, column: 17, scope: !6900)
!6934 = !DILocation(line: 44, column: 33, scope: !6900)
!6935 = !DILocation(line: 44, column: 4, scope: !6900)
!6936 = !DILocation(line: 45, column: 3, scope: !6900)
!6937 = !DILocation(line: 46, column: 4, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6901, file: !6839, line: 45, column: 10)
!6939 = !DILocation(line: 40, column: 50, scope: !6903)
!6940 = !DILocation(line: 40, column: 24, scope: !6903)
!6941 = distinct !{!6941, !6909, !6942}
!6942 = !DILocation(line: 48, column: 2, scope: !6898)
!6943 = distinct !DISubprogram(name: "isprint", scope: !5923, file: !5923, line: 37, type: !410, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !6944)
!6944 = !{!6945}
!6945 = !DILocalVariable(name: "c", arg: 1, scope: !6943, file: !5923, line: 37, type: !125)
!6946 = !DILocation(line: 0, scope: !6943)
!6947 = !DILocation(line: 39, column: 38, scope: !6943)
!6948 = !DILocation(line: 39, column: 2, scope: !6943)
!6949 = distinct !DISubprogram(name: "_copy", scope: !6950, file: !6950, line: 40, type: !6951, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6953)
!6950 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6951 = !DISubroutineType(types: !6952)
!6952 = !{!32, !184, !32, !490, !32}
!6953 = !{!6954, !6955, !6956, !6957}
!6954 = !DILocalVariable(name: "to", arg: 1, scope: !6949, file: !6950, line: 40, type: !184)
!6955 = !DILocalVariable(name: "to_len", arg: 2, scope: !6949, file: !6950, line: 40, type: !32)
!6956 = !DILocalVariable(name: "from", arg: 3, scope: !6949, file: !6950, line: 41, type: !490)
!6957 = !DILocalVariable(name: "from_len", arg: 4, scope: !6949, file: !6950, line: 41, type: !32)
!6958 = !DILocation(line: 0, scope: !6949)
!6959 = !DILocation(line: 43, column: 15, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6949, file: !6950, line: 43, column: 6)
!6961 = !DILocation(line: 43, column: 6, scope: !6949)
!6962 = !DILocation(line: 44, column: 9, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6960, file: !6950, line: 43, column: 26)
!6964 = !DILocation(line: 45, column: 3, scope: !6963)
!6965 = !DILocation(line: 0, scope: !6960)
!6966 = !DILocation(line: 49, column: 1, scope: !6949)
!6967 = distinct !DISubprogram(name: "_set", scope: !6950, file: !6950, line: 51, type: !6968, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6970)
!6968 = !DISubroutineType(types: !6969)
!6969 = !{null, !124, !150, !32}
!6970 = !{!6971, !6972, !6973}
!6971 = !DILocalVariable(name: "to", arg: 1, scope: !6967, file: !6950, line: 51, type: !124)
!6972 = !DILocalVariable(name: "val", arg: 2, scope: !6967, file: !6950, line: 51, type: !150)
!6973 = !DILocalVariable(name: "len", arg: 3, scope: !6967, file: !6950, line: 51, type: !32)
!6974 = !DILocation(line: 0, scope: !6967)
!6975 = !DILocation(line: 53, column: 19, scope: !6967)
!6976 = !DILocation(line: 53, column: 8, scope: !6967)
!6977 = !DILocation(line: 54, column: 1, scope: !6967)
!6978 = distinct !DISubprogram(name: "_double_byte", scope: !6950, file: !6950, line: 59, type: !6979, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6981)
!6979 = !DISubroutineType(types: !6980)
!6980 = !{!150, !150}
!6981 = !{!6982}
!6982 = !DILocalVariable(name: "a", arg: 1, scope: !6978, file: !6950, line: 59, type: !150)
!6983 = !DILocation(line: 0, scope: !6978)
!6984 = !DILocation(line: 61, column: 12, scope: !6978)
!6985 = !DILocation(line: 61, column: 27, scope: !6978)
!6986 = !DILocation(line: 61, column: 17, scope: !6978)
!6987 = !DILocation(line: 61, column: 2, scope: !6978)
!6988 = distinct !DISubprogram(name: "_compare", scope: !6950, file: !6950, line: 64, type: !6989, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6991)
!6989 = !DISubroutineType(types: !6990)
!6990 = !{!125, !490, !490, !272}
!6991 = !{!6992, !6993, !6994, !6995, !6996, !6997, !6998}
!6992 = !DILocalVariable(name: "a", arg: 1, scope: !6988, file: !6950, line: 64, type: !490)
!6993 = !DILocalVariable(name: "b", arg: 2, scope: !6988, file: !6950, line: 64, type: !490)
!6994 = !DILocalVariable(name: "size", arg: 3, scope: !6988, file: !6950, line: 64, type: !272)
!6995 = !DILocalVariable(name: "tempa", scope: !6988, file: !6950, line: 66, type: !490)
!6996 = !DILocalVariable(name: "tempb", scope: !6988, file: !6950, line: 67, type: !490)
!6997 = !DILocalVariable(name: "result", scope: !6988, file: !6950, line: 68, type: !150)
!6998 = !DILocalVariable(name: "i", scope: !6999, file: !6950, line: 70, type: !32)
!6999 = distinct !DILexicalBlock(scope: !6988, file: !6950, line: 70, column: 2)
!7000 = !DILocation(line: 0, scope: !6988)
!7001 = !DILocation(line: 0, scope: !6999)
!7002 = !DILocation(line: 70, column: 29, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6999, file: !6950, line: 70, column: 2)
!7004 = !DILocation(line: 70, column: 2, scope: !6999)
!7005 = !DILocation(line: 73, column: 2, scope: !6988)
!7006 = !DILocation(line: 71, column: 13, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !7003, file: !6950, line: 70, column: 42)
!7008 = !DILocation(line: 71, column: 24, scope: !7007)
!7009 = !DILocation(line: 71, column: 22, scope: !7007)
!7010 = !DILocation(line: 71, column: 10, scope: !7007)
!7011 = !DILocation(line: 70, column: 38, scope: !7003)
!7012 = distinct !{!7012, !7004, !7013}
!7013 = !DILocation(line: 72, column: 2, scope: !6999)
!7014 = distinct !DISubprogram(name: "tc_aes128_set_decrypt_key", scope: !501, file: !501, line: 62, type: !7015, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7017)
!7015 = !DISubroutineType(types: !7016)
!7016 = !{!125, !491, !490}
!7017 = !{!7018, !7019}
!7018 = !DILocalVariable(name: "s", arg: 1, scope: !7014, file: !501, line: 62, type: !491)
!7019 = !DILocalVariable(name: "k", arg: 2, scope: !7014, file: !501, line: 62, type: !490)
!7020 = !DILocation(line: 0, scope: !7014)
!7021 = !DILocation(line: 64, column: 9, scope: !7014)
!7022 = !DILocation(line: 64, column: 2, scope: !7014)
!7023 = distinct !DISubprogram(name: "tc_aes_decrypt", scope: !501, file: !501, line: 129, type: !7024, scopeLine: 130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7027)
!7024 = !DISubroutineType(types: !7025)
!7025 = !{!125, !184, !490, !7026}
!7026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !491)
!7027 = !{!7028, !7029, !7030, !7031, !7032}
!7028 = !DILocalVariable(name: "out", arg: 1, scope: !7023, file: !501, line: 129, type: !184)
!7029 = !DILocalVariable(name: "in", arg: 2, scope: !7023, file: !501, line: 129, type: !490)
!7030 = !DILocalVariable(name: "s", arg: 3, scope: !7023, file: !501, line: 129, type: !7026)
!7031 = !DILocalVariable(name: "state", scope: !7023, file: !501, line: 131, type: !311)
!7032 = !DILocalVariable(name: "i", scope: !7023, file: !501, line: 132, type: !32)
!7033 = !DILocation(line: 0, scope: !7023)
!7034 = !DILocation(line: 131, column: 2, scope: !7023)
!7035 = !DILocation(line: 131, column: 10, scope: !7023)
!7036 = !DILocation(line: 134, column: 10, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7023, file: !501, line: 134, column: 6)
!7038 = !DILocation(line: 134, column: 6, scope: !7023)
!7039 = !DILocation(line: 142, column: 8, scope: !7023)
!7040 = !DILocation(line: 144, column: 32, scope: !7023)
!7041 = !DILocation(line: 144, column: 2, scope: !7023)
!7042 = !DILocation(line: 146, column: 2, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7023, file: !501, line: 146, column: 2)
!7044 = !DILocation(line: 147, column: 3, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7046, file: !501, line: 146, column: 31)
!7046 = distinct !DILexicalBlock(scope: !7043, file: !501, line: 146, column: 2)
!7047 = !DILocation(line: 148, column: 3, scope: !7045)
!7048 = !DILocation(line: 149, column: 37, scope: !7045)
!7049 = !DILocation(line: 149, column: 33, scope: !7045)
!7050 = !DILocation(line: 149, column: 3, scope: !7045)
!7051 = !DILocation(line: 150, column: 3, scope: !7045)
!7052 = !DILocation(line: 146, column: 26, scope: !7046)
!7053 = !DILocation(line: 146, column: 21, scope: !7046)
!7054 = distinct !{!7054, !7042, !7055}
!7055 = !DILocation(line: 151, column: 2, scope: !7043)
!7056 = !DILocation(line: 144, column: 23, scope: !7023)
!7057 = !DILocation(line: 153, column: 2, scope: !7023)
!7058 = !DILocation(line: 154, column: 2, scope: !7023)
!7059 = !DILocation(line: 155, column: 2, scope: !7023)
!7060 = !DILocation(line: 157, column: 8, scope: !7023)
!7061 = !DILocation(line: 160, column: 2, scope: !7023)
!7062 = !DILocation(line: 163, column: 2, scope: !7023)
!7063 = !DILocation(line: 164, column: 1, scope: !7023)
!7064 = distinct !DISubprogram(name: "add_round_key", scope: !501, file: !501, line: 92, type: !7065, scopeLine: 93, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7068)
!7065 = !DISubroutineType(types: !7066)
!7066 = !{null, !184, !7067}
!7067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5846, size: 32)
!7068 = !{!7069, !7070}
!7069 = !DILocalVariable(name: "s", arg: 1, scope: !7064, file: !501, line: 92, type: !184)
!7070 = !DILocalVariable(name: "k", arg: 2, scope: !7064, file: !501, line: 92, type: !7067)
!7071 = !DILocation(line: 0, scope: !7064)
!7072 = !DILocation(line: 94, column: 20, scope: !7064)
!7073 = !DILocation(line: 94, column: 25, scope: !7064)
!7074 = !DILocation(line: 94, column: 7, scope: !7064)
!7075 = !DILocation(line: 94, column: 51, scope: !7064)
!7076 = !DILocation(line: 94, column: 56, scope: !7064)
!7077 = !DILocation(line: 94, column: 33, scope: !7064)
!7078 = !DILocation(line: 94, column: 38, scope: !7064)
!7079 = !DILocation(line: 95, column: 20, scope: !7064)
!7080 = !DILocation(line: 95, column: 25, scope: !7064)
!7081 = !DILocation(line: 95, column: 2, scope: !7064)
!7082 = !DILocation(line: 95, column: 7, scope: !7064)
!7083 = !DILocation(line: 95, column: 50, scope: !7064)
!7084 = !DILocation(line: 95, column: 32, scope: !7064)
!7085 = !DILocation(line: 95, column: 37, scope: !7064)
!7086 = !DILocation(line: 96, column: 20, scope: !7064)
!7087 = !DILocation(line: 96, column: 25, scope: !7064)
!7088 = !DILocation(line: 96, column: 2, scope: !7064)
!7089 = !DILocation(line: 96, column: 7, scope: !7064)
!7090 = !DILocation(line: 96, column: 51, scope: !7064)
!7091 = !DILocation(line: 96, column: 56, scope: !7064)
!7092 = !DILocation(line: 96, column: 33, scope: !7064)
!7093 = !DILocation(line: 96, column: 38, scope: !7064)
!7094 = !DILocation(line: 97, column: 20, scope: !7064)
!7095 = !DILocation(line: 97, column: 25, scope: !7064)
!7096 = !DILocation(line: 97, column: 2, scope: !7064)
!7097 = !DILocation(line: 97, column: 7, scope: !7064)
!7098 = !DILocation(line: 97, column: 50, scope: !7064)
!7099 = !DILocation(line: 97, column: 32, scope: !7064)
!7100 = !DILocation(line: 97, column: 37, scope: !7064)
!7101 = !DILocation(line: 98, column: 20, scope: !7064)
!7102 = !DILocation(line: 98, column: 25, scope: !7064)
!7103 = !DILocation(line: 98, column: 2, scope: !7064)
!7104 = !DILocation(line: 98, column: 7, scope: !7064)
!7105 = !DILocation(line: 98, column: 51, scope: !7064)
!7106 = !DILocation(line: 98, column: 56, scope: !7064)
!7107 = !DILocation(line: 98, column: 33, scope: !7064)
!7108 = !DILocation(line: 98, column: 38, scope: !7064)
!7109 = !DILocation(line: 99, column: 21, scope: !7064)
!7110 = !DILocation(line: 99, column: 26, scope: !7064)
!7111 = !DILocation(line: 99, column: 2, scope: !7064)
!7112 = !DILocation(line: 99, column: 8, scope: !7064)
!7113 = !DILocation(line: 99, column: 52, scope: !7064)
!7114 = !DILocation(line: 99, column: 33, scope: !7064)
!7115 = !DILocation(line: 99, column: 39, scope: !7064)
!7116 = !DILocation(line: 100, column: 21, scope: !7064)
!7117 = !DILocation(line: 100, column: 26, scope: !7064)
!7118 = !DILocation(line: 100, column: 2, scope: !7064)
!7119 = !DILocation(line: 100, column: 8, scope: !7064)
!7120 = !DILocation(line: 100, column: 53, scope: !7064)
!7121 = !DILocation(line: 100, column: 58, scope: !7064)
!7122 = !DILocation(line: 100, column: 34, scope: !7064)
!7123 = !DILocation(line: 100, column: 40, scope: !7064)
!7124 = !DILocation(line: 101, column: 21, scope: !7064)
!7125 = !DILocation(line: 101, column: 26, scope: !7064)
!7126 = !DILocation(line: 101, column: 2, scope: !7064)
!7127 = !DILocation(line: 101, column: 8, scope: !7064)
!7128 = !DILocation(line: 101, column: 52, scope: !7064)
!7129 = !DILocation(line: 101, column: 33, scope: !7064)
!7130 = !DILocation(line: 101, column: 39, scope: !7064)
!7131 = !DILocation(line: 102, column: 1, scope: !7064)
!7132 = distinct !DISubprogram(name: "inv_shift_rows", scope: !501, file: !501, line: 118, type: !7133, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7135)
!7133 = !DISubroutineType(types: !7134)
!7134 = !{null, !184}
!7135 = !{!7136, !7137}
!7136 = !DILocalVariable(name: "s", arg: 1, scope: !7132, file: !501, line: 118, type: !184)
!7137 = !DILocalVariable(name: "t", scope: !7132, file: !501, line: 120, type: !311)
!7138 = !DILocation(line: 0, scope: !7132)
!7139 = !DILocation(line: 120, column: 2, scope: !7132)
!7140 = !DILocation(line: 120, column: 10, scope: !7132)
!7141 = !DILocation(line: 122, column: 10, scope: !7132)
!7142 = !DILocation(line: 122, column: 8, scope: !7132)
!7143 = !DILocation(line: 122, column: 23, scope: !7132)
!7144 = !DILocation(line: 122, column: 16, scope: !7132)
!7145 = !DILocation(line: 122, column: 21, scope: !7132)
!7146 = !DILocation(line: 122, column: 37, scope: !7132)
!7147 = !DILocation(line: 122, column: 30, scope: !7132)
!7148 = !DILocation(line: 122, column: 35, scope: !7132)
!7149 = !DILocation(line: 122, column: 51, scope: !7132)
!7150 = !DILocation(line: 122, column: 44, scope: !7132)
!7151 = !DILocation(line: 122, column: 49, scope: !7132)
!7152 = !DILocation(line: 123, column: 10, scope: !7132)
!7153 = !DILocation(line: 123, column: 2, scope: !7132)
!7154 = !DILocation(line: 123, column: 8, scope: !7132)
!7155 = !DILocation(line: 123, column: 23, scope: !7132)
!7156 = !DILocation(line: 123, column: 16, scope: !7132)
!7157 = !DILocation(line: 123, column: 21, scope: !7132)
!7158 = !DILocation(line: 123, column: 36, scope: !7132)
!7159 = !DILocation(line: 123, column: 29, scope: !7132)
!7160 = !DILocation(line: 123, column: 34, scope: !7132)
!7161 = !DILocation(line: 123, column: 50, scope: !7132)
!7162 = !DILocation(line: 123, column: 43, scope: !7132)
!7163 = !DILocation(line: 123, column: 48, scope: !7132)
!7164 = !DILocation(line: 124, column: 10, scope: !7132)
!7165 = !DILocation(line: 124, column: 2, scope: !7132)
!7166 = !DILocation(line: 124, column: 8, scope: !7132)
!7167 = !DILocation(line: 124, column: 23, scope: !7132)
!7168 = !DILocation(line: 124, column: 16, scope: !7132)
!7169 = !DILocation(line: 124, column: 21, scope: !7132)
!7170 = !DILocation(line: 124, column: 37, scope: !7132)
!7171 = !DILocation(line: 124, column: 29, scope: !7132)
!7172 = !DILocation(line: 124, column: 35, scope: !7132)
!7173 = !DILocation(line: 124, column: 51, scope: !7132)
!7174 = !DILocation(line: 124, column: 43, scope: !7132)
!7175 = !DILocation(line: 124, column: 49, scope: !7132)
!7176 = !DILocation(line: 125, column: 10, scope: !7132)
!7177 = !DILocation(line: 125, column: 2, scope: !7132)
!7178 = !DILocation(line: 125, column: 8, scope: !7132)
!7179 = !DILocation(line: 125, column: 25, scope: !7132)
!7180 = !DILocation(line: 125, column: 17, scope: !7132)
!7181 = !DILocation(line: 125, column: 23, scope: !7132)
!7182 = !DILocation(line: 125, column: 39, scope: !7132)
!7183 = !DILocation(line: 125, column: 31, scope: !7132)
!7184 = !DILocation(line: 125, column: 37, scope: !7132)
!7185 = !DILocation(line: 125, column: 53, scope: !7132)
!7186 = !DILocation(line: 125, column: 45, scope: !7132)
!7187 = !DILocation(line: 125, column: 51, scope: !7132)
!7188 = !DILocation(line: 126, column: 8, scope: !7132)
!7189 = !DILocation(line: 127, column: 1, scope: !7132)
!7190 = distinct !DISubprogram(name: "inv_sub_bytes", scope: !501, file: !501, line: 104, type: !7133, scopeLine: 105, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7191)
!7191 = !{!7192, !7193}
!7192 = !DILocalVariable(name: "s", arg: 1, scope: !7190, file: !501, line: 104, type: !184)
!7193 = !DILocalVariable(name: "i", scope: !7190, file: !501, line: 106, type: !32)
!7194 = !DILocation(line: 0, scope: !7190)
!7195 = !DILocation(line: 108, column: 2, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7190, file: !501, line: 108, column: 2)
!7197 = !DILocation(line: 109, column: 19, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7199, file: !501, line: 108, column: 32)
!7199 = distinct !DILexicalBlock(scope: !7196, file: !501, line: 108, column: 2)
!7200 = !DILocation(line: 109, column: 10, scope: !7198)
!7201 = !DILocation(line: 109, column: 8, scope: !7198)
!7202 = !DILocation(line: 108, column: 27, scope: !7199)
!7203 = !DILocation(line: 108, column: 16, scope: !7199)
!7204 = distinct !{!7204, !7195, !7205}
!7205 = !DILocation(line: 110, column: 2, scope: !7196)
!7206 = !DILocation(line: 111, column: 1, scope: !7190)
!7207 = distinct !DISubprogram(name: "inv_mix_columns", scope: !501, file: !501, line: 81, type: !7133, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7208)
!7208 = !{!7209, !7210}
!7209 = !DILocalVariable(name: "s", arg: 1, scope: !7207, file: !501, line: 81, type: !184)
!7210 = !DILocalVariable(name: "t", scope: !7207, file: !501, line: 83, type: !311)
!7211 = !DILocation(line: 0, scope: !7207)
!7212 = !DILocation(line: 83, column: 2, scope: !7207)
!7213 = !DILocation(line: 83, column: 10, scope: !7207)
!7214 = !DILocation(line: 85, column: 2, scope: !7207)
!7215 = !DILocation(line: 86, column: 19, scope: !7207)
!7216 = !DILocation(line: 86, column: 27, scope: !7207)
!7217 = !DILocation(line: 86, column: 2, scope: !7207)
!7218 = !DILocation(line: 87, column: 19, scope: !7207)
!7219 = !DILocation(line: 87, column: 29, scope: !7207)
!7220 = !DILocation(line: 87, column: 2, scope: !7207)
!7221 = !DILocation(line: 88, column: 19, scope: !7207)
!7222 = !DILocation(line: 88, column: 29, scope: !7207)
!7223 = !DILocation(line: 88, column: 2, scope: !7207)
!7224 = !DILocation(line: 89, column: 8, scope: !7207)
!7225 = !DILocation(line: 90, column: 1, scope: !7207)
!7226 = distinct !DISubprogram(name: "mult_row_column", scope: !501, file: !501, line: 73, type: !7227, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7229)
!7227 = !DISubroutineType(types: !7228)
!7228 = !{null, !184, !490}
!7229 = !{!7230, !7231}
!7230 = !DILocalVariable(name: "out", arg: 1, scope: !7226, file: !501, line: 73, type: !184)
!7231 = !DILocalVariable(name: "in", arg: 2, scope: !7226, file: !501, line: 73, type: !490)
!7232 = !DILocation(line: 0, scope: !7226)
!7233 = !DILocation(line: 75, column: 11, scope: !7226)
!7234 = !DILocation(line: 75, column: 26, scope: !7226)
!7235 = !DILocation(line: 75, column: 41, scope: !7226)
!7236 = !DILocation(line: 75, column: 56, scope: !7226)
!7237 = !DILocation(line: 75, column: 24, scope: !7226)
!7238 = !DILocation(line: 75, column: 39, scope: !7226)
!7239 = !DILocation(line: 75, column: 54, scope: !7226)
!7240 = !DILocation(line: 75, column: 9, scope: !7226)
!7241 = !DILocation(line: 76, column: 11, scope: !7226)
!7242 = !DILocation(line: 76, column: 26, scope: !7226)
!7243 = !DILocation(line: 76, column: 41, scope: !7226)
!7244 = !DILocation(line: 76, column: 56, scope: !7226)
!7245 = !DILocation(line: 76, column: 24, scope: !7226)
!7246 = !DILocation(line: 76, column: 39, scope: !7226)
!7247 = !DILocation(line: 76, column: 54, scope: !7226)
!7248 = !DILocation(line: 76, column: 2, scope: !7226)
!7249 = !DILocation(line: 76, column: 9, scope: !7226)
!7250 = !DILocation(line: 77, column: 11, scope: !7226)
!7251 = !DILocation(line: 77, column: 26, scope: !7226)
!7252 = !DILocation(line: 77, column: 41, scope: !7226)
!7253 = !DILocation(line: 77, column: 56, scope: !7226)
!7254 = !DILocation(line: 77, column: 24, scope: !7226)
!7255 = !DILocation(line: 77, column: 39, scope: !7226)
!7256 = !DILocation(line: 77, column: 54, scope: !7226)
!7257 = !DILocation(line: 77, column: 2, scope: !7226)
!7258 = !DILocation(line: 77, column: 9, scope: !7226)
!7259 = !DILocation(line: 78, column: 11, scope: !7226)
!7260 = !DILocation(line: 78, column: 26, scope: !7226)
!7261 = !DILocation(line: 78, column: 41, scope: !7226)
!7262 = !DILocation(line: 78, column: 56, scope: !7226)
!7263 = !DILocation(line: 78, column: 24, scope: !7226)
!7264 = !DILocation(line: 78, column: 39, scope: !7226)
!7265 = !DILocation(line: 78, column: 54, scope: !7226)
!7266 = !DILocation(line: 78, column: 2, scope: !7226)
!7267 = !DILocation(line: 78, column: 9, scope: !7226)
!7268 = !DILocation(line: 79, column: 1, scope: !7226)
!7269 = distinct !DISubprogram(name: "tc_aes128_set_encrypt_key", scope: !516, file: !516, line: 70, type: !7270, scopeLine: 71, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7272)
!7270 = !DISubroutineType(types: !7271)
!7271 = !{!125, !510, !490}
!7272 = !{!7273, !7274, !7275, !7277, !7278}
!7273 = !DILocalVariable(name: "s", arg: 1, scope: !7269, file: !516, line: 70, type: !510)
!7274 = !DILocalVariable(name: "k", arg: 2, scope: !7269, file: !516, line: 70, type: !490)
!7275 = !DILocalVariable(name: "rconst", scope: !7269, file: !516, line: 72, type: !7276)
!7276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5846, size: 352, elements: !2059)
!7277 = !DILocalVariable(name: "i", scope: !7269, file: !516, line: 76, type: !32)
!7278 = !DILocalVariable(name: "t", scope: !7269, file: !516, line: 77, type: !32)
!7279 = !DILocation(line: 0, scope: !7269)
!7280 = !DILocation(line: 72, column: 21, scope: !7269)
!7281 = !DILocation(line: 79, column: 8, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7269, file: !516, line: 79, column: 6)
!7283 = !DILocation(line: 79, column: 6, scope: !7269)
!7284 = !DILocation(line: 91, column: 7, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7286, file: !516, line: 90, column: 35)
!7286 = distinct !DILexicalBlock(scope: !7287, file: !516, line: 90, column: 2)
!7287 = distinct !DILexicalBlock(scope: !7269, file: !516, line: 90, column: 2)
!7288 = !DILocation(line: 90, column: 2, scope: !7287)
!7289 = !DILocation(line: 86, column: 22, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7291, file: !516, line: 85, column: 27)
!7291 = distinct !DILexicalBlock(scope: !7292, file: !516, line: 85, column: 2)
!7292 = distinct !DILexicalBlock(scope: !7269, file: !516, line: 85, column: 2)
!7293 = !DILocation(line: 86, column: 18, scope: !7290)
!7294 = !DILocation(line: 86, column: 25, scope: !7290)
!7295 = !DILocation(line: 86, column: 40, scope: !7290)
!7296 = !DILocation(line: 86, column: 34, scope: !7290)
!7297 = !DILocation(line: 86, column: 43, scope: !7290)
!7298 = !DILocation(line: 86, column: 31, scope: !7290)
!7299 = !DILocation(line: 87, column: 17, scope: !7290)
!7300 = !DILocation(line: 87, column: 11, scope: !7290)
!7301 = !DILocation(line: 87, column: 20, scope: !7290)
!7302 = !DILocation(line: 86, column: 49, scope: !7290)
!7303 = !DILocation(line: 87, column: 34, scope: !7290)
!7304 = !DILocation(line: 87, column: 28, scope: !7290)
!7305 = !DILocation(line: 87, column: 27, scope: !7290)
!7306 = !DILocation(line: 87, column: 25, scope: !7290)
!7307 = !DILocation(line: 86, column: 3, scope: !7290)
!7308 = !DILocation(line: 86, column: 15, scope: !7290)
!7309 = !DILocation(line: 85, column: 22, scope: !7291)
!7310 = !DILocation(line: 85, column: 16, scope: !7291)
!7311 = !DILocation(line: 85, column: 2, scope: !7292)
!7312 = distinct !{!7312, !7311, !7313}
!7313 = !DILocation(line: 88, column: 2, scope: !7292)
!7314 = !DILocation(line: 92, column: 10, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7285, file: !516, line: 92, column: 7)
!7316 = !DILocation(line: 92, column: 16, scope: !7315)
!7317 = !DILocation(line: 92, column: 7, scope: !7285)
!7318 = !DILocation(line: 93, column: 8, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7315, file: !516, line: 92, column: 22)
!7320 = !DILocation(line: 93, column: 38, scope: !7319)
!7321 = !DILocation(line: 93, column: 30, scope: !7319)
!7322 = !DILocation(line: 93, column: 28, scope: !7319)
!7323 = !DILocation(line: 94, column: 3, scope: !7319)
!7324 = !DILocation(line: 0, scope: !7285)
!7325 = !DILocation(line: 95, column: 27, scope: !7285)
!7326 = !DILocation(line: 95, column: 17, scope: !7285)
!7327 = !DILocation(line: 95, column: 32, scope: !7285)
!7328 = !DILocation(line: 95, column: 3, scope: !7285)
!7329 = !DILocation(line: 95, column: 15, scope: !7285)
!7330 = !DILocation(line: 90, column: 30, scope: !7286)
!7331 = !DILocation(line: 90, column: 11, scope: !7286)
!7332 = distinct !{!7332, !7288, !7333}
!7333 = !DILocation(line: 96, column: 2, scope: !7287)
!7334 = !DILocation(line: 99, column: 1, scope: !7269)
!7335 = distinct !DISubprogram(name: "rotword", scope: !516, file: !516, line: 62, type: !7336, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7338)
!7336 = !DISubroutineType(types: !7337)
!7337 = !{!32, !32}
!7338 = !{!7339}
!7339 = !DILocalVariable(name: "a", arg: 1, scope: !7335, file: !516, line: 62, type: !32)
!7340 = !DILocation(line: 0, scope: !7335)
!7341 = !DILocation(line: 64, column: 21, scope: !7335)
!7342 = !DILocation(line: 64, column: 2, scope: !7335)
!7343 = distinct !DISubprogram(name: "tc_aes_encrypt", scope: !516, file: !516, line: 158, type: !7344, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7347)
!7344 = !DISubroutineType(types: !7345)
!7345 = !{!125, !184, !490, !7346}
!7346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !510)
!7347 = !{!7348, !7349, !7350, !7351, !7352}
!7348 = !DILocalVariable(name: "out", arg: 1, scope: !7343, file: !516, line: 158, type: !184)
!7349 = !DILocalVariable(name: "in", arg: 2, scope: !7343, file: !516, line: 158, type: !490)
!7350 = !DILocalVariable(name: "s", arg: 3, scope: !7343, file: !516, line: 158, type: !7346)
!7351 = !DILocalVariable(name: "state", scope: !7343, file: !516, line: 160, type: !311)
!7352 = !DILocalVariable(name: "i", scope: !7343, file: !516, line: 161, type: !32)
!7353 = !DILocation(line: 0, scope: !7343)
!7354 = !DILocation(line: 160, column: 2, scope: !7343)
!7355 = !DILocation(line: 160, column: 10, scope: !7343)
!7356 = !DILocation(line: 163, column: 10, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7343, file: !516, line: 163, column: 6)
!7358 = !DILocation(line: 163, column: 6, scope: !7343)
!7359 = !DILocation(line: 171, column: 8, scope: !7343)
!7360 = !DILocation(line: 172, column: 23, scope: !7343)
!7361 = !DILocation(line: 172, column: 2, scope: !7343)
!7362 = !DILocation(line: 174, column: 2, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7343, file: !516, line: 174, column: 2)
!7364 = !DILocation(line: 175, column: 3, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7366, file: !516, line: 174, column: 33)
!7366 = distinct !DILexicalBlock(scope: !7363, file: !516, line: 174, column: 2)
!7367 = !DILocation(line: 176, column: 3, scope: !7365)
!7368 = !DILocation(line: 177, column: 3, scope: !7365)
!7369 = !DILocation(line: 178, column: 40, scope: !7365)
!7370 = !DILocation(line: 178, column: 37, scope: !7365)
!7371 = !DILocation(line: 178, column: 33, scope: !7365)
!7372 = !DILocation(line: 178, column: 3, scope: !7365)
!7373 = !DILocation(line: 174, column: 16, scope: !7366)
!7374 = distinct !{!7374, !7362, !7375}
!7375 = !DILocation(line: 179, column: 2, scope: !7363)
!7376 = !DILocation(line: 181, column: 2, scope: !7343)
!7377 = !DILocation(line: 182, column: 2, scope: !7343)
!7378 = !DILocation(line: 183, column: 32, scope: !7343)
!7379 = !DILocation(line: 183, column: 2, scope: !7343)
!7380 = !DILocation(line: 185, column: 8, scope: !7343)
!7381 = !DILocation(line: 188, column: 2, scope: !7343)
!7382 = !DILocation(line: 190, column: 2, scope: !7343)
!7383 = !DILocation(line: 191, column: 1, scope: !7343)
!7384 = distinct !DISubprogram(name: "add_round_key", scope: !516, file: !516, line: 101, type: !7065, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7385)
!7385 = !{!7386, !7387}
!7386 = !DILocalVariable(name: "s", arg: 1, scope: !7384, file: !516, line: 101, type: !184)
!7387 = !DILocalVariable(name: "k", arg: 2, scope: !7384, file: !516, line: 101, type: !7067)
!7388 = !DILocation(line: 0, scope: !7384)
!7389 = !DILocation(line: 103, column: 20, scope: !7384)
!7390 = !DILocation(line: 103, column: 25, scope: !7384)
!7391 = !DILocation(line: 103, column: 7, scope: !7384)
!7392 = !DILocation(line: 103, column: 51, scope: !7384)
!7393 = !DILocation(line: 103, column: 56, scope: !7384)
!7394 = !DILocation(line: 103, column: 33, scope: !7384)
!7395 = !DILocation(line: 103, column: 38, scope: !7384)
!7396 = !DILocation(line: 104, column: 20, scope: !7384)
!7397 = !DILocation(line: 104, column: 25, scope: !7384)
!7398 = !DILocation(line: 104, column: 2, scope: !7384)
!7399 = !DILocation(line: 104, column: 7, scope: !7384)
!7400 = !DILocation(line: 104, column: 50, scope: !7384)
!7401 = !DILocation(line: 104, column: 32, scope: !7384)
!7402 = !DILocation(line: 104, column: 37, scope: !7384)
!7403 = !DILocation(line: 105, column: 20, scope: !7384)
!7404 = !DILocation(line: 105, column: 25, scope: !7384)
!7405 = !DILocation(line: 105, column: 2, scope: !7384)
!7406 = !DILocation(line: 105, column: 7, scope: !7384)
!7407 = !DILocation(line: 105, column: 51, scope: !7384)
!7408 = !DILocation(line: 105, column: 56, scope: !7384)
!7409 = !DILocation(line: 105, column: 33, scope: !7384)
!7410 = !DILocation(line: 105, column: 38, scope: !7384)
!7411 = !DILocation(line: 106, column: 20, scope: !7384)
!7412 = !DILocation(line: 106, column: 25, scope: !7384)
!7413 = !DILocation(line: 106, column: 2, scope: !7384)
!7414 = !DILocation(line: 106, column: 7, scope: !7384)
!7415 = !DILocation(line: 106, column: 50, scope: !7384)
!7416 = !DILocation(line: 106, column: 32, scope: !7384)
!7417 = !DILocation(line: 106, column: 37, scope: !7384)
!7418 = !DILocation(line: 107, column: 20, scope: !7384)
!7419 = !DILocation(line: 107, column: 25, scope: !7384)
!7420 = !DILocation(line: 107, column: 2, scope: !7384)
!7421 = !DILocation(line: 107, column: 7, scope: !7384)
!7422 = !DILocation(line: 107, column: 51, scope: !7384)
!7423 = !DILocation(line: 107, column: 56, scope: !7384)
!7424 = !DILocation(line: 107, column: 33, scope: !7384)
!7425 = !DILocation(line: 107, column: 38, scope: !7384)
!7426 = !DILocation(line: 108, column: 21, scope: !7384)
!7427 = !DILocation(line: 108, column: 26, scope: !7384)
!7428 = !DILocation(line: 108, column: 2, scope: !7384)
!7429 = !DILocation(line: 108, column: 8, scope: !7384)
!7430 = !DILocation(line: 108, column: 52, scope: !7384)
!7431 = !DILocation(line: 108, column: 33, scope: !7384)
!7432 = !DILocation(line: 108, column: 39, scope: !7384)
!7433 = !DILocation(line: 109, column: 21, scope: !7384)
!7434 = !DILocation(line: 109, column: 26, scope: !7384)
!7435 = !DILocation(line: 109, column: 2, scope: !7384)
!7436 = !DILocation(line: 109, column: 8, scope: !7384)
!7437 = !DILocation(line: 109, column: 53, scope: !7384)
!7438 = !DILocation(line: 109, column: 58, scope: !7384)
!7439 = !DILocation(line: 109, column: 34, scope: !7384)
!7440 = !DILocation(line: 109, column: 40, scope: !7384)
!7441 = !DILocation(line: 110, column: 21, scope: !7384)
!7442 = !DILocation(line: 110, column: 26, scope: !7384)
!7443 = !DILocation(line: 110, column: 2, scope: !7384)
!7444 = !DILocation(line: 110, column: 8, scope: !7384)
!7445 = !DILocation(line: 110, column: 52, scope: !7384)
!7446 = !DILocation(line: 110, column: 33, scope: !7384)
!7447 = !DILocation(line: 110, column: 39, scope: !7384)
!7448 = !DILocation(line: 111, column: 1, scope: !7384)
!7449 = distinct !DISubprogram(name: "sub_bytes", scope: !516, file: !516, line: 113, type: !7133, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7450)
!7450 = !{!7451, !7452}
!7451 = !DILocalVariable(name: "s", arg: 1, scope: !7449, file: !516, line: 113, type: !184)
!7452 = !DILocalVariable(name: "i", scope: !7449, file: !516, line: 115, type: !32)
!7453 = !DILocation(line: 0, scope: !7449)
!7454 = !DILocation(line: 117, column: 2, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7449, file: !516, line: 117, column: 2)
!7456 = !DILocation(line: 118, column: 15, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7458, file: !516, line: 117, column: 34)
!7458 = distinct !DILexicalBlock(scope: !7455, file: !516, line: 117, column: 2)
!7459 = !DILocation(line: 118, column: 10, scope: !7457)
!7460 = !DILocation(line: 118, column: 8, scope: !7457)
!7461 = !DILocation(line: 117, column: 29, scope: !7458)
!7462 = !DILocation(line: 117, column: 16, scope: !7458)
!7463 = distinct !{!7463, !7454, !7464}
!7464 = !DILocation(line: 119, column: 2, scope: !7455)
!7465 = !DILocation(line: 120, column: 1, scope: !7449)
!7466 = distinct !DISubprogram(name: "shift_rows", scope: !516, file: !516, line: 147, type: !7133, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7467)
!7467 = !{!7468, !7469}
!7468 = !DILocalVariable(name: "s", arg: 1, scope: !7466, file: !516, line: 147, type: !184)
!7469 = !DILocalVariable(name: "t", scope: !7466, file: !516, line: 149, type: !311)
!7470 = !DILocation(line: 0, scope: !7466)
!7471 = !DILocation(line: 149, column: 2, scope: !7466)
!7472 = !DILocation(line: 149, column: 10, scope: !7466)
!7473 = !DILocation(line: 151, column: 10, scope: !7466)
!7474 = !DILocation(line: 151, column: 8, scope: !7466)
!7475 = !DILocation(line: 151, column: 23, scope: !7466)
!7476 = !DILocation(line: 151, column: 16, scope: !7466)
!7477 = !DILocation(line: 151, column: 21, scope: !7466)
!7478 = !DILocation(line: 151, column: 36, scope: !7466)
!7479 = !DILocation(line: 151, column: 29, scope: !7466)
!7480 = !DILocation(line: 151, column: 34, scope: !7466)
!7481 = !DILocation(line: 151, column: 50, scope: !7466)
!7482 = !DILocation(line: 151, column: 43, scope: !7466)
!7483 = !DILocation(line: 151, column: 48, scope: !7466)
!7484 = !DILocation(line: 152, column: 10, scope: !7466)
!7485 = !DILocation(line: 152, column: 2, scope: !7466)
!7486 = !DILocation(line: 152, column: 8, scope: !7466)
!7487 = !DILocation(line: 152, column: 23, scope: !7466)
!7488 = !DILocation(line: 152, column: 16, scope: !7466)
!7489 = !DILocation(line: 152, column: 21, scope: !7466)
!7490 = !DILocation(line: 152, column: 36, scope: !7466)
!7491 = !DILocation(line: 152, column: 29, scope: !7466)
!7492 = !DILocation(line: 152, column: 34, scope: !7466)
!7493 = !DILocation(line: 152, column: 50, scope: !7466)
!7494 = !DILocation(line: 152, column: 43, scope: !7466)
!7495 = !DILocation(line: 152, column: 48, scope: !7466)
!7496 = !DILocation(line: 153, column: 10, scope: !7466)
!7497 = !DILocation(line: 153, column: 2, scope: !7466)
!7498 = !DILocation(line: 153, column: 8, scope: !7466)
!7499 = !DILocation(line: 153, column: 23, scope: !7466)
!7500 = !DILocation(line: 153, column: 16, scope: !7466)
!7501 = !DILocation(line: 153, column: 21, scope: !7466)
!7502 = !DILocation(line: 153, column: 38, scope: !7466)
!7503 = !DILocation(line: 153, column: 30, scope: !7466)
!7504 = !DILocation(line: 153, column: 36, scope: !7466)
!7505 = !DILocation(line: 153, column: 52, scope: !7466)
!7506 = !DILocation(line: 153, column: 44, scope: !7466)
!7507 = !DILocation(line: 153, column: 50, scope: !7466)
!7508 = !DILocation(line: 154, column: 10, scope: !7466)
!7509 = !DILocation(line: 154, column: 2, scope: !7466)
!7510 = !DILocation(line: 154, column: 8, scope: !7466)
!7511 = !DILocation(line: 154, column: 25, scope: !7466)
!7512 = !DILocation(line: 154, column: 17, scope: !7466)
!7513 = !DILocation(line: 154, column: 23, scope: !7466)
!7514 = !DILocation(line: 154, column: 39, scope: !7466)
!7515 = !DILocation(line: 154, column: 31, scope: !7466)
!7516 = !DILocation(line: 154, column: 37, scope: !7466)
!7517 = !DILocation(line: 154, column: 53, scope: !7466)
!7518 = !DILocation(line: 154, column: 45, scope: !7466)
!7519 = !DILocation(line: 154, column: 51, scope: !7466)
!7520 = !DILocation(line: 155, column: 9, scope: !7466)
!7521 = !DILocation(line: 156, column: 1, scope: !7466)
!7522 = distinct !DISubprogram(name: "mix_columns", scope: !516, file: !516, line: 132, type: !7133, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7523)
!7523 = !{!7524, !7525}
!7524 = !DILocalVariable(name: "s", arg: 1, scope: !7522, file: !516, line: 132, type: !184)
!7525 = !DILocalVariable(name: "t", scope: !7522, file: !516, line: 134, type: !311)
!7526 = !DILocation(line: 0, scope: !7522)
!7527 = !DILocation(line: 134, column: 2, scope: !7522)
!7528 = !DILocation(line: 134, column: 10, scope: !7522)
!7529 = !DILocation(line: 136, column: 2, scope: !7522)
!7530 = !DILocation(line: 137, column: 19, scope: !7522)
!7531 = !DILocation(line: 137, column: 27, scope: !7522)
!7532 = !DILocation(line: 137, column: 2, scope: !7522)
!7533 = !DILocation(line: 138, column: 19, scope: !7522)
!7534 = !DILocation(line: 138, column: 32, scope: !7522)
!7535 = !DILocation(line: 138, column: 2, scope: !7522)
!7536 = !DILocation(line: 139, column: 19, scope: !7522)
!7537 = !DILocation(line: 139, column: 32, scope: !7522)
!7538 = !DILocation(line: 139, column: 2, scope: !7522)
!7539 = !DILocation(line: 140, column: 9, scope: !7522)
!7540 = !DILocation(line: 141, column: 1, scope: !7522)
!7541 = distinct !DISubprogram(name: "mult_row_column", scope: !516, file: !516, line: 124, type: !7227, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7542)
!7542 = !{!7543, !7544}
!7543 = !DILocalVariable(name: "out", arg: 1, scope: !7541, file: !516, line: 124, type: !184)
!7544 = !DILocalVariable(name: "in", arg: 2, scope: !7541, file: !516, line: 124, type: !490)
!7545 = !DILocation(line: 0, scope: !7541)
!7546 = !DILocation(line: 126, column: 24, scope: !7541)
!7547 = !DILocation(line: 126, column: 11, scope: !7541)
!7548 = !DILocation(line: 126, column: 33, scope: !7541)
!7549 = !DILocation(line: 126, column: 49, scope: !7541)
!7550 = !DILocation(line: 126, column: 57, scope: !7541)
!7551 = !DILocation(line: 126, column: 31, scope: !7541)
!7552 = !DILocation(line: 126, column: 47, scope: !7541)
!7553 = !DILocation(line: 126, column: 55, scope: !7541)
!7554 = !DILocation(line: 126, column: 9, scope: !7541)
!7555 = !DILocation(line: 127, column: 11, scope: !7541)
!7556 = !DILocation(line: 127, column: 32, scope: !7541)
!7557 = !DILocation(line: 127, column: 19, scope: !7541)
!7558 = !DILocation(line: 127, column: 41, scope: !7541)
!7559 = !DILocation(line: 127, column: 57, scope: !7541)
!7560 = !DILocation(line: 127, column: 17, scope: !7541)
!7561 = !DILocation(line: 127, column: 39, scope: !7541)
!7562 = !DILocation(line: 127, column: 55, scope: !7541)
!7563 = !DILocation(line: 127, column: 2, scope: !7541)
!7564 = !DILocation(line: 127, column: 9, scope: !7541)
!7565 = !DILocation(line: 128, column: 11, scope: !7541)
!7566 = !DILocation(line: 128, column: 19, scope: !7541)
!7567 = !DILocation(line: 128, column: 40, scope: !7541)
!7568 = !DILocation(line: 128, column: 27, scope: !7541)
!7569 = !DILocation(line: 128, column: 49, scope: !7541)
!7570 = !DILocation(line: 128, column: 17, scope: !7541)
!7571 = !DILocation(line: 128, column: 25, scope: !7541)
!7572 = !DILocation(line: 128, column: 47, scope: !7541)
!7573 = !DILocation(line: 128, column: 2, scope: !7541)
!7574 = !DILocation(line: 128, column: 9, scope: !7541)
!7575 = !DILocation(line: 129, column: 11, scope: !7541)
!7576 = !DILocation(line: 129, column: 27, scope: !7541)
!7577 = !DILocation(line: 129, column: 25, scope: !7541)
!7578 = !DILocation(line: 129, column: 35, scope: !7541)
!7579 = !DILocation(line: 129, column: 33, scope: !7541)
!7580 = !DILocation(line: 129, column: 56, scope: !7541)
!7581 = !DILocation(line: 129, column: 43, scope: !7541)
!7582 = !DILocation(line: 129, column: 41, scope: !7541)
!7583 = !DILocation(line: 129, column: 2, scope: !7541)
!7584 = !DILocation(line: 129, column: 9, scope: !7541)
!7585 = !DILocation(line: 130, column: 1, scope: !7541)
!7586 = distinct !DISubprogram(name: "tc_cbc_mode_encrypt", scope: !7587, file: !7587, line: 37, type: !7588, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !7591)
!7587 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/cbc_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7588 = !DISubroutineType(types: !7589)
!7589 = !{!125, !184, !32, !490, !32, !490, !7590}
!7590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2709)
!7591 = !{!7592, !7593, !7594, !7595, !7596, !7597, !7598, !7599, !7600}
!7592 = !DILocalVariable(name: "out", arg: 1, scope: !7586, file: !7587, line: 37, type: !184)
!7593 = !DILocalVariable(name: "outlen", arg: 2, scope: !7586, file: !7587, line: 37, type: !32)
!7594 = !DILocalVariable(name: "in", arg: 3, scope: !7586, file: !7587, line: 37, type: !490)
!7595 = !DILocalVariable(name: "inlen", arg: 4, scope: !7586, file: !7587, line: 38, type: !32)
!7596 = !DILocalVariable(name: "iv", arg: 5, scope: !7586, file: !7587, line: 38, type: !490)
!7597 = !DILocalVariable(name: "sched", arg: 6, scope: !7586, file: !7587, line: 39, type: !7590)
!7598 = !DILocalVariable(name: "buffer", scope: !7586, file: !7587, line: 42, type: !311)
!7599 = !DILocalVariable(name: "n", scope: !7586, file: !7587, line: 43, type: !32)
!7600 = !DILocalVariable(name: "m", scope: !7586, file: !7587, line: 43, type: !32)
!7601 = !DILocation(line: 0, scope: !7586)
!7602 = !DILocation(line: 42, column: 2, scope: !7586)
!7603 = !DILocation(line: 42, column: 10, scope: !7586)
!7604 = !DILocation(line: 46, column: 10, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7586, file: !7587, line: 46, column: 6)
!7606 = !DILocation(line: 46, column: 27, scope: !7605)
!7607 = !DILocation(line: 58, column: 8, scope: !7586)
!7608 = !DILocation(line: 60, column: 8, scope: !7586)
!7609 = !DILocation(line: 63, column: 2, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7586, file: !7587, line: 63, column: 2)
!7611 = !DILocation(line: 61, column: 6, scope: !7586)
!7612 = !DILocation(line: 64, column: 21, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7614, file: !7587, line: 63, column: 34)
!7614 = distinct !DILexicalBlock(scope: !7610, file: !7587, line: 63, column: 2)
!7615 = !DILocation(line: 64, column: 18, scope: !7613)
!7616 = !DILocation(line: 64, column: 11, scope: !7613)
!7617 = !DILocation(line: 64, column: 3, scope: !7613)
!7618 = !DILocation(line: 64, column: 15, scope: !7613)
!7619 = !DILocation(line: 65, column: 9, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7613, file: !7587, line: 65, column: 7)
!7621 = !DILocation(line: 65, column: 7, scope: !7613)
!7622 = !DILocation(line: 66, column: 10, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7620, file: !7587, line: 65, column: 31)
!7624 = !DILocation(line: 67, column: 10, scope: !7623)
!7625 = !DILocation(line: 69, column: 8, scope: !7623)
!7626 = !DILocation(line: 71, column: 3, scope: !7623)
!7627 = !DILocation(line: 0, scope: !7613)
!7628 = !DILocation(line: 63, column: 29, scope: !7614)
!7629 = !DILocation(line: 63, column: 20, scope: !7614)
!7630 = distinct !{!7630, !7609, !7631}
!7631 = !DILocation(line: 72, column: 2, scope: !7610)
!7632 = !DILocation(line: 75, column: 1, scope: !7586)
!7633 = distinct !DISubprogram(name: "tc_cbc_mode_decrypt", scope: !7587, file: !7587, line: 77, type: !7588, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !7634)
!7634 = !{!7635, !7636, !7637, !7638, !7639, !7640, !7641, !7642, !7643, !7644}
!7635 = !DILocalVariable(name: "out", arg: 1, scope: !7633, file: !7587, line: 77, type: !184)
!7636 = !DILocalVariable(name: "outlen", arg: 2, scope: !7633, file: !7587, line: 77, type: !32)
!7637 = !DILocalVariable(name: "in", arg: 3, scope: !7633, file: !7587, line: 77, type: !490)
!7638 = !DILocalVariable(name: "inlen", arg: 4, scope: !7633, file: !7587, line: 78, type: !32)
!7639 = !DILocalVariable(name: "iv", arg: 5, scope: !7633, file: !7587, line: 78, type: !490)
!7640 = !DILocalVariable(name: "sched", arg: 6, scope: !7633, file: !7587, line: 79, type: !7590)
!7641 = !DILocalVariable(name: "buffer", scope: !7633, file: !7587, line: 82, type: !311)
!7642 = !DILocalVariable(name: "p", scope: !7633, file: !7587, line: 83, type: !490)
!7643 = !DILocalVariable(name: "n", scope: !7633, file: !7587, line: 84, type: !32)
!7644 = !DILocalVariable(name: "m", scope: !7633, file: !7587, line: 84, type: !32)
!7645 = !DILocation(line: 0, scope: !7633)
!7646 = !DILocation(line: 82, column: 2, scope: !7633)
!7647 = !DILocation(line: 82, column: 10, scope: !7633)
!7648 = !DILocation(line: 87, column: 10, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7633, file: !7587, line: 87, column: 6)
!7650 = !DILocation(line: 87, column: 27, scope: !7649)
!7651 = !DILocation(line: 105, column: 10, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7653, file: !7587, line: 105, column: 7)
!7653 = distinct !DILexicalBlock(scope: !7654, file: !7587, line: 104, column: 35)
!7654 = distinct !DILexicalBlock(scope: !7655, file: !7587, line: 104, column: 2)
!7655 = distinct !DILexicalBlock(scope: !7633, file: !7587, line: 104, column: 2)
!7656 = !DILocation(line: 105, column: 31, scope: !7652)
!7657 = !DILocation(line: 105, column: 7, scope: !7653)
!7658 = !DILocation(line: 106, column: 10, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7652, file: !7587, line: 105, column: 37)
!7660 = !DILocation(line: 107, column: 7, scope: !7659)
!7661 = !DILocation(line: 109, column: 3, scope: !7659)
!7662 = !DILocation(line: 0, scope: !7655)
!7663 = !DILocation(line: 110, column: 20, scope: !7653)
!7664 = !DILocation(line: 110, column: 12, scope: !7653)
!7665 = !DILocation(line: 110, column: 28, scope: !7653)
!7666 = !DILocation(line: 110, column: 26, scope: !7653)
!7667 = !DILocation(line: 110, column: 24, scope: !7653)
!7668 = !DILocation(line: 110, column: 7, scope: !7653)
!7669 = !DILocation(line: 110, column: 10, scope: !7653)
!7670 = !DILocation(line: 104, column: 30, scope: !7654)
!7671 = !DILocation(line: 104, column: 20, scope: !7654)
!7672 = !DILocation(line: 104, column: 2, scope: !7655)
!7673 = distinct !{!7673, !7672, !7674}
!7674 = !DILocation(line: 111, column: 2, scope: !7655)
!7675 = !DILocation(line: 114, column: 1, scope: !7633)
!7676 = distinct !DISubprogram(name: "tc_ctr_mode", scope: !7677, file: !7677, line: 37, type: !7678, scopeLine: 39, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !7681)
!7677 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/ctr_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7678 = !DISubroutineType(types: !7679)
!7679 = !{!125, !184, !32, !490, !32, !184, !7680}
!7680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2717)
!7681 = !{!7682, !7683, !7684, !7685, !7686, !7687, !7688, !7689, !7690, !7691}
!7682 = !DILocalVariable(name: "out", arg: 1, scope: !7676, file: !7677, line: 37, type: !184)
!7683 = !DILocalVariable(name: "outlen", arg: 2, scope: !7676, file: !7677, line: 37, type: !32)
!7684 = !DILocalVariable(name: "in", arg: 3, scope: !7676, file: !7677, line: 37, type: !490)
!7685 = !DILocalVariable(name: "inlen", arg: 4, scope: !7676, file: !7677, line: 38, type: !32)
!7686 = !DILocalVariable(name: "ctr", arg: 5, scope: !7676, file: !7677, line: 38, type: !184)
!7687 = !DILocalVariable(name: "sched", arg: 6, scope: !7676, file: !7677, line: 38, type: !7680)
!7688 = !DILocalVariable(name: "buffer", scope: !7676, file: !7677, line: 41, type: !311)
!7689 = !DILocalVariable(name: "nonce", scope: !7676, file: !7677, line: 42, type: !311)
!7690 = !DILocalVariable(name: "block_num", scope: !7676, file: !7677, line: 43, type: !32)
!7691 = !DILocalVariable(name: "i", scope: !7676, file: !7677, line: 44, type: !32)
!7692 = !DILocation(line: 0, scope: !7676)
!7693 = !DILocation(line: 41, column: 2, scope: !7676)
!7694 = !DILocation(line: 41, column: 10, scope: !7676)
!7695 = !DILocation(line: 42, column: 2, scope: !7676)
!7696 = !DILocation(line: 42, column: 10, scope: !7676)
!7697 = !DILocation(line: 47, column: 10, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7676, file: !7677, line: 47, column: 6)
!7699 = !DILocation(line: 47, column: 27, scope: !7698)
!7700 = !DILocation(line: 58, column: 8, scope: !7676)
!7701 = !DILocation(line: 61, column: 15, scope: !7676)
!7702 = !DILocation(line: 61, column: 35, scope: !7676)
!7703 = !DILocation(line: 62, column: 8, scope: !7676)
!7704 = !DILocation(line: 62, column: 27, scope: !7676)
!7705 = !DILocation(line: 61, column: 45, scope: !7676)
!7706 = !DILocation(line: 61, column: 25, scope: !7676)
!7707 = !DILocation(line: 61, column: 32, scope: !7676)
!7708 = !DILocation(line: 62, column: 18, scope: !7676)
!7709 = !DILocation(line: 61, column: 52, scope: !7676)
!7710 = !DILocation(line: 62, column: 26, scope: !7676)
!7711 = !DILocation(line: 62, column: 24, scope: !7676)
!7712 = !DILocation(line: 63, column: 2, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7676, file: !7677, line: 63, column: 2)
!7714 = !DILocation(line: 64, column: 10, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7716, file: !7677, line: 64, column: 7)
!7716 = distinct !DILexicalBlock(scope: !7717, file: !7677, line: 63, column: 30)
!7717 = distinct !DILexicalBlock(scope: !7713, file: !7677, line: 63, column: 2)
!7718 = !DILocation(line: 64, column: 33, scope: !7715)
!7719 = !DILocation(line: 64, column: 7, scope: !7716)
!7720 = !DILocation(line: 66, column: 8, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7722, file: !7677, line: 66, column: 8)
!7722 = distinct !DILexicalBlock(scope: !7715, file: !7677, line: 64, column: 39)
!7723 = !DILocation(line: 66, column: 8, scope: !7722)
!7724 = !DILocation(line: 67, column: 14, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7721, file: !7677, line: 66, column: 46)
!7726 = !DILocation(line: 68, column: 37, scope: !7725)
!7727 = !DILocation(line: 68, column: 17, scope: !7725)
!7728 = !DILocation(line: 68, column: 15, scope: !7725)
!7729 = !DILocation(line: 69, column: 37, scope: !7725)
!7730 = !DILocation(line: 69, column: 17, scope: !7725)
!7731 = !DILocation(line: 69, column: 15, scope: !7725)
!7732 = !DILocation(line: 70, column: 37, scope: !7725)
!7733 = !DILocation(line: 70, column: 17, scope: !7725)
!7734 = !DILocation(line: 70, column: 15, scope: !7725)
!7735 = !DILocation(line: 71, column: 17, scope: !7725)
!7736 = !DILocation(line: 71, column: 15, scope: !7725)
!7737 = !DILocation(line: 75, column: 3, scope: !7722)
!7738 = !DILocation(line: 77, column: 12, scope: !7716)
!7739 = !DILocation(line: 77, column: 47, scope: !7716)
!7740 = !DILocation(line: 77, column: 44, scope: !7716)
!7741 = !DILocation(line: 77, column: 42, scope: !7716)
!7742 = !DILocation(line: 77, column: 7, scope: !7716)
!7743 = !DILocation(line: 77, column: 10, scope: !7716)
!7744 = !DILocation(line: 63, column: 25, scope: !7717)
!7745 = !DILocation(line: 63, column: 16, scope: !7717)
!7746 = distinct !{!7746, !7712, !7747}
!7747 = !DILocation(line: 78, column: 2, scope: !7713)
!7748 = !DILocation(line: 81, column: 2, scope: !7676)
!7749 = !DILocation(line: 81, column: 10, scope: !7676)
!7750 = !DILocation(line: 81, column: 23, scope: !7676)
!7751 = !DILocation(line: 81, column: 31, scope: !7676)
!7752 = !DILocation(line: 82, column: 2, scope: !7676)
!7753 = !DILocation(line: 82, column: 10, scope: !7676)
!7754 = !DILocation(line: 82, column: 23, scope: !7676)
!7755 = !DILocation(line: 82, column: 31, scope: !7676)
!7756 = !DILocation(line: 84, column: 2, scope: !7676)
!7757 = !DILocation(line: 85, column: 1, scope: !7676)
!7758 = distinct !DISubprogram(name: "tc_ccm_config", scope: !7759, file: !7759, line: 39, type: !7760, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !7762)
!7759 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/ccm_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7760 = !DISubroutineType(types: !7761)
!7761 = !{!125, !2725, !2731, !184, !32, !32}
!7762 = !{!7763, !7764, !7765, !7766, !7767}
!7763 = !DILocalVariable(name: "c", arg: 1, scope: !7758, file: !7759, line: 39, type: !2725)
!7764 = !DILocalVariable(name: "sched", arg: 2, scope: !7758, file: !7759, line: 39, type: !2731)
!7765 = !DILocalVariable(name: "nonce", arg: 3, scope: !7758, file: !7759, line: 39, type: !184)
!7766 = !DILocalVariable(name: "nlen", arg: 4, scope: !7758, file: !7759, line: 40, type: !32)
!7767 = !DILocalVariable(name: "mlen", arg: 5, scope: !7758, file: !7759, line: 40, type: !32)
!7768 = !DILocation(line: 0, scope: !7758)
!7769 = !DILocation(line: 44, column: 8, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7758, file: !7759, line: 44, column: 6)
!7771 = !DILocation(line: 44, column: 27, scope: !7770)
!7772 = !DILocation(line: 50, column: 24, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7774, file: !7759, line: 50, column: 13)
!7774 = distinct !DILexicalBlock(scope: !7770, file: !7759, line: 48, column: 13)
!7775 = !DILocation(line: 54, column: 5, scope: !7758)
!7776 = !DILocation(line: 54, column: 10, scope: !7758)
!7777 = !DILocation(line: 55, column: 5, scope: !7758)
!7778 = !DILocation(line: 55, column: 11, scope: !7758)
!7779 = !DILocation(line: 56, column: 5, scope: !7758)
!7780 = !DILocation(line: 56, column: 11, scope: !7758)
!7781 = !DILocation(line: 58, column: 2, scope: !7758)
!7782 = !DILocation(line: 59, column: 1, scope: !7758)
!7783 = distinct !DISubprogram(name: "tc_ccm_generation_encryption", scope: !7759, file: !7759, line: 137, type: !7784, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !7786)
!7784 = !DISubroutineType(types: !7785)
!7785 = !{!125, !184, !32, !490, !32, !490, !32, !2725}
!7786 = !{!7787, !7788, !7789, !7790, !7791, !7792, !7793, !7794, !7795, !7796}
!7787 = !DILocalVariable(name: "out", arg: 1, scope: !7783, file: !7759, line: 137, type: !184)
!7788 = !DILocalVariable(name: "olen", arg: 2, scope: !7783, file: !7759, line: 137, type: !32)
!7789 = !DILocalVariable(name: "associated_data", arg: 3, scope: !7783, file: !7759, line: 138, type: !490)
!7790 = !DILocalVariable(name: "alen", arg: 4, scope: !7783, file: !7759, line: 139, type: !32)
!7791 = !DILocalVariable(name: "payload", arg: 5, scope: !7783, file: !7759, line: 139, type: !490)
!7792 = !DILocalVariable(name: "plen", arg: 6, scope: !7783, file: !7759, line: 140, type: !32)
!7793 = !DILocalVariable(name: "c", arg: 7, scope: !7783, file: !7759, line: 140, type: !2725)
!7794 = !DILocalVariable(name: "b", scope: !7783, file: !7759, line: 154, type: !311)
!7795 = !DILocalVariable(name: "tag", scope: !7783, file: !7759, line: 155, type: !311)
!7796 = !DILocalVariable(name: "i", scope: !7783, file: !7759, line: 156, type: !32)
!7797 = !DILocation(line: 0, scope: !7783)
!7798 = !DILocation(line: 144, column: 11, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7783, file: !7759, line: 144, column: 6)
!7800 = !DILocation(line: 144, column: 29, scope: !7799)
!7801 = !DILocation(line: 146, column: 10, scope: !7799)
!7802 = !DILocation(line: 146, column: 15, scope: !7799)
!7803 = !DILocation(line: 147, column: 10, scope: !7799)
!7804 = !DILocation(line: 147, column: 15, scope: !7799)
!7805 = !DILocation(line: 150, column: 22, scope: !7799)
!7806 = !DILocation(line: 150, column: 17, scope: !7799)
!7807 = !DILocation(line: 150, column: 9, scope: !7799)
!7808 = !DILocation(line: 144, column: 6, scope: !7783)
!7809 = !DILocation(line: 154, column: 2, scope: !7783)
!7810 = !DILocation(line: 154, column: 10, scope: !7783)
!7811 = !DILocation(line: 155, column: 2, scope: !7783)
!7812 = !DILocation(line: 155, column: 10, scope: !7783)
!7813 = !DILocation(line: 161, column: 10, scope: !7783)
!7814 = !DILocation(line: 161, column: 53, scope: !7783)
!7815 = !DILocation(line: 161, column: 31, scope: !7783)
!7816 = !DILocation(line: 161, column: 9, scope: !7783)
!7817 = !DILocation(line: 161, column: 7, scope: !7783)
!7818 = !DILocation(line: 162, column: 2, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7783, file: !7759, line: 162, column: 2)
!7820 = !DILocation(line: 163, column: 21, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7822, file: !7759, line: 162, column: 28)
!7822 = distinct !DILexicalBlock(scope: !7819, file: !7759, line: 162, column: 2)
!7823 = !DILocation(line: 163, column: 10, scope: !7821)
!7824 = !DILocation(line: 163, column: 3, scope: !7821)
!7825 = !DILocation(line: 163, column: 8, scope: !7821)
!7826 = !DILocation(line: 162, column: 23, scope: !7822)
!7827 = !DILocation(line: 162, column: 16, scope: !7822)
!7828 = distinct !{!7828, !7818, !7829}
!7829 = !DILocation(line: 164, column: 2, scope: !7819)
!7830 = !DILocation(line: 165, column: 25, scope: !7783)
!7831 = !DILocation(line: 165, column: 10, scope: !7783)
!7832 = !DILocation(line: 165, column: 2, scope: !7783)
!7833 = !DILocation(line: 165, column: 8, scope: !7783)
!7834 = !DILocation(line: 166, column: 10, scope: !7783)
!7835 = !DILocation(line: 166, column: 2, scope: !7783)
!7836 = !DILocation(line: 166, column: 8, scope: !7783)
!7837 = !DILocation(line: 169, column: 35, scope: !7783)
!7838 = !DILocation(line: 169, column: 9, scope: !7783)
!7839 = !DILocation(line: 170, column: 6, scope: !7783)
!7840 = !DILocation(line: 171, column: 49, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7842, file: !7759, line: 170, column: 16)
!7842 = distinct !DILexicalBlock(scope: !7783, file: !7759, line: 170, column: 6)
!7843 = !DILocation(line: 171, column: 3, scope: !7841)
!7844 = !DILocation(line: 172, column: 2, scope: !7841)
!7845 = !DILocation(line: 173, column: 6, scope: !7783)
!7846 = !DILocation(line: 174, column: 41, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7848, file: !7759, line: 173, column: 16)
!7848 = distinct !DILexicalBlock(scope: !7783, file: !7759, line: 173, column: 6)
!7849 = !DILocation(line: 174, column: 3, scope: !7847)
!7850 = !DILocation(line: 175, column: 2, scope: !7847)
!7851 = !DILocation(line: 180, column: 7, scope: !7783)
!7852 = !DILocation(line: 181, column: 16, scope: !7783)
!7853 = !DILocation(line: 181, column: 8, scope: !7783)
!7854 = !DILocation(line: 184, column: 47, scope: !7783)
!7855 = !DILocation(line: 184, column: 2, scope: !7783)
!7856 = !DILocation(line: 186, column: 16, scope: !7783)
!7857 = !DILocation(line: 186, column: 8, scope: !7783)
!7858 = !DILocation(line: 189, column: 33, scope: !7783)
!7859 = !DILocation(line: 189, column: 9, scope: !7783)
!7860 = !DILocation(line: 191, column: 21, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7862, file: !7759, line: 191, column: 2)
!7862 = distinct !DILexicalBlock(scope: !7783, file: !7759, line: 191, column: 2)
!7863 = !DILocation(line: 191, column: 16, scope: !7861)
!7864 = !DILocation(line: 191, column: 2, scope: !7862)
!7865 = !DILocation(line: 190, column: 6, scope: !7783)
!7866 = !DILocation(line: 192, column: 12, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7861, file: !7759, line: 191, column: 32)
!7868 = !DILocation(line: 192, column: 21, scope: !7867)
!7869 = !DILocation(line: 192, column: 19, scope: !7867)
!7870 = !DILocation(line: 192, column: 7, scope: !7867)
!7871 = !DILocation(line: 192, column: 10, scope: !7867)
!7872 = !DILocation(line: 191, column: 27, scope: !7861)
!7873 = distinct !{!7873, !7864, !7874}
!7874 = !DILocation(line: 193, column: 2, scope: !7862)
!7875 = !DILocation(line: 196, column: 1, scope: !7783)
!7876 = distinct !DISubprogram(name: "ccm_cbc_mac", scope: !7759, file: !7759, line: 64, type: !7877, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !7879)
!7877 = !DISubroutineType(types: !7878)
!7878 = !{null, !184, !490, !32, !32, !2731}
!7879 = !{!7880, !7881, !7882, !7883, !7884, !7885}
!7880 = !DILocalVariable(name: "T", arg: 1, scope: !7876, file: !7759, line: 64, type: !184)
!7881 = !DILocalVariable(name: "data", arg: 2, scope: !7876, file: !7759, line: 64, type: !490)
!7882 = !DILocalVariable(name: "dlen", arg: 3, scope: !7876, file: !7759, line: 64, type: !32)
!7883 = !DILocalVariable(name: "flag", arg: 4, scope: !7876, file: !7759, line: 65, type: !32)
!7884 = !DILocalVariable(name: "sched", arg: 5, scope: !7876, file: !7759, line: 65, type: !2731)
!7885 = !DILocalVariable(name: "i", scope: !7876, file: !7759, line: 68, type: !32)
!7886 = !DILocation(line: 0, scope: !7876)
!7887 = !DILocation(line: 70, column: 11, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7876, file: !7759, line: 70, column: 6)
!7889 = !DILocation(line: 70, column: 6, scope: !7876)
!7890 = !DILocation(line: 71, column: 26, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7888, file: !7759, line: 70, column: 16)
!7892 = !DILocation(line: 71, column: 8, scope: !7891)
!7893 = !DILocation(line: 72, column: 3, scope: !7891)
!7894 = !DILocation(line: 72, column: 8, scope: !7891)
!7895 = !DILocation(line: 73, column: 8, scope: !7891)
!7896 = !DILocation(line: 74, column: 2, scope: !7891)
!7897 = !DILocation(line: 0, scope: !7888)
!7898 = !DILocation(line: 78, column: 11, scope: !7876)
!7899 = !DILocation(line: 78, column: 2, scope: !7876)
!7900 = !DILocation(line: 79, column: 30, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7876, file: !7759, line: 78, column: 19)
!7902 = !DILocation(line: 79, column: 25, scope: !7901)
!7903 = !DILocation(line: 79, column: 6, scope: !7901)
!7904 = !DILocation(line: 79, column: 9, scope: !7901)
!7905 = !DILocation(line: 79, column: 3, scope: !7901)
!7906 = !DILocation(line: 79, column: 22, scope: !7901)
!7907 = !DILocation(line: 80, column: 11, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7901, file: !7759, line: 80, column: 7)
!7909 = !DILocation(line: 80, column: 24, scope: !7908)
!7910 = !DILocation(line: 80, column: 30, scope: !7908)
!7911 = !DILocation(line: 81, column: 11, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7908, file: !7759, line: 80, column: 44)
!7913 = !DILocation(line: 82, column: 3, scope: !7912)
!7914 = distinct !{!7914, !7899, !7915}
!7915 = !DILocation(line: 83, column: 2, scope: !7876)
!7916 = !DILocation(line: 84, column: 1, scope: !7876)
!7917 = distinct !DISubprogram(name: "ccm_ctr_mode", scope: !7759, file: !7759, line: 93, type: !7918, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !7921)
!7918 = !DISubroutineType(types: !7919)
!7919 = !{!125, !184, !32, !490, !32, !184, !7920}
!7920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2731)
!7921 = !{!7922, !7923, !7924, !7925, !7926, !7927, !7928, !7929, !7930, !7931}
!7922 = !DILocalVariable(name: "out", arg: 1, scope: !7917, file: !7759, line: 93, type: !184)
!7923 = !DILocalVariable(name: "outlen", arg: 2, scope: !7917, file: !7759, line: 93, type: !32)
!7924 = !DILocalVariable(name: "in", arg: 3, scope: !7917, file: !7759, line: 93, type: !490)
!7925 = !DILocalVariable(name: "inlen", arg: 4, scope: !7917, file: !7759, line: 94, type: !32)
!7926 = !DILocalVariable(name: "ctr", arg: 5, scope: !7917, file: !7759, line: 94, type: !184)
!7927 = !DILocalVariable(name: "sched", arg: 6, scope: !7917, file: !7759, line: 94, type: !7920)
!7928 = !DILocalVariable(name: "buffer", scope: !7917, file: !7759, line: 97, type: !311)
!7929 = !DILocalVariable(name: "nonce", scope: !7917, file: !7759, line: 98, type: !311)
!7930 = !DILocalVariable(name: "block_num", scope: !7917, file: !7759, line: 99, type: !227)
!7931 = !DILocalVariable(name: "i", scope: !7917, file: !7759, line: 100, type: !32)
!7932 = !DILocation(line: 0, scope: !7917)
!7933 = !DILocation(line: 97, column: 2, scope: !7917)
!7934 = !DILocation(line: 97, column: 10, scope: !7917)
!7935 = !DILocation(line: 98, column: 2, scope: !7917)
!7936 = !DILocation(line: 98, column: 10, scope: !7917)
!7937 = !DILocation(line: 103, column: 10, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7917, file: !7759, line: 103, column: 6)
!7939 = !DILocation(line: 103, column: 27, scope: !7938)
!7940 = !DILocation(line: 114, column: 9, scope: !7917)
!7941 = !DILocation(line: 117, column: 27, scope: !7917)
!7942 = !DILocation(line: 117, column: 44, scope: !7917)
!7943 = !DILocation(line: 117, column: 37, scope: !7917)
!7944 = !DILocation(line: 117, column: 43, scope: !7917)
!7945 = !DILocation(line: 117, column: 42, scope: !7917)
!7946 = !DILocation(line: 118, column: 2, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7917, file: !7759, line: 118, column: 2)
!7948 = !DILocation(line: 119, column: 10, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7950, file: !7759, line: 119, column: 7)
!7950 = distinct !DILexicalBlock(scope: !7951, file: !7759, line: 118, column: 30)
!7951 = distinct !DILexicalBlock(scope: !7947, file: !7759, line: 118, column: 2)
!7952 = !DILocation(line: 119, column: 33, scope: !7949)
!7953 = !DILocation(line: 119, column: 7, scope: !7950)
!7954 = !DILocation(line: 120, column: 13, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7949, file: !7759, line: 119, column: 39)
!7956 = !DILocation(line: 121, column: 36, scope: !7955)
!7957 = !DILocation(line: 121, column: 16, scope: !7955)
!7958 = !DILocation(line: 121, column: 14, scope: !7955)
!7959 = !DILocation(line: 122, column: 16, scope: !7955)
!7960 = !DILocation(line: 122, column: 14, scope: !7955)
!7961 = !DILocation(line: 123, column: 9, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7955, file: !7759, line: 123, column: 8)
!7963 = !DILocation(line: 123, column: 8, scope: !7955)
!7964 = !DILocation(line: 128, column: 12, scope: !7950)
!7965 = !DILocation(line: 128, column: 49, scope: !7950)
!7966 = !DILocation(line: 128, column: 46, scope: !7950)
!7967 = !DILocation(line: 128, column: 44, scope: !7950)
!7968 = !DILocation(line: 128, column: 7, scope: !7950)
!7969 = !DILocation(line: 128, column: 10, scope: !7950)
!7970 = !DILocation(line: 118, column: 25, scope: !7951)
!7971 = !DILocation(line: 118, column: 16, scope: !7951)
!7972 = distinct !{!7972, !7946, !7973}
!7973 = !DILocation(line: 129, column: 2, scope: !7947)
!7974 = !DILocation(line: 132, column: 12, scope: !7917)
!7975 = !DILocation(line: 132, column: 33, scope: !7917)
!7976 = !DILocation(line: 132, column: 2, scope: !7917)
!7977 = !DILocation(line: 132, column: 10, scope: !7917)
!7978 = !DILocation(line: 132, column: 23, scope: !7917)
!7979 = !DILocation(line: 132, column: 31, scope: !7917)
!7980 = !DILocation(line: 134, column: 2, scope: !7917)
!7981 = !DILocation(line: 135, column: 1, scope: !7917)
!7982 = distinct !DISubprogram(name: "tc_ccm_decryption_verification", scope: !7759, file: !7759, line: 198, type: !7784, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !7983)
!7983 = !{!7984, !7985, !7986, !7987, !7988, !7989, !7990, !7991, !7992, !7993}
!7984 = !DILocalVariable(name: "out", arg: 1, scope: !7982, file: !7759, line: 198, type: !184)
!7985 = !DILocalVariable(name: "olen", arg: 2, scope: !7982, file: !7759, line: 198, type: !32)
!7986 = !DILocalVariable(name: "associated_data", arg: 3, scope: !7982, file: !7759, line: 199, type: !490)
!7987 = !DILocalVariable(name: "alen", arg: 4, scope: !7982, file: !7759, line: 200, type: !32)
!7988 = !DILocalVariable(name: "payload", arg: 5, scope: !7982, file: !7759, line: 200, type: !490)
!7989 = !DILocalVariable(name: "plen", arg: 6, scope: !7982, file: !7759, line: 201, type: !32)
!7990 = !DILocalVariable(name: "c", arg: 7, scope: !7982, file: !7759, line: 201, type: !2725)
!7991 = !DILocalVariable(name: "b", scope: !7982, file: !7759, line: 215, type: !311)
!7992 = !DILocalVariable(name: "tag", scope: !7982, file: !7759, line: 216, type: !311)
!7993 = !DILocalVariable(name: "i", scope: !7982, file: !7759, line: 217, type: !32)
!7994 = !DILocation(line: 0, scope: !7982)
!7995 = !DILocation(line: 205, column: 11, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7982, file: !7759, line: 205, column: 6)
!7997 = !DILocation(line: 205, column: 29, scope: !7996)
!7998 = !DILocation(line: 207, column: 13, scope: !7996)
!7999 = !DILocation(line: 207, column: 18, scope: !7996)
!8000 = !DILocation(line: 208, column: 13, scope: !7996)
!8001 = !DILocation(line: 208, column: 18, scope: !7996)
!8002 = !DILocation(line: 211, column: 24, scope: !7996)
!8003 = !DILocation(line: 211, column: 19, scope: !7996)
!8004 = !DILocation(line: 211, column: 12, scope: !7996)
!8005 = !DILocation(line: 205, column: 6, scope: !7982)
!8006 = !DILocation(line: 215, column: 2, scope: !7982)
!8007 = !DILocation(line: 215, column: 10, scope: !7982)
!8008 = !DILocation(line: 216, column: 2, scope: !7982)
!8009 = !DILocation(line: 216, column: 10, scope: !7982)
!8010 = !DILocation(line: 222, column: 7, scope: !7982)
!8011 = !DILocation(line: 223, column: 2, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !7982, file: !7759, line: 223, column: 2)
!8013 = !DILocation(line: 224, column: 21, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8015, file: !7759, line: 223, column: 27)
!8015 = distinct !DILexicalBlock(scope: !8012, file: !7759, line: 223, column: 2)
!8016 = !DILocation(line: 224, column: 10, scope: !8014)
!8017 = !DILocation(line: 224, column: 3, scope: !8014)
!8018 = !DILocation(line: 224, column: 8, scope: !8014)
!8019 = !DILocation(line: 223, column: 22, scope: !8015)
!8020 = !DILocation(line: 223, column: 16, scope: !8015)
!8021 = distinct !{!8021, !8011, !8022}
!8022 = !DILocation(line: 225, column: 2, scope: !8012)
!8023 = !DILocation(line: 226, column: 10, scope: !7982)
!8024 = !DILocation(line: 226, column: 16, scope: !7982)
!8025 = !DILocation(line: 226, column: 2, scope: !7982)
!8026 = !DILocation(line: 226, column: 8, scope: !7982)
!8027 = !DILocation(line: 229, column: 67, scope: !7982)
!8028 = !DILocation(line: 229, column: 2, scope: !7982)
!8029 = !DILocation(line: 231, column: 16, scope: !7982)
!8030 = !DILocation(line: 231, column: 8, scope: !7982)
!8031 = !DILocation(line: 234, column: 33, scope: !7982)
!8032 = !DILocation(line: 234, column: 9, scope: !7982)
!8033 = !DILocation(line: 235, column: 16, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8035, file: !7759, line: 235, column: 2)
!8035 = distinct !DILexicalBlock(scope: !7982, file: !7759, line: 235, column: 2)
!8036 = !DILocation(line: 235, column: 2, scope: !8035)
!8037 = !DILocation(line: 236, column: 39, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8034, file: !7759, line: 235, column: 32)
!8039 = !DILocation(line: 236, column: 12, scope: !8038)
!8040 = !DILocation(line: 236, column: 46, scope: !8038)
!8041 = !DILocation(line: 236, column: 44, scope: !8038)
!8042 = !DILocation(line: 236, column: 3, scope: !8038)
!8043 = !DILocation(line: 236, column: 10, scope: !8038)
!8044 = !DILocation(line: 235, column: 27, scope: !8034)
!8045 = distinct !{!8045, !8036, !8046}
!8046 = !DILocation(line: 237, column: 2, scope: !8035)
!8047 = !DILocation(line: 242, column: 10, scope: !7982)
!8048 = !DILocation(line: 242, column: 51, scope: !7982)
!8049 = !DILocation(line: 242, column: 30, scope: !7982)
!8050 = !DILocation(line: 242, column: 9, scope: !7982)
!8051 = !DILocation(line: 242, column: 7, scope: !7982)
!8052 = !DILocation(line: 243, column: 2, scope: !8053)
!8053 = distinct !DILexicalBlock(scope: !7982, file: !7759, line: 243, column: 2)
!8054 = !DILocation(line: 244, column: 21, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8056, file: !7759, line: 243, column: 27)
!8056 = distinct !DILexicalBlock(scope: !8053, file: !7759, line: 243, column: 2)
!8057 = !DILocation(line: 244, column: 10, scope: !8055)
!8058 = !DILocation(line: 244, column: 3, scope: !8055)
!8059 = !DILocation(line: 244, column: 8, scope: !8055)
!8060 = !DILocation(line: 243, column: 22, scope: !8056)
!8061 = !DILocation(line: 243, column: 16, scope: !8056)
!8062 = distinct !{!8062, !8052, !8063}
!8063 = !DILocation(line: 245, column: 2, scope: !8053)
!8064 = !DILocation(line: 246, column: 26, scope: !7982)
!8065 = !DILocation(line: 246, column: 37, scope: !7982)
!8066 = !DILocation(line: 246, column: 10, scope: !7982)
!8067 = !DILocation(line: 246, column: 8, scope: !7982)
!8068 = !DILocation(line: 247, column: 10, scope: !7982)
!8069 = !DILocation(line: 247, column: 8, scope: !7982)
!8070 = !DILocation(line: 250, column: 33, scope: !7982)
!8071 = !DILocation(line: 250, column: 9, scope: !7982)
!8072 = !DILocation(line: 251, column: 6, scope: !7982)
!8073 = !DILocation(line: 252, column: 47, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8075, file: !7759, line: 251, column: 16)
!8075 = distinct !DILexicalBlock(scope: !7982, file: !7759, line: 251, column: 6)
!8076 = !DILocation(line: 252, column: 3, scope: !8074)
!8077 = !DILocation(line: 253, column: 2, scope: !8074)
!8078 = !DILocation(line: 254, column: 6, scope: !7982)
!8079 = !DILocation(line: 255, column: 33, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8081, file: !7759, line: 254, column: 16)
!8081 = distinct !DILexicalBlock(scope: !7982, file: !7759, line: 254, column: 6)
!8082 = !DILocation(line: 255, column: 28, scope: !8080)
!8083 = !DILocation(line: 255, column: 45, scope: !8080)
!8084 = !DILocation(line: 255, column: 3, scope: !8080)
!8085 = !DILocation(line: 256, column: 2, scope: !8080)
!8086 = !DILocation(line: 259, column: 26, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !7982, file: !7759, line: 259, column: 6)
!8088 = !DILocation(line: 259, column: 6, scope: !8087)
!8089 = !DILocation(line: 259, column: 32, scope: !8087)
!8090 = !DILocation(line: 259, column: 6, scope: !7982)
!8091 = !DILocation(line: 263, column: 26, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8087, file: !7759, line: 261, column: 11)
!8093 = !DILocation(line: 263, column: 21, scope: !8092)
!8094 = !DILocation(line: 263, column: 3, scope: !8092)
!8095 = !DILocation(line: 264, column: 3, scope: !8092)
!8096 = !DILocation(line: 0, scope: !8087)
!8097 = !DILocation(line: 266, column: 1, scope: !7982)
!8098 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !8099, file: !8099, line: 57, type: !8100, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2738, retainedNodes: !8146)
!8099 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8100 = !DISubroutineType(types: !8101)
!8101 = !{null, !32, !8102}
!8102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8103, size: 32)
!8103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8104)
!8104 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2858, line: 141, baseType: !8105)
!8105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2858, line: 97, size: 256, elements: !8106)
!8106 = !{!8107}
!8107 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !8105, file: !2858, line: 107, baseType: !8108, size: 256)
!8108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2858, line: 98, size: 256, elements: !8109)
!8109 = !{!8110, !8115, !8120, !8125, !8130, !8135, !8140, !8145}
!8110 = !DIDerivedType(tag: DW_TAG_member, scope: !8108, file: !2858, line: 99, baseType: !8111, size: 32)
!8111 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8108, file: !2858, line: 99, size: 32, elements: !8112)
!8112 = !{!8113, !8114}
!8113 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !8111, file: !2858, line: 99, baseType: !208, size: 32)
!8114 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !8111, file: !2858, line: 99, baseType: !208, size: 32)
!8115 = !DIDerivedType(tag: DW_TAG_member, scope: !8108, file: !2858, line: 100, baseType: !8116, size: 32, offset: 32)
!8116 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8108, file: !2858, line: 100, size: 32, elements: !8117)
!8117 = !{!8118, !8119}
!8118 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !8116, file: !2858, line: 100, baseType: !208, size: 32)
!8119 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !8116, file: !2858, line: 100, baseType: !208, size: 32)
!8120 = !DIDerivedType(tag: DW_TAG_member, scope: !8108, file: !2858, line: 101, baseType: !8121, size: 32, offset: 64)
!8121 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8108, file: !2858, line: 101, size: 32, elements: !8122)
!8122 = !{!8123, !8124}
!8123 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !8121, file: !2858, line: 101, baseType: !208, size: 32)
!8124 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !8121, file: !2858, line: 101, baseType: !208, size: 32)
!8125 = !DIDerivedType(tag: DW_TAG_member, scope: !8108, file: !2858, line: 102, baseType: !8126, size: 32, offset: 96)
!8126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8108, file: !2858, line: 102, size: 32, elements: !8127)
!8127 = !{!8128, !8129}
!8128 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !8126, file: !2858, line: 102, baseType: !208, size: 32)
!8129 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !8126, file: !2858, line: 102, baseType: !208, size: 32)
!8130 = !DIDerivedType(tag: DW_TAG_member, scope: !8108, file: !2858, line: 103, baseType: !8131, size: 32, offset: 128)
!8131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8108, file: !2858, line: 103, size: 32, elements: !8132)
!8132 = !{!8133, !8134}
!8133 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !8131, file: !2858, line: 103, baseType: !208, size: 32)
!8134 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !8131, file: !2858, line: 103, baseType: !208, size: 32)
!8135 = !DIDerivedType(tag: DW_TAG_member, scope: !8108, file: !2858, line: 104, baseType: !8136, size: 32, offset: 160)
!8136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8108, file: !2858, line: 104, size: 32, elements: !8137)
!8137 = !{!8138, !8139}
!8138 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !8136, file: !2858, line: 104, baseType: !208, size: 32)
!8139 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !8136, file: !2858, line: 104, baseType: !208, size: 32)
!8140 = !DIDerivedType(tag: DW_TAG_member, scope: !8108, file: !2858, line: 105, baseType: !8141, size: 32, offset: 192)
!8141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8108, file: !2858, line: 105, size: 32, elements: !8142)
!8142 = !{!8143, !8144}
!8143 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !8141, file: !2858, line: 105, baseType: !208, size: 32)
!8144 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !8141, file: !2858, line: 105, baseType: !208, size: 32)
!8145 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !8108, file: !2858, line: 106, baseType: !208, size: 32, offset: 224)
!8146 = !{!8147, !8148}
!8147 = !DILocalVariable(name: "reason", arg: 1, scope: !8098, file: !8099, line: 57, type: !32)
!8148 = !DILocalVariable(name: "esf", arg: 2, scope: !8098, file: !8099, line: 57, type: !8102)
!8149 = !DILocation(line: 0, scope: !8098)
!8150 = !DILocation(line: 60, column: 10, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8098, file: !8099, line: 60, column: 6)
!8152 = !DILocation(line: 60, column: 6, scope: !8098)
!8153 = !DILocation(line: 61, column: 3, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8151, file: !8099, line: 60, column: 19)
!8155 = !DILocation(line: 62, column: 2, scope: !8154)
!8156 = !DILocation(line: 63, column: 2, scope: !8098)
!8157 = !DILocation(line: 64, column: 1, scope: !8098)
!8158 = distinct !DISubprogram(name: "esf_dump", scope: !8099, file: !8099, line: 20, type: !8159, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2738, retainedNodes: !8161)
!8159 = !DISubroutineType(types: !8160)
!8160 = !{null, !8102}
!8161 = !{!8162}
!8162 = !DILocalVariable(name: "esf", arg: 1, scope: !8158, file: !8099, line: 20, type: !8102)
!8163 = !DILocation(line: 0, scope: !8158)
!8164 = !DILocation(line: 22, column: 2, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8166, file: !8099, line: 22, column: 2)
!8166 = distinct !DILexicalBlock(scope: !8167, file: !8099, line: 22, column: 2)
!8167 = distinct !DILexicalBlock(scope: !8168, file: !8099, line: 22, column: 2)
!8168 = distinct !DILexicalBlock(scope: !8158, file: !8099, line: 22, column: 2)
!8169 = !DILocation(line: 24, column: 2, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8171, file: !8099, line: 24, column: 2)
!8171 = distinct !DILexicalBlock(scope: !8172, file: !8099, line: 24, column: 2)
!8172 = distinct !DILexicalBlock(scope: !8173, file: !8099, line: 24, column: 2)
!8173 = distinct !DILexicalBlock(scope: !8158, file: !8099, line: 24, column: 2)
!8174 = !DILocation(line: 26, column: 2, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8176, file: !8099, line: 26, column: 2)
!8176 = distinct !DILexicalBlock(scope: !8177, file: !8099, line: 26, column: 2)
!8177 = distinct !DILexicalBlock(scope: !8178, file: !8099, line: 26, column: 2)
!8178 = distinct !DILexicalBlock(scope: !8158, file: !8099, line: 26, column: 2)
!8179 = !DILocation(line: 53, column: 2, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8181, file: !8099, line: 53, column: 2)
!8181 = distinct !DILexicalBlock(scope: !8182, file: !8099, line: 53, column: 2)
!8182 = distinct !DILexicalBlock(scope: !8183, file: !8099, line: 53, column: 2)
!8183 = distinct !DILexicalBlock(scope: !8158, file: !8099, line: 53, column: 2)
!8184 = !DILocation(line: 55, column: 1, scope: !8158)
!8185 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !8099, file: !8099, line: 82, type: !8186, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2738, retainedNodes: !8201)
!8186 = !DISubroutineType(types: !8187)
!8187 = !{null, !8102, !8188}
!8188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8189, size: 32)
!8189 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !601, line: 37, baseType: !8190)
!8190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !8191)
!8191 = !{!8192, !8193, !8194, !8195, !8196, !8197, !8198, !8199, !8200}
!8192 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8190, file: !601, line: 26, baseType: !208, size: 32)
!8193 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8190, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!8194 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8190, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!8195 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8190, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!8196 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8190, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!8197 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8190, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!8198 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8190, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!8199 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8190, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!8200 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8190, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!8201 = !{!8202, !8203, !8204}
!8202 = !DILocalVariable(name: "esf", arg: 1, scope: !8185, file: !8099, line: 82, type: !8102)
!8203 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !8185, file: !8099, line: 82, type: !8188)
!8204 = !DILocalVariable(name: "reason", scope: !8185, file: !8099, line: 88, type: !32)
!8205 = !DILocation(line: 0, scope: !8185)
!8206 = !DILocation(line: 88, column: 35, scope: !8185)
!8207 = !DILocation(line: 108, column: 2, scope: !8185)
!8208 = !DILocation(line: 131, column: 1, scope: !8185)
!8209 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !8099, file: !8099, line: 133, type: !8210, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2738, retainedNodes: !8212)
!8210 = !DISubroutineType(types: !8211)
!8211 = !{null, !124}
!8212 = !{!8213, !8214, !8215}
!8213 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !8209, file: !8099, line: 133, type: !124)
!8214 = !DILocalVariable(name: "ssf_contents", scope: !8209, file: !8099, line: 135, type: !1009)
!8215 = !DILocalVariable(name: "oops_esf", scope: !8209, file: !8099, line: 136, type: !8104)
!8216 = !DILocation(line: 0, scope: !8209)
!8217 = !DILocation(line: 136, column: 2, scope: !8209)
!8218 = !DILocation(line: 136, column: 15, scope: !8209)
!8219 = !DILocation(line: 139, column: 22, scope: !8209)
!8220 = !DILocation(line: 139, column: 17, scope: !8209)
!8221 = !DILocation(line: 139, column: 20, scope: !8209)
!8222 = !DILocation(line: 141, column: 2, scope: !8209)
!8223 = !DILocation(line: 142, column: 2, scope: !8209)
!8224 = distinct !DISubprogram(name: "arch_irq_enable", scope: !8225, file: !8225, line: 40, type: !6817, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !8226)
!8225 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8226 = !{!8227}
!8227 = !DILocalVariable(name: "irq", arg: 1, scope: !8224, file: !8225, line: 40, type: !32)
!8228 = !DILocation(line: 0, scope: !8224)
!8229 = !DILocation(line: 42, column: 2, scope: !8224)
!8230 = !DILocation(line: 43, column: 1, scope: !8224)
!8231 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !680, file: !680, line: 1684, type: !8232, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !8234)
!8232 = !DISubroutineType(types: !8233)
!8233 = !{null, !914}
!8234 = !{!8235}
!8235 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8231, file: !680, line: 1684, type: !914)
!8236 = !DILocation(line: 0, scope: !8231)
!8237 = !DILocation(line: 1686, column: 23, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8231, file: !680, line: 1686, column: 7)
!8239 = !DILocation(line: 1686, column: 7, scope: !8231)
!8240 = !DILocation(line: 1688, column: 5, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8238, file: !680, line: 1687, column: 3)
!8242 = !{i64 2150357015}
!8243 = !DILocation(line: 1689, column: 81, scope: !8241)
!8244 = !DILocation(line: 1689, column: 60, scope: !8241)
!8245 = !DILocation(line: 1689, column: 34, scope: !8241)
!8246 = !DILocation(line: 1689, column: 5, scope: !8241)
!8247 = !DILocation(line: 1689, column: 43, scope: !8241)
!8248 = !DILocation(line: 1690, column: 5, scope: !8241)
!8249 = !{i64 2150357129}
!8250 = !DILocation(line: 1691, column: 3, scope: !8241)
!8251 = !DILocation(line: 1692, column: 1, scope: !8231)
!8252 = distinct !DISubprogram(name: "arch_irq_disable", scope: !8225, file: !8225, line: 45, type: !6817, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !8253)
!8253 = !{!8254}
!8254 = !DILocalVariable(name: "irq", arg: 1, scope: !8252, file: !8225, line: 45, type: !32)
!8255 = !DILocation(line: 0, scope: !8252)
!8256 = !DILocation(line: 47, column: 2, scope: !8252)
!8257 = !DILocation(line: 48, column: 1, scope: !8252)
!8258 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !680, file: !680, line: 1722, type: !8232, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !8259)
!8259 = !{!8260}
!8260 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8258, file: !680, line: 1722, type: !914)
!8261 = !DILocation(line: 0, scope: !8258)
!8262 = !DILocation(line: 1724, column: 23, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8258, file: !680, line: 1724, column: 7)
!8264 = !DILocation(line: 1724, column: 7, scope: !8258)
!8265 = !DILocation(line: 1726, column: 81, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8263, file: !680, line: 1725, column: 3)
!8267 = !DILocation(line: 1726, column: 60, scope: !8266)
!8268 = !DILocation(line: 1726, column: 34, scope: !8266)
!8269 = !DILocation(line: 1726, column: 5, scope: !8266)
!8270 = !DILocation(line: 1726, column: 43, scope: !8266)
!8271 = !DILocation(line: 271, column: 3, scope: !8272, inlinedAt: !8274)
!8272 = distinct !DISubprogram(name: "__DSB", scope: !8273, file: !8273, line: 269, type: !3278, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !639)
!8273 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8274 = distinct !DILocation(line: 1727, column: 5, scope: !8266)
!8275 = !{i64 2811398}
!8276 = !DILocation(line: 260, column: 3, scope: !8277, inlinedAt: !8278)
!8277 = distinct !DISubprogram(name: "__ISB", scope: !8273, file: !8273, line: 258, type: !3278, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !639)
!8278 = distinct !DILocation(line: 1728, column: 5, scope: !8266)
!8279 = !{i64 2811115}
!8280 = !DILocation(line: 1729, column: 3, scope: !8266)
!8281 = !DILocation(line: 1730, column: 1, scope: !8258)
!8282 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !8225, file: !8225, line: 50, type: !8283, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !8285)
!8283 = !DISubroutineType(types: !8284)
!8284 = !{!125, !32}
!8285 = !{!8286}
!8286 = !DILocalVariable(name: "irq", arg: 1, scope: !8282, file: !8225, line: 50, type: !32)
!8287 = !DILocation(line: 0, scope: !8282)
!8288 = !DILocation(line: 52, column: 20, scope: !8282)
!8289 = !DILocation(line: 52, column: 9, scope: !8282)
!8290 = !DILocation(line: 52, column: 41, scope: !8282)
!8291 = !DILocation(line: 52, column: 39, scope: !8282)
!8292 = !DILocation(line: 52, column: 2, scope: !8282)
!8293 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !8225, file: !8225, line: 64, type: !8294, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !8296)
!8294 = !DISubroutineType(types: !8295)
!8295 = !{null, !32, !32, !208}
!8296 = !{!8297, !8298, !8299}
!8297 = !DILocalVariable(name: "irq", arg: 1, scope: !8293, file: !8225, line: 64, type: !32)
!8298 = !DILocalVariable(name: "prio", arg: 2, scope: !8293, file: !8225, line: 64, type: !32)
!8299 = !DILocalVariable(name: "flags", arg: 3, scope: !8293, file: !8225, line: 64, type: !208)
!8300 = !DILocation(line: 0, scope: !8293)
!8301 = !DILocation(line: 83, column: 8, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8303, file: !8225, line: 82, column: 9)
!8303 = distinct !DILexicalBlock(scope: !8293, file: !8225, line: 76, column: 6)
!8304 = !DILocation(line: 95, column: 2, scope: !8293)
!8305 = !DILocation(line: 96, column: 1, scope: !8293)
!8306 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8307, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !8309)
!8307 = !DISubroutineType(types: !8308)
!8308 = !{null, !914, !208}
!8309 = !{!8310, !8311}
!8310 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8306, file: !680, line: 1814, type: !914)
!8311 = !DILocalVariable(name: "priority", arg: 2, scope: !8306, file: !680, line: 1814, type: !208)
!8312 = !DILocation(line: 0, scope: !8306)
!8313 = !DILocation(line: 0, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8306, file: !680, line: 1816, column: 7)
!8315 = !DILocation(line: 1816, column: 7, scope: !8306)
!8316 = !DILocation(line: 1824, column: 1, scope: !8306)
!8317 = distinct !DISubprogram(name: "z_irq_spurious", scope: !8225, file: !8225, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !8318)
!8318 = !{!8319}
!8319 = !DILocalVariable(name: "unused", arg: 1, scope: !8317, file: !8225, line: 155, type: !13)
!8320 = !DILocation(line: 0, scope: !8317)
!8321 = !DILocation(line: 159, column: 2, scope: !8317)
!8322 = !DILocation(line: 160, column: 1, scope: !8317)
!8323 = distinct !DISubprogram(name: "z_arm_nmi", scope: !8324, file: !8324, line: 87, type: !3278, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2795, retainedNodes: !639)
!8324 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8325 = !DILocation(line: 89, column: 2, scope: !8323)
!8326 = !DILocation(line: 90, column: 2, scope: !8323)
!8327 = !DILocation(line: 91, column: 1, scope: !8323)
!8328 = !DISubprogram(name: "z_SysNmiOnReset", scope: !8324, file: !8324, line: 23, type: !3278, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!8329 = !DISubprogram(name: "z_arm_int_exit", scope: !8330, file: !8330, line: 153, type: !3278, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!8330 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8331 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !8332, file: !8332, line: 256, type: !3278, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !639)
!8332 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8333 = !DILocation(line: 258, column: 2, scope: !8331)
!8334 = !DILocation(line: 260, column: 2, scope: !8331)
!8335 = !DILocation(line: 262, column: 2, scope: !8331)
!8336 = !DILocation(line: 263, column: 2, scope: !8331)
!8337 = !DILocation(line: 267, column: 2, scope: !8331)
!8338 = !DILocation(line: 268, column: 2, scope: !8331)
!8339 = distinct !DISubprogram(name: "relocate_vector_table", scope: !8332, file: !8332, line: 53, type: !3278, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !639)
!8340 = !DILocation(line: 55, column: 12, scope: !8339)
!8341 = !DILocation(line: 271, column: 3, scope: !8342, inlinedAt: !8343)
!8342 = distinct !DISubprogram(name: "__DSB", scope: !8273, file: !8273, line: 269, type: !3278, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !639)
!8343 = distinct !DILocation(line: 56, column: 2, scope: !8339)
!8344 = !{i64 2810069}
!8345 = !DILocation(line: 260, column: 3, scope: !8346, inlinedAt: !8347)
!8346 = distinct !DISubprogram(name: "__ISB", scope: !8273, file: !8273, line: 258, type: !3278, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !639)
!8347 = distinct !DILocation(line: 57, column: 2, scope: !8339)
!8348 = !{i64 2809786}
!8349 = !DILocation(line: 58, column: 1, scope: !8339)
!8350 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !8332, file: !8332, line: 96, type: !3278, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !639)
!8351 = !DILocation(line: 103, column: 13, scope: !8350)
!8352 = !DILocation(line: 975, column: 3, scope: !8353, inlinedAt: !8358)
!8353 = distinct !DISubprogram(name: "__get_CONTROL", scope: !8273, file: !8273, line: 971, type: !8354, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !8356)
!8354 = !DISubroutineType(types: !8355)
!8355 = !{!208}
!8356 = !{!8357}
!8357 = !DILocalVariable(name: "result", scope: !8353, file: !8273, line: 973, type: !208)
!8358 = distinct !DILocation(line: 189, column: 16, scope: !8350)
!8359 = !{i64 2830899}
!8360 = !DILocation(line: 0, scope: !8353, inlinedAt: !8358)
!8361 = !DILocation(line: 189, column: 32, scope: !8350)
!8362 = !DILocalVariable(name: "control", arg: 1, scope: !8363, file: !8273, line: 1001, type: !208)
!8363 = distinct !DISubprogram(name: "__set_CONTROL", scope: !8273, file: !8273, line: 1001, type: !8364, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !8366)
!8364 = !DISubroutineType(types: !8365)
!8365 = !{null, !208}
!8366 = !{!8362}
!8367 = !DILocation(line: 0, scope: !8363, inlinedAt: !8368)
!8368 = distinct !DILocation(line: 189, column: 2, scope: !8350)
!8369 = !DILocation(line: 1003, column: 3, scope: !8363, inlinedAt: !8368)
!8370 = !{i64 2831619}
!8371 = !DILocation(line: 260, column: 3, scope: !8346, inlinedAt: !8372)
!8372 = distinct !DILocation(line: 1004, column: 3, scope: !8363, inlinedAt: !8368)
!8373 = !DILocation(line: 191, column: 1, scope: !8350)
!8374 = distinct !DISubprogram(name: "arch_swap", scope: !8375, file: !8375, line: 33, type: !8283, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !8376)
!8375 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8376 = !{!8377}
!8377 = !DILocalVariable(name: "key", arg: 1, scope: !8374, file: !8375, line: 33, type: !32)
!8378 = !DILocation(line: 0, scope: !8374)
!8379 = !DILocation(line: 36, column: 2, scope: !8374)
!8380 = !DILocation(line: 36, column: 17, scope: !8374)
!8381 = !DILocation(line: 36, column: 25, scope: !8374)
!8382 = !DILocation(line: 37, column: 37, scope: !8374)
!8383 = !DILocation(line: 37, column: 17, scope: !8374)
!8384 = !DILocation(line: 37, column: 35, scope: !8374)
!8385 = !DILocation(line: 41, column: 12, scope: !8374)
!8386 = !DILocalVariable(name: "key", arg: 1, scope: !8387, file: !6806, line: 84, type: !32)
!8387 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6806, file: !6806, line: 84, type: !6817, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !8388)
!8388 = !{!8386}
!8389 = !DILocation(line: 0, scope: !8387, inlinedAt: !8390)
!8390 = distinct !DILocation(line: 44, column: 2, scope: !8374)
!8391 = !DILocation(line: 95, column: 2, scope: !8387, inlinedAt: !8390)
!8392 = !{i64 1949265}
!8393 = !DILocation(line: 53, column: 9, scope: !8374)
!8394 = !DILocation(line: 53, column: 24, scope: !8374)
!8395 = !DILocation(line: 53, column: 2, scope: !8374)
!8396 = distinct !DISubprogram(name: "arch_new_thread", scope: !8397, file: !8397, line: 56, type: !8398, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !8505)
!8397 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8398 = !DISubroutineType(types: !8399)
!8399 = !{null, !8400, !8500, !393, !5228, !124, !124, !124}
!8400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8401, size: 32)
!8401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !8402)
!8402 = !{!8403, !8461, !8473, !8474, !8475, !8476, !8482, !8495}
!8403 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8401, file: !531, line: 247, baseType: !8404, size: 384)
!8404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !8405)
!8405 = !{!8406, !8430, !8437, !8438, !8439, !8448, !8449, !8450}
!8406 = !DIDerivedType(tag: DW_TAG_member, scope: !8404, file: !531, line: 60, baseType: !8407, size: 64)
!8407 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8404, file: !531, line: 60, size: 64, elements: !8408)
!8408 = !{!8409, !8424}
!8409 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8407, file: !531, line: 61, baseType: !8410, size: 64)
!8410 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !8411)
!8411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !8412)
!8412 = !{!8413, !8419}
!8413 = !DIDerivedType(tag: DW_TAG_member, scope: !8411, file: !541, line: 38, baseType: !8414, size: 32)
!8414 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8411, file: !541, line: 38, size: 32, elements: !8415)
!8415 = !{!8416, !8418}
!8416 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8414, file: !541, line: 39, baseType: !8417, size: 32)
!8417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8411, size: 32)
!8418 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8414, file: !541, line: 40, baseType: !8417, size: 32)
!8419 = !DIDerivedType(tag: DW_TAG_member, scope: !8411, file: !541, line: 42, baseType: !8420, size: 32, offset: 32)
!8420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8411, file: !541, line: 42, size: 32, elements: !8421)
!8421 = !{!8422, !8423}
!8422 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8420, file: !541, line: 43, baseType: !8417, size: 32)
!8423 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8420, file: !541, line: 44, baseType: !8417, size: 32)
!8424 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8407, file: !531, line: 62, baseType: !8425, size: 64)
!8425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !8426)
!8426 = !{!8427}
!8427 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8425, file: !557, line: 50, baseType: !8428, size: 64)
!8428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8429, size: 64, elements: !562)
!8429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8425, size: 32)
!8430 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8404, file: !531, line: 68, baseType: !8431, size: 32, offset: 64)
!8431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8432, size: 32)
!8432 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !8433)
!8433 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !8434)
!8434 = !{!8435}
!8435 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8433, file: !567, line: 232, baseType: !8436, size: 64)
!8436 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !8411)
!8437 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8404, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!8438 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8404, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!8439 = !DIDerivedType(tag: DW_TAG_member, scope: !8404, file: !531, line: 90, baseType: !8440, size: 16, offset: 112)
!8440 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8404, file: !531, line: 90, size: 16, elements: !8441)
!8441 = !{!8442, !8447}
!8442 = !DIDerivedType(tag: DW_TAG_member, scope: !8440, file: !531, line: 91, baseType: !8443, size: 16)
!8443 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8440, file: !531, line: 91, size: 16, elements: !8444)
!8444 = !{!8445, !8446}
!8445 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8443, file: !531, line: 96, baseType: !581, size: 8)
!8446 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8443, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!8447 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8440, file: !531, line: 100, baseType: !227, size: 16)
!8448 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8404, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!8449 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8404, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!8450 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8404, file: !531, line: 131, baseType: !8451, size: 192, offset: 192)
!8451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !8452)
!8452 = !{!8453, !8454, !8460}
!8453 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8451, file: !567, line: 245, baseType: !8410, size: 64)
!8454 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8451, file: !567, line: 246, baseType: !8455, size: 32, offset: 64)
!8455 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !8456)
!8456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8457, size: 32)
!8457 = !DISubroutineType(types: !8458)
!8458 = !{null, !8459}
!8459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8451, size: 32)
!8460 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8451, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!8461 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8401, file: !531, line: 250, baseType: !8462, size: 288, offset: 384)
!8462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !8463)
!8463 = !{!8464, !8465, !8466, !8467, !8468, !8469, !8470, !8471, !8472}
!8464 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8462, file: !601, line: 26, baseType: !208, size: 32)
!8465 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8462, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!8466 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8462, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!8467 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8462, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!8468 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8462, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!8469 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8462, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!8470 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8462, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!8471 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8462, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!8472 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8462, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!8473 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8401, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8401, file: !531, line: 256, baseType: !8432, size: 64, offset: 704)
!8475 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8401, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!8476 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8401, file: !531, line: 300, baseType: !8477, size: 96, offset: 800)
!8477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !8478)
!8478 = !{!8479, !8480, !8481}
!8479 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8477, file: !531, line: 153, baseType: !22, size: 32)
!8480 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8477, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!8481 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8477, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!8482 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8401, file: !531, line: 325, baseType: !8483, size: 32, offset: 896)
!8483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8484, size: 32)
!8484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !8485)
!8485 = !{!8486, !8492, !8493}
!8486 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8484, file: !624, line: 5074, baseType: !8487, size: 96)
!8487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !8488)
!8488 = !{!8489, !8490, !8491}
!8489 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8487, file: !628, line: 57, baseType: !631, size: 32)
!8490 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8487, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!8491 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8487, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!8492 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8484, file: !624, line: 5075, baseType: !8432, size: 64, offset: 96)
!8493 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8484, file: !624, line: 5076, baseType: !8494, offset: 160)
!8494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!8495 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8401, file: !531, line: 343, baseType: !8496, size: 64, offset: 928)
!8496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !8497)
!8497 = !{!8498, !8499}
!8498 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8496, file: !601, line: 63, baseType: !208, size: 32)
!8499 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8496, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!8500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8501, size: 32)
!8501 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5229, line: 44, baseType: !8502)
!8502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2330, line: 47, size: 8, elements: !8503)
!8503 = !{!8504}
!8504 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8502, file: !2330, line: 48, baseType: !142, size: 8)
!8505 = !{!8506, !8507, !8508, !8509, !8510, !8511, !8512, !8513}
!8506 = !DILocalVariable(name: "thread", arg: 1, scope: !8396, file: !8397, line: 56, type: !8400)
!8507 = !DILocalVariable(name: "stack", arg: 2, scope: !8396, file: !8397, line: 56, type: !8500)
!8508 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !8396, file: !8397, line: 57, type: !393)
!8509 = !DILocalVariable(name: "entry", arg: 4, scope: !8396, file: !8397, line: 57, type: !5228)
!8510 = !DILocalVariable(name: "p1", arg: 5, scope: !8396, file: !8397, line: 58, type: !124)
!8511 = !DILocalVariable(name: "p2", arg: 6, scope: !8396, file: !8397, line: 58, type: !124)
!8512 = !DILocalVariable(name: "p3", arg: 7, scope: !8396, file: !8397, line: 58, type: !124)
!8513 = !DILocalVariable(name: "iframe", scope: !8396, file: !8397, line: 60, type: !2856)
!8514 = !DILocation(line: 0, scope: !8396)
!8515 = !DILocation(line: 85, column: 11, scope: !8396)
!8516 = !DILocation(line: 93, column: 10, scope: !8396)
!8517 = !DILocation(line: 98, column: 13, scope: !8396)
!8518 = !DILocation(line: 100, column: 15, scope: !8396)
!8519 = !DILocation(line: 100, column: 10, scope: !8396)
!8520 = !DILocation(line: 100, column: 13, scope: !8396)
!8521 = !DILocation(line: 101, column: 15, scope: !8396)
!8522 = !DILocation(line: 101, column: 10, scope: !8396)
!8523 = !DILocation(line: 101, column: 13, scope: !8396)
!8524 = !DILocation(line: 102, column: 15, scope: !8396)
!8525 = !DILocation(line: 102, column: 10, scope: !8396)
!8526 = !DILocation(line: 102, column: 13, scope: !8396)
!8527 = !DILocation(line: 103, column: 15, scope: !8396)
!8528 = !DILocation(line: 103, column: 10, scope: !8396)
!8529 = !DILocation(line: 103, column: 13, scope: !8396)
!8530 = !DILocation(line: 106, column: 10, scope: !8396)
!8531 = !DILocation(line: 106, column: 15, scope: !8396)
!8532 = !DILocation(line: 122, column: 29, scope: !8396)
!8533 = !DILocation(line: 122, column: 23, scope: !8396)
!8534 = !DILocation(line: 122, column: 27, scope: !8396)
!8535 = !DILocation(line: 123, column: 15, scope: !8396)
!8536 = !DILocation(line: 123, column: 23, scope: !8396)
!8537 = !DILocation(line: 143, column: 1, scope: !8396)
!8538 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !8397, file: !8397, line: 385, type: !8539, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !8542)
!8539 = !DISubroutineType(types: !8540)
!8540 = !{!208, !8541, !8541}
!8541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!8542 = !{!8543, !8544, !8545, !8548}
!8543 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !8538, file: !8397, line: 385, type: !8541)
!8544 = !DILocalVariable(name: "psp", arg: 2, scope: !8538, file: !8397, line: 385, type: !8541)
!8545 = !DILocalVariable(name: "thread", scope: !8538, file: !8397, line: 388, type: !8546)
!8546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8547, size: 32)
!8547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8401)
!8548 = !DILocalVariable(name: "guard_len", scope: !8538, file: !8397, line: 405, type: !208)
!8549 = !DILocation(line: 0, scope: !8538)
!8550 = !DILocation(line: 388, column: 34, scope: !8538)
!8551 = !DILocation(line: 390, column: 13, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8538, file: !8397, line: 390, column: 6)
!8553 = !DILocation(line: 390, column: 6, scope: !8538)
!8554 = !DILocation(line: 438, column: 6, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8538, file: !8397, line: 438, column: 6)
!8556 = !DILocation(line: 438, column: 6, scope: !8538)
!8557 = !DILocation(line: 442, column: 3, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !8555, file: !8397, line: 440, column: 22)
!8559 = !DILocation(line: 455, column: 1, scope: !8538)
!8560 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !8397, file: !8397, line: 530, type: !8561, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !8563)
!8561 = !DISubroutineType(types: !8562)
!8562 = !{null, !8400, !393, !5228}
!8563 = !{!8564, !8565, !8566}
!8564 = !DILocalVariable(name: "main_thread", arg: 1, scope: !8560, file: !8397, line: 530, type: !8400)
!8565 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !8560, file: !8397, line: 530, type: !393)
!8566 = !DILocalVariable(name: "_main", arg: 3, scope: !8560, file: !8397, line: 531, type: !5228)
!8567 = !DILocation(line: 0, scope: !8560)
!8568 = !DILocation(line: 535, column: 11, scope: !8560)
!8569 = !DILocation(line: 560, column: 2, scope: !8560)
!8570 = !DILocation(line: 576, column: 2, scope: !8560)
!8571 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!8572 = !DILocation(line: 603, column: 2, scope: !8560)
!8573 = distinct !DISubprogram(name: "z_arm_fault", scope: !8574, file: !8574, line: 1036, type: !8575, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !8590)
!8574 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8575 = !DISubroutineType(types: !8576)
!8576 = !{null, !208, !208, !208, !8577}
!8577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8578, size: 32)
!8578 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !601, line: 37, baseType: !8579)
!8579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !8580)
!8580 = !{!8581, !8582, !8583, !8584, !8585, !8586, !8587, !8588, !8589}
!8581 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8579, file: !601, line: 26, baseType: !208, size: 32)
!8582 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8579, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!8583 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8579, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!8584 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8579, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!8585 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8579, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!8586 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8579, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!8587 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8579, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!8588 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8579, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!8589 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8579, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!8590 = !{!8591, !8592, !8593, !8594, !8595, !8596, !8597, !8598, !8599, !8600}
!8591 = !DILocalVariable(name: "msp", arg: 1, scope: !8573, file: !8574, line: 1036, type: !208)
!8592 = !DILocalVariable(name: "psp", arg: 2, scope: !8573, file: !8574, line: 1036, type: !208)
!8593 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8573, file: !8574, line: 1036, type: !208)
!8594 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !8573, file: !8574, line: 1037, type: !8577)
!8595 = !DILocalVariable(name: "reason", scope: !8573, file: !8574, line: 1039, type: !208)
!8596 = !DILocalVariable(name: "fault", scope: !8573, file: !8574, line: 1040, type: !125)
!8597 = !DILocalVariable(name: "recoverable", scope: !8573, file: !8574, line: 1041, type: !153)
!8598 = !DILocalVariable(name: "nested_exc", scope: !8573, file: !8574, line: 1041, type: !153)
!8599 = !DILocalVariable(name: "esf", scope: !8573, file: !8574, line: 1042, type: !2924)
!8600 = !DILocalVariable(name: "esf_copy", scope: !8573, file: !8574, line: 1047, type: !2925)
!8601 = !DILocation(line: 0, scope: !8573)
!8602 = !DILocation(line: 1040, column: 19, scope: !8573)
!8603 = !DILocation(line: 1040, column: 24, scope: !8573)
!8604 = !DILocation(line: 1041, column: 2, scope: !8573)
!8605 = !DILocation(line: 1047, column: 2, scope: !8573)
!8606 = !DILocation(line: 1047, column: 15, scope: !8573)
!8607 = !DILocalVariable(name: "key", arg: 1, scope: !8608, file: !6806, line: 84, type: !32)
!8608 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6806, file: !6806, line: 84, type: !6817, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !8609)
!8609 = !{!8607}
!8610 = !DILocation(line: 0, scope: !8608, inlinedAt: !8611)
!8611 = distinct !DILocation(line: 1050, column: 2, scope: !8573)
!8612 = !DILocation(line: 95, column: 2, scope: !8608, inlinedAt: !8611)
!8613 = !{i64 1982509}
!8614 = !DILocation(line: 1055, column: 9, scope: !8573)
!8615 = !DILocation(line: 1063, column: 11, scope: !8573)
!8616 = !DILocation(line: 1064, column: 6, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8573, file: !8574, line: 1064, column: 6)
!8618 = !{i8 0, i8 2}
!8619 = !DILocation(line: 1064, column: 6, scope: !8573)
!8620 = !DILocation(line: 1070, column: 20, scope: !8573)
!8621 = !DILocation(line: 1070, column: 2, scope: !8573)
!8622 = !DILocation(line: 1089, column: 6, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8573, file: !8574, line: 1089, column: 6)
!8624 = !DILocation(line: 0, scope: !8623)
!8625 = !DILocation(line: 1089, column: 6, scope: !8573)
!8626 = !DILocation(line: 1090, column: 28, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8628, file: !8574, line: 1090, column: 7)
!8628 = distinct !DILexicalBlock(scope: !8623, file: !8574, line: 1089, column: 18)
!8629 = !DILocation(line: 1090, column: 44, scope: !8627)
!8630 = !DILocation(line: 1090, column: 7, scope: !8628)
!8631 = !DILocation(line: 1091, column: 24, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8627, file: !8574, line: 1090, column: 50)
!8633 = !DILocation(line: 1092, column: 3, scope: !8632)
!8634 = !DILocation(line: 1094, column: 23, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8623, file: !8574, line: 1093, column: 9)
!8636 = !DILocation(line: 1097, column: 2, scope: !8573)
!8637 = !DILocation(line: 1098, column: 1, scope: !8573)
!8638 = distinct !DISubprogram(name: "get_esf", scope: !8574, file: !8574, line: 894, type: !8639, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !8642)
!8639 = !DISubroutineType(types: !8640)
!8640 = !{!2924, !208, !208, !208, !8641}
!8641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 32)
!8642 = !{!8643, !8644, !8645, !8646, !8647, !8648}
!8643 = !DILocalVariable(name: "msp", arg: 1, scope: !8638, file: !8574, line: 894, type: !208)
!8644 = !DILocalVariable(name: "psp", arg: 2, scope: !8638, file: !8574, line: 894, type: !208)
!8645 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8638, file: !8574, line: 894, type: !208)
!8646 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !8638, file: !8574, line: 895, type: !8641)
!8647 = !DILocalVariable(name: "alternative_state_exc", scope: !8638, file: !8574, line: 897, type: !153)
!8648 = !DILocalVariable(name: "ptr_esf", scope: !8638, file: !8574, line: 898, type: !2924)
!8649 = !DILocation(line: 0, scope: !8638)
!8650 = !DILocation(line: 900, column: 14, scope: !8638)
!8651 = !DILocation(line: 902, column: 49, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8638, file: !8574, line: 902, column: 6)
!8653 = !DILocation(line: 902, column: 6, scope: !8638)
!8654 = !DILocation(line: 983, column: 44, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8638, file: !8574, line: 983, column: 6)
!8656 = !DILocation(line: 985, column: 3, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8658, file: !8574, line: 985, column: 3)
!8658 = distinct !DILexicalBlock(scope: !8659, file: !8574, line: 985, column: 3)
!8659 = distinct !DILexicalBlock(scope: !8660, file: !8574, line: 985, column: 3)
!8660 = distinct !DILexicalBlock(scope: !8661, file: !8574, line: 985, column: 3)
!8661 = distinct !DILexicalBlock(scope: !8655, file: !8574, line: 984, column: 47)
!8662 = !DILocation(line: 986, column: 3, scope: !8661)
!8663 = !DILocation(line: 983, column: 18, scope: !8655)
!8664 = !DILocation(line: 991, column: 7, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8666, file: !8574, line: 990, column: 30)
!8666 = distinct !DILexicalBlock(scope: !8638, file: !8574, line: 990, column: 6)
!8667 = !DILocation(line: 998, column: 16, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8669, file: !8574, line: 995, column: 10)
!8669 = distinct !DILexicalBlock(scope: !8665, file: !8574, line: 991, column: 7)
!8670 = !DILocation(line: 1002, column: 2, scope: !8638)
!8671 = !DILocation(line: 1003, column: 1, scope: !8638)
!8672 = distinct !DISubprogram(name: "fault_handle", scope: !8574, file: !8574, line: 786, type: !8673, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !8675)
!8673 = !DISubroutineType(types: !8674)
!8674 = !{!208, !2924, !125, !8641}
!8675 = !{!8676, !8677, !8678, !8679}
!8676 = !DILocalVariable(name: "esf", arg: 1, scope: !8672, file: !8574, line: 786, type: !2924)
!8677 = !DILocalVariable(name: "fault", arg: 2, scope: !8672, file: !8574, line: 786, type: !125)
!8678 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8672, file: !8574, line: 786, type: !8641)
!8679 = !DILocalVariable(name: "reason", scope: !8672, file: !8574, line: 788, type: !208)
!8680 = !DILocation(line: 0, scope: !8672)
!8681 = !DILocation(line: 790, column: 15, scope: !8672)
!8682 = !DILocation(line: 792, column: 2, scope: !8672)
!8683 = !DILocation(line: 794, column: 12, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8672, file: !8574, line: 792, column: 17)
!8685 = !DILocation(line: 795, column: 3, scope: !8684)
!8686 = !DILocation(line: 800, column: 12, scope: !8684)
!8687 = !DILocation(line: 801, column: 3, scope: !8684)
!8688 = !DILocation(line: 803, column: 12, scope: !8684)
!8689 = !DILocation(line: 804, column: 3, scope: !8684)
!8690 = !DILocation(line: 806, column: 12, scope: !8684)
!8691 = !DILocation(line: 807, column: 3, scope: !8684)
!8692 = !DILocation(line: 814, column: 3, scope: !8684)
!8693 = !DILocation(line: 815, column: 3, scope: !8684)
!8694 = !DILocation(line: 820, column: 3, scope: !8684)
!8695 = !DILocation(line: 821, column: 3, scope: !8684)
!8696 = !DILocation(line: 829, column: 2, scope: !8672)
!8697 = distinct !DISubprogram(name: "hard_fault", scope: !8574, file: !8574, line: 709, type: !8698, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !8700)
!8698 = !DISubroutineType(types: !8699)
!8699 = !{!208, !2924, !8641}
!8700 = !{!8701, !8702, !8703}
!8701 = !DILocalVariable(name: "esf", arg: 1, scope: !8697, file: !8574, line: 709, type: !2924)
!8702 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8697, file: !8574, line: 709, type: !8641)
!8703 = !DILocalVariable(name: "reason", scope: !8697, file: !8574, line: 711, type: !208)
!8704 = !DILocation(line: 0, scope: !8697)
!8705 = !DILocation(line: 713, column: 2, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8707, file: !8574, line: 713, column: 2)
!8707 = distinct !DILexicalBlock(scope: !8708, file: !8574, line: 713, column: 2)
!8708 = distinct !DILexicalBlock(scope: !8709, file: !8574, line: 713, column: 2)
!8709 = distinct !DILexicalBlock(scope: !8697, file: !8574, line: 713, column: 2)
!8710 = !DILocation(line: 732, column: 15, scope: !8697)
!8711 = !DILocation(line: 734, column: 12, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8697, file: !8574, line: 734, column: 6)
!8713 = !DILocation(line: 734, column: 17, scope: !8712)
!8714 = !DILocation(line: 734, column: 41, scope: !8712)
!8715 = !DILocation(line: 734, column: 6, scope: !8697)
!8716 = !DILocation(line: 735, column: 3, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8718, file: !8574, line: 735, column: 3)
!8718 = distinct !DILexicalBlock(scope: !8719, file: !8574, line: 735, column: 3)
!8719 = distinct !DILexicalBlock(scope: !8720, file: !8574, line: 735, column: 3)
!8720 = distinct !DILexicalBlock(scope: !8721, file: !8574, line: 735, column: 3)
!8721 = distinct !DILexicalBlock(scope: !8712, file: !8574, line: 734, column: 47)
!8722 = !DILocation(line: 736, column: 2, scope: !8721)
!8723 = !DILocation(line: 736, column: 19, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8712, file: !8574, line: 736, column: 13)
!8725 = !DILocation(line: 736, column: 49, scope: !8724)
!8726 = !DILocation(line: 736, column: 13, scope: !8712)
!8727 = !DILocation(line: 737, column: 3, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8729, file: !8574, line: 737, column: 3)
!8729 = distinct !DILexicalBlock(scope: !8730, file: !8574, line: 737, column: 3)
!8730 = distinct !DILexicalBlock(scope: !8731, file: !8574, line: 737, column: 3)
!8731 = distinct !DILexicalBlock(scope: !8732, file: !8574, line: 737, column: 3)
!8732 = distinct !DILexicalBlock(scope: !8724, file: !8574, line: 736, column: 55)
!8733 = !DILocation(line: 738, column: 2, scope: !8732)
!8734 = !DILocation(line: 738, column: 19, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8724, file: !8574, line: 738, column: 13)
!8736 = !DILocation(line: 738, column: 24, scope: !8735)
!8737 = !DILocation(line: 738, column: 47, scope: !8735)
!8738 = !DILocation(line: 738, column: 13, scope: !8724)
!8739 = !DILocation(line: 739, column: 3, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8741, file: !8574, line: 739, column: 3)
!8741 = distinct !DILexicalBlock(scope: !8742, file: !8574, line: 739, column: 3)
!8742 = distinct !DILexicalBlock(scope: !8743, file: !8574, line: 739, column: 3)
!8743 = distinct !DILexicalBlock(scope: !8744, file: !8574, line: 739, column: 3)
!8744 = distinct !DILexicalBlock(scope: !8735, file: !8574, line: 738, column: 53)
!8745 = !DILocation(line: 740, column: 7, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8744, file: !8574, line: 740, column: 7)
!8747 = !DILocation(line: 740, column: 7, scope: !8744)
!8748 = !DILocation(line: 741, column: 4, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8750, file: !8574, line: 741, column: 4)
!8750 = distinct !DILexicalBlock(scope: !8751, file: !8574, line: 741, column: 4)
!8751 = distinct !DILexicalBlock(scope: !8752, file: !8574, line: 741, column: 4)
!8752 = distinct !DILexicalBlock(scope: !8753, file: !8574, line: 741, column: 4)
!8753 = distinct !DILexicalBlock(scope: !8746, file: !8574, line: 740, column: 38)
!8754 = !DILocation(line: 742, column: 24, scope: !8753)
!8755 = !DILocation(line: 743, column: 3, scope: !8753)
!8756 = !DILocation(line: 743, column: 20, scope: !8757)
!8757 = distinct !DILexicalBlock(scope: !8746, file: !8574, line: 743, column: 14)
!8758 = !DILocation(line: 743, column: 25, scope: !8757)
!8759 = !DILocation(line: 743, column: 52, scope: !8757)
!8760 = !DILocation(line: 743, column: 14, scope: !8746)
!8761 = !DILocation(line: 744, column: 13, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8757, file: !8574, line: 743, column: 58)
!8763 = !DILocation(line: 745, column: 3, scope: !8762)
!8764 = !DILocation(line: 745, column: 20, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8757, file: !8574, line: 745, column: 14)
!8766 = !DILocation(line: 745, column: 25, scope: !8765)
!8767 = !DILocation(line: 745, column: 52, scope: !8765)
!8768 = !DILocation(line: 745, column: 14, scope: !8757)
!8769 = !DILocation(line: 746, column: 13, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8765, file: !8574, line: 745, column: 58)
!8771 = !DILocation(line: 747, column: 3, scope: !8770)
!8772 = !DILocation(line: 747, column: 20, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8765, file: !8574, line: 747, column: 14)
!8774 = !DILocation(line: 747, column: 52, scope: !8773)
!8775 = !DILocation(line: 747, column: 14, scope: !8765)
!8776 = !DILocation(line: 748, column: 13, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8773, file: !8574, line: 747, column: 58)
!8778 = !DILocation(line: 753, column: 3, scope: !8777)
!8779 = !DILocation(line: 766, column: 2, scope: !8697)
!8780 = distinct !DISubprogram(name: "mem_manage_fault", scope: !8574, file: !8574, line: 229, type: !8673, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !8781)
!8781 = !{!8782, !8783, !8784, !8785, !8786, !8787, !8790}
!8782 = !DILocalVariable(name: "esf", arg: 1, scope: !8780, file: !8574, line: 229, type: !2924)
!8783 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8780, file: !8574, line: 229, type: !125)
!8784 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8780, file: !8574, line: 230, type: !8641)
!8785 = !DILocalVariable(name: "reason", scope: !8780, file: !8574, line: 232, type: !208)
!8786 = !DILocalVariable(name: "mmfar", scope: !8780, file: !8574, line: 233, type: !208)
!8787 = !DILocalVariable(name: "temp", scope: !8788, file: !8574, line: 254, type: !208)
!8788 = distinct !DILexicalBlock(scope: !8789, file: !8574, line: 244, column: 48)
!8789 = distinct !DILexicalBlock(scope: !8780, file: !8574, line: 244, column: 6)
!8790 = !DILocalVariable(name: "min_stack_ptr", scope: !8791, file: !8574, line: 309, type: !208)
!8791 = distinct !DILexicalBlock(scope: !8792, file: !8574, line: 308, column: 43)
!8792 = distinct !DILexicalBlock(scope: !8793, file: !8574, line: 308, column: 7)
!8793 = distinct !DILexicalBlock(scope: !8794, file: !8574, line: 289, column: 40)
!8794 = distinct !DILexicalBlock(scope: !8780, file: !8574, line: 288, column: 6)
!8795 = !DILocation(line: 0, scope: !8780)
!8796 = !DILocation(line: 235, column: 2, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8798, file: !8574, line: 235, column: 2)
!8798 = distinct !DILexicalBlock(scope: !8799, file: !8574, line: 235, column: 2)
!8799 = distinct !DILexicalBlock(scope: !8800, file: !8574, line: 235, column: 2)
!8800 = distinct !DILexicalBlock(scope: !8780, file: !8574, line: 235, column: 2)
!8801 = !DILocation(line: 237, column: 12, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8780, file: !8574, line: 237, column: 6)
!8803 = !DILocation(line: 237, column: 17, scope: !8802)
!8804 = !DILocation(line: 237, column: 41, scope: !8802)
!8805 = !DILocation(line: 237, column: 6, scope: !8780)
!8806 = !DILocation(line: 238, column: 3, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8808, file: !8574, line: 238, column: 3)
!8808 = distinct !DILexicalBlock(scope: !8809, file: !8574, line: 238, column: 3)
!8809 = distinct !DILexicalBlock(scope: !8810, file: !8574, line: 238, column: 3)
!8810 = distinct !DILexicalBlock(scope: !8811, file: !8574, line: 238, column: 3)
!8811 = distinct !DILexicalBlock(scope: !8802, file: !8574, line: 237, column: 47)
!8812 = !DILocation(line: 240, column: 2, scope: !8811)
!8813 = !DILocation(line: 241, column: 12, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8780, file: !8574, line: 241, column: 6)
!8815 = !DILocation(line: 241, column: 17, scope: !8814)
!8816 = !DILocation(line: 241, column: 43, scope: !8814)
!8817 = !DILocation(line: 241, column: 6, scope: !8780)
!8818 = !DILocation(line: 242, column: 3, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8820, file: !8574, line: 242, column: 3)
!8820 = distinct !DILexicalBlock(scope: !8821, file: !8574, line: 242, column: 3)
!8821 = distinct !DILexicalBlock(scope: !8822, file: !8574, line: 242, column: 3)
!8822 = distinct !DILexicalBlock(scope: !8823, file: !8574, line: 242, column: 3)
!8823 = distinct !DILexicalBlock(scope: !8814, file: !8574, line: 241, column: 49)
!8824 = !DILocation(line: 243, column: 2, scope: !8823)
!8825 = !DILocation(line: 244, column: 12, scope: !8789)
!8826 = !DILocation(line: 244, column: 17, scope: !8789)
!8827 = !DILocation(line: 244, column: 42, scope: !8789)
!8828 = !DILocation(line: 244, column: 6, scope: !8780)
!8829 = !DILocation(line: 245, column: 3, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8831, file: !8574, line: 245, column: 3)
!8831 = distinct !DILexicalBlock(scope: !8832, file: !8574, line: 245, column: 3)
!8832 = distinct !DILexicalBlock(scope: !8833, file: !8574, line: 245, column: 3)
!8833 = distinct !DILexicalBlock(scope: !8788, file: !8574, line: 245, column: 3)
!8834 = !DILocation(line: 254, column: 24, scope: !8788)
!8835 = !DILocation(line: 0, scope: !8788)
!8836 = !DILocation(line: 256, column: 13, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8788, file: !8574, line: 256, column: 7)
!8838 = !DILocation(line: 256, column: 18, scope: !8837)
!8839 = !DILocation(line: 256, column: 44, scope: !8837)
!8840 = !DILocation(line: 256, column: 7, scope: !8788)
!8841 = !DILocation(line: 258, column: 4, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8843, file: !8574, line: 258, column: 4)
!8843 = distinct !DILexicalBlock(scope: !8844, file: !8574, line: 258, column: 4)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !8574, line: 258, column: 4)
!8845 = distinct !DILexicalBlock(scope: !8846, file: !8574, line: 258, column: 4)
!8846 = distinct !DILexicalBlock(scope: !8837, file: !8574, line: 256, column: 50)
!8847 = !DILocation(line: 259, column: 24, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8846, file: !8574, line: 259, column: 8)
!8849 = !DILocation(line: 259, column: 8, scope: !8846)
!8850 = !DILocation(line: 261, column: 15, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8848, file: !8574, line: 259, column: 30)
!8852 = !DILocation(line: 262, column: 4, scope: !8851)
!8853 = !DILocation(line: 265, column: 12, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8780, file: !8574, line: 265, column: 6)
!8855 = !DILocation(line: 265, column: 17, scope: !8854)
!8856 = !DILocation(line: 265, column: 42, scope: !8854)
!8857 = !DILocation(line: 265, column: 6, scope: !8780)
!8858 = !DILocation(line: 266, column: 3, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8860, file: !8574, line: 266, column: 3)
!8860 = distinct !DILexicalBlock(scope: !8861, file: !8574, line: 266, column: 3)
!8861 = distinct !DILexicalBlock(scope: !8862, file: !8574, line: 266, column: 3)
!8862 = distinct !DILexicalBlock(scope: !8863, file: !8574, line: 266, column: 3)
!8863 = distinct !DILexicalBlock(scope: !8854, file: !8574, line: 265, column: 48)
!8864 = !DILocation(line: 267, column: 2, scope: !8863)
!8865 = !DILocation(line: 269, column: 12, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8780, file: !8574, line: 269, column: 6)
!8867 = !DILocation(line: 269, column: 17, scope: !8866)
!8868 = !DILocation(line: 269, column: 41, scope: !8866)
!8869 = !DILocation(line: 269, column: 6, scope: !8780)
!8870 = !DILocation(line: 270, column: 3, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8872, file: !8574, line: 270, column: 3)
!8872 = distinct !DILexicalBlock(scope: !8873, file: !8574, line: 270, column: 3)
!8873 = distinct !DILexicalBlock(scope: !8874, file: !8574, line: 270, column: 3)
!8874 = distinct !DILexicalBlock(scope: !8875, file: !8574, line: 270, column: 3)
!8875 = distinct !DILexicalBlock(scope: !8866, file: !8574, line: 269, column: 47)
!8876 = !DILocation(line: 272, column: 2, scope: !8875)
!8877 = !DILocation(line: 288, column: 12, scope: !8794)
!8878 = !DILocation(line: 288, column: 17, scope: !8794)
!8879 = !DILocation(line: 288, column: 41, scope: !8794)
!8880 = !DILocation(line: 289, column: 9, scope: !8794)
!8881 = !DILocation(line: 289, column: 14, scope: !8794)
!8882 = !DILocation(line: 288, column: 6, scope: !8780)
!8883 = !DILocation(line: 308, column: 12, scope: !8792)
!8884 = !DILocation(line: 308, column: 17, scope: !8792)
!8885 = !DILocation(line: 308, column: 7, scope: !8793)
!8886 = !DILocation(line: 310, column: 6, scope: !8791)
!8887 = !DILocation(line: 309, column: 29, scope: !8791)
!8888 = !DILocation(line: 0, scope: !8791)
!8889 = !DILocation(line: 312, column: 8, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8791, file: !8574, line: 312, column: 8)
!8891 = !DILocation(line: 312, column: 8, scope: !8791)
!8892 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !8893, file: !8273, line: 1099, type: !208)
!8893 = distinct !DISubprogram(name: "__set_PSP", scope: !8273, file: !8273, line: 1099, type: !8364, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !8894)
!8894 = !{!8892}
!8895 = !DILocation(line: 0, scope: !8893, inlinedAt: !8896)
!8896 = distinct !DILocation(line: 338, column: 5, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8890, file: !8574, line: 312, column: 23)
!8898 = !DILocation(line: 1101, column: 3, scope: !8893, inlinedAt: !8896)
!8899 = !{i64 2861038}
!8900 = !DILocation(line: 341, column: 4, scope: !8897)
!8901 = !DILocation(line: 360, column: 12, scope: !8902)
!8902 = distinct !DILexicalBlock(scope: !8780, file: !8574, line: 360, column: 6)
!8903 = !DILocation(line: 360, column: 17, scope: !8902)
!8904 = !DILocation(line: 360, column: 41, scope: !8902)
!8905 = !DILocation(line: 360, column: 6, scope: !8780)
!8906 = !DILocation(line: 361, column: 14, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8902, file: !8574, line: 360, column: 47)
!8908 = !DILocation(line: 362, column: 2, scope: !8907)
!8909 = !DILocation(line: 366, column: 12, scope: !8780)
!8910 = !DILocation(line: 369, column: 15, scope: !8780)
!8911 = !DILocation(line: 371, column: 2, scope: !8780)
!8912 = distinct !DISubprogram(name: "bus_fault", scope: !8574, file: !8574, line: 383, type: !8913, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !8915)
!8913 = !DISubroutineType(types: !8914)
!8914 = !{!125, !2924, !125, !8641}
!8915 = !{!8916, !8917, !8918, !8919, !8920}
!8916 = !DILocalVariable(name: "esf", arg: 1, scope: !8912, file: !8574, line: 383, type: !2924)
!8917 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8912, file: !8574, line: 383, type: !125)
!8918 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8912, file: !8574, line: 383, type: !8641)
!8919 = !DILocalVariable(name: "reason", scope: !8912, file: !8574, line: 385, type: !208)
!8920 = !DILocalVariable(name: "bfar", scope: !8921, file: !8574, line: 405, type: !208)
!8921 = distinct !DILexicalBlock(scope: !8922, file: !8574, line: 395, column: 42)
!8922 = distinct !DILexicalBlock(scope: !8912, file: !8574, line: 395, column: 6)
!8923 = !DILocation(line: 0, scope: !8912)
!8924 = !DILocation(line: 387, column: 2, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8926, file: !8574, line: 387, column: 2)
!8926 = distinct !DILexicalBlock(scope: !8927, file: !8574, line: 387, column: 2)
!8927 = distinct !DILexicalBlock(scope: !8928, file: !8574, line: 387, column: 2)
!8928 = distinct !DILexicalBlock(scope: !8912, file: !8574, line: 387, column: 2)
!8929 = !DILocation(line: 389, column: 11, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8912, file: !8574, line: 389, column: 6)
!8931 = !DILocation(line: 389, column: 16, scope: !8930)
!8932 = !DILocation(line: 389, column: 6, scope: !8912)
!8933 = !DILocation(line: 390, column: 3, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8935, file: !8574, line: 390, column: 3)
!8935 = distinct !DILexicalBlock(scope: !8936, file: !8574, line: 390, column: 3)
!8936 = distinct !DILexicalBlock(scope: !8937, file: !8574, line: 390, column: 3)
!8937 = distinct !DILexicalBlock(scope: !8938, file: !8574, line: 390, column: 3)
!8938 = distinct !DILexicalBlock(scope: !8930, file: !8574, line: 389, column: 39)
!8939 = !DILocation(line: 391, column: 2, scope: !8938)
!8940 = !DILocation(line: 392, column: 11, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8912, file: !8574, line: 392, column: 6)
!8942 = !DILocation(line: 392, column: 16, scope: !8941)
!8943 = !DILocation(line: 392, column: 6, scope: !8912)
!8944 = !DILocation(line: 393, column: 3, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8946, file: !8574, line: 393, column: 3)
!8946 = distinct !DILexicalBlock(scope: !8947, file: !8574, line: 393, column: 3)
!8947 = distinct !DILexicalBlock(scope: !8948, file: !8574, line: 393, column: 3)
!8948 = distinct !DILexicalBlock(scope: !8949, file: !8574, line: 393, column: 3)
!8949 = distinct !DILexicalBlock(scope: !8941, file: !8574, line: 392, column: 41)
!8950 = !DILocation(line: 394, column: 2, scope: !8949)
!8951 = !DILocation(line: 395, column: 11, scope: !8922)
!8952 = !DILocation(line: 395, column: 16, scope: !8922)
!8953 = !DILocation(line: 395, column: 6, scope: !8912)
!8954 = !DILocation(line: 396, column: 3, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8956, file: !8574, line: 396, column: 3)
!8956 = distinct !DILexicalBlock(scope: !8957, file: !8574, line: 396, column: 3)
!8957 = distinct !DILexicalBlock(scope: !8958, file: !8574, line: 396, column: 3)
!8958 = distinct !DILexicalBlock(scope: !8921, file: !8574, line: 396, column: 3)
!8959 = !DILocation(line: 405, column: 3, scope: !8921)
!8960 = !DILocation(line: 0, scope: !8921)
!8961 = !DILocation(line: 407, column: 13, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8921, file: !8574, line: 407, column: 7)
!8963 = !DILocation(line: 407, column: 18, scope: !8962)
!8964 = !DILocation(line: 407, column: 44, scope: !8962)
!8965 = !DILocation(line: 407, column: 7, scope: !8921)
!8966 = !DILocation(line: 408, column: 4, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8968, file: !8574, line: 408, column: 4)
!8968 = distinct !DILexicalBlock(scope: !8969, file: !8574, line: 408, column: 4)
!8969 = distinct !DILexicalBlock(scope: !8970, file: !8574, line: 408, column: 4)
!8970 = distinct !DILexicalBlock(scope: !8971, file: !8574, line: 408, column: 4)
!8971 = distinct !DILexicalBlock(scope: !8962, file: !8574, line: 407, column: 50)
!8972 = !DILocation(line: 409, column: 24, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8971, file: !8574, line: 409, column: 8)
!8974 = !DILocation(line: 409, column: 8, scope: !8971)
!8975 = !DILocation(line: 411, column: 15, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8973, file: !8574, line: 409, column: 30)
!8977 = !DILocation(line: 412, column: 4, scope: !8976)
!8978 = !DILocation(line: 415, column: 11, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8912, file: !8574, line: 415, column: 6)
!8980 = !DILocation(line: 415, column: 16, scope: !8979)
!8981 = !DILocation(line: 415, column: 6, scope: !8912)
!8982 = !DILocation(line: 416, column: 3, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8984, file: !8574, line: 416, column: 3)
!8984 = distinct !DILexicalBlock(scope: !8985, file: !8574, line: 416, column: 3)
!8985 = distinct !DILexicalBlock(scope: !8986, file: !8574, line: 416, column: 3)
!8986 = distinct !DILexicalBlock(scope: !8987, file: !8574, line: 416, column: 3)
!8987 = distinct !DILexicalBlock(scope: !8979, file: !8574, line: 415, column: 44)
!8988 = !DILocation(line: 417, column: 2, scope: !8987)
!8989 = !DILocation(line: 418, column: 12, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8912, file: !8574, line: 418, column: 6)
!8991 = !DILocation(line: 418, column: 17, scope: !8990)
!8992 = !DILocation(line: 418, column: 41, scope: !8990)
!8993 = !DILocation(line: 418, column: 6, scope: !8912)
!8994 = !DILocation(line: 423, column: 18, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8990, file: !8574, line: 423, column: 13)
!8996 = !DILocation(line: 423, column: 23, scope: !8995)
!8997 = !DILocation(line: 423, column: 13, scope: !8990)
!8998 = !DILocation(line: 0, scope: !8990)
!8999 = !DILocation(line: 524, column: 12, scope: !8912)
!9000 = !DILocation(line: 526, column: 15, scope: !8912)
!9001 = !DILocation(line: 528, column: 2, scope: !8912)
!9002 = distinct !DISubprogram(name: "usage_fault", scope: !8574, file: !8574, line: 539, type: !9003, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !9007)
!9003 = !DISubroutineType(types: !9004)
!9004 = !{!208, !9005}
!9005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9006, size: 32)
!9006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2925)
!9007 = !{!9008, !9009}
!9008 = !DILocalVariable(name: "esf", arg: 1, scope: !9002, file: !8574, line: 539, type: !9005)
!9009 = !DILocalVariable(name: "reason", scope: !9002, file: !8574, line: 541, type: !208)
!9010 = !DILocation(line: 0, scope: !9002)
!9011 = !DILocation(line: 543, column: 2, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !9013, file: !8574, line: 543, column: 2)
!9013 = distinct !DILexicalBlock(scope: !9014, file: !8574, line: 543, column: 2)
!9014 = distinct !DILexicalBlock(scope: !9015, file: !8574, line: 543, column: 2)
!9015 = distinct !DILexicalBlock(scope: !9002, file: !8574, line: 543, column: 2)
!9016 = !DILocation(line: 546, column: 12, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9002, file: !8574, line: 546, column: 6)
!9018 = !DILocation(line: 546, column: 17, scope: !9017)
!9019 = !DILocation(line: 546, column: 43, scope: !9017)
!9020 = !DILocation(line: 546, column: 6, scope: !9002)
!9021 = !DILocation(line: 547, column: 3, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9023, file: !8574, line: 547, column: 3)
!9023 = distinct !DILexicalBlock(scope: !9024, file: !8574, line: 547, column: 3)
!9024 = distinct !DILexicalBlock(scope: !9025, file: !8574, line: 547, column: 3)
!9025 = distinct !DILexicalBlock(scope: !9026, file: !8574, line: 547, column: 3)
!9026 = distinct !DILexicalBlock(scope: !9017, file: !8574, line: 546, column: 49)
!9027 = !DILocation(line: 548, column: 2, scope: !9026)
!9028 = !DILocation(line: 549, column: 12, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9002, file: !8574, line: 549, column: 6)
!9030 = !DILocation(line: 549, column: 17, scope: !9029)
!9031 = !DILocation(line: 549, column: 43, scope: !9029)
!9032 = !DILocation(line: 549, column: 6, scope: !9002)
!9033 = !DILocation(line: 550, column: 3, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9035, file: !8574, line: 550, column: 3)
!9035 = distinct !DILexicalBlock(scope: !9036, file: !8574, line: 550, column: 3)
!9036 = distinct !DILexicalBlock(scope: !9037, file: !8574, line: 550, column: 3)
!9037 = distinct !DILexicalBlock(scope: !9038, file: !8574, line: 550, column: 3)
!9038 = distinct !DILexicalBlock(scope: !9029, file: !8574, line: 549, column: 49)
!9039 = !DILocation(line: 551, column: 2, scope: !9038)
!9040 = !DILocation(line: 567, column: 12, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9002, file: !8574, line: 567, column: 6)
!9042 = !DILocation(line: 567, column: 17, scope: !9041)
!9043 = !DILocation(line: 567, column: 38, scope: !9041)
!9044 = !DILocation(line: 567, column: 6, scope: !9002)
!9045 = !DILocation(line: 568, column: 3, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9047, file: !8574, line: 568, column: 3)
!9047 = distinct !DILexicalBlock(scope: !9048, file: !8574, line: 568, column: 3)
!9048 = distinct !DILexicalBlock(scope: !9049, file: !8574, line: 568, column: 3)
!9049 = distinct !DILexicalBlock(scope: !9050, file: !8574, line: 568, column: 3)
!9050 = distinct !DILexicalBlock(scope: !9041, file: !8574, line: 567, column: 44)
!9051 = !DILocation(line: 569, column: 2, scope: !9050)
!9052 = !DILocation(line: 570, column: 12, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9002, file: !8574, line: 570, column: 6)
!9054 = !DILocation(line: 570, column: 17, scope: !9053)
!9055 = !DILocation(line: 570, column: 39, scope: !9053)
!9056 = !DILocation(line: 570, column: 6, scope: !9002)
!9057 = !DILocation(line: 571, column: 3, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9059, file: !8574, line: 571, column: 3)
!9059 = distinct !DILexicalBlock(scope: !9060, file: !8574, line: 571, column: 3)
!9060 = distinct !DILexicalBlock(scope: !9061, file: !8574, line: 571, column: 3)
!9061 = distinct !DILexicalBlock(scope: !9062, file: !8574, line: 571, column: 3)
!9062 = distinct !DILexicalBlock(scope: !9053, file: !8574, line: 570, column: 45)
!9063 = !DILocation(line: 572, column: 2, scope: !9062)
!9064 = !DILocation(line: 573, column: 12, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9002, file: !8574, line: 573, column: 6)
!9066 = !DILocation(line: 573, column: 17, scope: !9065)
!9067 = !DILocation(line: 573, column: 42, scope: !9065)
!9068 = !DILocation(line: 573, column: 6, scope: !9002)
!9069 = !DILocation(line: 574, column: 3, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !9071, file: !8574, line: 574, column: 3)
!9071 = distinct !DILexicalBlock(scope: !9072, file: !8574, line: 574, column: 3)
!9072 = distinct !DILexicalBlock(scope: !9073, file: !8574, line: 574, column: 3)
!9073 = distinct !DILexicalBlock(scope: !9074, file: !8574, line: 574, column: 3)
!9074 = distinct !DILexicalBlock(scope: !9065, file: !8574, line: 573, column: 48)
!9075 = !DILocation(line: 575, column: 2, scope: !9074)
!9076 = !DILocation(line: 576, column: 12, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9002, file: !8574, line: 576, column: 6)
!9078 = !DILocation(line: 576, column: 17, scope: !9077)
!9079 = !DILocation(line: 576, column: 44, scope: !9077)
!9080 = !DILocation(line: 576, column: 6, scope: !9002)
!9081 = !DILocation(line: 577, column: 3, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9083, file: !8574, line: 577, column: 3)
!9083 = distinct !DILexicalBlock(scope: !9084, file: !8574, line: 577, column: 3)
!9084 = distinct !DILexicalBlock(scope: !9085, file: !8574, line: 577, column: 3)
!9085 = distinct !DILexicalBlock(scope: !9086, file: !8574, line: 577, column: 3)
!9086 = distinct !DILexicalBlock(scope: !9077, file: !8574, line: 576, column: 50)
!9087 = !DILocation(line: 578, column: 2, scope: !9086)
!9088 = !DILocation(line: 581, column: 12, scope: !9002)
!9089 = !DILocation(line: 583, column: 2, scope: !9002)
!9090 = distinct !DISubprogram(name: "debug_monitor", scope: !8574, file: !8574, line: 632, type: !9091, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !9093)
!9091 = !DISubroutineType(types: !9092)
!9092 = !{null, !2924, !8641}
!9093 = !{!9094, !9095}
!9094 = !DILocalVariable(name: "esf", arg: 1, scope: !9090, file: !8574, line: 632, type: !2924)
!9095 = !DILocalVariable(name: "recoverable", arg: 2, scope: !9090, file: !8574, line: 632, type: !8641)
!9096 = !DILocation(line: 0, scope: !9090)
!9097 = !DILocation(line: 634, column: 15, scope: !9090)
!9098 = !DILocation(line: 636, column: 2, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9100, file: !8574, line: 636, column: 2)
!9100 = distinct !DILexicalBlock(scope: !9101, file: !8574, line: 636, column: 2)
!9101 = distinct !DILexicalBlock(scope: !9102, file: !8574, line: 636, column: 2)
!9102 = distinct !DILexicalBlock(scope: !9090, file: !8574, line: 636, column: 2)
!9103 = !DILocation(line: 652, column: 1, scope: !9090)
!9104 = distinct !DISubprogram(name: "reserved_exception", scope: !8574, file: !8574, line: 776, type: !9105, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !9107)
!9105 = !DISubroutineType(types: !9106)
!9106 = !{null, !9005, !125}
!9107 = !{!9108, !9109}
!9108 = !DILocalVariable(name: "esf", arg: 1, scope: !9104, file: !8574, line: 776, type: !9005)
!9109 = !DILocalVariable(name: "fault", arg: 2, scope: !9104, file: !8574, line: 776, type: !125)
!9110 = !DILocation(line: 0, scope: !9104)
!9111 = !DILocation(line: 780, column: 2, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9113, file: !8574, line: 780, column: 2)
!9113 = distinct !DILexicalBlock(scope: !9114, file: !8574, line: 780, column: 2)
!9114 = distinct !DILexicalBlock(scope: !9115, file: !8574, line: 780, column: 2)
!9115 = distinct !DILexicalBlock(scope: !9104, file: !8574, line: 780, column: 2)
!9116 = !DILocation(line: 783, column: 1, scope: !9104)
!9117 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !8574, file: !8574, line: 658, type: !9118, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !9120)
!9118 = !DISubroutineType(types: !9119)
!9119 = !{!153, !2924}
!9120 = !{!9121, !9122, !9123}
!9121 = !DILocalVariable(name: "esf", arg: 1, scope: !9117, file: !8574, line: 658, type: !2924)
!9122 = !DILocalVariable(name: "ret_addr", scope: !9117, file: !8574, line: 660, type: !2967)
!9123 = !DILocalVariable(name: "fault_insn", scope: !9117, file: !8574, line: 686, type: !227)
!9124 = !DILocation(line: 0, scope: !9117)
!9125 = !DILocation(line: 660, column: 46, scope: !9117)
!9126 = !DILocation(line: 660, column: 23, scope: !9117)
!9127 = !DILocation(line: 682, column: 11, scope: !9117)
!9128 = !DILocation(line: 271, column: 3, scope: !9129, inlinedAt: !9130)
!9129 = distinct !DISubprogram(name: "__DSB", scope: !8273, file: !8273, line: 269, type: !3278, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !639)
!9130 = distinct !DILocation(line: 683, column: 2, scope: !9117)
!9131 = !{i64 2837173}
!9132 = !DILocation(line: 260, column: 3, scope: !9133, inlinedAt: !9134)
!9133 = distinct !DISubprogram(name: "__ISB", scope: !8273, file: !8273, line: 258, type: !3278, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !639)
!9134 = distinct !DILocation(line: 684, column: 2, scope: !9117)
!9135 = !{i64 2836890}
!9136 = !DILocation(line: 686, column: 35, scope: !9117)
!9137 = !DILocation(line: 686, column: 24, scope: !9117)
!9138 = !DILocation(line: 688, column: 11, scope: !9117)
!9139 = !DILocation(line: 271, column: 3, scope: !9129, inlinedAt: !9140)
!9140 = distinct !DILocation(line: 689, column: 2, scope: !9117)
!9141 = !DILocation(line: 260, column: 3, scope: !9133, inlinedAt: !9142)
!9142 = distinct !DILocation(line: 690, column: 2, scope: !9117)
!9143 = !DILocation(line: 693, column: 45, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9117, file: !8574, line: 693, column: 6)
!9145 = !DILocation(line: 699, column: 1, scope: !9117)
!9146 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !8574, file: !8574, line: 1107, type: !3278, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !639)
!9147 = !DILocation(line: 1111, column: 11, scope: !9146)
!9148 = !DILocation(line: 1136, column: 1, scope: !9146)
!9149 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !9150, file: !9150, line: 26, type: !3278, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2968, retainedNodes: !9151)
!9150 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9151 = !{!9152}
!9152 = !DILocalVariable(name: "irq", scope: !9149, file: !9150, line: 28, type: !125)
!9153 = !DILocation(line: 0, scope: !9149)
!9154 = !DILocation(line: 30, column: 2, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9149, file: !9150, line: 30, column: 2)
!9156 = !DILocation(line: 31, column: 3, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9158, file: !9150, line: 30, column: 39)
!9158 = distinct !DILexicalBlock(scope: !9155, file: !9150, line: 30, column: 2)
!9159 = !DILocation(line: 30, column: 35, scope: !9158)
!9160 = !DILocation(line: 30, column: 13, scope: !9158)
!9161 = distinct !{!9161, !9154, !9162}
!9162 = !DILocation(line: 32, column: 2, scope: !9155)
!9163 = !DILocation(line: 33, column: 1, scope: !9149)
!9164 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8307, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2968, retainedNodes: !9165)
!9165 = !{!9166, !9167}
!9166 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9164, file: !680, line: 1814, type: !914)
!9167 = !DILocalVariable(name: "priority", arg: 2, scope: !9164, file: !680, line: 1814, type: !208)
!9168 = !DILocation(line: 0, scope: !9164)
!9169 = !DILocation(line: 1816, column: 7, scope: !9164)
!9170 = !DILocation(line: 0, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9164, file: !680, line: 1816, column: 7)
!9172 = !DILocation(line: 1824, column: 1, scope: !9164)
!9173 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !9174, file: !9174, line: 27, type: !9175, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !9278)
!9174 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9175 = !DISubroutineType(types: !9176)
!9176 = !{null, !9177}
!9177 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !9178)
!9178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9179, size: 32)
!9179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !9180)
!9180 = !{!9181, !9239, !9251, !9252, !9253, !9254, !9260, !9273}
!9181 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9179, file: !531, line: 247, baseType: !9182, size: 384)
!9182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !9183)
!9183 = !{!9184, !9208, !9215, !9216, !9217, !9226, !9227, !9228}
!9184 = !DIDerivedType(tag: DW_TAG_member, scope: !9182, file: !531, line: 60, baseType: !9185, size: 64)
!9185 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9182, file: !531, line: 60, size: 64, elements: !9186)
!9186 = !{!9187, !9202}
!9187 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9185, file: !531, line: 61, baseType: !9188, size: 64)
!9188 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !9189)
!9189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !9190)
!9190 = !{!9191, !9197}
!9191 = !DIDerivedType(tag: DW_TAG_member, scope: !9189, file: !541, line: 38, baseType: !9192, size: 32)
!9192 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9189, file: !541, line: 38, size: 32, elements: !9193)
!9193 = !{!9194, !9196}
!9194 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9192, file: !541, line: 39, baseType: !9195, size: 32)
!9195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9189, size: 32)
!9196 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9192, file: !541, line: 40, baseType: !9195, size: 32)
!9197 = !DIDerivedType(tag: DW_TAG_member, scope: !9189, file: !541, line: 42, baseType: !9198, size: 32, offset: 32)
!9198 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9189, file: !541, line: 42, size: 32, elements: !9199)
!9199 = !{!9200, !9201}
!9200 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9198, file: !541, line: 43, baseType: !9195, size: 32)
!9201 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9198, file: !541, line: 44, baseType: !9195, size: 32)
!9202 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9185, file: !531, line: 62, baseType: !9203, size: 64)
!9203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !9204)
!9204 = !{!9205}
!9205 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9203, file: !557, line: 50, baseType: !9206, size: 64)
!9206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9207, size: 64, elements: !562)
!9207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9203, size: 32)
!9208 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9182, file: !531, line: 68, baseType: !9209, size: 32, offset: 64)
!9209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9210, size: 32)
!9210 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !9211)
!9211 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !9212)
!9212 = !{!9213}
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9211, file: !567, line: 232, baseType: !9214, size: 64)
!9214 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !9189)
!9215 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9182, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!9216 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9182, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!9217 = !DIDerivedType(tag: DW_TAG_member, scope: !9182, file: !531, line: 90, baseType: !9218, size: 16, offset: 112)
!9218 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9182, file: !531, line: 90, size: 16, elements: !9219)
!9219 = !{!9220, !9225}
!9220 = !DIDerivedType(tag: DW_TAG_member, scope: !9218, file: !531, line: 91, baseType: !9221, size: 16)
!9221 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9218, file: !531, line: 91, size: 16, elements: !9222)
!9222 = !{!9223, !9224}
!9223 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9221, file: !531, line: 96, baseType: !581, size: 8)
!9224 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9221, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!9225 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9218, file: !531, line: 100, baseType: !227, size: 16)
!9226 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9182, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!9227 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9182, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!9228 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9182, file: !531, line: 131, baseType: !9229, size: 192, offset: 192)
!9229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !9230)
!9230 = !{!9231, !9232, !9238}
!9231 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9229, file: !567, line: 245, baseType: !9188, size: 64)
!9232 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9229, file: !567, line: 246, baseType: !9233, size: 32, offset: 64)
!9233 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !9234)
!9234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9235, size: 32)
!9235 = !DISubroutineType(types: !9236)
!9236 = !{null, !9237}
!9237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9229, size: 32)
!9238 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9229, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!9239 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9179, file: !531, line: 250, baseType: !9240, size: 288, offset: 384)
!9240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !9241)
!9241 = !{!9242, !9243, !9244, !9245, !9246, !9247, !9248, !9249, !9250}
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9240, file: !601, line: 26, baseType: !208, size: 32)
!9243 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9240, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!9244 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9240, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!9245 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9240, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!9246 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9240, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!9247 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9240, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9240, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!9249 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9240, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!9250 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9240, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!9251 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9179, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!9252 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9179, file: !531, line: 256, baseType: !9210, size: 64, offset: 704)
!9253 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9179, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!9254 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9179, file: !531, line: 300, baseType: !9255, size: 96, offset: 800)
!9255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !9256)
!9256 = !{!9257, !9258, !9259}
!9257 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9255, file: !531, line: 153, baseType: !22, size: 32)
!9258 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9255, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!9259 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9255, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!9260 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9179, file: !531, line: 325, baseType: !9261, size: 32, offset: 896)
!9261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9262, size: 32)
!9262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !9263)
!9263 = !{!9264, !9270, !9271}
!9264 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9262, file: !624, line: 5074, baseType: !9265, size: 96)
!9265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !9266)
!9266 = !{!9267, !9268, !9269}
!9267 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9265, file: !628, line: 57, baseType: !631, size: 32)
!9268 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9265, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!9269 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9265, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9262, file: !624, line: 5075, baseType: !9210, size: 64, offset: 96)
!9271 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9262, file: !624, line: 5076, baseType: !9272, offset: 160)
!9272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!9273 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9179, file: !531, line: 343, baseType: !9274, size: 64, offset: 928)
!9274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !9275)
!9275 = !{!9276, !9277}
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9274, file: !601, line: 63, baseType: !208, size: 32)
!9277 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9274, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!9278 = !{!9279}
!9279 = !DILocalVariable(name: "thread", arg: 1, scope: !9173, file: !9174, line: 27, type: !9177)
!9280 = !DILocation(line: 0, scope: !9173)
!9281 = !DILocation(line: 29, column: 6, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9173, file: !9174, line: 29, column: 6)
!9283 = !DILocation(line: 29, column: 15, scope: !9282)
!9284 = !DILocation(line: 29, column: 6, scope: !9173)
!9285 = !DILocation(line: 1031, column: 3, scope: !9286, inlinedAt: !9289)
!9286 = distinct !DISubprogram(name: "__get_IPSR", scope: !8273, file: !8273, line: 1027, type: !8354, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !9287)
!9287 = !{!9288}
!9288 = !DILocalVariable(name: "result", scope: !9286, file: !8273, line: 1029, type: !208)
!9289 = distinct !DILocation(line: 48, column: 10, scope: !9290, inlinedAt: !9294)
!9290 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9291, file: !9291, line: 46, type: !9292, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !639)
!9291 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9292 = !DISubroutineType(types: !9293)
!9293 = !{!153}
!9294 = distinct !DILocation(line: 30, column: 7, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9296, file: !9174, line: 30, column: 7)
!9296 = distinct !DILexicalBlock(scope: !9282, file: !9174, line: 29, column: 26)
!9297 = !{i64 2826021}
!9298 = !DILocation(line: 0, scope: !9286, inlinedAt: !9289)
!9299 = !DILocation(line: 48, column: 9, scope: !9290, inlinedAt: !9294)
!9300 = !DILocation(line: 30, column: 7, scope: !9296)
!9301 = !DILocation(line: 42, column: 14, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9295, file: !9174, line: 30, column: 25)
!9303 = !DILocation(line: 48, column: 15, scope: !9302)
!9304 = !DILocation(line: 49, column: 3, scope: !9302)
!9305 = !DILocation(line: 52, column: 2, scope: !9173)
!9306 = !DILocation(line: 53, column: 1, scope: !9173)
!9307 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !526, file: !526, line: 127, type: !3278, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !519, retainedNodes: !639)
!9308 = !DILocation(line: 134, column: 2, scope: !9307)
!9309 = !DILocation(line: 156, column: 1, scope: !9307)
!9310 = !DILocation(line: 0, scope: !525)
!9311 = !DILocation(line: 289, column: 36, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !525, file: !526, line: 285, column: 2)
!9313 = !DILocation(line: 289, column: 42, scope: !9312)
!9314 = !DILocation(line: 300, column: 36, scope: !525)
!9315 = !DILocation(line: 301, column: 35, scope: !525)
!9316 = !DILocation(line: 302, column: 37, scope: !525)
!9317 = !DILocation(line: 311, column: 2, scope: !525)
!9318 = !DILocation(line: 316, column: 1, scope: !525)
!9319 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !708, file: !708, line: 180, type: !3278, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9320 = !DILocation(line: 188, column: 12, scope: !9319)
!9321 = !DILocation(line: 271, column: 3, scope: !9322, inlinedAt: !9323)
!9322 = distinct !DISubprogram(name: "__DSB", scope: !8273, file: !8273, line: 269, type: !3278, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9323 = distinct !DILocation(line: 192, column: 2, scope: !9319)
!9324 = !{i64 2986168}
!9325 = !DILocation(line: 260, column: 3, scope: !9326, inlinedAt: !9327)
!9326 = distinct !DISubprogram(name: "__ISB", scope: !8273, file: !8273, line: 258, type: !3278, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9327 = distinct !DILocation(line: 193, column: 2, scope: !9319)
!9328 = !{i64 2985885}
!9329 = !DILocation(line: 194, column: 1, scope: !9319)
!9330 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !708, file: !708, line: 199, type: !3278, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9331 = !DILocation(line: 282, column: 3, scope: !9332, inlinedAt: !9333)
!9332 = distinct !DISubprogram(name: "__DMB", scope: !8273, file: !8273, line: 280, type: !3278, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9333 = distinct !DILocation(line: 202, column: 2, scope: !9330)
!9334 = !{i64 2986444}
!9335 = !DILocation(line: 205, column: 12, scope: !9330)
!9336 = !DILocation(line: 206, column: 1, scope: !9330)
!9337 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !708, file: !708, line: 275, type: !9338, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9351)
!9338 = !DISubroutineType(types: !9339)
!9339 = !{null, !9340, !323, !8541, !8541}
!9340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9341, size: 32)
!9341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9342)
!9342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !652, line: 52, size: 96, elements: !9343)
!9343 = !{!9344, !9345, !9346}
!9344 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9342, file: !652, line: 53, baseType: !22, size: 32)
!9345 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9342, file: !652, line: 54, baseType: !272, size: 32, offset: 32)
!9346 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !9342, file: !652, line: 55, baseType: !9347, size: 32, offset: 64)
!9347 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !658, line: 151, baseType: !9348)
!9348 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !658, line: 149, size: 32, elements: !9349)
!9349 = !{!9350}
!9350 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !9348, file: !658, line: 150, baseType: !208, size: 32)
!9351 = !{!9352, !9353, !9354, !9355}
!9352 = !DILocalVariable(name: "static_regions", arg: 1, scope: !9337, file: !708, line: 276, type: !9340)
!9353 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9337, file: !708, line: 276, type: !323)
!9354 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !9337, file: !708, line: 277, type: !8541)
!9355 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !9337, file: !708, line: 277, type: !8541)
!9356 = !DILocation(line: 0, scope: !9337)
!9357 = !DILocation(line: 279, column: 6, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9337, file: !708, line: 279, column: 6)
!9359 = !DILocation(line: 285, column: 1, scope: !9337)
!9360 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !9361, file: !9361, line: 220, type: !9362, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9364)
!9361 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9362 = !DISubroutineType(types: !9363)
!9363 = !{!125, !9340, !323, !8541, !8541}
!9364 = !{!9365, !9366, !9367, !9368, !9369}
!9365 = !DILocalVariable(name: "static_regions", arg: 1, scope: !9360, file: !9361, line: 221, type: !9340)
!9366 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9360, file: !9361, line: 221, type: !323)
!9367 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !9360, file: !9361, line: 222, type: !8541)
!9368 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !9360, file: !9361, line: 223, type: !8541)
!9369 = !DILocalVariable(name: "mpu_reg_index", scope: !9360, file: !9361, line: 225, type: !125)
!9370 = !DILocation(line: 0, scope: !9360)
!9371 = !DILocation(line: 225, column: 22, scope: !9360)
!9372 = !DILocation(line: 233, column: 18, scope: !9360)
!9373 = !DILocation(line: 236, column: 23, scope: !9360)
!9374 = !DILocation(line: 236, column: 21, scope: !9360)
!9375 = !DILocation(line: 238, column: 2, scope: !9360)
!9376 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !708, file: !708, line: 105, type: !9377, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9379)
!9377 = !DISubroutineType(types: !9378)
!9378 = !{!125, !9340, !150, !150, !153}
!9379 = !{!9380, !9381, !9382, !9383, !9384, !9385}
!9380 = !DILocalVariable(name: "regions", arg: 1, scope: !9376, file: !708, line: 106, type: !9340)
!9381 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9376, file: !708, line: 106, type: !150)
!9382 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !9376, file: !708, line: 106, type: !150)
!9383 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !9376, file: !708, line: 107, type: !153)
!9384 = !DILocalVariable(name: "i", scope: !9376, file: !708, line: 109, type: !125)
!9385 = !DILocalVariable(name: "reg_index", scope: !9376, file: !708, line: 110, type: !125)
!9386 = !DILocation(line: 0, scope: !9376)
!9387 = !DILocation(line: 110, column: 18, scope: !9376)
!9388 = !DILocation(line: 112, column: 16, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9390, file: !708, line: 112, column: 2)
!9390 = distinct !DILexicalBlock(scope: !9376, file: !708, line: 112, column: 2)
!9391 = !DILocation(line: 112, column: 2, scope: !9390)
!9392 = !DILocation(line: 113, column: 7, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !9394, file: !708, line: 113, column: 7)
!9394 = distinct !DILexicalBlock(scope: !9389, file: !708, line: 112, column: 36)
!9395 = !DILocation(line: 113, column: 18, scope: !9393)
!9396 = !DILocation(line: 113, column: 23, scope: !9393)
!9397 = !DILocation(line: 113, column: 7, scope: !9394)
!9398 = !DILocation(line: 118, column: 23, scope: !9399)
!9399 = distinct !DILexicalBlock(scope: !9394, file: !708, line: 118, column: 7)
!9400 = !DILocation(line: 119, column: 7, scope: !9399)
!9401 = !DILocation(line: 118, column: 7, scope: !9394)
!9402 = !DILocation(line: 120, column: 4, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9404, file: !708, line: 120, column: 4)
!9404 = distinct !DILexicalBlock(scope: !9405, file: !708, line: 120, column: 4)
!9405 = distinct !DILexicalBlock(scope: !9406, file: !708, line: 120, column: 4)
!9406 = distinct !DILexicalBlock(scope: !9407, file: !708, line: 120, column: 4)
!9407 = distinct !DILexicalBlock(scope: !9399, file: !708, line: 119, column: 45)
!9408 = !DILocation(line: 121, column: 4, scope: !9407)
!9409 = !DILocation(line: 124, column: 36, scope: !9394)
!9410 = !DILocation(line: 124, column: 15, scope: !9394)
!9411 = !DILocation(line: 126, column: 17, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9394, file: !708, line: 126, column: 7)
!9413 = !DILocation(line: 126, column: 7, scope: !9394)
!9414 = !DILocation(line: 131, column: 12, scope: !9394)
!9415 = !DILocation(line: 132, column: 2, scope: !9394)
!9416 = !DILocation(line: 112, column: 32, scope: !9389)
!9417 = distinct !{!9417, !9391, !9418}
!9418 = !DILocation(line: 132, column: 2, scope: !9390)
!9419 = !DILocation(line: 135, column: 1, scope: !9376)
!9420 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !9361, file: !9361, line: 63, type: !9421, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9423)
!9421 = !DISubroutineType(types: !9422)
!9422 = !{!125, !9340}
!9423 = !{!9424, !9425}
!9424 = !DILocalVariable(name: "part", arg: 1, scope: !9420, file: !9361, line: 63, type: !9340)
!9425 = !DILocalVariable(name: "partition_is_valid", scope: !9420, file: !9361, line: 70, type: !125)
!9426 = !DILocation(line: 0, scope: !9420)
!9427 = !DILocation(line: 71, column: 11, scope: !9420)
!9428 = !DILocation(line: 71, column: 37, scope: !9420)
!9429 = !{i32 0, i32 33}
!9430 = !DILocation(line: 72, column: 3, scope: !9420)
!9431 = !DILocation(line: 71, column: 30, scope: !9420)
!9432 = !DILocation(line: 75, column: 11, scope: !9420)
!9433 = !DILocation(line: 75, column: 17, scope: !9420)
!9434 = !DILocation(line: 75, column: 38, scope: !9420)
!9435 = !DILocation(line: 77, column: 2, scope: !9420)
!9436 = distinct !DISubprogram(name: "mpu_configure_region", scope: !708, file: !708, line: 79, type: !9437, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9439)
!9437 = !DISubroutineType(types: !9438)
!9438 = !{!125, !323, !9340}
!9439 = !{!9440, !9441, !9442}
!9440 = !DILocalVariable(name: "index", arg: 1, scope: !9436, file: !708, line: 79, type: !323)
!9441 = !DILocalVariable(name: "new_region", arg: 2, scope: !9436, file: !708, line: 80, type: !9340)
!9442 = !DILocalVariable(name: "region_conf", scope: !9436, file: !708, line: 82, type: !697)
!9443 = !DILocation(line: 0, scope: !9436)
!9444 = !DILocation(line: 82, column: 2, scope: !9436)
!9445 = !DILocation(line: 82, column: 24, scope: !9436)
!9446 = !DILocation(line: 87, column: 33, scope: !9436)
!9447 = !DILocation(line: 87, column: 14, scope: !9436)
!9448 = !DILocation(line: 87, column: 19, scope: !9436)
!9449 = !DILocation(line: 91, column: 55, scope: !9436)
!9450 = !DILocation(line: 92, column: 16, scope: !9436)
!9451 = !DILocation(line: 92, column: 53, scope: !9436)
!9452 = !DILocation(line: 91, column: 2, scope: !9436)
!9453 = !DILocation(line: 95, column: 9, scope: !9436)
!9454 = !DILocation(line: 97, column: 1, scope: !9436)
!9455 = !DILocation(line: 95, column: 2, scope: !9436)
!9456 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !9361, file: !9361, line: 113, type: !9457, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9462)
!9457 = !DISubroutineType(types: !9458)
!9458 = !{null, !9459, !9460, !208, !208}
!9459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 32)
!9460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9461, size: 32)
!9461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9347)
!9462 = !{!9463, !9464, !9465, !9466}
!9463 = !DILocalVariable(name: "p_attr", arg: 1, scope: !9456, file: !9361, line: 114, type: !9459)
!9464 = !DILocalVariable(name: "attr", arg: 2, scope: !9456, file: !9361, line: 115, type: !9460)
!9465 = !DILocalVariable(name: "base", arg: 3, scope: !9456, file: !9361, line: 115, type: !208)
!9466 = !DILocalVariable(name: "size", arg: 4, scope: !9456, file: !9361, line: 115, type: !208)
!9467 = !DILocation(line: 0, scope: !9456)
!9468 = !DILocation(line: 127, column: 23, scope: !9456)
!9469 = !DILocation(line: 127, column: 35, scope: !9456)
!9470 = !DILocation(line: 127, column: 33, scope: !9456)
!9471 = !DILocation(line: 127, column: 10, scope: !9456)
!9472 = !DILocation(line: 127, column: 15, scope: !9456)
!9473 = !DILocation(line: 129, column: 1, scope: !9456)
!9474 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !708, file: !708, line: 57, type: !9475, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9477)
!9475 = !DISubroutineType(types: !9476)
!9476 = !{!125, !323, !695}
!9477 = !{!9478, !9479}
!9478 = !DILocalVariable(name: "index", arg: 1, scope: !9474, file: !708, line: 57, type: !323)
!9479 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9474, file: !708, line: 58, type: !695)
!9480 = !DILocation(line: 0, scope: !9474)
!9481 = !DILocation(line: 61, column: 6, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9474, file: !708, line: 61, column: 6)
!9483 = !DILocation(line: 61, column: 12, scope: !9482)
!9484 = !DILocation(line: 61, column: 6, scope: !9474)
!9485 = !DILocation(line: 64, column: 3, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9487, file: !708, line: 64, column: 3)
!9487 = distinct !DILexicalBlock(scope: !9488, file: !708, line: 64, column: 3)
!9488 = distinct !DILexicalBlock(scope: !9489, file: !708, line: 64, column: 3)
!9489 = distinct !DILexicalBlock(scope: !9490, file: !708, line: 64, column: 3)
!9490 = distinct !DILexicalBlock(scope: !9482, file: !708, line: 61, column: 40)
!9491 = !DILocation(line: 65, column: 3, scope: !9490)
!9492 = !DILocation(line: 71, column: 2, scope: !9474)
!9493 = !DILocation(line: 73, column: 2, scope: !9474)
!9494 = !DILocation(line: 74, column: 1, scope: !9474)
!9495 = distinct !DISubprogram(name: "region_init", scope: !9361, file: !9361, line: 29, type: !9496, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9498)
!9496 = !DISubroutineType(types: !9497)
!9497 = !{null, !8541, !695}
!9498 = !{!9499, !9500}
!9499 = !DILocalVariable(name: "index", arg: 1, scope: !9495, file: !9361, line: 29, type: !8541)
!9500 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9495, file: !9361, line: 30, type: !695)
!9501 = !DILocation(line: 0, scope: !9495)
!9502 = !DILocation(line: 33, column: 2, scope: !9495)
!9503 = !DILocation(line: 47, column: 28, scope: !9495)
!9504 = !DILocation(line: 47, column: 33, scope: !9495)
!9505 = !DILocation(line: 48, column: 26, scope: !9495)
!9506 = !DILocation(line: 47, column: 12, scope: !9495)
!9507 = !DILocation(line: 49, column: 32, scope: !9495)
!9508 = !DILocation(line: 49, column: 37, scope: !9495)
!9509 = !DILocation(line: 49, column: 12, scope: !9495)
!9510 = !DILocation(line: 53, column: 1, scope: !9495)
!9511 = distinct !DISubprogram(name: "set_region_number", scope: !9512, file: !9512, line: 32, type: !8364, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9513)
!9512 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9513 = !{!9514}
!9514 = !DILocalVariable(name: "index", arg: 1, scope: !9511, file: !9512, line: 32, type: !208)
!9515 = !DILocation(line: 0, scope: !9511)
!9516 = !DILocation(line: 34, column: 11, scope: !9511)
!9517 = !DILocation(line: 35, column: 1, scope: !9511)
!9518 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !9361, file: !9361, line: 88, type: !9519, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9521)
!9519 = !DISubroutineType(types: !9520)
!9520 = !{!208, !208}
!9521 = !{!9522}
!9522 = !DILocalVariable(name: "size", arg: 1, scope: !9518, file: !9361, line: 88, type: !208)
!9523 = !DILocation(line: 0, scope: !9518)
!9524 = !DILocation(line: 91, column: 11, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9518, file: !9361, line: 91, column: 6)
!9526 = !DILocation(line: 91, column: 6, scope: !9518)
!9527 = !DILocation(line: 100, column: 11, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9518, file: !9361, line: 100, column: 6)
!9529 = !DILocation(line: 100, column: 6, scope: !9518)
!9530 = !DILocation(line: 104, column: 35, scope: !9518)
!9531 = !DILocation(line: 104, column: 16, scope: !9518)
!9532 = !DILocation(line: 104, column: 50, scope: !9518)
!9533 = !DILocation(line: 104, column: 72, scope: !9518)
!9534 = !DILocation(line: 104, column: 2, scope: !9518)
!9535 = !DILocation(line: 106, column: 1, scope: !9518)
!9536 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !708, file: !708, line: 307, type: !9537, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9539)
!9537 = !DISubroutineType(types: !9538)
!9538 = !{null, !9340, !150}
!9539 = !{!9540, !9541}
!9540 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9536, file: !708, line: 308, type: !9340)
!9541 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9536, file: !708, line: 308, type: !150)
!9542 = !DILocation(line: 0, scope: !9536)
!9543 = !DILocation(line: 310, column: 6, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9536, file: !708, line: 310, column: 6)
!9545 = !DILocation(line: 316, column: 1, scope: !9536)
!9546 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !9361, file: !9361, line: 249, type: !9547, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9549)
!9547 = !DISubroutineType(types: !9548)
!9548 = !{!125, !9340, !150}
!9549 = !{!9550, !9551, !9552, !9553}
!9550 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9546, file: !9361, line: 250, type: !9340)
!9551 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9546, file: !9361, line: 250, type: !150)
!9552 = !DILocalVariable(name: "mpu_reg_index", scope: !9546, file: !9361, line: 252, type: !125)
!9553 = !DILocalVariable(name: "i", scope: !9554, file: !9361, line: 264, type: !125)
!9554 = distinct !DILexicalBlock(scope: !9555, file: !9361, line: 264, column: 3)
!9555 = distinct !DILexicalBlock(scope: !9556, file: !9361, line: 261, column: 32)
!9556 = distinct !DILexicalBlock(scope: !9546, file: !9361, line: 261, column: 6)
!9557 = !DILocation(line: 0, scope: !9546)
!9558 = !DILocation(line: 252, column: 22, scope: !9546)
!9559 = !DILocation(line: 258, column: 18, scope: !9546)
!9560 = !DILocation(line: 261, column: 20, scope: !9556)
!9561 = !DILocation(line: 261, column: 6, scope: !9546)
!9562 = !DILocation(line: 0, scope: !9554)
!9563 = !DILocation(line: 265, column: 4, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9565, file: !9361, line: 264, column: 59)
!9565 = distinct !DILexicalBlock(scope: !9554, file: !9361, line: 264, column: 3)
!9566 = !DILocation(line: 264, column: 55, scope: !9565)
!9567 = !DILocation(line: 264, column: 33, scope: !9565)
!9568 = !DILocation(line: 264, column: 3, scope: !9554)
!9569 = distinct !{!9569, !9568, !9570}
!9570 = !DILocation(line: 266, column: 3, scope: !9554)
!9571 = !DILocation(line: 269, column: 2, scope: !9546)
!9572 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !9573, file: !9573, line: 218, type: !8364, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9574)
!9573 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9574 = !{!9575}
!9575 = !DILocalVariable(name: "rnr", arg: 1, scope: !9572, file: !9573, line: 218, type: !208)
!9576 = !DILocation(line: 0, scope: !9572)
!9577 = !DILocation(line: 220, column: 12, scope: !9572)
!9578 = !DILocation(line: 221, column: 13, scope: !9572)
!9579 = !DILocation(line: 222, column: 1, scope: !9572)
!9580 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !708, file: !708, line: 326, type: !9581, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9583)
!9581 = !DISubroutineType(types: !9582)
!9582 = !{!125}
!9583 = !{!9584}
!9584 = !DILocalVariable(name: "r_index", scope: !9580, file: !708, line: 328, type: !208)
!9585 = !DILocation(line: 330, column: 17, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9580, file: !708, line: 330, column: 6)
!9587 = !DILocation(line: 330, column: 29, scope: !9586)
!9588 = !DILocation(line: 330, column: 6, scope: !9580)
!9589 = !DILocation(line: 347, column: 2, scope: !9580)
!9590 = !DILocation(line: 0, scope: !9580)
!9591 = !DILocation(line: 364, column: 29, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9593, file: !708, line: 364, column: 2)
!9593 = distinct !DILexicalBlock(scope: !9580, file: !708, line: 364, column: 2)
!9594 = !DILocation(line: 364, column: 2, scope: !9593)
!9595 = !DILocation(line: 365, column: 25, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9592, file: !708, line: 364, column: 66)
!9597 = !DILocation(line: 365, column: 3, scope: !9596)
!9598 = !DILocation(line: 364, column: 62, scope: !9592)
!9599 = distinct !{!9599, !9594, !9600}
!9600 = !DILocation(line: 366, column: 2, scope: !9593)
!9601 = !DILocation(line: 369, column: 23, scope: !9580)
!9602 = !DILocation(line: 369, column: 21, scope: !9580)
!9603 = !DILocation(line: 372, column: 2, scope: !9580)
!9604 = !DILocation(line: 443, column: 2, scope: !9580)
!9605 = !DILocation(line: 444, column: 1, scope: !9580)
!9606 = distinct !DISubprogram(name: "strcpy", scope: !9607, file: !9607, line: 20, type: !9608, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !9612)
!9607 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9608 = !DISubroutineType(types: !9609)
!9609 = !{!393, !9610, !9611}
!9610 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !393)
!9611 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !140)
!9612 = !{!9613, !9614, !9615}
!9613 = !DILocalVariable(name: "d", arg: 1, scope: !9606, file: !9607, line: 20, type: !9610)
!9614 = !DILocalVariable(name: "s", arg: 2, scope: !9606, file: !9607, line: 20, type: !9611)
!9615 = !DILocalVariable(name: "dest", scope: !9606, file: !9607, line: 22, type: !393)
!9616 = !DILocation(line: 0, scope: !9606)
!9617 = !DILocation(line: 24, column: 9, scope: !9606)
!9618 = !DILocation(line: 24, column: 12, scope: !9606)
!9619 = !DILocation(line: 24, column: 2, scope: !9606)
!9620 = !DILocation(line: 25, column: 6, scope: !9621)
!9621 = distinct !DILexicalBlock(scope: !9606, file: !9607, line: 24, column: 21)
!9622 = !DILocation(line: 26, column: 4, scope: !9621)
!9623 = !DILocation(line: 27, column: 4, scope: !9621)
!9624 = distinct !{!9624, !9619, !9625}
!9625 = !DILocation(line: 28, column: 2, scope: !9606)
!9626 = !DILocation(line: 30, column: 5, scope: !9606)
!9627 = !DILocation(line: 32, column: 2, scope: !9606)
!9628 = distinct !DISubprogram(name: "strncpy", scope: !9607, file: !9607, line: 42, type: !9629, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !9631)
!9629 = !DISubroutineType(types: !9630)
!9630 = !{!393, !9610, !9611, !272}
!9631 = !{!9632, !9633, !9634, !9635}
!9632 = !DILocalVariable(name: "d", arg: 1, scope: !9628, file: !9607, line: 42, type: !9610)
!9633 = !DILocalVariable(name: "s", arg: 2, scope: !9628, file: !9607, line: 42, type: !9611)
!9634 = !DILocalVariable(name: "n", arg: 3, scope: !9628, file: !9607, line: 42, type: !272)
!9635 = !DILocalVariable(name: "dest", scope: !9628, file: !9607, line: 44, type: !393)
!9636 = !DILocation(line: 0, scope: !9628)
!9637 = !DILocation(line: 46, column: 12, scope: !9628)
!9638 = !DILocation(line: 46, column: 17, scope: !9628)
!9639 = !DILocation(line: 46, column: 20, scope: !9628)
!9640 = !DILocation(line: 46, column: 23, scope: !9628)
!9641 = !DILocation(line: 46, column: 2, scope: !9628)
!9642 = !DILocation(line: 47, column: 6, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9628, file: !9607, line: 46, column: 32)
!9644 = !DILocation(line: 48, column: 4, scope: !9643)
!9645 = !DILocation(line: 49, column: 4, scope: !9643)
!9646 = !DILocation(line: 50, column: 4, scope: !9643)
!9647 = distinct !{!9647, !9641, !9648}
!9648 = !DILocation(line: 51, column: 2, scope: !9628)
!9649 = !DILocation(line: 54, column: 6, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9628, file: !9607, line: 53, column: 16)
!9651 = !DILocation(line: 55, column: 4, scope: !9650)
!9652 = !DILocation(line: 56, column: 4, scope: !9650)
!9653 = !DILocation(line: 53, column: 11, scope: !9628)
!9654 = !DILocation(line: 53, column: 2, scope: !9628)
!9655 = distinct !{!9655, !9654, !9656}
!9656 = !DILocation(line: 57, column: 2, scope: !9628)
!9657 = !DILocation(line: 59, column: 2, scope: !9628)
!9658 = distinct !DISubprogram(name: "strchr", scope: !9607, file: !9607, line: 69, type: !9659, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !9661)
!9659 = !DISubroutineType(types: !9660)
!9660 = !{!393, !140, !125}
!9661 = !{!9662, !9663, !9664}
!9662 = !DILocalVariable(name: "s", arg: 1, scope: !9658, file: !9607, line: 69, type: !140)
!9663 = !DILocalVariable(name: "c", arg: 2, scope: !9658, file: !9607, line: 69, type: !125)
!9664 = !DILocalVariable(name: "tmp", scope: !9658, file: !9607, line: 71, type: !142)
!9665 = !DILocation(line: 0, scope: !9658)
!9666 = !DILocation(line: 73, column: 2, scope: !9658)
!9667 = !DILocation(line: 73, column: 10, scope: !9658)
!9668 = !DILocation(line: 73, column: 13, scope: !9658)
!9669 = !DILocation(line: 73, column: 21, scope: !9658)
!9670 = !DILocation(line: 74, column: 4, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9658, file: !9607, line: 73, column: 38)
!9672 = distinct !{!9672, !9666, !9673}
!9673 = !DILocation(line: 75, column: 2, scope: !9658)
!9674 = !DILocation(line: 77, column: 9, scope: !9658)
!9675 = !DILocation(line: 77, column: 2, scope: !9658)
!9676 = distinct !DISubprogram(name: "strrchr", scope: !9607, file: !9607, line: 87, type: !9659, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !9677)
!9677 = !{!9678, !9679, !9680}
!9678 = !DILocalVariable(name: "s", arg: 1, scope: !9676, file: !9607, line: 87, type: !140)
!9679 = !DILocalVariable(name: "c", arg: 2, scope: !9676, file: !9607, line: 87, type: !125)
!9680 = !DILocalVariable(name: "match", scope: !9676, file: !9607, line: 89, type: !393)
!9681 = !DILocation(line: 0, scope: !9676)
!9682 = !DILocation(line: 91, column: 2, scope: !9676)
!9683 = !DILocation(line: 92, column: 7, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9685, file: !9607, line: 92, column: 7)
!9685 = distinct !DILexicalBlock(scope: !9676, file: !9607, line: 91, column: 5)
!9686 = !DILocation(line: 92, column: 10, scope: !9684)
!9687 = !DILocation(line: 92, column: 7, scope: !9685)
!9688 = !DILocation(line: 95, column: 13, scope: !9676)
!9689 = !DILocation(line: 95, column: 2, scope: !9685)
!9690 = distinct !{!9690, !9682, !9691}
!9691 = !DILocation(line: 95, column: 15, scope: !9676)
!9692 = !DILocation(line: 97, column: 2, scope: !9676)
!9693 = distinct !DISubprogram(name: "strlen", scope: !9607, file: !9607, line: 107, type: !9694, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !9696)
!9694 = !DISubroutineType(types: !9695)
!9695 = !{!272, !140}
!9696 = !{!9697, !9698}
!9697 = !DILocalVariable(name: "s", arg: 1, scope: !9693, file: !9607, line: 107, type: !140)
!9698 = !DILocalVariable(name: "n", scope: !9693, file: !9607, line: 109, type: !272)
!9699 = !DILocation(line: 0, scope: !9693)
!9700 = !DILocation(line: 111, column: 9, scope: !9693)
!9701 = !DILocation(line: 111, column: 12, scope: !9693)
!9702 = !DILocation(line: 111, column: 2, scope: !9693)
!9703 = !DILocation(line: 112, column: 4, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9693, file: !9607, line: 111, column: 21)
!9705 = !DILocation(line: 113, column: 4, scope: !9704)
!9706 = distinct !{!9706, !9702, !9707}
!9707 = !DILocation(line: 114, column: 2, scope: !9693)
!9708 = !DILocation(line: 116, column: 2, scope: !9693)
!9709 = distinct !DISubprogram(name: "strnlen", scope: !9607, file: !9607, line: 126, type: !9710, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !9712)
!9710 = !DISubroutineType(types: !9711)
!9711 = !{!272, !140, !272}
!9712 = !{!9713, !9714, !9715}
!9713 = !DILocalVariable(name: "s", arg: 1, scope: !9709, file: !9607, line: 126, type: !140)
!9714 = !DILocalVariable(name: "maxlen", arg: 2, scope: !9709, file: !9607, line: 126, type: !272)
!9715 = !DILocalVariable(name: "n", scope: !9709, file: !9607, line: 128, type: !272)
!9716 = !DILocation(line: 0, scope: !9709)
!9717 = !DILocation(line: 130, column: 9, scope: !9709)
!9718 = !DILocation(line: 130, column: 12, scope: !9709)
!9719 = !DILocation(line: 130, column: 20, scope: !9709)
!9720 = !DILocation(line: 130, column: 2, scope: !9709)
!9721 = !DILocation(line: 131, column: 4, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !9709, file: !9607, line: 130, column: 35)
!9723 = !DILocation(line: 132, column: 4, scope: !9722)
!9724 = distinct !{!9724, !9720, !9725}
!9725 = !DILocation(line: 133, column: 2, scope: !9709)
!9726 = !DILocation(line: 135, column: 2, scope: !9709)
!9727 = distinct !DISubprogram(name: "strcmp", scope: !9607, file: !9607, line: 145, type: !9728, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !9730)
!9728 = !DISubroutineType(types: !9729)
!9729 = !{!125, !140, !140}
!9730 = !{!9731, !9732}
!9731 = !DILocalVariable(name: "s1", arg: 1, scope: !9727, file: !9607, line: 145, type: !140)
!9732 = !DILocalVariable(name: "s2", arg: 2, scope: !9727, file: !9607, line: 145, type: !140)
!9733 = !DILocation(line: 0, scope: !9727)
!9734 = !DILocation(line: 147, column: 10, scope: !9727)
!9735 = !DILocation(line: 147, column: 17, scope: !9727)
!9736 = !DILocation(line: 147, column: 14, scope: !9727)
!9737 = !DILocation(line: 147, column: 22, scope: !9727)
!9738 = !DILocation(line: 148, column: 5, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9727, file: !9607, line: 147, column: 40)
!9740 = !DILocation(line: 149, column: 5, scope: !9739)
!9741 = distinct !{!9741, !9742, !9743}
!9742 = !DILocation(line: 147, column: 2, scope: !9727)
!9743 = !DILocation(line: 150, column: 2, scope: !9727)
!9744 = !DILocation(line: 152, column: 9, scope: !9727)
!9745 = !DILocation(line: 152, column: 15, scope: !9727)
!9746 = !DILocation(line: 152, column: 13, scope: !9727)
!9747 = !DILocation(line: 152, column: 2, scope: !9727)
!9748 = distinct !DISubprogram(name: "strncmp", scope: !9607, file: !9607, line: 162, type: !9749, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !9751)
!9749 = !DISubroutineType(types: !9750)
!9750 = !{!125, !140, !140, !272}
!9751 = !{!9752, !9753, !9754}
!9752 = !DILocalVariable(name: "s1", arg: 1, scope: !9748, file: !9607, line: 162, type: !140)
!9753 = !DILocalVariable(name: "s2", arg: 2, scope: !9748, file: !9607, line: 162, type: !140)
!9754 = !DILocalVariable(name: "n", arg: 3, scope: !9748, file: !9607, line: 162, type: !272)
!9755 = !DILocation(line: 0, scope: !9748)
!9756 = !DILocation(line: 164, column: 17, scope: !9748)
!9757 = !DILocation(line: 164, column: 21, scope: !9748)
!9758 = !DILocation(line: 164, column: 28, scope: !9748)
!9759 = !DILocation(line: 164, column: 25, scope: !9748)
!9760 = !DILocation(line: 164, column: 33, scope: !9748)
!9761 = !DILocation(line: 165, column: 5, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9748, file: !9607, line: 164, column: 51)
!9763 = !DILocation(line: 166, column: 5, scope: !9762)
!9764 = !DILocation(line: 167, column: 4, scope: !9762)
!9765 = distinct !{!9765, !9766, !9767}
!9766 = !DILocation(line: 164, column: 2, scope: !9748)
!9767 = !DILocation(line: 168, column: 2, scope: !9748)
!9768 = !DILocation(line: 170, column: 25, scope: !9748)
!9769 = !DILocation(line: 170, column: 31, scope: !9748)
!9770 = !DILocation(line: 170, column: 29, scope: !9748)
!9771 = !DILocation(line: 170, column: 9, scope: !9748)
!9772 = !DILocation(line: 170, column: 2, scope: !9748)
!9773 = distinct !DISubprogram(name: "strtok_r", scope: !9607, file: !9607, line: 180, type: !9774, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !9776)
!9774 = !DISubroutineType(types: !9775)
!9775 = !{!393, !393, !140, !392}
!9776 = !{!9777, !9778, !9779, !9780, !9781}
!9777 = !DILocalVariable(name: "str", arg: 1, scope: !9773, file: !9607, line: 180, type: !393)
!9778 = !DILocalVariable(name: "sep", arg: 2, scope: !9773, file: !9607, line: 180, type: !140)
!9779 = !DILocalVariable(name: "state", arg: 3, scope: !9773, file: !9607, line: 180, type: !392)
!9780 = !DILocalVariable(name: "start", scope: !9773, file: !9607, line: 182, type: !393)
!9781 = !DILocalVariable(name: "end", scope: !9773, file: !9607, line: 182, type: !393)
!9782 = !DILocation(line: 0, scope: !9773)
!9783 = !DILocation(line: 184, column: 10, scope: !9773)
!9784 = !DILocation(line: 184, column: 22, scope: !9773)
!9785 = !DILocation(line: 187, column: 9, scope: !9773)
!9786 = !DILocation(line: 187, column: 16, scope: !9773)
!9787 = !DILocation(line: 187, column: 19, scope: !9773)
!9788 = !DILocation(line: 187, column: 2, scope: !9773)
!9789 = !DILocation(line: 188, column: 8, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9773, file: !9607, line: 187, column: 40)
!9791 = distinct !{!9791, !9788, !9792}
!9792 = !DILocation(line: 189, column: 2, scope: !9773)
!9793 = !DILocation(line: 198, column: 9, scope: !9773)
!9794 = !DILocation(line: 198, column: 18, scope: !9773)
!9795 = !DILocation(line: 198, column: 17, scope: !9773)
!9796 = !DILocation(line: 198, column: 2, scope: !9773)
!9797 = !DILocation(line: 199, column: 6, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9773, file: !9607, line: 198, column: 37)
!9799 = !DILocation(line: 198, column: 14, scope: !9773)
!9800 = distinct !{!9800, !9796, !9801}
!9801 = !DILocation(line: 200, column: 2, scope: !9773)
!9802 = !DILocation(line: 203, column: 8, scope: !9803)
!9803 = distinct !DILexicalBlock(scope: !9804, file: !9607, line: 202, column: 20)
!9804 = distinct !DILexicalBlock(scope: !9773, file: !9607, line: 202, column: 6)
!9805 = !DILocation(line: 204, column: 16, scope: !9803)
!9806 = !DILocation(line: 205, column: 2, scope: !9803)
!9807 = !DILocation(line: 210, column: 1, scope: !9773)
!9808 = distinct !DISubprogram(name: "strcat", scope: !9607, file: !9607, line: 212, type: !9608, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !9809)
!9809 = !{!9810, !9811}
!9810 = !DILocalVariable(name: "dest", arg: 1, scope: !9808, file: !9607, line: 212, type: !9610)
!9811 = !DILocalVariable(name: "src", arg: 2, scope: !9808, file: !9607, line: 212, type: !9611)
!9812 = !DILocation(line: 0, scope: !9808)
!9813 = !DILocation(line: 214, column: 16, scope: !9808)
!9814 = !DILocation(line: 214, column: 14, scope: !9808)
!9815 = !DILocation(line: 214, column: 2, scope: !9808)
!9816 = !DILocation(line: 215, column: 2, scope: !9808)
!9817 = distinct !DISubprogram(name: "strncat", scope: !9607, file: !9607, line: 218, type: !9629, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !9818)
!9818 = !{!9819, !9820, !9821, !9822, !9823}
!9819 = !DILocalVariable(name: "dest", arg: 1, scope: !9817, file: !9607, line: 218, type: !9610)
!9820 = !DILocalVariable(name: "src", arg: 2, scope: !9817, file: !9607, line: 218, type: !9611)
!9821 = !DILocalVariable(name: "n", arg: 3, scope: !9817, file: !9607, line: 219, type: !272)
!9822 = !DILocalVariable(name: "orig_dest", scope: !9817, file: !9607, line: 221, type: !393)
!9823 = !DILocalVariable(name: "len", scope: !9817, file: !9607, line: 222, type: !272)
!9824 = !DILocation(line: 0, scope: !9817)
!9825 = !DILocation(line: 222, column: 15, scope: !9817)
!9826 = !DILocation(line: 224, column: 7, scope: !9817)
!9827 = !DILocation(line: 225, column: 14, scope: !9817)
!9828 = !DILocation(line: 225, column: 19, scope: !9817)
!9829 = !DILocation(line: 225, column: 11, scope: !9817)
!9830 = !DILocation(line: 225, column: 23, scope: !9817)
!9831 = !DILocation(line: 225, column: 28, scope: !9817)
!9832 = !DILocation(line: 225, column: 2, scope: !9817)
!9833 = !DILocation(line: 226, column: 17, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9817, file: !9607, line: 225, column: 38)
!9835 = !DILocation(line: 226, column: 8, scope: !9834)
!9836 = !DILocation(line: 226, column: 11, scope: !9834)
!9837 = distinct !{!9837, !9832, !9838}
!9838 = !DILocation(line: 227, column: 2, scope: !9817)
!9839 = !DILocation(line: 228, column: 8, scope: !9817)
!9840 = !DILocation(line: 230, column: 2, scope: !9817)
!9841 = distinct !DISubprogram(name: "memcmp", scope: !9607, file: !9607, line: 239, type: !9842, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !9844)
!9842 = !DISubroutineType(types: !9843)
!9843 = !{!125, !13, !13, !272}
!9844 = !{!9845, !9846, !9847, !9848, !9849}
!9845 = !DILocalVariable(name: "m1", arg: 1, scope: !9841, file: !9607, line: 239, type: !13)
!9846 = !DILocalVariable(name: "m2", arg: 2, scope: !9841, file: !9607, line: 239, type: !13)
!9847 = !DILocalVariable(name: "n", arg: 3, scope: !9841, file: !9607, line: 239, type: !272)
!9848 = !DILocalVariable(name: "c1", scope: !9841, file: !9607, line: 241, type: !140)
!9849 = !DILocalVariable(name: "c2", scope: !9841, file: !9607, line: 242, type: !140)
!9850 = !DILocation(line: 0, scope: !9841)
!9851 = !DILocation(line: 244, column: 7, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9841, file: !9607, line: 244, column: 6)
!9853 = !DILocation(line: 244, column: 6, scope: !9841)
!9854 = !DILocation(line: 248, column: 10, scope: !9841)
!9855 = !DILocation(line: 248, column: 14, scope: !9841)
!9856 = !DILocation(line: 248, column: 19, scope: !9841)
!9857 = !DILocation(line: 248, column: 2, scope: !9841)
!9858 = !DILocation(line: 248, column: 23, scope: !9841)
!9859 = !DILocation(line: 248, column: 30, scope: !9841)
!9860 = !DILocation(line: 248, column: 27, scope: !9841)
!9861 = !DILocation(line: 249, column: 5, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9841, file: !9607, line: 248, column: 36)
!9863 = !DILocation(line: 250, column: 5, scope: !9862)
!9864 = distinct !{!9864, !9857, !9865}
!9865 = !DILocation(line: 251, column: 2, scope: !9841)
!9866 = !DILocation(line: 253, column: 9, scope: !9841)
!9867 = !DILocation(line: 253, column: 15, scope: !9841)
!9868 = !DILocation(line: 253, column: 13, scope: !9841)
!9869 = !DILocation(line: 253, column: 2, scope: !9841)
!9870 = !DILocation(line: 254, column: 1, scope: !9841)
!9871 = distinct !DISubprogram(name: "memmove", scope: !9607, file: !9607, line: 263, type: !9872, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !9874)
!9872 = !DISubroutineType(types: !9873)
!9873 = !{!124, !124, !13, !272}
!9874 = !{!9875, !9876, !9877, !9878, !9879}
!9875 = !DILocalVariable(name: "d", arg: 1, scope: !9871, file: !9607, line: 263, type: !124)
!9876 = !DILocalVariable(name: "s", arg: 2, scope: !9871, file: !9607, line: 263, type: !13)
!9877 = !DILocalVariable(name: "n", arg: 3, scope: !9871, file: !9607, line: 263, type: !272)
!9878 = !DILocalVariable(name: "dest", scope: !9871, file: !9607, line: 265, type: !393)
!9879 = !DILocalVariable(name: "src", scope: !9871, file: !9607, line: 266, type: !140)
!9880 = !DILocation(line: 0, scope: !9871)
!9881 = !DILocation(line: 268, column: 21, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9871, file: !9607, line: 268, column: 6)
!9883 = !DILocation(line: 268, column: 28, scope: !9882)
!9884 = !DILocation(line: 268, column: 6, scope: !9871)
!9885 = !DILocation(line: 280, column: 12, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9882, file: !9607, line: 278, column: 9)
!9887 = !DILocation(line: 280, column: 3, scope: !9886)
!9888 = !DILocation(line: 275, column: 5, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9890, file: !9607, line: 274, column: 17)
!9890 = distinct !DILexicalBlock(scope: !9882, file: !9607, line: 268, column: 33)
!9891 = !DILocation(line: 276, column: 14, scope: !9889)
!9892 = !DILocation(line: 276, column: 4, scope: !9889)
!9893 = !DILocation(line: 276, column: 12, scope: !9889)
!9894 = !DILocation(line: 274, column: 12, scope: !9890)
!9895 = !DILocation(line: 274, column: 3, scope: !9890)
!9896 = distinct !{!9896, !9895, !9897}
!9897 = !DILocation(line: 277, column: 3, scope: !9890)
!9898 = !DILocation(line: 281, column: 12, scope: !9899)
!9899 = distinct !DILexicalBlock(scope: !9886, file: !9607, line: 280, column: 17)
!9900 = !DILocation(line: 281, column: 10, scope: !9899)
!9901 = !DILocation(line: 282, column: 8, scope: !9899)
!9902 = !DILocation(line: 283, column: 7, scope: !9899)
!9903 = !DILocation(line: 284, column: 5, scope: !9899)
!9904 = distinct !{!9904, !9887, !9905}
!9905 = !DILocation(line: 285, column: 3, scope: !9886)
!9906 = !DILocation(line: 288, column: 2, scope: !9871)
!9907 = distinct !DISubprogram(name: "memcpy", scope: !9607, file: !9607, line: 298, type: !9908, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !9912)
!9908 = !DISubroutineType(types: !9909)
!9909 = !{!124, !9910, !9911, !272}
!9910 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !124)
!9911 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!9912 = !{!9913, !9914, !9915, !9916, !9917}
!9913 = !DILocalVariable(name: "d", arg: 1, scope: !9907, file: !9607, line: 298, type: !9910)
!9914 = !DILocalVariable(name: "s", arg: 2, scope: !9907, file: !9607, line: 298, type: !9911)
!9915 = !DILocalVariable(name: "n", arg: 3, scope: !9907, file: !9607, line: 298, type: !272)
!9916 = !DILocalVariable(name: "d_byte", scope: !9907, file: !9607, line: 302, type: !1112)
!9917 = !DILocalVariable(name: "s_byte", scope: !9907, file: !9607, line: 303, type: !3044)
!9918 = !DILocation(line: 0, scope: !9907)
!9919 = !DILocation(line: 337, column: 11, scope: !9907)
!9920 = !DILocation(line: 337, column: 2, scope: !9907)
!9921 = !DILocation(line: 338, column: 25, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9907, file: !9607, line: 337, column: 16)
!9923 = !DILocation(line: 338, column: 17, scope: !9922)
!9924 = !DILocation(line: 338, column: 11, scope: !9922)
!9925 = !DILocation(line: 338, column: 15, scope: !9922)
!9926 = !DILocation(line: 339, column: 4, scope: !9922)
!9927 = distinct !{!9927, !9920, !9928}
!9928 = !DILocation(line: 340, column: 2, scope: !9907)
!9929 = !DILocation(line: 342, column: 2, scope: !9907)
!9930 = distinct !DISubprogram(name: "memset", scope: !9607, file: !9607, line: 352, type: !9931, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !9933)
!9931 = !DISubroutineType(types: !9932)
!9932 = !{!124, !124, !125, !272}
!9933 = !{!9934, !9935, !9936, !9937, !9938}
!9934 = !DILocalVariable(name: "buf", arg: 1, scope: !9930, file: !9607, line: 352, type: !124)
!9935 = !DILocalVariable(name: "c", arg: 2, scope: !9930, file: !9607, line: 352, type: !125)
!9936 = !DILocalVariable(name: "n", arg: 3, scope: !9930, file: !9607, line: 352, type: !272)
!9937 = !DILocalVariable(name: "d_byte", scope: !9930, file: !9607, line: 356, type: !1112)
!9938 = !DILocalVariable(name: "c_byte", scope: !9930, file: !9607, line: 357, type: !151)
!9939 = !DILocation(line: 0, scope: !9930)
!9940 = !DILocation(line: 357, column: 25, scope: !9930)
!9941 = !DILocation(line: 389, column: 11, scope: !9930)
!9942 = !DILocation(line: 389, column: 2, scope: !9930)
!9943 = !DILocation(line: 390, column: 11, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9930, file: !9607, line: 389, column: 16)
!9945 = !DILocation(line: 390, column: 15, scope: !9944)
!9946 = !DILocation(line: 391, column: 4, scope: !9944)
!9947 = distinct !{!9947, !9942, !9948}
!9948 = !DILocation(line: 392, column: 2, scope: !9930)
!9949 = !DILocation(line: 394, column: 2, scope: !9930)
!9950 = distinct !DISubprogram(name: "memchr", scope: !9607, file: !9607, line: 404, type: !9951, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !9953)
!9951 = !DISubroutineType(types: !9952)
!9952 = !{!124, !13, !125, !272}
!9953 = !{!9954, !9955, !9956, !9957}
!9954 = !DILocalVariable(name: "s", arg: 1, scope: !9950, file: !9607, line: 404, type: !13)
!9955 = !DILocalVariable(name: "c", arg: 2, scope: !9950, file: !9607, line: 404, type: !125)
!9956 = !DILocalVariable(name: "n", arg: 3, scope: !9950, file: !9607, line: 404, type: !272)
!9957 = !DILocalVariable(name: "p", scope: !9958, file: !9607, line: 407, type: !3044)
!9958 = distinct !DILexicalBlock(scope: !9959, file: !9607, line: 406, column: 14)
!9959 = distinct !DILexicalBlock(scope: !9950, file: !9607, line: 406, column: 6)
!9960 = !DILocation(line: 0, scope: !9950)
!9961 = !DILocation(line: 406, column: 8, scope: !9959)
!9962 = !DILocation(line: 406, column: 6, scope: !9950)
!9963 = !DILocation(line: 409, column: 3, scope: !9958)
!9964 = !DILocation(line: 0, scope: !9958)
!9965 = !DILocation(line: 410, column: 8, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9967, file: !9607, line: 410, column: 8)
!9967 = distinct !DILexicalBlock(scope: !9958, file: !9607, line: 409, column: 6)
!9968 = !DILocation(line: 410, column: 13, scope: !9966)
!9969 = !DILocation(line: 410, column: 8, scope: !9967)
!9970 = distinct !{!9970, !9963, !9971}
!9971 = !DILocation(line: 414, column: 20, scope: !9958)
!9972 = !DILocation(line: 417, column: 2, scope: !9950)
!9973 = !DILocation(line: 418, column: 1, scope: !9950)
!9974 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !718, file: !718, line: 23, type: !5052, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !9975)
!9975 = !{!9976}
!9976 = !DILocalVariable(name: "hook", arg: 1, scope: !9974, file: !718, line: 23, type: !409)
!9977 = !DILocation(line: 0, scope: !9974)
!9978 = !DILocation(line: 25, column: 15, scope: !9974)
!9979 = !DILocation(line: 26, column: 1, scope: !9974)
!9980 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !718, file: !718, line: 14, type: !410, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !9981)
!9981 = !{!9982}
!9982 = !DILocalVariable(name: "c", arg: 1, scope: !9980, file: !718, line: 14, type: !125)
!9983 = !DILocation(line: 0, scope: !9980)
!9984 = !DILocation(line: 18, column: 2, scope: !9980)
!9985 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !718, file: !718, line: 28, type: !9986, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !9988)
!9986 = !DISubroutineType(types: !9987)
!9987 = !{!125, !125, !714}
!9988 = !{!9989, !9990}
!9989 = !DILocalVariable(name: "c", arg: 1, scope: !9985, file: !718, line: 28, type: !125)
!9990 = !DILocalVariable(name: "stream", arg: 2, scope: !9985, file: !718, line: 28, type: !714)
!9991 = !DILocation(line: 0, scope: !9985)
!9992 = !DILocation(line: 30, column: 27, scope: !9985)
!9993 = !DILocation(line: 30, column: 50, scope: !9985)
!9994 = !DILocation(line: 30, column: 9, scope: !9985)
!9995 = !DILocation(line: 30, column: 2, scope: !9985)
!9996 = distinct !DISubprogram(name: "fputc", scope: !718, file: !718, line: 41, type: !9986, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !9997)
!9997 = !{!9998, !9999}
!9998 = !DILocalVariable(name: "c", arg: 1, scope: !9996, file: !718, line: 41, type: !125)
!9999 = !DILocalVariable(name: "stream", arg: 2, scope: !9996, file: !718, line: 41, type: !714)
!10000 = !DILocation(line: 0, scope: !9996)
!10001 = !DILocation(line: 43, column: 9, scope: !9996)
!10002 = !DILocation(line: 43, column: 2, scope: !9996)
!10003 = distinct !DISubprogram(name: "zephyr_fputc", scope: !10004, file: !10004, line: 72, type: !9986, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10005)
!10004 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!10005 = !{!10006, !10007}
!10006 = !DILocalVariable(name: "c", arg: 1, scope: !10003, file: !10004, line: 72, type: !125)
!10007 = !DILocalVariable(name: "stream", arg: 2, scope: !10003, file: !10004, line: 72, type: !714)
!10008 = !DILocation(line: 0, scope: !10003)
!10009 = !DILocation(line: 81, column: 2, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10003, file: !10004, line: 81, column: 2)
!10011 = !{i64 2154128310}
!10012 = !DILocation(line: 82, column: 9, scope: !10003)
!10013 = !DILocation(line: 82, column: 2, scope: !10003)
!10014 = distinct !DISubprogram(name: "fputs", scope: !718, file: !718, line: 46, type: !10015, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10018)
!10015 = !DISubroutineType(types: !10016)
!10016 = !{!125, !9611, !10017}
!10017 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !714)
!10018 = !{!10019, !10020, !10021, !10022}
!10019 = !DILocalVariable(name: "s", arg: 1, scope: !10014, file: !718, line: 46, type: !9611)
!10020 = !DILocalVariable(name: "stream", arg: 2, scope: !10014, file: !718, line: 46, type: !10017)
!10021 = !DILocalVariable(name: "len", scope: !10014, file: !718, line: 48, type: !125)
!10022 = !DILocalVariable(name: "ret", scope: !10014, file: !718, line: 49, type: !125)
!10023 = !DILocation(line: 0, scope: !10014)
!10024 = !DILocation(line: 48, column: 12, scope: !10014)
!10025 = !DILocation(line: 51, column: 8, scope: !10014)
!10026 = !DILocation(line: 53, column: 13, scope: !10014)
!10027 = !DILocation(line: 53, column: 9, scope: !10014)
!10028 = !DILocation(line: 53, column: 2, scope: !10014)
!10029 = distinct !DISubprogram(name: "fwrite", scope: !718, file: !718, line: 99, type: !10030, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10032)
!10030 = !DISubroutineType(types: !10031)
!10031 = !{!272, !9911, !272, !272, !10017}
!10032 = !{!10033, !10034, !10035, !10036}
!10033 = !DILocalVariable(name: "ptr", arg: 1, scope: !10029, file: !718, line: 99, type: !9911)
!10034 = !DILocalVariable(name: "size", arg: 2, scope: !10029, file: !718, line: 99, type: !272)
!10035 = !DILocalVariable(name: "nitems", arg: 3, scope: !10029, file: !718, line: 99, type: !272)
!10036 = !DILocalVariable(name: "stream", arg: 4, scope: !10029, file: !718, line: 100, type: !10017)
!10037 = !DILocation(line: 0, scope: !10029)
!10038 = !DILocation(line: 102, column: 9, scope: !10029)
!10039 = !DILocation(line: 102, column: 2, scope: !10029)
!10040 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !10004, file: !10004, line: 96, type: !10030, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10041)
!10041 = !{!10042, !10043, !10044, !10045}
!10042 = !DILocalVariable(name: "ptr", arg: 1, scope: !10040, file: !10004, line: 96, type: !9911)
!10043 = !DILocalVariable(name: "size", arg: 2, scope: !10040, file: !10004, line: 96, type: !272)
!10044 = !DILocalVariable(name: "nitems", arg: 3, scope: !10040, file: !10004, line: 96, type: !272)
!10045 = !DILocalVariable(name: "stream", arg: 4, scope: !10040, file: !10004, line: 96, type: !10017)
!10046 = !DILocation(line: 0, scope: !10040)
!10047 = !DILocation(line: 107, column: 2, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !10040, file: !10004, line: 107, column: 2)
!10049 = !{i64 2154128414}
!10050 = !DILocation(line: 108, column: 9, scope: !10040)
!10051 = !DILocation(line: 108, column: 2, scope: !10040)
!10052 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !718, file: !718, line: 56, type: !10030, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10053)
!10053 = !{!10054, !10055, !10056, !10057, !10058, !10059, !10060, !10061}
!10054 = !DILocalVariable(name: "ptr", arg: 1, scope: !10052, file: !718, line: 56, type: !9911)
!10055 = !DILocalVariable(name: "size", arg: 2, scope: !10052, file: !718, line: 56, type: !272)
!10056 = !DILocalVariable(name: "nitems", arg: 3, scope: !10052, file: !718, line: 57, type: !272)
!10057 = !DILocalVariable(name: "stream", arg: 4, scope: !10052, file: !718, line: 57, type: !10017)
!10058 = !DILocalVariable(name: "i", scope: !10052, file: !718, line: 59, type: !272)
!10059 = !DILocalVariable(name: "j", scope: !10052, file: !718, line: 60, type: !272)
!10060 = !DILocalVariable(name: "p", scope: !10052, file: !718, line: 61, type: !3044)
!10061 = !DILabel(scope: !10052, name: "done", file: !718, line: 82)
!10062 = !DILocation(line: 0, scope: !10052)
!10063 = !DILocation(line: 63, column: 14, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10052, file: !718, line: 63, column: 6)
!10065 = !DILocation(line: 63, column: 24, scope: !10064)
!10066 = !DILocation(line: 72, column: 3, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10052, file: !718, line: 70, column: 5)
!10068 = !DILocation(line: 0, scope: !10067)
!10069 = !DILocation(line: 73, column: 8, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10071, file: !718, line: 73, column: 8)
!10071 = distinct !DILexicalBlock(scope: !10067, file: !718, line: 72, column: 6)
!10072 = !DILocation(line: 73, column: 29, scope: !10070)
!10073 = !DILocation(line: 73, column: 27, scope: !10070)
!10074 = !DILocation(line: 73, column: 21, scope: !10070)
!10075 = !DILocation(line: 73, column: 33, scope: !10070)
!10076 = !DILocation(line: 73, column: 8, scope: !10071)
!10077 = !DILocation(line: 76, column: 5, scope: !10071)
!10078 = !DILocation(line: 77, column: 14, scope: !10067)
!10079 = !DILocation(line: 77, column: 3, scope: !10071)
!10080 = distinct !{!10080, !10066, !10081}
!10081 = !DILocation(line: 77, column: 17, scope: !10067)
!10082 = !DILocation(line: 79, column: 4, scope: !10067)
!10083 = !DILocation(line: 80, column: 13, scope: !10052)
!10084 = !DILocation(line: 80, column: 2, scope: !10067)
!10085 = distinct !{!10085, !10086, !10087}
!10086 = !DILocation(line: 70, column: 2, scope: !10052)
!10087 = !DILocation(line: 80, column: 16, scope: !10052)
!10088 = !DILocation(line: 82, column: 1, scope: !10052)
!10089 = !DILocation(line: 83, column: 17, scope: !10052)
!10090 = !DILocation(line: 83, column: 2, scope: !10052)
!10091 = !DILocation(line: 84, column: 1, scope: !10052)
!10092 = distinct !DISubprogram(name: "puts", scope: !718, file: !718, line: 106, type: !10093, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10095)
!10093 = !DISubroutineType(types: !10094)
!10094 = !{!125, !140}
!10095 = !{!10096}
!10096 = !DILocalVariable(name: "s", arg: 1, scope: !10092, file: !718, line: 106, type: !140)
!10097 = !DILocation(line: 0, scope: !10092)
!10098 = !DILocation(line: 108, column: 6, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10092, file: !718, line: 108, column: 6)
!10100 = !DILocation(line: 108, column: 23, scope: !10099)
!10101 = !DILocation(line: 108, column: 6, scope: !10092)
!10102 = !DILocation(line: 112, column: 9, scope: !10092)
!10103 = !DILocation(line: 112, column: 29, scope: !10092)
!10104 = !DILocation(line: 112, column: 2, scope: !10092)
!10105 = !DILocation(line: 113, column: 1, scope: !10092)
!10106 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !830, file: !830, line: 368, type: !881, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10107)
!10107 = !{!10108}
!10108 = !DILocalVariable(name: "dev", arg: 1, scope: !10106, file: !830, line: 368, type: !859)
!10109 = !DILocation(line: 0, scope: !10106)
!10110 = !DILocation(line: 370, column: 2, scope: !10106)
!10111 = !DILocation(line: 371, column: 1, scope: !10106)
!10112 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !830, file: !830, line: 243, type: !10113, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10115)
!10113 = !DISubroutineType(types: !10114)
!10114 = !{null, !125, !125, !859}
!10115 = !{!10116, !10117, !10118, !10119, !10121}
!10116 = !DILocalVariable(name: "min", arg: 1, scope: !10112, file: !830, line: 243, type: !125)
!10117 = !DILocalVariable(name: "max", arg: 2, scope: !10112, file: !830, line: 243, type: !125)
!10118 = !DILocalVariable(name: "dev", arg: 3, scope: !10112, file: !830, line: 243, type: !859)
!10119 = !DILocalVariable(name: "data", scope: !10112, file: !830, line: 245, type: !10120)
!10120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 32)
!10121 = !DILocalVariable(name: "line", scope: !10112, file: !830, line: 246, type: !125)
!10122 = !DILocation(line: 0, scope: !10112)
!10123 = !DILocation(line: 245, column: 38, scope: !10112)
!10124 = !DILocation(line: 249, column: 24, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10126, file: !830, line: 249, column: 2)
!10126 = distinct !DILexicalBlock(scope: !10112, file: !830, line: 249, column: 2)
!10127 = !DILocation(line: 249, column: 2, scope: !10126)
!10128 = !DILocation(line: 251, column: 7, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10130, file: !830, line: 251, column: 7)
!10130 = distinct !DILexicalBlock(scope: !10125, file: !830, line: 249, column: 39)
!10131 = !DILocation(line: 251, column: 7, scope: !10130)
!10132 = !DILocation(line: 253, column: 4, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10129, file: !830, line: 251, column: 36)
!10134 = !DILocation(line: 256, column: 24, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10133, file: !830, line: 256, column: 8)
!10136 = !DILocation(line: 256, column: 9, scope: !10135)
!10137 = !DILocation(line: 256, column: 8, scope: !10133)
!10138 = !DILocation(line: 260, column: 43, scope: !10133)
!10139 = !DILocation(line: 260, column: 4, scope: !10133)
!10140 = !DILocation(line: 261, column: 3, scope: !10133)
!10141 = !DILocation(line: 249, column: 35, scope: !10125)
!10142 = distinct !{!10142, !10127, !10143}
!10143 = !DILocation(line: 262, column: 2, scope: !10126)
!10144 = !DILocation(line: 263, column: 1, scope: !10112)
!10145 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !830, file: !830, line: 158, type: !410, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10146)
!10146 = !{!10147}
!10147 = !DILocalVariable(name: "line", arg: 1, scope: !10145, file: !830, line: 158, type: !125)
!10148 = !DILocation(line: 0, scope: !10145)
!10149 = !DILocation(line: 170, column: 38, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10151, file: !830, line: 160, column: 17)
!10151 = distinct !DILexicalBlock(scope: !10145, file: !830, line: 160, column: 6)
!10152 = !DILocation(line: 170, column: 10, scope: !10150)
!10153 = !DILocation(line: 176, column: 1, scope: !10145)
!10154 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !830, file: !830, line: 183, type: !10155, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10157)
!10155 = !DISubroutineType(types: !10156)
!10156 = !{null, !125}
!10157 = !{!10158}
!10158 = !DILocalVariable(name: "line", arg: 1, scope: !10154, file: !830, line: 183, type: !125)
!10159 = !DILocation(line: 0, scope: !10154)
!10160 = !DILocation(line: 195, column: 28, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10162, file: !830, line: 185, column: 17)
!10162 = distinct !DILexicalBlock(scope: !10154, file: !830, line: 185, column: 6)
!10163 = !DILocation(line: 195, column: 3, scope: !10161)
!10164 = !DILocation(line: 200, column: 1, scope: !10154)
!10165 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !10166, file: !10166, line: 910, type: !8364, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10167)
!10166 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10167 = !{!10168}
!10168 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10165, file: !10166, line: 910, type: !208)
!10169 = !DILocation(line: 0, scope: !10165)
!10170 = !DILocation(line: 912, column: 3, scope: !10165)
!10171 = !DILocation(line: 913, column: 1, scope: !10165)
!10172 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !10166, file: !10166, line: 834, type: !9519, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10173)
!10173 = !{!10174}
!10174 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10172, file: !10166, line: 834, type: !208)
!10175 = !DILocation(line: 0, scope: !10172)
!10176 = !DILocation(line: 836, column: 11, scope: !10172)
!10177 = !DILocation(line: 836, column: 40, scope: !10172)
!10178 = !DILocation(line: 836, column: 3, scope: !10172)
!10179 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !830, file: !830, line: 304, type: !881, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10180)
!10180 = !{!10181}
!10181 = !DILocalVariable(name: "dev", arg: 1, scope: !10179, file: !830, line: 304, type: !859)
!10182 = !DILocation(line: 0, scope: !10179)
!10183 = !DILocation(line: 306, column: 2, scope: !10179)
!10184 = !DILocation(line: 307, column: 1, scope: !10179)
!10185 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !830, file: !830, line: 299, type: !881, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10186)
!10186 = !{!10187}
!10187 = !DILocalVariable(name: "dev", arg: 1, scope: !10185, file: !830, line: 299, type: !859)
!10188 = !DILocation(line: 0, scope: !10185)
!10189 = !DILocation(line: 301, column: 2, scope: !10185)
!10190 = !DILocation(line: 302, column: 1, scope: !10185)
!10191 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !830, file: !830, line: 294, type: !881, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10192)
!10192 = !{!10193}
!10193 = !DILocalVariable(name: "dev", arg: 1, scope: !10191, file: !830, line: 294, type: !859)
!10194 = !DILocation(line: 0, scope: !10191)
!10195 = !DILocation(line: 296, column: 2, scope: !10191)
!10196 = !DILocation(line: 297, column: 1, scope: !10191)
!10197 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !830, file: !830, line: 397, type: !881, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10198)
!10198 = !{!10199}
!10199 = !DILocalVariable(name: "dev", arg: 1, scope: !10197, file: !830, line: 397, type: !859)
!10200 = !DILocation(line: 0, scope: !10197)
!10201 = !DILocation(line: 399, column: 2, scope: !10197)
!10202 = !DILocation(line: 400, column: 1, scope: !10197)
!10203 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !830, file: !830, line: 392, type: !881, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10204)
!10204 = !{!10205}
!10205 = !DILocalVariable(name: "dev", arg: 1, scope: !10203, file: !830, line: 392, type: !859)
!10206 = !DILocation(line: 0, scope: !10203)
!10207 = !DILocation(line: 394, column: 2, scope: !10203)
!10208 = !DILocation(line: 395, column: 1, scope: !10203)
!10209 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !830, file: !830, line: 289, type: !881, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10210)
!10210 = !{!10211}
!10211 = !DILocalVariable(name: "dev", arg: 1, scope: !10209, file: !830, line: 289, type: !859)
!10212 = !DILocation(line: 0, scope: !10209)
!10213 = !DILocation(line: 291, column: 2, scope: !10209)
!10214 = !DILocation(line: 292, column: 1, scope: !10209)
!10215 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !830, file: !830, line: 387, type: !881, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10216)
!10216 = !{!10217}
!10217 = !DILocalVariable(name: "dev", arg: 1, scope: !10215, file: !830, line: 387, type: !859)
!10218 = !DILocation(line: 0, scope: !10215)
!10219 = !DILocation(line: 389, column: 2, scope: !10215)
!10220 = !DILocation(line: 390, column: 1, scope: !10215)
!10221 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !830, file: !830, line: 382, type: !881, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10222)
!10222 = !{!10223}
!10223 = !DILocalVariable(name: "dev", arg: 1, scope: !10221, file: !830, line: 382, type: !859)
!10224 = !DILocation(line: 0, scope: !10221)
!10225 = !DILocation(line: 384, column: 2, scope: !10221)
!10226 = !DILocation(line: 385, column: 1, scope: !10221)
!10227 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !830, file: !830, line: 373, type: !881, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10228)
!10228 = !{!10229}
!10229 = !DILocalVariable(name: "dev", arg: 1, scope: !10227, file: !830, line: 373, type: !859)
!10230 = !DILocation(line: 0, scope: !10227)
!10231 = !DILocation(line: 375, column: 2, scope: !10227)
!10232 = !DILocation(line: 376, column: 1, scope: !10227)
!10233 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !830, file: !830, line: 284, type: !881, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10234)
!10234 = !{!10235}
!10235 = !DILocalVariable(name: "dev", arg: 1, scope: !10233, file: !830, line: 284, type: !859)
!10236 = !DILocation(line: 0, scope: !10233)
!10237 = !DILocation(line: 286, column: 2, scope: !10233)
!10238 = !DILocation(line: 287, column: 1, scope: !10233)
!10239 = distinct !DISubprogram(name: "stm32_exti_init", scope: !830, file: !830, line: 416, type: !857, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10240)
!10240 = !{!10241}
!10241 = !DILocalVariable(name: "dev", arg: 1, scope: !10239, file: !830, line: 416, type: !859)
!10242 = !DILocation(line: 0, scope: !10239)
!10243 = !DILocation(line: 418, column: 2, scope: !10239)
!10244 = !DILocation(line: 420, column: 2, scope: !10239)
!10245 = !DILocation(line: 0, scope: !880)
!10246 = !DILocation(line: 493, column: 2, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !880, file: !830, line: 493, column: 2)
!10248 = !DILocation(line: 497, column: 2, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !880, file: !830, line: 497, column: 2)
!10250 = !DILocation(line: 507, column: 2, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !880, file: !830, line: 507, column: 2)
!10252 = !DILocation(line: 512, column: 2, scope: !10253)
!10253 = distinct !DILexicalBlock(scope: !880, file: !830, line: 512, column: 2)
!10254 = !DILocation(line: 516, column: 2, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !880, file: !830, line: 516, column: 2)
!10256 = !DILocation(line: 523, column: 2, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !880, file: !830, line: 523, column: 2)
!10258 = !DILocation(line: 527, column: 2, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !880, file: !830, line: 527, column: 2)
!10260 = !DILocation(line: 581, column: 2, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !880, file: !830, line: 581, column: 2)
!10262 = !DILocation(line: 586, column: 2, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !880, file: !830, line: 586, column: 2)
!10264 = !DILocation(line: 591, column: 2, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !880, file: !830, line: 591, column: 2)
!10266 = !DILocation(line: 595, column: 2, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !880, file: !830, line: 595, column: 2)
!10268 = !DILocation(line: 607, column: 1, scope: !880)
!10269 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !830, file: !830, line: 112, type: !10155, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10270)
!10270 = !{!10271, !10272}
!10271 = !DILocalVariable(name: "line", arg: 1, scope: !10269, file: !830, line: 112, type: !125)
!10272 = !DILocalVariable(name: "irqnum", scope: !10269, file: !830, line: 114, type: !125)
!10273 = !DILocation(line: 0, scope: !10269)
!10274 = !DILocation(line: 121, column: 11, scope: !10269)
!10275 = !DILocation(line: 130, column: 26, scope: !10269)
!10276 = !DILocation(line: 130, column: 2, scope: !10269)
!10277 = !DILocation(line: 134, column: 2, scope: !10269)
!10278 = !DILocation(line: 135, column: 1, scope: !10269)
!10279 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !10166, file: !10166, line: 268, type: !8364, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10280)
!10280 = !{!10281}
!10281 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10279, file: !10166, line: 268, type: !208)
!10282 = !DILocation(line: 0, scope: !10279)
!10283 = !DILocation(line: 270, column: 3, scope: !10279)
!10284 = !DILocation(line: 271, column: 1, scope: !10279)
!10285 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !830, file: !830, line: 137, type: !10155, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10286)
!10286 = !{!10287}
!10287 = !DILocalVariable(name: "line", arg: 1, scope: !10285, file: !830, line: 137, type: !125)
!10288 = !DILocation(line: 0, scope: !10285)
!10289 = !DILocation(line: 141, column: 11, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10285, file: !830, line: 141, column: 6)
!10291 = !DILocation(line: 141, column: 6, scope: !10285)
!10292 = !DILocation(line: 145, column: 28, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10290, file: !830, line: 141, column: 17)
!10294 = !DILocation(line: 145, column: 3, scope: !10293)
!10295 = !DILocation(line: 147, column: 2, scope: !10293)
!10296 = !DILocation(line: 151, column: 1, scope: !10285)
!10297 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !10166, file: !10166, line: 309, type: !8364, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10298)
!10298 = !{!10299}
!10299 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10297, file: !10166, line: 309, type: !208)
!10300 = !DILocation(line: 0, scope: !10297)
!10301 = !DILocation(line: 311, column: 3, scope: !10297)
!10302 = !DILocation(line: 312, column: 1, scope: !10297)
!10303 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !830, file: !830, line: 202, type: !10304, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10306)
!10304 = !DISubroutineType(types: !10305)
!10305 = !{null, !125, !125}
!10306 = !{!10307, !10308}
!10307 = !DILocalVariable(name: "line", arg: 1, scope: !10303, file: !830, line: 202, type: !125)
!10308 = !DILocalVariable(name: "trigger", arg: 2, scope: !10303, file: !830, line: 202, type: !125)
!10309 = !DILocation(line: 0, scope: !10303)
!10310 = !DILocation(line: 211, column: 2, scope: !10303)
!10311 = !DILocation(line: 213, column: 36, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10303, file: !830, line: 211, column: 19)
!10313 = !DILocation(line: 213, column: 3, scope: !10312)
!10314 = !DILocation(line: 214, column: 3, scope: !10312)
!10315 = !DILocation(line: 215, column: 3, scope: !10312)
!10316 = !DILocation(line: 217, column: 35, scope: !10312)
!10317 = !DILocation(line: 217, column: 3, scope: !10312)
!10318 = !DILocation(line: 218, column: 3, scope: !10312)
!10319 = !DILocation(line: 219, column: 3, scope: !10312)
!10320 = !DILocation(line: 221, column: 36, scope: !10312)
!10321 = !DILocation(line: 221, column: 3, scope: !10312)
!10322 = !DILocation(line: 222, column: 3, scope: !10312)
!10323 = !DILocation(line: 223, column: 3, scope: !10312)
!10324 = !DILocation(line: 225, column: 35, scope: !10312)
!10325 = !DILocation(line: 225, column: 3, scope: !10312)
!10326 = !DILocation(line: 226, column: 3, scope: !10312)
!10327 = !DILocation(line: 227, column: 3, scope: !10312)
!10328 = !DILocation(line: 232, column: 1, scope: !10303)
!10329 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !10166, file: !10166, line: 573, type: !8364, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10330)
!10330 = !{!10331}
!10331 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10329, file: !10166, line: 573, type: !208)
!10332 = !DILocation(line: 0, scope: !10329)
!10333 = !DILocation(line: 575, column: 3, scope: !10329)
!10334 = !DILocation(line: 577, column: 1, scope: !10329)
!10335 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !10166, file: !10166, line: 703, type: !8364, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10336)
!10336 = !{!10337}
!10337 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10335, file: !10166, line: 703, type: !208)
!10338 = !DILocation(line: 0, scope: !10335)
!10339 = !DILocation(line: 705, column: 3, scope: !10335)
!10340 = !DILocation(line: 706, column: 1, scope: !10335)
!10341 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !10166, file: !10166, line: 529, type: !8364, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10342)
!10342 = !{!10343}
!10343 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10341, file: !10166, line: 529, type: !208)
!10344 = !DILocation(line: 0, scope: !10341)
!10345 = !DILocation(line: 531, column: 3, scope: !10341)
!10346 = !DILocation(line: 533, column: 1, scope: !10341)
!10347 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !10166, file: !10166, line: 661, type: !8364, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10348)
!10348 = !{!10349}
!10349 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10347, file: !10166, line: 661, type: !208)
!10350 = !DILocation(line: 0, scope: !10347)
!10351 = !DILocation(line: 663, column: 3, scope: !10347)
!10352 = !DILocation(line: 664, column: 1, scope: !10347)
!10353 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !830, file: !830, line: 433, type: !10354, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10356)
!10354 = !DISubroutineType(types: !10355)
!10355 = !{!125, !125, !870, !124}
!10356 = !{!10357, !10358, !10359, !10360, !10362}
!10357 = !DILocalVariable(name: "line", arg: 1, scope: !10353, file: !830, line: 433, type: !125)
!10358 = !DILocalVariable(name: "cb", arg: 2, scope: !10353, file: !830, line: 433, type: !870)
!10359 = !DILocalVariable(name: "arg", arg: 3, scope: !10353, file: !830, line: 433, type: !124)
!10360 = !DILocalVariable(name: "dev", scope: !10353, file: !830, line: 435, type: !10361)
!10361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !859)
!10362 = !DILocalVariable(name: "data", scope: !10353, file: !830, line: 436, type: !10120)
!10363 = !DILocation(line: 0, scope: !10353)
!10364 = !DILocation(line: 438, column: 21, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10353, file: !830, line: 438, column: 6)
!10366 = !DILocation(line: 438, column: 6, scope: !10365)
!10367 = !DILocation(line: 438, column: 6, scope: !10353)
!10368 = !DILocation(line: 442, column: 20, scope: !10353)
!10369 = !DILocation(line: 443, column: 17, scope: !10353)
!10370 = !DILocation(line: 443, column: 22, scope: !10353)
!10371 = !DILocation(line: 445, column: 2, scope: !10353)
!10372 = !DILocation(line: 446, column: 1, scope: !10353)
!10373 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !830, file: !830, line: 448, type: !10155, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10374)
!10374 = !{!10375, !10376, !10377}
!10375 = !DILocalVariable(name: "line", arg: 1, scope: !10373, file: !830, line: 448, type: !125)
!10376 = !DILocalVariable(name: "dev", scope: !10373, file: !830, line: 450, type: !10361)
!10377 = !DILocalVariable(name: "data", scope: !10373, file: !830, line: 451, type: !10120)
!10378 = !DILocation(line: 0, scope: !10373)
!10379 = !DILocation(line: 453, column: 17, scope: !10373)
!10380 = !DILocation(line: 453, column: 20, scope: !10373)
!10381 = !DILocation(line: 454, column: 17, scope: !10373)
!10382 = !DILocation(line: 454, column: 22, scope: !10373)
!10383 = !DILocation(line: 455, column: 1, scope: !10373)
!10384 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1013, file: !1013, line: 183, type: !1049, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !10385)
!10385 = !{!10386, !10387, !10388, !10389, !10390}
!10386 = !DILocalVariable(name: "dev", arg: 1, scope: !10384, file: !1013, line: 183, type: !1040)
!10387 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10384, file: !1013, line: 184, type: !1051)
!10388 = !DILocalVariable(name: "pclken", scope: !10384, file: !1013, line: 186, type: !1003)
!10389 = !DILocalVariable(name: "reg", scope: !10384, file: !1013, line: 187, type: !1773)
!10390 = !DILocalVariable(name: "reg_val", scope: !10384, file: !1013, line: 188, type: !208)
!10391 = !DILocation(line: 0, scope: !10384)
!10392 = !DILocation(line: 192, column: 6, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10384, file: !1013, line: 192, column: 6)
!10394 = !DILocation(line: 192, column: 6, scope: !10384)
!10395 = !DILocation(line: 197, column: 52, scope: !10384)
!10396 = !DILocation(line: 197, column: 8, scope: !10384)
!10397 = !DILocation(line: 198, column: 12, scope: !10384)
!10398 = !DILocation(line: 199, column: 21, scope: !10384)
!10399 = !DILocation(line: 199, column: 10, scope: !10384)
!10400 = !DILocation(line: 200, column: 7, scope: !10384)
!10401 = !DILocation(line: 202, column: 2, scope: !10384)
!10402 = !DILocation(line: 203, column: 1, scope: !10384)
!10403 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1013, file: !1013, line: 205, type: !1049, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !10404)
!10404 = !{!10405, !10406, !10407, !10408, !10409}
!10405 = !DILocalVariable(name: "dev", arg: 1, scope: !10403, file: !1013, line: 205, type: !1040)
!10406 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10403, file: !1013, line: 206, type: !1051)
!10407 = !DILocalVariable(name: "pclken", scope: !10403, file: !1013, line: 208, type: !1003)
!10408 = !DILocalVariable(name: "reg", scope: !10403, file: !1013, line: 209, type: !1773)
!10409 = !DILocalVariable(name: "reg_val", scope: !10403, file: !1013, line: 210, type: !208)
!10410 = !DILocation(line: 0, scope: !10403)
!10411 = !DILocation(line: 214, column: 6, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10403, file: !1013, line: 214, column: 6)
!10413 = !DILocation(line: 214, column: 6, scope: !10403)
!10414 = !DILocation(line: 219, column: 52, scope: !10403)
!10415 = !DILocation(line: 219, column: 8, scope: !10403)
!10416 = !DILocation(line: 220, column: 12, scope: !10403)
!10417 = !DILocation(line: 221, column: 22, scope: !10403)
!10418 = !DILocation(line: 221, column: 13, scope: !10403)
!10419 = !DILocation(line: 221, column: 10, scope: !10403)
!10420 = !DILocation(line: 222, column: 7, scope: !10403)
!10421 = !DILocation(line: 224, column: 2, scope: !10403)
!10422 = !DILocation(line: 225, column: 1, scope: !10403)
!10423 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1013, file: !1013, line: 262, type: !1065, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !10424)
!10424 = !{!10425, !10426, !10427, !10428, !10429, !10430, !10431, !10432}
!10425 = !DILocalVariable(name: "clock", arg: 1, scope: !10423, file: !1013, line: 262, type: !1040)
!10426 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10423, file: !1013, line: 263, type: !1051)
!10427 = !DILocalVariable(name: "rate", arg: 3, scope: !10423, file: !1013, line: 264, type: !1009)
!10428 = !DILocalVariable(name: "pclken", scope: !10423, file: !1013, line: 266, type: !1003)
!10429 = !DILocalVariable(name: "ahb_clock", scope: !10423, file: !1013, line: 273, type: !208)
!10430 = !DILocalVariable(name: "apb1_clock", scope: !10423, file: !1013, line: 274, type: !208)
!10431 = !DILocalVariable(name: "apb2_clock", scope: !10423, file: !1013, line: 276, type: !208)
!10432 = !DILocalVariable(name: "ahb3_clock", scope: !10423, file: !1013, line: 286, type: !208)
!10433 = !DILocation(line: 0, scope: !10423)
!10434 = !DILocation(line: 273, column: 23, scope: !10423)
!10435 = !DILocation(line: 299, column: 18, scope: !10423)
!10436 = !DILocation(line: 299, column: 2, scope: !10423)
!10437 = !DILocation(line: 274, column: 24, scope: !10423)
!10438 = !DILocation(line: 319, column: 3, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10423, file: !1013, line: 299, column: 23)
!10440 = !DILocation(line: 276, column: 24, scope: !10423)
!10441 = !DILocation(line: 323, column: 3, scope: !10439)
!10442 = !DILocation(line: 346, column: 33, scope: !10439)
!10443 = !DILocation(line: 346, column: 11, scope: !10439)
!10444 = !DILocation(line: 350, column: 3, scope: !10439)
!10445 = !DILocation(line: 374, column: 3, scope: !10439)
!10446 = !DILocation(line: 379, column: 3, scope: !10439)
!10447 = !DILocation(line: 0, scope: !10439)
!10448 = !DILocation(line: 396, column: 1, scope: !10423)
!10449 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1013, file: !1013, line: 227, type: !1081, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !10450)
!10450 = !{!10451, !10452, !10453, !10454, !10455, !10456, !10457, !10458}
!10451 = !DILocalVariable(name: "dev", arg: 1, scope: !10449, file: !1013, line: 227, type: !1040)
!10452 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10449, file: !1013, line: 228, type: !1051)
!10453 = !DILocalVariable(name: "data", arg: 3, scope: !10449, file: !1013, line: 229, type: !124)
!10454 = !DILocalVariable(name: "pclken", scope: !10449, file: !1013, line: 233, type: !1003)
!10455 = !DILocalVariable(name: "reg", scope: !10449, file: !1013, line: 234, type: !1773)
!10456 = !DILocalVariable(name: "reg_val", scope: !10449, file: !1013, line: 235, type: !208)
!10457 = !DILocalVariable(name: "dt_val", scope: !10449, file: !1013, line: 235, type: !208)
!10458 = !DILocalVariable(name: "err", scope: !10449, file: !1013, line: 236, type: !125)
!10459 = !DILocation(line: 0, scope: !10449)
!10460 = !DILocation(line: 241, column: 30, scope: !10449)
!10461 = !DILocation(line: 241, column: 8, scope: !10449)
!10462 = !DILocation(line: 242, column: 10, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10449, file: !1013, line: 242, column: 6)
!10464 = !DILocation(line: 242, column: 6, scope: !10449)
!10465 = !DILocation(line: 247, column: 11, scope: !10449)
!10466 = !DILocation(line: 248, column: 6, scope: !10449)
!10467 = !DILocation(line: 247, column: 44, scope: !10449)
!10468 = !DILocation(line: 250, column: 6, scope: !10449)
!10469 = !DILocation(line: 249, column: 52, scope: !10449)
!10470 = !DILocation(line: 249, column: 8, scope: !10449)
!10471 = !DILocation(line: 251, column: 12, scope: !10449)
!10472 = !DILocation(line: 252, column: 10, scope: !10449)
!10473 = !DILocation(line: 253, column: 7, scope: !10449)
!10474 = !DILocation(line: 255, column: 2, scope: !10449)
!10475 = !DILocation(line: 260, column: 1, scope: !10449)
!10476 = distinct !DISubprogram(name: "enabled_clock", scope: !1013, file: !1013, line: 100, type: !10477, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !10479)
!10477 = !DISubroutineType(types: !10478)
!10478 = !{!125, !208}
!10479 = !{!10480, !10481}
!10480 = !DILocalVariable(name: "src_clk", arg: 1, scope: !10476, file: !1013, line: 100, type: !208)
!10481 = !DILocalVariable(name: "r", scope: !10476, file: !1013, line: 102, type: !125)
!10482 = !DILocation(line: 0, scope: !10476)
!10483 = !DILocation(line: 104, column: 2, scope: !10476)
!10484 = !DILocation(line: 180, column: 2, scope: !10476)
!10485 = !DILocation(line: 181, column: 1, scope: !10476)
!10486 = distinct !DISubprogram(name: "get_bus_clock", scope: !1013, file: !1013, line: 79, type: !10487, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !10489)
!10487 = !DISubroutineType(types: !10488)
!10488 = !{!208, !208, !208}
!10489 = !{!10490, !10491}
!10490 = !DILocalVariable(name: "clock", arg: 1, scope: !10486, file: !1013, line: 79, type: !208)
!10491 = !DILocalVariable(name: "prescaler", arg: 2, scope: !10486, file: !1013, line: 79, type: !208)
!10492 = !DILocation(line: 0, scope: !10486)
!10493 = !DILocation(line: 81, column: 15, scope: !10486)
!10494 = !DILocation(line: 81, column: 2, scope: !10486)
!10495 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1013, file: !1013, line: 68, type: !10496, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !10498)
!10496 = !DISubroutineType(types: !10497)
!10497 = !{!208, !208, !125, !125, !125}
!10498 = !{!10499, !10500, !10501, !10502}
!10499 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !10495, file: !1013, line: 68, type: !208)
!10500 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !10495, file: !1013, line: 69, type: !125)
!10501 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !10495, file: !1013, line: 70, type: !125)
!10502 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !10495, file: !1013, line: 71, type: !125)
!10503 = !DILocation(line: 0, scope: !10495)
!10504 = !DILocation(line: 75, column: 22, scope: !10495)
!10505 = !DILocation(line: 75, column: 34, scope: !10495)
!10506 = !DILocation(line: 75, column: 2, scope: !10495)
!10507 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1013, file: !1013, line: 641, type: !1038, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !10508)
!10508 = !{!10509, !10510, !10511}
!10509 = !DILocalVariable(name: "dev", arg: 1, scope: !10507, file: !1013, line: 641, type: !1040)
!10510 = !DILocalVariable(name: "old_flash_freq", scope: !10507, file: !1013, line: 664, type: !208)
!10511 = !DILocalVariable(name: "new_flash_freq", scope: !10507, file: !1013, line: 665, type: !208)
!10512 = !DILocation(line: 0, scope: !10507)
!10513 = !DILocation(line: 646, column: 2, scope: !10507)
!10514 = !DILocation(line: 667, column: 19, scope: !10507)
!10515 = !DILocation(line: 674, column: 21, scope: !10516)
!10516 = distinct !DILexicalBlock(scope: !10507, file: !1013, line: 674, column: 6)
!10517 = !DILocation(line: 674, column: 6, scope: !10507)
!10518 = !DILocation(line: 675, column: 3, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10516, file: !1013, line: 674, column: 59)
!10520 = !DILocation(line: 676, column: 2, scope: !10519)
!10521 = !DILocation(line: 680, column: 2, scope: !10507)
!10522 = !DILocation(line: 683, column: 2, scope: !10507)
!10523 = !DILocation(line: 690, column: 3, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10525, file: !1013, line: 689, column: 9)
!10525 = distinct !DILexicalBlock(scope: !10507, file: !1013, line: 685, column: 6)
!10526 = !DILocation(line: 695, column: 2, scope: !10507)
!10527 = !DILocation(line: 696, column: 2, scope: !10507)
!10528 = !DILocation(line: 696, column: 9, scope: !10507)
!10529 = !DILocation(line: 696, column: 34, scope: !10507)
!10530 = distinct !{!10530, !10527, !10531}
!10531 = !DILocation(line: 697, column: 2, scope: !10507)
!10532 = !DILocation(line: 720, column: 21, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10507, file: !1013, line: 720, column: 6)
!10534 = !DILocation(line: 720, column: 6, scope: !10507)
!10535 = !DILocation(line: 721, column: 3, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10533, file: !1013, line: 720, column: 60)
!10537 = !DILocation(line: 722, column: 2, scope: !10536)
!10538 = !DILocation(line: 725, column: 18, scope: !10507)
!10539 = !DILocation(line: 728, column: 2, scope: !10507)
!10540 = !DILocation(line: 730, column: 2, scope: !10507)
!10541 = !DILocation(line: 745, column: 2, scope: !10507)
!10542 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10543, file: !10543, line: 3275, type: !8354, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !639)
!10543 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10544 = !DILocation(line: 3277, column: 21, scope: !10542)
!10545 = !DILocation(line: 3277, column: 3, scope: !10542)
!10546 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1013, file: !1013, line: 507, type: !3278, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !639)
!10547 = !DILocation(line: 534, column: 7, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10549, file: !1013, line: 534, column: 7)
!10549 = distinct !DILexicalBlock(scope: !10550, file: !1013, line: 532, column: 37)
!10550 = distinct !DILexicalBlock(scope: !10546, file: !1013, line: 532, column: 6)
!10551 = !DILocation(line: 534, column: 28, scope: !10548)
!10552 = !DILocation(line: 534, column: 7, scope: !10549)
!10553 = !DILocation(line: 536, column: 4, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10548, file: !1013, line: 534, column: 34)
!10555 = !DILocation(line: 537, column: 4, scope: !10554)
!10556 = !DILocation(line: 537, column: 11, scope: !10554)
!10557 = !DILocation(line: 537, column: 32, scope: !10554)
!10558 = distinct !{!10558, !10555, !10559}
!10559 = !DILocation(line: 539, column: 4, scope: !10554)
!10560 = !DILocation(line: 583, column: 3, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10562, file: !1013, line: 577, column: 37)
!10562 = distinct !DILexicalBlock(scope: !10546, file: !1013, line: 577, column: 6)
!10563 = !DILocation(line: 584, column: 3, scope: !10561)
!10564 = !DILocation(line: 584, column: 10, scope: !10561)
!10565 = !DILocation(line: 584, column: 31, scope: !10561)
!10566 = distinct !{!10566, !10563, !10567}
!10567 = !DILocation(line: 585, column: 3, scope: !10561)
!10568 = !DILocation(line: 627, column: 1, scope: !10546)
!10569 = distinct !DISubprogram(name: "set_up_plls", scope: !1013, file: !1013, line: 448, type: !3278, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !639)
!10570 = !DILocation(line: 460, column: 6, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10569, file: !1013, line: 460, column: 6)
!10572 = !DILocation(line: 460, column: 31, scope: !10571)
!10573 = !DILocation(line: 460, column: 6, scope: !10569)
!10574 = !DILocation(line: 461, column: 3, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10571, file: !1013, line: 460, column: 67)
!10576 = !DILocation(line: 462, column: 3, scope: !10575)
!10577 = !DILocation(line: 463, column: 2, scope: !10575)
!10578 = !DILocation(line: 464, column: 2, scope: !10569)
!10579 = !DILocation(line: 488, column: 2, scope: !10569)
!10580 = !DILocation(line: 496, column: 2, scope: !10569)
!10581 = !DILocation(line: 499, column: 2, scope: !10569)
!10582 = !DILocation(line: 500, column: 2, scope: !10569)
!10583 = !DILocation(line: 500, column: 9, scope: !10569)
!10584 = !DILocation(line: 500, column: 30, scope: !10569)
!10585 = distinct !{!10585, !10582, !10586}
!10586 = !DILocation(line: 502, column: 2, scope: !10569)
!10587 = !DILocation(line: 505, column: 1, scope: !10569)
!10588 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10543, file: !10543, line: 3224, type: !8364, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !10589)
!10589 = !{!10590}
!10590 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10588, file: !10543, line: 3224, type: !208)
!10591 = !DILocation(line: 0, scope: !10588)
!10592 = !DILocation(line: 3226, column: 3, scope: !10588)
!10593 = !DILocation(line: 3227, column: 1, scope: !10588)
!10594 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10543, file: !10543, line: 3188, type: !8364, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !10595)
!10595 = !{!10596}
!10596 = !DILocalVariable(name: "Source", arg: 1, scope: !10594, file: !10543, line: 3188, type: !208)
!10597 = !DILocation(line: 0, scope: !10594)
!10598 = !DILocation(line: 3190, column: 3, scope: !10594)
!10599 = !DILocation(line: 3191, column: 1, scope: !10594)
!10600 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10543, file: !10543, line: 3204, type: !8354, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !639)
!10601 = !DILocation(line: 3206, column: 21, scope: !10600)
!10602 = !DILocation(line: 3206, column: 3, scope: !10600)
!10603 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10543, file: !10543, line: 3240, type: !8364, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !10604)
!10604 = !{!10605}
!10605 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10603, file: !10543, line: 3240, type: !208)
!10606 = !DILocation(line: 0, scope: !10603)
!10607 = !DILocation(line: 3242, column: 3, scope: !10603)
!10608 = !DILocation(line: 3243, column: 1, scope: !10603)
!10609 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10543, file: !10543, line: 3256, type: !8364, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !10610)
!10610 = !{!10611}
!10611 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10609, file: !10543, line: 3256, type: !208)
!10612 = !DILocation(line: 0, scope: !10609)
!10613 = !DILocation(line: 3258, column: 3, scope: !10609)
!10614 = !DILocation(line: 3259, column: 1, scope: !10609)
!10615 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1013, file: !1013, line: 409, type: !3278, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !639)
!10616 = !DILocation(line: 412, column: 6, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !10615, file: !1013, line: 412, column: 6)
!10618 = !DILocation(line: 412, column: 27, scope: !10617)
!10619 = !DILocation(line: 412, column: 6, scope: !10615)
!10620 = !DILocation(line: 414, column: 3, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10617, file: !1013, line: 412, column: 33)
!10622 = !DILocation(line: 415, column: 3, scope: !10621)
!10623 = !DILocation(line: 415, column: 10, scope: !10621)
!10624 = !DILocation(line: 415, column: 31, scope: !10621)
!10625 = distinct !{!10625, !10622, !10626}
!10626 = !DILocation(line: 417, column: 3, scope: !10621)
!10627 = !DILocation(line: 421, column: 2, scope: !10615)
!10628 = !DILocation(line: 422, column: 2, scope: !10615)
!10629 = !DILocation(line: 422, column: 9, scope: !10615)
!10630 = !DILocation(line: 422, column: 34, scope: !10615)
!10631 = distinct !{!10631, !10628, !10632}
!10632 = !DILocation(line: 423, column: 2, scope: !10615)
!10633 = !DILocation(line: 424, column: 1, scope: !10615)
!10634 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10543, file: !10543, line: 4195, type: !3278, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !639)
!10635 = !DILocation(line: 4197, column: 3, scope: !10634)
!10636 = !DILocation(line: 4198, column: 1, scope: !10634)
!10637 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10543, file: !10543, line: 4184, type: !3278, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !639)
!10638 = !DILocation(line: 4186, column: 3, scope: !10637)
!10639 = !DILocation(line: 4187, column: 1, scope: !10637)
!10640 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10543, file: !10543, line: 4205, type: !8354, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !639)
!10641 = !DILocation(line: 4207, column: 11, scope: !10640)
!10642 = !DILocation(line: 4207, column: 44, scope: !10640)
!10643 = !DILocation(line: 4207, column: 3, scope: !10640)
!10644 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10543, file: !10543, line: 3007, type: !8354, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !639)
!10645 = !DILocation(line: 3009, column: 11, scope: !10644)
!10646 = !DILocation(line: 3009, column: 44, scope: !10644)
!10647 = !DILocation(line: 3009, column: 3, scope: !10644)
!10648 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10543, file: !10543, line: 2987, type: !3278, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !639)
!10649 = !DILocation(line: 2989, column: 3, scope: !10648)
!10650 = !DILocation(line: 2990, column: 1, scope: !10648)
!10651 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10543, file: !10543, line: 3143, type: !3278, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !639)
!10652 = !DILocation(line: 3145, column: 3, scope: !10651)
!10653 = !DILocation(line: 3146, column: 1, scope: !10651)
!10654 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10543, file: !10543, line: 3163, type: !8354, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !949, retainedNodes: !639)
!10655 = !DILocation(line: 3165, column: 11, scope: !10654)
!10656 = !DILocation(line: 3165, column: 46, scope: !10654)
!10657 = !DILocation(line: 3165, column: 3, scope: !10654)
!10658 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10659, file: !10659, line: 40, type: !8354, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !639)
!10659 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10660 = !DILocation(line: 43, column: 3, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10662, file: !10659, line: 42, column: 37)
!10662 = distinct !DILexicalBlock(scope: !10658, file: !10659, line: 42, column: 6)
!10663 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10659, file: !10659, line: 56, type: !3278, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !639)
!10664 = !DILocation(line: 58, column: 2, scope: !10663)
!10665 = !DILocation(line: 62, column: 1, scope: !10663)
!10666 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10543, file: !10543, line: 4304, type: !10667, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !10669)
!10667 = !DISubroutineType(types: !10668)
!10668 = !{null, !208, !208, !208, !208}
!10669 = !{!10670, !10671, !10672, !10673}
!10670 = !DILocalVariable(name: "Source", arg: 1, scope: !10666, file: !10543, line: 4304, type: !208)
!10671 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10666, file: !10543, line: 4304, type: !208)
!10672 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10666, file: !10543, line: 4304, type: !208)
!10673 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10666, file: !10543, line: 4304, type: !208)
!10674 = !DILocation(line: 0, scope: !10666)
!10675 = !DILocation(line: 4306, column: 3, scope: !10666)
!10676 = !DILocation(line: 4308, column: 3, scope: !10666)
!10677 = !DILocation(line: 4312, column: 1, scope: !10666)
!10678 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10659, file: !10659, line: 69, type: !3278, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !639)
!10679 = !DILocation(line: 72, column: 2, scope: !10678)
!10680 = !DILocation(line: 73, column: 1, scope: !10678)
!10681 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10682, file: !10682, line: 1185, type: !8364, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !10683)
!10682 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10683 = !{!10684, !10685}
!10684 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10681, file: !10682, line: 1185, type: !208)
!10685 = !DILocalVariable(name: "tmpreg", scope: !10681, file: !10682, line: 1187, type: !423)
!10686 = !DILocation(line: 0, scope: !10681)
!10687 = !DILocation(line: 1187, column: 3, scope: !10681)
!10688 = !DILocation(line: 1187, column: 17, scope: !10681)
!10689 = !DILocation(line: 1188, column: 3, scope: !10681)
!10690 = !DILocation(line: 1190, column: 12, scope: !10681)
!10691 = !DILocation(line: 1190, column: 10, scope: !10681)
!10692 = !DILocation(line: 1191, column: 9, scope: !10681)
!10693 = !DILocation(line: 1192, column: 1, scope: !10681)
!10694 = distinct !DISubprogram(name: "uart_console_init", scope: !1142, file: !1142, line: 588, type: !1119, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !10695)
!10695 = !{!10696}
!10696 = !DILocalVariable(name: "arg", arg: 1, scope: !10694, file: !1142, line: 588, type: !1097)
!10697 = !DILocation(line: 0, scope: !10694)
!10698 = !DILocation(line: 593, column: 7, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10694, file: !1142, line: 593, column: 6)
!10700 = !DILocation(line: 593, column: 6, scope: !10694)
!10701 = !DILocation(line: 597, column: 2, scope: !10694)
!10702 = !DILocation(line: 599, column: 2, scope: !10694)
!10703 = !DILocation(line: 600, column: 1, scope: !10694)
!10704 = distinct !DISubprogram(name: "device_is_ready", scope: !4183, file: !4183, line: 47, type: !10705, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !10707)
!10705 = !DISubroutineType(types: !10706)
!10706 = !{!153, !1097}
!10707 = !{!10708}
!10708 = !DILocalVariable(name: "dev", arg: 1, scope: !10704, file: !4183, line: 47, type: !1097)
!10709 = !DILocation(line: 0, scope: !10704)
!10710 = !DILocation(line: 55, column: 2, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10704, file: !4183, line: 55, column: 2)
!10712 = !{i64 2154267709}
!10713 = !DILocation(line: 56, column: 9, scope: !10704)
!10714 = !DILocation(line: 56, column: 2, scope: !10704)
!10715 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1142, file: !1142, line: 573, type: !3278, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !639)
!10716 = !DILocation(line: 576, column: 2, scope: !10715)
!10717 = !DILocation(line: 579, column: 2, scope: !10715)
!10718 = !DILocation(line: 581, column: 1, scope: !10715)
!10719 = distinct !DISubprogram(name: "console_out", scope: !1142, file: !1142, line: 77, type: !410, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !10720)
!10720 = !{!10721}
!10721 = !DILocalVariable(name: "c", arg: 1, scope: !10719, file: !1142, line: 77, type: !125)
!10722 = !DILocation(line: 0, scope: !10719)
!10723 = !DILocation(line: 89, column: 11, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10719, file: !1142, line: 89, column: 6)
!10725 = !DILocation(line: 89, column: 6, scope: !10719)
!10726 = !DILocation(line: 90, column: 3, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10724, file: !1142, line: 89, column: 17)
!10728 = !DILocation(line: 91, column: 2, scope: !10727)
!10729 = !DILocation(line: 92, column: 34, scope: !10719)
!10730 = !DILocation(line: 92, column: 2, scope: !10719)
!10731 = !DILocation(line: 94, column: 2, scope: !10719)
!10732 = distinct !DISubprogram(name: "uart_poll_out", scope: !10733, file: !10733, line: 95, type: !1115, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !10734)
!10733 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/crypto")
!10734 = !{!10735, !10736}
!10735 = !DILocalVariable(name: "dev", arg: 1, scope: !10732, file: !10733, line: 95, type: !1097)
!10736 = !DILocalVariable(name: "out_char", arg: 2, scope: !10732, file: !10733, line: 95, type: !151)
!10737 = !DILocation(line: 0, scope: !10732)
!10738 = !DILocation(line: 105, column: 2, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10732, file: !10733, line: 105, column: 2)
!10740 = !{i64 2154351100}
!10741 = !DILocation(line: 106, column: 2, scope: !10732)
!10742 = !DILocation(line: 107, column: 1, scope: !10732)
!10743 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1091, file: !1091, line: 574, type: !1115, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !10744)
!10744 = !{!10745, !10746, !10747}
!10745 = !DILocalVariable(name: "dev", arg: 1, scope: !10743, file: !1091, line: 574, type: !1097)
!10746 = !DILocalVariable(name: "out_char", arg: 2, scope: !10743, file: !1091, line: 575, type: !151)
!10747 = !DILocalVariable(name: "api", scope: !10743, file: !1091, line: 577, type: !1088)
!10748 = !DILocation(line: 0, scope: !10743)
!10749 = !DILocation(line: 578, column: 40, scope: !10743)
!10750 = !DILocation(line: 580, column: 7, scope: !10743)
!10751 = !DILocation(line: 580, column: 2, scope: !10743)
!10752 = !DILocation(line: 581, column: 1, scope: !10743)
!10753 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !10705, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !10754)
!10754 = !{!10755}
!10755 = !DILocalVariable(name: "dev", arg: 1, scope: !10753, file: !137, line: 730, type: !1097)
!10756 = !DILocation(line: 0, scope: !10753)
!10757 = !DILocation(line: 732, column: 9, scope: !10753)
!10758 = !DILocation(line: 732, column: 2, scope: !10753)
!10759 = distinct !DISubprogram(name: "uart_register_input", scope: !1142, file: !1142, line: 560, type: !10760, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !10805)
!10760 = !DISubroutineType(types: !10761)
!10761 = !{null, !10762, !10762, !10802}
!10762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10763, size: 32)
!10763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !624, line: 2208, size: 128, elements: !10764)
!10764 = !{!10765}
!10765 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10763, file: !624, line: 2209, baseType: !10766, size: 128)
!10766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !624, line: 1709, size: 128, elements: !10767)
!10767 = !{!10768, !10781, !10783}
!10768 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10766, file: !624, line: 1710, baseType: !10769, size: 64)
!10769 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10770, line: 46, baseType: !10771)
!10770 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10770, line: 41, size: 64, elements: !10772)
!10772 = !{!10773, !10780}
!10773 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10771, file: !10770, line: 42, baseType: !10774, size: 32)
!10774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10775, size: 32)
!10775 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10770, line: 39, baseType: !10776)
!10776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10770, line: 35, size: 32, elements: !10777)
!10777 = !{!10778}
!10778 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10776, file: !10770, line: 36, baseType: !10779, size: 32)
!10779 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10770, line: 32, baseType: !208)
!10780 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10771, file: !10770, line: 43, baseType: !10774, size: 32, offset: 32)
!10781 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10766, file: !624, line: 1711, baseType: !10782, offset: 64)
!10782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!10783 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10766, file: !624, line: 1712, baseType: !10784, size: 64, offset: 64)
!10784 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !10785)
!10785 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !10786)
!10786 = !{!10787}
!10787 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10785, file: !567, line: 232, baseType: !10788, size: 64)
!10788 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !10789)
!10789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !10790)
!10790 = !{!10791, !10797}
!10791 = !DIDerivedType(tag: DW_TAG_member, scope: !10789, file: !541, line: 38, baseType: !10792, size: 32)
!10792 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10789, file: !541, line: 38, size: 32, elements: !10793)
!10793 = !{!10794, !10796}
!10794 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10792, file: !541, line: 39, baseType: !10795, size: 32)
!10795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10789, size: 32)
!10796 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10792, file: !541, line: 40, baseType: !10795, size: 32)
!10797 = !DIDerivedType(tag: DW_TAG_member, scope: !10789, file: !541, line: 42, baseType: !10798, size: 32, offset: 32)
!10798 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10789, file: !541, line: 42, size: 32, elements: !10799)
!10799 = !{!10800, !10801}
!10800 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10798, file: !541, line: 43, baseType: !10795, size: 32)
!10801 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10798, file: !541, line: 44, baseType: !10795, size: 32)
!10802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10803, size: 32)
!10803 = !DISubroutineType(types: !10804)
!10804 = !{!150, !393, !150}
!10805 = !{!10806, !10807, !10808}
!10806 = !DILocalVariable(name: "avail", arg: 1, scope: !10759, file: !1142, line: 560, type: !10762)
!10807 = !DILocalVariable(name: "lines", arg: 2, scope: !10759, file: !1142, line: 560, type: !10762)
!10808 = !DILocalVariable(name: "completion", arg: 3, scope: !10759, file: !1142, line: 561, type: !10802)
!10809 = !DILocation(line: 0, scope: !10759)
!10810 = !DILocation(line: 566, column: 1, scope: !10759)
!10811 = distinct !DISubprogram(name: "tc_shim_init", scope: !1157, file: !1157, line: 305, type: !1181, scopeLine: 306, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10812)
!10812 = !{!10813, !10814}
!10813 = !DILocalVariable(name: "dev", arg: 1, scope: !10811, file: !1157, line: 305, type: !1183)
!10814 = !DILocalVariable(name: "i", scope: !10811, file: !1157, line: 307, type: !125)
!10815 = !DILocation(line: 0, scope: !10811)
!10816 = !DILocation(line: 311, column: 29, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10818, file: !1157, line: 310, column: 43)
!10818 = distinct !DILexicalBlock(scope: !10819, file: !1157, line: 310, column: 2)
!10819 = distinct !DILexicalBlock(scope: !10811, file: !1157, line: 310, column: 2)
!10820 = !DILocation(line: 314, column: 2, scope: !10811)
!10821 = distinct !DISubprogram(name: "tc_query_caps", scope: !1157, file: !1157, line: 289, type: !1181, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10822)
!10822 = !{!10823}
!10823 = !DILocalVariable(name: "dev", arg: 1, scope: !10821, file: !1157, line: 289, type: !1183)
!10824 = !DILocation(line: 0, scope: !10821)
!10825 = !DILocation(line: 291, column: 2, scope: !10821)
!10826 = distinct !DISubprogram(name: "tc_session_setup", scope: !1157, file: !1157, line: 193, type: !1194, scopeLine: 196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10827)
!10827 = !{!10828, !10829, !10830, !10831, !10832, !10833, !10835}
!10828 = !DILocalVariable(name: "dev", arg: 1, scope: !10826, file: !1157, line: 193, type: !1183)
!10829 = !DILocalVariable(name: "ctx", arg: 2, scope: !10826, file: !1157, line: 193, type: !1196)
!10830 = !DILocalVariable(name: "algo", arg: 3, scope: !10826, file: !1157, line: 194, type: !39)
!10831 = !DILocalVariable(name: "mode", arg: 4, scope: !10826, file: !1157, line: 194, type: !30)
!10832 = !DILocalVariable(name: "op_type", arg: 5, scope: !10826, file: !1157, line: 195, type: !42)
!10833 = !DILocalVariable(name: "data", scope: !10826, file: !1157, line: 197, type: !10834)
!10834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 32)
!10835 = !DILocalVariable(name: "idx", scope: !10826, file: !1157, line: 198, type: !125)
!10836 = !DILocation(line: 0, scope: !10826)
!10837 = !DILocation(line: 203, column: 11, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10826, file: !1157, line: 203, column: 6)
!10839 = !DILocation(line: 203, column: 6, scope: !10826)
!10840 = !DILocation(line: 204, column: 3, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10842, file: !1157, line: 204, column: 3)
!10842 = distinct !DILexicalBlock(scope: !10843, file: !1157, line: 204, column: 3)
!10843 = distinct !DILexicalBlock(scope: !10844, file: !1157, line: 204, column: 3)
!10844 = distinct !DILexicalBlock(scope: !10845, file: !1157, line: 204, column: 3)
!10845 = distinct !DILexicalBlock(scope: !10838, file: !1157, line: 203, column: 38)
!10846 = !DILocation(line: 205, column: 3, scope: !10845)
!10847 = !DILocation(line: 211, column: 13, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10826, file: !1157, line: 211, column: 6)
!10849 = !DILocation(line: 211, column: 19, scope: !10848)
!10850 = !DILocation(line: 211, column: 6, scope: !10826)
!10851 = !DILocation(line: 212, column: 3, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10853, file: !1157, line: 212, column: 3)
!10853 = distinct !DILexicalBlock(scope: !10854, file: !1157, line: 212, column: 3)
!10854 = distinct !DILexicalBlock(scope: !10855, file: !1157, line: 212, column: 3)
!10855 = distinct !DILexicalBlock(scope: !10856, file: !1157, line: 212, column: 3)
!10856 = distinct !DILexicalBlock(scope: !10848, file: !1157, line: 211, column: 36)
!10857 = !DILocation(line: 213, column: 3, scope: !10856)
!10858 = !DILocation(line: 216, column: 11, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10826, file: !1157, line: 216, column: 6)
!10860 = !DILocation(line: 216, column: 18, scope: !10859)
!10861 = !DILocation(line: 216, column: 6, scope: !10826)
!10862 = !DILocation(line: 218, column: 3, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10864, file: !1157, line: 218, column: 3)
!10864 = distinct !DILexicalBlock(scope: !10865, file: !1157, line: 218, column: 3)
!10865 = distinct !DILexicalBlock(scope: !10866, file: !1157, line: 218, column: 3)
!10866 = distinct !DILexicalBlock(scope: !10867, file: !1157, line: 218, column: 3)
!10867 = distinct !DILexicalBlock(scope: !10859, file: !1157, line: 216, column: 38)
!10868 = !DILocation(line: 219, column: 3, scope: !10867)
!10869 = !DILocation(line: 222, column: 14, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10826, file: !1157, line: 222, column: 6)
!10871 = !DILocation(line: 222, column: 6, scope: !10826)
!10872 = !DILocation(line: 223, column: 3, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10870, file: !1157, line: 222, column: 43)
!10874 = !DILocation(line: 225, column: 13, scope: !10875)
!10875 = distinct !DILexicalBlock(scope: !10873, file: !1157, line: 223, column: 17)
!10876 = !DILocation(line: 225, column: 29, scope: !10875)
!10877 = !DILocation(line: 226, column: 4, scope: !10875)
!10878 = !DILocation(line: 228, column: 34, scope: !10879)
!10879 = distinct !DILexicalBlock(scope: !10875, file: !1157, line: 228, column: 8)
!10880 = !DILocation(line: 228, column: 42, scope: !10879)
!10881 = !DILocation(line: 228, column: 8, scope: !10875)
!10882 = !DILocation(line: 229, column: 5, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10884, file: !1157, line: 229, column: 5)
!10884 = distinct !DILexicalBlock(scope: !10885, file: !1157, line: 229, column: 5)
!10885 = distinct !DILexicalBlock(scope: !10886, file: !1157, line: 229, column: 5)
!10886 = distinct !DILexicalBlock(scope: !10887, file: !1157, line: 229, column: 5)
!10887 = distinct !DILexicalBlock(scope: !10879, file: !1157, line: 228, column: 50)
!10888 = !DILocation(line: 231, column: 5, scope: !10887)
!10889 = !DILocation(line: 233, column: 13, scope: !10875)
!10890 = !DILocation(line: 233, column: 29, scope: !10875)
!10891 = !DILocation(line: 234, column: 4, scope: !10875)
!10892 = !DILocation(line: 236, column: 13, scope: !10875)
!10893 = !DILocation(line: 236, column: 29, scope: !10875)
!10894 = !DILocation(line: 237, column: 4, scope: !10875)
!10895 = !DILocation(line: 239, column: 4, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !10897, file: !1157, line: 239, column: 4)
!10897 = distinct !DILexicalBlock(scope: !10898, file: !1157, line: 239, column: 4)
!10898 = distinct !DILexicalBlock(scope: !10899, file: !1157, line: 239, column: 4)
!10899 = distinct !DILexicalBlock(scope: !10875, file: !1157, line: 239, column: 4)
!10900 = !DILocation(line: 240, column: 4, scope: !10875)
!10901 = !DILocation(line: 243, column: 3, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10870, file: !1157, line: 242, column: 9)
!10903 = !DILocation(line: 245, column: 13, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10902, file: !1157, line: 243, column: 17)
!10905 = !DILocation(line: 245, column: 29, scope: !10904)
!10906 = !DILocation(line: 246, column: 4, scope: !10904)
!10907 = !DILocation(line: 249, column: 34, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10904, file: !1157, line: 249, column: 8)
!10909 = !DILocation(line: 249, column: 42, scope: !10908)
!10910 = !DILocation(line: 249, column: 8, scope: !10904)
!10911 = !DILocation(line: 250, column: 5, scope: !10912)
!10912 = distinct !DILexicalBlock(scope: !10913, file: !1157, line: 250, column: 5)
!10913 = distinct !DILexicalBlock(scope: !10914, file: !1157, line: 250, column: 5)
!10914 = distinct !DILexicalBlock(scope: !10915, file: !1157, line: 250, column: 5)
!10915 = distinct !DILexicalBlock(scope: !10916, file: !1157, line: 250, column: 5)
!10916 = distinct !DILexicalBlock(scope: !10908, file: !1157, line: 249, column: 50)
!10917 = !DILocation(line: 252, column: 5, scope: !10916)
!10918 = !DILocation(line: 254, column: 13, scope: !10904)
!10919 = !DILocation(line: 254, column: 29, scope: !10904)
!10920 = !DILocation(line: 255, column: 4, scope: !10904)
!10921 = !DILocation(line: 257, column: 13, scope: !10904)
!10922 = !DILocation(line: 257, column: 29, scope: !10904)
!10923 = !DILocation(line: 258, column: 4, scope: !10904)
!10924 = !DILocation(line: 260, column: 4, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10926, file: !1157, line: 260, column: 4)
!10926 = distinct !DILexicalBlock(scope: !10927, file: !1157, line: 260, column: 4)
!10927 = distinct !DILexicalBlock(scope: !10928, file: !1157, line: 260, column: 4)
!10928 = distinct !DILexicalBlock(scope: !10904, file: !1157, line: 260, column: 4)
!10929 = !DILocation(line: 261, column: 4, scope: !10904)
!10930 = !DILocation(line: 266, column: 11, scope: !10826)
!10931 = !DILocation(line: 266, column: 23, scope: !10826)
!10932 = !DILocation(line: 268, column: 8, scope: !10826)
!10933 = !DILocation(line: 269, column: 10, scope: !10934)
!10934 = distinct !DILexicalBlock(scope: !10826, file: !1157, line: 269, column: 6)
!10935 = !DILocation(line: 269, column: 6, scope: !10826)
!10936 = !DILocation(line: 270, column: 3, scope: !10937)
!10937 = distinct !DILexicalBlock(scope: !10938, file: !1157, line: 270, column: 3)
!10938 = distinct !DILexicalBlock(scope: !10939, file: !1157, line: 270, column: 3)
!10939 = distinct !DILexicalBlock(scope: !10940, file: !1157, line: 270, column: 3)
!10940 = distinct !DILexicalBlock(scope: !10941, file: !1157, line: 270, column: 3)
!10941 = distinct !DILexicalBlock(scope: !10934, file: !1157, line: 269, column: 33)
!10942 = !DILocation(line: 271, column: 3, scope: !10941)
!10943 = !DILocation(line: 274, column: 10, scope: !10826)
!10944 = !DILocation(line: 276, column: 39, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !10826, file: !1157, line: 276, column: 6)
!10946 = !DILocation(line: 276, column: 61, scope: !10945)
!10947 = !DILocation(line: 276, column: 6, scope: !10945)
!10948 = !DILocation(line: 277, column: 5, scope: !10945)
!10949 = !DILocation(line: 276, column: 6, scope: !10826)
!10950 = !DILocation(line: 278, column: 3, scope: !10951)
!10951 = distinct !DILexicalBlock(scope: !10952, file: !1157, line: 278, column: 3)
!10952 = distinct !DILexicalBlock(scope: !10953, file: !1157, line: 278, column: 3)
!10953 = distinct !DILexicalBlock(scope: !10954, file: !1157, line: 278, column: 3)
!10954 = distinct !DILexicalBlock(scope: !10955, file: !1157, line: 278, column: 3)
!10955 = distinct !DILexicalBlock(scope: !10945, file: !1157, line: 277, column: 24)
!10956 = !DILocation(line: 279, column: 24, scope: !10955)
!10957 = !DILocation(line: 279, column: 31, scope: !10955)
!10958 = !DILocation(line: 281, column: 3, scope: !10955)
!10959 = !DILocation(line: 284, column: 7, scope: !10826)
!10960 = !DILocation(line: 284, column: 23, scope: !10826)
!10961 = !DILocation(line: 286, column: 2, scope: !10826)
!10962 = !DILocation(line: 287, column: 1, scope: !10826)
!10963 = distinct !DISubprogram(name: "tc_session_free", scope: !1157, file: !1157, line: 294, type: !1270, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10964)
!10964 = !{!10965, !10966, !10967}
!10965 = !DILocalVariable(name: "dev", arg: 1, scope: !10963, file: !1157, line: 294, type: !1183)
!10966 = !DILocalVariable(name: "sessn", arg: 2, scope: !10963, file: !1157, line: 294, type: !1196)
!10967 = !DILocalVariable(name: "data", scope: !10963, file: !1157, line: 296, type: !10834)
!10968 = !DILocation(line: 0, scope: !10963)
!10969 = !DILocation(line: 296, column: 43, scope: !10963)
!10970 = !DILocation(line: 299, column: 8, scope: !10963)
!10971 = !DILocation(line: 300, column: 8, scope: !10963)
!10972 = !DILocation(line: 300, column: 15, scope: !10963)
!10973 = !DILocation(line: 302, column: 2, scope: !10963)
!10974 = distinct !DISubprogram(name: "do_cbc_encrypt", scope: !1157, file: !1157, line: 28, type: !1223, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10975)
!10975 = !{!10976, !10977, !10978, !10979}
!10976 = !DILocalVariable(name: "ctx", arg: 1, scope: !10974, file: !1157, line: 28, type: !1196)
!10977 = !DILocalVariable(name: "op", arg: 2, scope: !10974, file: !1157, line: 28, type: !1211)
!10978 = !DILocalVariable(name: "iv", arg: 3, scope: !10974, file: !1157, line: 29, type: !184)
!10979 = !DILocalVariable(name: "data", scope: !10974, file: !1157, line: 31, type: !10834)
!10980 = !DILocation(line: 0, scope: !10974)
!10981 = !DILocation(line: 31, column: 41, scope: !10974)
!10982 = !DILocation(line: 33, column: 30, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10974, file: !1157, line: 33, column: 6)
!10984 = !DILocation(line: 34, column: 9, scope: !10983)
!10985 = !DILocation(line: 35, column: 9, scope: !10983)
!10986 = !DILocation(line: 35, column: 21, scope: !10983)
!10987 = !DILocation(line: 37, column: 12, scope: !10983)
!10988 = !DILocation(line: 33, column: 6, scope: !10983)
!10989 = !DILocation(line: 37, column: 25, scope: !10983)
!10990 = !DILocation(line: 33, column: 6, scope: !10974)
!10991 = !DILocation(line: 38, column: 3, scope: !10992)
!10992 = distinct !DILexicalBlock(scope: !10993, file: !1157, line: 38, column: 3)
!10993 = distinct !DILexicalBlock(scope: !10994, file: !1157, line: 38, column: 3)
!10994 = distinct !DILexicalBlock(scope: !10995, file: !1157, line: 38, column: 3)
!10995 = distinct !DILexicalBlock(scope: !10996, file: !1157, line: 38, column: 3)
!10996 = distinct !DILexicalBlock(scope: !10983, file: !1157, line: 37, column: 44)
!10997 = !DILocation(line: 39, column: 3, scope: !10996)
!10998 = !DILocation(line: 43, column: 20, scope: !10974)
!10999 = !DILocation(line: 43, column: 6, scope: !10974)
!11000 = !DILocation(line: 43, column: 14, scope: !10974)
!11001 = !DILocation(line: 45, column: 2, scope: !10974)
!11002 = !DILocation(line: 46, column: 1, scope: !10974)
!11003 = distinct !DISubprogram(name: "do_ctr_op", scope: !1157, file: !1157, line: 76, type: !1223, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !11004)
!11004 = !{!11005, !11006, !11007, !11008, !11009, !11010}
!11005 = !DILocalVariable(name: "ctx", arg: 1, scope: !11003, file: !1157, line: 76, type: !1196)
!11006 = !DILocalVariable(name: "op", arg: 2, scope: !11003, file: !1157, line: 76, type: !1211)
!11007 = !DILocalVariable(name: "iv", arg: 3, scope: !11003, file: !1157, line: 77, type: !184)
!11008 = !DILocalVariable(name: "data", scope: !11003, file: !1157, line: 79, type: !10834)
!11009 = !DILocalVariable(name: "ctr", scope: !11003, file: !1157, line: 80, type: !311)
!11010 = !DILocalVariable(name: "ivlen", scope: !11003, file: !1157, line: 81, type: !125)
!11011 = !DILocation(line: 0, scope: !11003)
!11012 = !DILocation(line: 79, column: 41, scope: !11003)
!11013 = !DILocation(line: 80, column: 2, scope: !11003)
!11014 = !DILocation(line: 80, column: 10, scope: !11003)
!11015 = !DILocation(line: 81, column: 19, scope: !11003)
!11016 = !DILocation(line: 81, column: 14, scope: !11003)
!11017 = !DILocation(line: 81, column: 55, scope: !11003)
!11018 = !DILocation(line: 81, column: 63, scope: !11003)
!11019 = !DILocation(line: 81, column: 26, scope: !11003)
!11020 = !DILocation(line: 86, column: 2, scope: !11003)
!11021 = !DILocation(line: 88, column: 22, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11003, file: !1157, line: 88, column: 6)
!11023 = !DILocation(line: 88, column: 35, scope: !11022)
!11024 = !DILocation(line: 88, column: 52, scope: !11022)
!11025 = !DILocation(line: 89, column: 8, scope: !11022)
!11026 = !DILocation(line: 90, column: 11, scope: !11022)
!11027 = !DILocation(line: 88, column: 6, scope: !11022)
!11028 = !DILocation(line: 90, column: 24, scope: !11022)
!11029 = !DILocation(line: 88, column: 6, scope: !11003)
!11030 = !DILocation(line: 91, column: 3, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !11032, file: !1157, line: 91, column: 3)
!11032 = distinct !DILexicalBlock(scope: !11033, file: !1157, line: 91, column: 3)
!11033 = distinct !DILexicalBlock(scope: !11034, file: !1157, line: 91, column: 3)
!11034 = distinct !DILexicalBlock(scope: !11035, file: !1157, line: 91, column: 3)
!11035 = distinct !DILexicalBlock(scope: !11022, file: !1157, line: 90, column: 43)
!11036 = !DILocation(line: 92, column: 3, scope: !11035)
!11037 = !DILocation(line: 96, column: 20, scope: !11003)
!11038 = !DILocation(line: 96, column: 6, scope: !11003)
!11039 = !DILocation(line: 96, column: 14, scope: !11003)
!11040 = !DILocation(line: 98, column: 2, scope: !11003)
!11041 = !DILocation(line: 99, column: 1, scope: !11003)
!11042 = distinct !DISubprogram(name: "do_ccm_encrypt_mac", scope: !1157, file: !1157, line: 101, type: !1230, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !11043)
!11043 = !{!11044, !11045, !11046, !11047, !11055, !11056, !11058}
!11044 = !DILocalVariable(name: "ctx", arg: 1, scope: !11042, file: !1157, line: 101, type: !1196)
!11045 = !DILocalVariable(name: "aead_op", arg: 2, scope: !11042, file: !1157, line: 102, type: !1232)
!11046 = !DILocalVariable(name: "nonce", arg: 3, scope: !11042, file: !1157, line: 102, type: !184)
!11047 = !DILocalVariable(name: "ccm", scope: !11042, file: !1157, line: 104, type: !11048)
!11048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_ccm_mode_struct", file: !2726, line: 91, size: 96, elements: !11049)
!11049 = !{!11050, !11053, !11054}
!11050 = !DIDerivedType(tag: DW_TAG_member, name: "sched", scope: !11048, file: !2726, line: 92, baseType: !11051, size: 32)
!11051 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !11052)
!11052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 32)
!11053 = !DIDerivedType(tag: DW_TAG_member, name: "nonce", scope: !11048, file: !2726, line: 93, baseType: !184, size: 32, offset: 32)
!11054 = !DIDerivedType(tag: DW_TAG_member, name: "mlen", scope: !11048, file: !2726, line: 94, baseType: !32, size: 32, offset: 64)
!11055 = !DILocalVariable(name: "data", scope: !11042, file: !1157, line: 105, type: !10834)
!11056 = !DILocalVariable(name: "ccm_param", scope: !11042, file: !1157, line: 106, type: !11057)
!11057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!11058 = !DILocalVariable(name: "op", scope: !11042, file: !1157, line: 107, type: !1211)
!11059 = !DILocation(line: 0, scope: !11042)
!11060 = !DILocation(line: 104, column: 2, scope: !11042)
!11061 = !DILocation(line: 104, column: 28, scope: !11042)
!11062 = !DILocation(line: 105, column: 41, scope: !11042)
!11063 = !DILocation(line: 106, column: 39, scope: !11042)
!11064 = !DILocation(line: 106, column: 51, scope: !11042)
!11065 = !DILocation(line: 107, column: 35, scope: !11042)
!11066 = !DILocation(line: 109, column: 33, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11042, file: !1157, line: 109, column: 6)
!11068 = !DILocation(line: 110, column: 15, scope: !11067)
!11069 = !DILocation(line: 110, column: 4, scope: !11067)
!11070 = !DILocation(line: 111, column: 15, scope: !11067)
!11071 = !DILocation(line: 111, column: 4, scope: !11067)
!11072 = !DILocation(line: 109, column: 6, scope: !11067)
!11073 = !DILocation(line: 111, column: 24, scope: !11067)
!11074 = !DILocation(line: 109, column: 6, scope: !11042)
!11075 = !DILocation(line: 112, column: 3, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11077, file: !1157, line: 112, column: 3)
!11077 = distinct !DILexicalBlock(scope: !11078, file: !1157, line: 112, column: 3)
!11078 = distinct !DILexicalBlock(scope: !11079, file: !1157, line: 112, column: 3)
!11079 = distinct !DILexicalBlock(scope: !11080, file: !1157, line: 112, column: 3)
!11080 = distinct !DILexicalBlock(scope: !11067, file: !1157, line: 111, column: 43)
!11081 = !DILocation(line: 113, column: 3, scope: !11080)
!11082 = !DILocation(line: 116, column: 39, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11042, file: !1157, line: 116, column: 6)
!11084 = !DILocation(line: 116, column: 52, scope: !11083)
!11085 = !DILocation(line: 117, column: 16, scope: !11083)
!11086 = !DILocation(line: 117, column: 29, scope: !11083)
!11087 = !DILocation(line: 117, column: 41, scope: !11083)
!11088 = !DILocation(line: 118, column: 11, scope: !11083)
!11089 = !DILocation(line: 116, column: 6, scope: !11083)
!11090 = !DILocation(line: 118, column: 25, scope: !11083)
!11091 = !DILocation(line: 116, column: 6, scope: !11042)
!11092 = !DILocation(line: 119, column: 3, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11094, file: !1157, line: 119, column: 3)
!11094 = distinct !DILexicalBlock(scope: !11095, file: !1157, line: 119, column: 3)
!11095 = distinct !DILexicalBlock(scope: !11096, file: !1157, line: 119, column: 3)
!11096 = distinct !DILexicalBlock(scope: !11097, file: !1157, line: 119, column: 3)
!11097 = distinct !DILexicalBlock(scope: !11083, file: !1157, line: 118, column: 44)
!11098 = !DILocation(line: 120, column: 3, scope: !11097)
!11099 = !DILocation(line: 128, column: 15, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11042, file: !1157, line: 128, column: 6)
!11101 = !DILocation(line: 128, column: 6, scope: !11100)
!11102 = !DILocation(line: 128, column: 6, scope: !11042)
!11103 = !DILocation(line: 129, column: 28, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11100, file: !1157, line: 128, column: 20)
!11105 = !DILocation(line: 129, column: 42, scope: !11104)
!11106 = !DILocation(line: 129, column: 36, scope: !11104)
!11107 = !DILocation(line: 129, column: 54, scope: !11104)
!11108 = !DILocation(line: 129, column: 3, scope: !11104)
!11109 = !DILocation(line: 130, column: 2, scope: !11104)
!11110 = !DILocation(line: 136, column: 20, scope: !11042)
!11111 = !DILocation(line: 136, column: 33, scope: !11042)
!11112 = !DILocation(line: 136, column: 27, scope: !11042)
!11113 = !DILocation(line: 136, column: 6, scope: !11042)
!11114 = !DILocation(line: 136, column: 14, scope: !11042)
!11115 = !DILocation(line: 138, column: 2, scope: !11042)
!11116 = !DILocation(line: 139, column: 1, scope: !11042)
!11117 = distinct !DISubprogram(name: "do_cbc_decrypt", scope: !1157, file: !1157, line: 48, type: !1223, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !11118)
!11118 = !{!11119, !11120, !11121, !11122}
!11119 = !DILocalVariable(name: "ctx", arg: 1, scope: !11117, file: !1157, line: 48, type: !1196)
!11120 = !DILocalVariable(name: "op", arg: 2, scope: !11117, file: !1157, line: 48, type: !1211)
!11121 = !DILocalVariable(name: "iv", arg: 3, scope: !11117, file: !1157, line: 49, type: !184)
!11122 = !DILocalVariable(name: "data", scope: !11117, file: !1157, line: 51, type: !10834)
!11123 = !DILocation(line: 0, scope: !11117)
!11124 = !DILocation(line: 56, column: 16, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11117, file: !1157, line: 56, column: 6)
!11126 = !DILocation(line: 56, column: 9, scope: !11125)
!11127 = !DILocation(line: 56, column: 6, scope: !11117)
!11128 = !DILocation(line: 57, column: 3, scope: !11129)
!11129 = distinct !DILexicalBlock(scope: !11130, file: !1157, line: 57, column: 3)
!11130 = distinct !DILexicalBlock(scope: !11131, file: !1157, line: 57, column: 3)
!11131 = distinct !DILexicalBlock(scope: !11132, file: !1157, line: 57, column: 3)
!11132 = distinct !DILexicalBlock(scope: !11133, file: !1157, line: 57, column: 3)
!11133 = distinct !DILexicalBlock(scope: !11125, file: !1157, line: 56, column: 24)
!11134 = !DILocation(line: 58, column: 3, scope: !11133)
!11135 = !DILocation(line: 51, column: 41, scope: !11117)
!11136 = !DILocation(line: 61, column: 30, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11117, file: !1157, line: 61, column: 6)
!11138 = !DILocation(line: 62, column: 8, scope: !11137)
!11139 = !DILocation(line: 63, column: 15, scope: !11137)
!11140 = !DILocation(line: 64, column: 8, scope: !11137)
!11141 = !DILocation(line: 64, column: 15, scope: !11137)
!11142 = !DILocation(line: 65, column: 23, scope: !11137)
!11143 = !DILocation(line: 61, column: 6, scope: !11137)
!11144 = !DILocation(line: 65, column: 36, scope: !11137)
!11145 = !DILocation(line: 61, column: 6, scope: !11117)
!11146 = !DILocation(line: 66, column: 3, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !11148, file: !1157, line: 66, column: 3)
!11148 = distinct !DILexicalBlock(scope: !11149, file: !1157, line: 66, column: 3)
!11149 = distinct !DILexicalBlock(scope: !11150, file: !1157, line: 66, column: 3)
!11150 = distinct !DILexicalBlock(scope: !11151, file: !1157, line: 66, column: 3)
!11151 = distinct !DILexicalBlock(scope: !11137, file: !1157, line: 65, column: 55)
!11152 = !DILocation(line: 67, column: 3, scope: !11151)
!11153 = !DILocation(line: 71, column: 20, scope: !11117)
!11154 = !DILocation(line: 71, column: 6, scope: !11117)
!11155 = !DILocation(line: 71, column: 14, scope: !11117)
!11156 = !DILocation(line: 73, column: 2, scope: !11117)
!11157 = !DILocation(line: 74, column: 1, scope: !11117)
!11158 = distinct !DISubprogram(name: "do_ccm_decrypt_auth", scope: !1157, file: !1157, line: 141, type: !1230, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !11159)
!11159 = !{!11160, !11161, !11162, !11163, !11164, !11165, !11166}
!11160 = !DILocalVariable(name: "ctx", arg: 1, scope: !11158, file: !1157, line: 141, type: !1196)
!11161 = !DILocalVariable(name: "aead_op", arg: 2, scope: !11158, file: !1157, line: 142, type: !1232)
!11162 = !DILocalVariable(name: "nonce", arg: 3, scope: !11158, file: !1157, line: 142, type: !184)
!11163 = !DILocalVariable(name: "ccm", scope: !11158, file: !1157, line: 144, type: !11048)
!11164 = !DILocalVariable(name: "data", scope: !11158, file: !1157, line: 145, type: !10834)
!11165 = !DILocalVariable(name: "ccm_param", scope: !11158, file: !1157, line: 146, type: !11057)
!11166 = !DILocalVariable(name: "op", scope: !11158, file: !1157, line: 147, type: !1211)
!11167 = !DILocation(line: 0, scope: !11158)
!11168 = !DILocation(line: 144, column: 2, scope: !11158)
!11169 = !DILocation(line: 144, column: 28, scope: !11158)
!11170 = !DILocation(line: 145, column: 41, scope: !11158)
!11171 = !DILocation(line: 146, column: 39, scope: !11158)
!11172 = !DILocation(line: 146, column: 51, scope: !11158)
!11173 = !DILocation(line: 147, column: 35, scope: !11158)
!11174 = !DILocation(line: 149, column: 33, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11158, file: !1157, line: 149, column: 6)
!11176 = !DILocation(line: 150, column: 17, scope: !11175)
!11177 = !DILocation(line: 150, column: 6, scope: !11175)
!11178 = !DILocation(line: 151, column: 17, scope: !11175)
!11179 = !DILocation(line: 151, column: 6, scope: !11175)
!11180 = !DILocation(line: 149, column: 6, scope: !11175)
!11181 = !DILocation(line: 151, column: 26, scope: !11175)
!11182 = !DILocation(line: 149, column: 6, scope: !11158)
!11183 = !DILocation(line: 152, column: 3, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11185, file: !1157, line: 152, column: 3)
!11185 = distinct !DILexicalBlock(scope: !11186, file: !1157, line: 152, column: 3)
!11186 = distinct !DILexicalBlock(scope: !11187, file: !1157, line: 152, column: 3)
!11187 = distinct !DILexicalBlock(scope: !11188, file: !1157, line: 152, column: 3)
!11188 = distinct !DILexicalBlock(scope: !11175, file: !1157, line: 151, column: 45)
!11189 = !DILocation(line: 153, column: 3, scope: !11188)
!11190 = !DILocation(line: 160, column: 15, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11158, file: !1157, line: 160, column: 6)
!11192 = !DILocation(line: 160, column: 26, scope: !11191)
!11193 = !DILocation(line: 160, column: 39, scope: !11191)
!11194 = !DILocation(line: 160, column: 33, scope: !11191)
!11195 = !DILocation(line: 160, column: 19, scope: !11191)
!11196 = !DILocation(line: 160, column: 6, scope: !11158)
!11197 = !DILocation(line: 161, column: 3, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11199, file: !1157, line: 161, column: 3)
!11199 = distinct !DILexicalBlock(scope: !11200, file: !1157, line: 161, column: 3)
!11200 = distinct !DILexicalBlock(scope: !11201, file: !1157, line: 161, column: 3)
!11201 = distinct !DILexicalBlock(scope: !11202, file: !1157, line: 161, column: 3)
!11202 = distinct !DILexicalBlock(scope: !11191, file: !1157, line: 160, column: 47)
!11203 = !DILocation(line: 162, column: 3, scope: !11202)
!11204 = !DILocation(line: 165, column: 41, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11158, file: !1157, line: 165, column: 6)
!11206 = !DILocation(line: 165, column: 54, scope: !11205)
!11207 = !DILocation(line: 166, column: 18, scope: !11205)
!11208 = !DILocation(line: 166, column: 31, scope: !11205)
!11209 = !DILocation(line: 168, column: 33, scope: !11205)
!11210 = !DILocation(line: 168, column: 22, scope: !11205)
!11211 = !DILocation(line: 168, column: 20, scope: !11205)
!11212 = !DILocation(line: 165, column: 6, scope: !11205)
!11213 = !DILocation(line: 169, column: 15, scope: !11205)
!11214 = !DILocation(line: 165, column: 6, scope: !11158)
!11215 = !DILocation(line: 170, column: 3, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11217, file: !1157, line: 170, column: 3)
!11217 = distinct !DILexicalBlock(scope: !11218, file: !1157, line: 170, column: 3)
!11218 = distinct !DILexicalBlock(scope: !11219, file: !1157, line: 170, column: 3)
!11219 = distinct !DILexicalBlock(scope: !11220, file: !1157, line: 170, column: 3)
!11220 = distinct !DILexicalBlock(scope: !11205, file: !1157, line: 169, column: 34)
!11221 = !DILocation(line: 171, column: 3, scope: !11220)
!11222 = !DILocation(line: 174, column: 20, scope: !11158)
!11223 = !DILocation(line: 174, column: 40, scope: !11158)
!11224 = !DILocation(line: 174, column: 29, scope: !11158)
!11225 = !DILocation(line: 174, column: 27, scope: !11158)
!11226 = !DILocation(line: 174, column: 6, scope: !11158)
!11227 = !DILocation(line: 174, column: 14, scope: !11158)
!11228 = !DILocation(line: 176, column: 2, scope: !11158)
!11229 = !DILocation(line: 177, column: 1, scope: !11158)
!11230 = distinct !DISubprogram(name: "get_unused_session", scope: !1157, file: !1157, line: 179, type: !9581, scopeLine: 180, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !11231)
!11231 = !{!11232}
!11232 = !DILocalVariable(name: "i", scope: !11230, file: !1157, line: 181, type: !125)
!11233 = !DILocation(line: 0, scope: !11230)
!11234 = !DILocation(line: 183, column: 2, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11230, file: !1157, line: 183, column: 2)
!11236 = !DILocation(line: 184, column: 26, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !11238, file: !1157, line: 184, column: 7)
!11238 = distinct !DILexicalBlock(scope: !11239, file: !1157, line: 183, column: 43)
!11239 = distinct !DILexicalBlock(scope: !11235, file: !1157, line: 183, column: 2)
!11240 = !DILocation(line: 184, column: 33, scope: !11237)
!11241 = !DILocation(line: 184, column: 7, scope: !11238)
!11242 = !DILocation(line: 185, column: 30, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11237, file: !1157, line: 184, column: 39)
!11244 = !DILocation(line: 186, column: 4, scope: !11243)
!11245 = distinct !{!11245, !11234, !11246}
!11246 = !DILocation(line: 188, column: 2, scope: !11235)
!11247 = !DILocation(line: 190, column: 2, scope: !11230)
!11248 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1502, file: !1502, line: 523, type: !1360, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11249)
!11249 = !{!11250, !11251, !11252, !11253, !11254}
!11250 = !DILocalVariable(name: "dev", arg: 1, scope: !11248, file: !1502, line: 523, type: !1362)
!11251 = !DILocalVariable(name: "pin", arg: 2, scope: !11248, file: !1502, line: 524, type: !1377)
!11252 = !DILocalVariable(name: "flags", arg: 3, scope: !11248, file: !1502, line: 524, type: !1378)
!11253 = !DILocalVariable(name: "err", scope: !11248, file: !1502, line: 526, type: !125)
!11254 = !DILocalVariable(name: "pincfg", scope: !11248, file: !1502, line: 527, type: !125)
!11255 = !DILocation(line: 0, scope: !11248)
!11256 = !DILocation(line: 527, column: 2, scope: !11248)
!11257 = !DILocation(line: 532, column: 8, scope: !11248)
!11258 = !DILocation(line: 533, column: 10, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11248, file: !1502, line: 533, column: 6)
!11260 = !DILocation(line: 533, column: 6, scope: !11248)
!11261 = !DILocation(line: 543, column: 13, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11248, file: !1502, line: 543, column: 6)
!11263 = !DILocation(line: 543, column: 28, scope: !11262)
!11264 = !DILocation(line: 543, column: 6, scope: !11248)
!11265 = !DILocation(line: 544, column: 14, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11267, file: !1502, line: 544, column: 7)
!11267 = distinct !DILexicalBlock(scope: !11262, file: !1502, line: 543, column: 34)
!11268 = !DILocation(line: 544, column: 39, scope: !11266)
!11269 = !DILocation(line: 544, column: 7, scope: !11267)
!11270 = !DILocation(line: 545, column: 38, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11266, file: !1502, line: 544, column: 45)
!11272 = !DILocation(line: 545, column: 4, scope: !11271)
!11273 = !DILocation(line: 546, column: 3, scope: !11271)
!11274 = !DILocation(line: 546, column: 21, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11266, file: !1502, line: 546, column: 14)
!11276 = !DILocation(line: 546, column: 45, scope: !11275)
!11277 = !DILocation(line: 546, column: 14, scope: !11266)
!11278 = !DILocation(line: 547, column: 40, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11275, file: !1502, line: 546, column: 51)
!11280 = !DILocation(line: 547, column: 4, scope: !11279)
!11281 = !DILocation(line: 548, column: 3, scope: !11279)
!11282 = !DILocation(line: 551, column: 32, scope: !11248)
!11283 = !DILocation(line: 551, column: 37, scope: !11248)
!11284 = !DILocation(line: 551, column: 2, scope: !11248)
!11285 = !DILocation(line: 554, column: 6, scope: !11248)
!11286 = !DILocation(line: 562, column: 1, scope: !11248)
!11287 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1502, file: !1502, line: 410, type: !11288, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11290)
!11288 = !DISubroutineType(types: !11289)
!11289 = !{!125, !1362, !1009}
!11290 = !{!11291, !11292, !11293, !11295}
!11291 = !DILocalVariable(name: "dev", arg: 1, scope: !11287, file: !1502, line: 410, type: !1362)
!11292 = !DILocalVariable(name: "value", arg: 2, scope: !11287, file: !1502, line: 410, type: !1009)
!11293 = !DILocalVariable(name: "cfg", scope: !11287, file: !1502, line: 412, type: !11294)
!11294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 32)
!11295 = !DILocalVariable(name: "gpio", scope: !11287, file: !1502, line: 413, type: !1435)
!11296 = !DILocation(line: 0, scope: !11287)
!11297 = !DILocation(line: 412, column: 45, scope: !11287)
!11298 = !DILocation(line: 413, column: 44, scope: !11287)
!11299 = !DILocation(line: 415, column: 11, scope: !11287)
!11300 = !DILocation(line: 415, column: 9, scope: !11287)
!11301 = !DILocation(line: 417, column: 2, scope: !11287)
!11302 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1502, file: !1502, line: 420, type: !1387, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11303)
!11303 = !{!11304, !11305, !11306, !11307, !11308, !11309}
!11304 = !DILocalVariable(name: "dev", arg: 1, scope: !11302, file: !1502, line: 420, type: !1362)
!11305 = !DILocalVariable(name: "mask", arg: 2, scope: !11302, file: !1502, line: 421, type: !1389)
!11306 = !DILocalVariable(name: "value", arg: 3, scope: !11302, file: !1502, line: 422, type: !1384)
!11307 = !DILocalVariable(name: "cfg", scope: !11302, file: !1502, line: 424, type: !11294)
!11308 = !DILocalVariable(name: "gpio", scope: !11302, file: !1502, line: 425, type: !1435)
!11309 = !DILocalVariable(name: "port_value", scope: !11302, file: !1502, line: 426, type: !208)
!11310 = !DILocation(line: 0, scope: !11302)
!11311 = !DILocation(line: 424, column: 45, scope: !11302)
!11312 = !DILocation(line: 425, column: 44, scope: !11302)
!11313 = !DILocation(line: 430, column: 15, scope: !11302)
!11314 = !DILocation(line: 431, column: 46, scope: !11302)
!11315 = !DILocation(line: 431, column: 44, scope: !11302)
!11316 = !DILocation(line: 431, column: 61, scope: !11302)
!11317 = !DILocation(line: 431, column: 53, scope: !11302)
!11318 = !DILocation(line: 431, column: 2, scope: !11302)
!11319 = !DILocation(line: 435, column: 2, scope: !11302)
!11320 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1502, file: !1502, line: 438, type: !1392, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11321)
!11321 = !{!11322, !11323, !11324, !11325}
!11322 = !DILocalVariable(name: "dev", arg: 1, scope: !11320, file: !1502, line: 438, type: !1362)
!11323 = !DILocalVariable(name: "pins", arg: 2, scope: !11320, file: !1502, line: 439, type: !1389)
!11324 = !DILocalVariable(name: "cfg", scope: !11320, file: !1502, line: 441, type: !11294)
!11325 = !DILocalVariable(name: "gpio", scope: !11320, file: !1502, line: 442, type: !1435)
!11326 = !DILocation(line: 0, scope: !11320)
!11327 = !DILocation(line: 441, column: 45, scope: !11320)
!11328 = !DILocation(line: 442, column: 44, scope: !11320)
!11329 = !DILocation(line: 448, column: 2, scope: !11320)
!11330 = !DILocation(line: 450, column: 2, scope: !11320)
!11331 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1502, file: !1502, line: 453, type: !1392, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11332)
!11332 = !{!11333, !11334, !11335, !11336}
!11333 = !DILocalVariable(name: "dev", arg: 1, scope: !11331, file: !1502, line: 453, type: !1362)
!11334 = !DILocalVariable(name: "pins", arg: 2, scope: !11331, file: !1502, line: 454, type: !1389)
!11335 = !DILocalVariable(name: "cfg", scope: !11331, file: !1502, line: 456, type: !11294)
!11336 = !DILocalVariable(name: "gpio", scope: !11331, file: !1502, line: 457, type: !1435)
!11337 = !DILocation(line: 0, scope: !11331)
!11338 = !DILocation(line: 456, column: 45, scope: !11331)
!11339 = !DILocation(line: 457, column: 44, scope: !11331)
!11340 = !DILocation(line: 467, column: 2, scope: !11331)
!11341 = !DILocation(line: 470, column: 2, scope: !11331)
!11342 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1502, file: !1502, line: 473, type: !1392, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11343)
!11343 = !{!11344, !11345, !11346, !11347}
!11344 = !DILocalVariable(name: "dev", arg: 1, scope: !11342, file: !1502, line: 473, type: !1362)
!11345 = !DILocalVariable(name: "pins", arg: 2, scope: !11342, file: !1502, line: 474, type: !1389)
!11346 = !DILocalVariable(name: "cfg", scope: !11342, file: !1502, line: 476, type: !11294)
!11347 = !DILocalVariable(name: "gpio", scope: !11342, file: !1502, line: 477, type: !1435)
!11348 = !DILocation(line: 0, scope: !11342)
!11349 = !DILocation(line: 476, column: 45, scope: !11342)
!11350 = !DILocation(line: 477, column: 44, scope: !11342)
!11351 = !DILocation(line: 484, column: 2, scope: !11342)
!11352 = !DILocation(line: 487, column: 2, scope: !11342)
!11353 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1502, file: !1502, line: 594, type: !1398, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11354)
!11354 = !{!11355, !11356, !11357, !11358, !11359, !11360, !11362, !11363, !11364}
!11355 = !DILocalVariable(name: "dev", arg: 1, scope: !11353, file: !1502, line: 594, type: !1362)
!11356 = !DILocalVariable(name: "pin", arg: 2, scope: !11353, file: !1502, line: 595, type: !1377)
!11357 = !DILocalVariable(name: "mode", arg: 3, scope: !11353, file: !1502, line: 596, type: !1336)
!11358 = !DILocalVariable(name: "trig", arg: 4, scope: !11353, file: !1502, line: 597, type: !1342)
!11359 = !DILocalVariable(name: "cfg", scope: !11353, file: !1502, line: 599, type: !11294)
!11360 = !DILocalVariable(name: "data", scope: !11353, file: !1502, line: 600, type: !11361)
!11361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 32)
!11362 = !DILocalVariable(name: "edge", scope: !11353, file: !1502, line: 601, type: !125)
!11363 = !DILocalVariable(name: "err", scope: !11353, file: !1502, line: 602, type: !125)
!11364 = !DILabel(scope: !11353, name: "exit", file: !1502, line: 643)
!11365 = !DILocation(line: 0, scope: !11353)
!11366 = !DILocation(line: 599, column: 45, scope: !11353)
!11367 = !DILocation(line: 604, column: 6, scope: !11353)
!11368 = !DILocation(line: 605, column: 34, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11370, file: !1502, line: 605, column: 7)
!11370 = distinct !DILexicalBlock(scope: !11371, file: !1502, line: 604, column: 38)
!11371 = distinct !DILexicalBlock(scope: !11353, file: !1502, line: 604, column: 6)
!11372 = !DILocation(line: 605, column: 7, scope: !11369)
!11373 = !DILocation(line: 605, column: 47, scope: !11369)
!11374 = !DILocation(line: 605, column: 39, scope: !11369)
!11375 = !DILocation(line: 605, column: 7, scope: !11370)
!11376 = !DILocation(line: 606, column: 4, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11369, file: !1502, line: 605, column: 53)
!11378 = !DILocation(line: 607, column: 4, scope: !11377)
!11379 = !DILocation(line: 608, column: 4, scope: !11377)
!11380 = !DILocation(line: 609, column: 3, scope: !11377)
!11381 = !DILocation(line: 600, column: 38, scope: !11353)
!11382 = !DILocation(line: 620, column: 30, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !11353, file: !1502, line: 620, column: 6)
!11384 = !DILocation(line: 620, column: 6, scope: !11383)
!11385 = !DILocation(line: 620, column: 57, scope: !11383)
!11386 = !DILocation(line: 620, column: 6, scope: !11353)
!11387 = !DILocation(line: 625, column: 29, scope: !11353)
!11388 = !DILocation(line: 625, column: 2, scope: !11353)
!11389 = !DILocation(line: 627, column: 2, scope: !11353)
!11390 = !DILocation(line: 630, column: 3, scope: !11391)
!11391 = distinct !DILexicalBlock(scope: !11353, file: !1502, line: 627, column: 16)
!11392 = !DILocation(line: 633, column: 3, scope: !11391)
!11393 = !DILocation(line: 636, column: 3, scope: !11391)
!11394 = !DILocation(line: 639, column: 2, scope: !11353)
!11395 = !DILocation(line: 641, column: 2, scope: !11353)
!11396 = !DILocation(line: 643, column: 1, scope: !11353)
!11397 = !DILocation(line: 644, column: 2, scope: !11353)
!11398 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1502, file: !1502, line: 647, type: !1402, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11399)
!11399 = !{!11400, !11401, !11402, !11403}
!11400 = !DILocalVariable(name: "dev", arg: 1, scope: !11398, file: !1502, line: 647, type: !1362)
!11401 = !DILocalVariable(name: "callback", arg: 2, scope: !11398, file: !1502, line: 648, type: !1404)
!11402 = !DILocalVariable(name: "set", arg: 3, scope: !11398, file: !1502, line: 649, type: !153)
!11403 = !DILocalVariable(name: "data", scope: !11398, file: !1502, line: 651, type: !11361)
!11404 = !DILocation(line: 0, scope: !11398)
!11405 = !DILocation(line: 651, column: 38, scope: !11398)
!11406 = !DILocation(line: 653, column: 37, scope: !11398)
!11407 = !DILocation(line: 653, column: 9, scope: !11398)
!11408 = !DILocation(line: 653, column: 2, scope: !11398)
!11409 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !11410, file: !11410, line: 38, type: !11411, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11414)
!11410 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11411 = !DISubroutineType(types: !11412)
!11412 = !{!125, !11413, !1404, !153}
!11413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 32)
!11414 = !{!11415, !11416, !11417}
!11415 = !DILocalVariable(name: "callbacks", arg: 1, scope: !11409, file: !11410, line: 38, type: !11413)
!11416 = !DILocalVariable(name: "callback", arg: 2, scope: !11409, file: !11410, line: 39, type: !1404)
!11417 = !DILocalVariable(name: "set", arg: 3, scope: !11409, file: !11410, line: 40, type: !153)
!11418 = !DILocation(line: 0, scope: !11409)
!11419 = !DILocation(line: 45, column: 7, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11409, file: !11410, line: 45, column: 6)
!11421 = !DILocation(line: 45, column: 6, scope: !11409)
!11422 = !DILocation(line: 46, column: 56, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11424, file: !11410, line: 46, column: 7)
!11424 = distinct !DILexicalBlock(scope: !11420, file: !11410, line: 45, column: 38)
!11425 = !DILocation(line: 46, column: 8, scope: !11423)
!11426 = !DILocation(line: 46, column: 7, scope: !11424)
!11427 = !DILocation(line: 51, column: 13, scope: !11420)
!11428 = !DILocation(line: 56, column: 43, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11430, file: !11410, line: 55, column: 11)
!11430 = distinct !DILexicalBlock(scope: !11409, file: !11410, line: 55, column: 6)
!11431 = !DILocation(line: 56, column: 3, scope: !11429)
!11432 = !DILocation(line: 57, column: 2, scope: !11429)
!11433 = !DILocation(line: 60, column: 1, scope: !11409)
!11434 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1409, file: !1409, line: 261, type: !11435, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11437)
!11435 = !DISubroutineType(types: !11436)
!11436 = !{!153, !11413}
!11437 = !{!11438}
!11438 = !DILocalVariable(name: "list", arg: 1, scope: !11434, file: !1409, line: 261, type: !11413)
!11439 = !DILocation(line: 0, scope: !11434)
!11440 = !DILocation(line: 261, column: 1, scope: !11434)
!11441 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1409, file: !1409, line: 417, type: !11442, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11444)
!11442 = !DISubroutineType(types: !11443)
!11443 = !{!153, !11413, !1575}
!11444 = !{!11445, !11446, !11447, !11448}
!11445 = !DILocalVariable(name: "list", arg: 1, scope: !11441, file: !1409, line: 417, type: !11413)
!11446 = !DILocalVariable(name: "node", arg: 2, scope: !11441, file: !1409, line: 417, type: !1575)
!11447 = !DILocalVariable(name: "prev", scope: !11441, file: !1409, line: 417, type: !1575)
!11448 = !DILocalVariable(name: "test", scope: !11441, file: !1409, line: 417, type: !1575)
!11449 = !DILocation(line: 0, scope: !11441)
!11450 = !DILocation(line: 417, column: 1, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11441, file: !1409, line: 417, column: 1)
!11452 = !DILocation(line: 417, column: 1, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11451, file: !1409, line: 417, column: 1)
!11454 = !DILocation(line: 417, column: 1, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11456, file: !1409, line: 417, column: 1)
!11456 = distinct !DILexicalBlock(scope: !11453, file: !1409, line: 417, column: 1)
!11457 = !DILocation(line: 417, column: 1, scope: !11456)
!11458 = distinct !{!11458, !11450, !11450}
!11459 = !DILocation(line: 417, column: 1, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11455, file: !1409, line: 417, column: 1)
!11461 = !DILocation(line: 417, column: 1, scope: !11441)
!11462 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1409, file: !1409, line: 298, type: !11463, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11465)
!11463 = !DISubroutineType(types: !11464)
!11464 = !{null, !11413, !1575}
!11465 = !{!11466, !11467}
!11466 = !DILocalVariable(name: "list", arg: 1, scope: !11462, file: !1409, line: 298, type: !11413)
!11467 = !DILocalVariable(name: "node", arg: 2, scope: !11462, file: !1409, line: 298, type: !1575)
!11468 = !DILocation(line: 0, scope: !11462)
!11469 = !DILocation(line: 298, column: 1, scope: !11462)
!11470 = !DILocation(line: 298, column: 1, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11462, file: !1409, line: 298, column: 1)
!11472 = !DILocation(line: 298, column: 1, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !11471, file: !1409, line: 298, column: 1)
!11474 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1409, file: !1409, line: 231, type: !11475, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11477)
!11475 = !DISubroutineType(types: !11476)
!11476 = !{!1575, !11413}
!11477 = !{!11478}
!11478 = !DILocalVariable(name: "list", arg: 1, scope: !11474, file: !1409, line: 231, type: !11413)
!11479 = !DILocation(line: 0, scope: !11474)
!11480 = !DILocation(line: 233, column: 15, scope: !11474)
!11481 = !DILocation(line: 233, column: 2, scope: !11474)
!11482 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1409, file: !1409, line: 209, type: !11483, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11485)
!11483 = !DISubroutineType(types: !11484)
!11484 = !{null, !1575, !1575}
!11485 = !{!11486, !11487}
!11486 = !DILocalVariable(name: "parent", arg: 1, scope: !11482, file: !1409, line: 209, type: !1575)
!11487 = !DILocalVariable(name: "child", arg: 2, scope: !11482, file: !1409, line: 209, type: !1575)
!11488 = !DILocation(line: 0, scope: !11482)
!11489 = !DILocation(line: 211, column: 10, scope: !11482)
!11490 = !DILocation(line: 211, column: 15, scope: !11482)
!11491 = !DILocation(line: 212, column: 1, scope: !11482)
!11492 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1409, file: !1409, line: 214, type: !11463, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11493)
!11493 = !{!11494, !11495}
!11494 = !DILocalVariable(name: "list", arg: 1, scope: !11492, file: !1409, line: 214, type: !11413)
!11495 = !DILocalVariable(name: "node", arg: 2, scope: !11492, file: !1409, line: 214, type: !1575)
!11496 = !DILocation(line: 0, scope: !11492)
!11497 = !DILocation(line: 216, column: 8, scope: !11492)
!11498 = !DILocation(line: 216, column: 13, scope: !11492)
!11499 = !DILocation(line: 217, column: 1, scope: !11492)
!11500 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1409, file: !1409, line: 243, type: !11475, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11501)
!11501 = !{!11502}
!11502 = !DILocalVariable(name: "list", arg: 1, scope: !11500, file: !1409, line: 243, type: !11413)
!11503 = !DILocation(line: 0, scope: !11500)
!11504 = !DILocation(line: 245, column: 15, scope: !11500)
!11505 = !DILocation(line: 245, column: 2, scope: !11500)
!11506 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1409, file: !1409, line: 219, type: !11463, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11507)
!11507 = !{!11508, !11509}
!11508 = !DILocalVariable(name: "list", arg: 1, scope: !11506, file: !1409, line: 219, type: !11413)
!11509 = !DILocalVariable(name: "node", arg: 2, scope: !11506, file: !1409, line: 219, type: !1575)
!11510 = !DILocation(line: 0, scope: !11506)
!11511 = !DILocation(line: 221, column: 8, scope: !11506)
!11512 = !DILocation(line: 221, column: 13, scope: !11506)
!11513 = !DILocation(line: 222, column: 1, scope: !11506)
!11514 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1409, file: !1409, line: 401, type: !11515, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11517)
!11515 = !DISubroutineType(types: !11516)
!11516 = !{null, !11413, !1575, !1575}
!11517 = !{!11518, !11519, !11520}
!11518 = !DILocalVariable(name: "list", arg: 1, scope: !11514, file: !1409, line: 401, type: !11413)
!11519 = !DILocalVariable(name: "prev_node", arg: 2, scope: !11514, file: !1409, line: 401, type: !1575)
!11520 = !DILocalVariable(name: "node", arg: 3, scope: !11514, file: !1409, line: 401, type: !1575)
!11521 = !DILocation(line: 0, scope: !11514)
!11522 = !DILocation(line: 401, column: 1, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11514, file: !1409, line: 401, column: 1)
!11524 = !DILocation(line: 0, scope: !11523)
!11525 = !DILocation(line: 401, column: 1, scope: !11514)
!11526 = !DILocation(line: 401, column: 1, scope: !11527)
!11527 = distinct !DILexicalBlock(scope: !11523, file: !1409, line: 401, column: 1)
!11528 = !DILocation(line: 401, column: 1, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11527, file: !1409, line: 401, column: 1)
!11530 = !DILocation(line: 401, column: 1, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11529, file: !1409, line: 401, column: 1)
!11532 = !DILocation(line: 401, column: 1, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11523, file: !1409, line: 401, column: 1)
!11534 = !DILocation(line: 401, column: 1, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11533, file: !1409, line: 401, column: 1)
!11536 = !DILocation(line: 401, column: 1, scope: !11537)
!11537 = distinct !DILexicalBlock(scope: !11535, file: !1409, line: 401, column: 1)
!11538 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1409, file: !1409, line: 285, type: !11539, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11541)
!11539 = !DISubroutineType(types: !11540)
!11540 = !{!1575, !1575}
!11541 = !{!11542}
!11542 = !DILocalVariable(name: "node", arg: 1, scope: !11538, file: !1409, line: 285, type: !1575)
!11543 = !DILocation(line: 0, scope: !11538)
!11544 = !DILocation(line: 285, column: 1, scope: !11538)
!11545 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1409, file: !1409, line: 274, type: !11539, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11546)
!11546 = !{!11547}
!11547 = !DILocalVariable(name: "node", arg: 1, scope: !11545, file: !1409, line: 274, type: !1575)
!11548 = !DILocation(line: 0, scope: !11545)
!11549 = !DILocation(line: 274, column: 1, scope: !11545)
!11550 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1409, file: !1409, line: 204, type: !11539, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11551)
!11551 = !{!11552}
!11552 = !DILocalVariable(name: "node", arg: 1, scope: !11550, file: !1409, line: 204, type: !1575)
!11553 = !DILocation(line: 0, scope: !11550)
!11554 = !DILocation(line: 206, column: 15, scope: !11550)
!11555 = !DILocation(line: 206, column: 2, scope: !11550)
!11556 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1502, file: !1502, line: 342, type: !410, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11557)
!11557 = !{!11558, !11559, !11560}
!11558 = !DILocalVariable(name: "pin", arg: 1, scope: !11556, file: !1502, line: 342, type: !125)
!11559 = !DILocalVariable(name: "line", scope: !11556, file: !1502, line: 344, type: !208)
!11560 = !DILocalVariable(name: "port", scope: !11556, file: !1502, line: 345, type: !125)
!11561 = !DILocation(line: 0, scope: !11556)
!11562 = !DILocation(line: 344, column: 18, scope: !11556)
!11563 = !{i32 983040, i32 0}
!11564 = !DILocation(line: 356, column: 9, scope: !11556)
!11565 = !DILocation(line: 370, column: 2, scope: !11556)
!11566 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1502, file: !1502, line: 37, type: !873, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11567)
!11567 = !{!11568, !11569, !11570}
!11568 = !DILocalVariable(name: "line", arg: 1, scope: !11566, file: !1502, line: 37, type: !125)
!11569 = !DILocalVariable(name: "arg", arg: 2, scope: !11566, file: !1502, line: 37, type: !124)
!11570 = !DILocalVariable(name: "data", scope: !11566, file: !1502, line: 39, type: !11361)
!11571 = !DILocation(line: 0, scope: !11566)
!11572 = !DILocation(line: 41, column: 29, scope: !11566)
!11573 = !DILocation(line: 41, column: 39, scope: !11566)
!11574 = !DILocation(line: 41, column: 44, scope: !11566)
!11575 = !DILocation(line: 41, column: 2, scope: !11566)
!11576 = !DILocation(line: 42, column: 1, scope: !11566)
!11577 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1502, file: !1502, line: 376, type: !11578, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11580)
!11578 = !DISubroutineType(types: !11579)
!11579 = !{!125, !125, !125}
!11580 = !{!11581, !11582, !11583, !11585, !11586}
!11581 = !DILocalVariable(name: "port", arg: 1, scope: !11577, file: !1502, line: 376, type: !125)
!11582 = !DILocalVariable(name: "pin", arg: 2, scope: !11577, file: !1502, line: 376, type: !125)
!11583 = !DILocalVariable(name: "clk", scope: !11577, file: !1502, line: 386, type: !11584)
!11584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1362)
!11585 = !DILocalVariable(name: "pclken", scope: !11577, file: !1502, line: 387, type: !1618)
!11586 = !DILocalVariable(name: "ret", scope: !11577, file: !1502, line: 396, type: !125)
!11587 = !DILocation(line: 0, scope: !11577)
!11588 = !DILocation(line: 387, column: 2, scope: !11577)
!11589 = !DILocation(line: 387, column: 22, scope: !11577)
!11590 = !DILocation(line: 399, column: 8, scope: !11577)
!11591 = !DILocation(line: 400, column: 10, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11577, file: !1502, line: 400, column: 6)
!11593 = !DILocation(line: 400, column: 6, scope: !11577)
!11594 = !DILocation(line: 405, column: 2, scope: !11577)
!11595 = !DILocation(line: 407, column: 2, scope: !11577)
!11596 = !DILocation(line: 408, column: 1, scope: !11577)
!11597 = distinct !DISubprogram(name: "clock_control_on", scope: !958, file: !958, line: 123, type: !1467, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11598)
!11598 = !{!11599, !11600, !11601}
!11599 = !DILocalVariable(name: "dev", arg: 1, scope: !11597, file: !958, line: 123, type: !1362)
!11600 = !DILocalVariable(name: "sys", arg: 2, scope: !11597, file: !958, line: 124, type: !1051)
!11601 = !DILocalVariable(name: "api", scope: !11597, file: !958, line: 126, type: !1460)
!11602 = !DILocation(line: 0, scope: !11597)
!11603 = !DILocation(line: 127, column: 49, scope: !11597)
!11604 = !DILocation(line: 129, column: 14, scope: !11597)
!11605 = !DILocation(line: 129, column: 9, scope: !11597)
!11606 = !DILocation(line: 129, column: 2, scope: !11597)
!11607 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1502, file: !1502, line: 311, type: !10304, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11608)
!11608 = !{!11609, !11610, !11611}
!11609 = !DILocalVariable(name: "port", arg: 1, scope: !11607, file: !1502, line: 311, type: !125)
!11610 = !DILocalVariable(name: "pin", arg: 2, scope: !11607, file: !1502, line: 311, type: !125)
!11611 = !DILocalVariable(name: "line", scope: !11607, file: !1502, line: 313, type: !208)
!11612 = !DILocation(line: 0, scope: !11607)
!11613 = !DILocation(line: 313, column: 18, scope: !11607)
!11614 = !DILocation(line: 337, column: 2, scope: !11607)
!11615 = !DILocation(line: 340, column: 1, scope: !11607)
!11616 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1502, file: !1502, line: 295, type: !11617, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11619)
!11617 = !DISubroutineType(types: !11618)
!11618 = !{!208, !125}
!11619 = !{!11620}
!11620 = !DILocalVariable(name: "pin", arg: 1, scope: !11616, file: !1502, line: 295, type: !125)
!11621 = !DILocation(line: 0, scope: !11616)
!11622 = !DILocation(line: 307, column: 46, scope: !11616)
!11623 = !DILocation(line: 307, column: 27, scope: !11616)
!11624 = !DILocation(line: 307, column: 32, scope: !11616)
!11625 = !DILocation(line: 307, column: 14, scope: !11616)
!11626 = !DILocation(line: 307, column: 39, scope: !11616)
!11627 = !DILocation(line: 307, column: 2, scope: !11616)
!11628 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6827, file: !6827, line: 671, type: !11629, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11631)
!11629 = !DISubroutineType(types: !11630)
!11630 = !{null, !208, !208}
!11631 = !{!11632, !11633}
!11632 = !DILocalVariable(name: "Port", arg: 1, scope: !11628, file: !6827, line: 671, type: !208)
!11633 = !DILocalVariable(name: "Line", arg: 2, scope: !11628, file: !6827, line: 671, type: !208)
!11634 = !DILocation(line: 0, scope: !11628)
!11635 = !DILocation(line: 673, column: 3, scope: !11628)
!11636 = !DILocalVariable(name: "value", arg: 1, scope: !11637, file: !8273, line: 373, type: !208)
!11637 = distinct !DISubprogram(name: "__RBIT", scope: !8273, file: !8273, line: 373, type: !9519, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11638)
!11638 = !{!11636, !11639}
!11639 = !DILocalVariable(name: "result", scope: !11637, file: !8273, line: 375, type: !208)
!11640 = !DILocation(line: 0, scope: !11637, inlinedAt: !11641)
!11641 = distinct !DILocation(line: 673, column: 3, scope: !11628)
!11642 = !DILocation(line: 380, column: 4, scope: !11637, inlinedAt: !11641)
!11643 = !{i64 2833321}
!11644 = !DILocalVariable(name: "value", arg: 1, scope: !11645, file: !8273, line: 403, type: !208)
!11645 = distinct !DISubprogram(name: "__CLZ", scope: !8273, file: !8273, line: 403, type: !11646, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11648)
!11646 = !DISubroutineType(types: !11647)
!11647 = !{!150, !208}
!11648 = !{!11644}
!11649 = !DILocation(line: 0, scope: !11645, inlinedAt: !11650)
!11650 = distinct !DILocation(line: 673, column: 3, scope: !11628)
!11651 = !DILocation(line: 414, column: 7, scope: !11645, inlinedAt: !11650)
!11652 = !DILocation(line: 674, column: 1, scope: !11628)
!11653 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !11410, file: !11410, line: 69, type: !11654, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11656)
!11654 = !DISubroutineType(types: !11655)
!11655 = !{null, !11413, !1362, !208}
!11656 = !{!11657, !11658, !11659, !11660, !11661}
!11657 = !DILocalVariable(name: "list", arg: 1, scope: !11653, file: !11410, line: 69, type: !11413)
!11658 = !DILocalVariable(name: "port", arg: 2, scope: !11653, file: !11410, line: 70, type: !1362)
!11659 = !DILocalVariable(name: "pins", arg: 3, scope: !11653, file: !11410, line: 71, type: !208)
!11660 = !DILocalVariable(name: "cb", scope: !11653, file: !11410, line: 73, type: !1404)
!11661 = !DILocalVariable(name: "tmp", scope: !11653, file: !11410, line: 73, type: !1404)
!11662 = !DILocation(line: 0, scope: !11653)
!11663 = !DILocation(line: 75, column: 2, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11653, file: !11410, line: 75, column: 2)
!11665 = !DILocation(line: 0, scope: !11664)
!11666 = !DILocation(line: 76, column: 11, scope: !11667)
!11667 = distinct !DILexicalBlock(scope: !11668, file: !11410, line: 76, column: 7)
!11668 = distinct !DILexicalBlock(scope: !11669, file: !11410, line: 75, column: 57)
!11669 = distinct !DILexicalBlock(scope: !11664, file: !11410, line: 75, column: 2)
!11670 = !DILocation(line: 76, column: 20, scope: !11667)
!11671 = !DILocation(line: 76, column: 7, scope: !11668)
!11672 = !DILocation(line: 78, column: 8, scope: !11673)
!11673 = distinct !DILexicalBlock(scope: !11667, file: !11410, line: 76, column: 28)
!11674 = !DILocation(line: 78, column: 4, scope: !11673)
!11675 = !DILocation(line: 79, column: 3, scope: !11673)
!11676 = !DILocation(line: 75, column: 2, scope: !11669)
!11677 = !DILocation(line: 81, column: 1, scope: !11653)
!11678 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6827, file: !6827, line: 710, type: !9519, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11679)
!11679 = !{!11680}
!11680 = !DILocalVariable(name: "Line", arg: 1, scope: !11678, file: !6827, line: 710, type: !208)
!11681 = !DILocation(line: 0, scope: !11678)
!11682 = !DILocation(line: 712, column: 21, scope: !11678)
!11683 = !DILocation(line: 0, scope: !11637, inlinedAt: !11684)
!11684 = distinct !DILocation(line: 712, column: 76, scope: !11678)
!11685 = !DILocation(line: 380, column: 4, scope: !11637, inlinedAt: !11684)
!11686 = !DILocation(line: 0, scope: !11645, inlinedAt: !11687)
!11687 = distinct !DILocation(line: 712, column: 76, scope: !11678)
!11688 = !DILocation(line: 414, column: 7, scope: !11645, inlinedAt: !11687)
!11689 = !DILocation(line: 712, column: 73, scope: !11678)
!11690 = !DILocation(line: 712, column: 3, scope: !11678)
!11691 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !11692, file: !11692, line: 910, type: !11693, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11695)
!11692 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11693 = !DISubroutineType(types: !11694)
!11694 = !{null, !1435, !208}
!11695 = !{!11696, !11697}
!11696 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11691, file: !11692, line: 910, type: !1435)
!11697 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11691, file: !11692, line: 910, type: !208)
!11698 = !DILocation(line: 0, scope: !11691)
!11699 = !DILocation(line: 912, column: 3, scope: !11691)
!11700 = !DILocation(line: 913, column: 1, scope: !11691)
!11701 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !11692, file: !11692, line: 823, type: !11702, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11704)
!11702 = !DISubroutineType(types: !11703)
!11703 = !{!208, !1435}
!11704 = !{!11705}
!11705 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11701, file: !11692, line: 823, type: !1435)
!11706 = !DILocation(line: 0, scope: !11701)
!11707 = !DILocation(line: 825, column: 21, scope: !11701)
!11708 = !DILocation(line: 825, column: 3, scope: !11701)
!11709 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !11692, file: !11692, line: 812, type: !11693, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11710)
!11710 = !{!11711, !11712}
!11711 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11709, file: !11692, line: 812, type: !1435)
!11712 = !DILocalVariable(name: "PortValue", arg: 2, scope: !11709, file: !11692, line: 812, type: !208)
!11713 = !DILocation(line: 0, scope: !11709)
!11714 = !DILocation(line: 814, column: 3, scope: !11709)
!11715 = !DILocation(line: 815, column: 1, scope: !11709)
!11716 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !11692, file: !11692, line: 771, type: !11702, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11717)
!11717 = !{!11718}
!11718 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11716, file: !11692, line: 771, type: !1435)
!11719 = !DILocation(line: 0, scope: !11716)
!11720 = !DILocation(line: 773, column: 21, scope: !11716)
!11721 = !DILocation(line: 773, column: 3, scope: !11716)
!11722 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1502, file: !1502, line: 47, type: !11723, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11725)
!11723 = !DISubroutineType(types: !11724)
!11724 = !{!125, !1378, !387}
!11725 = !{!11726, !11727}
!11726 = !DILocalVariable(name: "flags", arg: 1, scope: !11722, file: !1502, line: 47, type: !1378)
!11727 = !DILocalVariable(name: "pincfg", arg: 2, scope: !11722, file: !1502, line: 47, type: !387)
!11728 = !DILocation(line: 0, scope: !11722)
!11729 = !DILocation(line: 50, column: 13, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11722, file: !1502, line: 50, column: 6)
!11731 = !DILocation(line: 50, column: 28, scope: !11730)
!11732 = !DILocation(line: 50, column: 6, scope: !11722)
!11733 = !DILocation(line: 53, column: 11, scope: !11734)
!11734 = distinct !DILexicalBlock(scope: !11730, file: !1502, line: 50, column: 34)
!11735 = !DILocation(line: 55, column: 14, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11734, file: !1502, line: 55, column: 7)
!11737 = !DILocation(line: 55, column: 35, scope: !11736)
!11738 = !DILocation(line: 55, column: 7, scope: !11734)
!11739 = !DILocation(line: 56, column: 14, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11741, file: !1502, line: 56, column: 8)
!11741 = distinct !DILexicalBlock(scope: !11736, file: !1502, line: 55, column: 41)
!11742 = !DILocation(line: 56, column: 8, scope: !11741)
!11743 = !DILocation(line: 0, scope: !11736)
!11744 = !DILocation(line: 66, column: 14, scope: !11745)
!11745 = distinct !DILexicalBlock(scope: !11734, file: !1502, line: 66, column: 7)
!11746 = !DILocation(line: 66, column: 30, scope: !11745)
!11747 = !DILocation(line: 66, column: 7, scope: !11734)
!11748 = !DILocation(line: 67, column: 12, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11745, file: !1502, line: 66, column: 36)
!11750 = !DILocation(line: 68, column: 3, scope: !11749)
!11751 = !DILocation(line: 68, column: 21, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11745, file: !1502, line: 68, column: 14)
!11753 = !DILocation(line: 68, column: 39, scope: !11752)
!11754 = !DILocation(line: 68, column: 14, scope: !11745)
!11755 = !DILocation(line: 69, column: 12, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11752, file: !1502, line: 68, column: 45)
!11757 = !DILocation(line: 70, column: 3, scope: !11756)
!11758 = !DILocation(line: 72, column: 21, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11730, file: !1502, line: 72, column: 14)
!11760 = !DILocation(line: 72, column: 35, scope: !11759)
!11761 = !DILocation(line: 72, column: 14, scope: !11730)
!11762 = !DILocation(line: 77, column: 14, scope: !11763)
!11763 = distinct !DILexicalBlock(scope: !11764, file: !1502, line: 77, column: 7)
!11764 = distinct !DILexicalBlock(scope: !11759, file: !1502, line: 72, column: 41)
!11765 = !DILocation(line: 77, column: 30, scope: !11763)
!11766 = !DILocation(line: 77, column: 7, scope: !11764)
!11767 = !DILocation(line: 0, scope: !11730)
!11768 = !DILocation(line: 90, column: 1, scope: !11722)
!11769 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1502, file: !1502, line: 157, type: !11770, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11772)
!11770 = !DISubroutineType(types: !11771)
!11771 = !{null, !1362, !125, !125, !125}
!11772 = !{!11773, !11774, !11775, !11776, !11777, !11778, !11779, !11780, !11781, !11782, !11783}
!11773 = !DILocalVariable(name: "dev", arg: 1, scope: !11769, file: !1502, line: 157, type: !1362)
!11774 = !DILocalVariable(name: "pin", arg: 2, scope: !11769, file: !1502, line: 157, type: !125)
!11775 = !DILocalVariable(name: "conf", arg: 3, scope: !11769, file: !1502, line: 158, type: !125)
!11776 = !DILocalVariable(name: "func", arg: 4, scope: !11769, file: !1502, line: 158, type: !125)
!11777 = !DILocalVariable(name: "cfg", scope: !11769, file: !1502, line: 160, type: !11294)
!11778 = !DILocalVariable(name: "gpio", scope: !11769, file: !1502, line: 161, type: !1435)
!11779 = !DILocalVariable(name: "pin_ll", scope: !11769, file: !1502, line: 163, type: !125)
!11780 = !DILocalVariable(name: "mode", scope: !11769, file: !1502, line: 227, type: !32)
!11781 = !DILocalVariable(name: "otype", scope: !11769, file: !1502, line: 227, type: !32)
!11782 = !DILocalVariable(name: "ospeed", scope: !11769, file: !1502, line: 227, type: !32)
!11783 = !DILocalVariable(name: "pupd", scope: !11769, file: !1502, line: 227, type: !32)
!11784 = !DILocation(line: 0, scope: !11769)
!11785 = !DILocation(line: 160, column: 45, scope: !11769)
!11786 = !DILocation(line: 161, column: 44, scope: !11769)
!11787 = !DILocation(line: 163, column: 15, scope: !11769)
!11788 = !DILocation(line: 229, column: 14, scope: !11769)
!11789 = !DILocation(line: 246, column: 47, scope: !11769)
!11790 = !DILocation(line: 246, column: 2, scope: !11769)
!11791 = !DILocation(line: 248, column: 43, scope: !11769)
!11792 = !DILocation(line: 248, column: 2, scope: !11769)
!11793 = !DILocation(line: 250, column: 40, scope: !11769)
!11794 = !DILocation(line: 250, column: 2, scope: !11769)
!11795 = !DILocation(line: 252, column: 11, scope: !11796)
!11796 = distinct !DILexicalBlock(scope: !11769, file: !1502, line: 252, column: 6)
!11797 = !DILocation(line: 252, column: 6, scope: !11769)
!11798 = !DILocation(line: 253, column: 11, scope: !11799)
!11799 = distinct !DILexicalBlock(scope: !11800, file: !1502, line: 253, column: 7)
!11800 = distinct !DILexicalBlock(scope: !11796, file: !1502, line: 252, column: 36)
!11801 = !DILocation(line: 253, column: 7, scope: !11800)
!11802 = !DILocation(line: 254, column: 4, scope: !11803)
!11803 = distinct !DILexicalBlock(scope: !11799, file: !1502, line: 253, column: 16)
!11804 = !DILocation(line: 255, column: 3, scope: !11803)
!11805 = !DILocation(line: 256, column: 4, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11799, file: !1502, line: 255, column: 10)
!11807 = !DILocation(line: 260, column: 40, scope: !11769)
!11808 = !DILocation(line: 260, column: 2, scope: !11769)
!11809 = !DILocation(line: 265, column: 1, scope: !11769)
!11810 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1502, file: !1502, line: 137, type: !11617, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11811)
!11811 = !{!11812, !11813}
!11812 = !DILocalVariable(name: "pin", arg: 1, scope: !11810, file: !1502, line: 137, type: !125)
!11813 = !DILocalVariable(name: "pinval", scope: !11810, file: !1502, line: 139, type: !208)
!11814 = !DILocation(line: 0, scope: !11810)
!11815 = !DILocation(line: 149, column: 13, scope: !11810)
!11816 = !DILocation(line: 151, column: 2, scope: !11810)
!11817 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !11692, file: !11692, line: 342, type: !11818, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11820)
!11818 = !DISubroutineType(types: !11819)
!11819 = !{null, !1435, !208, !208}
!11820 = !{!11821, !11822, !11823}
!11821 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11817, file: !11692, line: 342, type: !1435)
!11822 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11817, file: !11692, line: 342, type: !208)
!11823 = !DILocalVariable(name: "OutputType", arg: 3, scope: !11817, file: !11692, line: 342, type: !208)
!11824 = !DILocation(line: 0, scope: !11817)
!11825 = !DILocation(line: 344, column: 3, scope: !11817)
!11826 = !DILocation(line: 345, column: 1, scope: !11817)
!11827 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !11692, file: !11692, line: 413, type: !11818, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11828)
!11828 = !{!11829, !11830, !11831}
!11829 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11827, file: !11692, line: 413, type: !1435)
!11830 = !DILocalVariable(name: "Pin", arg: 2, scope: !11827, file: !11692, line: 413, type: !208)
!11831 = !DILocalVariable(name: "Speed", arg: 3, scope: !11827, file: !11692, line: 413, type: !208)
!11832 = !DILocation(line: 0, scope: !11827)
!11833 = !DILocation(line: 415, column: 3, scope: !11827)
!11834 = !DILocation(line: 0, scope: !11637, inlinedAt: !11835)
!11835 = distinct !DILocation(line: 415, column: 3, scope: !11827)
!11836 = !DILocation(line: 380, column: 4, scope: !11637, inlinedAt: !11835)
!11837 = !DILocation(line: 0, scope: !11645, inlinedAt: !11838)
!11838 = distinct !DILocation(line: 415, column: 3, scope: !11827)
!11839 = !DILocation(line: 414, column: 7, scope: !11645, inlinedAt: !11838)
!11840 = !DILocation(line: 0, scope: !11637, inlinedAt: !11841)
!11841 = distinct !DILocation(line: 415, column: 3, scope: !11827)
!11842 = !DILocation(line: 0, scope: !11645, inlinedAt: !11843)
!11843 = distinct !DILocation(line: 415, column: 3, scope: !11827)
!11844 = !DILocation(line: 417, column: 1, scope: !11827)
!11845 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !11692, file: !11692, line: 484, type: !11818, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11846)
!11846 = !{!11847, !11848, !11849}
!11847 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11845, file: !11692, line: 484, type: !1435)
!11848 = !DILocalVariable(name: "Pin", arg: 2, scope: !11845, file: !11692, line: 484, type: !208)
!11849 = !DILocalVariable(name: "Pull", arg: 3, scope: !11845, file: !11692, line: 484, type: !208)
!11850 = !DILocation(line: 0, scope: !11845)
!11851 = !DILocation(line: 486, column: 3, scope: !11845)
!11852 = !DILocation(line: 0, scope: !11637, inlinedAt: !11853)
!11853 = distinct !DILocation(line: 486, column: 3, scope: !11845)
!11854 = !DILocation(line: 380, column: 4, scope: !11637, inlinedAt: !11853)
!11855 = !DILocation(line: 0, scope: !11645, inlinedAt: !11856)
!11856 = distinct !DILocation(line: 486, column: 3, scope: !11845)
!11857 = !DILocation(line: 414, column: 7, scope: !11645, inlinedAt: !11856)
!11858 = !DILocation(line: 0, scope: !11637, inlinedAt: !11859)
!11859 = distinct !DILocation(line: 486, column: 3, scope: !11845)
!11860 = !DILocation(line: 0, scope: !11645, inlinedAt: !11861)
!11861 = distinct !DILocation(line: 486, column: 3, scope: !11845)
!11862 = !DILocation(line: 487, column: 1, scope: !11845)
!11863 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !11692, file: !11692, line: 556, type: !11818, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11864)
!11864 = !{!11865, !11866, !11867}
!11865 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11863, file: !11692, line: 556, type: !1435)
!11866 = !DILocalVariable(name: "Pin", arg: 2, scope: !11863, file: !11692, line: 556, type: !208)
!11867 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11863, file: !11692, line: 556, type: !208)
!11868 = !DILocation(line: 0, scope: !11863)
!11869 = !DILocation(line: 558, column: 3, scope: !11863)
!11870 = !DILocation(line: 0, scope: !11637, inlinedAt: !11871)
!11871 = distinct !DILocation(line: 558, column: 3, scope: !11863)
!11872 = !DILocation(line: 380, column: 4, scope: !11637, inlinedAt: !11871)
!11873 = !DILocation(line: 0, scope: !11645, inlinedAt: !11874)
!11874 = distinct !DILocation(line: 558, column: 3, scope: !11863)
!11875 = !DILocation(line: 414, column: 7, scope: !11645, inlinedAt: !11874)
!11876 = !DILocation(line: 0, scope: !11637, inlinedAt: !11877)
!11877 = distinct !DILocation(line: 558, column: 3, scope: !11863)
!11878 = !DILocation(line: 0, scope: !11645, inlinedAt: !11879)
!11879 = distinct !DILocation(line: 558, column: 3, scope: !11863)
!11880 = !DILocation(line: 560, column: 1, scope: !11863)
!11881 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !11692, file: !11692, line: 633, type: !11818, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11882)
!11882 = !{!11883, !11884, !11885}
!11883 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11881, file: !11692, line: 633, type: !1435)
!11884 = !DILocalVariable(name: "Pin", arg: 2, scope: !11881, file: !11692, line: 633, type: !208)
!11885 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11881, file: !11692, line: 633, type: !208)
!11886 = !DILocation(line: 0, scope: !11881)
!11887 = !DILocation(line: 635, column: 3, scope: !11881)
!11888 = !DILocation(line: 0, scope: !11637, inlinedAt: !11889)
!11889 = distinct !DILocation(line: 635, column: 3, scope: !11881)
!11890 = !DILocation(line: 380, column: 4, scope: !11637, inlinedAt: !11889)
!11891 = !DILocation(line: 0, scope: !11645, inlinedAt: !11892)
!11892 = distinct !DILocation(line: 635, column: 3, scope: !11881)
!11893 = !DILocation(line: 414, column: 7, scope: !11645, inlinedAt: !11892)
!11894 = !DILocation(line: 0, scope: !11637, inlinedAt: !11895)
!11895 = distinct !DILocation(line: 635, column: 3, scope: !11881)
!11896 = !DILocation(line: 0, scope: !11645, inlinedAt: !11897)
!11897 = distinct !DILocation(line: 635, column: 3, scope: !11881)
!11898 = !DILocation(line: 637, column: 1, scope: !11881)
!11899 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !11692, file: !11692, line: 273, type: !11818, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11900)
!11900 = !{!11901, !11902, !11903}
!11901 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11899, file: !11692, line: 273, type: !1435)
!11902 = !DILocalVariable(name: "Pin", arg: 2, scope: !11899, file: !11692, line: 273, type: !208)
!11903 = !DILocalVariable(name: "Mode", arg: 3, scope: !11899, file: !11692, line: 273, type: !208)
!11904 = !DILocation(line: 0, scope: !11899)
!11905 = !DILocation(line: 275, column: 3, scope: !11899)
!11906 = !DILocation(line: 0, scope: !11637, inlinedAt: !11907)
!11907 = distinct !DILocation(line: 275, column: 3, scope: !11899)
!11908 = !DILocation(line: 380, column: 4, scope: !11637, inlinedAt: !11907)
!11909 = !DILocation(line: 0, scope: !11645, inlinedAt: !11910)
!11910 = distinct !DILocation(line: 275, column: 3, scope: !11899)
!11911 = !DILocation(line: 414, column: 7, scope: !11645, inlinedAt: !11910)
!11912 = !DILocation(line: 0, scope: !11637, inlinedAt: !11913)
!11913 = distinct !DILocation(line: 275, column: 3, scope: !11899)
!11914 = !DILocation(line: 0, scope: !11645, inlinedAt: !11915)
!11915 = distinct !DILocation(line: 275, column: 3, scope: !11899)
!11916 = !DILocation(line: 276, column: 1, scope: !11899)
!11917 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1502, file: !1502, line: 698, type: !1515, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11918)
!11918 = !{!11919, !11920, !11921}
!11919 = !DILocalVariable(name: "dev", arg: 1, scope: !11917, file: !1502, line: 698, type: !1362)
!11920 = !DILocalVariable(name: "data", scope: !11917, file: !1502, line: 700, type: !11361)
!11921 = !DILocalVariable(name: "ret", scope: !11917, file: !1502, line: 701, type: !125)
!11922 = !DILocation(line: 0, scope: !11917)
!11923 = !DILocation(line: 700, column: 38, scope: !11917)
!11924 = !DILocation(line: 703, column: 8, scope: !11917)
!11925 = !DILocation(line: 703, column: 12, scope: !11917)
!11926 = !DILocation(line: 705, column: 7, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11917, file: !1502, line: 705, column: 6)
!11928 = !DILocation(line: 705, column: 6, scope: !11917)
!11929 = !DILocation(line: 722, column: 8, scope: !11917)
!11930 = !DILocation(line: 723, column: 10, scope: !11931)
!11931 = distinct !DILexicalBlock(scope: !11917, file: !1502, line: 723, column: 6)
!11932 = !DILocation(line: 723, column: 6, scope: !11917)
!11933 = !DILocation(line: 731, column: 1, scope: !11917)
!11934 = distinct !DISubprogram(name: "device_is_ready", scope: !4183, file: !4183, line: 47, type: !11935, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11937)
!11935 = !DISubroutineType(types: !11936)
!11936 = !{!153, !1362}
!11937 = !{!11938}
!11938 = !DILocalVariable(name: "dev", arg: 1, scope: !11934, file: !4183, line: 47, type: !1362)
!11939 = !DILocation(line: 0, scope: !11934)
!11940 = !DILocation(line: 55, column: 2, scope: !11941)
!11941 = distinct !DILexicalBlock(scope: !11934, file: !4183, line: 55, column: 2)
!11942 = !{i64 2154258916}
!11943 = !DILocation(line: 56, column: 9, scope: !11934)
!11944 = !DILocation(line: 56, column: 2, scope: !11934)
!11945 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1502, file: !1502, line: 270, type: !11946, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11948)
!11946 = !DISubroutineType(types: !11947)
!11947 = !{!125, !1362, !153}
!11948 = !{!11949, !11950, !11951, !11952, !11953}
!11949 = !DILocalVariable(name: "dev", arg: 1, scope: !11945, file: !1502, line: 270, type: !1362)
!11950 = !DILocalVariable(name: "on", arg: 2, scope: !11945, file: !1502, line: 270, type: !153)
!11951 = !DILocalVariable(name: "cfg", scope: !11945, file: !1502, line: 272, type: !11294)
!11952 = !DILocalVariable(name: "ret", scope: !11945, file: !1502, line: 273, type: !125)
!11953 = !DILocalVariable(name: "clk", scope: !11945, file: !1502, line: 278, type: !11584)
!11954 = !DILocation(line: 0, scope: !11945)
!11955 = !DILocation(line: 272, column: 45, scope: !11945)
!11956 = !DILocation(line: 282, column: 38, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11958, file: !1502, line: 280, column: 10)
!11958 = distinct !DILexicalBlock(scope: !11945, file: !1502, line: 280, column: 6)
!11959 = !DILocation(line: 282, column: 6, scope: !11957)
!11960 = !DILocation(line: 281, column: 9, scope: !11957)
!11961 = !DILocation(line: 293, column: 1, scope: !11945)
!11962 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !11935, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11963)
!11963 = !{!11964}
!11964 = !DILocalVariable(name: "dev", arg: 1, scope: !11962, file: !137, line: 730, type: !1362)
!11965 = !DILocation(line: 0, scope: !11962)
!11966 = !DILocation(line: 732, column: 9, scope: !11962)
!11967 = !DILocation(line: 732, column: 2, scope: !11962)
!11968 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1502, file: !1502, line: 496, type: !11969, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1333, retainedNodes: !11971)
!11969 = !DISubroutineType(types: !11970)
!11970 = !{!125, !1362, !125, !125, !125}
!11971 = !{!11972, !11973, !11974, !11975, !11976, !11977}
!11972 = !DILocalVariable(name: "dev", arg: 1, scope: !11968, file: !1502, line: 496, type: !1362)
!11973 = !DILocalVariable(name: "pin", arg: 2, scope: !11968, file: !1502, line: 496, type: !125)
!11974 = !DILocalVariable(name: "conf", arg: 3, scope: !11968, file: !1502, line: 496, type: !125)
!11975 = !DILocalVariable(name: "func", arg: 4, scope: !11968, file: !1502, line: 496, type: !125)
!11976 = !DILocalVariable(name: "ret", scope: !11968, file: !1502, line: 498, type: !125)
!11977 = !DILocalVariable(name: "gpio_out", scope: !11978, file: !1502, line: 508, type: !208)
!11978 = distinct !DILexicalBlock(scope: !11979, file: !1502, line: 507, column: 27)
!11979 = distinct !DILexicalBlock(scope: !11968, file: !1502, line: 507, column: 6)
!11980 = !DILocation(line: 0, scope: !11968)
!11981 = !DILocation(line: 505, column: 2, scope: !11968)
!11982 = !DILocation(line: 507, column: 11, scope: !11979)
!11983 = !DILocation(line: 507, column: 6, scope: !11968)
!11984 = !DILocation(line: 508, column: 28, scope: !11978)
!11985 = !DILocation(line: 0, scope: !11978)
!11986 = !DILocation(line: 510, column: 16, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11978, file: !1502, line: 510, column: 7)
!11988 = !DILocation(line: 0, scope: !11987)
!11989 = !DILocation(line: 510, column: 7, scope: !11978)
!11990 = !DILocation(line: 511, column: 4, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11987, file: !1502, line: 510, column: 32)
!11992 = !DILocation(line: 512, column: 3, scope: !11991)
!11993 = !DILocation(line: 513, column: 4, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11995, file: !1502, line: 512, column: 39)
!11995 = distinct !DILexicalBlock(scope: !11987, file: !1502, line: 512, column: 14)
!11996 = !DILocation(line: 514, column: 3, scope: !11994)
!11997 = !DILocation(line: 518, column: 1, scope: !11968)
!11998 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1777, file: !1777, line: 526, type: !1678, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !11999)
!11999 = !{!12000, !12001, !12002}
!12000 = !DILocalVariable(name: "dev", arg: 1, scope: !11998, file: !1777, line: 526, type: !1680)
!12001 = !DILocalVariable(name: "c", arg: 2, scope: !11998, file: !1777, line: 526, type: !1112)
!12002 = !DILocalVariable(name: "config", scope: !11998, file: !1777, line: 528, type: !12003)
!12003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 32)
!12004 = !DILocation(line: 0, scope: !11998)
!12005 = !DILocation(line: 528, column: 48, scope: !11998)
!12006 = !DILocation(line: 531, column: 40, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !11998, file: !1777, line: 531, column: 6)
!12008 = !DILocation(line: 531, column: 6, scope: !12007)
!12009 = !DILocation(line: 531, column: 6, scope: !11998)
!12010 = !DILocation(line: 532, column: 34, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !12007, file: !1777, line: 531, column: 48)
!12012 = !DILocation(line: 532, column: 3, scope: !12011)
!12013 = !DILocation(line: 533, column: 2, scope: !12011)
!12014 = !DILocation(line: 539, column: 42, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !11998, file: !1777, line: 539, column: 6)
!12016 = !DILocation(line: 539, column: 7, scope: !12015)
!12017 = !DILocation(line: 539, column: 6, scope: !11998)
!12018 = !DILocation(line: 543, column: 52, scope: !11998)
!12019 = !DILocation(line: 543, column: 22, scope: !11998)
!12020 = !DILocation(line: 543, column: 5, scope: !11998)
!12021 = !DILocation(line: 545, column: 2, scope: !11998)
!12022 = !DILocation(line: 546, column: 1, scope: !11998)
!12023 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1777, file: !1777, line: 548, type: !1697, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12024)
!12024 = !{!12025, !12026, !12027, !12028}
!12025 = !DILocalVariable(name: "dev", arg: 1, scope: !12023, file: !1777, line: 548, type: !1680)
!12026 = !DILocalVariable(name: "c", arg: 2, scope: !12023, file: !1777, line: 549, type: !151)
!12027 = !DILocalVariable(name: "config", scope: !12023, file: !1777, line: 551, type: !12003)
!12028 = !DILocalVariable(name: "key", scope: !12023, file: !1777, line: 555, type: !32)
!12029 = !DILocation(line: 0, scope: !12023)
!12030 = !DILocation(line: 551, column: 48, scope: !12023)
!12031 = !DILocation(line: 562, column: 2, scope: !12023)
!12032 = !DILocation(line: 563, column: 41, scope: !12033)
!12033 = distinct !DILexicalBlock(scope: !12034, file: !1777, line: 563, column: 7)
!12034 = distinct !DILexicalBlock(scope: !12023, file: !1777, line: 562, column: 12)
!12035 = !DILocation(line: 563, column: 7, scope: !12033)
!12036 = !DILocation(line: 563, column: 7, scope: !12034)
!12037 = !DILocation(line: 55, column: 2, scope: !12038, inlinedAt: !12042)
!12038 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6806, file: !6806, line: 42, type: !6807, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12039)
!12039 = !{!12040, !12041}
!12040 = !DILocalVariable(name: "key", scope: !12038, file: !6806, line: 44, type: !32)
!12041 = !DILocalVariable(name: "tmp", scope: !12038, file: !6806, line: 53, type: !32)
!12042 = distinct !DILocation(line: 564, column: 10, scope: !12043)
!12043 = distinct !DILexicalBlock(scope: !12033, file: !1777, line: 563, column: 49)
!12044 = !{i64 1998866}
!12045 = !DILocation(line: 0, scope: !12038, inlinedAt: !12042)
!12046 = !DILocation(line: 565, column: 42, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !12043, file: !1777, line: 565, column: 8)
!12048 = !DILocation(line: 565, column: 8, scope: !12047)
!12049 = !DILocation(line: 565, column: 8, scope: !12043)
!12050 = !DILocalVariable(name: "key", arg: 1, scope: !12051, file: !6806, line: 84, type: !32)
!12051 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6806, file: !6806, line: 84, type: !6817, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12052)
!12052 = !{!12050}
!12053 = !DILocation(line: 0, scope: !12051, inlinedAt: !12054)
!12054 = distinct !DILocation(line: 568, column: 4, scope: !12043)
!12055 = !DILocation(line: 95, column: 2, scope: !12051, inlinedAt: !12054)
!12056 = !{i64 1999683}
!12057 = !DILocation(line: 569, column: 3, scope: !12043)
!12058 = distinct !{!12058, !12031, !12059}
!12059 = !DILocation(line: 570, column: 2, scope: !12023)
!12060 = !DILocation(line: 592, column: 33, scope: !12023)
!12061 = !DILocation(line: 592, column: 2, scope: !12023)
!12062 = !DILocation(line: 0, scope: !12051, inlinedAt: !12063)
!12063 = distinct !DILocation(line: 593, column: 2, scope: !12023)
!12064 = !DILocation(line: 95, column: 2, scope: !12051, inlinedAt: !12063)
!12065 = !DILocation(line: 594, column: 1, scope: !12023)
!12066 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1777, file: !1777, line: 596, type: !1701, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12067)
!12067 = !{!12068, !12069, !12070}
!12068 = !DILocalVariable(name: "dev", arg: 1, scope: !12066, file: !1777, line: 596, type: !1680)
!12069 = !DILocalVariable(name: "config", scope: !12066, file: !1777, line: 598, type: !12003)
!12070 = !DILocalVariable(name: "err", scope: !12066, file: !1777, line: 599, type: !208)
!12071 = !DILocation(line: 0, scope: !12066)
!12072 = !DILocation(line: 598, column: 48, scope: !12066)
!12073 = !DILocation(line: 606, column: 40, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !12066, file: !1777, line: 606, column: 6)
!12075 = !DILocation(line: 606, column: 6, scope: !12074)
!12076 = !DILocation(line: 606, column: 6, scope: !12066)
!12077 = !DILocation(line: 610, column: 39, scope: !12078)
!12078 = distinct !DILexicalBlock(scope: !12066, file: !1777, line: 610, column: 6)
!12079 = !DILocation(line: 610, column: 6, scope: !12078)
!12080 = !DILocation(line: 610, column: 6, scope: !12066)
!12081 = !DILocation(line: 614, column: 39, scope: !12082)
!12082 = distinct !DILexicalBlock(scope: !12066, file: !1777, line: 614, column: 6)
!12083 = !DILocation(line: 614, column: 6, scope: !12082)
!12084 = !DILocation(line: 614, column: 6, scope: !12066)
!12085 = !DILocation(line: 619, column: 40, scope: !12086)
!12086 = distinct !DILexicalBlock(scope: !12066, file: !1777, line: 619, column: 6)
!12087 = !DILocation(line: 619, column: 6, scope: !12086)
!12088 = !DILocation(line: 619, column: 6, scope: !12066)
!12089 = !DILocation(line: 623, column: 10, scope: !12090)
!12090 = distinct !DILexicalBlock(scope: !12066, file: !1777, line: 623, column: 6)
!12091 = !DILocation(line: 623, column: 6, scope: !12066)
!12092 = !DILocation(line: 624, column: 34, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !12090, file: !1777, line: 623, column: 24)
!12094 = !DILocation(line: 624, column: 3, scope: !12093)
!12095 = !DILocation(line: 625, column: 2, scope: !12093)
!12096 = !DILocation(line: 632, column: 10, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !12066, file: !1777, line: 632, column: 6)
!12098 = !DILocation(line: 632, column: 6, scope: !12066)
!12099 = !DILocation(line: 633, column: 34, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12097, file: !1777, line: 632, column: 32)
!12101 = !DILocation(line: 633, column: 3, scope: !12100)
!12102 = !DILocation(line: 634, column: 2, scope: !12100)
!12103 = !DILocation(line: 636, column: 10, scope: !12104)
!12104 = distinct !DILexicalBlock(scope: !12066, file: !1777, line: 636, column: 6)
!12105 = !DILocation(line: 636, column: 6, scope: !12066)
!12106 = !DILocation(line: 637, column: 33, scope: !12107)
!12107 = distinct !DILexicalBlock(scope: !12104, file: !1777, line: 636, column: 31)
!12108 = !DILocation(line: 637, column: 3, scope: !12107)
!12109 = !DILocation(line: 638, column: 2, scope: !12107)
!12110 = !DILocation(line: 640, column: 10, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12066, file: !1777, line: 640, column: 6)
!12112 = !DILocation(line: 640, column: 6, scope: !12066)
!12113 = !DILocation(line: 641, column: 33, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12111, file: !1777, line: 640, column: 32)
!12115 = !DILocation(line: 641, column: 3, scope: !12114)
!12116 = !DILocation(line: 642, column: 2, scope: !12114)
!12117 = !DILocation(line: 646, column: 32, scope: !12066)
!12118 = !DILocation(line: 646, column: 2, scope: !12066)
!12119 = !DILocation(line: 648, column: 2, scope: !12066)
!12120 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1777, file: !1777, line: 419, type: !1705, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12121)
!12121 = !{!12122, !12123, !12124, !12125, !12127, !12128, !12129, !12130}
!12122 = !DILocalVariable(name: "dev", arg: 1, scope: !12120, file: !1777, line: 419, type: !1680)
!12123 = !DILocalVariable(name: "cfg", arg: 2, scope: !12120, file: !1777, line: 420, type: !1707)
!12124 = !DILocalVariable(name: "config", scope: !12120, file: !1777, line: 422, type: !12003)
!12125 = !DILocalVariable(name: "data", scope: !12120, file: !1777, line: 423, type: !12126)
!12126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 32)
!12127 = !DILocalVariable(name: "parity", scope: !12120, file: !1777, line: 424, type: !8541)
!12128 = !DILocalVariable(name: "stopbits", scope: !12120, file: !1777, line: 425, type: !8541)
!12129 = !DILocalVariable(name: "databits", scope: !12120, file: !1777, line: 426, type: !8541)
!12130 = !DILocalVariable(name: "flowctrl", scope: !12120, file: !1777, line: 428, type: !8541)
!12131 = !DILocation(line: 0, scope: !12120)
!12132 = !DILocation(line: 422, column: 48, scope: !12120)
!12133 = !DILocation(line: 423, column: 38, scope: !12120)
!12134 = !DILocation(line: 424, column: 56, scope: !12120)
!12135 = !DILocation(line: 424, column: 51, scope: !12120)
!12136 = !DILocation(line: 424, column: 26, scope: !12120)
!12137 = !DILocation(line: 425, column: 60, scope: !12120)
!12138 = !DILocation(line: 425, column: 55, scope: !12120)
!12139 = !DILocation(line: 425, column: 28, scope: !12120)
!12140 = !DILocation(line: 426, column: 60, scope: !12120)
!12141 = !DILocation(line: 426, column: 55, scope: !12120)
!12142 = !DILocation(line: 426, column: 28, scope: !12120)
!12143 = !DILocation(line: 428, column: 58, scope: !12120)
!12144 = !DILocation(line: 428, column: 53, scope: !12120)
!12145 = !DILocation(line: 428, column: 28, scope: !12120)
!12146 = !DILocation(line: 431, column: 44, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !12120, file: !1777, line: 431, column: 6)
!12148 = !DILocation(line: 438, column: 22, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12120, file: !1777, line: 437, column: 6)
!12150 = !DILocation(line: 437, column: 6, scope: !12120)
!12151 = !DILocation(line: 448, column: 6, scope: !12120)
!12152 = !DILocation(line: 465, column: 47, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !12120, file: !1777, line: 465, column: 6)
!12154 = !DILocation(line: 475, column: 21, scope: !12155)
!12155 = distinct !DILexicalBlock(scope: !12120, file: !1777, line: 475, column: 6)
!12156 = !DILocation(line: 475, column: 6, scope: !12120)
!12157 = !DILocation(line: 476, column: 8, scope: !12158)
!12158 = distinct !DILexicalBlock(scope: !12159, file: !1777, line: 476, column: 7)
!12159 = distinct !DILexicalBlock(scope: !12155, file: !1777, line: 475, column: 49)
!12160 = !DILocation(line: 477, column: 34, scope: !12158)
!12161 = !DILocation(line: 476, column: 7, scope: !12159)
!12162 = !DILocation(line: 482, column: 27, scope: !12120)
!12163 = !DILocation(line: 482, column: 2, scope: !12120)
!12164 = !DILocation(line: 484, column: 16, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12120, file: !1777, line: 484, column: 6)
!12166 = !DILocation(line: 484, column: 13, scope: !12165)
!12167 = !DILocation(line: 484, column: 6, scope: !12120)
!12168 = !DILocation(line: 485, column: 3, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12165, file: !1777, line: 484, column: 44)
!12170 = !DILocation(line: 486, column: 2, scope: !12169)
!12171 = !DILocation(line: 488, column: 18, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12120, file: !1777, line: 488, column: 6)
!12173 = !DILocation(line: 488, column: 15, scope: !12172)
!12174 = !DILocation(line: 488, column: 6, scope: !12120)
!12175 = !DILocation(line: 489, column: 3, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12172, file: !1777, line: 488, column: 48)
!12177 = !DILocation(line: 490, column: 2, scope: !12176)
!12178 = !DILocation(line: 492, column: 18, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12120, file: !1777, line: 492, column: 6)
!12180 = !DILocation(line: 492, column: 15, scope: !12179)
!12181 = !DILocation(line: 492, column: 6, scope: !12120)
!12182 = !DILocation(line: 493, column: 3, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12179, file: !1777, line: 492, column: 48)
!12184 = !DILocation(line: 494, column: 2, scope: !12183)
!12185 = !DILocation(line: 496, column: 18, scope: !12186)
!12186 = distinct !DILexicalBlock(scope: !12120, file: !1777, line: 496, column: 6)
!12187 = !DILocation(line: 496, column: 15, scope: !12186)
!12188 = !DILocation(line: 496, column: 6, scope: !12120)
!12189 = !DILocation(line: 497, column: 3, scope: !12190)
!12190 = distinct !DILexicalBlock(scope: !12186, file: !1777, line: 496, column: 46)
!12191 = !DILocation(line: 498, column: 2, scope: !12190)
!12192 = !DILocation(line: 500, column: 11, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12120, file: !1777, line: 500, column: 6)
!12194 = !DILocation(line: 500, column: 29, scope: !12193)
!12195 = !DILocation(line: 500, column: 20, scope: !12193)
!12196 = !DILocation(line: 500, column: 6, scope: !12120)
!12197 = !DILocation(line: 501, column: 3, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !12193, file: !1777, line: 500, column: 40)
!12199 = !DILocation(line: 502, column: 26, scope: !12198)
!12200 = !DILocation(line: 502, column: 19, scope: !12198)
!12201 = !DILocation(line: 503, column: 2, scope: !12198)
!12202 = !DILocation(line: 505, column: 26, scope: !12120)
!12203 = !DILocation(line: 505, column: 2, scope: !12120)
!12204 = !DILocation(line: 506, column: 2, scope: !12120)
!12205 = !DILocation(line: 507, column: 1, scope: !12120)
!12206 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1777, file: !1777, line: 509, type: !1718, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12207)
!12207 = !{!12208, !12209, !12210}
!12208 = !DILocalVariable(name: "dev", arg: 1, scope: !12206, file: !1777, line: 509, type: !1680)
!12209 = !DILocalVariable(name: "cfg", arg: 2, scope: !12206, file: !1777, line: 510, type: !1720)
!12210 = !DILocalVariable(name: "data", scope: !12206, file: !1777, line: 512, type: !12126)
!12211 = !DILocation(line: 0, scope: !12206)
!12212 = !DILocation(line: 512, column: 38, scope: !12206)
!12213 = !DILocation(line: 514, column: 24, scope: !12206)
!12214 = !DILocation(line: 514, column: 7, scope: !12206)
!12215 = !DILocation(line: 514, column: 16, scope: !12206)
!12216 = !DILocation(line: 515, column: 41, scope: !12206)
!12217 = !{i32 0, i32 1537}
!12218 = !DILocation(line: 515, column: 16, scope: !12206)
!12219 = !DILocation(line: 515, column: 7, scope: !12206)
!12220 = !DILocation(line: 515, column: 14, scope: !12206)
!12221 = !DILocation(line: 517, column: 3, scope: !12206)
!12222 = !{i32 0, i32 12289}
!12223 = !DILocation(line: 516, column: 19, scope: !12206)
!12224 = !DILocation(line: 516, column: 7, scope: !12206)
!12225 = !DILocation(line: 516, column: 17, scope: !12206)
!12226 = !DILocation(line: 519, column: 3, scope: !12206)
!12227 = !DILocation(line: 519, column: 33, scope: !12206)
!12228 = !DILocation(line: 518, column: 19, scope: !12206)
!12229 = !DILocation(line: 518, column: 7, scope: !12206)
!12230 = !DILocation(line: 518, column: 17, scope: !12206)
!12231 = !DILocation(line: 521, column: 3, scope: !12206)
!12232 = !{i32 0, i32 769}
!12233 = !DILocation(line: 520, column: 19, scope: !12206)
!12234 = !DILocation(line: 520, column: 7, scope: !12206)
!12235 = !DILocation(line: 520, column: 17, scope: !12206)
!12236 = !DILocation(line: 522, column: 2, scope: !12206)
!12237 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1777, file: !1777, line: 205, type: !12238, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12240)
!12238 = !DISubroutineType(types: !12239)
!12239 = !{!208, !1680}
!12240 = !{!12241, !12242}
!12241 = !DILocalVariable(name: "dev", arg: 1, scope: !12237, file: !1777, line: 205, type: !1680)
!12242 = !DILocalVariable(name: "config", scope: !12237, file: !1777, line: 207, type: !12003)
!12243 = !DILocation(line: 0, scope: !12237)
!12244 = !DILocation(line: 207, column: 48, scope: !12237)
!12245 = !DILocation(line: 209, column: 36, scope: !12237)
!12246 = !DILocation(line: 209, column: 9, scope: !12237)
!12247 = !DILocation(line: 209, column: 2, scope: !12237)
!12248 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1777, file: !1777, line: 270, type: !12249, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12251)
!12249 = !DISubroutineType(types: !12250)
!12250 = !{!1646, !208}
!12251 = !{!12252}
!12252 = !DILocalVariable(name: "parity", arg: 1, scope: !12248, file: !1777, line: 270, type: !208)
!12253 = !DILocation(line: 0, scope: !12248)
!12254 = !DILocation(line: 272, column: 2, scope: !12248)
!12255 = !DILocation(line: 281, column: 1, scope: !12248)
!12256 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1777, file: !1777, line: 220, type: !12238, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12257)
!12257 = !{!12258, !12259}
!12258 = !DILocalVariable(name: "dev", arg: 1, scope: !12256, file: !1777, line: 220, type: !1680)
!12259 = !DILocalVariable(name: "config", scope: !12256, file: !1777, line: 222, type: !12003)
!12260 = !DILocation(line: 0, scope: !12256)
!12261 = !DILocation(line: 222, column: 48, scope: !12256)
!12262 = !DILocation(line: 224, column: 44, scope: !12256)
!12263 = !DILocation(line: 224, column: 9, scope: !12256)
!12264 = !DILocation(line: 224, column: 2, scope: !12256)
!12265 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1777, file: !1777, line: 304, type: !12266, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12268)
!12266 = !DISubroutineType(types: !12267)
!12267 = !{!1660, !208}
!12268 = !{!12269}
!12269 = !DILocalVariable(name: "sb", arg: 1, scope: !12265, file: !1777, line: 304, type: !208)
!12270 = !DILocation(line: 0, scope: !12265)
!12271 = !DILocation(line: 306, column: 2, scope: !12265)
!12272 = !DILocation(line: 0, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12265, file: !1777, line: 306, column: 14)
!12274 = !DILocation(line: 323, column: 1, scope: !12265)
!12275 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1777, file: !1777, line: 235, type: !12238, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12276)
!12276 = !{!12277, !12278}
!12277 = !DILocalVariable(name: "dev", arg: 1, scope: !12275, file: !1777, line: 235, type: !1680)
!12278 = !DILocalVariable(name: "config", scope: !12275, file: !1777, line: 237, type: !12003)
!12279 = !DILocation(line: 0, scope: !12275)
!12280 = !DILocation(line: 237, column: 48, scope: !12275)
!12281 = !DILocation(line: 239, column: 39, scope: !12275)
!12282 = !DILocation(line: 239, column: 9, scope: !12275)
!12283 = !DILocation(line: 239, column: 2, scope: !12275)
!12284 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1777, file: !1777, line: 355, type: !12285, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12287)
!12285 = !DISubroutineType(types: !12286)
!12286 = !{!1653, !208, !208}
!12287 = !{!12288, !12289}
!12288 = !DILocalVariable(name: "db", arg: 1, scope: !12284, file: !1777, line: 355, type: !208)
!12289 = !DILocalVariable(name: "p", arg: 2, scope: !12284, file: !1777, line: 356, type: !208)
!12290 = !DILocation(line: 0, scope: !12284)
!12291 = !DILocation(line: 358, column: 2, scope: !12284)
!12292 = !DILocation(line: 384, column: 1, scope: !12284)
!12293 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1777, file: !1777, line: 250, type: !12238, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12294)
!12294 = !{!12295, !12296}
!12295 = !DILocalVariable(name: "dev", arg: 1, scope: !12293, file: !1777, line: 250, type: !1680)
!12296 = !DILocalVariable(name: "config", scope: !12293, file: !1777, line: 252, type: !12003)
!12297 = !DILocation(line: 0, scope: !12293)
!12298 = !DILocation(line: 252, column: 48, scope: !12293)
!12299 = !DILocation(line: 254, column: 40, scope: !12293)
!12300 = !DILocation(line: 254, column: 9, scope: !12293)
!12301 = !DILocation(line: 254, column: 2, scope: !12293)
!12302 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1777, file: !1777, line: 409, type: !12303, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12305)
!12303 = !DISubroutineType(types: !12304)
!12304 = !{!1666, !208}
!12305 = !{!12306}
!12306 = !DILocalVariable(name: "fc", arg: 1, scope: !12302, file: !1777, line: 409, type: !208)
!12307 = !DILocation(line: 0, scope: !12302)
!12308 = !DILocation(line: 411, column: 9, scope: !12309)
!12309 = distinct !DILexicalBlock(scope: !12302, file: !1777, line: 411, column: 6)
!12310 = !DILocation(line: 416, column: 1, scope: !12302)
!12311 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !12312, file: !12312, line: 967, type: !12313, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12315)
!12312 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12313 = !DISubroutineType(types: !12314)
!12314 = !{!208, !1721}
!12315 = !{!12316}
!12316 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12311, file: !12312, line: 967, type: !1721)
!12317 = !DILocation(line: 0, scope: !12311)
!12318 = !DILocation(line: 969, column: 21, scope: !12311)
!12319 = !DILocation(line: 969, column: 3, scope: !12311)
!12320 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !12312, file: !12312, line: 601, type: !12313, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12321)
!12321 = !{!12322}
!12322 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12320, file: !12312, line: 601, type: !1721)
!12323 = !DILocation(line: 0, scope: !12320)
!12324 = !DILocation(line: 603, column: 21, scope: !12320)
!12325 = !DILocation(line: 603, column: 3, scope: !12320)
!12326 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !12312, file: !12312, line: 820, type: !12313, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12327)
!12327 = !{!12328}
!12328 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12326, file: !12312, line: 820, type: !1721)
!12329 = !DILocation(line: 0, scope: !12326)
!12330 = !DILocation(line: 822, column: 21, scope: !12326)
!12331 = !DILocation(line: 822, column: 3, scope: !12326)
!12332 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !12312, file: !12312, line: 547, type: !12313, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12333)
!12333 = !{!12334}
!12334 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12332, file: !12312, line: 547, type: !1721)
!12335 = !DILocation(line: 0, scope: !12332)
!12336 = !DILocation(line: 549, column: 21, scope: !12332)
!12337 = !DILocation(line: 549, column: 3, scope: !12332)
!12338 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1777, file: !1777, line: 257, type: !12339, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12341)
!12339 = !DISubroutineType(types: !12340)
!12340 = !{!208, !1646}
!12341 = !{!12342}
!12342 = !DILocalVariable(name: "parity", arg: 1, scope: !12338, file: !1777, line: 257, type: !1646)
!12343 = !DILocation(line: 0, scope: !12338)
!12344 = !DILocation(line: 259, column: 2, scope: !12338)
!12345 = !DILocation(line: 268, column: 1, scope: !12338)
!12346 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1777, file: !1777, line: 283, type: !12347, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12349)
!12347 = !DISubroutineType(types: !12348)
!12348 = !{!208, !1660}
!12349 = !{!12350}
!12350 = !DILocalVariable(name: "sb", arg: 1, scope: !12346, file: !1777, line: 283, type: !1660)
!12351 = !DILocation(line: 0, scope: !12346)
!12352 = !DILocation(line: 285, column: 2, scope: !12346)
!12353 = !DILocation(line: 0, scope: !12354)
!12354 = distinct !DILexicalBlock(scope: !12346, file: !1777, line: 285, column: 14)
!12355 = !DILocation(line: 302, column: 1, scope: !12346)
!12356 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1777, file: !1777, line: 325, type: !12357, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12359)
!12357 = !DISubroutineType(types: !12358)
!12358 = !{!208, !1653, !1646}
!12359 = !{!12360, !12361}
!12360 = !DILocalVariable(name: "db", arg: 1, scope: !12356, file: !1777, line: 325, type: !1653)
!12361 = !DILocalVariable(name: "p", arg: 2, scope: !12356, file: !1777, line: 326, type: !1646)
!12362 = !DILocation(line: 0, scope: !12356)
!12363 = !DILocation(line: 328, column: 2, scope: !12356)
!12364 = !DILocation(line: 353, column: 1, scope: !12356)
!12365 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1777, file: !1777, line: 393, type: !12366, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12368)
!12366 = !DISubroutineType(types: !12367)
!12367 = !{!208, !1666}
!12368 = !{!12369}
!12369 = !DILocalVariable(name: "fc", arg: 1, scope: !12365, file: !1777, line: 393, type: !1666)
!12370 = !DILocation(line: 0, scope: !12365)
!12371 = !DILocation(line: 395, column: 9, scope: !12372)
!12372 = distinct !DILexicalBlock(scope: !12365, file: !1777, line: 395, column: 6)
!12373 = !DILocation(line: 400, column: 1, scope: !12365)
!12374 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !12312, file: !12312, line: 424, type: !12375, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12377)
!12375 = !DISubroutineType(types: !12376)
!12376 = !{null, !1721}
!12377 = !{!12378}
!12378 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12374, file: !12312, line: 424, type: !1721)
!12379 = !DILocation(line: 0, scope: !12374)
!12380 = !DILocation(line: 426, column: 3, scope: !12374)
!12381 = !DILocation(line: 427, column: 1, scope: !12374)
!12382 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1777, file: !1777, line: 197, type: !12383, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12385)
!12383 = !DISubroutineType(types: !12384)
!12384 = !{null, !1680, !208}
!12385 = !{!12386, !12387, !12388}
!12386 = !DILocalVariable(name: "dev", arg: 1, scope: !12382, file: !1777, line: 197, type: !1680)
!12387 = !DILocalVariable(name: "parity", arg: 2, scope: !12382, file: !1777, line: 198, type: !208)
!12388 = !DILocalVariable(name: "config", scope: !12382, file: !1777, line: 200, type: !12003)
!12389 = !DILocation(line: 0, scope: !12382)
!12390 = !DILocation(line: 200, column: 48, scope: !12382)
!12391 = !DILocation(line: 202, column: 29, scope: !12382)
!12392 = !DILocation(line: 202, column: 2, scope: !12382)
!12393 = !DILocation(line: 203, column: 1, scope: !12382)
!12394 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1777, file: !1777, line: 212, type: !12383, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12395)
!12395 = !{!12396, !12397, !12398}
!12396 = !DILocalVariable(name: "dev", arg: 1, scope: !12394, file: !1777, line: 212, type: !1680)
!12397 = !DILocalVariable(name: "stopbits", arg: 2, scope: !12394, file: !1777, line: 213, type: !208)
!12398 = !DILocalVariable(name: "config", scope: !12394, file: !1777, line: 215, type: !12003)
!12399 = !DILocation(line: 0, scope: !12394)
!12400 = !DILocation(line: 215, column: 48, scope: !12394)
!12401 = !DILocation(line: 217, column: 37, scope: !12394)
!12402 = !DILocation(line: 217, column: 2, scope: !12394)
!12403 = !DILocation(line: 218, column: 1, scope: !12394)
!12404 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1777, file: !1777, line: 227, type: !12383, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12405)
!12405 = !{!12406, !12407, !12408}
!12406 = !DILocalVariable(name: "dev", arg: 1, scope: !12404, file: !1777, line: 227, type: !1680)
!12407 = !DILocalVariable(name: "databits", arg: 2, scope: !12404, file: !1777, line: 228, type: !208)
!12408 = !DILocalVariable(name: "config", scope: !12404, file: !1777, line: 230, type: !12003)
!12409 = !DILocation(line: 0, scope: !12404)
!12410 = !DILocation(line: 230, column: 48, scope: !12404)
!12411 = !DILocation(line: 232, column: 32, scope: !12404)
!12412 = !DILocation(line: 232, column: 2, scope: !12404)
!12413 = !DILocation(line: 233, column: 1, scope: !12404)
!12414 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1777, file: !1777, line: 242, type: !12383, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12415)
!12415 = !{!12416, !12417, !12418}
!12416 = !DILocalVariable(name: "dev", arg: 1, scope: !12414, file: !1777, line: 242, type: !1680)
!12417 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !12414, file: !1777, line: 243, type: !208)
!12418 = !DILocalVariable(name: "config", scope: !12414, file: !1777, line: 245, type: !12003)
!12419 = !DILocation(line: 0, scope: !12414)
!12420 = !DILocation(line: 245, column: 48, scope: !12414)
!12421 = !DILocation(line: 247, column: 33, scope: !12414)
!12422 = !DILocation(line: 247, column: 2, scope: !12414)
!12423 = !DILocation(line: 248, column: 1, scope: !12414)
!12424 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1777, file: !1777, line: 107, type: !12383, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12425)
!12425 = !{!12426, !12427, !12428, !12429, !12430}
!12426 = !DILocalVariable(name: "dev", arg: 1, scope: !12424, file: !1777, line: 107, type: !1680)
!12427 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !12424, file: !1777, line: 107, type: !208)
!12428 = !DILocalVariable(name: "config", scope: !12424, file: !1777, line: 109, type: !12003)
!12429 = !DILocalVariable(name: "data", scope: !12424, file: !1777, line: 110, type: !12126)
!12430 = !DILocalVariable(name: "clock_rate", scope: !12424, file: !1777, line: 112, type: !208)
!12431 = !DILocation(line: 0, scope: !12424)
!12432 = !DILocation(line: 109, column: 48, scope: !12424)
!12433 = !DILocation(line: 110, column: 38, scope: !12424)
!12434 = !DILocation(line: 112, column: 2, scope: !12424)
!12435 = !DILocation(line: 123, column: 36, scope: !12436)
!12436 = distinct !DILexicalBlock(scope: !12437, file: !1777, line: 123, column: 7)
!12437 = distinct !DILexicalBlock(scope: !12438, file: !1777, line: 122, column: 9)
!12438 = distinct !DILexicalBlock(scope: !12424, file: !1777, line: 115, column: 6)
!12439 = !DILocation(line: 124, column: 42, scope: !12436)
!12440 = !DILocation(line: 123, column: 7, scope: !12436)
!12441 = !DILocation(line: 125, column: 22, scope: !12436)
!12442 = !DILocation(line: 123, column: 7, scope: !12437)
!12443 = !DILocation(line: 126, column: 4, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !12445, file: !1777, line: 126, column: 4)
!12445 = distinct !DILexicalBlock(scope: !12446, file: !1777, line: 126, column: 4)
!12446 = distinct !DILexicalBlock(scope: !12447, file: !1777, line: 126, column: 4)
!12447 = distinct !DILexicalBlock(scope: !12448, file: !1777, line: 126, column: 4)
!12448 = distinct !DILexicalBlock(scope: !12436, file: !1777, line: 125, column: 27)
!12449 = !DILocation(line: 127, column: 4, scope: !12448)
!12450 = !DILocation(line: 176, column: 36, scope: !12424)
!12451 = !DILocation(line: 176, column: 3, scope: !12424)
!12452 = !DILocation(line: 179, column: 32, scope: !12424)
!12453 = !DILocation(line: 180, column: 10, scope: !12424)
!12454 = !DILocation(line: 179, column: 3, scope: !12424)
!12455 = !DILocation(line: 195, column: 1, scope: !12424)
!12456 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !12312, file: !12312, line: 410, type: !12375, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12457)
!12457 = !{!12458}
!12458 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12456, file: !12312, line: 410, type: !1721)
!12459 = !DILocation(line: 0, scope: !12456)
!12460 = !DILocation(line: 412, column: 3, scope: !12456)
!12461 = !DILocation(line: 413, column: 1, scope: !12456)
!12462 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !958, file: !958, line: 216, type: !1754, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12463)
!12463 = !{!12464, !12465, !12466, !12467}
!12464 = !DILocalVariable(name: "dev", arg: 1, scope: !12462, file: !958, line: 216, type: !1680)
!12465 = !DILocalVariable(name: "sys", arg: 2, scope: !12462, file: !958, line: 217, type: !1051)
!12466 = !DILocalVariable(name: "rate", arg: 3, scope: !12462, file: !958, line: 218, type: !1009)
!12467 = !DILocalVariable(name: "api", scope: !12462, file: !958, line: 220, type: !1732)
!12468 = !DILocation(line: 0, scope: !12462)
!12469 = !DILocation(line: 221, column: 49, scope: !12462)
!12470 = !DILocation(line: 223, column: 11, scope: !12471)
!12471 = distinct !DILexicalBlock(scope: !12462, file: !958, line: 223, column: 6)
!12472 = !DILocation(line: 223, column: 20, scope: !12471)
!12473 = !DILocation(line: 223, column: 6, scope: !12462)
!12474 = !DILocation(line: 227, column: 9, scope: !12462)
!12475 = !DILocation(line: 227, column: 2, scope: !12462)
!12476 = !DILocation(line: 228, column: 1, scope: !12462)
!12477 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3442, file: !3442, line: 175, type: !3443, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12478)
!12478 = !{!12479}
!12479 = !DILocalVariable(name: "level", arg: 1, scope: !12477, file: !3442, line: 175, type: !125)
!12480 = !DILocation(line: 0, scope: !12477)
!12481 = !DILocation(line: 177, column: 2, scope: !12477)
!12482 = !DILocation(line: 189, column: 1, scope: !12477)
!12483 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !12312, file: !12312, line: 615, type: !12484, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12486)
!12484 = !DISubroutineType(types: !12485)
!12485 = !{null, !1721, !208}
!12486 = !{!12487, !12488}
!12487 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12483, file: !12312, line: 615, type: !1721)
!12488 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !12483, file: !12312, line: 615, type: !208)
!12489 = !DILocation(line: 0, scope: !12483)
!12490 = !DILocation(line: 617, column: 3, scope: !12483)
!12491 = !DILocation(line: 618, column: 1, scope: !12483)
!12492 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !12312, file: !12312, line: 1020, type: !12493, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12495)
!12493 = !DISubroutineType(types: !12494)
!12494 = !{null, !1721, !208, !208, !208}
!12495 = !{!12496, !12497, !12498, !12499}
!12496 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12492, file: !12312, line: 1020, type: !1721)
!12497 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !12492, file: !12312, line: 1020, type: !208)
!12498 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !12492, file: !12312, line: 1020, type: !208)
!12499 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !12492, file: !12312, line: 1021, type: !208)
!12500 = !DILocation(line: 0, scope: !12492)
!12501 = !DILocation(line: 1029, column: 30, scope: !12502)
!12502 = distinct !DILexicalBlock(scope: !12503, file: !12312, line: 1028, column: 3)
!12503 = distinct !DILexicalBlock(scope: !12492, file: !12312, line: 1023, column: 7)
!12504 = !DILocation(line: 1029, column: 19, scope: !12502)
!12505 = !DILocation(line: 1029, column: 13, scope: !12502)
!12506 = !DILocation(line: 1029, column: 17, scope: !12502)
!12507 = !DILocation(line: 1031, column: 1, scope: !12492)
!12508 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !12312, file: !12312, line: 949, type: !12484, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12509)
!12509 = !{!12510, !12511}
!12510 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12508, file: !12312, line: 949, type: !1721)
!12511 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !12508, file: !12312, line: 949, type: !208)
!12512 = !DILocation(line: 0, scope: !12508)
!12513 = !DILocation(line: 951, column: 3, scope: !12508)
!12514 = !DILocation(line: 952, column: 1, scope: !12508)
!12515 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !12312, file: !12312, line: 588, type: !12484, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12516)
!12516 = !{!12517, !12518}
!12517 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12515, file: !12312, line: 588, type: !1721)
!12518 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12515, file: !12312, line: 588, type: !208)
!12519 = !DILocation(line: 0, scope: !12515)
!12520 = !DILocation(line: 590, column: 3, scope: !12515)
!12521 = !DILocation(line: 591, column: 1, scope: !12515)
!12522 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !12312, file: !12312, line: 805, type: !12484, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12523)
!12523 = !{!12524, !12525}
!12524 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12522, file: !12312, line: 805, type: !1721)
!12525 = !DILocalVariable(name: "StopBits", arg: 2, scope: !12522, file: !12312, line: 805, type: !208)
!12526 = !DILocation(line: 0, scope: !12522)
!12527 = !DILocation(line: 807, column: 3, scope: !12522)
!12528 = !DILocation(line: 808, column: 1, scope: !12522)
!12529 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !12312, file: !12312, line: 532, type: !12484, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12530)
!12530 = !{!12531, !12532}
!12531 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12529, file: !12312, line: 532, type: !1721)
!12532 = !DILocalVariable(name: "Parity", arg: 2, scope: !12529, file: !12312, line: 532, type: !208)
!12533 = !DILocation(line: 0, scope: !12529)
!12534 = !DILocation(line: 534, column: 3, scope: !12529)
!12535 = !DILocation(line: 535, column: 1, scope: !12529)
!12536 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !12312, file: !12312, line: 1770, type: !12313, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12537)
!12537 = !{!12538}
!12538 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12536, file: !12312, line: 1770, type: !1721)
!12539 = !DILocation(line: 0, scope: !12536)
!12540 = !DILocation(line: 1772, column: 11, scope: !12536)
!12541 = !DILocation(line: 1772, column: 46, scope: !12536)
!12542 = !DILocation(line: 1772, column: 3, scope: !12536)
!12543 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !12312, file: !12312, line: 1737, type: !12313, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12544)
!12544 = !{!12545}
!12545 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12543, file: !12312, line: 1737, type: !1721)
!12546 = !DILocation(line: 0, scope: !12543)
!12547 = !DILocation(line: 1739, column: 11, scope: !12543)
!12548 = !DILocation(line: 1739, column: 3, scope: !12543)
!12549 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !12312, file: !12312, line: 1748, type: !12313, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12550)
!12550 = !{!12551}
!12551 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12549, file: !12312, line: 1748, type: !1721)
!12552 = !DILocation(line: 0, scope: !12549)
!12553 = !DILocation(line: 1750, column: 11, scope: !12549)
!12554 = !DILocation(line: 1750, column: 45, scope: !12549)
!12555 = !DILocation(line: 1750, column: 3, scope: !12549)
!12556 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !12312, file: !12312, line: 1827, type: !12313, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12557)
!12557 = !{!12558}
!12558 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12556, file: !12312, line: 1827, type: !1721)
!12559 = !DILocation(line: 0, scope: !12556)
!12560 = !DILocation(line: 1829, column: 11, scope: !12556)
!12561 = !DILocation(line: 1829, column: 46, scope: !12556)
!12562 = !DILocation(line: 1829, column: 3, scope: !12556)
!12563 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !12312, file: !12312, line: 1992, type: !12375, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12564)
!12564 = !{!12565}
!12565 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12563, file: !12312, line: 1992, type: !1721)
!12566 = !DILocation(line: 0, scope: !12563)
!12567 = !DILocation(line: 1994, column: 3, scope: !12563)
!12568 = !DILocation(line: 1995, column: 1, scope: !12563)
!12569 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !12312, file: !12312, line: 1934, type: !12375, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12570)
!12570 = !{!12571, !12572}
!12571 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12569, file: !12312, line: 1934, type: !1721)
!12572 = !DILocalVariable(name: "tmpreg", scope: !12569, file: !12312, line: 1936, type: !423)
!12573 = !DILocation(line: 0, scope: !12569)
!12574 = !DILocation(line: 1936, column: 3, scope: !12569)
!12575 = !DILocation(line: 1936, column: 17, scope: !12569)
!12576 = !DILocation(line: 1937, column: 20, scope: !12569)
!12577 = !DILocation(line: 1937, column: 10, scope: !12569)
!12578 = !DILocation(line: 1938, column: 10, scope: !12569)
!12579 = !DILocation(line: 1939, column: 20, scope: !12569)
!12580 = !DILocation(line: 1939, column: 10, scope: !12569)
!12581 = !DILocation(line: 1940, column: 10, scope: !12569)
!12582 = !DILocation(line: 1941, column: 1, scope: !12569)
!12583 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !12312, file: !12312, line: 1877, type: !12375, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12584)
!12584 = !{!12585, !12586}
!12585 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12583, file: !12312, line: 1877, type: !1721)
!12586 = !DILocalVariable(name: "tmpreg", scope: !12583, file: !12312, line: 1879, type: !423)
!12587 = !DILocation(line: 0, scope: !12583)
!12588 = !DILocation(line: 1879, column: 3, scope: !12583)
!12589 = !DILocation(line: 1879, column: 17, scope: !12583)
!12590 = !DILocation(line: 1880, column: 20, scope: !12583)
!12591 = !DILocation(line: 1880, column: 10, scope: !12583)
!12592 = !DILocation(line: 1881, column: 10, scope: !12583)
!12593 = !DILocation(line: 1882, column: 20, scope: !12583)
!12594 = !DILocation(line: 1882, column: 10, scope: !12583)
!12595 = !DILocation(line: 1883, column: 10, scope: !12583)
!12596 = !DILocation(line: 1884, column: 1, scope: !12583)
!12597 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !12312, file: !12312, line: 1896, type: !12375, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12598)
!12598 = !{!12599, !12600}
!12599 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12597, file: !12312, line: 1896, type: !1721)
!12600 = !DILocalVariable(name: "tmpreg", scope: !12597, file: !12312, line: 1898, type: !423)
!12601 = !DILocation(line: 0, scope: !12597)
!12602 = !DILocation(line: 1898, column: 3, scope: !12597)
!12603 = !DILocation(line: 1898, column: 17, scope: !12597)
!12604 = !DILocation(line: 1899, column: 20, scope: !12597)
!12605 = !DILocation(line: 1899, column: 10, scope: !12597)
!12606 = !DILocation(line: 1900, column: 10, scope: !12597)
!12607 = !DILocation(line: 1901, column: 20, scope: !12597)
!12608 = !DILocation(line: 1901, column: 10, scope: !12597)
!12609 = !DILocation(line: 1902, column: 10, scope: !12597)
!12610 = !DILocation(line: 1903, column: 1, scope: !12597)
!12611 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !12312, file: !12312, line: 1915, type: !12375, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12612)
!12612 = !{!12613, !12614}
!12613 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12611, file: !12312, line: 1915, type: !1721)
!12614 = !DILocalVariable(name: "tmpreg", scope: !12611, file: !12312, line: 1917, type: !423)
!12615 = !DILocation(line: 0, scope: !12611)
!12616 = !DILocation(line: 1917, column: 3, scope: !12611)
!12617 = !DILocation(line: 1917, column: 17, scope: !12611)
!12618 = !DILocation(line: 1918, column: 20, scope: !12611)
!12619 = !DILocation(line: 1918, column: 10, scope: !12611)
!12620 = !DILocation(line: 1919, column: 10, scope: !12611)
!12621 = !DILocation(line: 1920, column: 20, scope: !12611)
!12622 = !DILocation(line: 1920, column: 10, scope: !12611)
!12623 = !DILocation(line: 1921, column: 10, scope: !12611)
!12624 = !DILocation(line: 1922, column: 1, scope: !12611)
!12625 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !12312, file: !12312, line: 1814, type: !12313, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12626)
!12626 = !{!12627}
!12627 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12625, file: !12312, line: 1814, type: !1721)
!12628 = !DILocation(line: 0, scope: !12625)
!12629 = !DILocation(line: 1816, column: 11, scope: !12625)
!12630 = !DILocation(line: 1816, column: 46, scope: !12625)
!12631 = !DILocation(line: 1816, column: 3, scope: !12625)
!12632 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !12312, file: !12312, line: 2426, type: !12633, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12635)
!12633 = !DISubroutineType(types: !12634)
!12634 = !{null, !1721, !150}
!12635 = !{!12636, !12637}
!12636 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12632, file: !12312, line: 2426, type: !1721)
!12637 = !DILocalVariable(name: "Value", arg: 2, scope: !12632, file: !12312, line: 2426, type: !150)
!12638 = !DILocation(line: 0, scope: !12632)
!12639 = !DILocation(line: 2428, column: 16, scope: !12632)
!12640 = !DILocation(line: 2428, column: 11, scope: !12632)
!12641 = !DILocation(line: 2428, column: 14, scope: !12632)
!12642 = !DILocation(line: 2429, column: 1, scope: !12632)
!12643 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !12312, file: !12312, line: 1792, type: !12313, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12644)
!12644 = !{!12645}
!12645 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12643, file: !12312, line: 1792, type: !1721)
!12646 = !DILocation(line: 0, scope: !12643)
!12647 = !DILocation(line: 1794, column: 11, scope: !12643)
!12648 = !DILocation(line: 1794, column: 47, scope: !12643)
!12649 = !DILocation(line: 1794, column: 3, scope: !12643)
!12650 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !12312, file: !12312, line: 2403, type: !12651, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12653)
!12651 = !DISubroutineType(types: !12652)
!12652 = !{!150, !1721}
!12653 = !{!12654}
!12654 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12650, file: !12312, line: 2403, type: !1721)
!12655 = !DILocation(line: 0, scope: !12650)
!12656 = !DILocation(line: 2405, column: 20, scope: !12650)
!12657 = !DILocation(line: 2405, column: 10, scope: !12650)
!12658 = !DILocation(line: 2405, column: 3, scope: !12650)
!12659 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1777, file: !1777, line: 1583, type: !1701, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12660)
!12660 = !{!12661, !12662, !12663, !12664, !12665, !12666}
!12661 = !DILocalVariable(name: "dev", arg: 1, scope: !12659, file: !1777, line: 1583, type: !1680)
!12662 = !DILocalVariable(name: "config", scope: !12659, file: !1777, line: 1585, type: !12003)
!12663 = !DILocalVariable(name: "data", scope: !12659, file: !1777, line: 1586, type: !12126)
!12664 = !DILocalVariable(name: "ll_parity", scope: !12659, file: !1777, line: 1587, type: !208)
!12665 = !DILocalVariable(name: "ll_datawidth", scope: !12659, file: !1777, line: 1588, type: !208)
!12666 = !DILocalVariable(name: "err", scope: !12659, file: !1777, line: 1589, type: !125)
!12667 = !DILocation(line: 0, scope: !12659)
!12668 = !DILocation(line: 1585, column: 48, scope: !12659)
!12669 = !DILocation(line: 1586, column: 38, scope: !12659)
!12670 = !DILocation(line: 1591, column: 2, scope: !12659)
!12671 = !DILocation(line: 1593, column: 29, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12659, file: !1777, line: 1593, column: 6)
!12673 = !DILocation(line: 1593, column: 7, scope: !12672)
!12674 = !DILocation(line: 1593, column: 6, scope: !12659)
!12675 = !DILocation(line: 1594, column: 3, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12677, file: !1777, line: 1594, column: 3)
!12677 = distinct !DILexicalBlock(scope: !12678, file: !1777, line: 1594, column: 3)
!12678 = distinct !DILexicalBlock(scope: !12679, file: !1777, line: 1594, column: 3)
!12679 = distinct !DILexicalBlock(scope: !12680, file: !1777, line: 1594, column: 3)
!12680 = distinct !DILexicalBlock(scope: !12672, file: !1777, line: 1593, column: 37)
!12681 = !DILocation(line: 1595, column: 3, scope: !12680)
!12682 = !DILocation(line: 1599, column: 31, scope: !12659)
!12683 = !DILocation(line: 1599, column: 71, scope: !12659)
!12684 = !DILocation(line: 1599, column: 8, scope: !12659)
!12685 = !DILocation(line: 1600, column: 10, scope: !12686)
!12686 = distinct !DILexicalBlock(scope: !12659, file: !1777, line: 1600, column: 6)
!12687 = !DILocation(line: 1600, column: 6, scope: !12659)
!12688 = !DILocation(line: 1601, column: 3, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12690, file: !1777, line: 1601, column: 3)
!12690 = distinct !DILexicalBlock(scope: !12691, file: !1777, line: 1601, column: 3)
!12691 = distinct !DILexicalBlock(scope: !12692, file: !1777, line: 1601, column: 3)
!12692 = distinct !DILexicalBlock(scope: !12693, file: !1777, line: 1601, column: 3)
!12693 = distinct !DILexicalBlock(scope: !12686, file: !1777, line: 1600, column: 16)
!12694 = !DILocation(line: 1602, column: 3, scope: !12693)
!12695 = !DILocation(line: 1616, column: 36, scope: !12659)
!12696 = !DILocation(line: 1616, column: 8, scope: !12659)
!12697 = !DILocation(line: 1617, column: 10, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12659, file: !1777, line: 1617, column: 6)
!12699 = !DILocation(line: 1617, column: 6, scope: !12659)
!12700 = !DILocation(line: 1621, column: 27, scope: !12659)
!12701 = !DILocation(line: 1621, column: 2, scope: !12659)
!12702 = !DILocation(line: 1624, column: 40, scope: !12659)
!12703 = !DILocation(line: 1624, column: 2, scope: !12659)
!12704 = !DILocation(line: 1630, column: 14, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12659, file: !1777, line: 1630, column: 6)
!12706 = !DILocation(line: 1630, column: 6, scope: !12659)
!12707 = !DILocation(line: 1640, column: 4, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12709, file: !1777, line: 1640, column: 4)
!12709 = distinct !DILexicalBlock(scope: !12710, file: !1777, line: 1640, column: 4)
!12710 = distinct !DILexicalBlock(scope: !12711, file: !1777, line: 1640, column: 4)
!12711 = distinct !DILexicalBlock(scope: !12712, file: !1777, line: 1640, column: 4)
!12712 = distinct !DILexicalBlock(scope: !12713, file: !1777, line: 1639, column: 28)
!12713 = distinct !DILexicalBlock(scope: !12714, file: !1777, line: 1639, column: 7)
!12714 = distinct !DILexicalBlock(scope: !12715, file: !1777, line: 1638, column: 9)
!12715 = distinct !DILexicalBlock(scope: !12705, file: !1777, line: 1634, column: 13)
!12716 = !DILocation(line: 0, scope: !12705)
!12717 = !DILocation(line: 1649, column: 35, scope: !12659)
!12718 = !DILocation(line: 1649, column: 2, scope: !12659)
!12719 = !DILocation(line: 1654, column: 14, scope: !12720)
!12720 = distinct !DILexicalBlock(scope: !12659, file: !1777, line: 1654, column: 6)
!12721 = !DILocation(line: 1654, column: 6, scope: !12659)
!12722 = !DILocation(line: 1655, column: 3, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12720, file: !1777, line: 1654, column: 31)
!12724 = !DILocation(line: 1656, column: 2, scope: !12723)
!12725 = !DILocation(line: 1659, column: 37, scope: !12659)
!12726 = !DILocation(line: 1659, column: 2, scope: !12659)
!12727 = !DILocation(line: 1662, column: 14, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12659, file: !1777, line: 1662, column: 6)
!12729 = !DILocation(line: 1662, column: 6, scope: !12659)
!12730 = !DILocation(line: 1663, column: 37, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12728, file: !1777, line: 1662, column: 27)
!12732 = !DILocation(line: 1663, column: 3, scope: !12731)
!12733 = !DILocation(line: 1664, column: 2, scope: !12731)
!12734 = !DILocation(line: 1684, column: 26, scope: !12659)
!12735 = !DILocation(line: 1684, column: 2, scope: !12659)
!12736 = !DILocation(line: 1722, column: 2, scope: !12659)
!12737 = !DILocation(line: 1724, column: 1, scope: !12659)
!12738 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1777, file: !1777, line: 651, type: !12739, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12741)
!12739 = !DISubroutineType(types: !12740)
!12740 = !{null, !1680}
!12741 = !{!12742, !12743, !12744}
!12742 = !DILocalVariable(name: "dev", arg: 1, scope: !12738, file: !1777, line: 651, type: !1680)
!12743 = !DILocalVariable(name: "data", scope: !12738, file: !1777, line: 653, type: !12126)
!12744 = !DILocalVariable(name: "clk", scope: !12738, file: !1777, line: 654, type: !12745)
!12745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1680)
!12746 = !DILocation(line: 0, scope: !12738)
!12747 = !DILocation(line: 653, column: 38, scope: !12738)
!12748 = !DILocation(line: 656, column: 8, scope: !12738)
!12749 = !DILocation(line: 656, column: 14, scope: !12738)
!12750 = !DILocation(line: 657, column: 1, scope: !12738)
!12751 = distinct !DISubprogram(name: "device_is_ready", scope: !4183, file: !4183, line: 47, type: !12752, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12754)
!12752 = !DISubroutineType(types: !12753)
!12753 = !{!153, !1680}
!12754 = !{!12755}
!12755 = !DILocalVariable(name: "dev", arg: 1, scope: !12751, file: !4183, line: 47, type: !1680)
!12756 = !DILocation(line: 0, scope: !12751)
!12757 = !DILocation(line: 55, column: 2, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12751, file: !4183, line: 55, column: 2)
!12759 = !{i64 2154350079}
!12760 = !DILocation(line: 56, column: 9, scope: !12751)
!12761 = !DILocation(line: 56, column: 2, scope: !12751)
!12762 = distinct !DISubprogram(name: "clock_control_on", scope: !958, file: !958, line: 123, type: !1739, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12763)
!12763 = !{!12764, !12765, !12766}
!12764 = !DILocalVariable(name: "dev", arg: 1, scope: !12762, file: !958, line: 123, type: !1680)
!12765 = !DILocalVariable(name: "sys", arg: 2, scope: !12762, file: !958, line: 124, type: !1051)
!12766 = !DILocalVariable(name: "api", scope: !12762, file: !958, line: 126, type: !1732)
!12767 = !DILocation(line: 0, scope: !12762)
!12768 = !DILocation(line: 127, column: 49, scope: !12762)
!12769 = !DILocation(line: 129, column: 14, scope: !12762)
!12770 = !DILocation(line: 129, column: 9, scope: !12762)
!12771 = !DILocation(line: 129, column: 2, scope: !12762)
!12772 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1815, file: !1815, line: 342, type: !12773, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12775)
!12773 = !DISubroutineType(types: !12774)
!12774 = !{!125, !1812, !150}
!12775 = !{!12776, !12777, !12778, !12779}
!12776 = !DILocalVariable(name: "config", arg: 1, scope: !12772, file: !1815, line: 342, type: !1812)
!12777 = !DILocalVariable(name: "id", arg: 2, scope: !12772, file: !1815, line: 343, type: !150)
!12778 = !DILocalVariable(name: "ret", scope: !12772, file: !1815, line: 345, type: !125)
!12779 = !DILocalVariable(name: "state", scope: !12772, file: !1815, line: 346, type: !1818)
!12780 = !DILocation(line: 0, scope: !12772)
!12781 = !DILocation(line: 346, column: 2, scope: !12772)
!12782 = !DILocation(line: 348, column: 8, scope: !12772)
!12783 = !DILocation(line: 349, column: 10, scope: !12784)
!12784 = distinct !DILexicalBlock(scope: !12772, file: !1815, line: 349, column: 6)
!12785 = !DILocation(line: 349, column: 6, scope: !12772)
!12786 = !DILocation(line: 353, column: 44, scope: !12772)
!12787 = !DILocation(line: 353, column: 9, scope: !12772)
!12788 = !DILocation(line: 353, column: 2, scope: !12772)
!12789 = !DILocation(line: 354, column: 1, scope: !12772)
!12790 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !12312, file: !12312, line: 497, type: !12484, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12791)
!12791 = !{!12792, !12793, !12794}
!12792 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12790, file: !12312, line: 497, type: !1721)
!12793 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !12790, file: !12312, line: 497, type: !208)
!12794 = !DILocalVariable(name: "val", scope: !12795, file: !12312, line: 499, type: !208)
!12795 = distinct !DILexicalBlock(scope: !12790, file: !12312, line: 499, column: 3)
!12796 = !DILocation(line: 0, scope: !12790)
!12797 = !DILocation(line: 499, column: 3, scope: !12795)
!12798 = !DILocalVariable(name: "addr", arg: 1, scope: !12799, file: !8273, line: 476, type: !1773)
!12799 = distinct !DISubprogram(name: "__LDREXW", scope: !8273, file: !8273, line: 476, type: !12800, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12802)
!12800 = !DISubroutineType(types: !12801)
!12801 = !{!208, !1773}
!12802 = !{!12798, !12803}
!12803 = !DILocalVariable(name: "result", scope: !12799, file: !8273, line: 478, type: !208)
!12804 = !DILocation(line: 0, scope: !12799, inlinedAt: !12805)
!12805 = distinct !DILocation(line: 499, column: 3, scope: !12806)
!12806 = distinct !DILexicalBlock(scope: !12795, file: !12312, line: 499, column: 3)
!12807 = !DILocation(line: 480, column: 4, scope: !12799, inlinedAt: !12805)
!12808 = !{i64 2860928}
!12809 = !DILocation(line: 499, column: 3, scope: !12806)
!12810 = !DILocation(line: 0, scope: !12795)
!12811 = !DILocalVariable(name: "value", arg: 1, scope: !12812, file: !8273, line: 527, type: !208)
!12812 = distinct !DISubprogram(name: "__STREXW", scope: !8273, file: !8273, line: 527, type: !12813, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12815)
!12813 = !DISubroutineType(types: !12814)
!12814 = !{!208, !208, !1773}
!12815 = !{!12811, !12816, !12817}
!12816 = !DILocalVariable(name: "addr", arg: 2, scope: !12812, file: !8273, line: 527, type: !1773)
!12817 = !DILocalVariable(name: "result", scope: !12812, file: !8273, line: 529, type: !208)
!12818 = !DILocation(line: 0, scope: !12812, inlinedAt: !12819)
!12819 = distinct !DILocation(line: 499, column: 3, scope: !12795)
!12820 = !DILocation(line: 531, column: 4, scope: !12812, inlinedAt: !12819)
!12821 = !{i64 2862364}
!12822 = distinct !{!12822, !12797, !12797}
!12823 = !DILocation(line: 500, column: 1, scope: !12790)
!12824 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !12312, file: !12312, line: 850, type: !12493, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12825)
!12825 = !{!12826, !12827, !12828, !12829}
!12826 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12824, file: !12312, line: 850, type: !1721)
!12827 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12824, file: !12312, line: 850, type: !208)
!12828 = !DILocalVariable(name: "Parity", arg: 3, scope: !12824, file: !12312, line: 850, type: !208)
!12829 = !DILocalVariable(name: "StopBits", arg: 4, scope: !12824, file: !12312, line: 851, type: !208)
!12830 = !DILocation(line: 0, scope: !12824)
!12831 = !DILocation(line: 853, column: 3, scope: !12824)
!12832 = !DILocation(line: 854, column: 3, scope: !12824)
!12833 = !DILocation(line: 855, column: 1, scope: !12824)
!12834 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !12312, file: !12312, line: 1337, type: !12375, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12835)
!12835 = !{!12836}
!12836 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12834, file: !12312, line: 1337, type: !1721)
!12837 = !DILocation(line: 0, scope: !12834)
!12838 = !DILocation(line: 1339, column: 3, scope: !12834)
!12839 = !DILocation(line: 1340, column: 1, scope: !12834)
!12840 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1815, file: !1815, line: 316, type: !12841, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12843)
!12841 = !DISubroutineType(types: !12842)
!12842 = !{!125, !1812, !1818}
!12843 = !{!12844, !12845, !12846}
!12844 = !DILocalVariable(name: "config", arg: 1, scope: !12840, file: !1815, line: 317, type: !1812)
!12845 = !DILocalVariable(name: "state", arg: 2, scope: !12840, file: !1815, line: 318, type: !1818)
!12846 = !DILocalVariable(name: "reg", scope: !12840, file: !1815, line: 320, type: !22)
!12847 = !DILocation(line: 0, scope: !12840)
!12848 = !DILocation(line: 329, column: 39, scope: !12840)
!12849 = !DILocation(line: 329, column: 52, scope: !12840)
!12850 = !DILocation(line: 329, column: 9, scope: !12840)
!12851 = !DILocation(line: 329, column: 2, scope: !12840)
!12852 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !12752, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !12853)
!12853 = !{!12854}
!12854 = !DILocalVariable(name: "dev", arg: 1, scope: !12852, file: !137, line: 730, type: !1680)
!12855 = !DILocation(line: 0, scope: !12852)
!12856 = !DILocation(line: 732, column: 9, scope: !12852)
!12857 = !DILocation(line: 732, column: 2, scope: !12852)
!12858 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1938, file: !1938, line: 270, type: !1944, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1860, retainedNodes: !12859)
!12859 = !{!12860}
!12860 = !DILocalVariable(name: "dev", arg: 1, scope: !12858, file: !1938, line: 270, type: !1946)
!12861 = !DILocation(line: 0, scope: !12858)
!12862 = !DILocation(line: 274, column: 2, scope: !12858)
!12863 = !DILocation(line: 275, column: 12, scope: !12858)
!12864 = !DILocation(line: 276, column: 15, scope: !12858)
!12865 = !DILocation(line: 277, column: 16, scope: !12858)
!12866 = !DILocation(line: 278, column: 15, scope: !12858)
!12867 = !DILocation(line: 279, column: 16, scope: !12858)
!12868 = !DILocation(line: 282, column: 2, scope: !12858)
!12869 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8307, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1860, retainedNodes: !12870)
!12870 = !{!12871, !12872}
!12871 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12869, file: !680, line: 1814, type: !914)
!12872 = !DILocalVariable(name: "priority", arg: 2, scope: !12869, file: !680, line: 1814, type: !208)
!12873 = !DILocation(line: 0, scope: !12869)
!12874 = !DILocation(line: 1822, column: 46, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12876, file: !680, line: 1821, column: 3)
!12876 = distinct !DILexicalBlock(scope: !12869, file: !680, line: 1816, column: 7)
!12877 = !DILocation(line: 1824, column: 1, scope: !12869)
!12878 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1938, file: !1938, line: 118, type: !8210, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1860, retainedNodes: !12879)
!12879 = !{!12880, !12881}
!12880 = !DILocalVariable(name: "arg", arg: 1, scope: !12878, file: !1938, line: 118, type: !124)
!12881 = !DILocalVariable(name: "dticks", scope: !12878, file: !1938, line: 121, type: !208)
!12882 = !DILocation(line: 0, scope: !12878)
!12883 = !DILocation(line: 124, column: 2, scope: !12878)
!12884 = !DILocation(line: 129, column: 17, scope: !12878)
!12885 = !DILocation(line: 129, column: 14, scope: !12878)
!12886 = !DILocation(line: 130, column: 15, scope: !12878)
!12887 = !DILocation(line: 145, column: 27, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12889, file: !1938, line: 132, column: 16)
!12889 = distinct !DILexicalBlock(scope: !12878, file: !1938, line: 132, column: 6)
!12890 = !DILocation(line: 145, column: 25, scope: !12888)
!12891 = !DILocation(line: 145, column: 45, scope: !12888)
!12892 = !DILocation(line: 146, column: 30, scope: !12888)
!12893 = !DILocation(line: 146, column: 20, scope: !12888)
!12894 = !DILocation(line: 147, column: 3, scope: !12888)
!12895 = !DILocation(line: 151, column: 2, scope: !12878)
!12896 = !DILocation(line: 152, column: 1, scope: !12878)
!12897 = distinct !DISubprogram(name: "elapsed", scope: !1938, file: !1938, line: 85, type: !8354, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1860, retainedNodes: !12898)
!12898 = !{!12899, !12900, !12901}
!12899 = !DILocalVariable(name: "val1", scope: !12897, file: !1938, line: 87, type: !208)
!12900 = !DILocalVariable(name: "ctrl", scope: !12897, file: !1938, line: 88, type: !208)
!12901 = !DILocalVariable(name: "val2", scope: !12897, file: !1938, line: 89, type: !208)
!12902 = !DILocation(line: 87, column: 27, scope: !12897)
!12903 = !DILocation(line: 0, scope: !12897)
!12904 = !DILocation(line: 88, column: 27, scope: !12897)
!12905 = !DILocation(line: 89, column: 27, scope: !12897)
!12906 = !DILocation(line: 105, column: 12, scope: !12907)
!12907 = distinct !DILexicalBlock(scope: !12897, file: !1938, line: 105, column: 6)
!12908 = !DILocation(line: 106, column: 6, scope: !12907)
!12909 = !DILocation(line: 107, column: 16, scope: !12910)
!12910 = distinct !DILexicalBlock(scope: !12907, file: !1938, line: 106, column: 24)
!12911 = !DILocation(line: 111, column: 18, scope: !12910)
!12912 = !DILocation(line: 112, column: 2, scope: !12910)
!12913 = !DILocation(line: 114, column: 20, scope: !12897)
!12914 = !DILocation(line: 114, column: 30, scope: !12897)
!12915 = !DILocation(line: 114, column: 28, scope: !12897)
!12916 = !DILocation(line: 114, column: 2, scope: !12897)
!12917 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1938, file: !1938, line: 154, type: !12918, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1860, retainedNodes: !12920)
!12918 = !DISubroutineType(types: !12919)
!12919 = !{null, !888, !153}
!12920 = !{!12921, !12922, !12923, !12924, !12925, !12926, !12927, !12932, !12933}
!12921 = !DILocalVariable(name: "ticks", arg: 1, scope: !12917, file: !1938, line: 154, type: !888)
!12922 = !DILocalVariable(name: "idle", arg: 2, scope: !12917, file: !1938, line: 154, type: !153)
!12923 = !DILocalVariable(name: "delay", scope: !12917, file: !1938, line: 169, type: !208)
!12924 = !DILocalVariable(name: "val1", scope: !12917, file: !1938, line: 170, type: !208)
!12925 = !DILocalVariable(name: "val2", scope: !12917, file: !1938, line: 170, type: !208)
!12926 = !DILocalVariable(name: "last_load_", scope: !12917, file: !1938, line: 171, type: !208)
!12927 = !DILocalVariable(name: "key", scope: !12917, file: !1938, line: 176, type: !12928)
!12928 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !638, line: 106, baseType: !12929)
!12929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !638, line: 32, size: 32, elements: !12930)
!12930 = !{!12931}
!12931 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12929, file: !638, line: 33, baseType: !125, size: 32)
!12932 = !DILocalVariable(name: "pending", scope: !12917, file: !1938, line: 178, type: !208)
!12933 = !DILocalVariable(name: "unannounced", scope: !12917, file: !1938, line: 185, type: !208)
!12934 = !DILocation(line: 0, scope: !12917)
!12935 = !DILocation(line: 162, column: 49, scope: !12936)
!12936 = distinct !DILexicalBlock(scope: !12917, file: !1938, line: 162, column: 6)
!12937 = !DILocation(line: 163, column: 17, scope: !12938)
!12938 = distinct !DILexicalBlock(scope: !12936, file: !1938, line: 162, column: 78)
!12939 = !DILocation(line: 164, column: 13, scope: !12938)
!12940 = !DILocation(line: 165, column: 3, scope: !12938)
!12941 = !DILocation(line: 171, column: 24, scope: !12917)
!12942 = !DILocation(line: 173, column: 10, scope: !12917)
!12943 = !DILocation(line: 174, column: 10, scope: !12917)
!12944 = !DILocalVariable(name: "l", arg: 1, scope: !12945, file: !638, line: 136, type: !12948)
!12945 = distinct !DISubprogram(name: "k_spin_lock", scope: !638, file: !638, line: 136, type: !12946, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1860, retainedNodes: !12949)
!12946 = !DISubroutineType(types: !12947)
!12947 = !{!12928, !12948}
!12948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 32)
!12949 = !{!12944, !12950}
!12950 = !DILocalVariable(name: "k", scope: !12945, file: !638, line: 139, type: !12928)
!12951 = !DILocation(line: 0, scope: !12945, inlinedAt: !12952)
!12952 = distinct !DILocation(line: 176, column: 25, scope: !12917)
!12953 = !DILocation(line: 55, column: 2, scope: !12954, inlinedAt: !12958)
!12954 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6806, file: !6806, line: 42, type: !6807, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1860, retainedNodes: !12955)
!12955 = !{!12956, !12957}
!12956 = !DILocalVariable(name: "key", scope: !12954, file: !6806, line: 44, type: !32)
!12957 = !DILocalVariable(name: "tmp", scope: !12954, file: !6806, line: 53, type: !32)
!12958 = distinct !DILocation(line: 145, column: 10, scope: !12945, inlinedAt: !12952)
!12959 = !{i64 1922720}
!12960 = !DILocation(line: 0, scope: !12954, inlinedAt: !12958)
!12961 = !DILocation(line: 178, column: 21, scope: !12917)
!12962 = !DILocation(line: 180, column: 18, scope: !12917)
!12963 = !DILocation(line: 182, column: 14, scope: !12917)
!12964 = !DILocation(line: 183, column: 15, scope: !12917)
!12965 = !DILocation(line: 185, column: 39, scope: !12917)
!12966 = !DILocation(line: 185, column: 37, scope: !12917)
!12967 = !DILocation(line: 187, column: 27, scope: !12968)
!12968 = distinct !DILexicalBlock(scope: !12917, file: !1938, line: 187, column: 6)
!12969 = !DILocation(line: 187, column: 6, scope: !12917)
!12970 = !DILocation(line: 202, column: 27, scope: !12971)
!12971 = distinct !DILexicalBlock(scope: !12968, file: !1938, line: 195, column: 9)
!12972 = !DILocation(line: 202, column: 48, scope: !12971)
!12973 = !DILocation(line: 203, column: 9, scope: !12971)
!12974 = !DILocation(line: 204, column: 11, scope: !12971)
!12975 = !DILocation(line: 205, column: 13, scope: !12976)
!12976 = distinct !DILexicalBlock(scope: !12971, file: !1938, line: 205, column: 7)
!12977 = !DILocation(line: 205, column: 7, scope: !12971)
!12978 = !DILocation(line: 0, scope: !12968)
!12979 = !DILocation(line: 212, column: 18, scope: !12917)
!12980 = !DILocation(line: 214, column: 28, scope: !12917)
!12981 = !DILocation(line: 214, column: 16, scope: !12917)
!12982 = !DILocation(line: 215, column: 15, scope: !12917)
!12983 = !DILocation(line: 227, column: 11, scope: !12984)
!12984 = distinct !DILexicalBlock(scope: !12917, file: !1938, line: 227, column: 6)
!12985 = !DILocation(line: 227, column: 6, scope: !12917)
!12986 = !DILocation(line: 228, column: 15, scope: !12987)
!12987 = distinct !DILexicalBlock(scope: !12984, file: !1938, line: 227, column: 19)
!12988 = !DILocation(line: 228, column: 38, scope: !12987)
!12989 = !DILocation(line: 228, column: 24, scope: !12987)
!12990 = !DILocation(line: 229, column: 2, scope: !12987)
!12991 = !DILocation(line: 230, column: 24, scope: !12992)
!12992 = distinct !DILexicalBlock(scope: !12984, file: !1938, line: 229, column: 9)
!12993 = !DILocation(line: 230, column: 15, scope: !12992)
!12994 = !DILocation(line: 0, scope: !12984)
!12995 = !DILocalVariable(name: "key", arg: 2, scope: !12996, file: !638, line: 190, type: !12928)
!12996 = distinct !DISubprogram(name: "k_spin_unlock", scope: !638, file: !638, line: 189, type: !12997, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1860, retainedNodes: !12999)
!12997 = !DISubroutineType(types: !12998)
!12998 = !{null, !12948, !12928}
!12999 = !{!13000, !12995}
!13000 = !DILocalVariable(name: "l", arg: 1, scope: !12996, file: !638, line: 189, type: !12948)
!13001 = !DILocation(line: 0, scope: !12996, inlinedAt: !13002)
!13002 = distinct !DILocation(line: 232, column: 2, scope: !12917)
!13003 = !DILocalVariable(name: "key", arg: 1, scope: !13004, file: !6806, line: 84, type: !32)
!13004 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6806, file: !6806, line: 84, type: !6817, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1860, retainedNodes: !13005)
!13005 = !{!13003}
!13006 = !DILocation(line: 0, scope: !13004, inlinedAt: !13007)
!13007 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !13002)
!13008 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !13007)
!13009 = !{i64 1923537}
!13010 = !DILocation(line: 234, column: 1, scope: !12917)
!13011 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1938, file: !1938, line: 236, type: !8354, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1860, retainedNodes: !13012)
!13012 = !{!13013, !13014}
!13013 = !DILocalVariable(name: "key", scope: !13011, file: !1938, line: 242, type: !12928)
!13014 = !DILocalVariable(name: "cyc", scope: !13011, file: !1938, line: 243, type: !208)
!13015 = !DILocation(line: 0, scope: !12945, inlinedAt: !13016)
!13016 = distinct !DILocation(line: 242, column: 25, scope: !13011)
!13017 = !DILocation(line: 55, column: 2, scope: !12954, inlinedAt: !13018)
!13018 = distinct !DILocation(line: 145, column: 10, scope: !12945, inlinedAt: !13016)
!13019 = !DILocation(line: 0, scope: !12954, inlinedAt: !13018)
!13020 = !DILocation(line: 0, scope: !13011)
!13021 = !DILocation(line: 243, column: 17, scope: !13011)
!13022 = !DILocation(line: 243, column: 29, scope: !13011)
!13023 = !DILocation(line: 243, column: 27, scope: !13011)
!13024 = !DILocation(line: 243, column: 43, scope: !13011)
!13025 = !DILocation(line: 243, column: 41, scope: !13011)
!13026 = !DILocation(line: 0, scope: !12996, inlinedAt: !13027)
!13027 = distinct !DILocation(line: 245, column: 2, scope: !13011)
!13028 = !DILocation(line: 0, scope: !13004, inlinedAt: !13029)
!13029 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !13027)
!13030 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !13029)
!13031 = !DILocation(line: 246, column: 13, scope: !13011)
!13032 = !DILocation(line: 246, column: 2, scope: !13011)
!13033 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1938, file: !1938, line: 249, type: !8354, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1860, retainedNodes: !13034)
!13034 = !{!13035, !13036}
!13035 = !DILocalVariable(name: "key", scope: !13033, file: !1938, line: 251, type: !12928)
!13036 = !DILocalVariable(name: "ret", scope: !13033, file: !1938, line: 252, type: !208)
!13037 = !DILocation(line: 0, scope: !12945, inlinedAt: !13038)
!13038 = distinct !DILocation(line: 251, column: 25, scope: !13033)
!13039 = !DILocation(line: 55, column: 2, scope: !12954, inlinedAt: !13040)
!13040 = distinct !DILocation(line: 145, column: 10, scope: !12945, inlinedAt: !13038)
!13041 = !DILocation(line: 0, scope: !12954, inlinedAt: !13040)
!13042 = !DILocation(line: 0, scope: !13033)
!13043 = !DILocation(line: 252, column: 17, scope: !13033)
!13044 = !DILocation(line: 252, column: 29, scope: !13033)
!13045 = !DILocation(line: 252, column: 27, scope: !13033)
!13046 = !DILocation(line: 0, scope: !12996, inlinedAt: !13047)
!13047 = distinct !DILocation(line: 254, column: 2, scope: !13033)
!13048 = !DILocation(line: 0, scope: !13004, inlinedAt: !13049)
!13049 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !13047)
!13050 = !DILocation(line: 95, column: 2, scope: !13004, inlinedAt: !13049)
!13051 = !DILocation(line: 255, column: 2, scope: !13033)
!13052 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1938, file: !1938, line: 258, type: !3278, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1860, retainedNodes: !639)
!13053 = !DILocation(line: 260, column: 6, scope: !13054)
!13054 = distinct !DILexicalBlock(scope: !13052, file: !1938, line: 260, column: 6)
!13055 = !DILocation(line: 260, column: 16, scope: !13054)
!13056 = !DILocation(line: 260, column: 6, scope: !13052)
!13057 = !DILocation(line: 261, column: 17, scope: !13058)
!13058 = distinct !DILexicalBlock(scope: !13054, file: !1938, line: 260, column: 34)
!13059 = !DILocation(line: 262, column: 2, scope: !13058)
!13060 = !DILocation(line: 263, column: 1, scope: !13052)
!13061 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1938, file: !1938, line: 265, type: !3278, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1860, retainedNodes: !639)
!13062 = !DILocation(line: 267, column: 16, scope: !13061)
!13063 = !DILocation(line: 268, column: 1, scope: !13061)
!13064 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !13065, file: !13065, line: 9, type: !13066, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3085, retainedNodes: !13089)
!13065 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13066 = !DISubroutineType(types: !13067)
!13067 = !{!125, !13068, !150, !13088}
!13068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13069, size: 32)
!13069 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13070)
!13070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1815, line: 60, size: 64, elements: !13071)
!13071 = !{!13072, !13087}
!13072 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !13070, file: !1815, line: 69, baseType: !13073, size: 32)
!13073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13074, size: 32)
!13074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13075)
!13075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1815, line: 50, size: 64, elements: !13076)
!13076 = !{!13077, !13085, !13086}
!13077 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !13075, file: !1815, line: 52, baseType: !13078, size: 32)
!13078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13079, size: 32)
!13079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13080)
!13080 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1826, line: 37, baseType: !13081)
!13081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1826, line: 32, size: 64, elements: !13082)
!13082 = !{!13083, !13084}
!13083 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !13081, file: !1826, line: 34, baseType: !208, size: 32)
!13084 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !13081, file: !1826, line: 36, baseType: !208, size: 32, offset: 32)
!13085 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !13075, file: !1815, line: 54, baseType: !150, size: 8, offset: 32)
!13086 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !13075, file: !1815, line: 56, baseType: !150, size: 8, offset: 40)
!13087 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !13070, file: !1815, line: 71, baseType: !150, size: 8, offset: 32)
!13088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13073, size: 32)
!13089 = !{!13090, !13091, !13092}
!13090 = !DILocalVariable(name: "config", arg: 1, scope: !13064, file: !13065, line: 9, type: !13068)
!13091 = !DILocalVariable(name: "id", arg: 2, scope: !13064, file: !13065, line: 9, type: !150)
!13092 = !DILocalVariable(name: "state", arg: 3, scope: !13064, file: !13065, line: 10, type: !13088)
!13093 = !DILocation(line: 0, scope: !13064)
!13094 = !DILocation(line: 12, column: 20, scope: !13064)
!13095 = !DILocation(line: 13, column: 27, scope: !13064)
!13096 = !DILocation(line: 13, column: 42, scope: !13064)
!13097 = !DILocation(line: 13, column: 19, scope: !13064)
!13098 = !DILocation(line: 13, column: 16, scope: !13064)
!13099 = !DILocation(line: 13, column: 2, scope: !13064)
!13100 = distinct !{!13100, !13099, !13101}
!13101 = !DILocation(line: 19, column: 2, scope: !13064)
!13102 = !DILocation(line: 14, column: 23, scope: !13103)
!13103 = distinct !DILexicalBlock(scope: !13104, file: !13065, line: 14, column: 7)
!13104 = distinct !DILexicalBlock(scope: !13064, file: !13065, line: 13, column: 54)
!13105 = !DILocation(line: 14, column: 10, scope: !13103)
!13106 = !DILocation(line: 18, column: 11, scope: !13104)
!13107 = !DILocation(line: 14, column: 7, scope: !13104)
!13108 = !DILocation(line: 22, column: 1, scope: !13064)
!13109 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2055, file: !2055, line: 193, type: !13110, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1973, retainedNodes: !13119)
!13110 = !DISubroutineType(types: !13111)
!13111 = !{!125, !13112, !150, !22}
!13112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13113, size: 32)
!13113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13114)
!13114 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1826, line: 37, baseType: !13115)
!13115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1826, line: 32, size: 64, elements: !13116)
!13116 = !{!13117, !13118}
!13117 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !13115, file: !1826, line: 34, baseType: !208, size: 32)
!13118 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !13115, file: !1826, line: 36, baseType: !208, size: 32, offset: 32)
!13119 = !{!13120, !13121, !13122, !13123, !13124, !13125, !13126, !13127, !13129}
!13120 = !DILocalVariable(name: "pins", arg: 1, scope: !13109, file: !2055, line: 193, type: !13112)
!13121 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !13109, file: !2055, line: 193, type: !150)
!13122 = !DILocalVariable(name: "reg", arg: 3, scope: !13109, file: !2055, line: 194, type: !22)
!13123 = !DILocalVariable(name: "pin", scope: !13109, file: !2055, line: 196, type: !208)
!13124 = !DILocalVariable(name: "mux", scope: !13109, file: !2055, line: 196, type: !208)
!13125 = !DILocalVariable(name: "pin_cgf", scope: !13109, file: !2055, line: 197, type: !208)
!13126 = !DILocalVariable(name: "ret", scope: !13109, file: !2055, line: 198, type: !125)
!13127 = !DILocalVariable(name: "i", scope: !13128, file: !2055, line: 209, type: !150)
!13128 = distinct !DILexicalBlock(scope: !13109, file: !2055, line: 209, column: 2)
!13129 = !DILocalVariable(name: "gpio_out", scope: !13130, file: !2055, line: 239, type: !208)
!13130 = distinct !DILexicalBlock(scope: !13131, file: !2055, line: 238, column: 55)
!13131 = distinct !DILexicalBlock(scope: !13132, file: !2055, line: 238, column: 14)
!13132 = distinct !DILexicalBlock(scope: !13133, file: !2055, line: 236, column: 14)
!13133 = distinct !DILexicalBlock(scope: !13134, file: !2055, line: 234, column: 7)
!13134 = distinct !DILexicalBlock(scope: !13135, file: !2055, line: 209, column: 41)
!13135 = distinct !DILexicalBlock(scope: !13128, file: !2055, line: 209, column: 2)
!13136 = !DILocation(line: 0, scope: !13109)
!13137 = !DILocation(line: 0, scope: !13128)
!13138 = !DILocation(line: 209, column: 25, scope: !13135)
!13139 = !DILocation(line: 209, column: 2, scope: !13128)
!13140 = distinct !{!13140, !13139, !13141}
!13141 = !DILocation(line: 259, column: 2, scope: !13128)
!13142 = !DILocation(line: 210, column: 17, scope: !13134)
!13143 = !DILocation(line: 234, column: 7, scope: !13133)
!13144 = !DILocation(line: 234, column: 33, scope: !13133)
!13145 = !DILocation(line: 234, column: 7, scope: !13134)
!13146 = !DILocation(line: 235, column: 22, scope: !13147)
!13147 = distinct !DILexicalBlock(scope: !13133, file: !2055, line: 234, column: 49)
!13148 = !DILocation(line: 235, column: 29, scope: !13147)
!13149 = !DILocation(line: 236, column: 3, scope: !13147)
!13150 = !DILocation(line: 236, column: 14, scope: !13133)
!13151 = !DILocation(line: 239, column: 32, scope: !13130)
!13152 = !DILocation(line: 0, scope: !13130)
!13153 = !DILocation(line: 241, column: 8, scope: !13130)
!13154 = !DILocation(line: 246, column: 3, scope: !13130)
!13155 = !DILocation(line: 252, column: 9, scope: !13134)
!13156 = !DILocation(line: 255, column: 9, scope: !13134)
!13157 = !DILocation(line: 256, column: 11, scope: !13158)
!13158 = distinct !DILexicalBlock(scope: !13134, file: !2055, line: 256, column: 7)
!13159 = !DILocation(line: 209, column: 37, scope: !13135)
!13160 = !DILocation(line: 256, column: 7, scope: !13134)
!13161 = !DILocation(line: 262, column: 1, scope: !13109)
!13162 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !2055, file: !2055, line: 176, type: !13163, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1973, retainedNodes: !13165)
!13163 = !DISubroutineType(types: !13164)
!13164 = !{!125, !208, !208, !208}
!13165 = !{!13166, !13167, !13168, !13169}
!13166 = !DILocalVariable(name: "pin", arg: 1, scope: !13162, file: !2055, line: 176, type: !208)
!13167 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !13162, file: !2055, line: 176, type: !208)
!13168 = !DILocalVariable(name: "pin_func", arg: 3, scope: !13162, file: !2055, line: 176, type: !208)
!13169 = !DILocalVariable(name: "port_device", scope: !13162, file: !2055, line: 178, type: !1985)
!13170 = !DILocation(line: 0, scope: !13162)
!13171 = !DILocation(line: 180, column: 22, scope: !13172)
!13172 = distinct !DILexicalBlock(scope: !13162, file: !2055, line: 180, column: 6)
!13173 = !DILocation(line: 180, column: 6, scope: !13162)
!13174 = !DILocation(line: 180, column: 6, scope: !13172)
!13175 = !DILocation(line: 184, column: 16, scope: !13162)
!13176 = !DILocation(line: 186, column: 19, scope: !13177)
!13177 = distinct !DILexicalBlock(scope: !13162, file: !2055, line: 186, column: 6)
!13178 = !DILocation(line: 186, column: 28, scope: !13177)
!13179 = !DILocation(line: 186, column: 33, scope: !13177)
!13180 = !DILocation(line: 186, column: 6, scope: !13162)
!13181 = !DILocation(line: 190, column: 43, scope: !13162)
!13182 = !DILocation(line: 190, column: 9, scope: !13162)
!13183 = !DILocation(line: 190, column: 2, scope: !13162)
!13184 = !DILocation(line: 191, column: 1, scope: !13162)
!13185 = distinct !DISubprogram(name: "device_is_ready", scope: !4183, file: !4183, line: 47, type: !13186, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1973, retainedNodes: !13188)
!13186 = !DISubroutineType(types: !13187)
!13187 = !{!153, !1985}
!13188 = !{!13189}
!13189 = !DILocalVariable(name: "dev", arg: 1, scope: !13185, file: !4183, line: 47, type: !1985)
!13190 = !DILocation(line: 0, scope: !13185)
!13191 = !DILocation(line: 55, column: 2, scope: !13192)
!13192 = distinct !DILexicalBlock(scope: !13185, file: !4183, line: 55, column: 2)
!13193 = !{i64 2149156729}
!13194 = !DILocation(line: 56, column: 9, scope: !13185)
!13195 = !DILocation(line: 56, column: 2, scope: !13185)
!13196 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !13186, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1973, retainedNodes: !13197)
!13197 = !{!13198}
!13198 = !DILocalVariable(name: "dev", arg: 1, scope: !13196, file: !137, line: 730, type: !1985)
!13199 = !DILocation(line: 0, scope: !13196)
!13200 = !DILocation(line: 732, column: 9, scope: !13196)
!13201 = !DILocation(line: 732, column: 2, scope: !13196)
!13202 = distinct !DISubprogram(name: "SystemInit", scope: !2105, file: !2105, line: 167, type: !3278, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2063, retainedNodes: !639)
!13203 = !DILocation(line: 182, column: 1, scope: !13202)
!13204 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2105, file: !2105, line: 220, type: !3278, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2063, retainedNodes: !13205)
!13205 = !{!13206, !13207, !13208, !13209, !13210}
!13206 = !DILocalVariable(name: "tmp", scope: !13204, file: !2105, line: 222, type: !208)
!13207 = !DILocalVariable(name: "pllvco", scope: !13204, file: !2105, line: 222, type: !208)
!13208 = !DILocalVariable(name: "pllp", scope: !13204, file: !2105, line: 222, type: !208)
!13209 = !DILocalVariable(name: "pllsource", scope: !13204, file: !2105, line: 222, type: !208)
!13210 = !DILocalVariable(name: "pllm", scope: !13204, file: !2105, line: 222, type: !208)
!13211 = !DILocation(line: 0, scope: !13204)
!13212 = !DILocation(line: 225, column: 14, scope: !13204)
!13213 = !DILocation(line: 225, column: 19, scope: !13204)
!13214 = !DILocation(line: 227, column: 3, scope: !13204)
!13215 = !DILocation(line: 234, column: 7, scope: !13216)
!13216 = distinct !DILexicalBlock(scope: !13204, file: !2105, line: 228, column: 3)
!13217 = !DILocation(line: 240, column: 25, scope: !13216)
!13218 = !DILocation(line: 241, column: 19, scope: !13216)
!13219 = !DILocation(line: 241, column: 27, scope: !13216)
!13220 = !DILocation(line: 243, column: 21, scope: !13221)
!13221 = distinct !DILexicalBlock(scope: !13216, file: !2105, line: 243, column: 11)
!13222 = !DILocation(line: 0, scope: !13221)
!13223 = !DILocation(line: 254, column: 22, scope: !13216)
!13224 = !DILocation(line: 254, column: 62, scope: !13216)
!13225 = !DILocation(line: 255, column: 31, scope: !13216)
!13226 = !DILocation(line: 256, column: 7, scope: !13216)
!13227 = !DILocation(line: 0, scope: !13216)
!13228 = !DILocation(line: 263, column: 30, scope: !13204)
!13229 = !DILocation(line: 263, column: 52, scope: !13204)
!13230 = !DILocation(line: 263, column: 9, scope: !13204)
!13231 = !DILocation(line: 265, column: 19, scope: !13204)
!13232 = !DILocation(line: 266, column: 1, scope: !13204)
!13233 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !13234, file: !13234, line: 200, type: !13235, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !639)
!13234 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13235 = !DISubroutineType(types: !13236)
!13236 = !{!13237}
!13237 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3091, line: 44, baseType: !3090)
!13238 = !DILocation(line: 202, column: 3, scope: !13233)
!13239 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !13234, file: !13234, line: 219, type: !13240, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !13264)
!13240 = !DISubroutineType(types: !13241)
!13241 = !{!13237, !13242}
!13242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13243, size: 32)
!13243 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !13244, line: 70, baseType: !13245)
!13244 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13245 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13244, line: 49, size: 384, elements: !13246)
!13246 = !{!13247, !13248, !13249, !13250, !13251, !13252, !13253}
!13247 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !13245, file: !13244, line: 51, baseType: !208, size: 32)
!13248 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !13245, file: !13244, line: 54, baseType: !208, size: 32, offset: 32)
!13249 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !13245, file: !13244, line: 57, baseType: !208, size: 32, offset: 64)
!13250 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !13245, file: !13244, line: 60, baseType: !208, size: 32, offset: 96)
!13251 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !13245, file: !13244, line: 63, baseType: !208, size: 32, offset: 128)
!13252 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !13245, file: !13244, line: 66, baseType: !208, size: 32, offset: 160)
!13253 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !13245, file: !13244, line: 69, baseType: !13254, size: 192, offset: 192)
!13254 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !13255, line: 73, baseType: !13256)
!13255 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13256 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13255, line: 45, size: 192, elements: !13257)
!13257 = !{!13258, !13259, !13260, !13261, !13262, !13263}
!13258 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !13256, file: !13255, line: 47, baseType: !208, size: 32)
!13259 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !13256, file: !13255, line: 50, baseType: !208, size: 32, offset: 32)
!13260 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13256, file: !13255, line: 53, baseType: !208, size: 32, offset: 64)
!13261 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13256, file: !13255, line: 56, baseType: !208, size: 32, offset: 96)
!13262 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13256, file: !13255, line: 60, baseType: !208, size: 32, offset: 128)
!13263 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !13256, file: !13255, line: 63, baseType: !208, size: 32, offset: 160)
!13264 = !{!13265, !13266, !13267, !13268, !13272}
!13265 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13239, file: !13234, line: 219, type: !13242)
!13266 = !DILocalVariable(name: "tickstart", scope: !13239, file: !13234, line: 221, type: !208)
!13267 = !DILocalVariable(name: "pll_config", scope: !13239, file: !13234, line: 221, type: !208)
!13268 = !DILocalVariable(name: "pwrclkchanged", scope: !13269, file: !13234, line: 391, type: !13271)
!13269 = distinct !DILexicalBlock(scope: !13270, file: !13234, line: 390, column: 3)
!13270 = distinct !DILexicalBlock(scope: !13239, file: !13234, line: 389, column: 6)
!13271 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !953, line: 188, baseType: !3097)
!13272 = !DILocalVariable(name: "tmpreg", scope: !13273, file: !13234, line: 400, type: !423)
!13273 = distinct !DILexicalBlock(scope: !13274, file: !13234, line: 400, column: 7)
!13274 = distinct !DILexicalBlock(scope: !13275, file: !13234, line: 399, column: 5)
!13275 = distinct !DILexicalBlock(scope: !13269, file: !13234, line: 398, column: 8)
!13276 = !DILocation(line: 0, scope: !13239)
!13277 = !DILocation(line: 224, column: 24, scope: !13278)
!13278 = distinct !DILexicalBlock(scope: !13239, file: !13234, line: 224, column: 6)
!13279 = !DILocation(line: 224, column: 6, scope: !13239)
!13280 = !DILocation(line: 232, column: 27, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13239, file: !13234, line: 232, column: 6)
!13282 = !DILocation(line: 232, column: 43, scope: !13281)
!13283 = !DILocation(line: 232, column: 69, scope: !13281)
!13284 = !DILocation(line: 232, column: 6, scope: !13239)
!13285 = !DILocation(line: 237, column: 9, scope: !13286)
!13286 = distinct !DILexicalBlock(scope: !13287, file: !13234, line: 237, column: 8)
!13287 = distinct !DILexicalBlock(scope: !13281, file: !13234, line: 233, column: 3)
!13288 = !DILocation(line: 237, column: 39, scope: !13286)
!13289 = !DILocation(line: 237, column: 60, scope: !13286)
!13290 = !DILocation(line: 238, column: 9, scope: !13286)
!13291 = !DILocation(line: 238, column: 39, scope: !13286)
!13292 = !DILocation(line: 238, column: 60, scope: !13286)
!13293 = !DILocation(line: 238, column: 70, scope: !13286)
!13294 = !DILocation(line: 238, column: 78, scope: !13286)
!13295 = !DILocation(line: 238, column: 100, scope: !13286)
!13296 = !DILocation(line: 237, column: 8, scope: !13287)
!13297 = !DILocation(line: 240, column: 11, scope: !13298)
!13298 = distinct !DILexicalBlock(scope: !13299, file: !13234, line: 240, column: 10)
!13299 = distinct !DILexicalBlock(scope: !13286, file: !13234, line: 239, column: 5)
!13300 = !DILocation(line: 240, column: 57, scope: !13298)
!13301 = !DILocation(line: 240, column: 80, scope: !13298)
!13302 = !DILocation(line: 240, column: 89, scope: !13298)
!13303 = !DILocation(line: 240, column: 10, scope: !13299)
!13304 = !DILocation(line: 248, column: 7, scope: !13305)
!13305 = distinct !DILexicalBlock(scope: !13306, file: !13234, line: 248, column: 7)
!13306 = distinct !DILexicalBlock(scope: !13307, file: !13234, line: 248, column: 7)
!13307 = distinct !DILexicalBlock(scope: !13286, file: !13234, line: 246, column: 5)
!13308 = !DILocation(line: 248, column: 7, scope: !13306)
!13309 = !DILocation(line: 248, column: 7, scope: !13310)
!13310 = distinct !DILexicalBlock(scope: !13305, file: !13234, line: 248, column: 7)
!13311 = !DILocation(line: 248, column: 7, scope: !13312)
!13312 = distinct !DILexicalBlock(scope: !13313, file: !13234, line: 248, column: 7)
!13313 = distinct !DILexicalBlock(scope: !13305, file: !13234, line: 248, column: 7)
!13314 = !DILocation(line: 248, column: 7, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !13313, file: !13234, line: 248, column: 7)
!13316 = !DILocation(line: 0, scope: !13305)
!13317 = !DILocation(line: 251, column: 30, scope: !13318)
!13318 = distinct !DILexicalBlock(scope: !13307, file: !13234, line: 251, column: 10)
!13319 = !DILocation(line: 251, column: 40, scope: !13318)
!13320 = !DILocation(line: 0, scope: !13318)
!13321 = !DILocation(line: 251, column: 10, scope: !13307)
!13322 = !DILocation(line: 257, column: 15, scope: !13323)
!13323 = distinct !DILexicalBlock(scope: !13318, file: !13234, line: 252, column: 7)
!13324 = !DILocation(line: 257, column: 51, scope: !13323)
!13325 = !DILocation(line: 257, column: 9, scope: !13323)
!13326 = !DILocation(line: 259, column: 15, scope: !13327)
!13327 = distinct !DILexicalBlock(scope: !13328, file: !13234, line: 259, column: 14)
!13328 = distinct !DILexicalBlock(scope: !13323, file: !13234, line: 258, column: 9)
!13329 = !DILocation(line: 259, column: 29, scope: !13327)
!13330 = !DILocation(line: 259, column: 43, scope: !13327)
!13331 = !DILocation(line: 259, column: 14, scope: !13328)
!13332 = distinct !{!13332, !13325, !13333}
!13333 = !DILocation(line: 263, column: 9, scope: !13323)
!13334 = !DILocation(line: 271, column: 15, scope: !13335)
!13335 = distinct !DILexicalBlock(scope: !13318, file: !13234, line: 266, column: 7)
!13336 = !DILocation(line: 271, column: 9, scope: !13335)
!13337 = !DILocation(line: 273, column: 15, scope: !13338)
!13338 = distinct !DILexicalBlock(scope: !13339, file: !13234, line: 273, column: 14)
!13339 = distinct !DILexicalBlock(scope: !13335, file: !13234, line: 272, column: 9)
!13340 = !DILocation(line: 273, column: 29, scope: !13338)
!13341 = !DILocation(line: 273, column: 43, scope: !13338)
!13342 = !DILocation(line: 273, column: 14, scope: !13339)
!13343 = distinct !{!13343, !13336, !13344}
!13344 = !DILocation(line: 277, column: 9, scope: !13335)
!13345 = !DILocation(line: 282, column: 27, scope: !13346)
!13346 = distinct !DILexicalBlock(scope: !13239, file: !13234, line: 282, column: 6)
!13347 = !DILocation(line: 282, column: 43, scope: !13346)
!13348 = !DILocation(line: 282, column: 69, scope: !13346)
!13349 = !DILocation(line: 282, column: 6, scope: !13239)
!13350 = !DILocation(line: 289, column: 9, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13352, file: !13234, line: 289, column: 8)
!13352 = distinct !DILexicalBlock(scope: !13346, file: !13234, line: 283, column: 3)
!13353 = !DILocation(line: 289, column: 39, scope: !13351)
!13354 = !DILocation(line: 289, column: 60, scope: !13351)
!13355 = !DILocation(line: 290, column: 9, scope: !13351)
!13356 = !DILocation(line: 290, column: 39, scope: !13351)
!13357 = !DILocation(line: 290, column: 60, scope: !13351)
!13358 = !DILocation(line: 290, column: 70, scope: !13351)
!13359 = !DILocation(line: 290, column: 78, scope: !13351)
!13360 = !DILocation(line: 290, column: 100, scope: !13351)
!13361 = !DILocation(line: 289, column: 8, scope: !13352)
!13362 = !DILocation(line: 293, column: 11, scope: !13363)
!13363 = distinct !DILexicalBlock(scope: !13364, file: !13234, line: 293, column: 10)
!13364 = distinct !DILexicalBlock(scope: !13351, file: !13234, line: 291, column: 5)
!13365 = !DILocation(line: 293, column: 57, scope: !13363)
!13366 = !DILocation(line: 293, column: 80, scope: !13363)
!13367 = !DILocation(line: 293, column: 89, scope: !13363)
!13368 = !DILocation(line: 293, column: 10, scope: !13364)
!13369 = !DILocation(line: 307, column: 30, scope: !13370)
!13370 = distinct !DILexicalBlock(scope: !13371, file: !13234, line: 307, column: 10)
!13371 = distinct !DILexicalBlock(scope: !13351, file: !13234, line: 305, column: 5)
!13372 = !DILocation(line: 307, column: 39, scope: !13370)
!13373 = !DILocation(line: 307, column: 10, scope: !13371)
!13374 = !DILocation(line: 310, column: 9, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13370, file: !13234, line: 308, column: 7)
!13376 = !DILocation(line: 313, column: 21, scope: !13375)
!13377 = !DILocation(line: 316, column: 9, scope: !13375)
!13378 = !DILocation(line: 316, column: 15, scope: !13375)
!13379 = !DILocation(line: 316, column: 51, scope: !13375)
!13380 = !DILocation(line: 318, column: 15, scope: !13381)
!13381 = distinct !DILexicalBlock(scope: !13382, file: !13234, line: 318, column: 14)
!13382 = distinct !DILexicalBlock(scope: !13375, file: !13234, line: 317, column: 9)
!13383 = !DILocation(line: 318, column: 29, scope: !13381)
!13384 = !DILocation(line: 318, column: 43, scope: !13381)
!13385 = !DILocation(line: 318, column: 14, scope: !13382)
!13386 = distinct !{!13386, !13377, !13387}
!13387 = !DILocation(line: 322, column: 9, scope: !13375)
!13388 = !DILocation(line: 330, column: 9, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13370, file: !13234, line: 328, column: 7)
!13390 = !DILocation(line: 333, column: 21, scope: !13389)
!13391 = !DILocation(line: 336, column: 9, scope: !13389)
!13392 = !DILocation(line: 336, column: 15, scope: !13389)
!13393 = !DILocation(line: 338, column: 15, scope: !13394)
!13394 = distinct !DILexicalBlock(scope: !13395, file: !13234, line: 338, column: 14)
!13395 = distinct !DILexicalBlock(scope: !13389, file: !13234, line: 337, column: 9)
!13396 = !DILocation(line: 338, column: 29, scope: !13394)
!13397 = !DILocation(line: 338, column: 43, scope: !13394)
!13398 = !DILocation(line: 338, column: 14, scope: !13395)
!13399 = distinct !{!13399, !13391, !13400}
!13400 = !DILocation(line: 342, column: 9, scope: !13389)
!13401 = !DILocation(line: 0, scope: !13351)
!13402 = !DILocation(line: 347, column: 27, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13239, file: !13234, line: 347, column: 6)
!13404 = !DILocation(line: 347, column: 43, scope: !13403)
!13405 = !DILocation(line: 347, column: 69, scope: !13403)
!13406 = !DILocation(line: 347, column: 6, scope: !13239)
!13407 = !DILocation(line: 353, column: 28, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13409, file: !13234, line: 353, column: 8)
!13409 = distinct !DILexicalBlock(scope: !13403, file: !13234, line: 348, column: 3)
!13410 = !DILocation(line: 353, column: 37, scope: !13408)
!13411 = !DILocation(line: 353, column: 8, scope: !13409)
!13412 = !DILocation(line: 356, column: 7, scope: !13413)
!13413 = distinct !DILexicalBlock(scope: !13408, file: !13234, line: 354, column: 5)
!13414 = !DILocation(line: 359, column: 19, scope: !13413)
!13415 = !DILocation(line: 362, column: 7, scope: !13413)
!13416 = !DILocation(line: 362, column: 13, scope: !13413)
!13417 = !DILocation(line: 362, column: 49, scope: !13413)
!13418 = !DILocation(line: 364, column: 13, scope: !13419)
!13419 = distinct !DILexicalBlock(scope: !13420, file: !13234, line: 364, column: 12)
!13420 = distinct !DILexicalBlock(scope: !13413, file: !13234, line: 363, column: 7)
!13421 = !DILocation(line: 364, column: 27, scope: !13419)
!13422 = !DILocation(line: 364, column: 41, scope: !13419)
!13423 = !DILocation(line: 364, column: 12, scope: !13420)
!13424 = distinct !{!13424, !13415, !13425}
!13425 = !DILocation(line: 368, column: 7, scope: !13413)
!13426 = !DILocation(line: 373, column: 7, scope: !13427)
!13427 = distinct !DILexicalBlock(scope: !13408, file: !13234, line: 371, column: 5)
!13428 = !DILocation(line: 376, column: 19, scope: !13427)
!13429 = !DILocation(line: 379, column: 7, scope: !13427)
!13430 = !DILocation(line: 379, column: 13, scope: !13427)
!13431 = !DILocation(line: 381, column: 13, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13433, file: !13234, line: 381, column: 12)
!13433 = distinct !DILexicalBlock(scope: !13427, file: !13234, line: 380, column: 7)
!13434 = !DILocation(line: 381, column: 27, scope: !13432)
!13435 = !DILocation(line: 381, column: 41, scope: !13432)
!13436 = !DILocation(line: 381, column: 12, scope: !13433)
!13437 = distinct !{!13437, !13429, !13438}
!13438 = !DILocation(line: 385, column: 7, scope: !13427)
!13439 = !DILocation(line: 389, column: 27, scope: !13270)
!13440 = !DILocation(line: 389, column: 43, scope: !13270)
!13441 = !DILocation(line: 389, column: 69, scope: !13270)
!13442 = !DILocation(line: 389, column: 6, scope: !13239)
!13443 = !DILocation(line: 0, scope: !13269)
!13444 = !DILocation(line: 398, column: 8, scope: !13275)
!13445 = !DILocation(line: 398, column: 8, scope: !13269)
!13446 = !DILocation(line: 400, column: 7, scope: !13273)
!13447 = !DILocation(line: 400, column: 7, scope: !13274)
!13448 = !DILocation(line: 402, column: 5, scope: !13274)
!13449 = !DILocation(line: 404, column: 8, scope: !13450)
!13450 = distinct !DILexicalBlock(scope: !13269, file: !13234, line: 404, column: 8)
!13451 = !DILocation(line: 404, column: 8, scope: !13269)
!13452 = !DILocation(line: 407, column: 7, scope: !13453)
!13453 = distinct !DILexicalBlock(scope: !13450, file: !13234, line: 405, column: 5)
!13454 = !DILocation(line: 410, column: 19, scope: !13453)
!13455 = !DILocation(line: 412, column: 7, scope: !13453)
!13456 = !DILocation(line: 412, column: 13, scope: !13453)
!13457 = !DILocation(line: 414, column: 13, scope: !13458)
!13458 = distinct !DILexicalBlock(scope: !13459, file: !13234, line: 414, column: 12)
!13459 = distinct !DILexicalBlock(scope: !13453, file: !13234, line: 413, column: 7)
!13460 = !DILocation(line: 414, column: 27, scope: !13458)
!13461 = !DILocation(line: 414, column: 40, scope: !13458)
!13462 = !DILocation(line: 414, column: 12, scope: !13459)
!13463 = distinct !{!13463, !13455, !13464}
!13464 = !DILocation(line: 418, column: 7, scope: !13453)
!13465 = !DILocation(line: 422, column: 5, scope: !13466)
!13466 = distinct !DILexicalBlock(scope: !13467, file: !13234, line: 422, column: 5)
!13467 = distinct !DILexicalBlock(scope: !13269, file: !13234, line: 422, column: 5)
!13468 = !DILocation(line: 422, column: 5, scope: !13467)
!13469 = !DILocation(line: 422, column: 5, scope: !13470)
!13470 = distinct !DILexicalBlock(scope: !13466, file: !13234, line: 422, column: 5)
!13471 = !DILocation(line: 422, column: 5, scope: !13472)
!13472 = distinct !DILexicalBlock(scope: !13473, file: !13234, line: 422, column: 5)
!13473 = distinct !DILexicalBlock(scope: !13466, file: !13234, line: 422, column: 5)
!13474 = !DILocation(line: 422, column: 5, scope: !13475)
!13475 = distinct !DILexicalBlock(scope: !13473, file: !13234, line: 422, column: 5)
!13476 = !DILocation(line: 0, scope: !13466)
!13477 = !DILocation(line: 424, column: 28, scope: !13478)
!13478 = distinct !DILexicalBlock(scope: !13269, file: !13234, line: 424, column: 8)
!13479 = !DILocation(line: 424, column: 38, scope: !13478)
!13480 = !DILocation(line: 0, scope: !13478)
!13481 = !DILocation(line: 424, column: 8, scope: !13269)
!13482 = !DILocation(line: 430, column: 13, scope: !13483)
!13483 = distinct !DILexicalBlock(scope: !13478, file: !13234, line: 425, column: 5)
!13484 = !DILocation(line: 430, column: 49, scope: !13483)
!13485 = !DILocation(line: 430, column: 7, scope: !13483)
!13486 = !DILocation(line: 432, column: 13, scope: !13487)
!13487 = distinct !DILexicalBlock(scope: !13488, file: !13234, line: 432, column: 12)
!13488 = distinct !DILexicalBlock(scope: !13483, file: !13234, line: 431, column: 7)
!13489 = !DILocation(line: 432, column: 27, scope: !13487)
!13490 = !DILocation(line: 432, column: 41, scope: !13487)
!13491 = !DILocation(line: 432, column: 12, scope: !13488)
!13492 = distinct !{!13492, !13485, !13493}
!13493 = !DILocation(line: 436, column: 7, scope: !13483)
!13494 = !DILocation(line: 444, column: 13, scope: !13495)
!13495 = distinct !DILexicalBlock(scope: !13478, file: !13234, line: 439, column: 5)
!13496 = !DILocation(line: 444, column: 7, scope: !13495)
!13497 = !DILocation(line: 446, column: 13, scope: !13498)
!13498 = distinct !DILexicalBlock(scope: !13499, file: !13234, line: 446, column: 12)
!13499 = distinct !DILexicalBlock(scope: !13495, file: !13234, line: 445, column: 7)
!13500 = !DILocation(line: 446, column: 27, scope: !13498)
!13501 = !DILocation(line: 446, column: 41, scope: !13498)
!13502 = !DILocation(line: 446, column: 12, scope: !13499)
!13503 = distinct !{!13503, !13496, !13504}
!13504 = !DILocation(line: 450, column: 7, scope: !13495)
!13505 = !DILocation(line: 454, column: 8, scope: !13269)
!13506 = !DILocation(line: 456, column: 7, scope: !13507)
!13507 = distinct !DILexicalBlock(scope: !13508, file: !13234, line: 455, column: 5)
!13508 = distinct !DILexicalBlock(scope: !13269, file: !13234, line: 454, column: 8)
!13509 = !DILocation(line: 457, column: 5, scope: !13507)
!13510 = !DILocation(line: 462, column: 31, scope: !13511)
!13511 = distinct !DILexicalBlock(scope: !13239, file: !13234, line: 462, column: 7)
!13512 = !DILocation(line: 462, column: 41, scope: !13511)
!13513 = !DILocation(line: 462, column: 7, scope: !13239)
!13514 = !DILocation(line: 465, column: 8, scope: !13515)
!13515 = distinct !DILexicalBlock(scope: !13516, file: !13234, line: 465, column: 8)
!13516 = distinct !DILexicalBlock(scope: !13511, file: !13234, line: 463, column: 3)
!13517 = !DILocation(line: 465, column: 38, scope: !13515)
!13518 = !DILocation(line: 465, column: 8, scope: !13516)
!13519 = !DILocation(line: 467, column: 44, scope: !13520)
!13520 = distinct !DILexicalBlock(scope: !13521, file: !13234, line: 467, column: 10)
!13521 = distinct !DILexicalBlock(scope: !13515, file: !13234, line: 466, column: 5)
!13522 = !DILocation(line: 0, scope: !13520)
!13523 = !DILocation(line: 467, column: 10, scope: !13521)
!13524 = !DILocation(line: 483, column: 15, scope: !13525)
!13525 = distinct !DILexicalBlock(scope: !13520, file: !13234, line: 468, column: 7)
!13526 = !DILocation(line: 483, column: 9, scope: !13525)
!13527 = !DILocation(line: 485, column: 15, scope: !13528)
!13528 = distinct !DILexicalBlock(scope: !13529, file: !13234, line: 485, column: 14)
!13529 = distinct !DILexicalBlock(scope: !13525, file: !13234, line: 484, column: 9)
!13530 = !DILocation(line: 485, column: 29, scope: !13528)
!13531 = !DILocation(line: 485, column: 43, scope: !13528)
!13532 = !DILocation(line: 485, column: 14, scope: !13529)
!13533 = distinct !{!13533, !13526, !13534}
!13534 = !DILocation(line: 489, column: 9, scope: !13525)
!13535 = !DILocation(line: 492, column: 9, scope: !13525)
!13536 = !DILocation(line: 498, column: 9, scope: !13525)
!13537 = !DILocation(line: 501, column: 21, scope: !13525)
!13538 = !DILocation(line: 504, column: 9, scope: !13525)
!13539 = !DILocation(line: 504, column: 15, scope: !13525)
!13540 = !DILocation(line: 504, column: 51, scope: !13525)
!13541 = !DILocation(line: 506, column: 15, scope: !13542)
!13542 = distinct !DILexicalBlock(scope: !13543, file: !13234, line: 506, column: 14)
!13543 = distinct !DILexicalBlock(scope: !13525, file: !13234, line: 505, column: 9)
!13544 = !DILocation(line: 506, column: 29, scope: !13542)
!13545 = !DILocation(line: 506, column: 43, scope: !13542)
!13546 = !DILocation(line: 506, column: 14, scope: !13543)
!13547 = distinct !{!13547, !13538, !13548}
!13548 = !DILocation(line: 510, column: 9, scope: !13525)
!13549 = !DILocation(line: 521, column: 15, scope: !13550)
!13550 = distinct !DILexicalBlock(scope: !13520, file: !13234, line: 513, column: 7)
!13551 = !DILocation(line: 521, column: 9, scope: !13550)
!13552 = !DILocation(line: 523, column: 15, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13554, file: !13234, line: 523, column: 14)
!13554 = distinct !DILexicalBlock(scope: !13550, file: !13234, line: 522, column: 9)
!13555 = !DILocation(line: 523, column: 29, scope: !13553)
!13556 = !DILocation(line: 523, column: 43, scope: !13553)
!13557 = !DILocation(line: 523, column: 14, scope: !13554)
!13558 = distinct !{!13558, !13551, !13559}
!13559 = !DILocation(line: 527, column: 9, scope: !13550)
!13560 = !DILocation(line: 533, column: 44, scope: !13561)
!13561 = distinct !DILexicalBlock(scope: !13562, file: !13234, line: 533, column: 10)
!13562 = distinct !DILexicalBlock(scope: !13515, file: !13234, line: 531, column: 5)
!13563 = !DILocation(line: 533, column: 10, scope: !13562)
!13564 = !DILocation(line: 540, column: 27, scope: !13565)
!13565 = distinct !DILexicalBlock(scope: !13561, file: !13234, line: 538, column: 7)
!13566 = !DILocation(line: 551, column: 14, scope: !13567)
!13567 = distinct !DILexicalBlock(scope: !13565, file: !13234, line: 550, column: 13)
!13568 = !DILocation(line: 551, column: 81, scope: !13567)
!13569 = !DILocation(line: 551, column: 55, scope: !13567)
!13570 = !DILocation(line: 551, column: 92, scope: !13567)
!13571 = !DILocation(line: 552, column: 14, scope: !13567)
!13572 = !DILocation(line: 552, column: 80, scope: !13567)
!13573 = !DILocation(line: 552, column: 53, scope: !13567)
!13574 = !DILocation(line: 552, column: 111, scope: !13567)
!13575 = !DILocation(line: 553, column: 14, scope: !13567)
!13576 = !DILocation(line: 553, column: 80, scope: !13567)
!13577 = !DILocation(line: 553, column: 86, scope: !13567)
!13578 = !DILocation(line: 553, column: 53, scope: !13567)
!13579 = !DILocation(line: 553, column: 111, scope: !13567)
!13580 = !DILocation(line: 554, column: 14, scope: !13567)
!13581 = !DILocation(line: 554, column: 82, scope: !13567)
!13582 = !DILocation(line: 554, column: 101, scope: !13567)
!13583 = !DILocation(line: 554, column: 53, scope: !13567)
!13584 = !DILocation(line: 554, column: 126, scope: !13567)
!13585 = !DILocation(line: 555, column: 14, scope: !13567)
!13586 = !DILocation(line: 555, column: 80, scope: !13567)
!13587 = !DILocation(line: 555, column: 85, scope: !13567)
!13588 = !DILocation(line: 555, column: 53, scope: !13567)
!13589 = !DILocation(line: 550, column: 13, scope: !13565)
!13590 = !DILocation(line: 563, column: 3, scope: !13239)
!13591 = !DILocation(line: 564, column: 1, scope: !13239)
!13592 = !DISubprogram(name: "HAL_GetTick", scope: !13593, file: !13593, line: 234, type: !8354, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!13593 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13594 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !13234, file: !13234, line: 591, type: !13595, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !13606)
!13595 = !DISubroutineType(types: !13596)
!13596 = !{!13237, !13597, !208}
!13597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13598, size: 32)
!13598 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !13244, line: 92, baseType: !13599)
!13599 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13244, line: 75, size: 160, elements: !13600)
!13600 = !{!13601, !13602, !13603, !13604, !13605}
!13601 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !13599, file: !13244, line: 77, baseType: !208, size: 32)
!13602 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !13599, file: !13244, line: 80, baseType: !208, size: 32, offset: 32)
!13603 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13599, file: !13244, line: 83, baseType: !208, size: 32, offset: 64)
!13604 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13599, file: !13244, line: 86, baseType: !208, size: 32, offset: 96)
!13605 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13599, file: !13244, line: 89, baseType: !208, size: 32, offset: 128)
!13606 = !{!13607, !13608, !13609}
!13607 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13594, file: !13234, line: 591, type: !13597)
!13608 = !DILocalVariable(name: "FLatency", arg: 2, scope: !13594, file: !13234, line: 591, type: !208)
!13609 = !DILocalVariable(name: "tickstart", scope: !13594, file: !13234, line: 593, type: !208)
!13610 = !DILocation(line: 0, scope: !13594)
!13611 = !DILocation(line: 596, column: 24, scope: !13612)
!13612 = distinct !DILexicalBlock(scope: !13594, file: !13234, line: 596, column: 6)
!13613 = !DILocation(line: 596, column: 6, scope: !13594)
!13614 = !DILocation(line: 610, column: 17, scope: !13615)
!13615 = distinct !DILexicalBlock(scope: !13594, file: !13234, line: 610, column: 6)
!13616 = !DILocation(line: 610, column: 15, scope: !13615)
!13617 = !DILocation(line: 610, column: 6, scope: !13594)
!13618 = !DILocation(line: 613, column: 5, scope: !13619)
!13619 = distinct !DILexicalBlock(scope: !13615, file: !13234, line: 611, column: 3)
!13620 = !DILocation(line: 617, column: 8, scope: !13621)
!13621 = distinct !DILexicalBlock(scope: !13619, file: !13234, line: 617, column: 8)
!13622 = !DILocation(line: 617, column: 34, scope: !13621)
!13623 = !DILocation(line: 617, column: 8, scope: !13619)
!13624 = !DILocation(line: 624, column: 27, scope: !13625)
!13625 = distinct !DILexicalBlock(scope: !13594, file: !13234, line: 624, column: 6)
!13626 = !DILocation(line: 624, column: 38, scope: !13625)
!13627 = !DILocation(line: 624, column: 60, scope: !13625)
!13628 = !DILocation(line: 624, column: 6, scope: !13594)
!13629 = !DILocation(line: 628, column: 40, scope: !13630)
!13630 = distinct !DILexicalBlock(scope: !13631, file: !13234, line: 628, column: 8)
!13631 = distinct !DILexicalBlock(scope: !13625, file: !13234, line: 625, column: 3)
!13632 = !DILocation(line: 628, column: 63, scope: !13630)
!13633 = !DILocation(line: 628, column: 8, scope: !13631)
!13634 = !DILocation(line: 630, column: 7, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13630, file: !13234, line: 629, column: 5)
!13636 = !DILocation(line: 633, column: 29, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13631, file: !13234, line: 633, column: 8)
!13638 = !DILocation(line: 631, column: 5, scope: !13635)
!13639 = !DILocation(line: 633, column: 40, scope: !13637)
!13640 = !DILocation(line: 633, column: 63, scope: !13637)
!13641 = !DILocation(line: 633, column: 8, scope: !13631)
!13642 = !DILocation(line: 635, column: 7, scope: !13643)
!13643 = distinct !DILexicalBlock(scope: !13637, file: !13234, line: 634, column: 5)
!13644 = !DILocation(line: 636, column: 5, scope: !13643)
!13645 = !DILocation(line: 639, column: 5, scope: !13631)
!13646 = !DILocation(line: 643, column: 27, scope: !13647)
!13647 = distinct !DILexicalBlock(scope: !13594, file: !13234, line: 643, column: 6)
!13648 = !DILocation(line: 640, column: 3, scope: !13631)
!13649 = !DILocation(line: 643, column: 38, scope: !13647)
!13650 = !DILocation(line: 643, column: 62, scope: !13647)
!13651 = !DILocation(line: 643, column: 6, scope: !13594)
!13652 = !DILocation(line: 648, column: 27, scope: !13653)
!13653 = distinct !DILexicalBlock(scope: !13654, file: !13234, line: 648, column: 8)
!13654 = distinct !DILexicalBlock(scope: !13647, file: !13234, line: 644, column: 3)
!13655 = !DILocation(line: 648, column: 8, scope: !13654)
!13656 = !DILocation(line: 651, column: 10, scope: !13657)
!13657 = distinct !DILexicalBlock(scope: !13658, file: !13234, line: 651, column: 10)
!13658 = distinct !DILexicalBlock(scope: !13653, file: !13234, line: 649, column: 5)
!13659 = !DILocation(line: 651, column: 46, scope: !13657)
!13660 = !DILocation(line: 651, column: 10, scope: !13658)
!13661 = !DILocation(line: 661, column: 10, scope: !13662)
!13662 = distinct !DILexicalBlock(scope: !13663, file: !13234, line: 661, column: 10)
!13663 = distinct !DILexicalBlock(scope: !13664, file: !13234, line: 659, column: 5)
!13664 = distinct !DILexicalBlock(scope: !13653, file: !13234, line: 657, column: 13)
!13665 = !DILocation(line: 661, column: 46, scope: !13662)
!13666 = !DILocation(line: 661, column: 10, scope: !13663)
!13667 = !DILocation(line: 670, column: 10, scope: !13668)
!13668 = distinct !DILexicalBlock(scope: !13669, file: !13234, line: 670, column: 10)
!13669 = distinct !DILexicalBlock(scope: !13664, file: !13234, line: 668, column: 5)
!13670 = !DILocation(line: 670, column: 46, scope: !13668)
!13671 = !DILocation(line: 670, column: 10, scope: !13669)
!13672 = !DILocation(line: 676, column: 5, scope: !13654)
!13673 = !DILocation(line: 679, column: 17, scope: !13654)
!13674 = !DILocation(line: 681, column: 5, scope: !13654)
!13675 = !DILocation(line: 681, column: 12, scope: !13654)
!13676 = !DILocation(line: 681, column: 65, scope: !13654)
!13677 = !DILocation(line: 681, column: 78, scope: !13654)
!13678 = !DILocation(line: 681, column: 42, scope: !13654)
!13679 = !DILocation(line: 683, column: 12, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13681, file: !13234, line: 683, column: 11)
!13681 = distinct !DILexicalBlock(scope: !13654, file: !13234, line: 682, column: 5)
!13682 = !DILocation(line: 683, column: 26, scope: !13680)
!13683 = !DILocation(line: 683, column: 39, scope: !13680)
!13684 = !DILocation(line: 683, column: 11, scope: !13681)
!13685 = distinct !{!13685, !13674, !13686}
!13686 = !DILocation(line: 687, column: 5, scope: !13654)
!13687 = !DILocation(line: 691, column: 17, scope: !13688)
!13688 = distinct !DILexicalBlock(scope: !13594, file: !13234, line: 691, column: 6)
!13689 = !DILocation(line: 691, column: 15, scope: !13688)
!13690 = !DILocation(line: 691, column: 6, scope: !13594)
!13691 = !DILocation(line: 694, column: 5, scope: !13692)
!13692 = distinct !DILexicalBlock(scope: !13688, file: !13234, line: 692, column: 3)
!13693 = !DILocation(line: 698, column: 8, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !13692, file: !13234, line: 698, column: 8)
!13695 = !DILocation(line: 698, column: 34, scope: !13694)
!13696 = !DILocation(line: 698, column: 8, scope: !13692)
!13697 = !DILocation(line: 705, column: 27, scope: !13698)
!13698 = distinct !DILexicalBlock(scope: !13594, file: !13234, line: 705, column: 6)
!13699 = !DILocation(line: 705, column: 38, scope: !13698)
!13700 = !DILocation(line: 705, column: 61, scope: !13698)
!13701 = !DILocation(line: 705, column: 6, scope: !13594)
!13702 = !DILocation(line: 708, column: 5, scope: !13703)
!13703 = distinct !DILexicalBlock(scope: !13698, file: !13234, line: 706, column: 3)
!13704 = !DILocation(line: 712, column: 27, scope: !13705)
!13705 = distinct !DILexicalBlock(scope: !13594, file: !13234, line: 712, column: 6)
!13706 = !DILocation(line: 709, column: 3, scope: !13703)
!13707 = !DILocation(line: 712, column: 38, scope: !13705)
!13708 = !DILocation(line: 712, column: 61, scope: !13705)
!13709 = !DILocation(line: 712, column: 6, scope: !13594)
!13710 = !DILocation(line: 715, column: 5, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13705, file: !13234, line: 713, column: 3)
!13712 = !DILocation(line: 716, column: 3, scope: !13711)
!13713 = !DILocation(line: 719, column: 21, scope: !13594)
!13714 = !DILocation(line: 719, column: 70, scope: !13594)
!13715 = !DILocation(line: 719, column: 91, scope: !13594)
!13716 = !DILocation(line: 719, column: 50, scope: !13594)
!13717 = !DILocation(line: 719, column: 47, scope: !13594)
!13718 = !DILocation(line: 719, column: 19, scope: !13594)
!13719 = !DILocation(line: 722, column: 17, scope: !13594)
!13720 = !DILocation(line: 722, column: 3, scope: !13594)
!13721 = !DILocation(line: 724, column: 3, scope: !13594)
!13722 = !DILocation(line: 725, column: 1, scope: !13594)
!13723 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !13234, file: !13234, line: 885, type: !8354, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !13724)
!13724 = !{!13725, !13726, !13727, !13728}
!13725 = !DILocalVariable(name: "pllm", scope: !13723, file: !13234, line: 887, type: !208)
!13726 = !DILocalVariable(name: "pllvco", scope: !13723, file: !13234, line: 887, type: !208)
!13727 = !DILocalVariable(name: "pllp", scope: !13723, file: !13234, line: 887, type: !208)
!13728 = !DILocalVariable(name: "sysclockfreq", scope: !13723, file: !13234, line: 888, type: !208)
!13729 = !DILocation(line: 0, scope: !13723)
!13730 = !DILocation(line: 891, column: 16, scope: !13723)
!13731 = !DILocation(line: 891, column: 21, scope: !13723)
!13732 = !DILocation(line: 891, column: 3, scope: !13723)
!13733 = !DILocation(line: 901, column: 7, scope: !13734)
!13734 = distinct !DILexicalBlock(scope: !13735, file: !13234, line: 899, column: 5)
!13735 = distinct !DILexicalBlock(scope: !13723, file: !13234, line: 892, column: 3)
!13736 = !DILocation(line: 907, column: 19, scope: !13737)
!13737 = distinct !DILexicalBlock(scope: !13735, file: !13234, line: 904, column: 5)
!13738 = !DILocation(line: 907, column: 27, scope: !13737)
!13739 = !DILocation(line: 908, column: 10, scope: !13740)
!13740 = distinct !DILexicalBlock(scope: !13737, file: !13234, line: 908, column: 10)
!13741 = !DILocation(line: 908, column: 40, scope: !13740)
!13742 = !DILocation(line: 0, scope: !13740)
!13743 = !DILocation(line: 908, column: 10, scope: !13737)
!13744 = !DILocation(line: 911, column: 53, scope: !13745)
!13745 = distinct !DILexicalBlock(scope: !13740, file: !13234, line: 909, column: 7)
!13746 = !DILocation(line: 911, column: 130, scope: !13745)
!13747 = !DILocation(line: 912, column: 7, scope: !13745)
!13748 = !DILocation(line: 916, column: 56, scope: !13749)
!13749 = distinct !DILexicalBlock(scope: !13740, file: !13234, line: 914, column: 7)
!13750 = !DILocation(line: 916, column: 53, scope: !13749)
!13751 = !DILocation(line: 916, column: 132, scope: !13749)
!13752 = !DILocation(line: 916, column: 130, scope: !13749)
!13753 = !DILocation(line: 916, column: 18, scope: !13749)
!13754 = !DILocation(line: 918, column: 23, scope: !13737)
!13755 = !DILocation(line: 918, column: 82, scope: !13737)
!13756 = !DILocation(line: 920, column: 28, scope: !13737)
!13757 = !DILocation(line: 921, column: 7, scope: !13737)
!13758 = !DILocation(line: 0, scope: !13735)
!13759 = !DILocation(line: 929, column: 3, scope: !13723)
!13760 = !DISubprogram(name: "HAL_InitTick", scope: !13593, file: !13593, line: 223, type: !13761, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!13761 = !DISubroutineType(types: !13762)
!13762 = !{!13237, !208}
!13763 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !13234, file: !13234, line: 775, type: !13764, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !13766)
!13764 = !DISubroutineType(types: !13765)
!13765 = !{null, !208, !208, !208}
!13766 = !{!13767, !13768, !13769, !13770, !13780, !13784}
!13767 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !13763, file: !13234, line: 775, type: !208)
!13768 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !13763, file: !13234, line: 775, type: !208)
!13769 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !13763, file: !13234, line: 775, type: !208)
!13770 = !DILocalVariable(name: "GPIO_InitStruct", scope: !13763, file: !13234, line: 777, type: !13771)
!13771 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !13772, line: 62, baseType: !13773)
!13772 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13773 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13772, line: 46, size: 160, elements: !13774)
!13774 = !{!13775, !13776, !13777, !13778, !13779}
!13775 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !13773, file: !13772, line: 48, baseType: !208, size: 32)
!13776 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !13773, file: !13772, line: 51, baseType: !208, size: 32, offset: 32)
!13777 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !13773, file: !13772, line: 54, baseType: !208, size: 32, offset: 64)
!13778 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !13773, file: !13772, line: 57, baseType: !208, size: 32, offset: 96)
!13779 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !13773, file: !13772, line: 60, baseType: !208, size: 32, offset: 128)
!13780 = !DILocalVariable(name: "tmpreg", scope: !13781, file: !13234, line: 787, type: !423)
!13781 = distinct !DILexicalBlock(scope: !13782, file: !13234, line: 787, column: 5)
!13782 = distinct !DILexicalBlock(scope: !13783, file: !13234, line: 783, column: 3)
!13783 = distinct !DILexicalBlock(scope: !13763, file: !13234, line: 782, column: 6)
!13784 = !DILocalVariable(name: "tmpreg", scope: !13785, file: !13234, line: 811, type: !423)
!13785 = distinct !DILexicalBlock(scope: !13786, file: !13234, line: 811, column: 5)
!13786 = distinct !DILexicalBlock(scope: !13783, file: !13234, line: 807, column: 3)
!13787 = !DILocation(line: 0, scope: !13763)
!13788 = !DILocation(line: 777, column: 3, scope: !13763)
!13789 = !DILocation(line: 777, column: 20, scope: !13763)
!13790 = !DILocation(line: 782, column: 15, scope: !13783)
!13791 = !DILocation(line: 782, column: 6, scope: !13763)
!13792 = !DILocation(line: 787, column: 5, scope: !13781)
!13793 = !DILocation(line: 787, column: 5, scope: !13782)
!13794 = !DILocation(line: 790, column: 21, scope: !13782)
!13795 = !DILocation(line: 790, column: 25, scope: !13782)
!13796 = !DILocation(line: 791, column: 21, scope: !13782)
!13797 = !DILocation(line: 791, column: 26, scope: !13782)
!13798 = !DILocation(line: 792, column: 21, scope: !13782)
!13799 = !DILocation(line: 792, column: 27, scope: !13782)
!13800 = !DILocation(line: 793, column: 21, scope: !13782)
!13801 = !DILocation(line: 793, column: 26, scope: !13782)
!13802 = !DILocation(line: 794, column: 21, scope: !13782)
!13803 = !DILocation(line: 794, column: 31, scope: !13782)
!13804 = !DILocation(line: 795, column: 5, scope: !13782)
!13805 = !DILocation(line: 798, column: 5, scope: !13782)
!13806 = !DILocation(line: 804, column: 3, scope: !13782)
!13807 = !DILocation(line: 811, column: 5, scope: !13785)
!13808 = !DILocation(line: 811, column: 5, scope: !13786)
!13809 = !DILocation(line: 814, column: 21, scope: !13786)
!13810 = !DILocation(line: 814, column: 25, scope: !13786)
!13811 = !DILocation(line: 815, column: 21, scope: !13786)
!13812 = !DILocation(line: 815, column: 26, scope: !13786)
!13813 = !DILocation(line: 816, column: 21, scope: !13786)
!13814 = !DILocation(line: 816, column: 27, scope: !13786)
!13815 = !DILocation(line: 817, column: 21, scope: !13786)
!13816 = !DILocation(line: 817, column: 26, scope: !13786)
!13817 = !DILocation(line: 818, column: 21, scope: !13786)
!13818 = !DILocation(line: 818, column: 31, scope: !13786)
!13819 = !DILocation(line: 819, column: 5, scope: !13786)
!13820 = !DILocation(line: 822, column: 5, scope: !13786)
!13821 = !DILocation(line: 0, scope: !13783)
!13822 = !DILocation(line: 830, column: 1, scope: !13763)
!13823 = !DISubprogram(name: "HAL_GPIO_Init", scope: !13772, file: !13772, line: 224, type: !13824, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!13824 = !DISubroutineType(types: !13825)
!13825 = !{null, !3160, !13826}
!13826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13771, size: 32)
!13827 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !13234, file: !13234, line: 841, type: !3278, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !639)
!13828 = !DILocation(line: 843, column: 38, scope: !13827)
!13829 = !DILocation(line: 844, column: 1, scope: !13827)
!13830 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !13234, file: !13234, line: 850, type: !3278, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !639)
!13831 = !DILocation(line: 852, column: 38, scope: !13830)
!13832 = !DILocation(line: 853, column: 1, scope: !13830)
!13833 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !13234, file: !13234, line: 941, type: !8354, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !639)
!13834 = !DILocation(line: 943, column: 10, scope: !13833)
!13835 = !DILocation(line: 943, column: 3, scope: !13833)
!13836 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !13234, file: !13234, line: 952, type: !8354, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !639)
!13837 = !DILocation(line: 955, column: 11, scope: !13836)
!13838 = !DILocation(line: 955, column: 56, scope: !13836)
!13839 = !DILocation(line: 955, column: 78, scope: !13836)
!13840 = !DILocation(line: 955, column: 36, scope: !13836)
!13841 = !DILocation(line: 955, column: 33, scope: !13836)
!13842 = !DILocation(line: 955, column: 3, scope: !13836)
!13843 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !13234, file: !13234, line: 964, type: !8354, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !639)
!13844 = !DILocation(line: 967, column: 11, scope: !13843)
!13845 = !DILocation(line: 967, column: 55, scope: !13843)
!13846 = !DILocation(line: 967, column: 77, scope: !13843)
!13847 = !DILocation(line: 967, column: 35, scope: !13843)
!13848 = !DILocation(line: 967, column: 32, scope: !13843)
!13849 = !DILocation(line: 967, column: 3, scope: !13843)
!13850 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !13234, file: !13234, line: 977, type: !13851, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !13853)
!13851 = !DISubroutineType(types: !13852)
!13852 = !{null, !13242}
!13853 = !{!13854}
!13854 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13850, file: !13234, line: 977, type: !13242)
!13855 = !DILocation(line: 0, scope: !13850)
!13856 = !DILocation(line: 980, column: 22, scope: !13850)
!13857 = !DILocation(line: 980, column: 37, scope: !13850)
!13858 = !DILocation(line: 983, column: 12, scope: !13859)
!13859 = distinct !DILexicalBlock(scope: !13850, file: !13234, line: 983, column: 6)
!13860 = !DILocation(line: 983, column: 15, scope: !13859)
!13861 = !DILocation(line: 983, column: 31, scope: !13859)
!13862 = !DILocation(line: 983, column: 6, scope: !13850)
!13863 = !DILocation(line: 985, column: 24, scope: !13864)
!13864 = distinct !DILexicalBlock(scope: !13859, file: !13234, line: 984, column: 3)
!13865 = !DILocation(line: 985, column: 33, scope: !13864)
!13866 = !DILocation(line: 986, column: 3, scope: !13864)
!13867 = !DILocation(line: 987, column: 17, scope: !13868)
!13868 = distinct !DILexicalBlock(scope: !13859, file: !13234, line: 987, column: 11)
!13869 = !DILocation(line: 987, column: 20, scope: !13868)
!13870 = !DILocation(line: 987, column: 35, scope: !13868)
!13871 = !DILocation(line: 0, scope: !13868)
!13872 = !DILocation(line: 987, column: 11, scope: !13859)
!13873 = !DILocation(line: 989, column: 33, scope: !13874)
!13874 = distinct !DILexicalBlock(scope: !13868, file: !13234, line: 988, column: 3)
!13875 = !DILocation(line: 990, column: 3, scope: !13874)
!13876 = !DILocation(line: 993, column: 33, scope: !13877)
!13877 = distinct !DILexicalBlock(scope: !13868, file: !13234, line: 992, column: 3)
!13878 = !DILocation(line: 997, column: 12, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !13850, file: !13234, line: 997, column: 6)
!13880 = !DILocation(line: 997, column: 15, scope: !13879)
!13881 = !DILocation(line: 1003, column: 24, scope: !13882)
!13882 = distinct !DILexicalBlock(scope: !13879, file: !13234, line: 1002, column: 3)
!13883 = !DILocation(line: 1003, column: 33, scope: !13882)
!13884 = !DILocation(line: 1006, column: 61, scope: !13850)
!13885 = !DILocation(line: 1006, column: 81, scope: !13850)
!13886 = !DILocation(line: 1006, column: 22, scope: !13850)
!13887 = !DILocation(line: 1006, column: 42, scope: !13850)
!13888 = !DILocation(line: 1009, column: 12, scope: !13889)
!13889 = distinct !DILexicalBlock(scope: !13850, file: !13234, line: 1009, column: 6)
!13890 = !DILocation(line: 1009, column: 17, scope: !13889)
!13891 = !DILocation(line: 1009, column: 35, scope: !13889)
!13892 = !DILocation(line: 1009, column: 6, scope: !13850)
!13893 = !DILocation(line: 1011, column: 24, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13889, file: !13234, line: 1010, column: 3)
!13895 = !DILocation(line: 1011, column: 33, scope: !13894)
!13896 = !DILocation(line: 1012, column: 3, scope: !13894)
!13897 = !DILocation(line: 1013, column: 17, scope: !13898)
!13898 = distinct !DILexicalBlock(scope: !13889, file: !13234, line: 1013, column: 11)
!13899 = !DILocation(line: 1013, column: 22, scope: !13898)
!13900 = !DILocation(line: 1013, column: 39, scope: !13898)
!13901 = !DILocation(line: 0, scope: !13898)
!13902 = !DILocation(line: 1013, column: 11, scope: !13889)
!13903 = !DILocation(line: 1015, column: 33, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13898, file: !13234, line: 1014, column: 3)
!13905 = !DILocation(line: 1016, column: 3, scope: !13904)
!13906 = !DILocation(line: 1019, column: 33, scope: !13907)
!13907 = distinct !DILexicalBlock(scope: !13898, file: !13234, line: 1018, column: 3)
!13908 = !DILocation(line: 1023, column: 12, scope: !13909)
!13909 = distinct !DILexicalBlock(scope: !13850, file: !13234, line: 1023, column: 6)
!13910 = !DILocation(line: 1023, column: 16, scope: !13909)
!13911 = !DILocation(line: 1029, column: 24, scope: !13912)
!13912 = distinct !DILexicalBlock(scope: !13909, file: !13234, line: 1028, column: 3)
!13913 = !DILocation(line: 1029, column: 33, scope: !13912)
!13914 = !DILocation(line: 1033, column: 12, scope: !13915)
!13915 = distinct !DILexicalBlock(scope: !13850, file: !13234, line: 1033, column: 6)
!13916 = !DILocation(line: 1033, column: 15, scope: !13915)
!13917 = !DILocation(line: 1033, column: 30, scope: !13915)
!13918 = !DILocation(line: 1033, column: 6, scope: !13850)
!13919 = !DILocation(line: 1039, column: 28, scope: !13920)
!13920 = distinct !DILexicalBlock(scope: !13915, file: !13234, line: 1038, column: 3)
!13921 = !DILocation(line: 1039, column: 37, scope: !13920)
!13922 = !DILocation(line: 1041, column: 54, scope: !13850)
!13923 = !DILocation(line: 1041, column: 62, scope: !13850)
!13924 = !DILocation(line: 1041, column: 26, scope: !13850)
!13925 = !DILocation(line: 1041, column: 36, scope: !13850)
!13926 = !DILocation(line: 1042, column: 49, scope: !13850)
!13927 = !DILocation(line: 1042, column: 57, scope: !13850)
!13928 = !DILocation(line: 1042, column: 26, scope: !13850)
!13929 = !DILocation(line: 1042, column: 31, scope: !13850)
!13930 = !DILocation(line: 1043, column: 50, scope: !13850)
!13931 = !DILocation(line: 1043, column: 78, scope: !13850)
!13932 = !DILocation(line: 1043, column: 26, scope: !13850)
!13933 = !DILocation(line: 1043, column: 31, scope: !13850)
!13934 = !DILocation(line: 1044, column: 52, scope: !13850)
!13935 = !DILocation(line: 1044, column: 102, scope: !13850)
!13936 = !DILocation(line: 1044, column: 109, scope: !13850)
!13937 = !DILocation(line: 1044, column: 26, scope: !13850)
!13938 = !DILocation(line: 1044, column: 31, scope: !13850)
!13939 = !DILocation(line: 1045, column: 50, scope: !13850)
!13940 = !DILocation(line: 1045, column: 78, scope: !13850)
!13941 = !DILocation(line: 1045, column: 26, scope: !13850)
!13942 = !DILocation(line: 1045, column: 31, scope: !13850)
!13943 = !DILocation(line: 1046, column: 1, scope: !13850)
!13944 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !13234, file: !13234, line: 1056, type: !13945, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !13947)
!13945 = !DISubroutineType(types: !13946)
!13946 = !{null, !13597, !1009}
!13947 = !{!13948, !13949}
!13948 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13944, file: !13234, line: 1056, type: !13597)
!13949 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !13944, file: !13234, line: 1056, type: !1009)
!13950 = !DILocation(line: 0, scope: !13944)
!13951 = !DILocation(line: 1059, column: 22, scope: !13944)
!13952 = !DILocation(line: 1059, column: 32, scope: !13944)
!13953 = !DILocation(line: 1062, column: 53, scope: !13944)
!13954 = !DILocation(line: 1062, column: 58, scope: !13944)
!13955 = !DILocation(line: 1062, column: 22, scope: !13944)
!13956 = !DILocation(line: 1062, column: 35, scope: !13944)
!13957 = !DILocation(line: 1065, column: 54, scope: !13944)
!13958 = !DILocation(line: 1065, column: 59, scope: !13944)
!13959 = !DILocation(line: 1065, column: 22, scope: !13944)
!13960 = !DILocation(line: 1065, column: 36, scope: !13944)
!13961 = !DILocation(line: 1068, column: 55, scope: !13944)
!13962 = !DILocation(line: 1068, column: 60, scope: !13944)
!13963 = !DILocation(line: 1068, column: 22, scope: !13944)
!13964 = !DILocation(line: 1068, column: 37, scope: !13944)
!13965 = !DILocation(line: 1071, column: 56, scope: !13944)
!13966 = !DILocation(line: 1071, column: 79, scope: !13944)
!13967 = !DILocation(line: 1071, column: 22, scope: !13944)
!13968 = !DILocation(line: 1071, column: 37, scope: !13944)
!13969 = !DILocation(line: 1074, column: 34, scope: !13944)
!13970 = !DILocation(line: 1074, column: 38, scope: !13944)
!13971 = !DILocation(line: 1074, column: 14, scope: !13944)
!13972 = !DILocation(line: 1075, column: 1, scope: !13944)
!13973 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !13234, file: !13234, line: 1082, type: !3278, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !639)
!13974 = !DILocation(line: 1085, column: 6, scope: !13975)
!13975 = distinct !DILexicalBlock(scope: !13973, file: !13234, line: 1085, column: 6)
!13976 = !DILocation(line: 1085, column: 6, scope: !13973)
!13977 = !DILocation(line: 1088, column: 5, scope: !13978)
!13978 = distinct !DILexicalBlock(scope: !13975, file: !13234, line: 1086, column: 3)
!13979 = !DILocation(line: 1091, column: 5, scope: !13978)
!13980 = !DILocation(line: 1092, column: 3, scope: !13978)
!13981 = !DILocation(line: 1093, column: 1, scope: !13973)
!13982 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !13234, file: !13234, line: 1099, type: !3278, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !639)
!13983 = !DILocation(line: 1104, column: 1, scope: !13982)
!13984 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13985, file: !13985, line: 257, type: !8364, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !13986)
!13985 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13986 = !{!13987}
!13987 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13984, file: !13985, line: 257, type: !208)
!13988 = !DILocation(line: 0, scope: !13984)
!13989 = !DILocation(line: 260, column: 3, scope: !13984)
!13990 = !DILocation(line: 261, column: 1, scope: !13984)
!13991 = distinct !DISubprogram(name: "LL_InitTick", scope: !13992, file: !13992, line: 260, type: !11629, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !13993)
!13992 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13993 = !{!13994, !13995}
!13994 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13991, file: !13992, line: 260, type: !208)
!13995 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13991, file: !13992, line: 260, type: !208)
!13996 = !DILocation(line: 0, scope: !13991)
!13997 = !DILocation(line: 263, column: 46, scope: !13991)
!13998 = !DILocation(line: 263, column: 55, scope: !13991)
!13999 = !DILocation(line: 263, column: 18, scope: !13991)
!14000 = !DILocation(line: 264, column: 18, scope: !13991)
!14001 = !DILocation(line: 265, column: 18, scope: !13991)
!14002 = !DILocation(line: 267, column: 1, scope: !13991)
!14003 = distinct !DISubprogram(name: "LL_mDelay", scope: !13985, file: !13985, line: 273, type: !8364, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !14004)
!14004 = !{!14005, !14006}
!14005 = !DILocalVariable(name: "Delay", arg: 1, scope: !14003, file: !13985, line: 273, type: !208)
!14006 = !DILocalVariable(name: "tmp", scope: !14003, file: !13985, line: 275, type: !423)
!14007 = !DILocation(line: 0, scope: !14003)
!14008 = !DILocation(line: 275, column: 3, scope: !14003)
!14009 = !DILocation(line: 275, column: 18, scope: !14003)
!14010 = !DILocation(line: 275, column: 33, scope: !14003)
!14011 = !DILocation(line: 277, column: 10, scope: !14003)
!14012 = !DILocation(line: 280, column: 12, scope: !14013)
!14013 = distinct !DILexicalBlock(scope: !14003, file: !13985, line: 280, column: 6)
!14014 = !DILocation(line: 285, column: 3, scope: !14003)
!14015 = !DILocation(line: 287, column: 18, scope: !14016)
!14016 = distinct !DILexicalBlock(scope: !14017, file: !13985, line: 287, column: 8)
!14017 = distinct !DILexicalBlock(scope: !14003, file: !13985, line: 286, column: 3)
!14018 = !DILocation(line: 292, column: 1, scope: !14003)
!14019 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13985, file: !13985, line: 323, type: !8364, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !14020)
!14020 = !{!14021}
!14021 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14019, file: !13985, line: 323, type: !208)
!14022 = !DILocation(line: 0, scope: !14019)
!14023 = !DILocation(line: 326, column: 19, scope: !14019)
!14024 = !DILocation(line: 327, column: 1, scope: !14019)
!14025 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13985, file: !13985, line: 338, type: !14026, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !14029)
!14026 = !DISubroutineType(types: !14027)
!14027 = !{!14028, !208}
!14028 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !953, line: 201, baseType: !952)
!14029 = !{!14030, !14031, !14032, !14033, !14034}
!14030 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !14025, file: !13985, line: 338, type: !208)
!14031 = !DILocalVariable(name: "timeout", scope: !14025, file: !13985, line: 340, type: !208)
!14032 = !DILocalVariable(name: "getlatency", scope: !14025, file: !13985, line: 341, type: !208)
!14033 = !DILocalVariable(name: "latency", scope: !14025, file: !13985, line: 342, type: !208)
!14034 = !DILocalVariable(name: "status", scope: !14025, file: !13985, line: 343, type: !14028)
!14035 = !DILocation(line: 0, scope: !14025)
!14036 = !DILocation(line: 347, column: 21, scope: !14037)
!14037 = distinct !DILexicalBlock(scope: !14025, file: !13985, line: 347, column: 6)
!14038 = !DILocation(line: 347, column: 6, scope: !14025)
!14039 = !DILocation(line: 353, column: 8, scope: !14040)
!14040 = distinct !DILexicalBlock(scope: !14041, file: !13985, line: 353, column: 8)
!14041 = distinct !DILexicalBlock(scope: !14037, file: !13985, line: 352, column: 3)
!14042 = !DILocation(line: 353, column: 40, scope: !14040)
!14043 = !DILocation(line: 353, column: 8, scope: !14041)
!14044 = !DILocation(line: 374, column: 55, scope: !14045)
!14045 = distinct !DILexicalBlock(scope: !14046, file: !13985, line: 374, column: 10)
!14046 = distinct !DILexicalBlock(scope: !14040, file: !13985, line: 354, column: 5)
!14047 = !DILocation(line: 368, column: 26, scope: !14048)
!14048 = distinct !DILexicalBlock(scope: !14046, file: !13985, line: 368, column: 10)
!14049 = !DILocation(line: 368, column: 55, scope: !14048)
!14050 = !DILocation(line: 380, column: 57, scope: !14051)
!14051 = distinct !DILexicalBlock(scope: !14052, file: !13985, line: 380, column: 12)
!14052 = distinct !DILexicalBlock(scope: !14045, file: !13985, line: 379, column: 7)
!14053 = !DILocation(line: 387, column: 8, scope: !14054)
!14054 = distinct !DILexicalBlock(scope: !14041, file: !13985, line: 387, column: 8)
!14055 = !DILocation(line: 387, column: 40, scope: !14054)
!14056 = !DILocation(line: 387, column: 8, scope: !14041)
!14057 = !DILocation(line: 407, column: 26, scope: !14058)
!14058 = distinct !DILexicalBlock(scope: !14059, file: !13985, line: 407, column: 10)
!14059 = distinct !DILexicalBlock(scope: !14054, file: !13985, line: 388, column: 5)
!14060 = !DILocation(line: 407, column: 55, scope: !14058)
!14061 = !DILocation(line: 413, column: 28, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14063, file: !13985, line: 413, column: 12)
!14063 = distinct !DILexicalBlock(scope: !14058, file: !13985, line: 412, column: 7)
!14064 = !DILocation(line: 413, column: 57, scope: !14062)
!14065 = !DILocation(line: 0, scope: !14041)
!14066 = !DILocation(line: 420, column: 8, scope: !14067)
!14067 = distinct !DILexicalBlock(scope: !14041, file: !13985, line: 420, column: 8)
!14068 = !DILocation(line: 420, column: 40, scope: !14067)
!14069 = !DILocation(line: 420, column: 8, scope: !14041)
!14070 = !DILocation(line: 429, column: 26, scope: !14071)
!14071 = distinct !DILexicalBlock(scope: !14072, file: !13985, line: 429, column: 10)
!14072 = distinct !DILexicalBlock(scope: !14067, file: !13985, line: 421, column: 5)
!14073 = !DILocation(line: 429, column: 55, scope: !14071)
!14074 = !DILocation(line: 435, column: 28, scope: !14075)
!14075 = distinct !DILexicalBlock(scope: !14076, file: !13985, line: 435, column: 12)
!14076 = distinct !DILexicalBlock(scope: !14071, file: !13985, line: 434, column: 7)
!14077 = !DILocation(line: 435, column: 57, scope: !14075)
!14078 = !DILocation(line: 444, column: 5, scope: !14041)
!14079 = !DILocation(line: 448, column: 5, scope: !14041)
!14080 = !DILocation(line: 451, column: 18, scope: !14081)
!14081 = distinct !DILexicalBlock(scope: !14041, file: !13985, line: 449, column: 5)
!14082 = !DILocation(line: 452, column: 12, scope: !14081)
!14083 = !DILocation(line: 453, column: 26, scope: !14041)
!14084 = !DILocation(line: 453, column: 38, scope: !14041)
!14085 = !DILocation(line: 453, column: 5, scope: !14081)
!14086 = distinct !{!14086, !14079, !14087}
!14087 = !DILocation(line: 453, column: 54, scope: !14041)
!14088 = !DILocation(line: 0, scope: !14037)
!14089 = !DILocation(line: 464, column: 3, scope: !14025)
!14090 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !14091, file: !14091, line: 519, type: !8354, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !639)
!14091 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14092 = !DILocation(line: 521, column: 21, scope: !14090)
!14093 = !DILocation(line: 521, column: 3, scope: !14090)
!14094 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6827, file: !6827, line: 1543, type: !8364, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !14095)
!14095 = !{!14096}
!14096 = !DILocalVariable(name: "Latency", arg: 1, scope: !14094, file: !6827, line: 1543, type: !208)
!14097 = !DILocation(line: 0, scope: !14094)
!14098 = !DILocation(line: 1545, column: 3, scope: !14094)
!14099 = !DILocation(line: 1546, column: 1, scope: !14094)
!14100 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6827, file: !6827, line: 1569, type: !8354, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !639)
!14101 = !DILocation(line: 1571, column: 21, scope: !14100)
!14102 = !DILocation(line: 1571, column: 3, scope: !14100)
!14103 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13985, file: !13985, line: 483, type: !14104, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !14120)
!14104 = !DISubroutineType(types: !14105)
!14105 = !{!14028, !14106, !14113}
!14106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14107, size: 32)
!14107 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13992, line: 114, baseType: !14108)
!14108 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13992, line: 94, size: 96, elements: !14109)
!14109 = !{!14110, !14111, !14112}
!14110 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !14108, file: !13992, line: 96, baseType: !208, size: 32)
!14111 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !14108, file: !13992, line: 102, baseType: !208, size: 32, offset: 32)
!14112 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !14108, file: !13992, line: 109, baseType: !208, size: 32, offset: 64)
!14113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14114, size: 32)
!14114 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13992, line: 139, baseType: !14115)
!14115 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13992, line: 119, size: 96, elements: !14116)
!14116 = !{!14117, !14118, !14119}
!14117 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !14115, file: !13992, line: 121, baseType: !208, size: 32)
!14118 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !14115, file: !13992, line: 127, baseType: !208, size: 32, offset: 32)
!14119 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !14115, file: !13992, line: 133, baseType: !208, size: 32, offset: 64)
!14120 = !{!14121, !14122, !14123, !14124}
!14121 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !14103, file: !13985, line: 483, type: !14106)
!14122 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !14103, file: !13985, line: 484, type: !14113)
!14123 = !DILocalVariable(name: "status", scope: !14103, file: !13985, line: 486, type: !14028)
!14124 = !DILocalVariable(name: "pllfreq", scope: !14103, file: !13985, line: 487, type: !208)
!14125 = !DILocation(line: 0, scope: !14103)
!14126 = !DILocation(line: 490, column: 6, scope: !14127)
!14127 = distinct !DILexicalBlock(scope: !14103, file: !13985, line: 490, column: 6)
!14128 = !DILocation(line: 490, column: 25, scope: !14127)
!14129 = !DILocation(line: 490, column: 6, scope: !14103)
!14130 = !DILocation(line: 493, column: 15, scope: !14131)
!14131 = distinct !DILexicalBlock(scope: !14127, file: !13985, line: 491, column: 3)
!14132 = !DILocation(line: 496, column: 8, scope: !14133)
!14133 = distinct !DILexicalBlock(scope: !14131, file: !13985, line: 496, column: 8)
!14134 = !DILocation(line: 496, column: 29, scope: !14133)
!14135 = !DILocation(line: 496, column: 8, scope: !14131)
!14136 = !DILocation(line: 498, column: 7, scope: !14137)
!14137 = distinct !DILexicalBlock(scope: !14133, file: !13985, line: 497, column: 5)
!14138 = !DILocation(line: 499, column: 7, scope: !14137)
!14139 = !DILocation(line: 499, column: 14, scope: !14137)
!14140 = !DILocation(line: 499, column: 35, scope: !14137)
!14141 = distinct !{!14141, !14138, !14142}
!14142 = !DILocation(line: 502, column: 7, scope: !14137)
!14143 = !DILocation(line: 506, column: 76, scope: !14131)
!14144 = !DILocation(line: 506, column: 103, scope: !14131)
!14145 = !DILocation(line: 507, column: 54, scope: !14131)
!14146 = !DILocation(line: 506, column: 5, scope: !14131)
!14147 = !DILocation(line: 510, column: 14, scope: !14131)
!14148 = !DILocation(line: 511, column: 3, scope: !14131)
!14149 = !DILocation(line: 0, scope: !14127)
!14150 = !DILocation(line: 518, column: 3, scope: !14103)
!14151 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13985, file: !13985, line: 642, type: !14152, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !14154)
!14152 = !DISubroutineType(types: !14153)
!14153 = !{!14028}
!14154 = !{!14155}
!14155 = !DILocalVariable(name: "status", scope: !14151, file: !13985, line: 644, type: !14028)
!14156 = !DILocation(line: 0, scope: !14151)
!14157 = !DILocation(line: 647, column: 6, scope: !14158)
!14158 = distinct !DILexicalBlock(scope: !14151, file: !13985, line: 647, column: 6)
!14159 = !DILocation(line: 647, column: 27, scope: !14158)
!14160 = !DILocation(line: 663, column: 6, scope: !14161)
!14161 = distinct !DILexicalBlock(scope: !14151, file: !13985, line: 663, column: 6)
!14162 = !DILocation(line: 663, column: 30, scope: !14161)
!14163 = !DILocation(line: 663, column: 6, scope: !14151)
!14164 = !DILocation(line: 669, column: 3, scope: !14151)
!14165 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13985, file: !13985, line: 611, type: !14166, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !14168)
!14166 = !DISubroutineType(types: !14167)
!14167 = !{!208, !208, !14106}
!14168 = !{!14169, !14170, !14171}
!14169 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !14165, file: !13985, line: 611, type: !208)
!14170 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !14165, file: !13985, line: 611, type: !14106)
!14171 = !DILocalVariable(name: "pllfreq", scope: !14165, file: !13985, line: 613, type: !208)
!14172 = !DILocation(line: 0, scope: !14165)
!14173 = !DILocation(line: 622, column: 56, scope: !14165)
!14174 = !DILocation(line: 622, column: 61, scope: !14165)
!14175 = !DILocation(line: 622, column: 32, scope: !14165)
!14176 = !DILocation(line: 626, column: 45, scope: !14165)
!14177 = !DILocation(line: 626, column: 50, scope: !14165)
!14178 = !DILocation(line: 626, column: 21, scope: !14165)
!14179 = !DILocation(line: 630, column: 47, scope: !14165)
!14180 = !DILocation(line: 630, column: 82, scope: !14165)
!14181 = !DILocation(line: 630, column: 21, scope: !14165)
!14182 = !DILocation(line: 633, column: 3, scope: !14165)
!14183 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10543, file: !10543, line: 3007, type: !8354, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !639)
!14184 = !DILocation(line: 3009, column: 11, scope: !14183)
!14185 = !DILocation(line: 3009, column: 44, scope: !14183)
!14186 = !DILocation(line: 3009, column: 3, scope: !14183)
!14187 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10543, file: !10543, line: 2987, type: !3278, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !639)
!14188 = !DILocation(line: 2989, column: 3, scope: !14187)
!14189 = !DILocation(line: 2990, column: 1, scope: !14187)
!14190 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10543, file: !10543, line: 4304, type: !10667, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !14191)
!14191 = !{!14192, !14193, !14194, !14195}
!14192 = !DILocalVariable(name: "Source", arg: 1, scope: !14190, file: !10543, line: 4304, type: !208)
!14193 = !DILocalVariable(name: "PLLM", arg: 2, scope: !14190, file: !10543, line: 4304, type: !208)
!14194 = !DILocalVariable(name: "PLLN", arg: 3, scope: !14190, file: !10543, line: 4304, type: !208)
!14195 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !14190, file: !10543, line: 4304, type: !208)
!14196 = !DILocation(line: 0, scope: !14190)
!14197 = !DILocation(line: 4306, column: 3, scope: !14190)
!14198 = !DILocation(line: 4308, column: 3, scope: !14190)
!14199 = !DILocation(line: 4312, column: 1, scope: !14190)
!14200 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13985, file: !13985, line: 681, type: !14201, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !14203)
!14201 = !DISubroutineType(types: !14202)
!14202 = !{!14028, !208, !14113}
!14203 = !{!14204, !14205, !14206, !14207}
!14204 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !14200, file: !13985, line: 681, type: !208)
!14205 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !14200, file: !13985, line: 681, type: !14113)
!14206 = !DILocalVariable(name: "status", scope: !14200, file: !13985, line: 683, type: !14028)
!14207 = !DILocalVariable(name: "hclk_frequency", scope: !14200, file: !13985, line: 684, type: !208)
!14208 = !DILocation(line: 0, scope: !14200)
!14209 = !DILocation(line: 691, column: 20, scope: !14200)
!14210 = !DILocation(line: 694, column: 6, scope: !14211)
!14211 = distinct !DILexicalBlock(scope: !14200, file: !13985, line: 694, column: 6)
!14212 = !DILocation(line: 694, column: 22, scope: !14211)
!14213 = !DILocation(line: 694, column: 6, scope: !14200)
!14214 = !DILocation(line: 697, column: 14, scope: !14215)
!14215 = distinct !DILexicalBlock(scope: !14211, file: !13985, line: 695, column: 3)
!14216 = !DILocation(line: 701, column: 13, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14200, file: !13985, line: 701, column: 6)
!14218 = !DILocation(line: 701, column: 6, scope: !14200)
!14219 = !DILocation(line: 704, column: 5, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14217, file: !13985, line: 702, column: 3)
!14221 = !DILocation(line: 705, column: 5, scope: !14220)
!14222 = !DILocation(line: 705, column: 12, scope: !14220)
!14223 = !DILocation(line: 705, column: 33, scope: !14220)
!14224 = distinct !{!14224, !14221, !14225}
!14225 = !DILocation(line: 708, column: 5, scope: !14220)
!14226 = !DILocation(line: 711, column: 49, scope: !14220)
!14227 = !DILocation(line: 711, column: 5, scope: !14220)
!14228 = !DILocation(line: 712, column: 5, scope: !14220)
!14229 = !DILocation(line: 713, column: 5, scope: !14220)
!14230 = !DILocation(line: 713, column: 12, scope: !14220)
!14231 = !DILocation(line: 713, column: 37, scope: !14220)
!14232 = distinct !{!14232, !14229, !14233}
!14233 = !DILocation(line: 716, column: 5, scope: !14220)
!14234 = !DILocation(line: 719, column: 50, scope: !14220)
!14235 = !DILocation(line: 719, column: 5, scope: !14220)
!14236 = !DILocation(line: 720, column: 50, scope: !14220)
!14237 = !DILocation(line: 720, column: 5, scope: !14220)
!14238 = !DILocation(line: 721, column: 3, scope: !14220)
!14239 = !DILocation(line: 724, column: 6, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !14200, file: !13985, line: 724, column: 6)
!14241 = !DILocation(line: 724, column: 22, scope: !14240)
!14242 = !DILocation(line: 724, column: 6, scope: !14200)
!14243 = !DILocation(line: 727, column: 14, scope: !14244)
!14244 = distinct !DILexicalBlock(scope: !14240, file: !13985, line: 725, column: 3)
!14245 = !DILocation(line: 728, column: 3, scope: !14244)
!14246 = !DILocation(line: 731, column: 13, scope: !14247)
!14247 = distinct !DILexicalBlock(scope: !14200, file: !13985, line: 731, column: 6)
!14248 = !DILocation(line: 731, column: 6, scope: !14200)
!14249 = !DILocation(line: 733, column: 5, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14247, file: !13985, line: 732, column: 3)
!14251 = !DILocation(line: 734, column: 3, scope: !14250)
!14252 = !DILocation(line: 736, column: 3, scope: !14200)
!14253 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10543, file: !10543, line: 4184, type: !3278, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !639)
!14254 = !DILocation(line: 4186, column: 3, scope: !14253)
!14255 = !DILocation(line: 4187, column: 1, scope: !14253)
!14256 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10543, file: !10543, line: 4205, type: !8354, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !639)
!14257 = !DILocation(line: 4207, column: 11, scope: !14256)
!14258 = !DILocation(line: 4207, column: 44, scope: !14256)
!14259 = !DILocation(line: 4207, column: 3, scope: !14256)
!14260 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10543, file: !10543, line: 3224, type: !8364, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !14261)
!14261 = !{!14262}
!14262 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14260, file: !10543, line: 3224, type: !208)
!14263 = !DILocation(line: 0, scope: !14260)
!14264 = !DILocation(line: 3226, column: 3, scope: !14260)
!14265 = !DILocation(line: 3227, column: 1, scope: !14260)
!14266 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10543, file: !10543, line: 3188, type: !8364, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !14267)
!14267 = !{!14268}
!14268 = !DILocalVariable(name: "Source", arg: 1, scope: !14266, file: !10543, line: 3188, type: !208)
!14269 = !DILocation(line: 0, scope: !14266)
!14270 = !DILocation(line: 3190, column: 3, scope: !14266)
!14271 = !DILocation(line: 3191, column: 1, scope: !14266)
!14272 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10543, file: !10543, line: 3204, type: !8354, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !639)
!14273 = !DILocation(line: 3206, column: 21, scope: !14272)
!14274 = !DILocation(line: 3206, column: 3, scope: !14272)
!14275 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10543, file: !10543, line: 3240, type: !8364, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !14276)
!14276 = !{!14277}
!14277 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14275, file: !10543, line: 3240, type: !208)
!14278 = !DILocation(line: 0, scope: !14275)
!14279 = !DILocation(line: 3242, column: 3, scope: !14275)
!14280 = !DILocation(line: 3243, column: 1, scope: !14275)
!14281 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10543, file: !10543, line: 3256, type: !8364, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !14282)
!14282 = !{!14283}
!14283 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14281, file: !10543, line: 3256, type: !208)
!14284 = !DILocation(line: 0, scope: !14281)
!14285 = !DILocation(line: 3258, column: 3, scope: !14281)
!14286 = !DILocation(line: 3259, column: 1, scope: !14281)
!14287 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !10543, file: !10543, line: 5153, type: !8354, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !639)
!14288 = !DILocation(line: 5155, column: 11, scope: !14287)
!14289 = !DILocation(line: 5155, column: 47, scope: !14287)
!14290 = !DILocation(line: 5155, column: 3, scope: !14287)
!14291 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13985, file: !13985, line: 540, type: !14292, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !14294)
!14292 = !DISubroutineType(types: !14293)
!14293 = !{!14028, !208, !208, !14106, !14113}
!14294 = !{!14295, !14296, !14297, !14298, !14299, !14300}
!14295 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !14291, file: !13985, line: 540, type: !208)
!14296 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !14291, file: !13985, line: 540, type: !208)
!14297 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !14291, file: !13985, line: 541, type: !14106)
!14298 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !14291, file: !13985, line: 541, type: !14113)
!14299 = !DILocalVariable(name: "status", scope: !14291, file: !13985, line: 543, type: !14028)
!14300 = !DILocalVariable(name: "pllfreq", scope: !14291, file: !13985, line: 544, type: !208)
!14301 = !DILocation(line: 0, scope: !14291)
!14302 = !DILocation(line: 551, column: 6, scope: !14303)
!14303 = distinct !DILexicalBlock(scope: !14291, file: !13985, line: 551, column: 6)
!14304 = !DILocation(line: 551, column: 25, scope: !14303)
!14305 = !DILocation(line: 551, column: 6, scope: !14291)
!14306 = !DILocation(line: 554, column: 15, scope: !14307)
!14307 = distinct !DILexicalBlock(scope: !14303, file: !13985, line: 552, column: 3)
!14308 = !DILocation(line: 557, column: 8, scope: !14309)
!14309 = distinct !DILexicalBlock(scope: !14307, file: !13985, line: 557, column: 8)
!14310 = !DILocation(line: 557, column: 29, scope: !14309)
!14311 = !DILocation(line: 557, column: 8, scope: !14307)
!14312 = !DILocation(line: 560, column: 20, scope: !14313)
!14313 = distinct !DILexicalBlock(scope: !14314, file: !13985, line: 560, column: 10)
!14314 = distinct !DILexicalBlock(scope: !14309, file: !13985, line: 558, column: 5)
!14315 = !DILocation(line: 560, column: 10, scope: !14314)
!14316 = !DILocation(line: 562, column: 9, scope: !14317)
!14317 = distinct !DILexicalBlock(scope: !14313, file: !13985, line: 561, column: 7)
!14318 = !DILocation(line: 563, column: 7, scope: !14317)
!14319 = !DILocation(line: 566, column: 9, scope: !14320)
!14320 = distinct !DILexicalBlock(scope: !14313, file: !13985, line: 565, column: 7)
!14321 = !DILocation(line: 570, column: 7, scope: !14314)
!14322 = !DILocation(line: 571, column: 7, scope: !14314)
!14323 = !DILocation(line: 571, column: 14, scope: !14314)
!14324 = !DILocation(line: 571, column: 35, scope: !14314)
!14325 = distinct !{!14325, !14322, !14326}
!14326 = !DILocation(line: 574, column: 7, scope: !14314)
!14327 = !DILocation(line: 578, column: 76, scope: !14307)
!14328 = !DILocation(line: 578, column: 103, scope: !14307)
!14329 = !DILocation(line: 579, column: 54, scope: !14307)
!14330 = !DILocation(line: 578, column: 5, scope: !14307)
!14331 = !DILocation(line: 582, column: 14, scope: !14307)
!14332 = !DILocation(line: 583, column: 3, scope: !14307)
!14333 = !DILocation(line: 0, scope: !14303)
!14334 = !DILocation(line: 590, column: 3, scope: !14291)
!14335 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10543, file: !10543, line: 2969, type: !8354, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !639)
!14336 = !DILocation(line: 2971, column: 11, scope: !14335)
!14337 = !DILocation(line: 2971, column: 44, scope: !14335)
!14338 = !DILocation(line: 2971, column: 3, scope: !14335)
!14339 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10543, file: !10543, line: 2929, type: !3278, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !639)
!14340 = !DILocation(line: 2931, column: 3, scope: !14339)
!14341 = !DILocation(line: 2932, column: 1, scope: !14339)
!14342 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10543, file: !10543, line: 2939, type: !3278, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !639)
!14343 = !DILocation(line: 2941, column: 3, scope: !14342)
!14344 = !DILocation(line: 2942, column: 1, scope: !14342)
!14345 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10543, file: !10543, line: 2949, type: !3278, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !639)
!14346 = !DILocation(line: 2951, column: 3, scope: !14345)
!14347 = !DILocation(line: 2952, column: 1, scope: !14345)
!14348 = distinct !DISubprogram(name: "z_device_state_init", scope: !14349, file: !14349, line: 23, type: !3278, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !14350)
!14349 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14350 = !{!14351}
!14351 = !DILocalVariable(name: "dev", scope: !14348, file: !14349, line: 25, type: !14352)
!14352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14353, size: 32)
!14353 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14354)
!14354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !14355)
!14355 = !{!14356, !14357, !14358, !14359, !14365, !14366}
!14356 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14354, file: !137, line: 380, baseType: !140, size: 32)
!14357 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !14354, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!14358 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !14354, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!14359 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !14354, file: !137, line: 386, baseType: !14360, size: 32, offset: 96)
!14360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14361, size: 32)
!14361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !14362)
!14362 = !{!14363, !14364}
!14363 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !14361, file: !137, line: 359, baseType: !150, size: 8)
!14364 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !14361, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!14365 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14354, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!14366 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !14354, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!14367 = !DILocation(line: 0, scope: !14348)
!14368 = !DILocation(line: 31, column: 1, scope: !14348)
!14369 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !14349, file: !14349, line: 33, type: !14370, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !14372)
!14370 = !DISubroutineType(types: !14371)
!14371 = !{!14352, !140}
!14372 = !{!14373, !14374}
!14373 = !DILocalVariable(name: "name", arg: 1, scope: !14369, file: !14349, line: 33, type: !140)
!14374 = !DILocalVariable(name: "dev", scope: !14369, file: !14349, line: 35, type: !14352)
!14375 = !DILocation(line: 0, scope: !14369)
!14376 = !DILocation(line: 40, column: 12, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !14369, file: !14349, line: 40, column: 6)
!14378 = !DILocation(line: 40, column: 21, scope: !14377)
!14379 = !DILocation(line: 40, column: 25, scope: !14377)
!14380 = !DILocation(line: 40, column: 33, scope: !14377)
!14381 = !DILocation(line: 40, column: 6, scope: !14369)
!14382 = !DILocation(line: 55, column: 2, scope: !14383)
!14383 = distinct !DILexicalBlock(scope: !14369, file: !14349, line: 55, column: 2)
!14384 = !DILocation(line: 50, column: 7, scope: !14385)
!14385 = distinct !DILexicalBlock(scope: !14386, file: !14349, line: 50, column: 7)
!14386 = distinct !DILexicalBlock(scope: !14387, file: !14349, line: 49, column: 57)
!14387 = distinct !DILexicalBlock(scope: !14388, file: !14349, line: 49, column: 2)
!14388 = distinct !DILexicalBlock(scope: !14369, file: !14349, line: 49, column: 2)
!14389 = !DILocation(line: 50, column: 30, scope: !14385)
!14390 = !DILocation(line: 50, column: 39, scope: !14385)
!14391 = !DILocation(line: 50, column: 44, scope: !14385)
!14392 = !DILocation(line: 50, column: 7, scope: !14386)
!14393 = !DILocation(line: 49, column: 53, scope: !14387)
!14394 = !DILocation(line: 49, column: 33, scope: !14387)
!14395 = !DILocation(line: 49, column: 2, scope: !14388)
!14396 = distinct !{!14396, !14395, !14397}
!14397 = !DILocation(line: 53, column: 2, scope: !14388)
!14398 = !DILocation(line: 56, column: 7, scope: !14399)
!14399 = distinct !DILexicalBlock(scope: !14400, file: !14349, line: 56, column: 7)
!14400 = distinct !DILexicalBlock(scope: !14401, file: !14349, line: 55, column: 57)
!14401 = distinct !DILexicalBlock(scope: !14383, file: !14349, line: 55, column: 2)
!14402 = !DILocation(line: 56, column: 30, scope: !14399)
!14403 = !DILocation(line: 56, column: 52, scope: !14399)
!14404 = !DILocation(line: 56, column: 34, scope: !14399)
!14405 = !DILocation(line: 56, column: 58, scope: !14399)
!14406 = !DILocation(line: 56, column: 7, scope: !14400)
!14407 = !DILocation(line: 55, column: 53, scope: !14401)
!14408 = !DILocation(line: 55, column: 33, scope: !14401)
!14409 = distinct !{!14409, !14382, !14410}
!14410 = !DILocation(line: 59, column: 2, scope: !14383)
!14411 = !DILocation(line: 62, column: 1, scope: !14369)
!14412 = distinct !DISubprogram(name: "z_device_is_ready", scope: !14349, file: !14349, line: 93, type: !14413, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !14415)
!14413 = !DISubroutineType(types: !14414)
!14414 = !{!153, !14352}
!14415 = !{!14416}
!14416 = !DILocalVariable(name: "dev", arg: 1, scope: !14412, file: !14349, line: 93, type: !14352)
!14417 = !DILocation(line: 0, scope: !14412)
!14418 = !DILocation(line: 99, column: 10, scope: !14419)
!14419 = distinct !DILexicalBlock(scope: !14412, file: !14349, line: 99, column: 6)
!14420 = !DILocation(line: 99, column: 6, scope: !14412)
!14421 = !DILocation(line: 103, column: 14, scope: !14412)
!14422 = !DILocation(line: 103, column: 21, scope: !14412)
!14423 = !DILocation(line: 103, column: 33, scope: !14412)
!14424 = !DILocation(line: 103, column: 49, scope: !14412)
!14425 = !DILocation(line: 103, column: 58, scope: !14412)
!14426 = !DILocation(line: 104, column: 1, scope: !14412)
!14427 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !14349, file: !14349, line: 87, type: !14428, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !14431)
!14428 = !DISubroutineType(types: !14429)
!14429 = !{!272, !14430}
!14430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14352, size: 32)
!14431 = !{!14432}
!14432 = !DILocalVariable(name: "devices", arg: 1, scope: !14427, file: !14349, line: 87, type: !14430)
!14433 = !DILocation(line: 0, scope: !14427)
!14434 = !DILocation(line: 89, column: 11, scope: !14427)
!14435 = !DILocation(line: 90, column: 2, scope: !14427)
!14436 = distinct !DISubprogram(name: "device_required_foreach", scope: !14349, file: !14349, line: 125, type: !14437, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !14443)
!14437 = !DISubroutineType(types: !14438)
!14438 = !{!125, !14352, !14439, !124}
!14439 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !137, line: 471, baseType: !14440)
!14440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14441, size: 32)
!14441 = !DISubroutineType(types: !14442)
!14442 = !{!125, !14352, !124}
!14443 = !{!14444, !14445, !14446, !14447, !14448}
!14444 = !DILocalVariable(name: "dev", arg: 1, scope: !14436, file: !14349, line: 125, type: !14352)
!14445 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14436, file: !14349, line: 126, type: !14439)
!14446 = !DILocalVariable(name: "context", arg: 3, scope: !14436, file: !14349, line: 127, type: !124)
!14447 = !DILocalVariable(name: "handle_count", scope: !14436, file: !14349, line: 129, type: !272)
!14448 = !DILocalVariable(name: "handles", scope: !14436, file: !14349, line: 130, type: !156)
!14449 = !DILocation(line: 0, scope: !14436)
!14450 = !DILocation(line: 129, column: 2, scope: !14436)
!14451 = !DILocation(line: 129, column: 9, scope: !14436)
!14452 = !DILocation(line: 130, column: 35, scope: !14436)
!14453 = !DILocation(line: 132, column: 33, scope: !14436)
!14454 = !DILocation(line: 132, column: 9, scope: !14436)
!14455 = !DILocation(line: 133, column: 1, scope: !14436)
!14456 = !DILocation(line: 132, column: 2, scope: !14436)
!14457 = distinct !DISubprogram(name: "device_required_handles_get", scope: !137, file: !137, line: 493, type: !14458, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !14460)
!14458 = !DISubroutineType(types: !14459)
!14459 = !{!156, !14352, !2696}
!14460 = !{!14461, !14462, !14463, !14464}
!14461 = !DILocalVariable(name: "dev", arg: 1, scope: !14457, file: !137, line: 493, type: !14352)
!14462 = !DILocalVariable(name: "count", arg: 2, scope: !14457, file: !137, line: 493, type: !2696)
!14463 = !DILocalVariable(name: "rv", scope: !14457, file: !137, line: 495, type: !156)
!14464 = !DILocalVariable(name: "i", scope: !14465, file: !137, line: 498, type: !272)
!14465 = distinct !DILexicalBlock(scope: !14466, file: !137, line: 497, column: 18)
!14466 = distinct !DILexicalBlock(scope: !14457, file: !137, line: 497, column: 6)
!14467 = !DILocation(line: 0, scope: !14457)
!14468 = !DILocation(line: 495, column: 35, scope: !14457)
!14469 = !DILocation(line: 497, column: 9, scope: !14466)
!14470 = !DILocation(line: 497, column: 6, scope: !14457)
!14471 = !DILocation(line: 0, scope: !14465)
!14472 = !DILocation(line: 500, column: 11, scope: !14465)
!14473 = !DILocation(line: 500, column: 40, scope: !14465)
!14474 = !DILocation(line: 502, column: 4, scope: !14475)
!14475 = distinct !DILexicalBlock(scope: !14465, file: !137, line: 501, column: 40)
!14476 = distinct !{!14476, !14477, !14478}
!14477 = !DILocation(line: 500, column: 3, scope: !14465)
!14478 = !DILocation(line: 503, column: 3, scope: !14465)
!14479 = !DILocation(line: 504, column: 10, scope: !14465)
!14480 = !DILocation(line: 505, column: 2, scope: !14465)
!14481 = !DILocation(line: 507, column: 2, scope: !14457)
!14482 = distinct !DISubprogram(name: "device_visitor", scope: !14349, file: !14349, line: 106, type: !14483, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !14485)
!14483 = !DISubroutineType(types: !14484)
!14484 = !{!125, !156, !272, !14439, !124}
!14485 = !{!14486, !14487, !14488, !14489, !14490, !14492, !14495, !14496}
!14486 = !DILocalVariable(name: "handles", arg: 1, scope: !14482, file: !14349, line: 106, type: !156)
!14487 = !DILocalVariable(name: "handle_count", arg: 2, scope: !14482, file: !14349, line: 107, type: !272)
!14488 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !14482, file: !14349, line: 108, type: !14439)
!14489 = !DILocalVariable(name: "context", arg: 4, scope: !14482, file: !14349, line: 109, type: !124)
!14490 = !DILocalVariable(name: "i", scope: !14491, file: !14349, line: 112, type: !272)
!14491 = distinct !DILexicalBlock(scope: !14482, file: !14349, line: 112, column: 2)
!14492 = !DILocalVariable(name: "dh", scope: !14493, file: !14349, line: 113, type: !158)
!14493 = distinct !DILexicalBlock(scope: !14494, file: !14349, line: 112, column: 44)
!14494 = distinct !DILexicalBlock(scope: !14491, file: !14349, line: 112, column: 2)
!14495 = !DILocalVariable(name: "rdev", scope: !14493, file: !14349, line: 114, type: !14352)
!14496 = !DILocalVariable(name: "rc", scope: !14493, file: !14349, line: 115, type: !125)
!14497 = !DILocation(line: 0, scope: !14482)
!14498 = !DILocation(line: 0, scope: !14491)
!14499 = !DILocation(line: 112, column: 23, scope: !14494)
!14500 = !DILocation(line: 112, column: 2, scope: !14491)
!14501 = distinct !{!14501, !14500, !14502}
!14502 = !DILocation(line: 120, column: 2, scope: !14491)
!14503 = !DILocation(line: 113, column: 24, scope: !14493)
!14504 = !DILocation(line: 0, scope: !14493)
!14505 = !DILocation(line: 114, column: 31, scope: !14493)
!14506 = !DILocation(line: 115, column: 12, scope: !14493)
!14507 = !DILocation(line: 117, column: 10, scope: !14508)
!14508 = distinct !DILexicalBlock(scope: !14493, file: !14349, line: 117, column: 7)
!14509 = !DILocation(line: 112, column: 39, scope: !14494)
!14510 = !DILocation(line: 123, column: 1, scope: !14482)
!14511 = distinct !DISubprogram(name: "device_from_handle", scope: !137, file: !137, line: 439, type: !14512, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !14514)
!14512 = !DISubroutineType(types: !14513)
!14513 = !{!14352, !158}
!14514 = !{!14515, !14516, !14517}
!14515 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !14511, file: !137, line: 439, type: !158)
!14516 = !DILocalVariable(name: "dev", scope: !14511, file: !137, line: 443, type: !14352)
!14517 = !DILocalVariable(name: "numdev", scope: !14511, file: !137, line: 444, type: !272)
!14518 = !DILocation(line: 0, scope: !14511)
!14519 = !DILocation(line: 446, column: 7, scope: !14520)
!14520 = distinct !DILexicalBlock(scope: !14511, file: !137, line: 446, column: 6)
!14521 = !DILocation(line: 446, column: 18, scope: !14520)
!14522 = !DILocation(line: 446, column: 23, scope: !14520)
!14523 = !DILocation(line: 450, column: 2, scope: !14511)
!14524 = distinct !DISubprogram(name: "device_supported_foreach", scope: !14349, file: !14349, line: 135, type: !14437, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !14525)
!14525 = !{!14526, !14527, !14528, !14529, !14530}
!14526 = !DILocalVariable(name: "dev", arg: 1, scope: !14524, file: !14349, line: 135, type: !14352)
!14527 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14524, file: !14349, line: 136, type: !14439)
!14528 = !DILocalVariable(name: "context", arg: 3, scope: !14524, file: !14349, line: 137, type: !124)
!14529 = !DILocalVariable(name: "handle_count", scope: !14524, file: !14349, line: 139, type: !272)
!14530 = !DILocalVariable(name: "handles", scope: !14524, file: !14349, line: 140, type: !156)
!14531 = !DILocation(line: 0, scope: !14524)
!14532 = !DILocation(line: 139, column: 2, scope: !14524)
!14533 = !DILocation(line: 139, column: 9, scope: !14524)
!14534 = !DILocation(line: 140, column: 35, scope: !14524)
!14535 = !DILocation(line: 142, column: 33, scope: !14524)
!14536 = !DILocation(line: 142, column: 9, scope: !14524)
!14537 = !DILocation(line: 143, column: 1, scope: !14524)
!14538 = !DILocation(line: 142, column: 2, scope: !14524)
!14539 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !137, file: !137, line: 573, type: !14458, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3238, retainedNodes: !14540)
!14540 = !{!14541, !14542, !14543, !14544, !14545}
!14541 = !DILocalVariable(name: "dev", arg: 1, scope: !14539, file: !137, line: 573, type: !14352)
!14542 = !DILocalVariable(name: "count", arg: 2, scope: !14539, file: !137, line: 573, type: !2696)
!14543 = !DILocalVariable(name: "rv", scope: !14539, file: !137, line: 575, type: !156)
!14544 = !DILocalVariable(name: "region", scope: !14539, file: !137, line: 576, type: !272)
!14545 = !DILocalVariable(name: "i", scope: !14539, file: !137, line: 577, type: !272)
!14546 = !DILocation(line: 0, scope: !14539)
!14547 = !DILocation(line: 575, column: 35, scope: !14539)
!14548 = !DILocation(line: 579, column: 9, scope: !14549)
!14549 = distinct !DILexicalBlock(scope: !14539, file: !137, line: 579, column: 6)
!14550 = !DILocation(line: 579, column: 6, scope: !14539)
!14551 = !DILocation(line: 582, column: 8, scope: !14552)
!14552 = distinct !DILexicalBlock(scope: !14553, file: !137, line: 582, column: 8)
!14553 = distinct !DILexicalBlock(scope: !14554, file: !137, line: 581, column: 23)
!14554 = distinct !DILexicalBlock(scope: !14549, file: !137, line: 579, column: 18)
!14555 = !DILocation(line: 582, column: 12, scope: !14552)
!14556 = !DILocation(line: 585, column: 6, scope: !14553)
!14557 = !DILocation(line: 0, scope: !14554)
!14558 = !DILocation(line: 581, column: 17, scope: !14554)
!14559 = !DILocation(line: 581, column: 3, scope: !14554)
!14560 = !DILocation(line: 588, column: 10, scope: !14554)
!14561 = !DILocation(line: 588, column: 16, scope: !14554)
!14562 = !DILocation(line: 589, column: 4, scope: !14563)
!14563 = distinct !DILexicalBlock(scope: !14554, file: !137, line: 588, column: 39)
!14564 = !DILocation(line: 588, column: 3, scope: !14554)
!14565 = distinct !{!14565, !14564, !14566}
!14566 = !DILocation(line: 590, column: 3, scope: !14554)
!14567 = !DILocation(line: 591, column: 10, scope: !14554)
!14568 = !DILocation(line: 592, column: 2, scope: !14554)
!14569 = !DILocation(line: 575, column: 25, scope: !14539)
!14570 = !DILocation(line: 594, column: 2, scope: !14539)
!14571 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2115, file: !2115, line: 49, type: !14572, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2112, retainedNodes: !639)
!14572 = !DISubroutineType(types: !14573)
!14573 = !{!387}
!14574 = !DILocation(line: 51, column: 10, scope: !14571)
!14575 = !DILocation(line: 51, column: 20, scope: !14571)
!14576 = !DILocation(line: 51, column: 2, scope: !14571)
!14577 = distinct !DISubprogram(name: "coredump", scope: !3245, file: !3245, line: 209, type: !14578, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !14724)
!14578 = !DISubroutineType(types: !14579)
!14579 = !{null, !32, !14580, !14624}
!14580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14581, size: 32)
!14581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14582)
!14582 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2858, line: 141, baseType: !14583)
!14583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2858, line: 97, size: 256, elements: !14584)
!14584 = !{!14585}
!14585 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !14583, file: !2858, line: 107, baseType: !14586, size: 256)
!14586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2858, line: 98, size: 256, elements: !14587)
!14587 = !{!14588, !14593, !14598, !14603, !14608, !14613, !14618, !14623}
!14588 = !DIDerivedType(tag: DW_TAG_member, scope: !14586, file: !2858, line: 99, baseType: !14589, size: 32)
!14589 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14586, file: !2858, line: 99, size: 32, elements: !14590)
!14590 = !{!14591, !14592}
!14591 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !14589, file: !2858, line: 99, baseType: !208, size: 32)
!14592 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !14589, file: !2858, line: 99, baseType: !208, size: 32)
!14593 = !DIDerivedType(tag: DW_TAG_member, scope: !14586, file: !2858, line: 100, baseType: !14594, size: 32, offset: 32)
!14594 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14586, file: !2858, line: 100, size: 32, elements: !14595)
!14595 = !{!14596, !14597}
!14596 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !14594, file: !2858, line: 100, baseType: !208, size: 32)
!14597 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !14594, file: !2858, line: 100, baseType: !208, size: 32)
!14598 = !DIDerivedType(tag: DW_TAG_member, scope: !14586, file: !2858, line: 101, baseType: !14599, size: 32, offset: 64)
!14599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14586, file: !2858, line: 101, size: 32, elements: !14600)
!14600 = !{!14601, !14602}
!14601 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !14599, file: !2858, line: 101, baseType: !208, size: 32)
!14602 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !14599, file: !2858, line: 101, baseType: !208, size: 32)
!14603 = !DIDerivedType(tag: DW_TAG_member, scope: !14586, file: !2858, line: 102, baseType: !14604, size: 32, offset: 96)
!14604 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14586, file: !2858, line: 102, size: 32, elements: !14605)
!14605 = !{!14606, !14607}
!14606 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !14604, file: !2858, line: 102, baseType: !208, size: 32)
!14607 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !14604, file: !2858, line: 102, baseType: !208, size: 32)
!14608 = !DIDerivedType(tag: DW_TAG_member, scope: !14586, file: !2858, line: 103, baseType: !14609, size: 32, offset: 128)
!14609 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14586, file: !2858, line: 103, size: 32, elements: !14610)
!14610 = !{!14611, !14612}
!14611 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !14609, file: !2858, line: 103, baseType: !208, size: 32)
!14612 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !14609, file: !2858, line: 103, baseType: !208, size: 32)
!14613 = !DIDerivedType(tag: DW_TAG_member, scope: !14586, file: !2858, line: 104, baseType: !14614, size: 32, offset: 160)
!14614 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14586, file: !2858, line: 104, size: 32, elements: !14615)
!14615 = !{!14616, !14617}
!14616 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !14614, file: !2858, line: 104, baseType: !208, size: 32)
!14617 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !14614, file: !2858, line: 104, baseType: !208, size: 32)
!14618 = !DIDerivedType(tag: DW_TAG_member, scope: !14586, file: !2858, line: 105, baseType: !14619, size: 32, offset: 192)
!14619 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14586, file: !2858, line: 105, size: 32, elements: !14620)
!14620 = !{!14621, !14622}
!14621 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !14619, file: !2858, line: 105, baseType: !208, size: 32)
!14622 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !14619, file: !2858, line: 105, baseType: !208, size: 32)
!14623 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !14586, file: !2858, line: 106, baseType: !208, size: 32, offset: 224)
!14624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14625, size: 32)
!14625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !14626)
!14626 = !{!14627, !14685, !14697, !14698, !14699, !14700, !14706, !14719}
!14627 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14625, file: !531, line: 247, baseType: !14628, size: 384)
!14628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !14629)
!14629 = !{!14630, !14654, !14661, !14662, !14663, !14672, !14673, !14674}
!14630 = !DIDerivedType(tag: DW_TAG_member, scope: !14628, file: !531, line: 60, baseType: !14631, size: 64)
!14631 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14628, file: !531, line: 60, size: 64, elements: !14632)
!14632 = !{!14633, !14648}
!14633 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14631, file: !531, line: 61, baseType: !14634, size: 64)
!14634 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !14635)
!14635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !14636)
!14636 = !{!14637, !14643}
!14637 = !DIDerivedType(tag: DW_TAG_member, scope: !14635, file: !541, line: 38, baseType: !14638, size: 32)
!14638 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14635, file: !541, line: 38, size: 32, elements: !14639)
!14639 = !{!14640, !14642}
!14640 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14638, file: !541, line: 39, baseType: !14641, size: 32)
!14641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14635, size: 32)
!14642 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14638, file: !541, line: 40, baseType: !14641, size: 32)
!14643 = !DIDerivedType(tag: DW_TAG_member, scope: !14635, file: !541, line: 42, baseType: !14644, size: 32, offset: 32)
!14644 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14635, file: !541, line: 42, size: 32, elements: !14645)
!14645 = !{!14646, !14647}
!14646 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14644, file: !541, line: 43, baseType: !14641, size: 32)
!14647 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14644, file: !541, line: 44, baseType: !14641, size: 32)
!14648 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14631, file: !531, line: 62, baseType: !14649, size: 64)
!14649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !14650)
!14650 = !{!14651}
!14651 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14649, file: !557, line: 50, baseType: !14652, size: 64)
!14652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14653, size: 64, elements: !562)
!14653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14649, size: 32)
!14654 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14628, file: !531, line: 68, baseType: !14655, size: 32, offset: 64)
!14655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14656, size: 32)
!14656 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !14657)
!14657 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !14658)
!14658 = !{!14659}
!14659 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14657, file: !567, line: 232, baseType: !14660, size: 64)
!14660 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !14635)
!14661 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14628, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!14662 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14628, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!14663 = !DIDerivedType(tag: DW_TAG_member, scope: !14628, file: !531, line: 90, baseType: !14664, size: 16, offset: 112)
!14664 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14628, file: !531, line: 90, size: 16, elements: !14665)
!14665 = !{!14666, !14671}
!14666 = !DIDerivedType(tag: DW_TAG_member, scope: !14664, file: !531, line: 91, baseType: !14667, size: 16)
!14667 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14664, file: !531, line: 91, size: 16, elements: !14668)
!14668 = !{!14669, !14670}
!14669 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14667, file: !531, line: 96, baseType: !581, size: 8)
!14670 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14667, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!14671 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14664, file: !531, line: 100, baseType: !227, size: 16)
!14672 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14628, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!14673 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14628, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!14674 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14628, file: !531, line: 131, baseType: !14675, size: 192, offset: 192)
!14675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !14676)
!14676 = !{!14677, !14678, !14684}
!14677 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14675, file: !567, line: 245, baseType: !14634, size: 64)
!14678 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14675, file: !567, line: 246, baseType: !14679, size: 32, offset: 64)
!14679 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !14680)
!14680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14681, size: 32)
!14681 = !DISubroutineType(types: !14682)
!14682 = !{null, !14683}
!14683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14675, size: 32)
!14684 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14675, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!14685 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14625, file: !531, line: 250, baseType: !14686, size: 288, offset: 384)
!14686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !14687)
!14687 = !{!14688, !14689, !14690, !14691, !14692, !14693, !14694, !14695, !14696}
!14688 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14686, file: !601, line: 26, baseType: !208, size: 32)
!14689 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14686, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!14690 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14686, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!14691 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14686, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!14692 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14686, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!14693 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14686, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!14694 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14686, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!14695 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14686, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!14696 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14686, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!14697 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14625, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!14698 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14625, file: !531, line: 256, baseType: !14656, size: 64, offset: 704)
!14699 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14625, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!14700 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14625, file: !531, line: 300, baseType: !14701, size: 96, offset: 800)
!14701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !14702)
!14702 = !{!14703, !14704, !14705}
!14703 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14701, file: !531, line: 153, baseType: !22, size: 32)
!14704 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14701, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!14705 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14701, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!14706 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14625, file: !531, line: 325, baseType: !14707, size: 32, offset: 896)
!14707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14708, size: 32)
!14708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !14709)
!14709 = !{!14710, !14716, !14717}
!14710 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14708, file: !624, line: 5074, baseType: !14711, size: 96)
!14711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !14712)
!14712 = !{!14713, !14714, !14715}
!14713 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14711, file: !628, line: 57, baseType: !631, size: 32)
!14714 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14711, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!14715 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14711, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!14716 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14708, file: !624, line: 5075, baseType: !14656, size: 64, offset: 96)
!14717 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14708, file: !624, line: 5076, baseType: !14718, offset: 160)
!14718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!14719 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14625, file: !531, line: 343, baseType: !14720, size: 64, offset: 928)
!14720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !14721)
!14721 = !{!14722, !14723}
!14722 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14720, file: !601, line: 63, baseType: !208, size: 32)
!14723 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14720, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!14724 = !{!14725, !14726, !14727}
!14725 = !DILocalVariable(name: "reason", arg: 1, scope: !14577, file: !3245, line: 209, type: !32)
!14726 = !DILocalVariable(name: "esf", arg: 2, scope: !14577, file: !3245, line: 209, type: !14580)
!14727 = !DILocalVariable(name: "thread", arg: 3, scope: !14577, file: !3245, line: 210, type: !14624)
!14728 = !DILocation(line: 0, scope: !14577)
!14729 = !DILocation(line: 212, column: 1, scope: !14577)
!14730 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3245, file: !3245, line: 214, type: !14731, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !14733)
!14731 = !DISubroutineType(types: !14732)
!14732 = !{null, !22, !22}
!14733 = !{!14734, !14735}
!14734 = !DILocalVariable(name: "start_addr", arg: 1, scope: !14730, file: !3245, line: 214, type: !22)
!14735 = !DILocalVariable(name: "end_addr", arg: 2, scope: !14730, file: !3245, line: 214, type: !22)
!14736 = !DILocation(line: 0, scope: !14730)
!14737 = !DILocation(line: 216, column: 1, scope: !14730)
!14738 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3245, file: !3245, line: 218, type: !14739, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !14741)
!14739 = !DISubroutineType(types: !14740)
!14740 = !{null, !184, !272}
!14741 = !{!14742, !14743}
!14742 = !DILocalVariable(name: "buf", arg: 1, scope: !14738, file: !3245, line: 218, type: !184)
!14743 = !DILocalVariable(name: "buflen", arg: 2, scope: !14738, file: !3245, line: 218, type: !272)
!14744 = !DILocation(line: 0, scope: !14738)
!14745 = !DILocation(line: 220, column: 1, scope: !14738)
!14746 = distinct !DISubprogram(name: "coredump_query", scope: !3245, file: !3245, line: 222, type: !14747, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !14749)
!14747 = !DISubroutineType(types: !14748)
!14748 = !{!125, !3244, !124}
!14749 = !{!14750, !14751}
!14750 = !DILocalVariable(name: "query_id", arg: 1, scope: !14746, file: !3245, line: 222, type: !3244)
!14751 = !DILocalVariable(name: "arg", arg: 2, scope: !14746, file: !3245, line: 222, type: !124)
!14752 = !DILocation(line: 0, scope: !14746)
!14753 = !DILocation(line: 224, column: 2, scope: !14746)
!14754 = distinct !DISubprogram(name: "coredump_cmd", scope: !3245, file: !3245, line: 227, type: !14755, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !14757)
!14755 = !DISubroutineType(types: !14756)
!14756 = !{!125, !3251, !124}
!14757 = !{!14758, !14759}
!14758 = !DILocalVariable(name: "query_id", arg: 1, scope: !14754, file: !3245, line: 227, type: !3251)
!14759 = !DILocalVariable(name: "arg", arg: 2, scope: !14754, file: !3245, line: 227, type: !124)
!14760 = !DILocation(line: 0, scope: !14754)
!14761 = !DILocation(line: 229, column: 2, scope: !14754)
!14762 = distinct !DISubprogram(name: "arch_system_halt", scope: !14763, file: !14763, line: 23, type: !6817, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !14764)
!14763 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14764 = !{!14765}
!14765 = !DILocalVariable(name: "reason", arg: 1, scope: !14762, file: !14763, line: 23, type: !32)
!14766 = !DILocation(line: 0, scope: !14762)
!14767 = !DILocation(line: 55, column: 2, scope: !14768, inlinedAt: !14772)
!14768 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6806, file: !6806, line: 42, type: !6807, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !14769)
!14769 = !{!14770, !14771}
!14770 = !DILocalVariable(name: "key", scope: !14768, file: !6806, line: 44, type: !32)
!14771 = !DILocalVariable(name: "tmp", scope: !14768, file: !6806, line: 53, type: !32)
!14772 = distinct !DILocation(line: 31, column: 8, scope: !14762)
!14773 = !{i64 1951426}
!14774 = !DILocation(line: 0, scope: !14768, inlinedAt: !14772)
!14775 = !DILocation(line: 32, column: 2, scope: !14762)
!14776 = !DILocation(line: 32, column: 2, scope: !14777)
!14777 = distinct !DILexicalBlock(scope: !14778, file: !14763, line: 32, column: 2)
!14778 = distinct !DILexicalBlock(scope: !14762, file: !14763, line: 32, column: 2)
!14779 = distinct !{!14779, !14780, !14781}
!14780 = !DILocation(line: 32, column: 2, scope: !14778)
!14781 = !DILocation(line: 34, column: 2, scope: !14778)
!14782 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !14763, file: !14763, line: 39, type: !14783, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !14785)
!14783 = !DISubroutineType(types: !14784)
!14784 = !{null, !32, !14580}
!14785 = !{!14786, !14787}
!14786 = !DILocalVariable(name: "reason", arg: 1, scope: !14782, file: !14763, line: 39, type: !32)
!14787 = !DILocalVariable(name: "esf", arg: 2, scope: !14782, file: !14763, line: 40, type: !14580)
!14788 = !DILocation(line: 0, scope: !14782)
!14789 = !DILocation(line: 45, column: 2, scope: !14790)
!14790 = distinct !DILexicalBlock(scope: !14791, file: !14763, line: 45, column: 2)
!14791 = distinct !DILexicalBlock(scope: !14792, file: !14763, line: 45, column: 2)
!14792 = distinct !DILexicalBlock(scope: !14793, file: !14763, line: 45, column: 2)
!14793 = distinct !DILexicalBlock(scope: !14782, file: !14763, line: 45, column: 2)
!14794 = !DILocation(line: 46, column: 2, scope: !14782)
!14795 = distinct !DISubprogram(name: "k_fatal_halt", scope: !14763, file: !14763, line: 81, type: !6817, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !14796)
!14796 = !{!14797}
!14797 = !DILocalVariable(name: "reason", arg: 1, scope: !14795, file: !14763, line: 81, type: !32)
!14798 = !DILocation(line: 0, scope: !14795)
!14799 = !DILocation(line: 83, column: 2, scope: !14795)
!14800 = distinct !DISubprogram(name: "z_fatal_error", scope: !14763, file: !14763, line: 96, type: !14783, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !14801)
!14801 = !{!14802, !14803, !14804, !14805}
!14802 = !DILocalVariable(name: "reason", arg: 1, scope: !14800, file: !14763, line: 96, type: !32)
!14803 = !DILocalVariable(name: "esf", arg: 2, scope: !14800, file: !14763, line: 96, type: !14580)
!14804 = !DILocalVariable(name: "key", scope: !14800, file: !14763, line: 102, type: !32)
!14805 = !DILocalVariable(name: "thread", scope: !14800, file: !14763, line: 103, type: !14624)
!14806 = !DILocation(line: 0, scope: !14800)
!14807 = !DILocation(line: 55, column: 2, scope: !14768, inlinedAt: !14808)
!14808 = distinct !DILocation(line: 102, column: 21, scope: !14800)
!14809 = !DILocation(line: 0, scope: !14768, inlinedAt: !14808)
!14810 = !DILocation(line: 104, column: 4, scope: !14800)
!14811 = !DILocation(line: 109, column: 2, scope: !14812)
!14812 = distinct !DILexicalBlock(scope: !14813, file: !14763, line: 109, column: 2)
!14813 = distinct !DILexicalBlock(scope: !14814, file: !14763, line: 109, column: 2)
!14814 = distinct !DILexicalBlock(scope: !14815, file: !14763, line: 109, column: 2)
!14815 = distinct !DILexicalBlock(scope: !14800, file: !14763, line: 109, column: 2)
!14816 = !DILocation(line: 119, column: 11, scope: !14817)
!14817 = distinct !DILexicalBlock(scope: !14800, file: !14763, line: 119, column: 6)
!14818 = !DILocation(line: 119, column: 20, scope: !14817)
!14819 = !DILocalVariable(name: "esf", arg: 1, scope: !14820, file: !9291, line: 71, type: !14580)
!14820 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !9291, file: !9291, line: 71, type: !14821, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !14823)
!14821 = !DISubroutineType(types: !14822)
!14822 = !{!153, !14580}
!14823 = !{!14819}
!14824 = !DILocation(line: 0, scope: !14820, inlinedAt: !14825)
!14825 = distinct !DILocation(line: 119, column: 23, scope: !14817)
!14826 = !DILocation(line: 73, column: 21, scope: !14820, inlinedAt: !14825)
!14827 = !DILocation(line: 73, column: 26, scope: !14820, inlinedAt: !14825)
!14828 = !DILocation(line: 73, column: 9, scope: !14820, inlinedAt: !14825)
!14829 = !DILocation(line: 119, column: 6, scope: !14800)
!14830 = !DILocation(line: 120, column: 3, scope: !14831)
!14831 = distinct !DILexicalBlock(scope: !14832, file: !14763, line: 120, column: 3)
!14832 = distinct !DILexicalBlock(scope: !14833, file: !14763, line: 120, column: 3)
!14833 = distinct !DILexicalBlock(scope: !14834, file: !14763, line: 120, column: 3)
!14834 = distinct !DILexicalBlock(scope: !14835, file: !14763, line: 120, column: 3)
!14835 = distinct !DILexicalBlock(scope: !14817, file: !14763, line: 119, column: 57)
!14836 = !DILocation(line: 121, column: 2, scope: !14835)
!14837 = !DILocation(line: 124, column: 2, scope: !14838)
!14838 = distinct !DILexicalBlock(scope: !14839, file: !14763, line: 124, column: 2)
!14839 = distinct !DILexicalBlock(scope: !14840, file: !14763, line: 124, column: 2)
!14840 = distinct !DILexicalBlock(scope: !14841, file: !14763, line: 124, column: 2)
!14841 = distinct !DILexicalBlock(scope: !14800, file: !14763, line: 124, column: 2)
!14842 = !DILocation(line: 131, column: 2, scope: !14800)
!14843 = !DILocation(line: 0, scope: !14820, inlinedAt: !14844)
!14844 = distinct !DILocation(line: 151, column: 24, scope: !14845)
!14845 = distinct !DILexicalBlock(scope: !14846, file: !14763, line: 151, column: 7)
!14846 = distinct !DILexicalBlock(scope: !14847, file: !14763, line: 146, column: 32)
!14847 = distinct !DILexicalBlock(scope: !14800, file: !14763, line: 146, column: 6)
!14848 = !DILocation(line: 151, column: 7, scope: !14846)
!14849 = !DILocation(line: 151, column: 21, scope: !14845)
!14850 = !DILocalVariable(name: "key", arg: 1, scope: !14851, file: !6806, line: 84, type: !32)
!14851 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6806, file: !6806, line: 84, type: !6817, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !14852)
!14852 = !{!14850}
!14853 = !DILocation(line: 0, scope: !14851, inlinedAt: !14854)
!14854 = distinct !DILocation(line: 186, column: 2, scope: !14800)
!14855 = !DILocation(line: 95, column: 2, scope: !14851, inlinedAt: !14854)
!14856 = !{i64 1952243}
!14857 = !DILocation(line: 189, column: 3, scope: !14858)
!14858 = distinct !DILexicalBlock(scope: !14859, file: !14763, line: 188, column: 41)
!14859 = distinct !DILexicalBlock(scope: !14800, file: !14763, line: 188, column: 6)
!14860 = !DILocation(line: 191, column: 1, scope: !14800)
!14861 = distinct !DISubprogram(name: "k_current_get", scope: !624, file: !624, line: 530, type: !14862, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !639)
!14862 = !DISubroutineType(types: !14863)
!14863 = !{!14864}
!14864 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !14624)
!14865 = !DILocation(line: 535, column: 9, scope: !14861)
!14866 = !DILocation(line: 535, column: 2, scope: !14861)
!14867 = distinct !DISubprogram(name: "reason_to_str", scope: !14763, file: !14763, line: 62, type: !14868, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !14870)
!14868 = !DISubroutineType(types: !14869)
!14869 = !{!140, !32}
!14870 = !{!14871}
!14871 = !DILocalVariable(name: "reason", arg: 1, scope: !14867, file: !14763, line: 62, type: !32)
!14872 = !DILocation(line: 0, scope: !14867)
!14873 = !DILocation(line: 64, column: 2, scope: !14867)
!14874 = !DILocation(line: 0, scope: !14875)
!14875 = distinct !DILexicalBlock(scope: !14867, file: !14763, line: 64, column: 18)
!14876 = !DILocation(line: 78, column: 1, scope: !14867)
!14877 = distinct !DISubprogram(name: "thread_name_get", scope: !14763, file: !14763, line: 51, type: !14878, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !14880)
!14878 = !DISubroutineType(types: !14879)
!14879 = !{!140, !14624}
!14880 = !{!14881, !14882}
!14881 = !DILocalVariable(name: "thread", arg: 1, scope: !14877, file: !14763, line: 51, type: !14624)
!14882 = !DILocalVariable(name: "thread_name", scope: !14877, file: !14763, line: 53, type: !140)
!14883 = !DILocation(line: 0, scope: !14877)
!14884 = !DILocation(line: 53, column: 36, scope: !14877)
!14885 = !DILocation(line: 53, column: 28, scope: !14877)
!14886 = !DILocation(line: 53, column: 47, scope: !14877)
!14887 = !DILocation(line: 55, column: 19, scope: !14888)
!14888 = distinct !DILexicalBlock(scope: !14877, file: !14763, line: 55, column: 6)
!14889 = !DILocation(line: 55, column: 28, scope: !14888)
!14890 = !DILocation(line: 55, column: 32, scope: !14888)
!14891 = !DILocation(line: 55, column: 47, scope: !14888)
!14892 = !DILocation(line: 55, column: 6, scope: !14877)
!14893 = !DILocation(line: 57, column: 2, scope: !14894)
!14894 = distinct !DILexicalBlock(scope: !14888, file: !14763, line: 55, column: 57)
!14895 = !DILocation(line: 59, column: 2, scope: !14877)
!14896 = distinct !DISubprogram(name: "k_thread_abort", scope: !5350, file: !5350, line: 188, type: !14897, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !14899)
!14897 = !DISubroutineType(types: !14898)
!14898 = !{null, !14864}
!14899 = !{!14900}
!14900 = !DILocalVariable(name: "thread", arg: 1, scope: !14896, file: !5350, line: 188, type: !14864)
!14901 = !DILocation(line: 0, scope: !14896)
!14902 = !DILocation(line: 197, column: 2, scope: !14903)
!14903 = distinct !DILexicalBlock(scope: !14896, file: !5350, line: 197, column: 2)
!14904 = !{i64 2154066466}
!14905 = !DILocation(line: 198, column: 2, scope: !14896)
!14906 = !DILocation(line: 199, column: 1, scope: !14896)
!14907 = distinct !DISubprogram(name: "z_current_get", scope: !5350, file: !5350, line: 173, type: !14862, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !639)
!14908 = !DILocation(line: 180, column: 2, scope: !14909)
!14909 = distinct !DILexicalBlock(scope: !14907, file: !5350, line: 180, column: 2)
!14910 = !{i64 2154066398}
!14911 = !DILocation(line: 181, column: 9, scope: !14907)
!14912 = !DILocation(line: 181, column: 2, scope: !14907)
!14913 = distinct !DISubprogram(name: "z_early_memset", scope: !2123, file: !2123, line: 108, type: !14914, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2119, retainedNodes: !14916)
!14914 = !DISubroutineType(types: !14915)
!14915 = !{null, !124, !125, !272}
!14916 = !{!14917, !14918, !14919}
!14917 = !DILocalVariable(name: "dst", arg: 1, scope: !14913, file: !2123, line: 108, type: !124)
!14918 = !DILocalVariable(name: "c", arg: 2, scope: !14913, file: !2123, line: 108, type: !125)
!14919 = !DILocalVariable(name: "n", arg: 3, scope: !14913, file: !2123, line: 108, type: !272)
!14920 = !DILocation(line: 0, scope: !14913)
!14921 = !DILocation(line: 110, column: 9, scope: !14913)
!14922 = !DILocation(line: 111, column: 1, scope: !14913)
!14923 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2123, file: !2123, line: 121, type: !14924, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2119, retainedNodes: !14926)
!14924 = !DISubroutineType(types: !14925)
!14925 = !{null, !124, !13, !272}
!14926 = !{!14927, !14928, !14929}
!14927 = !DILocalVariable(name: "dst", arg: 1, scope: !14923, file: !2123, line: 121, type: !124)
!14928 = !DILocalVariable(name: "src", arg: 2, scope: !14923, file: !2123, line: 121, type: !13)
!14929 = !DILocalVariable(name: "n", arg: 3, scope: !14923, file: !2123, line: 121, type: !272)
!14930 = !DILocation(line: 0, scope: !14923)
!14931 = !DILocation(line: 123, column: 9, scope: !14923)
!14932 = !DILocation(line: 124, column: 1, scope: !14923)
!14933 = distinct !DISubprogram(name: "z_bss_zero", scope: !2123, file: !2123, line: 132, type: !3278, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2119, retainedNodes: !639)
!14934 = !DILocation(line: 143, column: 2, scope: !14933)
!14935 = !DILocation(line: 168, column: 1, scope: !14933)
!14936 = distinct !DISubprogram(name: "z_init_cpu", scope: !2123, file: !2123, line: 372, type: !10155, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2119, retainedNodes: !14937)
!14937 = !{!14938}
!14938 = !DILocalVariable(name: "id", arg: 1, scope: !14936, file: !2123, line: 372, type: !125)
!14939 = !DILocation(line: 0, scope: !14936)
!14940 = !DILocation(line: 374, column: 2, scope: !14936)
!14941 = !DILocation(line: 375, column: 34, scope: !14936)
!14942 = !DILocation(line: 375, column: 19, scope: !14936)
!14943 = !DILocation(line: 375, column: 31, scope: !14936)
!14944 = !DILocation(line: 376, column: 24, scope: !14936)
!14945 = !DILocation(line: 376, column: 19, scope: !14936)
!14946 = !DILocation(line: 376, column: 22, scope: !14936)
!14947 = !DILocation(line: 378, column: 26, scope: !14936)
!14948 = !DILocation(line: 378, column: 4, scope: !14936)
!14949 = !DILocation(line: 378, column: 50, scope: !14936)
!14950 = !DILocation(line: 377, column: 19, scope: !14936)
!14951 = !DILocation(line: 377, column: 29, scope: !14936)
!14952 = !DILocation(line: 384, column: 1, scope: !14936)
!14953 = distinct !DISubprogram(name: "init_idle_thread", scope: !2123, file: !2123, line: 343, type: !10155, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2119, retainedNodes: !14954)
!14954 = !{!14955, !14956, !14957, !14960}
!14955 = !DILocalVariable(name: "i", arg: 1, scope: !14953, file: !2123, line: 343, type: !125)
!14956 = !DILocalVariable(name: "thread", scope: !14953, file: !2123, line: 345, type: !2215)
!14957 = !DILocalVariable(name: "stack", scope: !14953, file: !2123, line: 346, type: !14958)
!14958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14959, size: 32)
!14959 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5229, line: 44, baseType: !2329)
!14960 = !DILocalVariable(name: "tname", scope: !14953, file: !2123, line: 358, type: !393)
!14961 = !DILocation(line: 0, scope: !14953)
!14962 = !DILocation(line: 345, column: 29, scope: !14953)
!14963 = !DILocation(line: 346, column: 28, scope: !14953)
!14964 = !DILocation(line: 362, column: 37, scope: !14953)
!14965 = !DILocation(line: 362, column: 36, scope: !14953)
!14966 = !DILocation(line: 361, column: 2, scope: !14953)
!14967 = !DILocation(line: 365, column: 2, scope: !14953)
!14968 = !DILocation(line: 370, column: 1, scope: !14953)
!14969 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2330, file: !2330, line: 331, type: !14970, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2119, retainedNodes: !14972)
!14970 = !DISubroutineType(types: !14971)
!14971 = !{!393, !14958}
!14972 = !{!14973}
!14973 = !DILocalVariable(name: "sym", arg: 1, scope: !14969, file: !2330, line: 331, type: !14958)
!14974 = !DILocation(line: 0, scope: !14969)
!14975 = !DILocation(line: 333, column: 21, scope: !14969)
!14976 = !DILocation(line: 333, column: 2, scope: !14969)
!14977 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14978, file: !14978, line: 155, type: !14979, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2119, retainedNodes: !14981)
!14978 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14979 = !DISubroutineType(types: !14980)
!14980 = !{null, !2215}
!14981 = !{!14982}
!14982 = !DILocalVariable(name: "thread", arg: 1, scope: !14977, file: !14978, line: 155, type: !2215)
!14983 = !DILocation(line: 0, scope: !14977)
!14984 = !DILocation(line: 157, column: 15, scope: !14977)
!14985 = !DILocation(line: 157, column: 28, scope: !14977)
!14986 = !DILocation(line: 158, column: 1, scope: !14977)
!14987 = distinct !DISubprogram(name: "z_cstart", scope: !2123, file: !2123, line: 501, type: !3278, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2119, retainedNodes: !14988)
!14988 = !{!14989}
!14989 = !DILocalVariable(name: "dummy_thread", scope: !14987, file: !2123, line: 518, type: !2216)
!14990 = !DILocation(line: 507, column: 2, scope: !14987)
!14991 = !DILocation(line: 43, column: 14, scope: !14992, inlinedAt: !14996)
!14992 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14993, file: !14993, line: 40, type: !3278, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2119, retainedNodes: !14994)
!14993 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14994 = !{!14995}
!14995 = !DILocalVariable(name: "msp", scope: !14992, file: !14993, line: 42, type: !208)
!14996 = distinct !DILocation(line: 44, column: 2, scope: !14997, inlinedAt: !14999)
!14997 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14998, file: !14998, line: 42, type: !3278, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2119, retainedNodes: !639)
!14998 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14999 = distinct !DILocation(line: 510, column: 2, scope: !14987)
!15000 = !DILocation(line: 43, column: 3, scope: !14992, inlinedAt: !14996)
!15001 = !DILocation(line: 43, column: 60, scope: !14992, inlinedAt: !14996)
!15002 = !DILocation(line: 0, scope: !14992, inlinedAt: !14996)
!15003 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !15004, file: !8273, line: 1153, type: !208)
!15004 = distinct !DISubprogram(name: "__set_MSP", scope: !8273, file: !8273, line: 1153, type: !8364, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2119, retainedNodes: !15005)
!15005 = !{!15003}
!15006 = !DILocation(line: 0, scope: !15004, inlinedAt: !15007)
!15007 = distinct !DILocation(line: 46, column: 2, scope: !14992, inlinedAt: !14996)
!15008 = !DILocation(line: 1155, column: 3, scope: !15004, inlinedAt: !15007)
!15009 = !{i64 2848670}
!15010 = !DILocation(line: 62, column: 11, scope: !14992, inlinedAt: !14996)
!15011 = !DILocation(line: 102, column: 2, scope: !15012, inlinedAt: !15013)
!15012 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !9291, file: !9291, line: 97, type: !3278, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2119, retainedNodes: !639)
!15013 = distinct !DILocation(line: 45, column: 2, scope: !14997, inlinedAt: !14999)
!15014 = !DILocation(line: 108, column: 2, scope: !15012, inlinedAt: !15013)
!15015 = !DILocation(line: 112, column: 2, scope: !15012, inlinedAt: !15013)
!15016 = !DILocation(line: 113, column: 2, scope: !15012, inlinedAt: !15013)
!15017 = !DILocation(line: 114, column: 2, scope: !15012, inlinedAt: !15013)
!15018 = !DILocation(line: 116, column: 2, scope: !15012, inlinedAt: !15013)
!15019 = !DILocation(line: 123, column: 13, scope: !15012, inlinedAt: !15013)
!15020 = !DILocation(line: 46, column: 2, scope: !14997, inlinedAt: !14999)
!15021 = !DILocation(line: 47, column: 2, scope: !14997, inlinedAt: !14999)
!15022 = !DILocation(line: 174, column: 12, scope: !15023, inlinedAt: !15024)
!15023 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !9291, file: !9291, line: 169, type: !3278, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2119, retainedNodes: !639)
!15024 = distinct !DILocation(line: 48, column: 2, scope: !14997, inlinedAt: !14999)
!15025 = !DILocation(line: 179, column: 12, scope: !15023, inlinedAt: !15024)
!15026 = !DILocation(line: 50, column: 2, scope: !14997, inlinedAt: !14999)
!15027 = !DILocation(line: 57, column: 2, scope: !14997, inlinedAt: !14999)
!15028 = !DILocation(line: 518, column: 2, scope: !14987)
!15029 = !DILocation(line: 518, column: 18, scope: !14987)
!15030 = !DILocation(line: 520, column: 2, scope: !14987)
!15031 = !DILocation(line: 523, column: 2, scope: !14987)
!15032 = !DILocation(line: 526, column: 2, scope: !14987)
!15033 = !DILocation(line: 527, column: 2, scope: !14987)
!15034 = !DILocation(line: 543, column: 24, scope: !14987)
!15035 = !DILocation(line: 543, column: 2, scope: !14987)
!15036 = !DILocation(line: 0, scope: !2354)
!15037 = !DILocation(line: 246, column: 15, scope: !2372)
!15038 = !DILocation(line: 246, column: 36, scope: !2371)
!15039 = !DILocation(line: 246, column: 2, scope: !2372)
!15040 = !DILocation(line: 247, column: 37, scope: !2370)
!15041 = !DILocation(line: 0, scope: !2370)
!15042 = !DILocation(line: 248, column: 19, scope: !2370)
!15043 = !DILocation(line: 248, column: 12, scope: !2370)
!15044 = !DILocation(line: 250, column: 11, scope: !15045)
!15045 = distinct !DILexicalBlock(scope: !2370, file: !2123, line: 250, column: 7)
!15046 = !DILocation(line: 250, column: 7, scope: !2370)
!15047 = !DILocation(line: 254, column: 11, scope: !15048)
!15048 = distinct !DILexicalBlock(scope: !15049, file: !2123, line: 254, column: 8)
!15049 = distinct !DILexicalBlock(scope: !15045, file: !2123, line: 250, column: 20)
!15050 = !DILocation(line: 254, column: 8, scope: !15049)
!15051 = !DILocation(line: 255, column: 9, scope: !15052)
!15052 = distinct !DILexicalBlock(scope: !15048, file: !2123, line: 254, column: 17)
!15053 = !DILocation(line: 258, column: 9, scope: !15052)
!15054 = !DILocation(line: 261, column: 28, scope: !15052)
!15055 = !DILocation(line: 261, column: 10, scope: !15052)
!15056 = !DILocation(line: 261, column: 17, scope: !15052)
!15057 = !DILocation(line: 261, column: 26, scope: !15052)
!15058 = !DILocation(line: 262, column: 4, scope: !15052)
!15059 = !DILocation(line: 263, column: 9, scope: !15049)
!15060 = !DILocation(line: 263, column: 16, scope: !15049)
!15061 = !DILocation(line: 263, column: 28, scope: !15049)
!15062 = !DILocation(line: 264, column: 3, scope: !15049)
!15063 = !DILocation(line: 246, column: 60, scope: !2371)
!15064 = distinct !{!15064, !15039, !15065}
!15065 = !DILocation(line: 265, column: 2, scope: !2372)
!15066 = !DILocation(line: 266, column: 1, scope: !2354)
!15067 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8307, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2119, retainedNodes: !15068)
!15068 = !{!15069, !15070}
!15069 = !DILocalVariable(name: "IRQn", arg: 1, scope: !15067, file: !680, line: 1814, type: !914)
!15070 = !DILocalVariable(name: "priority", arg: 2, scope: !15067, file: !680, line: 1814, type: !208)
!15071 = !DILocation(line: 0, scope: !15067)
!15072 = !DILocation(line: 1822, column: 48, scope: !15073)
!15073 = distinct !DILexicalBlock(scope: !15074, file: !680, line: 1821, column: 3)
!15074 = distinct !DILexicalBlock(scope: !15067, file: !680, line: 1816, column: 7)
!15075 = !DILocation(line: 1822, column: 32, scope: !15073)
!15076 = !DILocation(line: 1822, column: 40, scope: !15073)
!15077 = !DILocation(line: 1822, column: 5, scope: !15073)
!15078 = !DILocation(line: 1822, column: 46, scope: !15073)
!15079 = !DILocation(line: 1824, column: 1, scope: !15067)
!15080 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14998, file: !14998, line: 32, type: !3278, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!15081 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !15082, file: !15082, line: 215, type: !14979, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2119, retainedNodes: !15083)
!15082 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15083 = !{!15084}
!15084 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !15081, file: !15082, line: 215, type: !2215)
!15085 = !DILocation(line: 0, scope: !15081)
!15086 = !DILocation(line: 217, column: 21, scope: !15081)
!15087 = !DILocation(line: 217, column: 34, scope: !15081)
!15088 = !DILocation(line: 221, column: 21, scope: !15081)
!15089 = !DILocation(line: 221, column: 34, scope: !15081)
!15090 = !DILocation(line: 223, column: 27, scope: !15081)
!15091 = !DILocation(line: 223, column: 33, scope: !15081)
!15092 = !DILocation(line: 224, column: 27, scope: !15081)
!15093 = !DILocation(line: 224, column: 32, scope: !15081)
!15094 = !DILocation(line: 232, column: 16, scope: !15081)
!15095 = !DILocation(line: 232, column: 30, scope: !15081)
!15096 = !DILocation(line: 239, column: 24, scope: !15081)
!15097 = !DILocation(line: 240, column: 1, scope: !15081)
!15098 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2123, file: !2123, line: 399, type: !15099, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2119, retainedNodes: !15101)
!15099 = !DISubroutineType(types: !15100)
!15100 = !{!393}
!15101 = !{!15102}
!15102 = !DILocalVariable(name: "stack_ptr", scope: !15098, file: !2123, line: 401, type: !393)
!15103 = !DILocation(line: 404, column: 2, scope: !15098)
!15104 = !DILocation(line: 416, column: 24, scope: !15098)
!15105 = !DILocation(line: 418, column: 14, scope: !15098)
!15106 = !DILocation(line: 0, scope: !15098)
!15107 = !DILocation(line: 423, column: 2, scope: !15098)
!15108 = !DILocation(line: 424, column: 2, scope: !15098)
!15109 = !DILocation(line: 426, column: 2, scope: !15098)
!15110 = !DILocation(line: 428, column: 2, scope: !15098)
!15111 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2123, file: !2123, line: 432, type: !15112, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2119, retainedNodes: !15114)
!15112 = !DISubroutineType(types: !15113)
!15113 = !{null, !393}
!15114 = !{!15115}
!15115 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !15111, file: !2123, line: 432, type: !393)
!15116 = !DILocation(line: 0, scope: !15111)
!15117 = !DILocation(line: 435, column: 2, scope: !15111)
!15118 = !DILocation(line: 445, column: 2, scope: !15111)
!15119 = distinct !DISubprogram(name: "bg_thread_main", scope: !2123, file: !2123, line: 277, type: !5231, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2119, retainedNodes: !15120)
!15120 = !{!15121, !15122, !15123}
!15121 = !DILocalVariable(name: "unused1", arg: 1, scope: !15119, file: !2123, line: 277, type: !124)
!15122 = !DILocalVariable(name: "unused2", arg: 2, scope: !15119, file: !2123, line: 277, type: !124)
!15123 = !DILocalVariable(name: "unused3", arg: 3, scope: !15119, file: !2123, line: 277, type: !124)
!15124 = !DILocation(line: 0, scope: !15119)
!15125 = !DILocation(line: 291, column: 20, scope: !15119)
!15126 = !DILocation(line: 293, column: 2, scope: !15119)
!15127 = !DILocation(line: 297, column: 2, scope: !15119)
!15128 = !DILocation(line: 305, column: 2, scope: !15119)
!15129 = !DILocation(line: 307, column: 2, scope: !15119)
!15130 = !DILocation(line: 330, column: 8, scope: !15119)
!15131 = !DILocation(line: 333, column: 34, scope: !15119)
!15132 = !DILocation(line: 339, column: 1, scope: !15119)
!15133 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2385, file: !2385, line: 45, type: !15134, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15142)
!15134 = !DISubroutineType(types: !15135)
!15135 = !{null, !15136, !124}
!15136 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !624, line: 103, baseType: !15137)
!15137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15138, size: 32)
!15138 = !DISubroutineType(types: !15139)
!15139 = !{null, !15140, !124}
!15140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15141, size: 32)
!15141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2390)
!15142 = !{!15143, !15144}
!15143 = !DILocalVariable(name: "user_cb", arg: 1, scope: !15133, file: !2385, line: 45, type: !15136)
!15144 = !DILocalVariable(name: "user_data", arg: 2, scope: !15133, file: !2385, line: 45, type: !124)
!15145 = !DILocation(line: 0, scope: !15133)
!15146 = !DILocation(line: 71, column: 1, scope: !15133)
!15147 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2385, file: !2385, line: 73, type: !15134, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15148)
!15148 = !{!15149, !15150}
!15149 = !DILocalVariable(name: "user_cb", arg: 1, scope: !15147, file: !2385, line: 73, type: !15136)
!15150 = !DILocalVariable(name: "user_data", arg: 2, scope: !15147, file: !2385, line: 73, type: !124)
!15151 = !DILocation(line: 0, scope: !15147)
!15152 = !DILocation(line: 95, column: 1, scope: !15147)
!15153 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2385, file: !2385, line: 97, type: !9292, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !639)
!15154 = !DILocation(line: 1031, column: 3, scope: !15155, inlinedAt: !15158)
!15155 = distinct !DISubprogram(name: "__get_IPSR", scope: !8273, file: !8273, line: 1027, type: !8354, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15156)
!15156 = !{!15157}
!15157 = !DILocalVariable(name: "result", scope: !15155, file: !8273, line: 1029, type: !208)
!15158 = distinct !DILocation(line: 48, column: 10, scope: !15159, inlinedAt: !15160)
!15159 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9291, file: !9291, line: 46, type: !9292, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !639)
!15160 = distinct !DILocation(line: 99, column: 9, scope: !15153)
!15161 = !{i64 2854321}
!15162 = !DILocation(line: 0, scope: !15155, inlinedAt: !15158)
!15163 = !DILocation(line: 48, column: 9, scope: !15159, inlinedAt: !15160)
!15164 = !DILocation(line: 99, column: 2, scope: !15153)
!15165 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2385, file: !2385, line: 106, type: !3278, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !639)
!15166 = !DILocation(line: 108, column: 2, scope: !15165)
!15167 = !DILocation(line: 108, column: 17, scope: !15165)
!15168 = !DILocation(line: 108, column: 30, scope: !15165)
!15169 = !DILocation(line: 109, column: 1, scope: !15165)
!15170 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2385, file: !2385, line: 116, type: !3278, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !639)
!15171 = !DILocation(line: 118, column: 2, scope: !15170)
!15172 = !DILocation(line: 118, column: 17, scope: !15170)
!15173 = !DILocation(line: 118, column: 30, scope: !15170)
!15174 = !DILocation(line: 119, column: 1, scope: !15170)
!15175 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2385, file: !2385, line: 126, type: !9292, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !639)
!15176 = !DILocation(line: 128, column: 10, scope: !15175)
!15177 = !DILocation(line: 128, column: 25, scope: !15175)
!15178 = !DILocation(line: 128, column: 38, scope: !15175)
!15179 = !DILocation(line: 128, column: 53, scope: !15175)
!15180 = !DILocation(line: 128, column: 2, scope: !15175)
!15181 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2385, file: !2385, line: 187, type: !15182, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15184)
!15182 = !DISubroutineType(types: !15183)
!15183 = !{!125, !2389, !140}
!15184 = !{!15185, !15186}
!15185 = !DILocalVariable(name: "thread", arg: 1, scope: !15181, file: !2385, line: 187, type: !2389)
!15186 = !DILocalVariable(name: "value", arg: 2, scope: !15181, file: !2385, line: 187, type: !140)
!15187 = !DILocation(line: 0, scope: !15181)
!15188 = !DILocation(line: 206, column: 2, scope: !15181)
!15189 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2385, file: !2385, line: 238, type: !15190, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15192)
!15190 = !DISubroutineType(types: !15191)
!15191 = !{!140, !2389}
!15192 = !{!15193}
!15193 = !DILocalVariable(name: "thread", arg: 1, scope: !15189, file: !2385, line: 238, type: !2389)
!15194 = !DILocation(line: 0, scope: !15189)
!15195 = !DILocation(line: 244, column: 2, scope: !15189)
!15196 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2385, file: !2385, line: 248, type: !15197, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15199)
!15197 = !DISubroutineType(types: !15198)
!15198 = !{!125, !2388, !393, !272}
!15199 = !{!15200, !15201, !15202}
!15200 = !DILocalVariable(name: "thread", arg: 1, scope: !15196, file: !2385, line: 248, type: !2388)
!15201 = !DILocalVariable(name: "buf", arg: 2, scope: !15196, file: !2385, line: 248, type: !393)
!15202 = !DILocalVariable(name: "size", arg: 3, scope: !15196, file: !2385, line: 248, type: !272)
!15203 = !DILocation(line: 0, scope: !15196)
!15204 = !DILocation(line: 257, column: 2, scope: !15196)
!15205 = !DILocation(line: 0, scope: !2384)
!15206 = !DILocation(line: 281, column: 11, scope: !15207)
!15207 = distinct !DILexicalBlock(scope: !2384, file: !2385, line: 281, column: 6)
!15208 = !DILocation(line: 281, column: 20, scope: !15207)
!15209 = !DILocation(line: 275, column: 45, scope: !2384)
!15210 = !DILocation(line: 285, column: 10, scope: !2384)
!15211 = !DILocation(line: 0, scope: !2505)
!15212 = !DILocation(line: 293, column: 39, scope: !15213)
!15213 = distinct !DILexicalBlock(scope: !2505, file: !2385, line: 293, column: 2)
!15214 = !DILocation(line: 293, column: 2, scope: !2505)
!15215 = !DILocation(line: 273, column: 14, scope: !2384)
!15216 = !DILocation(line: 309, column: 2, scope: !2384)
!15217 = !DILocation(line: 309, column: 11, scope: !2384)
!15218 = !DILocation(line: 311, column: 2, scope: !2384)
!15219 = !DILocation(line: 293, column: 26, scope: !15213)
!15220 = !DILocation(line: 294, column: 9, scope: !15221)
!15221 = distinct !DILexicalBlock(scope: !15213, file: !2385, line: 293, column: 54)
!15222 = !DILocation(line: 295, column: 21, scope: !15223)
!15223 = distinct !DILexicalBlock(scope: !15221, file: !2385, line: 295, column: 7)
!15224 = !DILocation(line: 295, column: 28, scope: !15223)
!15225 = !DILocation(line: 295, column: 7, scope: !15221)
!15226 = !DILocation(line: 299, column: 25, scope: !15221)
!15227 = !DILocation(line: 299, column: 41, scope: !15221)
!15228 = !DILocation(line: 300, column: 7, scope: !15221)
!15229 = !DILocation(line: 300, column: 26, scope: !15221)
!15230 = !DILocation(line: 299, column: 10, scope: !15221)
!15231 = !DILocation(line: 299, column: 7, scope: !15221)
!15232 = !DILocation(line: 302, column: 16, scope: !15221)
!15233 = !DILocation(line: 304, column: 20, scope: !15234)
!15234 = distinct !DILexicalBlock(scope: !15221, file: !2385, line: 304, column: 7)
!15235 = !DILocation(line: 304, column: 7, scope: !15221)
!15236 = !DILocation(line: 305, column: 26, scope: !15237)
!15237 = distinct !DILexicalBlock(scope: !15234, file: !2385, line: 304, column: 26)
!15238 = !DILocation(line: 305, column: 42, scope: !15237)
!15239 = !DILocation(line: 305, column: 11, scope: !15237)
!15240 = !DILocation(line: 305, column: 8, scope: !15237)
!15241 = !DILocation(line: 306, column: 3, scope: !15237)
!15242 = !DILocation(line: 293, column: 50, scope: !15213)
!15243 = !DILocation(line: 312, column: 1, scope: !2384)
!15244 = distinct !DISubprogram(name: "copy_bytes", scope: !2385, file: !2385, line: 261, type: !15245, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15247)
!15245 = !DISubroutineType(types: !15246)
!15246 = !{!272, !393, !272, !140, !272}
!15247 = !{!15248, !15249, !15250, !15251, !15252}
!15248 = !DILocalVariable(name: "dest", arg: 1, scope: !15244, file: !2385, line: 261, type: !393)
!15249 = !DILocalVariable(name: "dest_size", arg: 2, scope: !15244, file: !2385, line: 261, type: !272)
!15250 = !DILocalVariable(name: "src", arg: 3, scope: !15244, file: !2385, line: 261, type: !140)
!15251 = !DILocalVariable(name: "src_size", arg: 4, scope: !15244, file: !2385, line: 261, type: !272)
!15252 = !DILocalVariable(name: "bytes_to_copy", scope: !15244, file: !2385, line: 263, type: !272)
!15253 = !DILocation(line: 0, scope: !15244)
!15254 = !DILocation(line: 265, column: 18, scope: !15244)
!15255 = !DILocation(line: 266, column: 2, scope: !15244)
!15256 = !DILocation(line: 268, column: 2, scope: !15244)
!15257 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2385, file: !2385, line: 383, type: !15258, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15260)
!15258 = !DISubroutineType(types: !15259)
!15259 = !{null, !2389}
!15260 = !{!15261}
!15261 = !DILocalVariable(name: "thread", arg: 1, scope: !15257, file: !2385, line: 383, type: !2389)
!15262 = !DILocation(line: 0, scope: !15257)
!15263 = !DILocation(line: 387, column: 2, scope: !15257)
!15264 = !DILocation(line: 388, column: 1, scope: !15257)
!15265 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2385, file: !2385, line: 528, type: !15266, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15273)
!15266 = !DISubroutineType(types: !15267)
!15267 = !{!393, !2389, !15268, !272, !5228, !124, !124, !124, !125, !208, !140}
!15268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15269, size: 32)
!15269 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5229, line: 44, baseType: !15270)
!15270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2330, line: 47, size: 8, elements: !15271)
!15271 = !{!15272}
!15272 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15270, file: !2330, line: 48, baseType: !142, size: 8)
!15273 = !{!15274, !15275, !15276, !15277, !15278, !15279, !15280, !15281, !15282, !15283, !15284}
!15274 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15265, file: !2385, line: 528, type: !2389)
!15275 = !DILocalVariable(name: "stack", arg: 2, scope: !15265, file: !2385, line: 529, type: !15268)
!15276 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15265, file: !2385, line: 529, type: !272)
!15277 = !DILocalVariable(name: "entry", arg: 4, scope: !15265, file: !2385, line: 530, type: !5228)
!15278 = !DILocalVariable(name: "p1", arg: 5, scope: !15265, file: !2385, line: 531, type: !124)
!15279 = !DILocalVariable(name: "p2", arg: 6, scope: !15265, file: !2385, line: 531, type: !124)
!15280 = !DILocalVariable(name: "p3", arg: 7, scope: !15265, file: !2385, line: 531, type: !124)
!15281 = !DILocalVariable(name: "prio", arg: 8, scope: !15265, file: !2385, line: 532, type: !125)
!15282 = !DILocalVariable(name: "options", arg: 9, scope: !15265, file: !2385, line: 532, type: !208)
!15283 = !DILocalVariable(name: "name", arg: 10, scope: !15265, file: !2385, line: 532, type: !140)
!15284 = !DILocalVariable(name: "stack_ptr", scope: !15265, file: !2385, line: 534, type: !393)
!15285 = !DILocation(line: 0, scope: !15265)
!15286 = !DILocation(line: 550, column: 28, scope: !15265)
!15287 = !DILocation(line: 550, column: 2, scope: !15265)
!15288 = !DILocation(line: 553, column: 34, scope: !15265)
!15289 = !DILocation(line: 553, column: 2, scope: !15265)
!15290 = !DILocation(line: 554, column: 14, scope: !15265)
!15291 = !DILocation(line: 564, column: 2, scope: !15265)
!15292 = !DILocation(line: 567, column: 14, scope: !15265)
!15293 = !DILocation(line: 567, column: 24, scope: !15265)
!15294 = !DILocation(line: 612, column: 7, scope: !15295)
!15295 = distinct !DILexicalBlock(scope: !15265, file: !2385, line: 612, column: 6)
!15296 = !DILocation(line: 612, column: 6, scope: !15265)
!15297 = !DILocation(line: 627, column: 40, scope: !15265)
!15298 = !DILocation(line: 637, column: 2, scope: !15265)
!15299 = !DILocation(line: 613, column: 15, scope: !15300)
!15300 = distinct !DILexicalBlock(scope: !15295, file: !2385, line: 612, column: 17)
!15301 = !DILocation(line: 613, column: 29, scope: !15300)
!15302 = !DILocation(line: 638, column: 1, scope: !15265)
!15303 = distinct !DISubprogram(name: "z_waitq_init", scope: !15304, file: !15304, line: 47, type: !15305, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15307)
!15304 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15305 = !DISubroutineType(types: !15306)
!15306 = !{null, !2420}
!15307 = !{!15308}
!15308 = !DILocalVariable(name: "w", arg: 1, scope: !15303, file: !15304, line: 47, type: !2420)
!15309 = !DILocation(line: 0, scope: !15303)
!15310 = !DILocation(line: 49, column: 21, scope: !15303)
!15311 = !DILocation(line: 49, column: 2, scope: !15303)
!15312 = !DILocation(line: 50, column: 1, scope: !15303)
!15313 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2385, file: !2385, line: 791, type: !15314, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15317)
!15314 = !DISubroutineType(types: !15315)
!15315 = !{null, !15316, !125, !208, !32}
!15316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 32)
!15317 = !{!15318, !15319, !15320, !15321}
!15318 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15313, file: !2385, line: 791, type: !15316)
!15319 = !DILocalVariable(name: "priority", arg: 2, scope: !15313, file: !2385, line: 791, type: !125)
!15320 = !DILocalVariable(name: "initial_state", arg: 3, scope: !15313, file: !2385, line: 792, type: !208)
!15321 = !DILocalVariable(name: "options", arg: 4, scope: !15313, file: !2385, line: 792, type: !32)
!15322 = !DILocation(line: 0, scope: !15313)
!15323 = !DILocation(line: 795, column: 15, scope: !15313)
!15324 = !DILocation(line: 795, column: 25, scope: !15313)
!15325 = !DILocation(line: 796, column: 30, scope: !15313)
!15326 = !DILocation(line: 796, column: 15, scope: !15313)
!15327 = !DILocation(line: 796, column: 28, scope: !15313)
!15328 = !DILocation(line: 797, column: 30, scope: !15313)
!15329 = !DILocation(line: 797, column: 15, scope: !15313)
!15330 = !DILocation(line: 797, column: 28, scope: !15313)
!15331 = !DILocation(line: 799, column: 22, scope: !15313)
!15332 = !DILocation(line: 799, column: 15, scope: !15313)
!15333 = !DILocation(line: 799, column: 20, scope: !15313)
!15334 = !DILocation(line: 801, column: 15, scope: !15313)
!15335 = !DILocation(line: 801, column: 28, scope: !15313)
!15336 = !DILocation(line: 814, column: 2, scope: !15313)
!15337 = !DILocation(line: 815, column: 1, scope: !15313)
!15338 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2385, file: !2385, line: 449, type: !15339, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15341)
!15339 = !DISubroutineType(types: !15340)
!15340 = !{!393, !2389, !15268, !272}
!15341 = !{!15342, !15343, !15344, !15345, !15346, !15347, !15348, !15349}
!15342 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15338, file: !2385, line: 449, type: !2389)
!15343 = !DILocalVariable(name: "stack", arg: 2, scope: !15338, file: !2385, line: 450, type: !15268)
!15344 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15338, file: !2385, line: 450, type: !272)
!15345 = !DILocalVariable(name: "stack_obj_size", scope: !15338, file: !2385, line: 452, type: !272)
!15346 = !DILocalVariable(name: "stack_buf_size", scope: !15338, file: !2385, line: 452, type: !272)
!15347 = !DILocalVariable(name: "stack_ptr", scope: !15338, file: !2385, line: 453, type: !393)
!15348 = !DILocalVariable(name: "stack_buf_start", scope: !15338, file: !2385, line: 453, type: !393)
!15349 = !DILocalVariable(name: "delta", scope: !15338, file: !2385, line: 454, type: !272)
!15350 = !DILocation(line: 0, scope: !15338)
!15351 = !DILocation(line: 465, column: 20, scope: !15352)
!15352 = distinct !DILexicalBlock(scope: !15338, file: !2385, line: 463, column: 2)
!15353 = !DILocation(line: 466, column: 21, scope: !15352)
!15354 = !DILocation(line: 473, column: 28, scope: !15338)
!15355 = !DILocation(line: 514, column: 33, scope: !15338)
!15356 = !DILocation(line: 514, column: 25, scope: !15338)
!15357 = !DILocation(line: 514, column: 31, scope: !15338)
!15358 = !DILocation(line: 515, column: 25, scope: !15338)
!15359 = !DILocation(line: 515, column: 30, scope: !15338)
!15360 = !DILocation(line: 516, column: 25, scope: !15338)
!15361 = !DILocation(line: 516, column: 31, scope: !15338)
!15362 = !DILocation(line: 520, column: 2, scope: !15338)
!15363 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2330, file: !2330, line: 331, type: !15364, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15366)
!15364 = !DISubroutineType(types: !15365)
!15365 = !{!393, !15268}
!15366 = !{!15367}
!15367 = !DILocalVariable(name: "sym", arg: 1, scope: !15363, file: !2330, line: 331, type: !15268)
!15368 = !DILocation(line: 0, scope: !15363)
!15369 = !DILocation(line: 333, column: 21, scope: !15363)
!15370 = !DILocation(line: 333, column: 2, scope: !15363)
!15371 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !15372, file: !15372, line: 40, type: !15373, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15375)
!15372 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15373 = !DISubroutineType(types: !15374)
!15374 = !{null, !15316}
!15375 = !{!15376}
!15376 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15371, file: !15372, line: 40, type: !15316)
!15377 = !DILocation(line: 0, scope: !15371)
!15378 = !DILocation(line: 42, column: 31, scope: !15371)
!15379 = !DILocation(line: 42, column: 2, scope: !15371)
!15380 = !DILocation(line: 43, column: 1, scope: !15371)
!15381 = distinct !DISubprogram(name: "z_init_timeout", scope: !15372, file: !15372, line: 25, type: !2446, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15382)
!15382 = !{!15383}
!15383 = !DILocalVariable(name: "to", arg: 1, scope: !15381, file: !15372, line: 25, type: !2448)
!15384 = !DILocation(line: 0, scope: !15381)
!15385 = !DILocation(line: 27, column: 22, scope: !15381)
!15386 = !DILocation(line: 27, column: 2, scope: !15381)
!15387 = !DILocation(line: 28, column: 1, scope: !15381)
!15388 = distinct !DISubprogram(name: "sys_dnode_init", scope: !541, file: !541, line: 211, type: !15389, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15391)
!15389 = !DISubroutineType(types: !15390)
!15390 = !{null, !2492}
!15391 = !{!15392}
!15392 = !DILocalVariable(name: "node", arg: 1, scope: !15388, file: !541, line: 211, type: !2492)
!15393 = !DILocation(line: 0, scope: !15388)
!15394 = !DILocation(line: 213, column: 8, scope: !15388)
!15395 = !DILocation(line: 213, column: 13, scope: !15388)
!15396 = !DILocation(line: 214, column: 8, scope: !15388)
!15397 = !DILocation(line: 214, column: 13, scope: !15388)
!15398 = !DILocation(line: 215, column: 1, scope: !15388)
!15399 = distinct !DISubprogram(name: "sys_dlist_init", scope: !541, file: !541, line: 197, type: !15400, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15403)
!15400 = !DISubroutineType(types: !15401)
!15401 = !{null, !15402}
!15402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 32)
!15403 = !{!15404}
!15404 = !DILocalVariable(name: "list", arg: 1, scope: !15399, file: !541, line: 197, type: !15402)
!15405 = !DILocation(line: 0, scope: !15399)
!15406 = !DILocation(line: 199, column: 8, scope: !15399)
!15407 = !DILocation(line: 199, column: 13, scope: !15399)
!15408 = !DILocation(line: 200, column: 8, scope: !15399)
!15409 = !DILocation(line: 200, column: 13, scope: !15399)
!15410 = !DILocation(line: 201, column: 1, scope: !15399)
!15411 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2385, file: !2385, line: 641, type: !15412, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15418)
!15412 = !DISubroutineType(types: !15413)
!15413 = !{!2388, !2389, !15268, !272, !5228, !124, !124, !124, !125, !208, !15414}
!15414 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1865, line: 67, baseType: !15415)
!15415 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1865, line: 65, size: 64, elements: !15416)
!15416 = !{!15417}
!15417 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15415, file: !1865, line: 66, baseType: !1864, size: 64)
!15418 = !{!15419, !15420, !15421, !15422, !15423, !15424, !15425, !15426, !15427, !15428}
!15419 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15411, file: !2385, line: 641, type: !2389)
!15420 = !DILocalVariable(name: "stack", arg: 2, scope: !15411, file: !2385, line: 642, type: !15268)
!15421 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15411, file: !2385, line: 643, type: !272)
!15422 = !DILocalVariable(name: "entry", arg: 4, scope: !15411, file: !2385, line: 643, type: !5228)
!15423 = !DILocalVariable(name: "p1", arg: 5, scope: !15411, file: !2385, line: 644, type: !124)
!15424 = !DILocalVariable(name: "p2", arg: 6, scope: !15411, file: !2385, line: 644, type: !124)
!15425 = !DILocalVariable(name: "p3", arg: 7, scope: !15411, file: !2385, line: 644, type: !124)
!15426 = !DILocalVariable(name: "prio", arg: 8, scope: !15411, file: !2385, line: 645, type: !125)
!15427 = !DILocalVariable(name: "options", arg: 9, scope: !15411, file: !2385, line: 645, type: !208)
!15428 = !DILocalVariable(name: "delay", arg: 10, scope: !15411, file: !2385, line: 645, type: !15414)
!15429 = !DILocation(line: 0, scope: !15411)
!15430 = !DILocation(line: 649, column: 2, scope: !15411)
!15431 = !DILocation(line: 652, column: 7, scope: !15432)
!15432 = distinct !DILexicalBlock(scope: !15411, file: !2385, line: 652, column: 6)
!15433 = !DILocation(line: 652, column: 6, scope: !15411)
!15434 = !DILocation(line: 653, column: 3, scope: !15435)
!15435 = distinct !DILexicalBlock(scope: !15432, file: !2385, line: 652, column: 39)
!15436 = !DILocation(line: 654, column: 2, scope: !15435)
!15437 = !DILocation(line: 656, column: 2, scope: !15411)
!15438 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2385, file: !2385, line: 401, type: !15439, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15441)
!15439 = !DISubroutineType(types: !15440)
!15440 = !{null, !2389, !15414}
!15441 = !{!15442, !15443}
!15442 = !DILocalVariable(name: "thread", arg: 1, scope: !15438, file: !2385, line: 401, type: !2389)
!15443 = !DILocalVariable(name: "delay", arg: 2, scope: !15438, file: !2385, line: 401, type: !15414)
!15444 = !DILocation(line: 0, scope: !15438)
!15445 = !DILocation(line: 404, column: 6, scope: !15446)
!15446 = distinct !DILexicalBlock(scope: !15438, file: !2385, line: 404, column: 6)
!15447 = !DILocation(line: 404, column: 6, scope: !15438)
!15448 = !DILocation(line: 405, column: 3, scope: !15449)
!15449 = distinct !DILexicalBlock(scope: !15446, file: !2385, line: 404, column: 38)
!15450 = !DILocation(line: 406, column: 2, scope: !15449)
!15451 = !DILocation(line: 407, column: 3, scope: !15452)
!15452 = distinct !DILexicalBlock(scope: !15446, file: !2385, line: 406, column: 9)
!15453 = !DILocation(line: 413, column: 1, scope: !15438)
!15454 = distinct !DISubprogram(name: "k_thread_start", scope: !5350, file: !5350, line: 205, type: !15455, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15457)
!15455 = !DISubroutineType(types: !15456)
!15456 = !{null, !2388}
!15457 = !{!15458}
!15458 = !DILocalVariable(name: "thread", arg: 1, scope: !15454, file: !5350, line: 205, type: !2388)
!15459 = !DILocation(line: 0, scope: !15454)
!15460 = !DILocation(line: 214, column: 2, scope: !15461)
!15461 = distinct !DILexicalBlock(scope: !15454, file: !5350, line: 214, column: 2)
!15462 = !{i64 2154091690}
!15463 = !DILocation(line: 215, column: 2, scope: !15454)
!15464 = !DILocation(line: 216, column: 1, scope: !15454)
!15465 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15372, file: !15372, line: 47, type: !15439, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15466)
!15466 = !{!15467, !15468}
!15467 = !DILocalVariable(name: "thread", arg: 1, scope: !15465, file: !15372, line: 47, type: !2389)
!15468 = !DILocalVariable(name: "ticks", arg: 2, scope: !15465, file: !15372, line: 47, type: !15414)
!15469 = !DILocation(line: 0, scope: !15465)
!15470 = !DILocation(line: 49, column: 30, scope: !15465)
!15471 = !DILocation(line: 49, column: 2, scope: !15465)
!15472 = !DILocation(line: 50, column: 1, scope: !15465)
!15473 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2385, file: !2385, line: 748, type: !3278, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15474)
!15474 = !{!15475, !15493}
!15475 = !DILocalVariable(name: "thread_data", scope: !15476, file: !2385, line: 750, type: !15477)
!15476 = distinct !DILexicalBlock(scope: !15473, file: !2385, line: 750, column: 2)
!15477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15478, size: 32)
!15478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !624, line: 620, size: 384, elements: !15479)
!15479 = !{!15480, !15481, !15482, !15483, !15484, !15485, !15486, !15487, !15488, !15489, !15490, !15492}
!15480 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !15478, file: !624, line: 621, baseType: !2389, size: 32)
!15481 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !15478, file: !624, line: 622, baseType: !15268, size: 32, offset: 32)
!15482 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !15478, file: !624, line: 623, baseType: !32, size: 32, offset: 64)
!15483 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !15478, file: !624, line: 624, baseType: !5228, size: 32, offset: 96)
!15484 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !15478, file: !624, line: 625, baseType: !124, size: 32, offset: 128)
!15485 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !15478, file: !624, line: 626, baseType: !124, size: 32, offset: 160)
!15486 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !15478, file: !624, line: 627, baseType: !124, size: 32, offset: 192)
!15487 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !15478, file: !624, line: 628, baseType: !125, size: 32, offset: 224)
!15488 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !15478, file: !624, line: 629, baseType: !208, size: 32, offset: 256)
!15489 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !15478, file: !624, line: 630, baseType: !888, size: 32, offset: 288)
!15490 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !15478, file: !624, line: 631, baseType: !15491, size: 32, offset: 320)
!15491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3278, size: 32)
!15492 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !15478, file: !624, line: 632, baseType: !140, size: 32, offset: 352)
!15493 = !DILocalVariable(name: "thread_data", scope: !15494, file: !2385, line: 781, type: !15477)
!15494 = distinct !DILexicalBlock(scope: !15473, file: !2385, line: 781, column: 2)
!15495 = !DILocation(line: 0, scope: !15476)
!15496 = !DILocation(line: 750, column: 2, scope: !15476)
!15497 = !DILocation(line: 780, column: 2, scope: !15473)
!15498 = !DILocation(line: 0, scope: !15494)
!15499 = !DILocation(line: 781, column: 2, scope: !15494)
!15500 = !DILocation(line: 752, column: 17, scope: !15501)
!15501 = distinct !DILexicalBlock(scope: !15502, file: !2385, line: 750, column: 38)
!15502 = distinct !DILexicalBlock(scope: !15476, file: !2385, line: 750, column: 2)
!15503 = !DILocation(line: 753, column: 17, scope: !15501)
!15504 = !DILocation(line: 754, column: 17, scope: !15501)
!15505 = !DILocation(line: 755, column: 17, scope: !15501)
!15506 = !DILocation(line: 756, column: 17, scope: !15501)
!15507 = !DILocation(line: 757, column: 17, scope: !15501)
!15508 = !DILocation(line: 758, column: 17, scope: !15501)
!15509 = !DILocation(line: 759, column: 17, scope: !15501)
!15510 = !DILocation(line: 760, column: 17, scope: !15501)
!15511 = !DILocation(line: 751, column: 3, scope: !15501)
!15512 = !DILocation(line: 763, column: 16, scope: !15501)
!15513 = !DILocation(line: 763, column: 29, scope: !15501)
!15514 = !DILocation(line: 763, column: 39, scope: !15501)
!15515 = !DILocation(line: 750, column: 2, scope: !15502)
!15516 = !DILocation(line: 750, column: 2, scope: !15517)
!15517 = distinct !DILexicalBlock(scope: !15502, file: !2385, line: 750, column: 2)
!15518 = distinct !{!15518, !15496, !15519}
!15519 = !DILocation(line: 764, column: 2, scope: !15476)
!15520 = !DILocation(line: 787, column: 2, scope: !15473)
!15521 = !DILocation(line: 788, column: 1, scope: !15473)
!15522 = !DILocation(line: 782, column: 20, scope: !15523)
!15523 = distinct !DILexicalBlock(scope: !15524, file: !2385, line: 782, column: 7)
!15524 = distinct !DILexicalBlock(scope: !15525, file: !2385, line: 781, column: 38)
!15525 = distinct !DILexicalBlock(scope: !15494, file: !2385, line: 781, column: 2)
!15526 = !DILocation(line: 782, column: 31, scope: !15523)
!15527 = !DILocation(line: 782, column: 7, scope: !15524)
!15528 = !DILocation(line: 783, column: 37, scope: !15529)
!15529 = distinct !DILexicalBlock(scope: !15523, file: !2385, line: 782, column: 51)
!15530 = !DILocation(line: 784, column: 10, scope: !15529)
!15531 = !DILocation(line: 783, column: 4, scope: !15529)
!15532 = !DILocation(line: 785, column: 3, scope: !15529)
!15533 = !DILocation(line: 781, column: 2, scope: !15525)
!15534 = !DILocation(line: 781, column: 2, scope: !15535)
!15535 = distinct !DILexicalBlock(scope: !15525, file: !2385, line: 781, column: 2)
!15536 = distinct !{!15536, !15499, !15537}
!15537 = !DILocation(line: 786, column: 2, scope: !15494)
!15538 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !15539, file: !15539, line: 403, type: !15540, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15542)
!15539 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15540 = !DISubroutineType(types: !15541)
!15541 = !{!1771, !1771}
!15542 = !{!15543}
!15543 = !DILocalVariable(name: "t", arg: 1, scope: !15538, file: !15539, line: 403, type: !1771)
!15544 = !DILocation(line: 0, scope: !15538)
!15545 = !DILocalVariable(name: "t", arg: 1, scope: !15546, file: !15539, line: 102, type: !1771)
!15546 = distinct !DISubprogram(name: "z_tmcvt", scope: !15539, file: !15539, line: 102, type: !15547, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15549)
!15547 = !DISubroutineType(types: !15548)
!15548 = !{!1771, !1771, !208, !208, !153, !153, !153, !153}
!15549 = !{!15545, !15550, !15551, !15552, !15553, !15554, !15555, !15556, !15557, !15558, !15559}
!15550 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15546, file: !15539, line: 102, type: !208)
!15551 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15546, file: !15539, line: 103, type: !208)
!15552 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15546, file: !15539, line: 103, type: !153)
!15553 = !DILocalVariable(name: "result32", arg: 5, scope: !15546, file: !15539, line: 104, type: !153)
!15554 = !DILocalVariable(name: "round_up", arg: 6, scope: !15546, file: !15539, line: 104, type: !153)
!15555 = !DILocalVariable(name: "round_off", arg: 7, scope: !15546, file: !15539, line: 105, type: !153)
!15556 = !DILocalVariable(name: "mul_ratio", scope: !15546, file: !15539, line: 107, type: !153)
!15557 = !DILocalVariable(name: "div_ratio", scope: !15546, file: !15539, line: 109, type: !153)
!15558 = !DILocalVariable(name: "off", scope: !15546, file: !15539, line: 116, type: !1771)
!15559 = !DILocalVariable(name: "rdivisor", scope: !15560, file: !15539, line: 119, type: !208)
!15560 = distinct !DILexicalBlock(scope: !15561, file: !15539, line: 118, column: 18)
!15561 = distinct !DILexicalBlock(scope: !15546, file: !15539, line: 118, column: 6)
!15562 = !DILocation(line: 0, scope: !15546, inlinedAt: !15563)
!15563 = distinct !DILocation(line: 406, column: 9, scope: !15538)
!15564 = !DILocation(line: 145, column: 13, scope: !15565, inlinedAt: !15563)
!15565 = distinct !DILexicalBlock(scope: !15566, file: !15539, line: 144, column: 10)
!15566 = distinct !DILexicalBlock(scope: !15567, file: !15539, line: 142, column: 7)
!15567 = distinct !DILexicalBlock(scope: !15568, file: !15539, line: 141, column: 24)
!15568 = distinct !DILexicalBlock(scope: !15569, file: !15539, line: 141, column: 13)
!15569 = distinct !DILexicalBlock(scope: !15546, file: !15539, line: 134, column: 6)
!15570 = !DILocation(line: 406, column: 2, scope: !15538)
!15571 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2385, file: !2385, line: 817, type: !5226, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15572)
!15572 = !{!15573, !15574, !15575, !15576}
!15573 = !DILocalVariable(name: "entry", arg: 1, scope: !15571, file: !2385, line: 817, type: !5228)
!15574 = !DILocalVariable(name: "p1", arg: 2, scope: !15571, file: !2385, line: 818, type: !124)
!15575 = !DILocalVariable(name: "p2", arg: 3, scope: !15571, file: !2385, line: 818, type: !124)
!15576 = !DILocalVariable(name: "p3", arg: 4, scope: !15571, file: !2385, line: 818, type: !124)
!15577 = !DILocation(line: 0, scope: !15571)
!15578 = !DILocation(line: 822, column: 2, scope: !15571)
!15579 = !DILocation(line: 822, column: 17, scope: !15571)
!15580 = !DILocation(line: 822, column: 30, scope: !15571)
!15581 = !DILocation(line: 823, column: 2, scope: !15571)
!15582 = !DILocation(line: 845, column: 2, scope: !15571)
!15583 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2385, file: !2385, line: 888, type: !15584, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15586)
!15584 = !DISubroutineType(types: !15585)
!15585 = !{!125, !2389}
!15586 = !{!15587}
!15587 = !DILocalVariable(name: "thread", arg: 1, scope: !15583, file: !2385, line: 888, type: !2389)
!15588 = !DILocation(line: 0, scope: !15583)
!15589 = !DILocation(line: 893, column: 2, scope: !15583)
!15590 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2385, file: !2385, line: 897, type: !15591, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15593)
!15591 = !DISubroutineType(types: !15592)
!15592 = !{!125, !2389, !32}
!15593 = !{!15594, !15595}
!15594 = !DILocalVariable(name: "thread", arg: 1, scope: !15590, file: !2385, line: 897, type: !2389)
!15595 = !DILocalVariable(name: "options", arg: 2, scope: !15590, file: !2385, line: 897, type: !32)
!15596 = !DILocation(line: 0, scope: !15590)
!15597 = !DILocation(line: 902, column: 2, scope: !15590)
!15598 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2385, file: !2385, line: 1072, type: !15599, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15604)
!15599 = !DISubroutineType(types: !15600)
!15600 = !{!125, !2388, !15601}
!15601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15602, size: 32)
!15602 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !531, line: 234, baseType: !15603)
!15603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !531, line: 192, elements: !639)
!15604 = !{!15605, !15606}
!15605 = !DILocalVariable(name: "thread", arg: 1, scope: !15598, file: !2385, line: 1072, type: !2388)
!15606 = !DILocalVariable(name: "stats", arg: 2, scope: !15598, file: !2385, line: 1073, type: !15601)
!15607 = !DILocation(line: 0, scope: !15598)
!15608 = !DILocation(line: 1075, column: 14, scope: !15609)
!15609 = distinct !DILexicalBlock(scope: !15598, file: !2385, line: 1075, column: 6)
!15610 = !DILocation(line: 1075, column: 23, scope: !15609)
!15611 = !DILocation(line: 1086, column: 1, scope: !15598)
!15612 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2385, file: !2385, line: 1088, type: !15613, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !15615)
!15613 = !DISubroutineType(types: !15614)
!15614 = !{!125, !15601}
!15615 = !{!15616}
!15616 = !DILocalVariable(name: "stats", arg: 1, scope: !15612, file: !2385, line: 1088, type: !15601)
!15617 = !DILocation(line: 0, scope: !15612)
!15618 = !DILocation(line: 1094, column: 12, scope: !15619)
!15619 = distinct !DILexicalBlock(scope: !15612, file: !2385, line: 1094, column: 6)
!15620 = !DILocation(line: 1120, column: 1, scope: !15612)
!15621 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !15622, file: !15622, line: 20, type: !3278, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !639)
!15622 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15623 = !DILocation(line: 30, column: 2, scope: !15621)
!15624 = !DILocation(line: 31, column: 1, scope: !15621)
!15625 = distinct !DISubprogram(name: "idle", scope: !15622, file: !15622, line: 33, type: !5231, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !15626)
!15626 = !{!15627, !15628, !15629}
!15627 = !DILocalVariable(name: "unused1", arg: 1, scope: !15625, file: !15622, line: 33, type: !124)
!15628 = !DILocalVariable(name: "unused2", arg: 2, scope: !15625, file: !15622, line: 33, type: !124)
!15629 = !DILocalVariable(name: "unused3", arg: 3, scope: !15625, file: !15622, line: 33, type: !124)
!15630 = !DILocation(line: 0, scope: !15625)
!15631 = !DILocation(line: 41, column: 2, scope: !15625)
!15632 = !DILocation(line: 55, column: 2, scope: !15633, inlinedAt: !15637)
!15633 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6806, file: !6806, line: 42, type: !6807, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !15634)
!15634 = !{!15635, !15636}
!15635 = !DILocalVariable(name: "key", scope: !15633, file: !6806, line: 44, type: !32)
!15636 = !DILocalVariable(name: "tmp", scope: !15633, file: !6806, line: 53, type: !32)
!15637 = distinct !DILocation(line: 62, column: 10, scope: !15638)
!15638 = distinct !DILexicalBlock(scope: !15625, file: !15622, line: 41, column: 15)
!15639 = !{i64 1949768}
!15640 = !DILocation(line: 0, scope: !15633, inlinedAt: !15637)
!15641 = !DILocation(line: 86, column: 3, scope: !15638)
!15642 = distinct !{!15642, !15631, !15643}
!15643 = !DILocation(line: 105, column: 2, scope: !15625)
!15644 = distinct !DISubprogram(name: "k_cpu_idle", scope: !624, file: !624, line: 5627, type: !3278, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3259, retainedNodes: !639)
!15645 = !DILocation(line: 5629, column: 2, scope: !15644)
!15646 = !DILocation(line: 5630, column: 1, scope: !15644)
!15647 = !DISubprogram(name: "arch_cpu_idle", scope: !5229, file: !5229, line: 167, type: !3278, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!15648 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2617, file: !2617, line: 93, type: !15649, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15651)
!15649 = !DISubroutineType(types: !15650)
!15650 = !{!888, !2512, !2512}
!15651 = !{!15652, !15653, !15654, !15655}
!15652 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15648, file: !2617, line: 93, type: !2512)
!15653 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15648, file: !2617, line: 94, type: !2512)
!15654 = !DILocalVariable(name: "b1", scope: !15648, file: !2617, line: 97, type: !888)
!15655 = !DILocalVariable(name: "b2", scope: !15648, file: !2617, line: 98, type: !888)
!15656 = !DILocation(line: 0, scope: !15648)
!15657 = !DILocation(line: 97, column: 30, scope: !15648)
!15658 = !DILocation(line: 98, column: 30, scope: !15648)
!15659 = !DILocation(line: 100, column: 9, scope: !15660)
!15660 = distinct !DILexicalBlock(scope: !15648, file: !2617, line: 100, column: 6)
!15661 = !DILocation(line: 100, column: 6, scope: !15648)
!15662 = !DILocation(line: 125, column: 1, scope: !15648)
!15663 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2617, file: !2617, line: 428, type: !15664, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15666)
!15664 = !DISubroutineType(types: !15665)
!15665 = !{null, !2512}
!15666 = !{!15667}
!15667 = !DILocalVariable(name: "curr", arg: 1, scope: !15663, file: !2617, line: 428, type: !2512)
!15668 = !DILocation(line: 0, scope: !15663)
!15669 = !DILocation(line: 434, column: 6, scope: !15670)
!15670 = distinct !DILexicalBlock(scope: !15663, file: !2617, line: 434, column: 6)
!15671 = !DILocation(line: 434, column: 23, scope: !15670)
!15672 = !DILocation(line: 434, column: 6, scope: !15663)
!15673 = !DILocation(line: 435, column: 50, scope: !15674)
!15674 = distinct !DILexicalBlock(scope: !15670, file: !2617, line: 434, column: 29)
!15675 = !DILocation(line: 435, column: 48, scope: !15674)
!15676 = !DILocation(line: 435, column: 29, scope: !15674)
!15677 = !DILocation(line: 436, column: 24, scope: !15674)
!15678 = !DILocation(line: 436, column: 3, scope: !15674)
!15679 = !DILocation(line: 437, column: 2, scope: !15674)
!15680 = !DILocation(line: 438, column: 1, scope: !15663)
!15681 = distinct !DISubprogram(name: "slice_time", scope: !2617, file: !2617, line: 407, type: !15682, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15684)
!15682 = !DISubroutineType(types: !15683)
!15683 = !{!125, !2512}
!15684 = !{!15685, !15686}
!15685 = !DILocalVariable(name: "curr", arg: 1, scope: !15681, file: !2617, line: 407, type: !2512)
!15686 = !DILocalVariable(name: "ret", scope: !15681, file: !2617, line: 409, type: !125)
!15687 = !DILocation(line: 0, scope: !15681)
!15688 = !DILocation(line: 409, column: 12, scope: !15681)
!15689 = !DILocation(line: 416, column: 2, scope: !15681)
!15690 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2617, file: !2617, line: 440, type: !15691, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15693)
!15691 = !DISubroutineType(types: !15692)
!15692 = !{null, !888, !125}
!15693 = !{!15694, !15695, !15696, !15702}
!15694 = !DILocalVariable(name: "slice", arg: 1, scope: !15690, file: !2617, line: 440, type: !888)
!15695 = !DILocalVariable(name: "prio", arg: 2, scope: !15690, file: !2617, line: 440, type: !125)
!15696 = !DILocalVariable(name: "__i", scope: !15697, file: !2617, line: 442, type: !15698)
!15697 = distinct !DILexicalBlock(scope: !15690, file: !2617, line: 442, column: 2)
!15698 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !638, line: 106, baseType: !15699)
!15699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !638, line: 32, size: 32, elements: !15700)
!15700 = !{!15701}
!15701 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15699, file: !638, line: 33, baseType: !125, size: 32)
!15702 = !DILocalVariable(name: "__key", scope: !15697, file: !2617, line: 442, type: !15698)
!15703 = !DILocation(line: 0, scope: !15690)
!15704 = !DILocation(line: 0, scope: !15697)
!15705 = !DILocalVariable(name: "l", arg: 1, scope: !15706, file: !638, line: 136, type: !15709)
!15706 = distinct !DISubprogram(name: "k_spin_lock", scope: !638, file: !638, line: 136, type: !15707, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15710)
!15707 = !DISubroutineType(types: !15708)
!15708 = !{!15698, !15709}
!15709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2606, size: 32)
!15710 = !{!15705, !15711}
!15711 = !DILocalVariable(name: "k", scope: !15706, file: !638, line: 139, type: !15698)
!15712 = !DILocation(line: 0, scope: !15706, inlinedAt: !15713)
!15713 = distinct !DILocation(line: 442, column: 2, scope: !15697)
!15714 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !15719)
!15715 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6806, file: !6806, line: 42, type: !6807, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15716)
!15716 = !{!15717, !15718}
!15717 = !DILocalVariable(name: "key", scope: !15715, file: !6806, line: 44, type: !32)
!15718 = !DILocalVariable(name: "tmp", scope: !15715, file: !6806, line: 53, type: !32)
!15719 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !15713)
!15720 = !{i64 1993739}
!15721 = !DILocation(line: 0, scope: !15715, inlinedAt: !15719)
!15722 = !DILocation(line: 443, column: 29, scope: !15723)
!15723 = distinct !DILexicalBlock(scope: !15724, file: !2617, line: 442, column: 26)
!15724 = distinct !DILexicalBlock(scope: !15697, file: !2617, line: 442, column: 2)
!15725 = !DILocation(line: 444, column: 17, scope: !15723)
!15726 = !DILocation(line: 445, column: 51, scope: !15727)
!15727 = distinct !DILexicalBlock(scope: !15723, file: !2617, line: 445, column: 7)
!15728 = !DILocation(line: 445, column: 7, scope: !15723)
!15729 = !DILocation(line: 0, scope: !15723)
!15730 = !DILocation(line: 451, column: 18, scope: !15723)
!15731 = !DILocation(line: 452, column: 3, scope: !15723)
!15732 = !DILocalVariable(name: "key", arg: 2, scope: !15733, file: !638, line: 190, type: !15698)
!15733 = distinct !DISubprogram(name: "k_spin_unlock", scope: !638, file: !638, line: 189, type: !15734, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15736)
!15734 = !DISubroutineType(types: !15735)
!15735 = !{null, !15709, !15698}
!15736 = !{!15737, !15732}
!15737 = !DILocalVariable(name: "l", arg: 1, scope: !15733, file: !638, line: 189, type: !15709)
!15738 = !DILocation(line: 0, scope: !15733, inlinedAt: !15739)
!15739 = distinct !DILocation(line: 442, column: 2, scope: !15724)
!15740 = !DILocalVariable(name: "key", arg: 1, scope: !15741, file: !6806, line: 84, type: !32)
!15741 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6806, file: !6806, line: 84, type: !6817, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15742)
!15742 = !{!15740}
!15743 = !DILocation(line: 0, scope: !15741, inlinedAt: !15744)
!15744 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !15739)
!15745 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !15744)
!15746 = !{i64 1994556}
!15747 = !DILocation(line: 454, column: 1, scope: !15690)
!15748 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !15539, file: !15539, line: 389, type: !9519, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15749)
!15749 = !{!15750}
!15750 = !DILocalVariable(name: "t", arg: 1, scope: !15748, file: !15539, line: 389, type: !208)
!15751 = !DILocation(line: 0, scope: !15748)
!15752 = !DILocalVariable(name: "t", arg: 1, scope: !15753, file: !15539, line: 102, type: !1771)
!15753 = distinct !DISubprogram(name: "z_tmcvt", scope: !15539, file: !15539, line: 102, type: !15547, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15754)
!15754 = !{!15752, !15755, !15756, !15757, !15758, !15759, !15760, !15761, !15762, !15763, !15764}
!15755 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15753, file: !15539, line: 102, type: !208)
!15756 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15753, file: !15539, line: 103, type: !208)
!15757 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15753, file: !15539, line: 103, type: !153)
!15758 = !DILocalVariable(name: "result32", arg: 5, scope: !15753, file: !15539, line: 104, type: !153)
!15759 = !DILocalVariable(name: "round_up", arg: 6, scope: !15753, file: !15539, line: 104, type: !153)
!15760 = !DILocalVariable(name: "round_off", arg: 7, scope: !15753, file: !15539, line: 105, type: !153)
!15761 = !DILocalVariable(name: "mul_ratio", scope: !15753, file: !15539, line: 107, type: !153)
!15762 = !DILocalVariable(name: "div_ratio", scope: !15753, file: !15539, line: 109, type: !153)
!15763 = !DILocalVariable(name: "off", scope: !15753, file: !15539, line: 116, type: !1771)
!15764 = !DILocalVariable(name: "rdivisor", scope: !15765, file: !15539, line: 119, type: !208)
!15765 = distinct !DILexicalBlock(scope: !15766, file: !15539, line: 118, column: 18)
!15766 = distinct !DILexicalBlock(scope: !15753, file: !15539, line: 118, column: 6)
!15767 = !DILocation(line: 0, scope: !15753, inlinedAt: !15768)
!15768 = distinct !DILocation(line: 392, column: 9, scope: !15748)
!15769 = !DILocation(line: 143, column: 25, scope: !15770, inlinedAt: !15768)
!15770 = distinct !DILexicalBlock(scope: !15771, file: !15539, line: 142, column: 17)
!15771 = distinct !DILexicalBlock(scope: !15772, file: !15539, line: 142, column: 7)
!15772 = distinct !DILexicalBlock(scope: !15773, file: !15539, line: 141, column: 24)
!15773 = distinct !DILexicalBlock(scope: !15774, file: !15539, line: 141, column: 13)
!15774 = distinct !DILexicalBlock(scope: !15753, file: !15539, line: 134, column: 6)
!15775 = !DILocation(line: 392, column: 2, scope: !15748)
!15776 = distinct !DISubprogram(name: "z_time_slice", scope: !2617, file: !2617, line: 502, type: !10155, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15777)
!15777 = !{!15778, !15779}
!15778 = !DILocalVariable(name: "ticks", arg: 1, scope: !15776, file: !2617, line: 502, type: !125)
!15779 = !DILocalVariable(name: "key", scope: !15776, file: !2617, line: 511, type: !15698)
!15780 = !DILocation(line: 0, scope: !15776)
!15781 = !DILocation(line: 0, scope: !15706, inlinedAt: !15782)
!15782 = distinct !DILocation(line: 511, column: 25, scope: !15776)
!15783 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !15784)
!15784 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !15782)
!15785 = !DILocation(line: 0, scope: !15715, inlinedAt: !15784)
!15786 = !DILocation(line: 514, column: 6, scope: !15787)
!15787 = distinct !DILexicalBlock(scope: !15776, file: !2617, line: 514, column: 6)
!15788 = !DILocation(line: 514, column: 25, scope: !15787)
!15789 = !DILocation(line: 514, column: 22, scope: !15787)
!15790 = !DILocation(line: 514, column: 6, scope: !15776)
!15791 = !DILocation(line: 515, column: 3, scope: !15792)
!15792 = distinct !DILexicalBlock(scope: !15787, file: !2617, line: 514, column: 35)
!15793 = !DILocation(line: 0, scope: !15733, inlinedAt: !15794)
!15794 = distinct !DILocation(line: 516, column: 3, scope: !15792)
!15795 = !DILocation(line: 0, scope: !15741, inlinedAt: !15796)
!15796 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !15794)
!15797 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !15796)
!15798 = !DILocation(line: 517, column: 3, scope: !15792)
!15799 = !DILocation(line: 519, column: 18, scope: !15776)
!15800 = !DILocation(line: 522, column: 6, scope: !15801)
!15801 = distinct !DILexicalBlock(scope: !15776, file: !2617, line: 522, column: 6)
!15802 = !DILocation(line: 522, column: 27, scope: !15801)
!15803 = !DILocation(line: 522, column: 30, scope: !15801)
!15804 = !DILocation(line: 522, column: 6, scope: !15776)
!15805 = !DILocation(line: 523, column: 30, scope: !15806)
!15806 = distinct !DILexicalBlock(scope: !15807, file: !2617, line: 523, column: 7)
!15807 = distinct !DILexicalBlock(scope: !15801, file: !2617, line: 522, column: 51)
!15808 = !DILocation(line: 523, column: 13, scope: !15806)
!15809 = !DILocation(line: 523, column: 7, scope: !15807)
!15810 = !DILocation(line: 530, column: 10, scope: !15811)
!15811 = distinct !DILexicalBlock(scope: !15806, file: !2617, line: 523, column: 43)
!15812 = !DILocation(line: 531, column: 3, scope: !15811)
!15813 = !DILocation(line: 532, column: 30, scope: !15814)
!15814 = distinct !DILexicalBlock(scope: !15806, file: !2617, line: 531, column: 10)
!15815 = !DILocation(line: 535, column: 29, scope: !15816)
!15816 = distinct !DILexicalBlock(scope: !15801, file: !2617, line: 534, column: 9)
!15817 = !DILocation(line: 0, scope: !15733, inlinedAt: !15818)
!15818 = distinct !DILocation(line: 537, column: 2, scope: !15776)
!15819 = !DILocation(line: 0, scope: !15741, inlinedAt: !15820)
!15820 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !15818)
!15821 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !15820)
!15822 = !DILocation(line: 538, column: 1, scope: !15776)
!15823 = distinct !DISubprogram(name: "sliceable", scope: !2617, file: !2617, line: 468, type: !15824, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15826)
!15824 = !DISubroutineType(types: !15825)
!15825 = !{!153, !2512}
!15826 = !{!15827, !15828}
!15827 = !DILocalVariable(name: "thread", arg: 1, scope: !15823, file: !2617, line: 468, type: !2512)
!15828 = !DILocalVariable(name: "ret", scope: !15823, file: !2617, line: 470, type: !153)
!15829 = !DILocation(line: 0, scope: !15823)
!15830 = !DILocation(line: 470, column: 13, scope: !15823)
!15831 = !DILocation(line: 471, column: 3, scope: !15823)
!15832 = !DILocation(line: 471, column: 7, scope: !15823)
!15833 = !DILocation(line: 472, column: 3, scope: !15823)
!15834 = !DILocation(line: 472, column: 37, scope: !15823)
!15835 = !DILocation(line: 472, column: 24, scope: !15823)
!15836 = !DILocation(line: 472, column: 43, scope: !15823)
!15837 = !DILocation(line: 472, column: 7, scope: !15823)
!15838 = !DILocation(line: 473, column: 3, scope: !15823)
!15839 = !DILocation(line: 473, column: 7, scope: !15823)
!15840 = !DILocation(line: 473, column: 6, scope: !15823)
!15841 = !DILocation(line: 479, column: 2, scope: !15823)
!15842 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2617, file: !2617, line: 482, type: !15843, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15845)
!15843 = !DISubroutineType(types: !15844)
!15844 = !{!15698, !15698}
!15845 = !{!15846, !15847}
!15846 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15842, file: !2617, line: 482, type: !15698)
!15847 = !DILocalVariable(name: "curr", scope: !15842, file: !2617, line: 484, type: !2512)
!15848 = !DILocation(line: 0, scope: !15842)
!15849 = !DILocation(line: 484, column: 26, scope: !15842)
!15850 = !DILocation(line: 493, column: 7, scope: !15851)
!15851 = distinct !DILexicalBlock(scope: !15842, file: !2617, line: 493, column: 6)
!15852 = !DILocation(line: 493, column: 6, scope: !15842)
!15853 = !DILocation(line: 494, column: 3, scope: !15854)
!15854 = distinct !DILexicalBlock(scope: !15851, file: !2617, line: 493, column: 49)
!15855 = !DILocation(line: 495, column: 2, scope: !15854)
!15856 = !DILocation(line: 496, column: 2, scope: !15842)
!15857 = !DILocation(line: 499, column: 1, scope: !15842)
!15858 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14978, file: !14978, line: 106, type: !15824, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15859)
!15859 = !{!15860, !15861}
!15860 = !DILocalVariable(name: "thread", arg: 1, scope: !15858, file: !14978, line: 106, type: !2512)
!15861 = !DILocalVariable(name: "state", scope: !15858, file: !14978, line: 108, type: !150)
!15862 = !DILocation(line: 0, scope: !15858)
!15863 = !DILocation(line: 108, column: 31, scope: !15858)
!15864 = !DILocation(line: 110, column: 16, scope: !15858)
!15865 = !DILocation(line: 111, column: 41, scope: !15858)
!15866 = !DILocation(line: 110, column: 2, scope: !15858)
!15867 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2617, file: !2617, line: 393, type: !15664, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15868)
!15868 = !{!15869}
!15869 = !DILocalVariable(name: "thread", arg: 1, scope: !15867, file: !2617, line: 393, type: !2512)
!15870 = !DILocation(line: 0, scope: !15867)
!15871 = !DILocation(line: 395, column: 6, scope: !15872)
!15872 = distinct !DILexicalBlock(scope: !15867, file: !2617, line: 395, column: 6)
!15873 = !DILocation(line: 395, column: 6, scope: !15867)
!15874 = !DILocalVariable(name: "thread", arg: 1, scope: !15875, file: !2617, line: 264, type: !2512)
!15875 = distinct !DISubprogram(name: "dequeue_thread", scope: !2617, file: !2617, line: 264, type: !15664, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15876)
!15876 = !{!15874}
!15877 = !DILocation(line: 0, scope: !15875, inlinedAt: !15878)
!15878 = distinct !DILocation(line: 396, column: 3, scope: !15879)
!15879 = distinct !DILexicalBlock(scope: !15872, file: !2617, line: 395, column: 34)
!15880 = !DILocation(line: 266, column: 15, scope: !15875, inlinedAt: !15878)
!15881 = !DILocation(line: 266, column: 28, scope: !15875, inlinedAt: !15878)
!15882 = !DILocalVariable(name: "thread", arg: 1, scope: !15883, file: !2617, line: 232, type: !2512)
!15883 = distinct !DISubprogram(name: "runq_remove", scope: !2617, file: !2617, line: 232, type: !15664, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15884)
!15884 = !{!15882}
!15885 = !DILocation(line: 0, scope: !15883, inlinedAt: !15886)
!15886 = distinct !DILocation(line: 268, column: 3, scope: !15887, inlinedAt: !15878)
!15887 = distinct !DILexicalBlock(scope: !15888, file: !2617, line: 267, column: 35)
!15888 = distinct !DILexicalBlock(scope: !15875, file: !2617, line: 267, column: 6)
!15889 = !DILocation(line: 234, column: 2, scope: !15883, inlinedAt: !15886)
!15890 = !DILocation(line: 397, column: 2, scope: !15879)
!15891 = !DILocalVariable(name: "thread", arg: 1, scope: !15892, file: !2617, line: 250, type: !2512)
!15892 = distinct !DISubprogram(name: "queue_thread", scope: !2617, file: !2617, line: 250, type: !15664, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15893)
!15893 = !{!15891}
!15894 = !DILocation(line: 0, scope: !15892, inlinedAt: !15895)
!15895 = distinct !DILocation(line: 398, column: 2, scope: !15867)
!15896 = !DILocation(line: 252, column: 15, scope: !15892, inlinedAt: !15895)
!15897 = !DILocation(line: 252, column: 28, scope: !15892, inlinedAt: !15895)
!15898 = !DILocalVariable(name: "thread", arg: 1, scope: !15899, file: !2617, line: 227, type: !2512)
!15899 = distinct !DISubprogram(name: "runq_add", scope: !2617, file: !2617, line: 227, type: !15664, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15900)
!15900 = !{!15898}
!15901 = !DILocation(line: 0, scope: !15899, inlinedAt: !15902)
!15902 = distinct !DILocation(line: 254, column: 3, scope: !15903, inlinedAt: !15895)
!15903 = distinct !DILexicalBlock(scope: !15904, file: !2617, line: 253, column: 35)
!15904 = distinct !DILexicalBlock(scope: !15892, file: !2617, line: 253, column: 6)
!15905 = !DILocalVariable(name: "pq", arg: 1, scope: !15906, file: !2617, line: 181, type: !15909)
!15906 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2617, file: !2617, line: 181, type: !15907, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15910)
!15907 = !DISubroutineType(types: !15908)
!15908 = !{null, !15909, !2512}
!15909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 32)
!15910 = !{!15905, !15911, !15912}
!15911 = !DILocalVariable(name: "thread", arg: 2, scope: !15906, file: !2617, line: 182, type: !2512)
!15912 = !DILocalVariable(name: "t", scope: !15906, file: !2617, line: 184, type: !2512)
!15913 = !DILocation(line: 0, scope: !15906, inlinedAt: !15914)
!15914 = distinct !DILocation(line: 229, column: 2, scope: !15899, inlinedAt: !15902)
!15915 = !DILocation(line: 188, column: 2, scope: !15916, inlinedAt: !15914)
!15916 = distinct !DILexicalBlock(scope: !15906, file: !2617, line: 188, column: 2)
!15917 = !DILocation(line: 188, column: 2, scope: !15918, inlinedAt: !15914)
!15918 = distinct !DILexicalBlock(scope: !15916, file: !2617, line: 188, column: 2)
!15919 = !DILocation(line: 0, scope: !15916, inlinedAt: !15914)
!15920 = !DILocation(line: 189, column: 7, scope: !15921, inlinedAt: !15914)
!15921 = distinct !DILexicalBlock(scope: !15922, file: !2617, line: 189, column: 7)
!15922 = distinct !DILexicalBlock(scope: !15918, file: !2617, line: 188, column: 56)
!15923 = !DILocation(line: 189, column: 35, scope: !15921, inlinedAt: !15914)
!15924 = !DILocation(line: 189, column: 7, scope: !15922, inlinedAt: !15914)
!15925 = !DILocation(line: 191, column: 21, scope: !15926, inlinedAt: !15914)
!15926 = distinct !DILexicalBlock(scope: !15921, file: !2617, line: 189, column: 40)
!15927 = !DILocation(line: 190, column: 4, scope: !15926, inlinedAt: !15914)
!15928 = !DILocation(line: 192, column: 4, scope: !15926, inlinedAt: !15914)
!15929 = distinct !{!15929, !15915, !15930}
!15930 = !DILocation(line: 194, column: 2, scope: !15916, inlinedAt: !15914)
!15931 = !DILocation(line: 196, column: 37, scope: !15906, inlinedAt: !15914)
!15932 = !DILocation(line: 196, column: 2, scope: !15906, inlinedAt: !15914)
!15933 = !DILocation(line: 197, column: 1, scope: !15906, inlinedAt: !15914)
!15934 = !DILocation(line: 399, column: 25, scope: !15867)
!15935 = !DILocation(line: 399, column: 22, scope: !15867)
!15936 = !DILocation(line: 399, column: 2, scope: !15867)
!15937 = !DILocation(line: 400, column: 1, scope: !15867)
!15938 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14978, file: !14978, line: 136, type: !15824, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15939)
!15939 = !{!15940}
!15940 = !DILocalVariable(name: "thread", arg: 1, scope: !15938, file: !14978, line: 136, type: !2512)
!15941 = !DILocation(line: 0, scope: !15938)
!15942 = !DILocation(line: 138, column: 9, scope: !15938)
!15943 = !DILocation(line: 138, column: 2, scope: !15938)
!15944 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2617, file: !2617, line: 1137, type: !15907, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15945)
!15945 = !{!15946, !15947}
!15946 = !DILocalVariable(name: "pq", arg: 1, scope: !15944, file: !2617, line: 1137, type: !15909)
!15947 = !DILocalVariable(name: "thread", arg: 2, scope: !15944, file: !2617, line: 1137, type: !2512)
!15948 = !DILocation(line: 0, scope: !15944)
!15949 = !DILocation(line: 1141, column: 33, scope: !15944)
!15950 = !DILocation(line: 1141, column: 2, scope: !15944)
!15951 = !DILocation(line: 1142, column: 1, scope: !15944)
!15952 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !541, file: !541, line: 294, type: !15953, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15955)
!15953 = !DISubroutineType(types: !15954)
!15954 = !{!2613, !15909}
!15955 = !{!15956}
!15956 = !DILocalVariable(name: "list", arg: 1, scope: !15952, file: !541, line: 294, type: !15909)
!15957 = !DILocation(line: 0, scope: !15952)
!15958 = !DILocation(line: 296, column: 9, scope: !15952)
!15959 = !DILocation(line: 296, column: 49, scope: !15952)
!15960 = !DILocation(line: 296, column: 2, scope: !15952)
!15961 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !541, file: !541, line: 443, type: !15962, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15964)
!15962 = !DISubroutineType(types: !15963)
!15963 = !{null, !2613, !2613}
!15964 = !{!15965, !15966, !15967}
!15965 = !DILocalVariable(name: "successor", arg: 1, scope: !15961, file: !541, line: 443, type: !2613)
!15966 = !DILocalVariable(name: "node", arg: 2, scope: !15961, file: !541, line: 443, type: !2613)
!15967 = !DILocalVariable(name: "prev", scope: !15961, file: !541, line: 445, type: !15968)
!15968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2613)
!15969 = !DILocation(line: 0, scope: !15961)
!15970 = !DILocation(line: 445, column: 39, scope: !15961)
!15971 = !DILocation(line: 447, column: 8, scope: !15961)
!15972 = !DILocation(line: 447, column: 13, scope: !15961)
!15973 = !DILocation(line: 448, column: 8, scope: !15961)
!15974 = !DILocation(line: 448, column: 13, scope: !15961)
!15975 = !DILocation(line: 449, column: 8, scope: !15961)
!15976 = !DILocation(line: 449, column: 13, scope: !15961)
!15977 = !DILocation(line: 450, column: 18, scope: !15961)
!15978 = !DILocation(line: 451, column: 1, scope: !15961)
!15979 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !541, file: !541, line: 341, type: !15980, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15982)
!15980 = !DISubroutineType(types: !15981)
!15981 = !{!2613, !15909, !2613}
!15982 = !{!15983, !15984}
!15983 = !DILocalVariable(name: "list", arg: 1, scope: !15979, file: !541, line: 341, type: !15909)
!15984 = !DILocalVariable(name: "node", arg: 2, scope: !15979, file: !541, line: 342, type: !2613)
!15985 = !DILocation(line: 0, scope: !15979)
!15986 = !DILocation(line: 344, column: 15, scope: !15979)
!15987 = !DILocation(line: 344, column: 9, scope: !15979)
!15988 = !DILocation(line: 344, column: 26, scope: !15979)
!15989 = !DILocation(line: 344, column: 2, scope: !15979)
!15990 = distinct !DISubprogram(name: "sys_dlist_append", scope: !541, file: !541, line: 404, type: !15991, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !15993)
!15991 = !DISubroutineType(types: !15992)
!15992 = !{null, !15909, !2613}
!15993 = !{!15994, !15995, !15996}
!15994 = !DILocalVariable(name: "list", arg: 1, scope: !15990, file: !541, line: 404, type: !15909)
!15995 = !DILocalVariable(name: "node", arg: 2, scope: !15990, file: !541, line: 404, type: !2613)
!15996 = !DILocalVariable(name: "tail", scope: !15990, file: !541, line: 406, type: !15968)
!15997 = !DILocation(line: 0, scope: !15990)
!15998 = !DILocation(line: 406, column: 34, scope: !15990)
!15999 = !DILocation(line: 408, column: 8, scope: !15990)
!16000 = !DILocation(line: 408, column: 13, scope: !15990)
!16001 = !DILocation(line: 409, column: 8, scope: !15990)
!16002 = !DILocation(line: 409, column: 13, scope: !15990)
!16003 = !DILocation(line: 411, column: 8, scope: !15990)
!16004 = !DILocation(line: 411, column: 13, scope: !15990)
!16005 = !DILocation(line: 412, column: 13, scope: !15990)
!16006 = !DILocation(line: 413, column: 1, scope: !15990)
!16007 = distinct !DISubprogram(name: "update_cache", scope: !2617, file: !2617, line: 559, type: !10155, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16008)
!16008 = !{!16009, !16010}
!16009 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !16007, file: !2617, line: 559, type: !125)
!16010 = !DILocalVariable(name: "thread", scope: !16007, file: !2617, line: 562, type: !2512)
!16011 = !DILocation(line: 0, scope: !16007)
!16012 = !DILocation(line: 239, column: 9, scope: !16013, inlinedAt: !16016)
!16013 = distinct !DISubprogram(name: "runq_best", scope: !2617, file: !2617, line: 237, type: !16014, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !639)
!16014 = !DISubroutineType(types: !16015)
!16015 = !{!2512}
!16016 = distinct !DILocation(line: 314, column: 28, scope: !16017, inlinedAt: !16020)
!16017 = distinct !DISubprogram(name: "next_up", scope: !2617, file: !2617, line: 312, type: !16014, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16018)
!16018 = !{!16019}
!16019 = !DILocalVariable(name: "thread", scope: !16017, file: !2617, line: 314, type: !2512)
!16020 = distinct !DILocation(line: 562, column: 28, scope: !16007)
!16021 = !DILocation(line: 0, scope: !16017, inlinedAt: !16020)
!16022 = !DILocation(line: 340, column: 17, scope: !16017, inlinedAt: !16020)
!16023 = !DILocation(line: 340, column: 9, scope: !16017, inlinedAt: !16020)
!16024 = !DILocalVariable(name: "thread", arg: 1, scope: !16025, file: !2617, line: 127, type: !2512)
!16025 = distinct !DISubprogram(name: "should_preempt", scope: !2617, file: !2617, line: 127, type: !16026, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16028)
!16026 = !DISubroutineType(types: !16027)
!16027 = !{!153, !2512, !125}
!16028 = !{!16024, !16029}
!16029 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !16025, file: !2617, line: 128, type: !125)
!16030 = !DILocation(line: 0, scope: !16025, inlinedAt: !16031)
!16031 = distinct !DILocation(line: 564, column: 6, scope: !16032)
!16032 = distinct !DILexicalBlock(scope: !16007, file: !2617, line: 564, column: 6)
!16033 = !DILocation(line: 133, column: 17, scope: !16034, inlinedAt: !16031)
!16034 = distinct !DILexicalBlock(scope: !16025, file: !2617, line: 133, column: 6)
!16035 = !DILocation(line: 0, scope: !16032)
!16036 = !DILocation(line: 133, column: 6, scope: !16025, inlinedAt: !16031)
!16037 = !DILocation(line: 140, column: 6, scope: !16038, inlinedAt: !16031)
!16038 = distinct !DILexicalBlock(scope: !16025, file: !2617, line: 140, column: 6)
!16039 = !DILocation(line: 140, column: 6, scope: !16025, inlinedAt: !16031)
!16040 = !DILocation(line: 150, column: 9, scope: !16041, inlinedAt: !16031)
!16041 = distinct !DILexicalBlock(scope: !16025, file: !2617, line: 149, column: 6)
!16042 = !DILocation(line: 149, column: 6, scope: !16025, inlinedAt: !16031)
!16043 = !DILocation(line: 157, column: 6, scope: !16044, inlinedAt: !16031)
!16044 = distinct !DILexicalBlock(scope: !16025, file: !2617, line: 157, column: 6)
!16045 = !DILocation(line: 564, column: 6, scope: !16007)
!16046 = !DILocation(line: 566, column: 14, scope: !16047)
!16047 = distinct !DILexicalBlock(scope: !16048, file: !2617, line: 566, column: 7)
!16048 = distinct !DILexicalBlock(scope: !16032, file: !2617, line: 564, column: 42)
!16049 = !DILocation(line: 566, column: 7, scope: !16048)
!16050 = !DILocation(line: 567, column: 4, scope: !16051)
!16051 = distinct !DILexicalBlock(scope: !16047, file: !2617, line: 566, column: 27)
!16052 = !DILocation(line: 568, column: 3, scope: !16051)
!16053 = !DILocation(line: 585, column: 1, scope: !16007)
!16054 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2617, file: !2617, line: 1144, type: !16055, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16057)
!16055 = !DISubroutineType(types: !16056)
!16056 = !{!2512, !15909}
!16057 = !{!16058, !16059, !16060}
!16058 = !DILocalVariable(name: "pq", arg: 1, scope: !16054, file: !2617, line: 1144, type: !15909)
!16059 = !DILocalVariable(name: "thread", scope: !16054, file: !2617, line: 1146, type: !2512)
!16060 = !DILocalVariable(name: "n", scope: !16054, file: !2617, line: 1147, type: !2613)
!16061 = !DILocation(line: 0, scope: !16054)
!16062 = !DILocation(line: 1147, column: 19, scope: !16054)
!16063 = !DILocation(line: 1152, column: 2, scope: !16054)
!16064 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14978, file: !14978, line: 115, type: !15824, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16065)
!16065 = !{!16066}
!16066 = !DILocalVariable(name: "thread", arg: 1, scope: !16064, file: !14978, line: 115, type: !2512)
!16067 = !DILocation(line: 0, scope: !16064)
!16068 = !DILocation(line: 117, column: 46, scope: !16064)
!16069 = !DILocation(line: 117, column: 10, scope: !16064)
!16070 = !DILocation(line: 117, column: 9, scope: !16064)
!16071 = !DILocation(line: 117, column: 2, scope: !16064)
!16072 = distinct !DISubprogram(name: "is_preempt", scope: !2617, file: !2617, line: 62, type: !15682, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16073)
!16073 = !{!16074}
!16074 = !DILocalVariable(name: "thread", arg: 1, scope: !16072, file: !2617, line: 62, type: !2512)
!16075 = !DILocation(line: 0, scope: !16072)
!16076 = !DILocation(line: 65, column: 22, scope: !16072)
!16077 = !DILocation(line: 65, column: 30, scope: !16072)
!16078 = !DILocation(line: 65, column: 2, scope: !16072)
!16079 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15372, file: !15372, line: 35, type: !16080, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16084)
!16080 = !DISubroutineType(types: !16081)
!16081 = !{!153, !16082}
!16082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16083, size: 32)
!16083 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2563)
!16084 = !{!16085}
!16085 = !DILocalVariable(name: "to", arg: 1, scope: !16079, file: !15372, line: 35, type: !16082)
!16086 = !DILocation(line: 0, scope: !16079)
!16087 = !DILocation(line: 37, column: 35, scope: !16079)
!16088 = !DILocation(line: 37, column: 10, scope: !16079)
!16089 = !DILocation(line: 37, column: 9, scope: !16079)
!16090 = !DILocation(line: 37, column: 2, scope: !16079)
!16091 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !541, file: !541, line: 225, type: !16092, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16096)
!16092 = !DISubroutineType(types: !16093)
!16093 = !{!153, !16094}
!16094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16095, size: 32)
!16095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2522)
!16096 = !{!16097}
!16097 = !DILocalVariable(name: "node", arg: 1, scope: !16091, file: !541, line: 225, type: !16094)
!16098 = !DILocation(line: 0, scope: !16091)
!16099 = !DILocation(line: 227, column: 15, scope: !16091)
!16100 = !DILocation(line: 227, column: 20, scope: !16091)
!16101 = !DILocation(line: 227, column: 2, scope: !16091)
!16102 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !541, file: !541, line: 325, type: !15980, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16103)
!16103 = !{!16104, !16105}
!16104 = !DILocalVariable(name: "list", arg: 1, scope: !16102, file: !541, line: 325, type: !15909)
!16105 = !DILocalVariable(name: "node", arg: 2, scope: !16102, file: !541, line: 326, type: !2613)
!16106 = !DILocation(line: 0, scope: !16102)
!16107 = !DILocation(line: 328, column: 24, scope: !16102)
!16108 = !DILocation(line: 328, column: 15, scope: !16102)
!16109 = !DILocation(line: 328, column: 9, scope: !16102)
!16110 = !DILocation(line: 328, column: 45, scope: !16102)
!16111 = !DILocation(line: 328, column: 2, scope: !16102)
!16112 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !541, file: !541, line: 266, type: !16113, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16115)
!16113 = !DISubroutineType(types: !16114)
!16114 = !{!153, !15909}
!16115 = !{!16116}
!16116 = !DILocalVariable(name: "list", arg: 1, scope: !16112, file: !541, line: 266, type: !15909)
!16117 = !DILocation(line: 0, scope: !16112)
!16118 = !DILocation(line: 268, column: 15, scope: !16112)
!16119 = !DILocation(line: 268, column: 20, scope: !16112)
!16120 = !DILocation(line: 268, column: 2, scope: !16112)
!16121 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !541, file: !541, line: 496, type: !16122, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16124)
!16122 = !DISubroutineType(types: !16123)
!16123 = !{null, !2613}
!16124 = !{!16125, !16126, !16127}
!16125 = !DILocalVariable(name: "node", arg: 1, scope: !16121, file: !541, line: 496, type: !2613)
!16126 = !DILocalVariable(name: "prev", scope: !16121, file: !541, line: 498, type: !15968)
!16127 = !DILocalVariable(name: "next", scope: !16121, file: !541, line: 499, type: !15968)
!16128 = !DILocation(line: 0, scope: !16121)
!16129 = !DILocation(line: 498, column: 34, scope: !16121)
!16130 = !DILocation(line: 499, column: 34, scope: !16121)
!16131 = !DILocation(line: 501, column: 8, scope: !16121)
!16132 = !DILocation(line: 501, column: 13, scope: !16121)
!16133 = !DILocation(line: 502, column: 8, scope: !16121)
!16134 = !DILocation(line: 502, column: 13, scope: !16121)
!16135 = !DILocation(line: 503, column: 2, scope: !16121)
!16136 = !DILocation(line: 504, column: 1, scope: !16121)
!16137 = distinct !DISubprogram(name: "sys_dnode_init", scope: !541, file: !541, line: 211, type: !16122, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16138)
!16138 = !{!16139}
!16139 = !DILocalVariable(name: "node", arg: 1, scope: !16137, file: !541, line: 211, type: !2613)
!16140 = !DILocation(line: 0, scope: !16137)
!16141 = !DILocation(line: 213, column: 8, scope: !16137)
!16142 = !DILocation(line: 213, column: 13, scope: !16137)
!16143 = !DILocation(line: 214, column: 8, scope: !16137)
!16144 = !DILocation(line: 214, column: 13, scope: !16137)
!16145 = !DILocation(line: 215, column: 1, scope: !16137)
!16146 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14978, file: !14978, line: 131, type: !16147, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16149)
!16147 = !DISubroutineType(types: !16148)
!16148 = !{!153, !2512, !208}
!16149 = !{!16150, !16151}
!16150 = !DILocalVariable(name: "thread", arg: 1, scope: !16146, file: !14978, line: 131, type: !2512)
!16151 = !DILocalVariable(name: "state", arg: 2, scope: !16146, file: !14978, line: 131, type: !208)
!16152 = !DILocation(line: 0, scope: !16146)
!16153 = !DILocation(line: 133, column: 23, scope: !16146)
!16154 = !DILocation(line: 133, column: 45, scope: !16146)
!16155 = !DILocation(line: 133, column: 2, scope: !16146)
!16156 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14978, file: !14978, line: 211, type: !16157, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16159)
!16157 = !DISubroutineType(types: !16158)
!16158 = !{!153, !125, !125}
!16159 = !{!16160, !16161}
!16160 = !DILocalVariable(name: "prio", arg: 1, scope: !16156, file: !14978, line: 211, type: !125)
!16161 = !DILocalVariable(name: "test_prio", arg: 2, scope: !16156, file: !14978, line: 211, type: !125)
!16162 = !DILocation(line: 0, scope: !16156)
!16163 = !DILocation(line: 213, column: 9, scope: !16156)
!16164 = !DILocation(line: 213, column: 2, scope: !16156)
!16165 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14978, file: !14978, line: 83, type: !15824, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16166)
!16166 = !{!16167}
!16167 = !DILocalVariable(name: "thread", arg: 1, scope: !16165, file: !14978, line: 83, type: !2512)
!16168 = !DILocation(line: 0, scope: !16165)
!16169 = !DILocation(line: 89, column: 16, scope: !16165)
!16170 = !DILocation(line: 89, column: 2, scope: !16165)
!16171 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14978, file: !14978, line: 206, type: !16157, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16172)
!16172 = !{!16173, !16174}
!16173 = !DILocalVariable(name: "prio1", arg: 1, scope: !16171, file: !14978, line: 206, type: !125)
!16174 = !DILocalVariable(name: "prio2", arg: 2, scope: !16171, file: !14978, line: 206, type: !125)
!16175 = !DILocation(line: 0, scope: !16171)
!16176 = !DILocation(line: 208, column: 15, scope: !16171)
!16177 = !DILocation(line: 208, column: 2, scope: !16171)
!16178 = distinct !DISubprogram(name: "z_ready_thread", scope: !2617, file: !2617, line: 635, type: !15664, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16179)
!16179 = !{!16180, !16181, !16183}
!16180 = !DILocalVariable(name: "thread", arg: 1, scope: !16178, file: !2617, line: 635, type: !2512)
!16181 = !DILocalVariable(name: "__i", scope: !16182, file: !2617, line: 637, type: !15698)
!16182 = distinct !DILexicalBlock(scope: !16178, file: !2617, line: 637, column: 2)
!16183 = !DILocalVariable(name: "__key", scope: !16182, file: !2617, line: 637, type: !15698)
!16184 = !DILocation(line: 0, scope: !16178)
!16185 = !DILocation(line: 0, scope: !16182)
!16186 = !DILocation(line: 0, scope: !15706, inlinedAt: !16187)
!16187 = distinct !DILocation(line: 637, column: 2, scope: !16182)
!16188 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !16189)
!16189 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !16187)
!16190 = !DILocation(line: 0, scope: !15715, inlinedAt: !16189)
!16191 = !DILocation(line: 639, column: 4, scope: !16192)
!16192 = distinct !DILexicalBlock(scope: !16193, file: !2617, line: 638, column: 41)
!16193 = distinct !DILexicalBlock(scope: !16194, file: !2617, line: 638, column: 7)
!16194 = distinct !DILexicalBlock(scope: !16195, file: !2617, line: 637, column: 26)
!16195 = distinct !DILexicalBlock(scope: !16182, file: !2617, line: 637, column: 2)
!16196 = !DILocation(line: 0, scope: !15733, inlinedAt: !16197)
!16197 = distinct !DILocation(line: 637, column: 2, scope: !16195)
!16198 = !DILocation(line: 0, scope: !15741, inlinedAt: !16199)
!16199 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !16197)
!16200 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !16199)
!16201 = !DILocation(line: 642, column: 1, scope: !16178)
!16202 = distinct !DISubprogram(name: "ready_thread", scope: !2617, file: !2617, line: 617, type: !15664, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16203)
!16203 = !{!16204}
!16204 = !DILocalVariable(name: "thread", arg: 1, scope: !16202, file: !2617, line: 617, type: !2512)
!16205 = !DILocation(line: 0, scope: !16202)
!16206 = !DILocation(line: 626, column: 7, scope: !16207)
!16207 = distinct !DILexicalBlock(scope: !16202, file: !2617, line: 626, column: 6)
!16208 = !DILocation(line: 626, column: 34, scope: !16207)
!16209 = !DILocation(line: 626, column: 37, scope: !16207)
!16210 = !DILocation(line: 626, column: 6, scope: !16202)
!16211 = !DILocation(line: 0, scope: !15892, inlinedAt: !16212)
!16212 = distinct !DILocation(line: 629, column: 3, scope: !16213)
!16213 = distinct !DILexicalBlock(scope: !16207, file: !2617, line: 626, column: 64)
!16214 = !DILocation(line: 252, column: 15, scope: !15892, inlinedAt: !16212)
!16215 = !DILocation(line: 252, column: 28, scope: !15892, inlinedAt: !16212)
!16216 = !DILocation(line: 0, scope: !15899, inlinedAt: !16217)
!16217 = distinct !DILocation(line: 254, column: 3, scope: !15903, inlinedAt: !16212)
!16218 = !DILocation(line: 0, scope: !15906, inlinedAt: !16219)
!16219 = distinct !DILocation(line: 229, column: 2, scope: !15899, inlinedAt: !16217)
!16220 = !DILocation(line: 188, column: 2, scope: !15916, inlinedAt: !16219)
!16221 = !DILocation(line: 188, column: 2, scope: !15918, inlinedAt: !16219)
!16222 = !DILocation(line: 0, scope: !15916, inlinedAt: !16219)
!16223 = !DILocation(line: 189, column: 7, scope: !15921, inlinedAt: !16219)
!16224 = !DILocation(line: 189, column: 35, scope: !15921, inlinedAt: !16219)
!16225 = !DILocation(line: 189, column: 7, scope: !15922, inlinedAt: !16219)
!16226 = !DILocation(line: 191, column: 21, scope: !15926, inlinedAt: !16219)
!16227 = !DILocation(line: 190, column: 4, scope: !15926, inlinedAt: !16219)
!16228 = !DILocation(line: 192, column: 4, scope: !15926, inlinedAt: !16219)
!16229 = distinct !{!16229, !16220, !16230}
!16230 = !DILocation(line: 194, column: 2, scope: !15916, inlinedAt: !16219)
!16231 = !DILocation(line: 196, column: 37, scope: !15906, inlinedAt: !16219)
!16232 = !DILocation(line: 196, column: 2, scope: !15906, inlinedAt: !16219)
!16233 = !DILocation(line: 197, column: 1, scope: !15906, inlinedAt: !16219)
!16234 = !DILocation(line: 630, column: 3, scope: !16213)
!16235 = !DILocation(line: 632, column: 2, scope: !16213)
!16236 = !DILocation(line: 633, column: 1, scope: !16202)
!16237 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14978, file: !14978, line: 120, type: !15824, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16238)
!16238 = !{!16239}
!16239 = !DILocalVariable(name: "thread", arg: 1, scope: !16237, file: !14978, line: 120, type: !2512)
!16240 = !DILocation(line: 0, scope: !16237)
!16241 = !DILocation(line: 122, column: 12, scope: !16237)
!16242 = !DILocation(line: 122, column: 62, scope: !16237)
!16243 = !DILocation(line: 123, column: 4, scope: !16237)
!16244 = !DILocation(line: 122, column: 2, scope: !16237)
!16245 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2617, file: !2617, line: 644, type: !15664, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16246)
!16246 = !{!16247, !16248, !16250}
!16247 = !DILocalVariable(name: "thread", arg: 1, scope: !16245, file: !2617, line: 644, type: !2512)
!16248 = !DILocalVariable(name: "__i", scope: !16249, file: !2617, line: 646, type: !15698)
!16249 = distinct !DILexicalBlock(scope: !16245, file: !2617, line: 646, column: 2)
!16250 = !DILocalVariable(name: "__key", scope: !16249, file: !2617, line: 646, type: !15698)
!16251 = !DILocation(line: 0, scope: !16245)
!16252 = !DILocation(line: 0, scope: !16249)
!16253 = !DILocation(line: 0, scope: !15706, inlinedAt: !16254)
!16254 = distinct !DILocation(line: 646, column: 2, scope: !16249)
!16255 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !16256)
!16256 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !16254)
!16257 = !DILocation(line: 0, scope: !15715, inlinedAt: !16256)
!16258 = !DILocation(line: 647, column: 3, scope: !16259)
!16259 = distinct !DILexicalBlock(scope: !16260, file: !2617, line: 646, column: 26)
!16260 = distinct !DILexicalBlock(scope: !16249, file: !2617, line: 646, column: 2)
!16261 = !DILocation(line: 0, scope: !15733, inlinedAt: !16262)
!16262 = distinct !DILocation(line: 646, column: 2, scope: !16260)
!16263 = !DILocation(line: 0, scope: !15741, inlinedAt: !16264)
!16264 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !16262)
!16265 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !16264)
!16266 = !DILocation(line: 649, column: 1, scope: !16245)
!16267 = distinct !DISubprogram(name: "z_sched_start", scope: !2617, file: !2617, line: 651, type: !15664, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16268)
!16268 = !{!16269, !16270}
!16269 = !DILocalVariable(name: "thread", arg: 1, scope: !16267, file: !2617, line: 651, type: !2512)
!16270 = !DILocalVariable(name: "key", scope: !16267, file: !2617, line: 653, type: !15698)
!16271 = !DILocation(line: 0, scope: !16267)
!16272 = !DILocation(line: 0, scope: !15706, inlinedAt: !16273)
!16273 = distinct !DILocation(line: 653, column: 25, scope: !16267)
!16274 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !16275)
!16275 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !16273)
!16276 = !DILocation(line: 0, scope: !15715, inlinedAt: !16275)
!16277 = !DILocation(line: 655, column: 6, scope: !16278)
!16278 = distinct !DILexicalBlock(scope: !16267, file: !2617, line: 655, column: 6)
!16279 = !DILocation(line: 655, column: 6, scope: !16267)
!16280 = !DILocation(line: 0, scope: !15733, inlinedAt: !16281)
!16281 = distinct !DILocation(line: 656, column: 3, scope: !16282)
!16282 = distinct !DILexicalBlock(scope: !16278, file: !2617, line: 655, column: 36)
!16283 = !DILocation(line: 0, scope: !15741, inlinedAt: !16284)
!16284 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !16281)
!16285 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !16284)
!16286 = !DILocation(line: 657, column: 3, scope: !16282)
!16287 = !DILocation(line: 660, column: 2, scope: !16267)
!16288 = !DILocation(line: 661, column: 2, scope: !16267)
!16289 = !DILocation(line: 662, column: 2, scope: !16267)
!16290 = !DILocation(line: 663, column: 1, scope: !16267)
!16291 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14978, file: !14978, line: 126, type: !15824, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16292)
!16292 = !{!16293}
!16293 = !DILocalVariable(name: "thread", arg: 1, scope: !16291, file: !14978, line: 126, type: !2512)
!16294 = !DILocation(line: 0, scope: !16291)
!16295 = !DILocation(line: 128, column: 23, scope: !16291)
!16296 = !DILocation(line: 128, column: 36, scope: !16291)
!16297 = !DILocation(line: 128, column: 56, scope: !16291)
!16298 = !DILocation(line: 128, column: 2, scope: !16291)
!16299 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14978, file: !14978, line: 155, type: !15664, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16300)
!16300 = !{!16301}
!16301 = !DILocalVariable(name: "thread", arg: 1, scope: !16299, file: !14978, line: 155, type: !2512)
!16302 = !DILocation(line: 0, scope: !16299)
!16303 = !DILocation(line: 157, column: 15, scope: !16299)
!16304 = !DILocation(line: 157, column: 28, scope: !16299)
!16305 = !DILocation(line: 158, column: 1, scope: !16299)
!16306 = distinct !DISubprogram(name: "z_reschedule", scope: !2617, file: !2617, line: 967, type: !15734, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16307)
!16307 = !{!16308, !16309}
!16308 = !DILocalVariable(name: "lock", arg: 1, scope: !16306, file: !2617, line: 967, type: !15709)
!16309 = !DILocalVariable(name: "key", arg: 2, scope: !16306, file: !2617, line: 967, type: !15698)
!16310 = !DILocation(line: 0, scope: !16306)
!16311 = !DILocation(line: 969, column: 6, scope: !16312)
!16312 = distinct !DILexicalBlock(scope: !16306, file: !2617, line: 969, column: 6)
!16313 = !DILocation(line: 969, column: 23, scope: !16312)
!16314 = !DILocation(line: 969, column: 26, scope: !16312)
!16315 = !DILocation(line: 969, column: 6, scope: !16306)
!16316 = !DILocalVariable(name: "key", arg: 2, scope: !16317, file: !15082, line: 193, type: !15698)
!16317 = distinct !DISubprogram(name: "z_swap", scope: !15082, file: !15082, line: 193, type: !16318, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16320)
!16318 = !DISubroutineType(types: !16319)
!16319 = !{!125, !15709, !15698}
!16320 = !{!16321, !16316}
!16321 = !DILocalVariable(name: "lock", arg: 1, scope: !16317, file: !15082, line: 193, type: !15709)
!16322 = !DILocation(line: 0, scope: !16317, inlinedAt: !16323)
!16323 = distinct !DILocation(line: 970, column: 3, scope: !16324)
!16324 = distinct !DILexicalBlock(scope: !16312, file: !2617, line: 969, column: 39)
!16325 = !DILocation(line: 196, column: 9, scope: !16317, inlinedAt: !16323)
!16326 = !DILocation(line: 971, column: 2, scope: !16324)
!16327 = !DILocation(line: 0, scope: !15733, inlinedAt: !16328)
!16328 = distinct !DILocation(line: 972, column: 3, scope: !16329)
!16329 = distinct !DILexicalBlock(scope: !16312, file: !2617, line: 971, column: 9)
!16330 = !DILocation(line: 0, scope: !15741, inlinedAt: !16331)
!16331 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !16328)
!16332 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !16331)
!16333 = !DILocation(line: 975, column: 1, scope: !16306)
!16334 = distinct !DISubprogram(name: "resched", scope: !2617, file: !2617, line: 940, type: !16335, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16337)
!16335 = !DISubroutineType(types: !16336)
!16336 = !{!153, !208}
!16337 = !{!16338}
!16338 = !DILocalVariable(name: "key", arg: 1, scope: !16334, file: !2617, line: 940, type: !208)
!16339 = !DILocation(line: 0, scope: !16334)
!16340 = !DILocalVariable(name: "key", arg: 1, scope: !16341, file: !6806, line: 112, type: !32)
!16341 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6806, file: !6806, line: 112, type: !16342, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16344)
!16342 = !DISubroutineType(types: !16343)
!16343 = !{!153, !32}
!16344 = !{!16340}
!16345 = !DILocation(line: 0, scope: !16341, inlinedAt: !16346)
!16346 = distinct !DILocation(line: 946, column: 9, scope: !16334)
!16347 = !DILocation(line: 115, column: 13, scope: !16341, inlinedAt: !16346)
!16348 = !DILocation(line: 946, column: 32, scope: !16334)
!16349 = !DILocation(line: 1031, column: 3, scope: !16350, inlinedAt: !16353)
!16350 = distinct !DISubprogram(name: "__get_IPSR", scope: !8273, file: !8273, line: 1027, type: !8354, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16351)
!16351 = !{!16352}
!16352 = !DILocalVariable(name: "result", scope: !16350, file: !8273, line: 1029, type: !208)
!16353 = distinct !DILocation(line: 48, column: 10, scope: !16354, inlinedAt: !16355)
!16354 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9291, file: !9291, line: 46, type: !9292, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !639)
!16355 = distinct !DILocation(line: 946, column: 36, scope: !16334)
!16356 = !{i64 2871478}
!16357 = !DILocation(line: 0, scope: !16350, inlinedAt: !16353)
!16358 = !DILocation(line: 48, column: 9, scope: !16354, inlinedAt: !16355)
!16359 = !DILocation(line: 946, column: 2, scope: !16334)
!16360 = distinct !DISubprogram(name: "need_swap", scope: !2617, file: !2617, line: 953, type: !9292, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16361)
!16361 = !{!16362}
!16362 = !DILocalVariable(name: "new_thread", scope: !16360, file: !2617, line: 959, type: !2512)
!16363 = !DILocation(line: 962, column: 31, scope: !16360)
!16364 = !DILocation(line: 0, scope: !16360)
!16365 = !DILocation(line: 963, column: 23, scope: !16360)
!16366 = !DILocation(line: 963, column: 20, scope: !16360)
!16367 = !DILocation(line: 963, column: 2, scope: !16360)
!16368 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !15082, file: !15082, line: 181, type: !8283, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16369)
!16369 = !{!16370, !16371}
!16370 = !DILocalVariable(name: "key", arg: 1, scope: !16368, file: !15082, line: 181, type: !32)
!16371 = !DILocalVariable(name: "ret", scope: !16368, file: !15082, line: 183, type: !125)
!16372 = !DILocation(line: 0, scope: !16368)
!16373 = !DILocation(line: 185, column: 8, scope: !16368)
!16374 = !DILocation(line: 186, column: 2, scope: !16368)
!16375 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2617, file: !2617, line: 665, type: !15664, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16376)
!16376 = !{!16377, !16378, !16380}
!16377 = !DILocalVariable(name: "thread", arg: 1, scope: !16375, file: !2617, line: 665, type: !2512)
!16378 = !DILocalVariable(name: "__i", scope: !16379, file: !2617, line: 671, type: !15698)
!16379 = distinct !DILexicalBlock(scope: !16375, file: !2617, line: 671, column: 2)
!16380 = !DILocalVariable(name: "__key", scope: !16379, file: !2617, line: 671, type: !15698)
!16381 = !DILocation(line: 0, scope: !16375)
!16382 = !DILocation(line: 669, column: 8, scope: !16375)
!16383 = !DILocation(line: 0, scope: !16379)
!16384 = !DILocation(line: 0, scope: !15706, inlinedAt: !16385)
!16385 = distinct !DILocation(line: 671, column: 2, scope: !16379)
!16386 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !16387)
!16387 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !16385)
!16388 = !DILocation(line: 0, scope: !15715, inlinedAt: !16387)
!16389 = !DILocation(line: 672, column: 7, scope: !16390)
!16390 = distinct !DILexicalBlock(scope: !16391, file: !2617, line: 672, column: 7)
!16391 = distinct !DILexicalBlock(scope: !16392, file: !2617, line: 671, column: 26)
!16392 = distinct !DILexicalBlock(scope: !16379, file: !2617, line: 671, column: 2)
!16393 = !DILocation(line: 672, column: 7, scope: !16391)
!16394 = !DILocation(line: 0, scope: !15875, inlinedAt: !16395)
!16395 = distinct !DILocation(line: 673, column: 4, scope: !16396)
!16396 = distinct !DILexicalBlock(scope: !16390, file: !2617, line: 672, column: 35)
!16397 = !DILocation(line: 266, column: 15, scope: !15875, inlinedAt: !16395)
!16398 = !DILocation(line: 266, column: 28, scope: !15875, inlinedAt: !16395)
!16399 = !DILocation(line: 0, scope: !15883, inlinedAt: !16400)
!16400 = distinct !DILocation(line: 268, column: 3, scope: !15887, inlinedAt: !16395)
!16401 = !DILocation(line: 234, column: 2, scope: !15883, inlinedAt: !16400)
!16402 = !DILocation(line: 674, column: 3, scope: !16396)
!16403 = !DILocation(line: 675, column: 3, scope: !16391)
!16404 = !DILocation(line: 676, column: 26, scope: !16391)
!16405 = !DILocation(line: 676, column: 23, scope: !16391)
!16406 = !DILocation(line: 676, column: 3, scope: !16391)
!16407 = !DILocation(line: 0, scope: !15733, inlinedAt: !16408)
!16408 = distinct !DILocation(line: 671, column: 2, scope: !16392)
!16409 = !DILocation(line: 0, scope: !15741, inlinedAt: !16410)
!16410 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !16408)
!16411 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !16410)
!16412 = !DILocation(line: 679, column: 16, scope: !16413)
!16413 = distinct !DILexicalBlock(scope: !16375, file: !2617, line: 679, column: 6)
!16414 = !DILocation(line: 679, column: 13, scope: !16413)
!16415 = !DILocation(line: 679, column: 6, scope: !16375)
!16416 = !DILocation(line: 680, column: 3, scope: !16417)
!16417 = distinct !DILexicalBlock(scope: !16413, file: !2617, line: 679, column: 26)
!16418 = !DILocation(line: 681, column: 2, scope: !16417)
!16419 = !DILocation(line: 684, column: 1, scope: !16375)
!16420 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !15372, file: !15372, line: 52, type: !15682, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16421)
!16421 = !{!16422}
!16422 = !DILocalVariable(name: "thread", arg: 1, scope: !16420, file: !15372, line: 52, type: !2512)
!16423 = !DILocation(line: 0, scope: !16420)
!16424 = !DILocation(line: 54, column: 39, scope: !16420)
!16425 = !DILocation(line: 54, column: 9, scope: !16420)
!16426 = !DILocation(line: 54, column: 2, scope: !16420)
!16427 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14978, file: !14978, line: 141, type: !15664, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16428)
!16428 = !{!16429}
!16429 = !DILocalVariable(name: "thread", arg: 1, scope: !16427, file: !14978, line: 141, type: !2512)
!16430 = !DILocation(line: 0, scope: !16427)
!16431 = !DILocation(line: 143, column: 15, scope: !16427)
!16432 = !DILocation(line: 143, column: 28, scope: !16427)
!16433 = !DILocation(line: 146, column: 1, scope: !16427)
!16434 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14978, file: !14978, line: 73, type: !3278, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !639)
!16435 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !16436)
!16436 = distinct !DILocation(line: 75, column: 30, scope: !16434)
!16437 = !DILocation(line: 0, scope: !15715, inlinedAt: !16436)
!16438 = !DILocation(line: 75, column: 9, scope: !16434)
!16439 = !DILocation(line: 76, column: 1, scope: !16434)
!16440 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2617, file: !2617, line: 977, type: !8364, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16441)
!16441 = !{!16442}
!16442 = !DILocalVariable(name: "key", arg: 1, scope: !16440, file: !2617, line: 977, type: !208)
!16443 = !DILocation(line: 0, scope: !16440)
!16444 = !DILocation(line: 979, column: 6, scope: !16445)
!16445 = distinct !DILexicalBlock(scope: !16440, file: !2617, line: 979, column: 6)
!16446 = !DILocation(line: 979, column: 6, scope: !16440)
!16447 = !DILocation(line: 980, column: 3, scope: !16448)
!16448 = distinct !DILexicalBlock(scope: !16445, file: !2617, line: 979, column: 20)
!16449 = !DILocation(line: 981, column: 2, scope: !16448)
!16450 = !DILocation(line: 0, scope: !15741, inlinedAt: !16451)
!16451 = distinct !DILocation(line: 982, column: 3, scope: !16452)
!16452 = distinct !DILexicalBlock(scope: !16445, file: !2617, line: 981, column: 9)
!16453 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !16451)
!16454 = !DILocation(line: 985, column: 1, scope: !16440)
!16455 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2617, file: !2617, line: 695, type: !15664, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16456)
!16456 = !{!16457, !16458}
!16457 = !DILocalVariable(name: "thread", arg: 1, scope: !16455, file: !2617, line: 695, type: !2512)
!16458 = !DILocalVariable(name: "key", scope: !16455, file: !2617, line: 699, type: !15698)
!16459 = !DILocation(line: 0, scope: !16455)
!16460 = !DILocation(line: 0, scope: !15706, inlinedAt: !16461)
!16461 = distinct !DILocation(line: 699, column: 25, scope: !16455)
!16462 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !16463)
!16463 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !16461)
!16464 = !DILocation(line: 0, scope: !15715, inlinedAt: !16463)
!16465 = !DILocation(line: 702, column: 7, scope: !16466)
!16466 = distinct !DILexicalBlock(scope: !16455, file: !2617, line: 702, column: 6)
!16467 = !DILocation(line: 702, column: 6, scope: !16455)
!16468 = !DILocation(line: 0, scope: !15733, inlinedAt: !16469)
!16469 = distinct !DILocation(line: 703, column: 3, scope: !16470)
!16470 = distinct !DILexicalBlock(scope: !16466, file: !2617, line: 702, column: 38)
!16471 = !DILocation(line: 0, scope: !15741, inlinedAt: !16472)
!16472 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !16469)
!16473 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !16472)
!16474 = !DILocation(line: 704, column: 3, scope: !16470)
!16475 = !DILocation(line: 707, column: 2, scope: !16455)
!16476 = !DILocation(line: 708, column: 2, scope: !16455)
!16477 = !DILocation(line: 710, column: 2, scope: !16455)
!16478 = !DILocation(line: 713, column: 1, scope: !16455)
!16479 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14978, file: !14978, line: 96, type: !15824, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16480)
!16480 = !{!16481}
!16481 = !DILocalVariable(name: "thread", arg: 1, scope: !16479, file: !14978, line: 96, type: !2512)
!16482 = !DILocation(line: 0, scope: !16479)
!16483 = !DILocation(line: 98, column: 23, scope: !16479)
!16484 = !DILocation(line: 98, column: 36, scope: !16479)
!16485 = !DILocation(line: 98, column: 57, scope: !16479)
!16486 = !DILocation(line: 98, column: 2, scope: !16479)
!16487 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14978, file: !14978, line: 148, type: !15664, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16488)
!16488 = !{!16489}
!16489 = !DILocalVariable(name: "thread", arg: 1, scope: !16487, file: !14978, line: 148, type: !2512)
!16490 = !DILocation(line: 0, scope: !16487)
!16491 = !DILocation(line: 150, column: 15, scope: !16487)
!16492 = !DILocation(line: 150, column: 28, scope: !16487)
!16493 = !DILocation(line: 153, column: 1, scope: !16487)
!16494 = distinct !DISubprogram(name: "z_pend_thread", scope: !2617, file: !2617, line: 770, type: !16495, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16501)
!16495 = !DISubroutineType(types: !16496)
!16496 = !{null, !2512, !2543, !16497}
!16497 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1865, line: 67, baseType: !16498)
!16498 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1865, line: 65, size: 64, elements: !16499)
!16499 = !{!16500}
!16500 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16498, file: !1865, line: 66, baseType: !1864, size: 64)
!16501 = !{!16502, !16503, !16504, !16505, !16507}
!16502 = !DILocalVariable(name: "thread", arg: 1, scope: !16494, file: !2617, line: 770, type: !2512)
!16503 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16494, file: !2617, line: 770, type: !2543)
!16504 = !DILocalVariable(name: "timeout", arg: 3, scope: !16494, file: !2617, line: 771, type: !16497)
!16505 = !DILocalVariable(name: "__i", scope: !16506, file: !2617, line: 774, type: !15698)
!16506 = distinct !DILexicalBlock(scope: !16494, file: !2617, line: 774, column: 2)
!16507 = !DILocalVariable(name: "__key", scope: !16506, file: !2617, line: 774, type: !15698)
!16508 = !DILocation(line: 0, scope: !16494)
!16509 = !DILocation(line: 0, scope: !16506)
!16510 = !DILocation(line: 0, scope: !15706, inlinedAt: !16511)
!16511 = distinct !DILocation(line: 774, column: 2, scope: !16506)
!16512 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !16513)
!16513 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !16511)
!16514 = !DILocation(line: 0, scope: !15715, inlinedAt: !16513)
!16515 = !DILocation(line: 775, column: 3, scope: !16516)
!16516 = distinct !DILexicalBlock(scope: !16517, file: !2617, line: 774, column: 26)
!16517 = distinct !DILexicalBlock(scope: !16506, file: !2617, line: 774, column: 2)
!16518 = !DILocation(line: 0, scope: !15733, inlinedAt: !16519)
!16519 = distinct !DILocation(line: 774, column: 2, scope: !16517)
!16520 = !DILocation(line: 0, scope: !15741, inlinedAt: !16521)
!16521 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !16519)
!16522 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !16521)
!16523 = !DILocation(line: 777, column: 1, scope: !16494)
!16524 = distinct !DISubprogram(name: "pend_locked", scope: !2617, file: !2617, line: 760, type: !16495, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16525)
!16525 = !{!16526, !16527, !16528}
!16526 = !DILocalVariable(name: "thread", arg: 1, scope: !16524, file: !2617, line: 760, type: !2512)
!16527 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16524, file: !2617, line: 760, type: !2543)
!16528 = !DILocalVariable(name: "timeout", arg: 3, scope: !16524, file: !2617, line: 761, type: !16497)
!16529 = !DILocation(line: 0, scope: !16524)
!16530 = !DILocation(line: 766, column: 2, scope: !16524)
!16531 = !DILocation(line: 767, column: 2, scope: !16524)
!16532 = !DILocation(line: 768, column: 1, scope: !16524)
!16533 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2617, file: !2617, line: 740, type: !16534, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16536)
!16534 = !DISubroutineType(types: !16535)
!16535 = !{null, !2512, !2543}
!16536 = !{!16537, !16538}
!16537 = !DILocalVariable(name: "thread", arg: 1, scope: !16533, file: !2617, line: 740, type: !2512)
!16538 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16533, file: !2617, line: 740, type: !2543)
!16539 = !DILocation(line: 0, scope: !16533)
!16540 = !DILocation(line: 742, column: 2, scope: !16533)
!16541 = !DILocation(line: 743, column: 2, scope: !16533)
!16542 = !DILocation(line: 747, column: 13, scope: !16543)
!16543 = distinct !DILexicalBlock(scope: !16533, file: !2617, line: 747, column: 6)
!16544 = !DILocation(line: 747, column: 6, scope: !16533)
!16545 = !DILocation(line: 748, column: 16, scope: !16546)
!16546 = distinct !DILexicalBlock(scope: !16543, file: !2617, line: 747, column: 22)
!16547 = !DILocation(line: 748, column: 26, scope: !16546)
!16548 = !DILocation(line: 749, column: 28, scope: !16546)
!16549 = !DILocation(line: 0, scope: !15906, inlinedAt: !16550)
!16550 = distinct !DILocation(line: 749, column: 3, scope: !16546)
!16551 = !DILocation(line: 188, column: 2, scope: !15916, inlinedAt: !16550)
!16552 = !DILocation(line: 188, column: 2, scope: !15918, inlinedAt: !16550)
!16553 = !DILocation(line: 0, scope: !15916, inlinedAt: !16550)
!16554 = !DILocation(line: 189, column: 7, scope: !15921, inlinedAt: !16550)
!16555 = !DILocation(line: 189, column: 35, scope: !15921, inlinedAt: !16550)
!16556 = !DILocation(line: 189, column: 7, scope: !15922, inlinedAt: !16550)
!16557 = !DILocation(line: 191, column: 21, scope: !15926, inlinedAt: !16550)
!16558 = !DILocation(line: 190, column: 4, scope: !15926, inlinedAt: !16550)
!16559 = !DILocation(line: 192, column: 4, scope: !15926, inlinedAt: !16550)
!16560 = distinct !{!16560, !16551, !16561}
!16561 = !DILocation(line: 194, column: 2, scope: !15916, inlinedAt: !16550)
!16562 = !DILocation(line: 196, column: 37, scope: !15906, inlinedAt: !16550)
!16563 = !DILocation(line: 196, column: 2, scope: !15906, inlinedAt: !16550)
!16564 = !DILocation(line: 197, column: 1, scope: !15906, inlinedAt: !16550)
!16565 = !DILocation(line: 751, column: 1, scope: !16533)
!16566 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2617, file: !2617, line: 753, type: !16567, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16569)
!16567 = !DISubroutineType(types: !16568)
!16568 = !{null, !2512, !16497}
!16569 = !{!16570, !16571}
!16570 = !DILocalVariable(name: "thread", arg: 1, scope: !16566, file: !2617, line: 753, type: !2512)
!16571 = !DILocalVariable(name: "timeout", arg: 2, scope: !16566, file: !2617, line: 753, type: !16497)
!16572 = !DILocation(line: 0, scope: !16566)
!16573 = !DILocation(line: 755, column: 7, scope: !16574)
!16574 = distinct !DILexicalBlock(scope: !16566, file: !2617, line: 755, column: 6)
!16575 = !DILocation(line: 755, column: 6, scope: !16566)
!16576 = !DILocation(line: 756, column: 3, scope: !16577)
!16577 = distinct !DILexicalBlock(scope: !16574, file: !2617, line: 755, column: 41)
!16578 = !DILocation(line: 757, column: 2, scope: !16577)
!16579 = !DILocation(line: 758, column: 1, scope: !16566)
!16580 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15372, file: !15372, line: 47, type: !16567, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16581)
!16581 = !{!16582, !16583}
!16582 = !DILocalVariable(name: "thread", arg: 1, scope: !16580, file: !15372, line: 47, type: !2512)
!16583 = !DILocalVariable(name: "ticks", arg: 2, scope: !16580, file: !15372, line: 47, type: !16497)
!16584 = !DILocation(line: 0, scope: !16580)
!16585 = !DILocation(line: 49, column: 30, scope: !16580)
!16586 = !DILocation(line: 49, column: 2, scope: !16580)
!16587 = !DILocation(line: 50, column: 1, scope: !16580)
!16588 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2617, file: !2617, line: 795, type: !2569, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16589)
!16589 = !{!16590, !16591, !16592, !16594, !16595}
!16590 = !DILocalVariable(name: "timeout", arg: 1, scope: !16588, file: !2617, line: 795, type: !2571)
!16591 = !DILocalVariable(name: "thread", scope: !16588, file: !2617, line: 797, type: !2512)
!16592 = !DILocalVariable(name: "__i", scope: !16593, file: !2617, line: 800, type: !15698)
!16593 = distinct !DILexicalBlock(scope: !16588, file: !2617, line: 800, column: 2)
!16594 = !DILocalVariable(name: "__key", scope: !16593, file: !2617, line: 800, type: !15698)
!16595 = !DILocalVariable(name: "killed", scope: !16596, file: !2617, line: 801, type: !153)
!16596 = distinct !DILexicalBlock(scope: !16597, file: !2617, line: 800, column: 26)
!16597 = distinct !DILexicalBlock(scope: !16593, file: !2617, line: 800, column: 2)
!16598 = !DILocation(line: 0, scope: !16588)
!16599 = !DILocation(line: 797, column: 28, scope: !16588)
!16600 = !DILocation(line: 0, scope: !16593)
!16601 = !DILocation(line: 0, scope: !15706, inlinedAt: !16602)
!16602 = distinct !DILocation(line: 800, column: 2, scope: !16593)
!16603 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !16604)
!16604 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !16602)
!16605 = !DILocation(line: 0, scope: !15715, inlinedAt: !16604)
!16606 = !DILocation(line: 801, column: 27, scope: !16596)
!16607 = !DILocation(line: 801, column: 32, scope: !16596)
!16608 = !DILocation(line: 801, column: 61, scope: !16596)
!16609 = !DILocation(line: 0, scope: !16596)
!16610 = !DILocation(line: 804, column: 7, scope: !16596)
!16611 = !DILocation(line: 805, column: 21, scope: !16612)
!16612 = distinct !DILexicalBlock(scope: !16613, file: !2617, line: 805, column: 8)
!16613 = distinct !DILexicalBlock(scope: !16614, file: !2617, line: 804, column: 16)
!16614 = distinct !DILexicalBlock(scope: !16596, file: !2617, line: 804, column: 7)
!16615 = !DILocation(line: 805, column: 31, scope: !16612)
!16616 = !DILocation(line: 805, column: 8, scope: !16613)
!16617 = !DILocation(line: 806, column: 5, scope: !16618)
!16618 = distinct !DILexicalBlock(scope: !16612, file: !2617, line: 805, column: 40)
!16619 = !DILocation(line: 807, column: 4, scope: !16618)
!16620 = !DILocation(line: 808, column: 4, scope: !16613)
!16621 = !DILocation(line: 809, column: 4, scope: !16613)
!16622 = !DILocation(line: 810, column: 4, scope: !16613)
!16623 = !DILocation(line: 811, column: 3, scope: !16613)
!16624 = !DILocation(line: 0, scope: !15733, inlinedAt: !16625)
!16625 = distinct !DILocation(line: 800, column: 2, scope: !16597)
!16626 = !DILocation(line: 0, scope: !15741, inlinedAt: !16627)
!16627 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !16625)
!16628 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !16627)
!16629 = !DILocation(line: 813, column: 1, scope: !16588)
!16630 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2617, file: !2617, line: 779, type: !15664, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16631)
!16631 = !{!16632}
!16632 = !DILocalVariable(name: "thread", arg: 1, scope: !16630, file: !2617, line: 779, type: !2512)
!16633 = !DILocation(line: 0, scope: !16630)
!16634 = !DILocation(line: 781, column: 2, scope: !16630)
!16635 = !DILocation(line: 782, column: 2, scope: !16630)
!16636 = !DILocation(line: 783, column: 15, scope: !16630)
!16637 = !DILocation(line: 783, column: 25, scope: !16630)
!16638 = !DILocation(line: 784, column: 1, scope: !16630)
!16639 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14978, file: !14978, line: 165, type: !15664, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16640)
!16640 = !{!16641}
!16641 = !DILocalVariable(name: "thread", arg: 1, scope: !16639, file: !14978, line: 165, type: !2512)
!16642 = !DILocation(line: 0, scope: !16639)
!16643 = !DILocation(line: 167, column: 15, scope: !16639)
!16644 = !DILocation(line: 167, column: 28, scope: !16639)
!16645 = !DILocation(line: 168, column: 1, scope: !16639)
!16646 = distinct !DISubprogram(name: "unready_thread", scope: !2617, file: !2617, line: 731, type: !15664, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16647)
!16647 = !{!16648}
!16648 = !DILocalVariable(name: "thread", arg: 1, scope: !16646, file: !2617, line: 731, type: !2512)
!16649 = !DILocation(line: 0, scope: !16646)
!16650 = !DILocation(line: 733, column: 6, scope: !16651)
!16651 = distinct !DILexicalBlock(scope: !16646, file: !2617, line: 733, column: 6)
!16652 = !DILocation(line: 733, column: 6, scope: !16646)
!16653 = !DILocation(line: 0, scope: !15875, inlinedAt: !16654)
!16654 = distinct !DILocation(line: 734, column: 3, scope: !16655)
!16655 = distinct !DILexicalBlock(scope: !16651, file: !2617, line: 733, column: 34)
!16656 = !DILocation(line: 266, column: 15, scope: !15875, inlinedAt: !16654)
!16657 = !DILocation(line: 266, column: 28, scope: !15875, inlinedAt: !16654)
!16658 = !DILocation(line: 0, scope: !15883, inlinedAt: !16659)
!16659 = distinct !DILocation(line: 268, column: 3, scope: !15887, inlinedAt: !16654)
!16660 = !DILocation(line: 234, column: 2, scope: !15883, inlinedAt: !16659)
!16661 = !DILocation(line: 735, column: 2, scope: !16655)
!16662 = !DILocation(line: 736, column: 25, scope: !16646)
!16663 = !DILocation(line: 736, column: 22, scope: !16646)
!16664 = !DILocation(line: 736, column: 2, scope: !16646)
!16665 = !DILocation(line: 737, column: 1, scope: !16646)
!16666 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14978, file: !14978, line: 160, type: !15664, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16667)
!16667 = !{!16668}
!16668 = !DILocalVariable(name: "thread", arg: 1, scope: !16666, file: !14978, line: 160, type: !2512)
!16669 = !DILocation(line: 0, scope: !16666)
!16670 = !DILocation(line: 162, column: 15, scope: !16666)
!16671 = !DILocation(line: 162, column: 28, scope: !16666)
!16672 = !DILocation(line: 163, column: 1, scope: !16666)
!16673 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2617, file: !2617, line: 786, type: !15664, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16674)
!16674 = !{!16675, !16676, !16678}
!16675 = !DILocalVariable(name: "thread", arg: 1, scope: !16673, file: !2617, line: 786, type: !2512)
!16676 = !DILocalVariable(name: "__i", scope: !16677, file: !2617, line: 788, type: !15698)
!16677 = distinct !DILexicalBlock(scope: !16673, file: !2617, line: 788, column: 2)
!16678 = !DILocalVariable(name: "__key", scope: !16677, file: !2617, line: 788, type: !15698)
!16679 = !DILocation(line: 0, scope: !16673)
!16680 = !DILocation(line: 0, scope: !16677)
!16681 = !DILocation(line: 0, scope: !15706, inlinedAt: !16682)
!16682 = distinct !DILocation(line: 788, column: 2, scope: !16677)
!16683 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !16684)
!16684 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !16682)
!16685 = !DILocation(line: 0, scope: !15715, inlinedAt: !16684)
!16686 = !DILocation(line: 789, column: 3, scope: !16687)
!16687 = distinct !DILexicalBlock(scope: !16688, file: !2617, line: 788, column: 26)
!16688 = distinct !DILexicalBlock(scope: !16677, file: !2617, line: 788, column: 2)
!16689 = !DILocation(line: 0, scope: !15733, inlinedAt: !16690)
!16690 = distinct !DILocation(line: 788, column: 2, scope: !16688)
!16691 = !DILocation(line: 0, scope: !15741, inlinedAt: !16692)
!16692 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !16690)
!16693 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !16692)
!16694 = !DILocation(line: 791, column: 1, scope: !16673)
!16695 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2617, file: !2617, line: 816, type: !16696, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16698)
!16696 = !DISubroutineType(types: !16697)
!16697 = !{!125, !208, !2543, !16497}
!16698 = !{!16699, !16700, !16701, !16702, !16703, !16705}
!16699 = !DILocalVariable(name: "key", arg: 1, scope: !16695, file: !2617, line: 816, type: !208)
!16700 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16695, file: !2617, line: 816, type: !2543)
!16701 = !DILocalVariable(name: "timeout", arg: 3, scope: !16695, file: !2617, line: 816, type: !16497)
!16702 = !DILocalVariable(name: "ret", scope: !16695, file: !2617, line: 828, type: !125)
!16703 = !DILocalVariable(name: "__i", scope: !16704, file: !2617, line: 829, type: !15698)
!16704 = distinct !DILexicalBlock(scope: !16695, file: !2617, line: 829, column: 2)
!16705 = !DILocalVariable(name: "__key", scope: !16704, file: !2617, line: 829, type: !15698)
!16706 = !DILocation(line: 0, scope: !16695)
!16707 = !DILocation(line: 823, column: 14, scope: !16695)
!16708 = !DILocation(line: 823, column: 2, scope: !16695)
!16709 = !DILocation(line: 826, column: 20, scope: !16695)
!16710 = !DILocation(line: 826, column: 18, scope: !16695)
!16711 = !DILocation(line: 828, column: 12, scope: !16695)
!16712 = !DILocation(line: 0, scope: !16704)
!16713 = !DILocation(line: 0, scope: !15706, inlinedAt: !16714)
!16714 = distinct !DILocation(line: 829, column: 2, scope: !16704)
!16715 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !16716)
!16716 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !16714)
!16717 = !DILocation(line: 0, scope: !15715, inlinedAt: !16716)
!16718 = !DILocation(line: 830, column: 7, scope: !16719)
!16719 = distinct !DILexicalBlock(scope: !16720, file: !2617, line: 830, column: 7)
!16720 = distinct !DILexicalBlock(scope: !16721, file: !2617, line: 829, column: 26)
!16721 = distinct !DILexicalBlock(scope: !16704, file: !2617, line: 829, column: 2)
!16722 = !DILocation(line: 830, column: 26, scope: !16719)
!16723 = !DILocation(line: 830, column: 23, scope: !16719)
!16724 = !DILocation(line: 830, column: 7, scope: !16720)
!16725 = !DILocation(line: 831, column: 20, scope: !16726)
!16726 = distinct !DILexicalBlock(scope: !16719, file: !2617, line: 830, column: 36)
!16727 = !DILocation(line: 832, column: 3, scope: !16726)
!16728 = !DILocation(line: 0, scope: !15733, inlinedAt: !16729)
!16729 = distinct !DILocation(line: 829, column: 2, scope: !16721)
!16730 = !DILocation(line: 0, scope: !15741, inlinedAt: !16731)
!16731 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !16729)
!16732 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !16731)
!16733 = !DILocation(line: 834, column: 2, scope: !16695)
!16734 = distinct !DISubprogram(name: "z_pend_curr", scope: !2617, file: !2617, line: 840, type: !16735, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16737)
!16735 = !DISubroutineType(types: !16736)
!16736 = !{!125, !15709, !15698, !2543, !16497}
!16737 = !{!16738, !16739, !16740, !16741}
!16738 = !DILocalVariable(name: "lock", arg: 1, scope: !16734, file: !2617, line: 840, type: !15709)
!16739 = !DILocalVariable(name: "key", arg: 2, scope: !16734, file: !2617, line: 840, type: !15698)
!16740 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16734, file: !2617, line: 841, type: !2543)
!16741 = !DILocalVariable(name: "timeout", arg: 4, scope: !16734, file: !2617, line: 841, type: !16497)
!16742 = !DILocation(line: 0, scope: !16734)
!16743 = !DILocation(line: 844, column: 20, scope: !16734)
!16744 = !DILocation(line: 844, column: 18, scope: !16734)
!16745 = !DILocation(line: 0, scope: !15706, inlinedAt: !16746)
!16746 = distinct !DILocation(line: 856, column: 9, scope: !16734)
!16747 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !16748)
!16748 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !16746)
!16749 = !DILocation(line: 0, scope: !15715, inlinedAt: !16748)
!16750 = !DILocation(line: 857, column: 14, scope: !16734)
!16751 = !DILocation(line: 857, column: 2, scope: !16734)
!16752 = !DILocation(line: 0, scope: !16317, inlinedAt: !16753)
!16753 = distinct !DILocation(line: 859, column: 9, scope: !16734)
!16754 = !DILocation(line: 196, column: 9, scope: !16317, inlinedAt: !16753)
!16755 = !DILocation(line: 859, column: 2, scope: !16734)
!16756 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2617, file: !2617, line: 862, type: !16757, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16759)
!16757 = !DISubroutineType(types: !16758)
!16758 = !{!2512, !2543}
!16759 = !{!16760, !16761, !16762, !16764}
!16760 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16756, file: !2617, line: 862, type: !2543)
!16761 = !DILocalVariable(name: "thread", scope: !16756, file: !2617, line: 864, type: !2512)
!16762 = !DILocalVariable(name: "__i", scope: !16763, file: !2617, line: 866, type: !15698)
!16763 = distinct !DILexicalBlock(scope: !16756, file: !2617, line: 866, column: 2)
!16764 = !DILocalVariable(name: "__key", scope: !16763, file: !2617, line: 866, type: !15698)
!16765 = !DILocation(line: 0, scope: !16756)
!16766 = !DILocation(line: 0, scope: !16763)
!16767 = !DILocation(line: 0, scope: !15706, inlinedAt: !16768)
!16768 = distinct !DILocation(line: 866, column: 2, scope: !16763)
!16769 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !16770)
!16770 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !16768)
!16771 = !DILocation(line: 0, scope: !15715, inlinedAt: !16770)
!16772 = !DILocation(line: 867, column: 12, scope: !16773)
!16773 = distinct !DILexicalBlock(scope: !16774, file: !2617, line: 866, column: 26)
!16774 = distinct !DILexicalBlock(scope: !16763, file: !2617, line: 866, column: 2)
!16775 = !DILocation(line: 869, column: 14, scope: !16776)
!16776 = distinct !DILexicalBlock(scope: !16773, file: !2617, line: 869, column: 7)
!16777 = !DILocation(line: 869, column: 7, scope: !16773)
!16778 = !DILocation(line: 870, column: 4, scope: !16779)
!16779 = distinct !DILexicalBlock(scope: !16776, file: !2617, line: 869, column: 23)
!16780 = !DILocation(line: 871, column: 3, scope: !16779)
!16781 = !DILocation(line: 0, scope: !15733, inlinedAt: !16782)
!16782 = distinct !DILocation(line: 866, column: 2, scope: !16774)
!16783 = !DILocation(line: 0, scope: !15741, inlinedAt: !16784)
!16784 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !16782)
!16785 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !16784)
!16786 = !DILocation(line: 874, column: 2, scope: !16756)
!16787 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2617, file: !2617, line: 877, type: !16757, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16788)
!16788 = !{!16789, !16790, !16791, !16793}
!16789 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16787, file: !2617, line: 877, type: !2543)
!16790 = !DILocalVariable(name: "thread", scope: !16787, file: !2617, line: 879, type: !2512)
!16791 = !DILocalVariable(name: "__i", scope: !16792, file: !2617, line: 881, type: !15698)
!16792 = distinct !DILexicalBlock(scope: !16787, file: !2617, line: 881, column: 2)
!16793 = !DILocalVariable(name: "__key", scope: !16792, file: !2617, line: 881, type: !15698)
!16794 = !DILocation(line: 0, scope: !16787)
!16795 = !DILocation(line: 0, scope: !16792)
!16796 = !DILocation(line: 0, scope: !15706, inlinedAt: !16797)
!16797 = distinct !DILocation(line: 881, column: 2, scope: !16792)
!16798 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !16799)
!16799 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !16797)
!16800 = !DILocation(line: 0, scope: !15715, inlinedAt: !16799)
!16801 = !DILocation(line: 882, column: 12, scope: !16802)
!16802 = distinct !DILexicalBlock(scope: !16803, file: !2617, line: 881, column: 26)
!16803 = distinct !DILexicalBlock(scope: !16792, file: !2617, line: 881, column: 2)
!16804 = !DILocation(line: 884, column: 14, scope: !16805)
!16805 = distinct !DILexicalBlock(scope: !16802, file: !2617, line: 884, column: 7)
!16806 = !DILocation(line: 884, column: 7, scope: !16802)
!16807 = !DILocation(line: 885, column: 4, scope: !16808)
!16808 = distinct !DILexicalBlock(scope: !16805, file: !2617, line: 884, column: 23)
!16809 = !DILocation(line: 886, column: 10, scope: !16808)
!16810 = !DILocation(line: 887, column: 3, scope: !16808)
!16811 = !DILocation(line: 0, scope: !15733, inlinedAt: !16812)
!16812 = distinct !DILocation(line: 881, column: 2, scope: !16803)
!16813 = !DILocation(line: 0, scope: !15741, inlinedAt: !16814)
!16814 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !16812)
!16815 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !16814)
!16816 = !DILocation(line: 890, column: 2, scope: !16787)
!16817 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2617, file: !2617, line: 893, type: !15664, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16818)
!16818 = !{!16819}
!16819 = !DILocalVariable(name: "thread", arg: 1, scope: !16817, file: !2617, line: 893, type: !2512)
!16820 = !DILocation(line: 0, scope: !16817)
!16821 = !DILocation(line: 0, scope: !16673, inlinedAt: !16822)
!16822 = distinct !DILocation(line: 895, column: 2, scope: !16817)
!16823 = !DILocation(line: 0, scope: !16677, inlinedAt: !16822)
!16824 = !DILocation(line: 0, scope: !15706, inlinedAt: !16825)
!16825 = distinct !DILocation(line: 788, column: 2, scope: !16677, inlinedAt: !16822)
!16826 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !16827)
!16827 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !16825)
!16828 = !DILocation(line: 0, scope: !15715, inlinedAt: !16827)
!16829 = !DILocation(line: 789, column: 3, scope: !16687, inlinedAt: !16822)
!16830 = !DILocation(line: 0, scope: !15733, inlinedAt: !16831)
!16831 = distinct !DILocation(line: 788, column: 2, scope: !16688, inlinedAt: !16822)
!16832 = !DILocation(line: 0, scope: !15741, inlinedAt: !16833)
!16833 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !16831)
!16834 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !16833)
!16835 = !DILocation(line: 896, column: 8, scope: !16817)
!16836 = !DILocation(line: 897, column: 1, scope: !16817)
!16837 = distinct !DISubprogram(name: "z_set_prio", scope: !2617, file: !2617, line: 902, type: !16026, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16838)
!16838 = !{!16839, !16840, !16841, !16842, !16844}
!16839 = !DILocalVariable(name: "thread", arg: 1, scope: !16837, file: !2617, line: 902, type: !2512)
!16840 = !DILocalVariable(name: "prio", arg: 2, scope: !16837, file: !2617, line: 902, type: !125)
!16841 = !DILocalVariable(name: "need_sched", scope: !16837, file: !2617, line: 904, type: !153)
!16842 = !DILocalVariable(name: "__i", scope: !16843, file: !2617, line: 906, type: !15698)
!16843 = distinct !DILexicalBlock(scope: !16837, file: !2617, line: 906, column: 2)
!16844 = !DILocalVariable(name: "__key", scope: !16843, file: !2617, line: 906, type: !15698)
!16845 = !DILocation(line: 0, scope: !16837)
!16846 = !DILocation(line: 0, scope: !16843)
!16847 = !DILocation(line: 0, scope: !15706, inlinedAt: !16848)
!16848 = distinct !DILocation(line: 906, column: 2, scope: !16843)
!16849 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !16850)
!16850 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !16848)
!16851 = !DILocation(line: 0, scope: !15715, inlinedAt: !16850)
!16852 = !DILocation(line: 907, column: 16, scope: !16853)
!16853 = distinct !DILexicalBlock(scope: !16854, file: !2617, line: 906, column: 26)
!16854 = distinct !DILexicalBlock(scope: !16843, file: !2617, line: 906, column: 2)
!16855 = !DILocation(line: 909, column: 7, scope: !16853)
!16856 = !DILocation(line: 0, scope: !15875, inlinedAt: !16857)
!16857 = distinct !DILocation(line: 912, column: 5, scope: !16858)
!16858 = distinct !DILexicalBlock(scope: !16859, file: !2617, line: 911, column: 63)
!16859 = distinct !DILexicalBlock(scope: !16860, file: !2617, line: 911, column: 8)
!16860 = distinct !DILexicalBlock(scope: !16861, file: !2617, line: 909, column: 19)
!16861 = distinct !DILexicalBlock(scope: !16853, file: !2617, line: 909, column: 7)
!16862 = !DILocation(line: 266, column: 28, scope: !15875, inlinedAt: !16857)
!16863 = !DILocation(line: 0, scope: !15883, inlinedAt: !16864)
!16864 = distinct !DILocation(line: 268, column: 3, scope: !15887, inlinedAt: !16857)
!16865 = !DILocation(line: 234, column: 2, scope: !15883, inlinedAt: !16864)
!16866 = !DILocation(line: 913, column: 23, scope: !16858)
!16867 = !DILocation(line: 0, scope: !15892, inlinedAt: !16868)
!16868 = distinct !DILocation(line: 914, column: 5, scope: !16858)
!16869 = !DILocation(line: 252, column: 28, scope: !15892, inlinedAt: !16868)
!16870 = !DILocation(line: 0, scope: !15899, inlinedAt: !16871)
!16871 = distinct !DILocation(line: 254, column: 3, scope: !15903, inlinedAt: !16868)
!16872 = !DILocation(line: 0, scope: !15906, inlinedAt: !16873)
!16873 = distinct !DILocation(line: 229, column: 2, scope: !15899, inlinedAt: !16871)
!16874 = !DILocation(line: 188, column: 2, scope: !15916, inlinedAt: !16873)
!16875 = !DILocation(line: 188, column: 2, scope: !15918, inlinedAt: !16873)
!16876 = !DILocation(line: 0, scope: !15916, inlinedAt: !16873)
!16877 = !DILocation(line: 189, column: 7, scope: !15921, inlinedAt: !16873)
!16878 = !DILocation(line: 189, column: 35, scope: !15921, inlinedAt: !16873)
!16879 = !DILocation(line: 189, column: 7, scope: !15922, inlinedAt: !16873)
!16880 = !DILocation(line: 190, column: 4, scope: !15926, inlinedAt: !16873)
!16881 = !DILocation(line: 192, column: 4, scope: !15926, inlinedAt: !16873)
!16882 = distinct !{!16882, !16874, !16883}
!16883 = !DILocation(line: 194, column: 2, scope: !15916, inlinedAt: !16873)
!16884 = !DILocation(line: 196, column: 2, scope: !15906, inlinedAt: !16873)
!16885 = !DILocation(line: 197, column: 1, scope: !15906, inlinedAt: !16873)
!16886 = !DILocation(line: 918, column: 4, scope: !16860)
!16887 = !DILocation(line: 919, column: 3, scope: !16860)
!16888 = !DILocation(line: 920, column: 22, scope: !16889)
!16889 = distinct !DILexicalBlock(scope: !16861, file: !2617, line: 919, column: 10)
!16890 = !DILocation(line: 0, scope: !15733, inlinedAt: !16891)
!16891 = distinct !DILocation(line: 906, column: 2, scope: !16854)
!16892 = !DILocation(line: 0, scope: !15741, inlinedAt: !16893)
!16893 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !16891)
!16894 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !16893)
!16895 = !DILocation(line: 926, column: 2, scope: !16837)
!16896 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2617, file: !2617, line: 929, type: !16897, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16899)
!16897 = !DISubroutineType(types: !16898)
!16898 = !{null, !2512, !125}
!16899 = !{!16900, !16901, !16902}
!16900 = !DILocalVariable(name: "thread", arg: 1, scope: !16896, file: !2617, line: 929, type: !2512)
!16901 = !DILocalVariable(name: "prio", arg: 2, scope: !16896, file: !2617, line: 929, type: !125)
!16902 = !DILocalVariable(name: "need_sched", scope: !16896, file: !2617, line: 931, type: !153)
!16903 = !DILocation(line: 0, scope: !16896)
!16904 = !DILocation(line: 931, column: 20, scope: !16896)
!16905 = !DILocation(line: 935, column: 17, scope: !16906)
!16906 = distinct !DILexicalBlock(scope: !16896, file: !2617, line: 935, column: 6)
!16907 = !DILocation(line: 935, column: 20, scope: !16906)
!16908 = !DILocation(line: 935, column: 35, scope: !16906)
!16909 = !DILocation(line: 935, column: 48, scope: !16906)
!16910 = !DILocation(line: 935, column: 6, scope: !16896)
!16911 = !DILocation(line: 936, column: 3, scope: !16912)
!16912 = distinct !DILexicalBlock(scope: !16906, file: !2617, line: 935, column: 55)
!16913 = !DILocation(line: 937, column: 2, scope: !16912)
!16914 = !DILocation(line: 938, column: 1, scope: !16896)
!16915 = distinct !DISubprogram(name: "k_sched_lock", scope: !2617, file: !2617, line: 987, type: !3278, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16916)
!16916 = !{!16917, !16919}
!16917 = !DILocalVariable(name: "__i", scope: !16918, file: !2617, line: 989, type: !15698)
!16918 = distinct !DILexicalBlock(scope: !16915, file: !2617, line: 989, column: 2)
!16919 = !DILocalVariable(name: "__key", scope: !16918, file: !2617, line: 989, type: !15698)
!16920 = !DILocation(line: 0, scope: !16918)
!16921 = !DILocation(line: 0, scope: !15706, inlinedAt: !16922)
!16922 = distinct !DILocation(line: 989, column: 2, scope: !16918)
!16923 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !16924)
!16924 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !16922)
!16925 = !DILocation(line: 0, scope: !15715, inlinedAt: !16924)
!16926 = !DILocation(line: 992, column: 3, scope: !16927)
!16927 = distinct !DILexicalBlock(scope: !16928, file: !2617, line: 989, column: 26)
!16928 = distinct !DILexicalBlock(scope: !16918, file: !2617, line: 989, column: 2)
!16929 = !DILocation(line: 0, scope: !15733, inlinedAt: !16930)
!16930 = distinct !DILocation(line: 989, column: 2, scope: !16928)
!16931 = !DILocation(line: 0, scope: !15741, inlinedAt: !16932)
!16932 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !16930)
!16933 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !16932)
!16934 = !DILocation(line: 994, column: 1, scope: !16915)
!16935 = distinct !DISubprogram(name: "z_sched_lock", scope: !14978, file: !14978, line: 251, type: !3278, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !639)
!16936 = !DILocation(line: 256, column: 4, scope: !16935)
!16937 = !DILocation(line: 256, column: 19, scope: !16935)
!16938 = !DILocation(line: 256, column: 2, scope: !16935)
!16939 = !DILocation(line: 258, column: 2, scope: !16940)
!16940 = distinct !DILexicalBlock(scope: !16935, file: !14978, line: 258, column: 2)
!16941 = !{i64 2154190866}
!16942 = !DILocation(line: 259, column: 1, scope: !16935)
!16943 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2617, file: !2617, line: 996, type: !3278, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16944)
!16944 = !{!16945, !16947}
!16945 = !DILocalVariable(name: "__i", scope: !16946, file: !2617, line: 998, type: !15698)
!16946 = distinct !DILexicalBlock(scope: !16943, file: !2617, line: 998, column: 2)
!16947 = !DILocalVariable(name: "__key", scope: !16946, file: !2617, line: 998, type: !15698)
!16948 = !DILocation(line: 0, scope: !16946)
!16949 = !DILocation(line: 0, scope: !15706, inlinedAt: !16950)
!16950 = distinct !DILocation(line: 998, column: 2, scope: !16946)
!16951 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !16952)
!16952 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !16950)
!16953 = !DILocation(line: 0, scope: !15715, inlinedAt: !16952)
!16954 = !DILocation(line: 1002, column: 5, scope: !16955)
!16955 = distinct !DILexicalBlock(scope: !16956, file: !2617, line: 998, column: 26)
!16956 = distinct !DILexicalBlock(scope: !16946, file: !2617, line: 998, column: 2)
!16957 = !DILocation(line: 1002, column: 20, scope: !16955)
!16958 = !DILocation(line: 1002, column: 3, scope: !16955)
!16959 = !DILocation(line: 1003, column: 3, scope: !16955)
!16960 = !DILocation(line: 0, scope: !15733, inlinedAt: !16961)
!16961 = distinct !DILocation(line: 998, column: 2, scope: !16956)
!16962 = !DILocation(line: 0, scope: !15741, inlinedAt: !16963)
!16963 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !16961)
!16964 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !16963)
!16965 = !DILocation(line: 1011, column: 2, scope: !16943)
!16966 = !DILocation(line: 1012, column: 1, scope: !16943)
!16967 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2617, file: !2617, line: 1014, type: !16014, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !639)
!16968 = !DILocation(line: 1028, column: 25, scope: !16967)
!16969 = !DILocation(line: 1028, column: 2, scope: !16967)
!16970 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2617, file: !2617, line: 1155, type: !16971, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !16973)
!16971 = !DISubroutineType(types: !16972)
!16972 = !{!153, !2541, !2541}
!16973 = !{!16974, !16975, !16976, !16977, !16978}
!16974 = !DILocalVariable(name: "a", arg: 1, scope: !16970, file: !2617, line: 1155, type: !2541)
!16975 = !DILocalVariable(name: "b", arg: 2, scope: !16970, file: !2617, line: 1155, type: !2541)
!16976 = !DILocalVariable(name: "thread_a", scope: !16970, file: !2617, line: 1157, type: !2512)
!16977 = !DILocalVariable(name: "thread_b", scope: !16970, file: !2617, line: 1157, type: !2512)
!16978 = !DILocalVariable(name: "cmp", scope: !16970, file: !2617, line: 1158, type: !888)
!16979 = !DILocation(line: 0, scope: !16970)
!16980 = !DILocation(line: 1160, column: 13, scope: !16970)
!16981 = !DILocation(line: 1161, column: 13, scope: !16970)
!16982 = !DILocation(line: 1163, column: 8, scope: !16970)
!16983 = !DILocation(line: 1165, column: 10, scope: !16984)
!16984 = distinct !DILexicalBlock(scope: !16970, file: !2617, line: 1165, column: 6)
!16985 = !DILocation(line: 1165, column: 6, scope: !16970)
!16986 = !DILocation(line: 1167, column: 17, scope: !16987)
!16987 = distinct !DILexicalBlock(scope: !16984, file: !2617, line: 1167, column: 13)
!16988 = !DILocation(line: 1167, column: 13, scope: !16984)
!16989 = !DILocation(line: 1170, column: 25, scope: !16990)
!16990 = distinct !DILexicalBlock(scope: !16987, file: !2617, line: 1169, column: 9)
!16991 = !DILocation(line: 1170, column: 52, scope: !16990)
!16992 = !DILocation(line: 1170, column: 35, scope: !16990)
!16993 = !DILocation(line: 1170, column: 3, scope: !16990)
!16994 = !DILocation(line: 0, scope: !16984)
!16995 = !DILocation(line: 1173, column: 1, scope: !16970)
!16996 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2617, file: !2617, line: 1175, type: !16997, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17012)
!16997 = !DISubroutineType(types: !16998)
!16998 = !{null, !16999, !2512}
!16999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17000, size: 32)
!17000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !17001, line: 37, size: 128, elements: !17002)
!17001 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17002 = !{!17003, !17011}
!17003 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !17000, file: !17001, line: 38, baseType: !17004, size: 96)
!17004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !557, line: 83, size: 96, elements: !17005)
!17005 = !{!17006, !17007, !17010}
!17006 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !17004, file: !557, line: 84, baseType: !2541, size: 32)
!17007 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !17004, file: !557, line: 85, baseType: !17008, size: 32, offset: 32)
!17008 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !557, line: 81, baseType: !17009)
!17009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16971, size: 32)
!17010 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !17004, file: !557, line: 86, baseType: !125, size: 32, offset: 64)
!17011 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !17000, file: !17001, line: 39, baseType: !125, size: 32, offset: 96)
!17012 = !{!17013, !17014, !17015, !17016, !17025}
!17013 = !DILocalVariable(name: "pq", arg: 1, scope: !16996, file: !2617, line: 1175, type: !16999)
!17014 = !DILocalVariable(name: "thread", arg: 2, scope: !16996, file: !2617, line: 1175, type: !2512)
!17015 = !DILocalVariable(name: "t", scope: !16996, file: !2617, line: 1177, type: !2512)
!17016 = !DILocalVariable(name: "__f", scope: !17017, file: !2617, line: 1190, type: !17020)
!17017 = distinct !DILexicalBlock(scope: !17018, file: !2617, line: 1190, column: 3)
!17018 = distinct !DILexicalBlock(scope: !17019, file: !2617, line: 1189, column: 27)
!17019 = distinct !DILexicalBlock(scope: !16996, file: !2617, line: 1189, column: 6)
!17020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !557, line: 155, size: 96, elements: !17021)
!17021 = !{!17022, !17023, !17024}
!17022 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !17020, file: !557, line: 156, baseType: !2612, size: 32)
!17023 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !17020, file: !557, line: 157, baseType: !184, size: 32, offset: 32)
!17024 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !17020, file: !557, line: 158, baseType: !888, size: 32, offset: 64)
!17025 = !DILocalVariable(name: "n", scope: !17026, file: !2617, line: 1190, type: !2541)
!17026 = distinct !DILexicalBlock(scope: !17027, file: !2617, line: 1190, column: 3)
!17027 = distinct !DILexicalBlock(scope: !17017, file: !2617, line: 1190, column: 3)
!17028 = !DILocation(line: 0, scope: !16996)
!17029 = !DILocation(line: 1181, column: 31, scope: !16996)
!17030 = !DILocation(line: 1181, column: 45, scope: !16996)
!17031 = !DILocation(line: 1181, column: 15, scope: !16996)
!17032 = !DILocation(line: 1181, column: 25, scope: !16996)
!17033 = !DILocation(line: 1189, column: 11, scope: !17019)
!17034 = !DILocation(line: 1189, column: 7, scope: !17019)
!17035 = !DILocation(line: 1189, column: 6, scope: !16996)
!17036 = !DILocation(line: 1190, column: 3, scope: !17017)
!17037 = !DILocation(line: 1190, column: 3, scope: !17026)
!17038 = !DILocation(line: 0, scope: !17026)
!17039 = !DILocation(line: 1190, column: 3, scope: !17027)
!17040 = !DILocation(line: 1193, column: 2, scope: !17018)
!17041 = !DILocation(line: 1191, column: 42, scope: !17042)
!17042 = distinct !DILexicalBlock(scope: !17027, file: !2617, line: 1190, column: 54)
!17043 = !DILocation(line: 1191, column: 12, scope: !17042)
!17044 = !DILocation(line: 1191, column: 22, scope: !17042)
!17045 = distinct !{!17045, !17036, !17046}
!17046 = !DILocation(line: 1192, column: 3, scope: !17017)
!17047 = !DILocation(line: 1195, column: 17, scope: !16996)
!17048 = !DILocation(line: 1195, column: 37, scope: !16996)
!17049 = !DILocation(line: 1195, column: 2, scope: !16996)
!17050 = !DILocation(line: 1196, column: 1, scope: !16996)
!17051 = !DISubprogram(name: "z_rb_foreach_next", scope: !557, file: !557, line: 176, type: !17052, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17052 = !DISubroutineType(types: !17053)
!17053 = !{!2541, !17054, !17055}
!17054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17004, size: 32)
!17055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17020, size: 32)
!17056 = !DISubprogram(name: "rb_insert", scope: !557, file: !557, line: 105, type: !17057, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17057 = !DISubroutineType(types: !17058)
!17058 = !{null, !17054, !2541}
!17059 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2617, file: !2617, line: 1198, type: !16997, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17060)
!17060 = !{!17061, !17062}
!17061 = !DILocalVariable(name: "pq", arg: 1, scope: !17059, file: !2617, line: 1198, type: !16999)
!17062 = !DILocalVariable(name: "thread", arg: 2, scope: !17059, file: !2617, line: 1198, type: !2512)
!17063 = !DILocation(line: 0, scope: !17059)
!17064 = !DILocation(line: 1202, column: 17, scope: !17059)
!17065 = !DILocation(line: 1202, column: 37, scope: !17059)
!17066 = !DILocation(line: 1202, column: 2, scope: !17059)
!17067 = !DILocation(line: 1204, column: 16, scope: !17068)
!17068 = distinct !DILexicalBlock(scope: !17059, file: !2617, line: 1204, column: 6)
!17069 = !DILocation(line: 1204, column: 7, scope: !17068)
!17070 = !DILocation(line: 1204, column: 6, scope: !17059)
!17071 = !DILocation(line: 1205, column: 7, scope: !17072)
!17072 = distinct !DILexicalBlock(scope: !17068, file: !2617, line: 1204, column: 22)
!17073 = !DILocation(line: 1205, column: 22, scope: !17072)
!17074 = !DILocation(line: 1206, column: 2, scope: !17072)
!17075 = !DILocation(line: 1207, column: 1, scope: !17059)
!17076 = !DISubprogram(name: "rb_remove", scope: !557, file: !557, line: 110, type: !17057, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17077 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2617, file: !2617, line: 1209, type: !17078, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17080)
!17078 = !DISubroutineType(types: !17079)
!17079 = !{!2512, !16999}
!17080 = !{!17081, !17082, !17083}
!17081 = !DILocalVariable(name: "pq", arg: 1, scope: !17077, file: !2617, line: 1209, type: !16999)
!17082 = !DILocalVariable(name: "thread", scope: !17077, file: !2617, line: 1211, type: !2512)
!17083 = !DILocalVariable(name: "n", scope: !17077, file: !2617, line: 1212, type: !2541)
!17084 = !DILocation(line: 0, scope: !17077)
!17085 = !DILocation(line: 1212, column: 37, scope: !17077)
!17086 = !DILocation(line: 1212, column: 21, scope: !17077)
!17087 = !DILocation(line: 1217, column: 2, scope: !17077)
!17088 = distinct !DISubprogram(name: "rb_get_min", scope: !557, file: !557, line: 115, type: !17089, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17091)
!17089 = !DISubroutineType(types: !17090)
!17090 = !{!2541, !17054}
!17091 = !{!17092}
!17092 = !DILocalVariable(name: "tree", arg: 1, scope: !17088, file: !557, line: 115, type: !17054)
!17093 = !DILocation(line: 0, scope: !17088)
!17094 = !DILocation(line: 117, column: 9, scope: !17088)
!17095 = !DILocation(line: 117, column: 2, scope: !17088)
!17096 = !DISubprogram(name: "z_rb_get_minmax", scope: !557, file: !557, line: 100, type: !17097, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17097 = !DISubroutineType(types: !17098)
!17098 = !{!2541, !17054, !150}
!17099 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2617, file: !2617, line: 1246, type: !17100, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17110)
!17100 = !DISubroutineType(types: !17101)
!17101 = !{!2512, !17102}
!17102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17103, size: 32)
!17103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !17001, line: 53, size: 2080, elements: !17104)
!17104 = !{!17105, !17109}
!17105 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !17103, file: !17001, line: 54, baseType: !17106, size: 2048)
!17106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2548, size: 2048, elements: !17107)
!17107 = !{!17108}
!17108 = !DISubrange(count: 32)
!17109 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !17103, file: !17001, line: 55, baseType: !32, size: 32, offset: 2048)
!17110 = !{!17111, !17112, !17113, !17114}
!17111 = !DILocalVariable(name: "pq", arg: 1, scope: !17099, file: !2617, line: 1246, type: !17102)
!17112 = !DILocalVariable(name: "thread", scope: !17099, file: !2617, line: 1252, type: !2512)
!17113 = !DILocalVariable(name: "l", scope: !17099, file: !2617, line: 1253, type: !15909)
!17114 = !DILocalVariable(name: "n", scope: !17099, file: !2617, line: 1254, type: !2613)
!17115 = !DILocation(line: 0, scope: !17099)
!17116 = !DILocation(line: 1248, column: 11, scope: !17117)
!17117 = distinct !DILexicalBlock(scope: !17099, file: !2617, line: 1248, column: 6)
!17118 = !DILocation(line: 1248, column: 7, scope: !17117)
!17119 = !DILocation(line: 1248, column: 6, scope: !17099)
!17120 = !DILocation(line: 1253, column: 31, scope: !17099)
!17121 = !DILocation(line: 1253, column: 20, scope: !17099)
!17122 = !DILocation(line: 1254, column: 19, scope: !17099)
!17123 = !DILocation(line: 1260, column: 1, scope: !17099)
!17124 = distinct !DISubprogram(name: "z_unpend_all", scope: !2617, file: !2617, line: 1262, type: !17125, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17127)
!17125 = !DISubroutineType(types: !17126)
!17126 = !{!125, !2543}
!17127 = !{!17128, !17129, !17130}
!17128 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17124, file: !2617, line: 1262, type: !2543)
!17129 = !DILocalVariable(name: "need_sched", scope: !17124, file: !2617, line: 1264, type: !125)
!17130 = !DILocalVariable(name: "thread", scope: !17124, file: !2617, line: 1265, type: !2512)
!17131 = !DILocation(line: 0, scope: !17124)
!17132 = !DILocation(line: 1267, column: 19, scope: !17124)
!17133 = !DILocation(line: 1267, column: 41, scope: !17124)
!17134 = !DILocation(line: 1267, column: 2, scope: !17124)
!17135 = !DILocation(line: 1268, column: 3, scope: !17136)
!17136 = distinct !DILexicalBlock(scope: !17124, file: !2617, line: 1267, column: 50)
!17137 = !DILocation(line: 1269, column: 3, scope: !17136)
!17138 = distinct !{!17138, !17134, !17139}
!17139 = !DILocation(line: 1271, column: 2, scope: !17124)
!17140 = !DILocation(line: 1273, column: 2, scope: !17124)
!17141 = distinct !DISubprogram(name: "z_waitq_head", scope: !15304, file: !15304, line: 52, type: !16757, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17142)
!17142 = !{!17143}
!17143 = !DILocalVariable(name: "w", arg: 1, scope: !17141, file: !15304, line: 52, type: !2543)
!17144 = !DILocation(line: 0, scope: !17141)
!17145 = !DILocation(line: 54, column: 52, scope: !17141)
!17146 = !DILocation(line: 54, column: 28, scope: !17141)
!17147 = !DILocation(line: 54, column: 9, scope: !17141)
!17148 = !DILocation(line: 54, column: 2, scope: !17141)
!17149 = distinct !DISubprogram(name: "init_ready_q", scope: !2617, file: !2617, line: 1276, type: !17150, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17157)
!17150 = !DISubroutineType(types: !17151)
!17151 = !{null, !17152}
!17152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17153, size: 32)
!17153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !567, line: 83, size: 96, elements: !17154)
!17154 = !{!17155, !17156}
!17155 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !17153, file: !567, line: 86, baseType: !2512, size: 32)
!17156 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !17153, file: !567, line: 90, baseType: !2548, size: 64, offset: 32)
!17157 = !{!17158}
!17158 = !DILocalVariable(name: "rq", arg: 1, scope: !17149, file: !2617, line: 1276, type: !17152)
!17159 = !DILocation(line: 0, scope: !17149)
!17160 = !DILocation(line: 1289, column: 22, scope: !17149)
!17161 = !DILocation(line: 1289, column: 2, scope: !17149)
!17162 = !DILocation(line: 1291, column: 1, scope: !17149)
!17163 = distinct !DISubprogram(name: "sys_dlist_init", scope: !541, file: !541, line: 197, type: !17164, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17166)
!17164 = !DISubroutineType(types: !17165)
!17165 = !{null, !15909}
!17166 = !{!17167}
!17167 = !DILocalVariable(name: "list", arg: 1, scope: !17163, file: !541, line: 197, type: !15909)
!17168 = !DILocation(line: 0, scope: !17163)
!17169 = !DILocation(line: 199, column: 8, scope: !17163)
!17170 = !DILocation(line: 199, column: 13, scope: !17163)
!17171 = !DILocation(line: 200, column: 8, scope: !17163)
!17172 = !DILocation(line: 200, column: 13, scope: !17163)
!17173 = !DILocation(line: 201, column: 1, scope: !17163)
!17174 = distinct !DISubprogram(name: "z_sched_init", scope: !2617, file: !2617, line: 1293, type: !3278, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !639)
!17175 = !DILocation(line: 1302, column: 2, scope: !17174)
!17176 = !DILocation(line: 1306, column: 2, scope: !17174)
!17177 = !DILocation(line: 1309, column: 1, scope: !17174)
!17178 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2617, file: !2617, line: 1311, type: !17179, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17182)
!17179 = !DISubroutineType(types: !17180)
!17180 = !{!125, !17181}
!17181 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !2512)
!17182 = !{!17183}
!17183 = !DILocalVariable(name: "thread", arg: 1, scope: !17178, file: !2617, line: 1311, type: !17181)
!17184 = !DILocation(line: 0, scope: !17178)
!17185 = !DILocation(line: 1313, column: 22, scope: !17178)
!17186 = !DILocation(line: 1313, column: 9, scope: !17178)
!17187 = !DILocation(line: 1313, column: 2, scope: !17178)
!17188 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2617, file: !2617, line: 1325, type: !17189, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17191)
!17189 = !DISubroutineType(types: !17190)
!17190 = !{null, !17181, !125}
!17191 = !{!17192, !17193, !17194}
!17192 = !DILocalVariable(name: "thread", arg: 1, scope: !17188, file: !2617, line: 1325, type: !17181)
!17193 = !DILocalVariable(name: "prio", arg: 2, scope: !17188, file: !2617, line: 1325, type: !125)
!17194 = !DILocalVariable(name: "th", scope: !17188, file: !2617, line: 1334, type: !2512)
!17195 = !DILocation(line: 0, scope: !17188)
!17196 = !DILocation(line: 1336, column: 2, scope: !17188)
!17197 = !DILocation(line: 1337, column: 1, scope: !17188)
!17198 = distinct !DISubprogram(name: "k_can_yield", scope: !2617, file: !2617, line: 1384, type: !9292, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !639)
!17199 = !DILocation(line: 1386, column: 11, scope: !17198)
!17200 = !DILocation(line: 1386, column: 29, scope: !17198)
!17201 = !DILocation(line: 1386, column: 32, scope: !17198)
!17202 = !DILocation(line: 1386, column: 46, scope: !17198)
!17203 = !DILocation(line: 1387, column: 28, scope: !17198)
!17204 = !DILocation(line: 1387, column: 4, scope: !17198)
!17205 = !DILocation(line: 1386, column: 2, scope: !17198)
!17206 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !624, file: !624, line: 989, type: !9292, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !639)
!17207 = !DILocation(line: 993, column: 10, scope: !17206)
!17208 = !DILocation(line: 993, column: 2, scope: !17206)
!17209 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2617, file: !2617, line: 1390, type: !3278, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17210)
!17210 = !{!17211}
!17211 = !DILocalVariable(name: "key", scope: !17209, file: !2617, line: 1396, type: !15698)
!17212 = !DILocation(line: 0, scope: !15706, inlinedAt: !17213)
!17213 = distinct !DILocation(line: 1396, column: 25, scope: !17209)
!17214 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !17215)
!17215 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !17213)
!17216 = !DILocation(line: 0, scope: !15715, inlinedAt: !17215)
!17217 = !DILocation(line: 0, scope: !17209)
!17218 = !DILocation(line: 1400, column: 18, scope: !17219)
!17219 = distinct !DILexicalBlock(scope: !17220, file: !2617, line: 1399, column: 36)
!17220 = distinct !DILexicalBlock(scope: !17209, file: !2617, line: 1398, column: 6)
!17221 = !DILocation(line: 0, scope: !15875, inlinedAt: !17222)
!17222 = distinct !DILocation(line: 1400, column: 3, scope: !17219)
!17223 = !DILocation(line: 266, column: 15, scope: !15875, inlinedAt: !17222)
!17224 = !DILocation(line: 266, column: 28, scope: !15875, inlinedAt: !17222)
!17225 = !DILocation(line: 0, scope: !15883, inlinedAt: !17226)
!17226 = distinct !DILocation(line: 268, column: 3, scope: !15887, inlinedAt: !17222)
!17227 = !DILocation(line: 234, column: 2, scope: !15883, inlinedAt: !17226)
!17228 = !DILocation(line: 1402, column: 15, scope: !17209)
!17229 = !DILocation(line: 0, scope: !15892, inlinedAt: !17230)
!17230 = distinct !DILocation(line: 1402, column: 2, scope: !17209)
!17231 = !DILocation(line: 252, column: 15, scope: !15892, inlinedAt: !17230)
!17232 = !DILocation(line: 252, column: 28, scope: !15892, inlinedAt: !17230)
!17233 = !DILocation(line: 0, scope: !15899, inlinedAt: !17234)
!17234 = distinct !DILocation(line: 254, column: 3, scope: !15903, inlinedAt: !17230)
!17235 = !DILocation(line: 0, scope: !15906, inlinedAt: !17236)
!17236 = distinct !DILocation(line: 229, column: 2, scope: !15899, inlinedAt: !17234)
!17237 = !DILocation(line: 188, column: 2, scope: !15916, inlinedAt: !17236)
!17238 = !DILocation(line: 188, column: 2, scope: !15918, inlinedAt: !17236)
!17239 = !DILocation(line: 0, scope: !15916, inlinedAt: !17236)
!17240 = !DILocation(line: 189, column: 7, scope: !15921, inlinedAt: !17236)
!17241 = !DILocation(line: 189, column: 35, scope: !15921, inlinedAt: !17236)
!17242 = !DILocation(line: 189, column: 7, scope: !15922, inlinedAt: !17236)
!17243 = !DILocation(line: 191, column: 21, scope: !15926, inlinedAt: !17236)
!17244 = !DILocation(line: 190, column: 4, scope: !15926, inlinedAt: !17236)
!17245 = !DILocation(line: 192, column: 4, scope: !15926, inlinedAt: !17236)
!17246 = distinct !{!17246, !17237, !17247}
!17247 = !DILocation(line: 194, column: 2, scope: !15916, inlinedAt: !17236)
!17248 = !DILocation(line: 196, column: 37, scope: !15906, inlinedAt: !17236)
!17249 = !DILocation(line: 196, column: 2, scope: !15906, inlinedAt: !17236)
!17250 = !DILocation(line: 197, column: 1, scope: !15906, inlinedAt: !17236)
!17251 = !DILocation(line: 1403, column: 2, scope: !17209)
!17252 = !DILocation(line: 0, scope: !16317, inlinedAt: !17253)
!17253 = distinct !DILocation(line: 1404, column: 2, scope: !17209)
!17254 = !DILocation(line: 196, column: 9, scope: !16317, inlinedAt: !17253)
!17255 = !DILocation(line: 1405, column: 1, scope: !17209)
!17256 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2617, file: !2617, line: 1459, type: !17257, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17259)
!17257 = !DISubroutineType(types: !17258)
!17258 = !{!888, !16497}
!17259 = !{!17260, !17261, !17262}
!17260 = !DILocalVariable(name: "timeout", arg: 1, scope: !17256, file: !2617, line: 1459, type: !16497)
!17261 = !DILocalVariable(name: "ticks", scope: !17256, file: !2617, line: 1461, type: !1864)
!17262 = !DILocalVariable(name: "ret", scope: !17256, file: !2617, line: 1480, type: !888)
!17263 = !DILocation(line: 0, scope: !17256)
!17264 = !DILocation(line: 1468, column: 6, scope: !17265)
!17265 = distinct !DILexicalBlock(scope: !17256, file: !2617, line: 1468, column: 6)
!17266 = !DILocation(line: 1468, column: 6, scope: !17256)
!17267 = !DILocation(line: 1469, column: 20, scope: !17268)
!17268 = distinct !DILexicalBlock(scope: !17265, file: !2617, line: 1468, column: 40)
!17269 = !DILocation(line: 1469, column: 3, scope: !17268)
!17270 = !DILocation(line: 1473, column: 3, scope: !17268)
!17271 = !DILocation(line: 1478, column: 10, scope: !17256)
!17272 = !DILocation(line: 1480, column: 16, scope: !17256)
!17273 = !DILocation(line: 1485, column: 1, scope: !17256)
!17274 = distinct !DISubprogram(name: "k_thread_suspend", scope: !5350, file: !5350, line: 310, type: !17275, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17277)
!17275 = !DISubroutineType(types: !17276)
!17276 = !{null, !17181}
!17277 = !{!17278}
!17278 = !DILocalVariable(name: "thread", arg: 1, scope: !17274, file: !5350, line: 310, type: !17181)
!17279 = !DILocation(line: 0, scope: !17274)
!17280 = !DILocation(line: 319, column: 2, scope: !17281)
!17281 = distinct !DILexicalBlock(scope: !17274, file: !5350, line: 319, column: 2)
!17282 = !{i64 2154109255}
!17283 = !DILocation(line: 320, column: 2, scope: !17274)
!17284 = !DILocation(line: 321, column: 1, scope: !17274)
!17285 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2617, file: !2617, line: 1415, type: !17286, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17288)
!17286 = !DISubroutineType(types: !17287)
!17287 = !{!888, !1864}
!17288 = !{!17289, !17290, !17291, !17292}
!17289 = !DILocalVariable(name: "ticks", arg: 1, scope: !17285, file: !2617, line: 1415, type: !1864)
!17290 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17285, file: !2617, line: 1418, type: !208)
!17291 = !DILocalVariable(name: "timeout", scope: !17285, file: !2617, line: 1430, type: !16497)
!17292 = !DILocalVariable(name: "key", scope: !17285, file: !2617, line: 1437, type: !15698)
!17293 = !DILocation(line: 0, scope: !17285)
!17294 = !DILocation(line: 1425, column: 12, scope: !17295)
!17295 = distinct !DILexicalBlock(scope: !17285, file: !2617, line: 1425, column: 6)
!17296 = !DILocation(line: 1425, column: 6, scope: !17285)
!17297 = !DILocation(line: 1426, column: 3, scope: !17298)
!17298 = distinct !DILexicalBlock(scope: !17295, file: !2617, line: 1425, column: 18)
!17299 = !DILocation(line: 1427, column: 3, scope: !17298)
!17300 = !DILocation(line: 1431, column: 24, scope: !17301)
!17301 = distinct !DILexicalBlock(scope: !17285, file: !2617, line: 1431, column: 6)
!17302 = !DILocation(line: 1431, column: 6, scope: !17285)
!17303 = !DILocation(line: 1432, column: 35, scope: !17304)
!17304 = distinct !DILexicalBlock(scope: !17301, file: !2617, line: 1431, column: 30)
!17305 = !DILocation(line: 1432, column: 27, scope: !17304)
!17306 = !DILocation(line: 1433, column: 2, scope: !17304)
!17307 = !DILocation(line: 1434, column: 27, scope: !17308)
!17308 = distinct !DILexicalBlock(scope: !17301, file: !2617, line: 1433, column: 9)
!17309 = !DILocation(line: 0, scope: !17301)
!17310 = !DILocation(line: 0, scope: !15706, inlinedAt: !17311)
!17311 = distinct !DILocation(line: 1437, column: 25, scope: !17285)
!17312 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !17313)
!17313 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !17311)
!17314 = !DILocation(line: 0, scope: !15715, inlinedAt: !17313)
!17315 = !DILocation(line: 1440, column: 20, scope: !17285)
!17316 = !DILocation(line: 1440, column: 18, scope: !17285)
!17317 = !DILocation(line: 1442, column: 2, scope: !17285)
!17318 = !DILocation(line: 1443, column: 23, scope: !17285)
!17319 = !DILocation(line: 1443, column: 2, scope: !17285)
!17320 = !DILocation(line: 1444, column: 29, scope: !17285)
!17321 = !DILocation(line: 1444, column: 2, scope: !17285)
!17322 = !DILocation(line: 0, scope: !16317, inlinedAt: !17323)
!17323 = distinct !DILocation(line: 1446, column: 8, scope: !17285)
!17324 = !DILocation(line: 196, column: 9, scope: !16317, inlinedAt: !17323)
!17325 = !DILocation(line: 1450, column: 10, scope: !17285)
!17326 = !DILocation(line: 1450, column: 45, scope: !17285)
!17327 = !DILocation(line: 1450, column: 43, scope: !17285)
!17328 = !DILocation(line: 1451, column: 6, scope: !17285)
!17329 = !DILocation(line: 1457, column: 1, scope: !17285)
!17330 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !15539, file: !15539, line: 1103, type: !15540, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17331)
!17331 = !{!17332}
!17332 = !DILocalVariable(name: "t", arg: 1, scope: !17330, file: !15539, line: 1103, type: !1771)
!17333 = !DILocation(line: 0, scope: !17330)
!17334 = !DILocation(line: 0, scope: !15753, inlinedAt: !17335)
!17335 = distinct !DILocation(line: 1106, column: 9, scope: !17330)
!17336 = !DILocation(line: 139, column: 13, scope: !17337, inlinedAt: !17335)
!17337 = distinct !DILexicalBlock(scope: !17338, file: !15539, line: 138, column: 10)
!17338 = distinct !DILexicalBlock(scope: !17339, file: !15539, line: 136, column: 7)
!17339 = distinct !DILexicalBlock(scope: !15774, file: !15539, line: 134, column: 17)
!17340 = !DILocation(line: 1106, column: 2, scope: !17330)
!17341 = distinct !DISubprogram(name: "k_yield", scope: !5350, file: !5350, line: 140, type: !3278, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !639)
!17342 = !DILocation(line: 148, column: 2, scope: !17343)
!17343 = distinct !DILexicalBlock(scope: !17341, file: !5350, line: 148, column: 2)
!17344 = !{i64 2154108575}
!17345 = !DILocation(line: 149, column: 2, scope: !17341)
!17346 = !DILocation(line: 150, column: 1, scope: !17341)
!17347 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2617, file: !2617, line: 1495, type: !17348, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17350)
!17348 = !DISubroutineType(types: !17349)
!17349 = !{!888, !125}
!17350 = !{!17351, !17352}
!17351 = !DILocalVariable(name: "us", arg: 1, scope: !17347, file: !2617, line: 1495, type: !125)
!17352 = !DILocalVariable(name: "ticks", scope: !17347, file: !2617, line: 1497, type: !888)
!17353 = !DILocation(line: 0, scope: !17347)
!17354 = !DILocation(line: 1501, column: 31, scope: !17347)
!17355 = !DILocation(line: 1501, column: 10, scope: !17347)
!17356 = !DILocation(line: 1502, column: 23, scope: !17347)
!17357 = !DILocation(line: 1502, column: 10, scope: !17347)
!17358 = !DILocation(line: 1506, column: 31, scope: !17347)
!17359 = !DILocation(line: 1506, column: 9, scope: !17347)
!17360 = !DILocation(line: 1506, column: 2, scope: !17347)
!17361 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !15539, file: !15539, line: 571, type: !15540, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17362)
!17362 = !{!17363}
!17363 = !DILocalVariable(name: "t", arg: 1, scope: !17361, file: !15539, line: 571, type: !1771)
!17364 = !DILocation(line: 0, scope: !17361)
!17365 = !DILocation(line: 0, scope: !15753, inlinedAt: !17366)
!17366 = distinct !DILocation(line: 574, column: 9, scope: !17361)
!17367 = !DILocation(line: 135, column: 5, scope: !17339, inlinedAt: !17366)
!17368 = !DILocation(line: 139, column: 13, scope: !17337, inlinedAt: !17366)
!17369 = !DILocation(line: 574, column: 2, scope: !17361)
!17370 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !15539, file: !15539, line: 1187, type: !15540, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17371)
!17371 = !{!17372}
!17372 = !DILocalVariable(name: "t", arg: 1, scope: !17370, file: !15539, line: 1187, type: !1771)
!17373 = !DILocation(line: 0, scope: !17370)
!17374 = !DILocation(line: 0, scope: !15753, inlinedAt: !17375)
!17375 = distinct !DILocation(line: 1190, column: 9, scope: !17370)
!17376 = !DILocation(line: 145, column: 13, scope: !17377, inlinedAt: !17375)
!17377 = distinct !DILexicalBlock(scope: !15771, file: !15539, line: 144, column: 10)
!17378 = !DILocation(line: 1190, column: 2, scope: !17370)
!17379 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2617, file: !2617, line: 1517, type: !17275, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17380)
!17380 = !{!17381}
!17381 = !DILocalVariable(name: "thread", arg: 1, scope: !17379, file: !2617, line: 1517, type: !17181)
!17382 = !DILocation(line: 0, scope: !17379)
!17383 = !DILocation(line: 1521, column: 6, scope: !17384)
!17384 = distinct !DILexicalBlock(scope: !17379, file: !2617, line: 1521, column: 6)
!17385 = !DILocation(line: 1521, column: 6, scope: !17379)
!17386 = !DILocation(line: 1525, column: 6, scope: !17387)
!17387 = distinct !DILexicalBlock(scope: !17379, file: !2617, line: 1525, column: 6)
!17388 = !DILocation(line: 1525, column: 37, scope: !17387)
!17389 = !DILocation(line: 1525, column: 6, scope: !17379)
!17390 = !DILocation(line: 1527, column: 20, scope: !17391)
!17391 = distinct !DILexicalBlock(scope: !17392, file: !2617, line: 1527, column: 7)
!17392 = distinct !DILexicalBlock(scope: !17387, file: !2617, line: 1525, column: 42)
!17393 = !DILocation(line: 1527, column: 33, scope: !17391)
!17394 = !DILocation(line: 1527, column: 7, scope: !17392)
!17395 = !DILocation(line: 1532, column: 2, scope: !17379)
!17396 = !DILocation(line: 1533, column: 2, scope: !17379)
!17397 = !DILocation(line: 1031, column: 3, scope: !16350, inlinedAt: !17398)
!17398 = distinct !DILocation(line: 48, column: 10, scope: !16354, inlinedAt: !17399)
!17399 = distinct !DILocation(line: 1537, column: 7, scope: !17400)
!17400 = distinct !DILexicalBlock(scope: !17379, file: !2617, line: 1537, column: 6)
!17401 = !DILocation(line: 0, scope: !16350, inlinedAt: !17398)
!17402 = !DILocation(line: 48, column: 9, scope: !16354, inlinedAt: !17399)
!17403 = !DILocation(line: 1537, column: 6, scope: !17379)
!17404 = !DILocation(line: 1538, column: 3, scope: !17405)
!17405 = distinct !DILexicalBlock(scope: !17400, file: !2617, line: 1537, column: 25)
!17406 = !DILocation(line: 1539, column: 2, scope: !17405)
!17407 = !DILocation(line: 1540, column: 1, scope: !17379)
!17408 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14978, file: !14978, line: 101, type: !15824, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17409)
!17409 = !{!17410}
!17410 = !DILocalVariable(name: "thread", arg: 1, scope: !17408, file: !14978, line: 101, type: !2512)
!17411 = !DILocation(line: 0, scope: !17408)
!17412 = !DILocation(line: 103, column: 23, scope: !17408)
!17413 = !DILocation(line: 103, column: 36, scope: !17408)
!17414 = !DILocation(line: 103, column: 55, scope: !17408)
!17415 = !DILocation(line: 103, column: 2, scope: !17408)
!17416 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2617, file: !2617, line: 1567, type: !17417, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17419)
!17417 = !DISubroutineType(types: !17418)
!17418 = !{!17181}
!17419 = !{!17420}
!17420 = !DILocalVariable(name: "ret", scope: !17416, file: !2617, line: 1577, type: !17181)
!17421 = !DILocation(line: 1577, column: 30, scope: !17416)
!17422 = !DILocation(line: 0, scope: !17416)
!17423 = !DILocation(line: 1582, column: 2, scope: !17416)
!17424 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2617, file: !2617, line: 1593, type: !9581, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !639)
!17425 = !DILocation(line: 1031, column: 3, scope: !16350, inlinedAt: !17426)
!17426 = distinct !DILocation(line: 48, column: 10, scope: !16354, inlinedAt: !17427)
!17427 = distinct !DILocation(line: 1595, column: 10, scope: !17424)
!17428 = !DILocation(line: 0, scope: !16350, inlinedAt: !17426)
!17429 = !DILocation(line: 48, column: 9, scope: !16354, inlinedAt: !17427)
!17430 = !DILocation(line: 1595, column: 27, scope: !17424)
!17431 = !DILocation(line: 1595, column: 41, scope: !17424)
!17432 = !DILocation(line: 1595, column: 30, scope: !17424)
!17433 = !DILocation(line: 1595, column: 2, scope: !17424)
!17434 = distinct !DISubprogram(name: "z_thread_abort", scope: !2617, file: !2617, line: 1725, type: !15664, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17435)
!17435 = !{!17436, !17437}
!17436 = !DILocalVariable(name: "thread", arg: 1, scope: !17434, file: !2617, line: 1725, type: !2512)
!17437 = !DILocalVariable(name: "key", scope: !17434, file: !2617, line: 1727, type: !15698)
!17438 = !DILocation(line: 0, scope: !17434)
!17439 = !DILocation(line: 0, scope: !15706, inlinedAt: !17440)
!17440 = distinct !DILocation(line: 1727, column: 25, scope: !17434)
!17441 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !17442)
!17442 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !17440)
!17443 = !DILocation(line: 0, scope: !15715, inlinedAt: !17442)
!17444 = !DILocation(line: 1729, column: 20, scope: !17445)
!17445 = distinct !DILexicalBlock(scope: !17434, file: !2617, line: 1729, column: 6)
!17446 = !DILocation(line: 1729, column: 33, scope: !17445)
!17447 = !DILocation(line: 1729, column: 48, scope: !17445)
!17448 = !DILocation(line: 1729, column: 6, scope: !17434)
!17449 = !DILocation(line: 0, scope: !15733, inlinedAt: !17450)
!17450 = distinct !DILocation(line: 1730, column: 3, scope: !17451)
!17451 = distinct !DILexicalBlock(scope: !17445, file: !2617, line: 1729, column: 54)
!17452 = !DILocation(line: 0, scope: !15741, inlinedAt: !17453)
!17453 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !17450)
!17454 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !17453)
!17455 = !DILocation(line: 1732, column: 3, scope: !17456)
!17456 = distinct !DILexicalBlock(scope: !17451, file: !2617, line: 1732, column: 3)
!17457 = !{i64 2154844580, i64 2154844596, i64 2154844622, i64 2154844650, i64 2154844670}
!17458 = !DILocation(line: 1733, column: 3, scope: !17451)
!17459 = !DILocation(line: 1736, column: 20, scope: !17460)
!17460 = distinct !DILexicalBlock(scope: !17434, file: !2617, line: 1736, column: 6)
!17461 = !DILocation(line: 1736, column: 33, scope: !17460)
!17462 = !DILocation(line: 1736, column: 49, scope: !17460)
!17463 = !DILocation(line: 1736, column: 6, scope: !17434)
!17464 = !DILocation(line: 0, scope: !15733, inlinedAt: !17465)
!17465 = distinct !DILocation(line: 1737, column: 3, scope: !17466)
!17466 = distinct !DILexicalBlock(scope: !17460, file: !2617, line: 1736, column: 56)
!17467 = !DILocation(line: 0, scope: !15741, inlinedAt: !17468)
!17468 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !17465)
!17469 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !17468)
!17470 = !DILocation(line: 1738, column: 3, scope: !17466)
!17471 = !DILocation(line: 1775, column: 2, scope: !17434)
!17472 = !DILocation(line: 1776, column: 16, scope: !17473)
!17473 = distinct !DILexicalBlock(scope: !17434, file: !2617, line: 1776, column: 6)
!17474 = !DILocation(line: 1776, column: 13, scope: !17473)
!17475 = !DILocation(line: 1776, column: 25, scope: !17473)
!17476 = !DILocation(line: 1031, column: 3, scope: !16350, inlinedAt: !17477)
!17477 = distinct !DILocation(line: 48, column: 10, scope: !16354, inlinedAt: !17478)
!17478 = distinct !DILocation(line: 1776, column: 29, scope: !17473)
!17479 = !DILocation(line: 0, scope: !16350, inlinedAt: !17477)
!17480 = !DILocation(line: 48, column: 9, scope: !16354, inlinedAt: !17478)
!17481 = !DILocation(line: 1776, column: 6, scope: !17434)
!17482 = !DILocation(line: 0, scope: !16317, inlinedAt: !17483)
!17483 = distinct !DILocation(line: 1777, column: 3, scope: !17484)
!17484 = distinct !DILexicalBlock(scope: !17473, file: !2617, line: 1776, column: 47)
!17485 = !DILocation(line: 196, column: 9, scope: !16317, inlinedAt: !17483)
!17486 = !DILocation(line: 1779, column: 2, scope: !17484)
!17487 = !DILocation(line: 0, scope: !15733, inlinedAt: !17488)
!17488 = distinct !DILocation(line: 1780, column: 2, scope: !17434)
!17489 = !DILocation(line: 0, scope: !15741, inlinedAt: !17490)
!17490 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !17488)
!17491 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !17490)
!17492 = !DILocation(line: 1781, column: 1, scope: !17434)
!17493 = distinct !DISubprogram(name: "end_thread", scope: !2617, file: !2617, line: 1690, type: !15664, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17494)
!17494 = !{!17495}
!17495 = !DILocalVariable(name: "thread", arg: 1, scope: !17493, file: !2617, line: 1690, type: !2512)
!17496 = !DILocation(line: 0, scope: !17493)
!17497 = !DILocation(line: 1695, column: 20, scope: !17498)
!17498 = distinct !DILexicalBlock(scope: !17493, file: !2617, line: 1695, column: 6)
!17499 = !DILocation(line: 1695, column: 33, scope: !17498)
!17500 = !DILocation(line: 1695, column: 49, scope: !17498)
!17501 = !DILocation(line: 1695, column: 6, scope: !17493)
!17502 = !DILocation(line: 1697, column: 29, scope: !17503)
!17503 = distinct !DILexicalBlock(scope: !17498, file: !2617, line: 1695, column: 56)
!17504 = !DILocation(line: 1698, column: 7, scope: !17505)
!17505 = distinct !DILexicalBlock(scope: !17503, file: !2617, line: 1698, column: 7)
!17506 = !DILocation(line: 1698, column: 7, scope: !17503)
!17507 = !DILocation(line: 0, scope: !15875, inlinedAt: !17508)
!17508 = distinct !DILocation(line: 1699, column: 4, scope: !17509)
!17509 = distinct !DILexicalBlock(scope: !17505, file: !2617, line: 1698, column: 35)
!17510 = !DILocation(line: 266, column: 28, scope: !15875, inlinedAt: !17508)
!17511 = !DILocation(line: 0, scope: !15883, inlinedAt: !17512)
!17512 = distinct !DILocation(line: 268, column: 3, scope: !15887, inlinedAt: !17508)
!17513 = !DILocation(line: 234, column: 2, scope: !15883, inlinedAt: !17512)
!17514 = !DILocation(line: 1700, column: 3, scope: !17509)
!17515 = !DILocation(line: 1701, column: 20, scope: !17516)
!17516 = distinct !DILexicalBlock(scope: !17503, file: !2617, line: 1701, column: 7)
!17517 = !DILocation(line: 1701, column: 30, scope: !17516)
!17518 = !DILocation(line: 1701, column: 7, scope: !17503)
!17519 = !DILocation(line: 1702, column: 4, scope: !17520)
!17520 = distinct !DILexicalBlock(scope: !17516, file: !2617, line: 1701, column: 39)
!17521 = !DILocation(line: 1703, column: 3, scope: !17520)
!17522 = !DILocation(line: 1704, column: 9, scope: !17503)
!17523 = !DILocation(line: 1705, column: 23, scope: !17503)
!17524 = !DILocation(line: 1705, column: 3, scope: !17503)
!17525 = !DILocation(line: 1706, column: 3, scope: !17503)
!17526 = !DILocation(line: 1722, column: 2, scope: !17503)
!17527 = !DILocation(line: 1723, column: 1, scope: !17493)
!17528 = distinct !DISubprogram(name: "unpend_all", scope: !2617, file: !2617, line: 1674, type: !17529, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17531)
!17529 = !DISubroutineType(types: !17530)
!17530 = !{null, !2543}
!17531 = !{!17532, !17533}
!17532 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17528, file: !2617, line: 1674, type: !2543)
!17533 = !DILocalVariable(name: "thread", scope: !17528, file: !2617, line: 1676, type: !2512)
!17534 = !DILocation(line: 0, scope: !17528)
!17535 = !DILocation(line: 1678, column: 19, scope: !17528)
!17536 = !DILocation(line: 1678, column: 41, scope: !17528)
!17537 = !DILocation(line: 1678, column: 2, scope: !17528)
!17538 = !DILocation(line: 1679, column: 3, scope: !17539)
!17539 = distinct !DILexicalBlock(scope: !17528, file: !2617, line: 1678, column: 50)
!17540 = !DILocation(line: 1680, column: 9, scope: !17539)
!17541 = !DILocalVariable(name: "thread", arg: 1, scope: !17542, file: !14998, line: 65, type: !2512)
!17542 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14998, file: !14998, line: 65, type: !17543, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17545)
!17543 = !DISubroutineType(types: !17544)
!17544 = !{null, !2512, !32}
!17545 = !{!17541, !17546}
!17546 = !DILocalVariable(name: "value", arg: 2, scope: !17542, file: !14998, line: 65, type: !32)
!17547 = !DILocation(line: 0, scope: !17542, inlinedAt: !17548)
!17548 = distinct !DILocation(line: 1681, column: 3, scope: !17539)
!17549 = !DILocation(line: 67, column: 15, scope: !17542, inlinedAt: !17548)
!17550 = !DILocation(line: 67, column: 33, scope: !17542, inlinedAt: !17548)
!17551 = !DILocation(line: 1682, column: 3, scope: !17539)
!17552 = distinct !{!17552, !17537, !17553}
!17553 = !DILocation(line: 1683, column: 2, scope: !17528)
!17554 = !DILocation(line: 1684, column: 1, scope: !17528)
!17555 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2617, file: !2617, line: 1794, type: !17556, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17558)
!17556 = !DISubroutineType(types: !17557)
!17557 = !{!125, !2512, !16497}
!17558 = !{!17559, !17560, !17561, !17562}
!17559 = !DILocalVariable(name: "thread", arg: 1, scope: !17555, file: !2617, line: 1794, type: !2512)
!17560 = !DILocalVariable(name: "timeout", arg: 2, scope: !17555, file: !2617, line: 1794, type: !16497)
!17561 = !DILocalVariable(name: "key", scope: !17555, file: !2617, line: 1796, type: !15698)
!17562 = !DILocalVariable(name: "ret", scope: !17555, file: !2617, line: 1797, type: !125)
!17563 = !DILocation(line: 0, scope: !17555)
!17564 = !DILocation(line: 0, scope: !15706, inlinedAt: !17565)
!17565 = distinct !DILocation(line: 1796, column: 25, scope: !17555)
!17566 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !17567)
!17567 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !17565)
!17568 = !DILocation(line: 0, scope: !15715, inlinedAt: !17567)
!17569 = !DILocation(line: 1801, column: 20, scope: !17570)
!17570 = distinct !DILexicalBlock(scope: !17555, file: !2617, line: 1801, column: 6)
!17571 = !DILocation(line: 1801, column: 33, scope: !17570)
!17572 = !DILocation(line: 1801, column: 49, scope: !17570)
!17573 = !DILocation(line: 1801, column: 6, scope: !17555)
!17574 = !DILocation(line: 1803, column: 13, scope: !17575)
!17575 = distinct !DILexicalBlock(scope: !17570, file: !2617, line: 1803, column: 13)
!17576 = !DILocation(line: 1803, column: 13, scope: !17570)
!17577 = !DILocation(line: 1805, column: 24, scope: !17578)
!17578 = distinct !DILexicalBlock(scope: !17575, file: !2617, line: 1805, column: 13)
!17579 = !DILocation(line: 1805, column: 21, scope: !17578)
!17580 = !DILocation(line: 1805, column: 34, scope: !17578)
!17581 = !DILocation(line: 1806, column: 20, scope: !17578)
!17582 = !DILocation(line: 1806, column: 44, scope: !17578)
!17583 = !DILocation(line: 1806, column: 30, scope: !17578)
!17584 = !DILocation(line: 1805, column: 13, scope: !17575)
!17585 = !DILocation(line: 1810, column: 42, scope: !17586)
!17586 = distinct !DILexicalBlock(scope: !17578, file: !2617, line: 1808, column: 9)
!17587 = !DILocation(line: 1810, column: 3, scope: !17586)
!17588 = !DILocation(line: 1811, column: 22, scope: !17586)
!17589 = !DILocation(line: 1811, column: 3, scope: !17586)
!17590 = !DILocation(line: 0, scope: !16317, inlinedAt: !17591)
!17591 = distinct !DILocation(line: 1814, column: 9, scope: !17586)
!17592 = !DILocation(line: 196, column: 9, scope: !16317, inlinedAt: !17591)
!17593 = !DILocation(line: 1817, column: 3, scope: !17586)
!17594 = !DILocation(line: 0, scope: !17570)
!17595 = !DILocation(line: 0, scope: !15733, inlinedAt: !17596)
!17596 = distinct !DILocation(line: 1822, column: 2, scope: !17555)
!17597 = !DILocation(line: 0, scope: !15741, inlinedAt: !17598)
!17598 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !17596)
!17599 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !17598)
!17600 = !DILocation(line: 1823, column: 2, scope: !17555)
!17601 = !DILocation(line: 1824, column: 1, scope: !17555)
!17602 = distinct !DISubprogram(name: "z_sched_wake", scope: !2617, file: !2617, line: 1882, type: !17603, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17605)
!17603 = !DISubroutineType(types: !17604)
!17604 = !{!153, !2543, !125, !124}
!17605 = !{!17606, !17607, !17608, !17609, !17610, !17611, !17613}
!17606 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17602, file: !2617, line: 1882, type: !2543)
!17607 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !17602, file: !2617, line: 1882, type: !125)
!17608 = !DILocalVariable(name: "swap_data", arg: 3, scope: !17602, file: !2617, line: 1882, type: !124)
!17609 = !DILocalVariable(name: "thread", scope: !17602, file: !2617, line: 1884, type: !2512)
!17610 = !DILocalVariable(name: "ret", scope: !17602, file: !2617, line: 1885, type: !153)
!17611 = !DILocalVariable(name: "__i", scope: !17612, file: !2617, line: 1887, type: !15698)
!17612 = distinct !DILexicalBlock(scope: !17602, file: !2617, line: 1887, column: 2)
!17613 = !DILocalVariable(name: "__key", scope: !17612, file: !2617, line: 1887, type: !15698)
!17614 = !DILocation(line: 0, scope: !17602)
!17615 = !DILocation(line: 0, scope: !17612)
!17616 = !DILocation(line: 0, scope: !15706, inlinedAt: !17617)
!17617 = distinct !DILocation(line: 1887, column: 2, scope: !17612)
!17618 = !DILocation(line: 55, column: 2, scope: !15715, inlinedAt: !17619)
!17619 = distinct !DILocation(line: 145, column: 10, scope: !15706, inlinedAt: !17617)
!17620 = !DILocation(line: 0, scope: !15715, inlinedAt: !17619)
!17621 = !DILocation(line: 1888, column: 12, scope: !17622)
!17622 = distinct !DILexicalBlock(scope: !17623, file: !2617, line: 1887, column: 26)
!17623 = distinct !DILexicalBlock(scope: !17612, file: !2617, line: 1887, column: 2)
!17624 = !DILocation(line: 1890, column: 14, scope: !17625)
!17625 = distinct !DILexicalBlock(scope: !17622, file: !2617, line: 1890, column: 7)
!17626 = !DILocation(line: 1890, column: 7, scope: !17622)
!17627 = !DILocalVariable(name: "thread", arg: 1, scope: !17628, file: !17629, line: 134, type: !2512)
!17628 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !17629, file: !17629, line: 134, type: !17630, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17632)
!17629 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17630 = !DISubroutineType(types: !17631)
!17631 = !{null, !2512, !32, !124}
!17632 = !{!17627, !17633, !17634}
!17633 = !DILocalVariable(name: "value", arg: 2, scope: !17628, file: !17629, line: 135, type: !32)
!17634 = !DILocalVariable(name: "data", arg: 3, scope: !17628, file: !17629, line: 136, type: !124)
!17635 = !DILocation(line: 0, scope: !17628, inlinedAt: !17636)
!17636 = distinct !DILocation(line: 1891, column: 4, scope: !17637)
!17637 = distinct !DILexicalBlock(scope: !17625, file: !2617, line: 1890, column: 23)
!17638 = !DILocation(line: 0, scope: !17542, inlinedAt: !17639)
!17639 = distinct !DILocation(line: 138, column: 2, scope: !17628, inlinedAt: !17636)
!17640 = !DILocation(line: 67, column: 15, scope: !17542, inlinedAt: !17639)
!17641 = !DILocation(line: 67, column: 33, scope: !17542, inlinedAt: !17639)
!17642 = !DILocation(line: 139, column: 15, scope: !17628, inlinedAt: !17636)
!17643 = !DILocation(line: 139, column: 25, scope: !17628, inlinedAt: !17636)
!17644 = !DILocation(line: 1894, column: 4, scope: !17637)
!17645 = !DILocation(line: 1895, column: 10, scope: !17637)
!17646 = !DILocation(line: 1896, column: 4, scope: !17637)
!17647 = !DILocation(line: 1898, column: 3, scope: !17637)
!17648 = !DILocation(line: 0, scope: !15733, inlinedAt: !17649)
!17649 = distinct !DILocation(line: 1887, column: 2, scope: !17623)
!17650 = !DILocation(line: 0, scope: !15741, inlinedAt: !17651)
!17651 = distinct !DILocation(line: 215, column: 2, scope: !15733, inlinedAt: !17649)
!17652 = !DILocation(line: 95, column: 2, scope: !15741, inlinedAt: !17651)
!17653 = !DILocation(line: 1901, column: 2, scope: !17602)
!17654 = distinct !DISubprogram(name: "z_sched_wait", scope: !2617, file: !2617, line: 1904, type: !17655, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !17658)
!17655 = !DISubroutineType(types: !17656)
!17656 = !{!125, !15709, !15698, !2543, !16497, !17657}
!17657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!17658 = !{!17659, !17660, !17661, !17662, !17663, !17664}
!17659 = !DILocalVariable(name: "lock", arg: 1, scope: !17654, file: !2617, line: 1904, type: !15709)
!17660 = !DILocalVariable(name: "key", arg: 2, scope: !17654, file: !2617, line: 1904, type: !15698)
!17661 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17654, file: !2617, line: 1905, type: !2543)
!17662 = !DILocalVariable(name: "timeout", arg: 4, scope: !17654, file: !2617, line: 1905, type: !16497)
!17663 = !DILocalVariable(name: "data", arg: 5, scope: !17654, file: !2617, line: 1905, type: !17657)
!17664 = !DILocalVariable(name: "ret", scope: !17654, file: !2617, line: 1907, type: !125)
!17665 = !DILocation(line: 0, scope: !17654)
!17666 = !DILocation(line: 1907, column: 12, scope: !17654)
!17667 = !DILocation(line: 1909, column: 11, scope: !17668)
!17668 = distinct !DILexicalBlock(scope: !17654, file: !2617, line: 1909, column: 6)
!17669 = !DILocation(line: 1909, column: 6, scope: !17654)
!17670 = !DILocation(line: 1910, column: 11, scope: !17671)
!17671 = distinct !DILexicalBlock(scope: !17668, file: !2617, line: 1909, column: 20)
!17672 = !DILocation(line: 1910, column: 26, scope: !17671)
!17673 = !DILocation(line: 1910, column: 9, scope: !17671)
!17674 = !DILocation(line: 1911, column: 2, scope: !17671)
!17675 = !DILocation(line: 1912, column: 2, scope: !17654)
!17676 = distinct !DISubprogram(name: "z_data_copy", scope: !17677, file: !17677, line: 22, type: !3278, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3261, retainedNodes: !639)
!17677 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17678 = !DILocation(line: 24, column: 2, scope: !17676)
!17679 = !DILocation(line: 27, column: 2, scope: !17676)
!17680 = !DILocation(line: 71, column: 1, scope: !17676)
!17681 = distinct !DISubprogram(name: "z_add_timeout", scope: !2654, file: !2654, line: 88, type: !17682, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !17688)
!17682 = !DISubroutineType(types: !17683)
!17683 = !{null, !2627, !2646, !17684}
!17684 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1865, line: 67, baseType: !17685)
!17685 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1865, line: 65, size: 64, elements: !17686)
!17686 = !{!17687}
!17687 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17685, file: !1865, line: 66, baseType: !1864, size: 64)
!17688 = !{!17689, !17690, !17691, !17692, !17698, !17699, !17702, !17705}
!17689 = !DILocalVariable(name: "to", arg: 1, scope: !17681, file: !2654, line: 88, type: !2627)
!17690 = !DILocalVariable(name: "fn", arg: 2, scope: !17681, file: !2654, line: 88, type: !2646)
!17691 = !DILocalVariable(name: "timeout", arg: 3, scope: !17681, file: !2654, line: 89, type: !17684)
!17692 = !DILocalVariable(name: "__i", scope: !17693, file: !2654, line: 102, type: !17694)
!17693 = distinct !DILexicalBlock(scope: !17681, file: !2654, line: 102, column: 2)
!17694 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !638, line: 106, baseType: !17695)
!17695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !638, line: 32, size: 32, elements: !17696)
!17696 = !{!17697}
!17697 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17695, file: !638, line: 33, baseType: !125, size: 32)
!17698 = !DILocalVariable(name: "__key", scope: !17693, file: !2654, line: 102, type: !17694)
!17699 = !DILocalVariable(name: "t", scope: !17700, file: !2654, line: 103, type: !2627)
!17700 = distinct !DILexicalBlock(scope: !17701, file: !2654, line: 102, column: 24)
!17701 = distinct !DILexicalBlock(scope: !17693, file: !2654, line: 102, column: 2)
!17702 = !DILocalVariable(name: "ticks", scope: !17703, file: !2654, line: 107, type: !1864)
!17703 = distinct !DILexicalBlock(scope: !17704, file: !2654, line: 106, column: 39)
!17704 = distinct !DILexicalBlock(scope: !17700, file: !2654, line: 105, column: 7)
!17705 = !DILocalVariable(name: "next_time", scope: !17706, file: !2654, line: 137, type: !888)
!17706 = distinct !DILexicalBlock(scope: !17707, file: !2654, line: 127, column: 22)
!17707 = distinct !DILexicalBlock(scope: !17700, file: !2654, line: 127, column: 7)
!17708 = !DILocation(line: 0, scope: !17681)
!17709 = !DILocation(line: 91, column: 6, scope: !17710)
!17710 = distinct !DILexicalBlock(scope: !17681, file: !2654, line: 91, column: 6)
!17711 = !DILocation(line: 91, column: 6, scope: !17681)
!17712 = !DILocation(line: 100, column: 6, scope: !17681)
!17713 = !DILocation(line: 100, column: 9, scope: !17681)
!17714 = !DILocation(line: 0, scope: !17693)
!17715 = !DILocalVariable(name: "l", arg: 1, scope: !17716, file: !638, line: 136, type: !17719)
!17716 = distinct !DISubprogram(name: "k_spin_lock", scope: !638, file: !638, line: 136, type: !17717, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !17720)
!17717 = !DISubroutineType(types: !17718)
!17718 = !{!17694, !17719}
!17719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 32)
!17720 = !{!17715, !17721}
!17721 = !DILocalVariable(name: "k", scope: !17716, file: !638, line: 139, type: !17694)
!17722 = !DILocation(line: 0, scope: !17716, inlinedAt: !17723)
!17723 = distinct !DILocation(line: 102, column: 2, scope: !17693)
!17724 = !DILocation(line: 55, column: 2, scope: !17725, inlinedAt: !17729)
!17725 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6806, file: !6806, line: 42, type: !6807, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !17726)
!17726 = !{!17727, !17728}
!17727 = !DILocalVariable(name: "key", scope: !17725, file: !6806, line: 44, type: !32)
!17728 = !DILocalVariable(name: "tmp", scope: !17725, file: !6806, line: 53, type: !32)
!17729 = distinct !DILocation(line: 145, column: 10, scope: !17716, inlinedAt: !17723)
!17730 = !{i64 1955281}
!17731 = !DILocation(line: 0, scope: !17725, inlinedAt: !17729)
!17732 = !DILocation(line: 106, column: 33, scope: !17704)
!17733 = !DILocation(line: 105, column: 7, scope: !17700)
!17734 = !DILocation(line: 107, column: 50, scope: !17703)
!17735 = !DILocation(line: 107, column: 48, scope: !17703)
!17736 = !DILocation(line: 0, scope: !17703)
!17737 = !DILocation(line: 109, column: 17, scope: !17703)
!17738 = !DILocation(line: 110, column: 3, scope: !17703)
!17739 = !DILocation(line: 111, column: 31, scope: !17740)
!17740 = distinct !DILexicalBlock(scope: !17704, file: !2654, line: 110, column: 10)
!17741 = !DILocation(line: 111, column: 37, scope: !17740)
!17742 = !DILocation(line: 111, column: 35, scope: !17740)
!17743 = !DILocation(line: 0, scope: !17704)
!17744 = !DILocation(line: 109, column: 8, scope: !17703)
!17745 = !DILocation(line: 109, column: 15, scope: !17703)
!17746 = !DILocation(line: 114, column: 12, scope: !17747)
!17747 = distinct !DILexicalBlock(scope: !17700, file: !2654, line: 114, column: 3)
!17748 = !DILocation(line: 0, scope: !17700)
!17749 = !DILocation(line: 114, column: 3, scope: !17747)
!17750 = !DILocation(line: 115, column: 24, scope: !17751)
!17751 = distinct !DILexicalBlock(scope: !17752, file: !2654, line: 115, column: 8)
!17752 = distinct !DILexicalBlock(scope: !17753, file: !2654, line: 114, column: 45)
!17753 = distinct !DILexicalBlock(scope: !17747, file: !2654, line: 114, column: 3)
!17754 = !DILocation(line: 115, column: 11, scope: !17751)
!17755 = !DILocation(line: 115, column: 18, scope: !17751)
!17756 = !DILocation(line: 115, column: 8, scope: !17752)
!17757 = !DILocation(line: 116, column: 15, scope: !17758)
!17758 = distinct !DILexicalBlock(scope: !17751, file: !2654, line: 115, column: 32)
!17759 = !DILocation(line: 117, column: 26, scope: !17758)
!17760 = !DILocation(line: 117, column: 37, scope: !17758)
!17761 = !DILocation(line: 117, column: 5, scope: !17758)
!17762 = !DILocation(line: 123, column: 7, scope: !17700)
!17763 = !DILocation(line: 120, column: 15, scope: !17752)
!17764 = !DILocation(line: 114, column: 36, scope: !17753)
!17765 = distinct !{!17765, !17749, !17766}
!17766 = !DILocation(line: 121, column: 3, scope: !17747)
!17767 = !DILocation(line: 124, column: 41, scope: !17768)
!17768 = distinct !DILexicalBlock(scope: !17769, file: !2654, line: 123, column: 18)
!17769 = distinct !DILexicalBlock(scope: !17700, file: !2654, line: 123, column: 7)
!17770 = !DILocation(line: 124, column: 4, scope: !17768)
!17771 = !DILocation(line: 125, column: 3, scope: !17768)
!17772 = !DILocation(line: 127, column: 13, scope: !17707)
!17773 = !DILocation(line: 127, column: 10, scope: !17707)
!17774 = !DILocation(line: 127, column: 7, scope: !17700)
!17775 = !DILocation(line: 137, column: 24, scope: !17706)
!17776 = !DILocation(line: 0, scope: !17706)
!17777 = !DILocation(line: 139, column: 18, scope: !17778)
!17778 = distinct !DILexicalBlock(scope: !17706, file: !2654, line: 139, column: 8)
!17779 = !DILocation(line: 139, column: 23, scope: !17778)
!17780 = !DILocation(line: 141, column: 5, scope: !17781)
!17781 = distinct !DILexicalBlock(scope: !17778, file: !2654, line: 140, column: 48)
!17782 = !DILocation(line: 142, column: 4, scope: !17781)
!17783 = !DILocalVariable(name: "key", arg: 2, scope: !17784, file: !638, line: 190, type: !17694)
!17784 = distinct !DISubprogram(name: "k_spin_unlock", scope: !638, file: !638, line: 189, type: !17785, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !17787)
!17785 = !DISubroutineType(types: !17786)
!17786 = !{null, !17719, !17694}
!17787 = !{!17788, !17783}
!17788 = !DILocalVariable(name: "l", arg: 1, scope: !17784, file: !638, line: 189, type: !17719)
!17789 = !DILocation(line: 0, scope: !17784, inlinedAt: !17790)
!17790 = distinct !DILocation(line: 102, column: 2, scope: !17701)
!17791 = !DILocalVariable(name: "key", arg: 1, scope: !17792, file: !6806, line: 84, type: !32)
!17792 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6806, file: !6806, line: 84, type: !6817, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !17793)
!17793 = !{!17791}
!17794 = !DILocation(line: 0, scope: !17792, inlinedAt: !17795)
!17795 = distinct !DILocation(line: 215, column: 2, scope: !17784, inlinedAt: !17790)
!17796 = !DILocation(line: 95, column: 2, scope: !17792, inlinedAt: !17795)
!17797 = !{i64 1956098}
!17798 = !DILocation(line: 148, column: 1, scope: !17681)
!17799 = distinct !DISubprogram(name: "elapsed", scope: !2654, file: !2654, line: 62, type: !17800, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !639)
!17800 = !DISubroutineType(types: !17801)
!17801 = !{!888}
!17802 = !DILocation(line: 64, column: 9, scope: !17799)
!17803 = !DILocation(line: 64, column: 28, scope: !17799)
!17804 = !DILocation(line: 64, column: 35, scope: !17799)
!17805 = !DILocation(line: 64, column: 2, scope: !17799)
!17806 = distinct !DISubprogram(name: "first", scope: !2654, file: !2654, line: 39, type: !17807, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !17809)
!17807 = !DISubroutineType(types: !17808)
!17808 = !{!2627}
!17809 = !{!17810}
!17810 = !DILocalVariable(name: "t", scope: !17806, file: !2654, line: 41, type: !17811)
!17811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 32)
!17812 = !DILocation(line: 41, column: 19, scope: !17806)
!17813 = !DILocation(line: 0, scope: !17806)
!17814 = !DILocation(line: 43, column: 9, scope: !17806)
!17815 = !DILocation(line: 43, column: 2, scope: !17806)
!17816 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !541, file: !541, line: 443, type: !17817, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !17819)
!17817 = !DISubroutineType(types: !17818)
!17818 = !{null, !17811, !17811}
!17819 = !{!17820, !17821, !17822}
!17820 = !DILocalVariable(name: "successor", arg: 1, scope: !17816, file: !541, line: 443, type: !17811)
!17821 = !DILocalVariable(name: "node", arg: 2, scope: !17816, file: !541, line: 443, type: !17811)
!17822 = !DILocalVariable(name: "prev", scope: !17816, file: !541, line: 445, type: !17823)
!17823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17811)
!17824 = !DILocation(line: 0, scope: !17816)
!17825 = !DILocation(line: 445, column: 39, scope: !17816)
!17826 = !DILocation(line: 447, column: 8, scope: !17816)
!17827 = !DILocation(line: 447, column: 13, scope: !17816)
!17828 = !DILocation(line: 448, column: 8, scope: !17816)
!17829 = !DILocation(line: 448, column: 13, scope: !17816)
!17830 = !DILocation(line: 449, column: 8, scope: !17816)
!17831 = !DILocation(line: 449, column: 13, scope: !17816)
!17832 = !DILocation(line: 450, column: 18, scope: !17816)
!17833 = !DILocation(line: 451, column: 1, scope: !17816)
!17834 = distinct !DISubprogram(name: "next", scope: !2654, file: !2654, line: 46, type: !17835, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !17837)
!17835 = !DISubroutineType(types: !17836)
!17836 = !{!2627, !2627}
!17837 = !{!17838, !17839}
!17838 = !DILocalVariable(name: "t", arg: 1, scope: !17834, file: !2654, line: 46, type: !2627)
!17839 = !DILocalVariable(name: "n", scope: !17834, file: !2654, line: 48, type: !17811)
!17840 = !DILocation(line: 0, scope: !17834)
!17841 = !DILocation(line: 48, column: 58, scope: !17834)
!17842 = !DILocation(line: 48, column: 19, scope: !17834)
!17843 = !DILocation(line: 50, column: 9, scope: !17834)
!17844 = !DILocation(line: 50, column: 2, scope: !17834)
!17845 = distinct !DISubprogram(name: "sys_dlist_append", scope: !541, file: !541, line: 404, type: !17846, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !17849)
!17846 = !DISubroutineType(types: !17847)
!17847 = !{null, !17848, !17811}
!17848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 32)
!17849 = !{!17850, !17851, !17852}
!17850 = !DILocalVariable(name: "list", arg: 1, scope: !17845, file: !541, line: 404, type: !17848)
!17851 = !DILocalVariable(name: "node", arg: 2, scope: !17845, file: !541, line: 404, type: !17811)
!17852 = !DILocalVariable(name: "tail", scope: !17845, file: !541, line: 406, type: !17823)
!17853 = !DILocation(line: 0, scope: !17845)
!17854 = !DILocation(line: 406, column: 34, scope: !17845)
!17855 = !DILocation(line: 408, column: 8, scope: !17845)
!17856 = !DILocation(line: 408, column: 13, scope: !17845)
!17857 = !DILocation(line: 409, column: 8, scope: !17845)
!17858 = !DILocation(line: 409, column: 13, scope: !17845)
!17859 = !DILocation(line: 411, column: 8, scope: !17845)
!17860 = !DILocation(line: 411, column: 13, scope: !17845)
!17861 = !DILocation(line: 412, column: 13, scope: !17845)
!17862 = !DILocation(line: 413, column: 1, scope: !17845)
!17863 = distinct !DISubprogram(name: "next_timeout", scope: !2654, file: !2654, line: 67, type: !17800, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !17864)
!17864 = !{!17865, !17866, !17867}
!17865 = !DILocalVariable(name: "to", scope: !17863, file: !2654, line: 69, type: !2627)
!17866 = !DILocalVariable(name: "ticks_elapsed", scope: !17863, file: !2654, line: 70, type: !888)
!17867 = !DILocalVariable(name: "ret", scope: !17863, file: !2654, line: 71, type: !888)
!17868 = !DILocation(line: 69, column: 24, scope: !17863)
!17869 = !DILocation(line: 0, scope: !17863)
!17870 = !DILocation(line: 70, column: 26, scope: !17863)
!17871 = !DILocation(line: 73, column: 10, scope: !17872)
!17872 = distinct !DILexicalBlock(scope: !17863, file: !2654, line: 73, column: 6)
!17873 = !DILocation(line: 73, column: 19, scope: !17872)
!17874 = !DILocation(line: 74, column: 21, scope: !17872)
!17875 = !DILocation(line: 74, column: 30, scope: !17872)
!17876 = !DILocation(line: 74, column: 28, scope: !17872)
!17877 = !DILocation(line: 74, column: 45, scope: !17872)
!17878 = !DILocation(line: 73, column: 6, scope: !17863)
!17879 = !DILocation(line: 77, column: 9, scope: !17880)
!17880 = distinct !DILexicalBlock(scope: !17872, file: !2654, line: 76, column: 9)
!17881 = !DILocation(line: 0, scope: !17872)
!17882 = !DILocation(line: 81, column: 20, scope: !17883)
!17883 = distinct !DILexicalBlock(scope: !17863, file: !2654, line: 81, column: 6)
!17884 = !DILocation(line: 81, column: 6, scope: !17883)
!17885 = !DILocation(line: 81, column: 32, scope: !17883)
!17886 = !DILocation(line: 85, column: 2, scope: !17863)
!17887 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !541, file: !541, line: 341, type: !17888, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !17890)
!17888 = !DISubroutineType(types: !17889)
!17889 = !{!17811, !17848, !17811}
!17890 = !{!17891, !17892}
!17891 = !DILocalVariable(name: "list", arg: 1, scope: !17887, file: !541, line: 341, type: !17848)
!17892 = !DILocalVariable(name: "node", arg: 2, scope: !17887, file: !541, line: 342, type: !17811)
!17893 = !DILocation(line: 0, scope: !17887)
!17894 = !DILocation(line: 344, column: 15, scope: !17887)
!17895 = !DILocation(line: 344, column: 9, scope: !17887)
!17896 = !DILocation(line: 344, column: 26, scope: !17887)
!17897 = !DILocation(line: 344, column: 2, scope: !17887)
!17898 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !541, file: !541, line: 325, type: !17888, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !17899)
!17899 = !{!17900, !17901}
!17900 = !DILocalVariable(name: "list", arg: 1, scope: !17898, file: !541, line: 325, type: !17848)
!17901 = !DILocalVariable(name: "node", arg: 2, scope: !17898, file: !541, line: 326, type: !17811)
!17902 = !DILocation(line: 0, scope: !17898)
!17903 = !DILocation(line: 328, column: 24, scope: !17898)
!17904 = !DILocation(line: 328, column: 15, scope: !17898)
!17905 = !DILocation(line: 328, column: 9, scope: !17898)
!17906 = !DILocation(line: 328, column: 45, scope: !17898)
!17907 = !DILocation(line: 328, column: 2, scope: !17898)
!17908 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !541, file: !541, line: 294, type: !17909, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !17911)
!17909 = !DISubroutineType(types: !17910)
!17910 = !{!17811, !17848}
!17911 = !{!17912}
!17912 = !DILocalVariable(name: "list", arg: 1, scope: !17908, file: !541, line: 294, type: !17848)
!17913 = !DILocation(line: 0, scope: !17908)
!17914 = !DILocation(line: 296, column: 9, scope: !17908)
!17915 = !DILocation(line: 296, column: 2, scope: !17908)
!17916 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !541, file: !541, line: 266, type: !17917, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !17919)
!17917 = !DISubroutineType(types: !17918)
!17918 = !{!153, !17848}
!17919 = !{!17920}
!17920 = !DILocalVariable(name: "list", arg: 1, scope: !17916, file: !541, line: 266, type: !17848)
!17921 = !DILocation(line: 0, scope: !17916)
!17922 = !DILocation(line: 268, column: 15, scope: !17916)
!17923 = !DILocation(line: 268, column: 20, scope: !17916)
!17924 = !DILocation(line: 268, column: 2, scope: !17916)
!17925 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2654, file: !2654, line: 150, type: !17926, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !17928)
!17926 = !DISubroutineType(types: !17927)
!17927 = !{!125, !2627}
!17928 = !{!17929, !17930, !17931, !17933}
!17929 = !DILocalVariable(name: "to", arg: 1, scope: !17925, file: !2654, line: 150, type: !2627)
!17930 = !DILocalVariable(name: "ret", scope: !17925, file: !2654, line: 152, type: !125)
!17931 = !DILocalVariable(name: "__i", scope: !17932, file: !2654, line: 154, type: !17694)
!17932 = distinct !DILexicalBlock(scope: !17925, file: !2654, line: 154, column: 2)
!17933 = !DILocalVariable(name: "__key", scope: !17932, file: !2654, line: 154, type: !17694)
!17934 = !DILocation(line: 0, scope: !17925)
!17935 = !DILocation(line: 0, scope: !17932)
!17936 = !DILocation(line: 0, scope: !17716, inlinedAt: !17937)
!17937 = distinct !DILocation(line: 154, column: 2, scope: !17932)
!17938 = !DILocation(line: 55, column: 2, scope: !17725, inlinedAt: !17939)
!17939 = distinct !DILocation(line: 145, column: 10, scope: !17716, inlinedAt: !17937)
!17940 = !DILocation(line: 0, scope: !17725, inlinedAt: !17939)
!17941 = !DILocation(line: 155, column: 7, scope: !17942)
!17942 = distinct !DILexicalBlock(scope: !17943, file: !2654, line: 155, column: 7)
!17943 = distinct !DILexicalBlock(scope: !17944, file: !2654, line: 154, column: 24)
!17944 = distinct !DILexicalBlock(scope: !17932, file: !2654, line: 154, column: 2)
!17945 = !DILocation(line: 155, column: 7, scope: !17943)
!17946 = !DILocation(line: 156, column: 4, scope: !17947)
!17947 = distinct !DILexicalBlock(scope: !17942, file: !2654, line: 155, column: 39)
!17948 = !DILocation(line: 158, column: 3, scope: !17947)
!17949 = !DILocation(line: 0, scope: !17784, inlinedAt: !17950)
!17950 = distinct !DILocation(line: 154, column: 2, scope: !17944)
!17951 = !DILocation(line: 0, scope: !17792, inlinedAt: !17952)
!17952 = distinct !DILocation(line: 215, column: 2, scope: !17784, inlinedAt: !17950)
!17953 = !DILocation(line: 95, column: 2, scope: !17792, inlinedAt: !17952)
!17954 = !DILocation(line: 161, column: 2, scope: !17925)
!17955 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !541, file: !541, line: 225, type: !17956, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !17960)
!17956 = !DISubroutineType(types: !17957)
!17957 = !{!153, !17958}
!17958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17959, size: 32)
!17959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2631)
!17960 = !{!17961}
!17961 = !DILocalVariable(name: "node", arg: 1, scope: !17955, file: !541, line: 225, type: !17958)
!17962 = !DILocation(line: 0, scope: !17955)
!17963 = !DILocation(line: 227, column: 15, scope: !17955)
!17964 = !DILocation(line: 227, column: 20, scope: !17955)
!17965 = !DILocation(line: 227, column: 2, scope: !17955)
!17966 = distinct !DISubprogram(name: "remove_timeout", scope: !2654, file: !2654, line: 53, type: !2648, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !17967)
!17967 = !{!17968}
!17968 = !DILocalVariable(name: "t", arg: 1, scope: !17966, file: !2654, line: 53, type: !2627)
!17969 = !DILocation(line: 0, scope: !17966)
!17970 = !DILocation(line: 55, column: 6, scope: !17971)
!17971 = distinct !DILexicalBlock(scope: !17966, file: !2654, line: 55, column: 6)
!17972 = !DILocation(line: 55, column: 14, scope: !17971)
!17973 = !DILocation(line: 55, column: 6, scope: !17966)
!17974 = !DILocation(line: 56, column: 25, scope: !17975)
!17975 = distinct !DILexicalBlock(scope: !17971, file: !2654, line: 55, column: 23)
!17976 = !DILocation(line: 56, column: 12, scope: !17975)
!17977 = !DILocation(line: 56, column: 19, scope: !17975)
!17978 = !DILocation(line: 57, column: 2, scope: !17975)
!17979 = !DILocation(line: 59, column: 23, scope: !17966)
!17980 = !DILocation(line: 59, column: 2, scope: !17966)
!17981 = !DILocation(line: 60, column: 1, scope: !17966)
!17982 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !541, file: !541, line: 496, type: !17983, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !17985)
!17983 = !DISubroutineType(types: !17984)
!17984 = !{null, !17811}
!17985 = !{!17986, !17987, !17988}
!17986 = !DILocalVariable(name: "node", arg: 1, scope: !17982, file: !541, line: 496, type: !17811)
!17987 = !DILocalVariable(name: "prev", scope: !17982, file: !541, line: 498, type: !17823)
!17988 = !DILocalVariable(name: "next", scope: !17982, file: !541, line: 499, type: !17823)
!17989 = !DILocation(line: 0, scope: !17982)
!17990 = !DILocation(line: 498, column: 34, scope: !17982)
!17991 = !DILocation(line: 499, column: 34, scope: !17982)
!17992 = !DILocation(line: 501, column: 8, scope: !17982)
!17993 = !DILocation(line: 501, column: 13, scope: !17982)
!17994 = !DILocation(line: 502, column: 8, scope: !17982)
!17995 = !DILocation(line: 502, column: 13, scope: !17982)
!17996 = !DILocation(line: 503, column: 2, scope: !17982)
!17997 = !DILocation(line: 504, column: 1, scope: !17982)
!17998 = distinct !DISubprogram(name: "sys_dnode_init", scope: !541, file: !541, line: 211, type: !17983, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !17999)
!17999 = !{!18000}
!18000 = !DILocalVariable(name: "node", arg: 1, scope: !17998, file: !541, line: 211, type: !17811)
!18001 = !DILocation(line: 0, scope: !17998)
!18002 = !DILocation(line: 213, column: 8, scope: !17998)
!18003 = !DILocation(line: 213, column: 13, scope: !17998)
!18004 = !DILocation(line: 214, column: 8, scope: !17998)
!18005 = !DILocation(line: 214, column: 13, scope: !17998)
!18006 = !DILocation(line: 215, column: 1, scope: !17998)
!18007 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2654, file: !2654, line: 183, type: !18008, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !18012)
!18008 = !DISubroutineType(types: !18009)
!18009 = !{!1864, !18010}
!18010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18011, size: 32)
!18011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2628)
!18012 = !{!18013, !18014, !18015, !18017}
!18013 = !DILocalVariable(name: "timeout", arg: 1, scope: !18007, file: !2654, line: 183, type: !18010)
!18014 = !DILocalVariable(name: "ticks", scope: !18007, file: !2654, line: 185, type: !1864)
!18015 = !DILocalVariable(name: "__i", scope: !18016, file: !2654, line: 187, type: !17694)
!18016 = distinct !DILexicalBlock(scope: !18007, file: !2654, line: 187, column: 2)
!18017 = !DILocalVariable(name: "__key", scope: !18016, file: !2654, line: 187, type: !17694)
!18018 = !DILocation(line: 0, scope: !18007)
!18019 = !DILocation(line: 0, scope: !18016)
!18020 = !DILocation(line: 0, scope: !17716, inlinedAt: !18021)
!18021 = distinct !DILocation(line: 187, column: 2, scope: !18016)
!18022 = !DILocation(line: 55, column: 2, scope: !17725, inlinedAt: !18023)
!18023 = distinct !DILocation(line: 145, column: 10, scope: !17716, inlinedAt: !18021)
!18024 = !DILocation(line: 0, scope: !17725, inlinedAt: !18023)
!18025 = !DILocation(line: 188, column: 11, scope: !18026)
!18026 = distinct !DILexicalBlock(scope: !18027, file: !2654, line: 187, column: 24)
!18027 = distinct !DILexicalBlock(scope: !18016, file: !2654, line: 187, column: 2)
!18028 = !DILocation(line: 0, scope: !17784, inlinedAt: !18029)
!18029 = distinct !DILocation(line: 187, column: 2, scope: !18027)
!18030 = !DILocation(line: 0, scope: !17792, inlinedAt: !18031)
!18031 = distinct !DILocation(line: 215, column: 2, scope: !17784, inlinedAt: !18029)
!18032 = !DILocation(line: 95, column: 2, scope: !17792, inlinedAt: !18031)
!18033 = !DILocation(line: 191, column: 2, scope: !18007)
!18034 = distinct !DISubprogram(name: "timeout_rem", scope: !2654, file: !2654, line: 165, type: !18008, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !18035)
!18035 = !{!18036, !18037, !18038}
!18036 = !DILocalVariable(name: "timeout", arg: 1, scope: !18034, file: !2654, line: 165, type: !18010)
!18037 = !DILocalVariable(name: "ticks", scope: !18034, file: !2654, line: 167, type: !1864)
!18038 = !DILocalVariable(name: "t", scope: !18039, file: !2654, line: 173, type: !2627)
!18039 = distinct !DILexicalBlock(scope: !18034, file: !2654, line: 173, column: 2)
!18040 = !DILocation(line: 0, scope: !18034)
!18041 = !DILocation(line: 169, column: 6, scope: !18042)
!18042 = distinct !DILexicalBlock(scope: !18034, file: !2654, line: 169, column: 6)
!18043 = !DILocation(line: 169, column: 6, scope: !18034)
!18044 = !DILocation(line: 173, column: 28, scope: !18039)
!18045 = !DILocation(line: 0, scope: !18039)
!18046 = !DILocation(line: 173, column: 39, scope: !18047)
!18047 = distinct !DILexicalBlock(scope: !18039, file: !2654, line: 173, column: 2)
!18048 = !DILocation(line: 173, column: 2, scope: !18039)
!18049 = !DILocation(line: 174, column: 15, scope: !18050)
!18050 = distinct !DILexicalBlock(scope: !18047, file: !2654, line: 173, column: 61)
!18051 = !DILocation(line: 174, column: 9, scope: !18050)
!18052 = !DILocation(line: 175, column: 15, scope: !18053)
!18053 = distinct !DILexicalBlock(scope: !18050, file: !2654, line: 175, column: 7)
!18054 = !DILocation(line: 175, column: 7, scope: !18050)
!18055 = !DILocation(line: 173, column: 52, scope: !18047)
!18056 = distinct !{!18056, !18048, !18057}
!18057 = !DILocation(line: 178, column: 2, scope: !18039)
!18058 = !DILocation(line: 180, column: 17, scope: !18034)
!18059 = !DILocation(line: 180, column: 15, scope: !18034)
!18060 = !DILocation(line: 180, column: 2, scope: !18034)
!18061 = !DILocation(line: 181, column: 1, scope: !18034)
!18062 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15372, file: !15372, line: 35, type: !18063, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !18065)
!18063 = !DISubroutineType(types: !18064)
!18064 = !{!153, !18010}
!18065 = !{!18066}
!18066 = !DILocalVariable(name: "to", arg: 1, scope: !18062, file: !15372, line: 35, type: !18010)
!18067 = !DILocation(line: 0, scope: !18062)
!18068 = !DILocation(line: 37, column: 35, scope: !18062)
!18069 = !DILocation(line: 37, column: 10, scope: !18062)
!18070 = !DILocation(line: 37, column: 9, scope: !18062)
!18071 = !DILocation(line: 37, column: 2, scope: !18062)
!18072 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2654, file: !2654, line: 194, type: !18008, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !18073)
!18073 = !{!18074, !18075, !18076, !18078}
!18074 = !DILocalVariable(name: "timeout", arg: 1, scope: !18072, file: !2654, line: 194, type: !18010)
!18075 = !DILocalVariable(name: "ticks", scope: !18072, file: !2654, line: 196, type: !1864)
!18076 = !DILocalVariable(name: "__i", scope: !18077, file: !2654, line: 198, type: !17694)
!18077 = distinct !DILexicalBlock(scope: !18072, file: !2654, line: 198, column: 2)
!18078 = !DILocalVariable(name: "__key", scope: !18077, file: !2654, line: 198, type: !17694)
!18079 = !DILocation(line: 0, scope: !18072)
!18080 = !DILocation(line: 0, scope: !18077)
!18081 = !DILocation(line: 0, scope: !17716, inlinedAt: !18082)
!18082 = distinct !DILocation(line: 198, column: 2, scope: !18077)
!18083 = !DILocation(line: 55, column: 2, scope: !17725, inlinedAt: !18084)
!18084 = distinct !DILocation(line: 145, column: 10, scope: !17716, inlinedAt: !18082)
!18085 = !DILocation(line: 0, scope: !17725, inlinedAt: !18084)
!18086 = !DILocation(line: 199, column: 11, scope: !18087)
!18087 = distinct !DILexicalBlock(scope: !18088, file: !2654, line: 198, column: 24)
!18088 = distinct !DILexicalBlock(scope: !18077, file: !2654, line: 198, column: 2)
!18089 = !DILocation(line: 199, column: 23, scope: !18087)
!18090 = !DILocation(line: 0, scope: !17784, inlinedAt: !18091)
!18091 = distinct !DILocation(line: 198, column: 2, scope: !18088)
!18092 = !DILocation(line: 0, scope: !17792, inlinedAt: !18093)
!18093 = distinct !DILocation(line: 215, column: 2, scope: !17784, inlinedAt: !18091)
!18094 = !DILocation(line: 95, column: 2, scope: !17792, inlinedAt: !18093)
!18095 = !DILocation(line: 199, column: 21, scope: !18087)
!18096 = !DILocation(line: 202, column: 2, scope: !18072)
!18097 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2654, file: !2654, line: 205, type: !17800, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !18098)
!18098 = !{!18099, !18100, !18102}
!18099 = !DILocalVariable(name: "ret", scope: !18097, file: !2654, line: 207, type: !888)
!18100 = !DILocalVariable(name: "__i", scope: !18101, file: !2654, line: 209, type: !17694)
!18101 = distinct !DILexicalBlock(scope: !18097, file: !2654, line: 209, column: 2)
!18102 = !DILocalVariable(name: "__key", scope: !18101, file: !2654, line: 209, type: !17694)
!18103 = !DILocation(line: 0, scope: !18097)
!18104 = !DILocation(line: 0, scope: !18101)
!18105 = !DILocation(line: 0, scope: !17716, inlinedAt: !18106)
!18106 = distinct !DILocation(line: 209, column: 2, scope: !18101)
!18107 = !DILocation(line: 55, column: 2, scope: !17725, inlinedAt: !18108)
!18108 = distinct !DILocation(line: 145, column: 10, scope: !17716, inlinedAt: !18106)
!18109 = !DILocation(line: 0, scope: !17725, inlinedAt: !18108)
!18110 = !DILocation(line: 210, column: 9, scope: !18111)
!18111 = distinct !DILexicalBlock(scope: !18112, file: !2654, line: 209, column: 24)
!18112 = distinct !DILexicalBlock(scope: !18101, file: !2654, line: 209, column: 2)
!18113 = !DILocation(line: 0, scope: !17784, inlinedAt: !18114)
!18114 = distinct !DILocation(line: 209, column: 2, scope: !18112)
!18115 = !DILocation(line: 0, scope: !17792, inlinedAt: !18116)
!18116 = distinct !DILocation(line: 215, column: 2, scope: !17784, inlinedAt: !18114)
!18117 = !DILocation(line: 95, column: 2, scope: !17792, inlinedAt: !18116)
!18118 = !DILocation(line: 212, column: 2, scope: !18097)
!18119 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2654, file: !2654, line: 215, type: !12918, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !18120)
!18120 = !{!18121, !18122, !18123, !18125, !18126, !18129, !18130}
!18121 = !DILocalVariable(name: "ticks", arg: 1, scope: !18119, file: !2654, line: 215, type: !888)
!18122 = !DILocalVariable(name: "is_idle", arg: 2, scope: !18119, file: !2654, line: 215, type: !153)
!18123 = !DILocalVariable(name: "__i", scope: !18124, file: !2654, line: 217, type: !17694)
!18124 = distinct !DILexicalBlock(scope: !18119, file: !2654, line: 217, column: 2)
!18125 = !DILocalVariable(name: "__key", scope: !18124, file: !2654, line: 217, type: !17694)
!18126 = !DILocalVariable(name: "next_to", scope: !18127, file: !2654, line: 218, type: !125)
!18127 = distinct !DILexicalBlock(scope: !18128, file: !2654, line: 217, column: 24)
!18128 = distinct !DILexicalBlock(scope: !18124, file: !2654, line: 217, column: 2)
!18129 = !DILocalVariable(name: "sooner", scope: !18127, file: !2654, line: 219, type: !153)
!18130 = !DILocalVariable(name: "imminent", scope: !18127, file: !2654, line: 221, type: !153)
!18131 = !DILocation(line: 0, scope: !18119)
!18132 = !DILocation(line: 0, scope: !18124)
!18133 = !DILocation(line: 0, scope: !17716, inlinedAt: !18134)
!18134 = distinct !DILocation(line: 217, column: 2, scope: !18124)
!18135 = !DILocation(line: 55, column: 2, scope: !17725, inlinedAt: !18136)
!18136 = distinct !DILocation(line: 145, column: 10, scope: !17716, inlinedAt: !18134)
!18137 = !DILocation(line: 0, scope: !17725, inlinedAt: !18136)
!18138 = !DILocation(line: 218, column: 17, scope: !18127)
!18139 = !DILocation(line: 0, scope: !18127)
!18140 = !DILocation(line: 221, column: 27, scope: !18127)
!18141 = !DILocation(line: 233, column: 17, scope: !18142)
!18142 = distinct !DILexicalBlock(scope: !18127, file: !2654, line: 233, column: 7)
!18143 = !DILocation(line: 234, column: 26, scope: !18144)
!18144 = distinct !DILexicalBlock(scope: !18142, file: !2654, line: 233, column: 56)
!18145 = !DILocation(line: 234, column: 4, scope: !18144)
!18146 = !DILocation(line: 235, column: 3, scope: !18144)
!18147 = !DILocation(line: 0, scope: !17784, inlinedAt: !18148)
!18148 = distinct !DILocation(line: 217, column: 2, scope: !18128)
!18149 = !DILocation(line: 0, scope: !17792, inlinedAt: !18150)
!18150 = distinct !DILocation(line: 215, column: 2, scope: !17784, inlinedAt: !18148)
!18151 = !DILocation(line: 95, column: 2, scope: !17792, inlinedAt: !18150)
!18152 = !DILocation(line: 237, column: 1, scope: !18119)
!18153 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2654, file: !2654, line: 239, type: !18154, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !18156)
!18154 = !DISubroutineType(types: !18155)
!18155 = !{null, !888}
!18156 = !{!18157, !18158, !18159, !18161}
!18157 = !DILocalVariable(name: "ticks", arg: 1, scope: !18153, file: !2654, line: 239, type: !888)
!18158 = !DILocalVariable(name: "key", scope: !18153, file: !2654, line: 245, type: !17694)
!18159 = !DILocalVariable(name: "t", scope: !18160, file: !2654, line: 262, type: !2627)
!18160 = distinct !DILexicalBlock(scope: !18153, file: !2654, line: 261, column: 67)
!18161 = !DILocalVariable(name: "dt", scope: !18160, file: !2654, line: 263, type: !125)
!18162 = !DILocation(line: 0, scope: !18153)
!18163 = !DILocation(line: 242, column: 2, scope: !18153)
!18164 = !DILocation(line: 0, scope: !17716, inlinedAt: !18165)
!18165 = distinct !DILocation(line: 245, column: 25, scope: !18153)
!18166 = !DILocation(line: 55, column: 2, scope: !17725, inlinedAt: !18167)
!18167 = distinct !DILocation(line: 145, column: 10, scope: !17716, inlinedAt: !18165)
!18168 = !DILocation(line: 0, scope: !17725, inlinedAt: !18167)
!18169 = !DILocation(line: 261, column: 9, scope: !18153)
!18170 = !DILocation(line: 261, column: 17, scope: !18153)
!18171 = !DILocation(line: 261, column: 25, scope: !18153)
!18172 = !DILocation(line: 261, column: 37, scope: !18153)
!18173 = !DILocation(line: 261, column: 47, scope: !18153)
!18174 = !DILocation(line: 261, column: 44, scope: !18153)
!18175 = !DILocation(line: 261, column: 2, scope: !18153)
!18176 = !DILocation(line: 0, scope: !18160)
!18177 = !DILocation(line: 263, column: 12, scope: !18160)
!18178 = !DILocation(line: 265, column: 16, scope: !18160)
!18179 = !DILocation(line: 265, column: 13, scope: !18160)
!18180 = !DILocation(line: 266, column: 13, scope: !18160)
!18181 = !DILocation(line: 267, column: 3, scope: !18160)
!18182 = !DILocation(line: 0, scope: !17784, inlinedAt: !18183)
!18183 = distinct !DILocation(line: 269, column: 3, scope: !18160)
!18184 = !DILocation(line: 0, scope: !17792, inlinedAt: !18185)
!18185 = distinct !DILocation(line: 215, column: 2, scope: !17784, inlinedAt: !18183)
!18186 = !DILocation(line: 95, column: 2, scope: !17792, inlinedAt: !18185)
!18187 = !DILocation(line: 270, column: 6, scope: !18160)
!18188 = !DILocation(line: 270, column: 3, scope: !18160)
!18189 = !DILocation(line: 0, scope: !17716, inlinedAt: !18190)
!18190 = distinct !DILocation(line: 271, column: 9, scope: !18160)
!18191 = !DILocation(line: 55, column: 2, scope: !17725, inlinedAt: !18192)
!18192 = distinct !DILocation(line: 145, column: 10, scope: !17716, inlinedAt: !18190)
!18193 = !DILocation(line: 0, scope: !17725, inlinedAt: !18192)
!18194 = !DILocation(line: 272, column: 22, scope: !18160)
!18195 = distinct !{!18195, !18175, !18196}
!18196 = !DILocation(line: 273, column: 2, scope: !18153)
!18197 = !DILocation(line: 276, column: 19, scope: !18198)
!18198 = distinct !DILexicalBlock(scope: !18199, file: !2654, line: 275, column: 23)
!18199 = distinct !DILexicalBlock(scope: !18153, file: !2654, line: 275, column: 6)
!18200 = !DILocation(line: 277, column: 2, scope: !18198)
!18201 = !DILocation(line: 279, column: 15, scope: !18153)
!18202 = !DILocation(line: 279, column: 12, scope: !18153)
!18203 = !DILocation(line: 280, column: 21, scope: !18153)
!18204 = !DILocation(line: 282, column: 24, scope: !18153)
!18205 = !DILocation(line: 282, column: 2, scope: !18153)
!18206 = !DILocation(line: 0, scope: !17784, inlinedAt: !18207)
!18207 = distinct !DILocation(line: 284, column: 2, scope: !18153)
!18208 = !DILocation(line: 0, scope: !17792, inlinedAt: !18209)
!18209 = distinct !DILocation(line: 215, column: 2, scope: !17784, inlinedAt: !18207)
!18210 = !DILocation(line: 95, column: 2, scope: !17792, inlinedAt: !18209)
!18211 = !DILocation(line: 285, column: 1, scope: !18153)
!18212 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2654, file: !2654, line: 287, type: !18213, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !18215)
!18213 = !DISubroutineType(types: !18214)
!18214 = !{!598}
!18215 = !{!18216, !18217, !18219}
!18216 = !DILocalVariable(name: "t", scope: !18212, file: !2654, line: 289, type: !1771)
!18217 = !DILocalVariable(name: "__i", scope: !18218, file: !2654, line: 291, type: !17694)
!18218 = distinct !DILexicalBlock(scope: !18212, file: !2654, line: 291, column: 2)
!18219 = !DILocalVariable(name: "__key", scope: !18218, file: !2654, line: 291, type: !17694)
!18220 = !DILocation(line: 0, scope: !18212)
!18221 = !DILocation(line: 0, scope: !18218)
!18222 = !DILocation(line: 0, scope: !17716, inlinedAt: !18223)
!18223 = distinct !DILocation(line: 291, column: 2, scope: !18218)
!18224 = !DILocation(line: 55, column: 2, scope: !17725, inlinedAt: !18225)
!18225 = distinct !DILocation(line: 145, column: 10, scope: !17716, inlinedAt: !18223)
!18226 = !DILocation(line: 0, scope: !17725, inlinedAt: !18225)
!18227 = !DILocation(line: 292, column: 7, scope: !18228)
!18228 = distinct !DILexicalBlock(scope: !18229, file: !2654, line: 291, column: 24)
!18229 = distinct !DILexicalBlock(scope: !18218, file: !2654, line: 291, column: 2)
!18230 = !DILocation(line: 292, column: 19, scope: !18228)
!18231 = !DILocation(line: 0, scope: !17784, inlinedAt: !18232)
!18232 = distinct !DILocation(line: 291, column: 2, scope: !18229)
!18233 = !DILocation(line: 0, scope: !17792, inlinedAt: !18234)
!18234 = distinct !DILocation(line: 215, column: 2, scope: !17784, inlinedAt: !18232)
!18235 = !DILocation(line: 95, column: 2, scope: !17792, inlinedAt: !18234)
!18236 = !DILocation(line: 292, column: 17, scope: !18228)
!18237 = !DILocation(line: 294, column: 2, scope: !18212)
!18238 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2654, file: !2654, line: 297, type: !8354, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !639)
!18239 = !DILocation(line: 300, column: 19, scope: !18238)
!18240 = !DILocation(line: 300, column: 9, scope: !18238)
!18241 = !DILocation(line: 300, column: 2, scope: !18238)
!18242 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2654, file: !2654, line: 306, type: !18213, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !639)
!18243 = !DILocation(line: 308, column: 9, scope: !18242)
!18244 = !DILocation(line: 308, column: 2, scope: !18242)
!18245 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2654, file: !2654, line: 319, type: !8364, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !18246)
!18246 = !{!18247, !18248, !18249, !18250}
!18247 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !18245, file: !2654, line: 319, type: !208)
!18248 = !DILocalVariable(name: "start_cycles", scope: !18245, file: !2654, line: 328, type: !208)
!18249 = !DILocalVariable(name: "cycles_to_wait", scope: !18245, file: !2654, line: 331, type: !208)
!18250 = !DILocalVariable(name: "current_cycles", scope: !18251, file: !2654, line: 338, type: !208)
!18251 = distinct !DILexicalBlock(scope: !18252, file: !2654, line: 337, column: 11)
!18252 = distinct !DILexicalBlock(scope: !18253, file: !2654, line: 337, column: 2)
!18253 = distinct !DILexicalBlock(scope: !18245, file: !2654, line: 337, column: 2)
!18254 = !DILocation(line: 0, scope: !18245)
!18255 = !DILocation(line: 322, column: 19, scope: !18256)
!18256 = distinct !DILexicalBlock(scope: !18245, file: !2654, line: 322, column: 6)
!18257 = !DILocation(line: 322, column: 6, scope: !18245)
!18258 = !DILocation(line: 328, column: 26, scope: !18245)
!18259 = !DILocation(line: 333, column: 43, scope: !18245)
!18260 = !DILocation(line: 337, column: 2, scope: !18245)
!18261 = !DILocation(line: 338, column: 29, scope: !18251)
!18262 = !DILocation(line: 0, scope: !18251)
!18263 = !DILocation(line: 341, column: 23, scope: !18264)
!18264 = distinct !DILexicalBlock(scope: !18251, file: !2654, line: 341, column: 7)
!18265 = !DILocation(line: 341, column: 39, scope: !18264)
!18266 = !DILocation(line: 349, column: 1, scope: !18245)
!18267 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !624, file: !624, line: 1675, type: !8354, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !639)
!18268 = !DILocation(line: 1677, column: 9, scope: !18267)
!18269 = !DILocation(line: 1677, column: 2, scope: !18267)
!18270 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !18271, file: !18271, line: 24, type: !8354, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !639)
!18271 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18272 = !DILocation(line: 26, column: 9, scope: !18270)
!18273 = !DILocation(line: 26, column: 2, scope: !18270)
!18274 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2654, file: !2654, line: 364, type: !18275, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !18277)
!18275 = !DISubroutineType(types: !18276)
!18276 = !{!1771, !17684}
!18277 = !{!18278, !18279}
!18278 = !DILocalVariable(name: "timeout", arg: 1, scope: !18274, file: !2654, line: 364, type: !17684)
!18279 = !DILocalVariable(name: "dt", scope: !18274, file: !2654, line: 366, type: !1864)
!18280 = !DILocation(line: 0, scope: !18274)
!18281 = !DILocation(line: 368, column: 6, scope: !18274)
!18282 = !DILocation(line: 371, column: 10, scope: !18283)
!18283 = distinct !DILexicalBlock(scope: !18284, file: !2654, line: 370, column: 47)
!18284 = distinct !DILexicalBlock(scope: !18285, file: !2654, line: 370, column: 13)
!18285 = distinct !DILexicalBlock(scope: !18274, file: !2654, line: 368, column: 6)
!18286 = !DILocation(line: 371, column: 3, scope: !18283)
!18287 = !DILocation(line: 376, column: 58, scope: !18288)
!18288 = distinct !DILexicalBlock(scope: !18289, file: !2654, line: 376, column: 7)
!18289 = distinct !DILexicalBlock(scope: !18284, file: !2654, line: 372, column: 9)
!18290 = !DILocation(line: 376, column: 7, scope: !18289)
!18291 = !DILocation(line: 376, column: 43, scope: !18288)
!18292 = !DILocation(line: 377, column: 4, scope: !18293)
!18293 = distinct !DILexicalBlock(scope: !18288, file: !2654, line: 376, column: 64)
!18294 = !DILocation(line: 379, column: 10, scope: !18289)
!18295 = !DILocation(line: 379, column: 33, scope: !18289)
!18296 = !DILocation(line: 379, column: 31, scope: !18289)
!18297 = !DILocation(line: 379, column: 3, scope: !18289)
!18298 = !DILocation(line: 0, scope: !18285)
!18299 = !DILocation(line: 381, column: 1, scope: !18274)
!18300 = distinct !DISubprogram(name: "boot_banner", scope: !18301, file: !18301, line: 26, type: !3278, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3264, retainedNodes: !639)
!18301 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18302 = !DILocation(line: 34, column: 2, scope: !18300)
!18303 = !DILocation(line: 36, column: 1, scope: !18300)
