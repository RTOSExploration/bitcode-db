; ModuleID = 'build/96b_neonkey/thermometer/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %union.anon.1 }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %union.anon.1, i32*, i32, %struct.sensor_value }
%struct.sensor_value = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %union.anon.1, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct.sensor_value*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.sensor_value*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct.sensor_value }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.sensor_driver_api = type { i32 (%struct.device*, i32, i32, %struct.sensor_value*)*, i32 (%struct.device*, i32, i32, %struct.sensor_value*)*, i32 (%struct.device*, %struct.sensor_value*, void (%struct.device*, %struct.sensor_value*)*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32, %struct.sensor_value*)* }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %union.anon.1, %union.anon.1 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %union.anon.1*, %union.anon.1* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [86 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [86 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234176 to i8*), void (i8*)* inttoptr (i32 134232321 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234176 to i8*), void (i8*)* inttoptr (i32 134232301 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234176 to i8*), void (i8*)* inttoptr (i32 134232291 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234176 to i8*), void (i8*)* inttoptr (i32 134232391 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234176 to i8*), void (i8*)* inttoptr (i32 134232381 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234176 to i8*), void (i8*)* inttoptr (i32 134232371 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234176 to i8*), void (i8*)* inttoptr (i32 134232361 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234176 to i8*), void (i8*)* inttoptr (i32 134232351 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234176 to i8*), void (i8*)* inttoptr (i32 134232341 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234176 to i8*), void (i8*)* inttoptr (i32 134232331 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234176 to i8*), void (i8*)* inttoptr (i32 134232311 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [25 x i8] c"Thermometer Example! %s\0A\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"arm\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"TEMP_0\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"error: no temp device\0A\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"temp device is %p, name is %s\0A\00", align 1
@.str.5 = private unnamed_addr constant [39 x i8] c"sensor_sample_fetch failed return: %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"sensor_channel_get failed return: %d\0A\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"Temperature is %gC\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str.8 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [37 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !166
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %union.anon.1 { i32 101384192 } }], align 4, !dbg !195
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !203
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !349
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !385
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34, i32 0, i32 0), %union.anon.1 { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.35, i32 0, i32 0), %union.anon.1 { i32 285933600 } }], align 4, !dbg !395
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !400
@.str.34 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.35 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !420
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !593
@.str.36 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !554
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !537
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.36, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !510
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !526
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !556
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !570
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !572
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !574
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !576
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !578
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !580
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !582
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !584
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !586
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !588
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !598
@.str.38 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !625
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !722
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !711
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 -134, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !763
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !618
@.str.47 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct.sensor_value { i32 48, i32 1 } }, align 4, !dbg !829
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1106
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1076
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1062
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1007
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !616
@.str.1.48 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct.sensor_value { i32 48, i32 2 } }, align 4, !dbg !1108
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1080
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1078
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1024
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !614
@.str.2.49 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct.sensor_value { i32 48, i32 4 } }, align 4, !dbg !1121
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1084
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1082
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1030
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !612
@.str.3.50 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct.sensor_value { i32 48, i32 8 } }, align 4, !dbg !1123
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1088
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1086
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1036
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !610
@.str.4.51 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct.sensor_value { i32 48, i32 16 } }, align 4, !dbg !1125
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1092
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1090
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1042
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !608
@.str.5.52 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct.sensor_value { i32 48, i32 32 } }, align 4, !dbg !1127
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1096
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1094
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1048
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !606
@.str.6.53 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct.sensor_value { i32 48, i32 64 } }, align 4, !dbg !1129
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1100
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1098
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1054
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !604
@.str.7.54 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct.sensor_value { i32 48, i32 128 } }, align 4, !dbg !1131
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1104
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1102
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1060
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !620
@.str.60 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct.sensor_value* getelementptr inbounds ([1 x %struct.sensor_value], [1 x %struct.sensor_value]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1133
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1328
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1289
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1330
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.60, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1280
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1282
@pclken_0 = internal constant [1 x %struct.sensor_value] [%struct.sensor_value { i32 68, i32 16 }], align 4, !dbg !1291
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1299
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.sensor_value* getelementptr inbounds ([2 x %struct.sensor_value], [2 x %struct.sensor_value]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1322
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct.sensor_value] [%struct.sensor_value { i32 295, i32 512 }, %struct.sensor_value { i32 327, i32 0 }], align 4, !dbg !1325
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !695
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1352
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1461
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1463
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1459
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1430
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1465
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.47, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1005
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.48, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1022
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.49, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1028
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.50, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1034
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.51, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1040
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.52, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1046
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.53, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1052
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.54, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1058
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1555
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1597
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1600
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1607
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1614
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !1824
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1833
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !1840
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1845
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.109 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.113, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.114, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.115, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.116, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.117, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.111, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.118, i32 0, i32 0)], align 4, !dbg !1873
@.str.112 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.113 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.114 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.115 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.116 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.117 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.111 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.118 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !1985
@.str.8.110 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !1998
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2106
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2109
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2111
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1838
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1835
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2113
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2149
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1702
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2147
@.str.173 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2902 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !2906, !srcloc !2907
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !2908, !srcloc !2909
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !2910, !srcloc !2911
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !2912, !srcloc !2913
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2914, !srcloc !2915
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !2916, !srcloc !2917
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !2918, !srcloc !2919
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !2920, !srcloc !2921
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !2922, !srcloc !2923
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !2924, !srcloc !2925
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !2926, !srcloc !2927
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !2928, !srcloc !2929
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !2930, !srcloc !2931
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !2932, !srcloc !2933
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !2934, !srcloc !2935
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !2936, !srcloc !2937
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !2938, !srcloc !2939
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !2940, !srcloc !2941
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2942, !srcloc !2943
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !2944, !srcloc !2945
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !2946, !srcloc !2947
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2948, !srcloc !2949
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !2950, !srcloc !2951
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2952, !srcloc !2953
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !2954, !srcloc !2955
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !2956, !srcloc !2957
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !2958, !srcloc !2959
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !2960, !srcloc !2963
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !2964, !srcloc !2965
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2966, !srcloc !2967
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2968, !srcloc !2969
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2970, !srcloc !2971
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2972, !srcloc !2973
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !2974, !srcloc !2975
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !2976, !srcloc !2977
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !2978, !srcloc !2979
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !2980, !srcloc !2981
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2982, !srcloc !2983
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2984, !srcloc !2985
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2986, !srcloc !2987
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2988, !srcloc !2989
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2990, !srcloc !2991
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2992, !srcloc !2993
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !2994, !srcloc !2995
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !2996, !srcloc !2997
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !2998, !srcloc !2999
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3000, !srcloc !3001
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3002, !srcloc !3003
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3004, !srcloc !3005
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3006, !srcloc !3007
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3008, !srcloc !3009
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3010, !srcloc !3011
  ret void, !dbg !3012
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3015 {
  %1 = alloca %struct.sensor_value, align 4
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i32 0, i32 0), i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !3022
  %3 = tail call fastcc %struct.device* @device_get_binding() #25, !dbg !3023
  call void @llvm.dbg.value(metadata %struct.device* %3, metadata !3018, metadata !DIExpression()), !dbg !3024
  %4 = icmp eq %struct.device* %3, null, !dbg !3025
  br i1 %4, label %5, label %7, !dbg !3027

5:                                                ; preds = %0
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i32 0, i32 0)) #24, !dbg !3028
  br label %28, !dbg !3030

7:                                                ; preds = %0
  %8 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 0, !dbg !3031
  %9 = load i8*, i8** %8, align 4, !dbg !3031
  %10 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i32 0, i32 0), %struct.device* noundef nonnull %3, i8* noundef %9) #24, !dbg !3032
  %11 = bitcast %struct.sensor_value* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #23, !dbg !3033
  call void @llvm.dbg.declare(metadata %struct.sensor_value* %1, metadata !3021, metadata !DIExpression()), !dbg !3034
  %12 = call fastcc i32 @sensor_sample_fetch(%struct.device* noundef nonnull %3) #25, !dbg !3035
  call void @llvm.dbg.value(metadata i32 %12, metadata !3019, metadata !DIExpression()), !dbg !3036
  %13 = icmp eq i32 %12, 0, !dbg !3037
  br i1 %13, label %17, label %14, !dbg !3039

14:                                               ; preds = %23, %7
  %15 = phi i32 [ %12, %7 ], [ %26, %23 ], !dbg !3035
  %16 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i32 0, i32 0), i32 noundef %15) #24, !dbg !3040
  br label %22, !dbg !3042

17:                                               ; preds = %7, %23
  %18 = call fastcc i32 @sensor_channel_get(%struct.device* noundef nonnull %3, %struct.sensor_value* noundef nonnull %1) #25, !dbg !3043
  call void @llvm.dbg.value(metadata i32 %18, metadata !3019, metadata !DIExpression()), !dbg !3036
  %19 = icmp eq i32 %18, 0, !dbg !3044
  br i1 %19, label %23, label %20, !dbg !3046

20:                                               ; preds = %17
  %21 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i32 0, i32 0), i32 noundef %18) #24, !dbg !3047
  br label %22, !dbg !3049

22:                                               ; preds = %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #23, !dbg !3050
  br label %28

23:                                               ; preds = %17
  %24 = call fastcc double @sensor_value_to_double(%struct.sensor_value* noundef nonnull %1) #25, !dbg !3051
  %25 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i32 0, i32 0), double noundef %24) #24, !dbg !3052
  call fastcc void @k_sleep([1 x i64] [i64 10000]) #25, !dbg !3053
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #23, !dbg !3050
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #23, !dbg !3033
  call void @llvm.dbg.declare(metadata %struct.sensor_value* %1, metadata !3021, metadata !DIExpression()), !dbg !3034
  %26 = call fastcc i32 @sensor_sample_fetch(%struct.device* noundef nonnull %3) #25, !dbg !3035
  call void @llvm.dbg.value(metadata i32 %26, metadata !3019, metadata !DIExpression()), !dbg !3036
  %27 = icmp eq i32 %26, 0, !dbg !3037
  br i1 %27, label %17, label %14, !dbg !3039

28:                                               ; preds = %22, %5
  ret void, !dbg !3054
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.device* @device_get_binding() unnamed_addr #1 !dbg !3055 {
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), metadata !3060, metadata !DIExpression()), !dbg !3061
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3062, !srcloc !3064
  %1 = tail call %struct.device* @z_impl_device_get_binding(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0)) #24, !dbg !3065
  ret %struct.device* %1, !dbg !3066
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @sensor_sample_fetch(%struct.device* noundef %0) unnamed_addr #1 !dbg !3067 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3072, metadata !DIExpression()), !dbg !3073
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3074, !srcloc !3076
  %2 = tail call fastcc i32 @z_impl_sensor_sample_fetch(%struct.device* noundef %0) #25, !dbg !3077
  ret i32 %2, !dbg !3078
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @sensor_channel_get(%struct.device* noundef %0, %struct.sensor_value* noundef %1) unnamed_addr #1 !dbg !3079 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3081, metadata !DIExpression()), !dbg !3084
  call void @llvm.dbg.value(metadata i32 13, metadata !3082, metadata !DIExpression()), !dbg !3084
  call void @llvm.dbg.value(metadata %struct.sensor_value* %1, metadata !3083, metadata !DIExpression()), !dbg !3084
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3085, !srcloc !3087
  %3 = tail call fastcc i32 @z_impl_sensor_channel_get(%struct.device* noundef %0, %struct.sensor_value* noundef %1) #25, !dbg !3088
  ret i32 %3, !dbg !3089
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc double @sensor_value_to_double(%struct.sensor_value* nocapture noundef readonly %0) unnamed_addr #4 !dbg !3090 {
  call void @llvm.dbg.value(metadata %struct.sensor_value* %0, metadata !3094, metadata !DIExpression()), !dbg !3095
  %2 = getelementptr inbounds %struct.sensor_value, %struct.sensor_value* %0, i32 0, i32 0, !dbg !3096
  %3 = load i32, i32* %2, align 4, !dbg !3096
  %4 = sitofp i32 %3 to double, !dbg !3097
  %5 = getelementptr inbounds %struct.sensor_value, %struct.sensor_value* %0, i32 0, i32 1, !dbg !3098
  %6 = load i32, i32* %5, align 4, !dbg !3098
  %7 = sitofp i32 %6 to double, !dbg !3099
  %8 = fdiv double %7, 1.000000e+06, !dbg !3100
  %9 = fadd double %8, %4, !dbg !3101
  ret double %9, !dbg !3102
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3103 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3112, metadata !DIExpression()), !dbg !3113
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3114, !srcloc !3116
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #24, !dbg !3117
  ret void, !dbg !3118
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_sensor_channel_get(%struct.device* noundef %0, %struct.sensor_value* noundef %1) unnamed_addr #1 !dbg !3119 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3121, metadata !DIExpression()), !dbg !3125
  call void @llvm.dbg.value(metadata i32 13, metadata !3122, metadata !DIExpression()), !dbg !3125
  call void @llvm.dbg.value(metadata %struct.sensor_value* %1, metadata !3123, metadata !DIExpression()), !dbg !3125
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3126
  %4 = bitcast i8** %3 to %struct.sensor_driver_api**, !dbg !3126
  %5 = load %struct.sensor_driver_api*, %struct.sensor_driver_api** %4, align 4, !dbg !3126
  call void @llvm.dbg.value(metadata %struct.sensor_driver_api* %5, metadata !3124, metadata !DIExpression()), !dbg !3125
  %6 = getelementptr inbounds %struct.sensor_driver_api, %struct.sensor_driver_api* %5, i32 0, i32 4, !dbg !3127
  %7 = load i32 (%struct.device*, i32, %struct.sensor_value*)*, i32 (%struct.device*, i32, %struct.sensor_value*)** %6, align 4, !dbg !3127
  %8 = tail call i32 %7(%struct.device* noundef %0, i32 noundef 13, %struct.sensor_value* noundef %1) #24, !dbg !3128
  ret i32 %8, !dbg !3129
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_sensor_sample_fetch(%struct.device* noundef %0) unnamed_addr #1 !dbg !3130 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3132, metadata !DIExpression()), !dbg !3134
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3135
  %3 = bitcast i8** %2 to %struct.sensor_driver_api**, !dbg !3135
  %4 = load %struct.sensor_driver_api*, %struct.sensor_driver_api** %3, align 4, !dbg !3135
  call void @llvm.dbg.value(metadata %struct.sensor_driver_api* %4, metadata !3133, metadata !DIExpression()), !dbg !3134
  %5 = getelementptr inbounds %struct.sensor_driver_api, %struct.sensor_driver_api* %4, i32 0, i32 3, !dbg !3136
  %6 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %5, align 4, !dbg !3136
  %7 = tail call i32 %6(%struct.device* noundef %0, i32 noundef 57) #24, !dbg !3137
  ret i32 %7, !dbg !3138
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3141, metadata !DIExpression()), !dbg !3142
  ret i32 0, !dbg !3143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #5 !dbg !3144 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3148, metadata !DIExpression()), !dbg !3149
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3150
  ret void, !dbg !3151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #4 !dbg !3152 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3155
  ret i8* %1, !dbg !3156
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3157 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3169, metadata !DIExpression()), !dbg !3180
  call void @llvm.dbg.value(metadata i8* %0, metadata !3168, metadata !DIExpression()), !dbg !3180
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #25, !dbg !3181
  ret void, !dbg !3183
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3184 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3188, metadata !DIExpression()), !dbg !3190
  call void @llvm.dbg.value(metadata i8* %1, metadata !3189, metadata !DIExpression()), !dbg !3190
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3191
  %4 = tail call i32 %3(i32 noundef %0) #24, !dbg !3191
  ret i32 %4, !dbg !3192
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3193 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3205, metadata !DIExpression()), !dbg !3206
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3202, metadata !DIExpression()), !dbg !3206
  call void @llvm.dbg.value(metadata i8* %1, metadata !3203, metadata !DIExpression()), !dbg !3206
  call void @llvm.dbg.value(metadata i8* %2, metadata !3204, metadata !DIExpression()), !dbg !3206
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #24, !dbg !3207
  ret void, !dbg !3208
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3209 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3213, metadata !DIExpression()), !dbg !3216
  call void @llvm.dbg.value(metadata i32 %1, metadata !3214, metadata !DIExpression()), !dbg !3216
  call void @llvm.dbg.value(metadata i32 0, metadata !3215, metadata !DIExpression()), !dbg !3216
  %3 = icmp eq i32 %1, 0, !dbg !3217
  br i1 %3, label %13, label %4, !dbg !3220

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3215, metadata !DIExpression()), !dbg !3216
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3221
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3223
  %8 = load i8, i8* %7, align 1, !dbg !3223
  %9 = zext i8 %8 to i32, !dbg !3223
  %10 = tail call i32 %6(i32 noundef %9) #24, !dbg !3221
  %11 = add nuw i32 %5, 1, !dbg !3224
  call void @llvm.dbg.value(metadata i32 %11, metadata !3215, metadata !DIExpression()), !dbg !3216
  %12 = icmp eq i32 %11, %1, !dbg !3217
  br i1 %12, label %13, label %4, !dbg !3220, !llvm.loop !3225

13:                                               ; preds = %4, %2
  ret void, !dbg !3227
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3228 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3232, metadata !DIExpression()), !dbg !3234
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3235
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3235
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3233, metadata !DIExpression()), !dbg !3236
  call void @llvm.va_start(i8* nonnull %3), !dbg !3237
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3238
  %5 = load i32, i32* %4, align 4, !dbg !3238
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3238
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !3238
  call void @llvm.va_end(i8* nonnull %3), !dbg !3239
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3240
  ret void, !dbg !3240
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3241 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3245, metadata !DIExpression()), !dbg !3250
  call void @llvm.dbg.value(metadata i32 %1, metadata !3246, metadata !DIExpression()), !dbg !3250
  call void @llvm.dbg.value(metadata i8* %2, metadata !3247, metadata !DIExpression()), !dbg !3250
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3251
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3251
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3248, metadata !DIExpression()), !dbg !3252
  call void @llvm.va_start(i8* nonnull %5), !dbg !3253
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3254
  %7 = load i32, i32* %6, align 4, !dbg !3254
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3254
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #25, !dbg !3254
  call void @llvm.dbg.value(metadata i32 %9, metadata !3249, metadata !DIExpression()), !dbg !3250
  call void @llvm.va_end(i8* nonnull %5), !dbg !3255
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3256
  ret i32 %9, !dbg !3257
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3258 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3265, metadata !DIExpression()), !dbg !3272
  call void @llvm.dbg.value(metadata i8* %0, metadata !3262, metadata !DIExpression()), !dbg !3272
  call void @llvm.dbg.value(metadata i32 %1, metadata !3263, metadata !DIExpression()), !dbg !3272
  call void @llvm.dbg.value(metadata i8* %2, metadata !3264, metadata !DIExpression()), !dbg !3272
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3273
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3273
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3266, metadata !DIExpression()), !dbg !3274
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3275
  store i8* %0, i8** %7, align 4, !dbg !3275
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3275
  store i32 %1, i32* %8, align 4, !dbg !3275
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3275
  store i32 0, i32* %9, align 4, !dbg !3275
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #25, !dbg !3276
  %10 = load i32, i32* %9, align 4, !dbg !3277
  %11 = load i32, i32* %8, align 4, !dbg !3279
  %12 = icmp slt i32 %10, %11, !dbg !3280
  br i1 %12, label %13, label %15, !dbg !3281

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3282
  store i8 0, i8* %14, align 1, !dbg !3284
  br label %15, !dbg !3285

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3286
  ret i32 %10, !dbg !3287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !3288 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3293, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3294, metadata !DIExpression()), !dbg !3295
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3296
  %4 = load i8*, i8** %3, align 4, !dbg !3296
  %5 = icmp eq i8* %4, null, !dbg !3298
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3299
  br i1 %5, label %12, label %8, !dbg !3300

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3301
  %10 = load i32, i32* %9, align 4, !dbg !3301
  %11 = icmp slt i32 %7, %10, !dbg !3302
  br i1 %11, label %15, label %12, !dbg !3303

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3304
  %14 = add nsw i32 %7, 1, !dbg !3306
  store i32 %14, i32* %13, align 4, !dbg !3306
  br label %25, !dbg !3307

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3308
  %17 = icmp eq i32 %7, %16, !dbg !3310
  br i1 %17, label %18, label %21, !dbg !3311

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3312
  store i32 %19, i32* %6, align 4, !dbg !3312
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3314
  store i8 0, i8* %20, align 1, !dbg !3315
  br label %25, !dbg !3316

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3317
  %23 = add nsw i32 %7, 1, !dbg !3319
  store i32 %23, i32* %6, align 4, !dbg !3319
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3320
  store i8 %22, i8* %24, align 1, !dbg !3321
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3322
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3323 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3333, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata i8* %1, metadata !3334, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata i8* %2, metadata !3335, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata i8* %3, metadata !3336, metadata !DIExpression()), !dbg !3337
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !3338
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !3339
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #25, !dbg !3340
  unreachable, !dbg !3341
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3342 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !3446
  ret %struct.k_thread* %1, !dbg !3447
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3448 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3452, metadata !DIExpression()), !dbg !3453
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3454, !srcloc !3456
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !3457
  ret void, !dbg !3458
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3459 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3460, !srcloc !3462
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !3463
  ret %struct.k_thread* %1, !dbg !3464
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !3465 {
  %6 = alloca [25 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = alloca i8*, align 4
  %9 = alloca i8, align 1
  %10 = extractvalue [1 x i32] %3, 0
  %11 = inttoptr i32 %10 to i8*
  call void @llvm.dbg.value(metadata i8* %11, metadata !3478, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3475, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i8* %1, metadata !3476, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i8* %2, metadata !3477, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i32 %4, metadata !3479, metadata !DIExpression()), !dbg !3636
  %12 = getelementptr inbounds [25 x i8], [25 x i8]* %6, i32 0, i32 0, !dbg !3637
  call void @llvm.lifetime.start.p0i8(i64 25, i8* nonnull %12) #23, !dbg !3637
  call void @llvm.dbg.declare(metadata [25 x i8]* %6, metadata !3480, metadata !DIExpression()), !dbg !3638
  call void @llvm.dbg.value(metadata i32 0, metadata !3484, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i1 undef, metadata !3486, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3636
  %13 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %14 = bitcast %struct.anon* %7 to i8*
  %15 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %16 = bitcast i8** %8 to i8*
  %17 = getelementptr inbounds [25 x i8], [25 x i8]* %6, i32 0, i32 25
  %18 = bitcast %struct.conversion* %15 to i24*
  %19 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %21 = bitcast %struct.anon* %7 to i8**
  %22 = bitcast %struct.anon* %7 to double*
  %23 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %25 = ptrtoint i8* %17 to i32
  %26 = getelementptr inbounds [25 x i8], [25 x i8]* %6, i32 0, i32 1
  br label %27, !dbg !3639

27:                                               ; preds = %477, %5
  %28 = phi i32 [ %478, %477 ], [ 0, %5 ]
  %29 = phi i8* [ %42, %477 ], [ %2, %5 ]
  %30 = phi i8* [ %187, %477 ], [ %11, %5 ]
  br label %31, !dbg !3639

31:                                               ; preds = %27, %35
  %32 = phi i32 [ %40, %35 ], [ %28, %27 ], !dbg !3640
  %33 = phi i8* [ %37, %35 ], [ %29, %27 ]
  call void @llvm.dbg.value(metadata i8* %30, metadata !3478, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i8* %33, metadata !3477, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i32 %32, metadata !3484, metadata !DIExpression()), !dbg !3636
  %34 = load i8, i8* %33, align 1, !dbg !3641
  switch i8 %34, label %35 [
    i8 0, label %479
    i8 37, label %41
  ], !dbg !3639

35:                                               ; preds = %31
  %36 = zext i8 %34 to i32, !dbg !3641
  %37 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !3642
  call void @llvm.dbg.value(metadata i8* %37, metadata !3477, metadata !DIExpression()), !dbg !3636
  %38 = call i32 %13(i32 noundef %36, i8* noundef %1) #24, !dbg !3642
  call void @llvm.dbg.value(metadata i32 %38, metadata !3488, metadata !DIExpression()), !dbg !3643
  %39 = icmp slt i32 %38, 0, !dbg !3644
  %40 = add i32 %32, 1, !dbg !3642
  call void @llvm.dbg.value(metadata i32 undef, metadata !3484, metadata !DIExpression()), !dbg !3636
  br i1 %39, label %479, label %31, !llvm.loop !3646

41:                                               ; preds = %31
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #23, !dbg !3648
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !3493, metadata !DIExpression()), !dbg !3649
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %14, i8 0, i32 24, i1 false), !dbg !3649
  call void @llvm.dbg.value(metadata %struct.conversion* %15, metadata !3537, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !3540, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata i8* %33, metadata !3543, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata i32 -1, metadata !3544, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata i32 -1, metadata !3545, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata i8* null, metadata !3546, metadata !DIExpression()), !dbg !3650
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #23, !dbg !3651
  call void @llvm.dbg.value(metadata i8* %17, metadata !3547, metadata !DIExpression()), !dbg !3650
  store i8* %17, i8** %8, align 4, !dbg !3652
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #23, !dbg !3653
  call void @llvm.dbg.value(metadata i8 0, metadata !3548, metadata !DIExpression()), !dbg !3650
  store i8 0, i8* %9, align 1, !dbg !3654
  %42 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %15, i8* noundef nonnull %33) #25, !dbg !3655
  call void @llvm.dbg.value(metadata i8* %42, metadata !3477, metadata !DIExpression()), !dbg !3636
  %43 = load i24, i24* %18, align 8, !dbg !3656
  %44 = and i24 %43, 256, !dbg !3656
  %45 = icmp eq i24 %44, 0, !dbg !3656
  br i1 %45, label %54, label %46, !dbg !3658

46:                                               ; preds = %41
  %47 = getelementptr inbounds i8, i8* %30, i32 4, !dbg !3659
  call void @llvm.dbg.value(metadata i8* %47, metadata !3478, metadata !DIExpression()), !dbg !3636
  %48 = bitcast i8* %30 to i32*, !dbg !3659
  %49 = load i32, i32* %48, align 4, !dbg !3659
  call void @llvm.dbg.value(metadata i32 %49, metadata !3544, metadata !DIExpression()), !dbg !3650
  %50 = icmp slt i32 %49, 0, !dbg !3661
  br i1 %50, label %51, label %59, !dbg !3663

51:                                               ; preds = %46
  %52 = or i24 %43, 4, !dbg !3664
  store i24 %52, i24* %18, align 8, !dbg !3664
  %53 = sub nsw i32 0, %49, !dbg !3666
  call void @llvm.dbg.value(metadata i32 %53, metadata !3544, metadata !DIExpression()), !dbg !3650
  br label %59, !dbg !3667

54:                                               ; preds = %41
  %55 = and i24 %43, 128, !dbg !3668
  %56 = icmp eq i24 %55, 0, !dbg !3668
  %57 = load i32, i32* %19, align 4
  %58 = select i1 %56, i32 -1, i32 %57, !dbg !3670
  br label %59, !dbg !3670

59:                                               ; preds = %54, %46, %51
  %60 = phi i24 [ %52, %51 ], [ %43, %46 ], [ %43, %54 ], !dbg !3671
  %61 = phi i32 [ %53, %51 ], [ %49, %46 ], [ %58, %54 ], !dbg !3650
  %62 = phi i8* [ %47, %51 ], [ %47, %46 ], [ %30, %54 ]
  call void @llvm.dbg.value(metadata i8* %62, metadata !3478, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i32 %61, metadata !3544, metadata !DIExpression()), !dbg !3650
  %63 = and i24 %60, 1024, !dbg !3671
  %64 = icmp eq i24 %63, 0, !dbg !3671
  br i1 %64, label %72, label %65, !dbg !3672

65:                                               ; preds = %59
  %66 = getelementptr inbounds i8, i8* %62, i32 4, !dbg !3673
  call void @llvm.dbg.value(metadata i8* %66, metadata !3478, metadata !DIExpression()), !dbg !3636
  %67 = bitcast i8* %62 to i32*, !dbg !3673
  %68 = load i32, i32* %67, align 4, !dbg !3673
  call void @llvm.dbg.value(metadata i32 %68, metadata !3549, metadata !DIExpression()), !dbg !3674
  %69 = icmp slt i32 %68, 0, !dbg !3675
  br i1 %69, label %70, label %77, !dbg !3677

70:                                               ; preds = %65
  %71 = and i24 %60, -513, !dbg !3678
  store i24 %71, i24* %18, align 8, !dbg !3678
  br label %77, !dbg !3680

72:                                               ; preds = %59
  %73 = and i24 %60, 512, !dbg !3681
  %74 = icmp eq i24 %73, 0, !dbg !3681
  %75 = load i32, i32* %20, align 8
  %76 = select i1 %74, i32 -1, i32 %75, !dbg !3683
  br label %77, !dbg !3683

77:                                               ; preds = %72, %70, %65
  %78 = phi i24 [ %71, %70 ], [ %60, %65 ], [ %60, %72 ], !dbg !3684
  %79 = phi i32 [ -1, %70 ], [ %68, %65 ], [ %76, %72 ], !dbg !3650
  %80 = phi i8* [ %66, %70 ], [ %66, %65 ], [ %62, %72 ], !dbg !3650
  call void @llvm.dbg.value(metadata i8* %80, metadata !3478, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i32 %79, metadata !3545, metadata !DIExpression()), !dbg !3650
  store i32 0, i32* %19, align 4, !dbg !3686
  store i32 0, i32* %20, align 8, !dbg !3687
  %81 = and i24 %78, 459264, !dbg !3688
  %82 = icmp eq i24 %81, 262144, !dbg !3688
  %83 = and i24 %78, 32768, !dbg !3688
  %84 = icmp eq i24 %83, 0, !dbg !3688
  %85 = select i1 %84, i32 6, i32 13, !dbg !3688
  %86 = select i1 %82, i32 %85, i32 %79, !dbg !3688
  call void @llvm.dbg.value(metadata i32 %86, metadata !3545, metadata !DIExpression()), !dbg !3650
  %87 = lshr i24 %78, 16, !dbg !3689
  call void @llvm.dbg.value(metadata i24 %87, metadata !3552, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3650
  %88 = lshr i24 %78, 11, !dbg !3690
  %89 = and i24 %88, 15, !dbg !3690
  %90 = zext i24 %89 to i32, !dbg !3690
  call void @llvm.dbg.value(metadata i32 %90, metadata !3553, metadata !DIExpression()), !dbg !3650
  %91 = trunc i24 %87 to i3, !dbg !3691
  switch i3 %91, label %186 [
    i3 1, label %92
    i3 2, label %134
    i3 -4, label %174
    i3 3, label %182
  ], !dbg !3691

92:                                               ; preds = %77
  switch i32 %90, label %93 [
    i32 7, label %119
    i32 6, label %119
    i32 5, label %111
    i32 3, label %98
    i32 4, label %103
  ], !dbg !3692

93:                                               ; preds = %92
  %94 = getelementptr inbounds i8, i8* %80, i32 4, !dbg !3695
  call void @llvm.dbg.value(metadata i8* %94, metadata !3478, metadata !DIExpression()), !dbg !3636
  %95 = bitcast i8* %80 to i32*, !dbg !3695
  %96 = load i32, i32* %95, align 4, !dbg !3695
  %97 = sext i32 %96 to i64, !dbg !3695
  store i64 %97, i64* %23, align 8, !dbg !3697
  br label %124, !dbg !3698

98:                                               ; preds = %92
  %99 = getelementptr inbounds i8, i8* %80, i32 4, !dbg !3699
  call void @llvm.dbg.value(metadata i8* %99, metadata !3478, metadata !DIExpression()), !dbg !3636
  %100 = bitcast i8* %80 to i32*, !dbg !3699
  %101 = load i32, i32* %100, align 4, !dbg !3699
  %102 = sext i32 %101 to i64, !dbg !3699
  store i64 %102, i64* %23, align 8, !dbg !3702
  br label %124, !dbg !3703

103:                                              ; preds = %92
  %104 = ptrtoint i8* %80 to i32, !dbg !3704
  %105 = add i32 %104, 7, !dbg !3704
  %106 = and i32 %105, -8, !dbg !3704
  %107 = inttoptr i32 %106 to i8*, !dbg !3704
  %108 = getelementptr inbounds i8, i8* %107, i32 8, !dbg !3704
  call void @llvm.dbg.value(metadata i8* %108, metadata !3478, metadata !DIExpression()), !dbg !3636
  %109 = inttoptr i32 %106 to i64*, !dbg !3704
  %110 = load i64, i64* %109, align 8, !dbg !3704
  store i64 %110, i64* %23, align 8, !dbg !3705
  br label %124, !dbg !3706

111:                                              ; preds = %92
  %112 = ptrtoint i8* %80 to i32, !dbg !3707
  %113 = add i32 %112, 7, !dbg !3707
  %114 = and i32 %113, -8, !dbg !3707
  %115 = inttoptr i32 %114 to i8*, !dbg !3707
  %116 = getelementptr inbounds i8, i8* %115, i32 8, !dbg !3707
  call void @llvm.dbg.value(metadata i8* %116, metadata !3478, metadata !DIExpression()), !dbg !3636
  %117 = inttoptr i32 %114 to i64*, !dbg !3707
  %118 = load i64, i64* %117, align 8, !dbg !3707
  store i64 %118, i64* %23, align 8, !dbg !3708
  br label %124, !dbg !3709

119:                                              ; preds = %92, %92
  %120 = getelementptr inbounds i8, i8* %80, i32 4, !dbg !3710
  call void @llvm.dbg.value(metadata i8* %120, metadata !3478, metadata !DIExpression()), !dbg !3636
  %121 = bitcast i8* %80 to i32*, !dbg !3710
  %122 = load i32, i32* %121, align 4, !dbg !3710
  %123 = sext i32 %122 to i64, !dbg !3711
  store i64 %123, i64* %23, align 8, !dbg !3712
  br label %124, !dbg !3713

124:                                              ; preds = %119, %111, %103, %98, %93
  %125 = phi i64 [ %97, %93 ], [ %110, %103 ], [ %102, %98 ], [ %118, %111 ], [ %123, %119 ]
  %126 = phi i8* [ %94, %93 ], [ %108, %103 ], [ %99, %98 ], [ %116, %111 ], [ %120, %119 ], !dbg !3714
  call void @llvm.dbg.value(metadata i8* %126, metadata !3478, metadata !DIExpression()), !dbg !3636
  %127 = trunc i24 %88 to i4, !dbg !3715
  switch i4 %127, label %186 [
    i4 1, label %128
    i4 2, label %131
  ], !dbg !3715

128:                                              ; preds = %124
  %129 = shl i64 %125, 56, !dbg !3716
  %130 = ashr exact i64 %129, 56, !dbg !3716
  store i64 %130, i64* %23, align 8, !dbg !3719
  br label %186, !dbg !3720

131:                                              ; preds = %124
  %132 = shl i64 %125, 48, !dbg !3721
  %133 = ashr exact i64 %132, 48, !dbg !3721
  store i64 %133, i64* %23, align 8, !dbg !3724
  br label %186, !dbg !3725

134:                                              ; preds = %77
  switch i32 %90, label %135 [
    i32 7, label %161
    i32 6, label %161
    i32 5, label %153
    i32 3, label %140
    i32 4, label %145
  ], !dbg !3726

135:                                              ; preds = %134
  %136 = getelementptr inbounds i8, i8* %80, i32 4, !dbg !3729
  call void @llvm.dbg.value(metadata i8* %136, metadata !3478, metadata !DIExpression()), !dbg !3636
  %137 = bitcast i8* %80 to i32*, !dbg !3729
  %138 = load i32, i32* %137, align 4, !dbg !3729
  %139 = zext i32 %138 to i64, !dbg !3729
  store i64 %139, i64* %23, align 8, !dbg !3731
  br label %166, !dbg !3732

140:                                              ; preds = %134
  %141 = getelementptr inbounds i8, i8* %80, i32 4, !dbg !3733
  call void @llvm.dbg.value(metadata i8* %141, metadata !3478, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i8* %141, metadata !3478, metadata !DIExpression()), !dbg !3636
  %142 = bitcast i8* %80 to i32*, !dbg !3733
  %143 = load i32, i32* %142, align 4, !dbg !3733
  %144 = zext i32 %143 to i64, !dbg !3733
  store i64 %144, i64* %23, align 8, !dbg !3733
  br label %166

145:                                              ; preds = %134
  %146 = ptrtoint i8* %80 to i32, !dbg !3735
  %147 = add i32 %146, 7, !dbg !3735
  %148 = and i32 %147, -8, !dbg !3735
  %149 = inttoptr i32 %148 to i8*, !dbg !3735
  %150 = getelementptr inbounds i8, i8* %149, i32 8, !dbg !3735
  call void @llvm.dbg.value(metadata i8* %150, metadata !3478, metadata !DIExpression()), !dbg !3636
  %151 = inttoptr i32 %148 to i64*, !dbg !3735
  %152 = load i64, i64* %151, align 8, !dbg !3735
  store i64 %152, i64* %23, align 8, !dbg !3736
  br label %166, !dbg !3737

153:                                              ; preds = %134
  %154 = ptrtoint i8* %80 to i32, !dbg !3738
  %155 = add i32 %154, 7, !dbg !3738
  %156 = and i32 %155, -8, !dbg !3738
  %157 = inttoptr i32 %156 to i8*, !dbg !3738
  %158 = getelementptr inbounds i8, i8* %157, i32 8, !dbg !3738
  call void @llvm.dbg.value(metadata i8* %158, metadata !3478, metadata !DIExpression()), !dbg !3636
  %159 = inttoptr i32 %156 to i64*, !dbg !3738
  %160 = load i64, i64* %159, align 8, !dbg !3738
  store i64 %160, i64* %23, align 8, !dbg !3739
  br label %166, !dbg !3740

161:                                              ; preds = %134, %134
  %162 = getelementptr inbounds i8, i8* %80, i32 4, !dbg !3741
  call void @llvm.dbg.value(metadata i8* %162, metadata !3478, metadata !DIExpression()), !dbg !3636
  %163 = bitcast i8* %80 to i32*, !dbg !3741
  %164 = load i32, i32* %163, align 4, !dbg !3741
  %165 = zext i32 %164 to i64, !dbg !3742
  store i64 %165, i64* %23, align 8, !dbg !3743
  br label %166, !dbg !3744

166:                                              ; preds = %140, %161, %153, %145, %135
  %167 = phi i64 [ %139, %135 ], [ %152, %145 ], [ %160, %153 ], [ %165, %161 ], [ %144, %140 ]
  %168 = phi i8* [ %136, %135 ], [ %150, %145 ], [ %158, %153 ], [ %162, %161 ], [ %141, %140 ], !dbg !3745
  call void @llvm.dbg.value(metadata i8* %168, metadata !3478, metadata !DIExpression()), !dbg !3636
  %169 = trunc i24 %88 to i4, !dbg !3746
  switch i4 %169, label %186 [
    i4 1, label %170
    i4 2, label %172
  ], !dbg !3746

170:                                              ; preds = %166
  %171 = and i64 %167, 255, !dbg !3747
  store i64 %171, i64* %23, align 8, !dbg !3750
  br label %186, !dbg !3751

172:                                              ; preds = %166
  %173 = and i64 %167, 65535, !dbg !3752
  store i64 %173, i64* %23, align 8, !dbg !3755
  br label %186, !dbg !3756

174:                                              ; preds = %77
  %175 = ptrtoint i8* %80 to i32, !dbg !3757
  %176 = add i32 %175, 7, !dbg !3757
  %177 = and i32 %176, -8, !dbg !3757
  %178 = inttoptr i32 %177 to i8*, !dbg !3757
  %179 = getelementptr inbounds i8, i8* %178, i32 8, !dbg !3757
  call void @llvm.dbg.value(metadata i8* %179, metadata !3478, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i8* %179, metadata !3478, metadata !DIExpression()), !dbg !3636
  %180 = inttoptr i32 %177 to double*, !dbg !3757
  %181 = load double, double* %180, align 8, !dbg !3757
  store double %181, double* %22, align 8, !dbg !3757
  br label %186

182:                                              ; preds = %77
  %183 = getelementptr inbounds i8, i8* %80, i32 4, !dbg !3761
  call void @llvm.dbg.value(metadata i8* %183, metadata !3478, metadata !DIExpression()), !dbg !3636
  %184 = bitcast i8* %80 to i8**, !dbg !3761
  %185 = load i8*, i8** %184, align 4, !dbg !3761
  store i8* %185, i8** %21, align 8, !dbg !3764
  br label %186, !dbg !3765

186:                                              ; preds = %174, %77, %166, %124, %172, %170, %182, %128, %131
  %187 = phi i8* [ %126, %128 ], [ %126, %131 ], [ %168, %170 ], [ %168, %172 ], [ %183, %182 ], [ %126, %124 ], [ %168, %166 ], [ %80, %77 ], [ %179, %174 ], !dbg !3650
  call void @llvm.dbg.value(metadata i8* %187, metadata !3478, metadata !DIExpression()), !dbg !3636
  %188 = and i24 %78, 3, !dbg !3766
  %189 = icmp eq i24 %188, 0, !dbg !3766
  br i1 %189, label %194, label %190, !dbg !3766

190:                                              ; preds = %186
  %191 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %33, i8* noundef nonnull %42) #25, !dbg !3767
  call void @llvm.dbg.value(metadata i32 %191, metadata !3554, metadata !DIExpression()), !dbg !3768
  %192 = icmp slt i32 %191, 0, !dbg !3769
  %193 = add i32 %191, %32, !dbg !3767
  call void @llvm.dbg.value(metadata i32 undef, metadata !3484, metadata !DIExpression()), !dbg !3636
  br i1 %192, label %475, label %477

194:                                              ; preds = %186
  %195 = load i8, i8* %24, align 1, !dbg !3771
  switch i8 %195, label %477 [
    i8 37, label %196
    i8 115, label %200
    i8 99, label %207
    i8 100, label %210
    i8 105, label %210
    i8 111, label %224
    i8 117, label %224
    i8 120, label %224
    i8 88, label %224
    i8 112, label %240
    i8 110, label %250
    i8 97, label %252
    i8 65, label %252
    i8 101, label %252
    i8 69, label %252
    i8 102, label %252
    i8 70, label %252
    i8 103, label %252
    i8 71, label %252
  ], !dbg !3772

196:                                              ; preds = %194
  %197 = call i32 %13(i32 noundef 37, i8* noundef %1) #24, !dbg !3773
  call void @llvm.dbg.value(metadata i32 %197, metadata !3558, metadata !DIExpression()), !dbg !3774
  %198 = icmp slt i32 %197, 0, !dbg !3775
  %199 = add i32 %32, 1, !dbg !3773
  call void @llvm.dbg.value(metadata i32 undef, metadata !3484, metadata !DIExpression()), !dbg !3636
  br i1 %198, label %475, label %477

200:                                              ; preds = %194
  %201 = load i8*, i8** %21, align 8, !dbg !3777
  call void @llvm.dbg.value(metadata i8* %201, metadata !3546, metadata !DIExpression()), !dbg !3650
  %202 = icmp sgt i32 %86, -1, !dbg !3778
  br i1 %202, label %203, label %205, !dbg !3780

203:                                              ; preds = %200
  %204 = call i32 @strnlen(i8* noundef %201, i32 noundef %86) #24, !dbg !3781
  call void @llvm.dbg.value(metadata i32 %204, metadata !3561, metadata !DIExpression()), !dbg !3783
  br label %257, !dbg !3784

205:                                              ; preds = %200
  %206 = call i32 @strlen(i8* noundef %201) #24, !dbg !3785
  call void @llvm.dbg.value(metadata i32 %206, metadata !3561, metadata !DIExpression()), !dbg !3783
  br label %257

207:                                              ; preds = %194
  call void @llvm.dbg.value(metadata i8* %12, metadata !3546, metadata !DIExpression()), !dbg !3650
  %208 = load i64, i64* %23, align 8, !dbg !3787
  %209 = trunc i64 %208 to i8, !dbg !3788
  store i8 %209, i8* %12, align 1, !dbg !3789
  call void @llvm.dbg.value(metadata i8* %26, metadata !3547, metadata !DIExpression()), !dbg !3650
  store i8* %26, i8** %8, align 4, !dbg !3790
  br label %261, !dbg !3791

210:                                              ; preds = %194, %194
  %211 = and i24 %78, 8, !dbg !3792
  %212 = icmp eq i24 %211, 0, !dbg !3792
  br i1 %212, label %214, label %213, !dbg !3794

213:                                              ; preds = %210
  call void @llvm.dbg.value(metadata i8 43, metadata !3548, metadata !DIExpression()), !dbg !3650
  store i8 43, i8* %9, align 1, !dbg !3795
  br label %218, !dbg !3797

214:                                              ; preds = %210
  %215 = and i24 %78, 16, !dbg !3798
  %216 = icmp eq i24 %215, 0, !dbg !3798
  br i1 %216, label %218, label %217, !dbg !3800

217:                                              ; preds = %214
  call void @llvm.dbg.value(metadata i8 32, metadata !3548, metadata !DIExpression()), !dbg !3650
  store i8 32, i8* %9, align 1, !dbg !3801
  br label %218, !dbg !3803

218:                                              ; preds = %214, %217, %213
  %219 = phi i8 [ 0, %214 ], [ 32, %217 ], [ 43, %213 ]
  %220 = load i64, i64* %23, align 8, !dbg !3804
  call void @llvm.dbg.value(metadata i64 %220, metadata !3485, metadata !DIExpression()), !dbg !3636
  %221 = icmp slt i64 %220, 0, !dbg !3805
  br i1 %221, label %222, label %224, !dbg !3807

222:                                              ; preds = %218
  call void @llvm.dbg.value(metadata i8 45, metadata !3548, metadata !DIExpression()), !dbg !3650
  store i8 45, i8* %9, align 1, !dbg !3808
  %223 = sub nsw i64 0, %220, !dbg !3810
  store i64 %223, i64* %23, align 8, !dbg !3811
  br label %224, !dbg !3812

224:                                              ; preds = %218, %222, %194, %194, %194, %194
  %225 = phi i8 [ %219, %218 ], [ 45, %222 ], [ 0, %194 ], [ 0, %194 ], [ 0, %194 ], [ 0, %194 ]
  %226 = load i64, i64* %23, align 8, !dbg !3813
  call void @llvm.dbg.value(metadata i8* %17, metadata !3547, metadata !DIExpression()), !dbg !3650
  %227 = call fastcc i8* @encode_uint(i64 noundef %226, %struct.conversion* noundef nonnull %15, i8* noundef nonnull %12, i8* noundef nonnull %17) #25, !dbg !3814
  call void @llvm.dbg.value(metadata i8* %227, metadata !3546, metadata !DIExpression()), !dbg !3650
  br label %228, !dbg !3815

228:                                              ; preds = %243, %224
  %229 = phi i8 [ 0, %243 ], [ %225, %224 ]
  %230 = phi i8* [ %246, %243 ], [ %227, %224 ], !dbg !3816
  call void @llvm.dbg.value(metadata i8* %230, metadata !3546, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.label(metadata !3635), !dbg !3817
  %231 = icmp sgt i32 %86, -1, !dbg !3818
  br i1 %231, label %232, label %261, !dbg !3819

232:                                              ; preds = %228
  call void @llvm.dbg.value(metadata i8* %17, metadata !3547, metadata !DIExpression()), !dbg !3650
  %233 = ptrtoint i8* %230 to i32, !dbg !3820
  %234 = sub i32 %25, %233, !dbg !3820
  call void @llvm.dbg.value(metadata i32 %234, metadata !3563, metadata !DIExpression()), !dbg !3821
  %235 = load i24, i24* %18, align 8, !dbg !3822
  %236 = and i24 %235, -65, !dbg !3822
  store i24 %236, i24* %18, align 8, !dbg !3822
  %237 = icmp ugt i32 %86, %234, !dbg !3823
  br i1 %237, label %238, label %261, !dbg !3825

238:                                              ; preds = %232
  %239 = sub nsw i32 %86, %234, !dbg !3826
  store i32 %239, i32* %19, align 4, !dbg !3828
  br label %261, !dbg !3829

240:                                              ; preds = %194
  %241 = load i8*, i8** %21, align 8, !dbg !3830
  %242 = icmp eq i8* %241, null, !dbg !3832
  br i1 %242, label %249, label %243, !dbg !3833

243:                                              ; preds = %240
  %244 = ptrtoint i8* %241 to i32, !dbg !3834
  %245 = zext i32 %244 to i64, !dbg !3834
  call void @llvm.dbg.value(metadata i8* %17, metadata !3547, metadata !DIExpression()), !dbg !3650
  %246 = call fastcc i8* @encode_uint(i64 noundef %245, %struct.conversion* noundef nonnull %15, i8* noundef nonnull %12, i8* noundef nonnull %17) #25, !dbg !3836
  call void @llvm.dbg.value(metadata i8* %246, metadata !3546, metadata !DIExpression()), !dbg !3650
  %247 = load i24, i24* %18, align 8, !dbg !3837
  %248 = or i24 %247, 1048576, !dbg !3837
  store i24 %248, i24* %18, align 8, !dbg !3837
  store i8 120, i8* %24, align 1, !dbg !3838
  br label %228, !dbg !3839

249:                                              ; preds = %240
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), metadata !3546, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 5), metadata !3547, metadata !DIExpression()), !dbg !3650
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 5), i8** %8, align 4, !dbg !3840
  br label %261, !dbg !3841

250:                                              ; preds = %194
  %251 = load i8*, i8** %21, align 8, !dbg !3842
  call fastcc void @store_count(%struct.conversion* noundef nonnull %15, i8* noundef %251, i32 noundef %32) #25, !dbg !3845
  br label %477, !dbg !3846

252:                                              ; preds = %194, %194, %194, %194, %194, %194, %194, %194
  %253 = load double, double* %22, align 8, !dbg !3847
  call void @llvm.dbg.value(metadata i8** %8, metadata !3547, metadata !DIExpression(DW_OP_deref)), !dbg !3650
  call void @llvm.dbg.value(metadata i8* %9, metadata !3548, metadata !DIExpression(DW_OP_deref)), !dbg !3650
  %254 = call fastcc i8* @encode_float(double noundef %253, %struct.conversion* noundef nonnull %15, i32 noundef %86, i8* noundef nonnull %9, i8* noundef nonnull %12, i8** noundef nonnull %8) #25, !dbg !3850
  call void @llvm.dbg.value(metadata i8* %12, metadata !3546, metadata !DIExpression()), !dbg !3650
  %255 = load i8*, i8** %8, align 4, !dbg !3851
  %256 = load i8, i8* %9, align 1, !dbg !3852
  br label %261, !dbg !3854

257:                                              ; preds = %203, %205
  %258 = phi i32 [ %204, %203 ], [ %206, %205 ], !dbg !3855
  call void @llvm.dbg.value(metadata i32 %258, metadata !3561, metadata !DIExpression()), !dbg !3783
  %259 = getelementptr inbounds i8, i8* %201, i32 %258, !dbg !3856
  call void @llvm.dbg.value(metadata i8* %259, metadata !3547, metadata !DIExpression()), !dbg !3650
  store i8* %259, i8** %8, align 4, !dbg !3857
  call void @llvm.dbg.value(metadata i32 -1, metadata !3545, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata i32 %32, metadata !3484, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i8* %201, metadata !3546, metadata !DIExpression()), !dbg !3650
  %260 = icmp eq i8* %201, null, !dbg !3858
  br i1 %260, label %477, label %261, !dbg !3860, !llvm.loop !3646

261:                                              ; preds = %232, %238, %207, %249, %228, %252, %257
  %262 = phi i8 [ 0, %257 ], [ %229, %232 ], [ %229, %238 ], [ 0, %207 ], [ 0, %249 ], [ %229, %228 ], [ %256, %252 ], !dbg !3852
  %263 = phi i8* [ %259, %257 ], [ %17, %232 ], [ %17, %238 ], [ %26, %207 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 5), %249 ], [ %17, %228 ], [ %255, %252 ], !dbg !3851
  %264 = phi i8* [ %201, %257 ], [ %230, %232 ], [ %230, %238 ], [ %12, %207 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), %249 ], [ %230, %228 ], [ %12, %252 ]
  call void @llvm.dbg.value(metadata i8* %263, metadata !3547, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata !DIArgList(i8* %263, i8* %264), metadata !3566, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3650
  call void @llvm.dbg.value(metadata i32 0, metadata !3567, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata i8 %262, metadata !3548, metadata !DIExpression()), !dbg !3650
  %265 = icmp eq i8 %262, 0, !dbg !3861
  call void @llvm.dbg.value(metadata !DIArgList(i8* %263, i1 %265, i8* %264), metadata !3566, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3650
  %266 = load i24, i24* %18, align 8, !dbg !3862
  call void @llvm.dbg.value(metadata i32 undef, metadata !3566, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !3566, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3650
  call void @llvm.dbg.value(metadata i32 undef, metadata !3566, metadata !DIExpression()), !dbg !3650
  %267 = icmp sgt i32 %61, 0, !dbg !3864
  br i1 %267, label %268, label %318, !dbg !3865

268:                                              ; preds = %261
  %269 = and i24 %266, 1048576, !dbg !3862
  %270 = icmp eq i24 %269, 0, !dbg !3862
  %271 = ptrtoint i8* %263 to i32, !dbg !3866
  call void @llvm.dbg.value(metadata !DIArgList(i32 %271, i1 %265, i8* %264), metadata !3566, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3650
  %272 = ptrtoint i8* %264 to i32, !dbg !3866
  call void @llvm.dbg.value(metadata !DIArgList(i8* %263, i1 %265, i32 %272), metadata !3566, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3650
  call void @llvm.dbg.value(metadata !DIArgList(i32 %271, i1 %265, i32 %272), metadata !3566, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3650
  %273 = xor i1 %265, true, !dbg !3867
  call void @llvm.dbg.value(metadata !DIArgList(i8* %263, i1 %273, i8* %264), metadata !3566, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3650
  %274 = sext i1 %273 to i32, !dbg !3867
  call void @llvm.dbg.value(metadata !DIArgList(i8* %263, i1 %273, i8* %264), metadata !3566, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3650
  call void @llvm.dbg.value(metadata !DIArgList(i32 %271, i1 %273, i32 %272), metadata !3566, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3650
  %275 = lshr i24 %266, 19, !dbg !3868
  %276 = and i24 %275, 1, !dbg !3868
  %277 = select i1 %270, i24 %276, i24 2, !dbg !3868
  %278 = zext i24 %277 to i32, !dbg !3868
  %279 = add i32 %272, %274, !dbg !3868
  %280 = add i32 %271, %278, !dbg !3868
  call void @llvm.dbg.value(metadata !DIArgList(i32 %271, i32 undef, i32 %278, i1 %273, i32 %272), metadata !3566, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3650
  %281 = and i24 %266, 4194304, !dbg !3869
  %282 = icmp eq i24 %281, 0, !dbg !3869
  %283 = load i32, i32* %19, align 4, !dbg !3871
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %283), metadata !3566, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3650
  call void @llvm.dbg.value(metadata i32 undef, metadata !3566, metadata !DIExpression()), !dbg !3650
  %284 = load i32, i32* %20, align 8, !dbg !3872
  %285 = select i1 %282, i32 0, i32 %284, !dbg !3872
  call void @llvm.dbg.value(metadata i32 undef, metadata !3566, metadata !DIExpression()), !dbg !3650
  %286 = add i32 %279, %61, !dbg !3872
  %287 = add i32 %280, %283, !dbg !3872
  %288 = add i32 %287, %285, !dbg !3873
  %289 = sub i32 %286, %288, !dbg !3873
  call void @llvm.dbg.value(metadata i32 %289, metadata !3544, metadata !DIExpression()), !dbg !3650
  %290 = and i24 %266, 4, !dbg !3874
  %291 = icmp eq i24 %290, 0, !dbg !3874
  br i1 %291, label %292, label %318, !dbg !3875

292:                                              ; preds = %268
  call void @llvm.dbg.value(metadata i8 32, metadata !3568, metadata !DIExpression()), !dbg !3876
  %293 = and i24 %266, 64, !dbg !3877
  %294 = icmp eq i24 %293, 0, !dbg !3877
  %295 = select i1 %294, i1 true, i1 %265, !dbg !3878
  %296 = select i1 %294, i32 32, i32 48, !dbg !3878
  br i1 %295, label %303, label %297, !dbg !3878

297:                                              ; preds = %292
  %298 = zext i8 %262 to i32, !dbg !3879
  %299 = call i32 %13(i32 noundef %298, i8* noundef %1) #24, !dbg !3880
  call void @llvm.dbg.value(metadata i32 %299, metadata !3573, metadata !DIExpression()), !dbg !3881
  %300 = icmp slt i32 %299, 0, !dbg !3882
  call void @llvm.dbg.value(metadata i32 undef, metadata !3484, metadata !DIExpression()), !dbg !3636
  br i1 %300, label %475, label %301

301:                                              ; preds = %297
  %302 = add i32 %32, 1, !dbg !3880
  call void @llvm.dbg.value(metadata i8 0, metadata !3548, metadata !DIExpression()), !dbg !3650
  store i8 0, i8* %9, align 1, !dbg !3884
  br label %303, !dbg !3885

303:                                              ; preds = %292, %301
  %304 = phi i8 [ %262, %292 ], [ 0, %301 ]
  %305 = phi i32 [ %296, %292 ], [ 48, %301 ]
  %306 = phi i32 [ %32, %292 ], [ %302, %301 ], !dbg !3640
  call void @llvm.dbg.value(metadata i32 %306, metadata !3484, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i8 undef, metadata !3568, metadata !DIExpression()), !dbg !3876
  %307 = call i32 @llvm.smin.i32(i32 %289, i32 0), !dbg !3886
  %308 = add i32 %307, -1, !dbg !3886
  br label %309, !dbg !3886

309:                                              ; preds = %313, %303
  %310 = phi i32 [ %289, %303 ], [ %314, %313 ], !dbg !3887
  %311 = phi i32 [ %306, %303 ], [ %317, %313 ], !dbg !3640
  call void @llvm.dbg.value(metadata i32 %311, metadata !3484, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i32 %310, metadata !3544, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata i32 %310, metadata !3544, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3650
  %312 = icmp sgt i32 %310, 0, !dbg !3888
  br i1 %312, label %313, label %318, !dbg !3886

313:                                              ; preds = %309
  %314 = add nsw i32 %310, -1, !dbg !3889
  call void @llvm.dbg.value(metadata i32 %314, metadata !3544, metadata !DIExpression()), !dbg !3650
  %315 = call i32 %13(i32 noundef %305, i8* noundef %1) #24, !dbg !3890
  call void @llvm.dbg.value(metadata i32 %315, metadata !3579, metadata !DIExpression()), !dbg !3891
  %316 = icmp slt i32 %315, 0, !dbg !3892
  %317 = add i32 %311, 1, !dbg !3890
  call void @llvm.dbg.value(metadata i32 undef, metadata !3484, metadata !DIExpression()), !dbg !3636
  br i1 %316, label %475, label %309, !llvm.loop !3894

318:                                              ; preds = %309, %268, %261
  %319 = phi i8 [ %262, %268 ], [ %262, %261 ], [ %304, %309 ], !dbg !3896
  %320 = phi i32 [ %289, %268 ], [ %61, %261 ], [ %308, %309 ], !dbg !3650
  %321 = phi i32 [ %32, %268 ], [ %32, %261 ], [ %311, %309 ], !dbg !3640
  call void @llvm.dbg.value(metadata i32 %321, metadata !3484, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i32 %320, metadata !3544, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata i8 %319, metadata !3548, metadata !DIExpression()), !dbg !3650
  %322 = icmp eq i8 %319, 0, !dbg !3897
  br i1 %322, label %328, label %323, !dbg !3898

323:                                              ; preds = %318
  %324 = zext i8 %319 to i32, !dbg !3896
  %325 = call i32 %13(i32 noundef %324, i8* noundef %1) #24, !dbg !3899
  call void @llvm.dbg.value(metadata i32 %325, metadata !3582, metadata !DIExpression()), !dbg !3900
  %326 = icmp slt i32 %325, 0, !dbg !3901
  %327 = add i32 %321, 1, !dbg !3899
  call void @llvm.dbg.value(metadata i32 undef, metadata !3484, metadata !DIExpression()), !dbg !3636
  br i1 %326, label %475, label %328

328:                                              ; preds = %323, %318
  %329 = phi i32 [ %327, %323 ], [ %321, %318 ], !dbg !3640
  call void @llvm.dbg.value(metadata i32 %329, metadata !3484, metadata !DIExpression()), !dbg !3636
  %330 = and i24 %266, 4194304, !dbg !3903
  %331 = icmp eq i24 %330, 0, !dbg !3903
  br i1 %331, label %427, label %332, !dbg !3904

332:                                              ; preds = %328
  call void @llvm.dbg.value(metadata i8* %201, metadata !3586, metadata !DIExpression()), !dbg !3905
  %333 = and i24 %266, 32768, !dbg !3906
  %334 = icmp eq i24 %333, 0, !dbg !3906
  br i1 %334, label %346, label %335, !dbg !3907

335:                                              ; preds = %332, %340
  %336 = phi i8* [ %342, %340 ], [ %264, %332 ], !dbg !3905
  %337 = phi i32 [ %345, %340 ], [ %329, %332 ], !dbg !3640
  call void @llvm.dbg.value(metadata i32 %337, metadata !3484, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i8* %336, metadata !3586, metadata !DIExpression()), !dbg !3905
  %338 = load i8, i8* %336, align 1, !dbg !3908
  %339 = icmp eq i8 %338, 112, !dbg !3909
  br i1 %339, label %409, label %340, !dbg !3910

340:                                              ; preds = %335
  %341 = zext i8 %338 to i32, !dbg !3908
  %342 = getelementptr inbounds i8, i8* %336, i32 1, !dbg !3911
  call void @llvm.dbg.value(metadata i8* %342, metadata !3586, metadata !DIExpression()), !dbg !3905
  %343 = call i32 %13(i32 noundef %341, i8* noundef %1) #24, !dbg !3911
  call void @llvm.dbg.value(metadata i32 %343, metadata !3589, metadata !DIExpression()), !dbg !3912
  %344 = icmp slt i32 %343, 0, !dbg !3913
  %345 = add i32 %337, 1, !dbg !3911
  call void @llvm.dbg.value(metadata i32 undef, metadata !3484, metadata !DIExpression()), !dbg !3636
  br i1 %344, label %475, label %335, !llvm.loop !3915

346:                                              ; preds = %332, %353
  %347 = phi i8* [ %354, %353 ], [ %264, %332 ], !dbg !3905
  %348 = phi i32 [ %357, %353 ], [ %329, %332 ], !dbg !3640
  call void @llvm.dbg.value(metadata i32 %348, metadata !3484, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i8* %347, metadata !3586, metadata !DIExpression()), !dbg !3905
  %349 = load i8, i8* %347, align 1, !dbg !3917
  %350 = zext i8 %349 to i32, !dbg !3918
  %351 = call fastcc i32 @isdigit(i32 noundef %350) #25, !dbg !3919
  %352 = icmp eq i32 %351, 0, !dbg !3920
  br i1 %352, label %358, label %353, !dbg !3920

353:                                              ; preds = %346
  %354 = getelementptr inbounds i8, i8* %347, i32 1, !dbg !3921
  call void @llvm.dbg.value(metadata i8* %354, metadata !3586, metadata !DIExpression()), !dbg !3905
  %355 = call i32 %13(i32 noundef %350, i8* noundef %1) #24, !dbg !3921
  call void @llvm.dbg.value(metadata i32 %355, metadata !3594, metadata !DIExpression()), !dbg !3922
  %356 = icmp slt i32 %355, 0, !dbg !3923
  %357 = add i32 %348, 1, !dbg !3921
  call void @llvm.dbg.value(metadata i32 undef, metadata !3484, metadata !DIExpression()), !dbg !3636
  br i1 %356, label %475, label %346, !llvm.loop !3925

358:                                              ; preds = %346
  %359 = load i32, i32* %19, align 4, !dbg !3927
  call void @llvm.dbg.value(metadata i32 %359, metadata !3567, metadata !DIExpression()), !dbg !3650
  %360 = and i24 %266, 2097152, !dbg !3928
  %361 = icmp eq i24 %360, 0, !dbg !3928
  br i1 %361, label %362, label %376, !dbg !3929

362:                                              ; preds = %358
  %363 = call i32 @llvm.smin.i32(i32 %359, i32 0), !dbg !3930
  %364 = add i32 %363, -1, !dbg !3930
  br label %365, !dbg !3930

365:                                              ; preds = %362, %369
  %366 = phi i32 [ %370, %369 ], [ %359, %362 ], !dbg !3931
  %367 = phi i32 [ %373, %369 ], [ %348, %362 ], !dbg !3640
  call void @llvm.dbg.value(metadata i32 %367, metadata !3484, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i32 %366, metadata !3567, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3650
  %368 = icmp sgt i32 %366, 0, !dbg !3932
  br i1 %368, label %369, label %374, !dbg !3930

369:                                              ; preds = %365
  %370 = add nsw i32 %366, -1, !dbg !3933
  call void @llvm.dbg.value(metadata i32 %370, metadata !3567, metadata !DIExpression()), !dbg !3650
  %371 = call i32 %13(i32 noundef 48, i8* noundef %1) #24, !dbg !3934
  call void @llvm.dbg.value(metadata i32 %371, metadata !3598, metadata !DIExpression()), !dbg !3935
  %372 = icmp slt i32 %371, 0, !dbg !3936
  %373 = add i32 %367, 1, !dbg !3934
  call void @llvm.dbg.value(metadata i32 undef, metadata !3484, metadata !DIExpression()), !dbg !3636
  br i1 %372, label %475, label %365, !llvm.loop !3938

374:                                              ; preds = %365
  %375 = load i8, i8* %347, align 1, !dbg !3940
  br label %376, !dbg !3940

376:                                              ; preds = %374, %358
  %377 = phi i8 [ %349, %358 ], [ %375, %374 ], !dbg !3940
  %378 = phi i32 [ %359, %358 ], [ %364, %374 ], !dbg !3931
  %379 = phi i32 [ %348, %358 ], [ %367, %374 ], !dbg !3640
  call void @llvm.dbg.value(metadata i32 %379, metadata !3484, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i32 %378, metadata !3567, metadata !DIExpression()), !dbg !3650
  %380 = icmp eq i8 %377, 46, !dbg !3941
  br i1 %380, label %384, label %381, !dbg !3942

381:                                              ; preds = %388, %376
  %382 = phi i8* [ %347, %376 ], [ %385, %388 ]
  %383 = phi i32 [ %379, %376 ], [ %391, %388 ]
  br label %397, !dbg !3943

384:                                              ; preds = %376
  %385 = getelementptr inbounds i8, i8* %347, i32 1, !dbg !3944
  call void @llvm.dbg.value(metadata i8* %385, metadata !3586, metadata !DIExpression()), !dbg !3905
  %386 = call i32 %13(i32 noundef 46, i8* noundef %1) #24, !dbg !3944
  call void @llvm.dbg.value(metadata i32 %386, metadata !3603, metadata !DIExpression()), !dbg !3945
  %387 = icmp slt i32 %386, 0, !dbg !3946
  call void @llvm.dbg.value(metadata i32 undef, metadata !3484, metadata !DIExpression()), !dbg !3636
  br i1 %387, label %475, label %388

388:                                              ; preds = %384, %393
  %389 = phi i32 [ %394, %393 ], [ %378, %384 ], !dbg !3931
  %390 = phi i32 [ %391, %393 ], [ %379, %384 ]
  %391 = add i32 %390, 1, !dbg !3640
  call void @llvm.dbg.value(metadata i32 %391, metadata !3484, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i32 %389, metadata !3567, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3650
  %392 = icmp sgt i32 %389, 0, !dbg !3948
  br i1 %392, label %393, label %381, !dbg !3949

393:                                              ; preds = %388
  %394 = add nsw i32 %389, -1, !dbg !3950
  call void @llvm.dbg.value(metadata i32 %394, metadata !3567, metadata !DIExpression()), !dbg !3650
  %395 = call i32 %13(i32 noundef 48, i8* noundef %1) #24, !dbg !3951
  call void @llvm.dbg.value(metadata i32 %395, metadata !3607, metadata !DIExpression()), !dbg !3952
  %396 = icmp slt i32 %395, 0, !dbg !3953
  call void @llvm.dbg.value(metadata i32 undef, metadata !3484, metadata !DIExpression()), !dbg !3636
  br i1 %396, label %475, label %388, !llvm.loop !3955

397:                                              ; preds = %381, %404
  %398 = phi i8* [ %405, %404 ], [ %382, %381 ], !dbg !3931
  %399 = phi i32 [ %408, %404 ], [ %383, %381 ], !dbg !3640
  call void @llvm.dbg.value(metadata i32 %399, metadata !3484, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i8* %398, metadata !3586, metadata !DIExpression()), !dbg !3905
  %400 = load i8, i8* %398, align 1, !dbg !3957
  %401 = zext i8 %400 to i32, !dbg !3958
  %402 = call fastcc i32 @isdigit(i32 noundef %401) #25, !dbg !3959
  %403 = icmp eq i32 %402, 0, !dbg !3943
  br i1 %403, label %409, label %404, !dbg !3943

404:                                              ; preds = %397
  %405 = getelementptr inbounds i8, i8* %398, i32 1, !dbg !3960
  call void @llvm.dbg.value(metadata i8* %405, metadata !3586, metadata !DIExpression()), !dbg !3905
  %406 = call i32 %13(i32 noundef %401, i8* noundef %1) #24, !dbg !3960
  call void @llvm.dbg.value(metadata i32 %406, metadata !3610, metadata !DIExpression()), !dbg !3961
  %407 = icmp slt i32 %406, 0, !dbg !3962
  %408 = add i32 %399, 1, !dbg !3960
  call void @llvm.dbg.value(metadata i32 undef, metadata !3484, metadata !DIExpression()), !dbg !3636
  br i1 %407, label %475, label %397, !llvm.loop !3964

409:                                              ; preds = %335, %397
  %410 = phi i8* [ %398, %397 ], [ %336, %335 ], !dbg !3905
  %411 = phi i32 [ %399, %397 ], [ %337, %335 ], !dbg !3640
  call void @llvm.dbg.value(metadata i32 %411, metadata !3484, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i8* %410, metadata !3586, metadata !DIExpression()), !dbg !3905
  %412 = load i32, i32* %20, align 8, !dbg !3966
  call void @llvm.dbg.value(metadata i32 %412, metadata !3567, metadata !DIExpression()), !dbg !3650
  br label %413, !dbg !3967

413:                                              ; preds = %417, %409
  %414 = phi i32 [ %412, %409 ], [ %418, %417 ], !dbg !3905
  %415 = phi i32 [ %411, %409 ], [ %421, %417 ], !dbg !3640
  call void @llvm.dbg.value(metadata i32 %415, metadata !3484, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i32 %414, metadata !3567, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3650
  %416 = icmp sgt i32 %414, 0, !dbg !3968
  br i1 %416, label %417, label %422, !dbg !3967

417:                                              ; preds = %413
  %418 = add nsw i32 %414, -1, !dbg !3969
  call void @llvm.dbg.value(metadata i32 %418, metadata !3567, metadata !DIExpression()), !dbg !3650
  %419 = call i32 %13(i32 noundef 48, i8* noundef %1) #24, !dbg !3970
  call void @llvm.dbg.value(metadata i32 %419, metadata !3613, metadata !DIExpression()), !dbg !3971
  %420 = icmp slt i32 %419, 0, !dbg !3972
  %421 = add i32 %415, 1, !dbg !3970
  call void @llvm.dbg.value(metadata i32 undef, metadata !3484, metadata !DIExpression()), !dbg !3636
  br i1 %420, label %475, label %413, !llvm.loop !3974

422:                                              ; preds = %413
  call void @llvm.dbg.value(metadata i8* %263, metadata !3547, metadata !DIExpression()), !dbg !3650
  %423 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %410, i8* noundef %263) #25, !dbg !3976
  call void @llvm.dbg.value(metadata i32 %423, metadata !3616, metadata !DIExpression()), !dbg !3977
  %424 = icmp slt i32 %423, 0, !dbg !3978
  %425 = select i1 %424, i32 0, i32 %423, !dbg !3976
  %426 = add i32 %425, %415, !dbg !3976
  call void @llvm.dbg.value(metadata i32 %426, metadata !3484, metadata !DIExpression()), !dbg !3636
  br i1 %424, label %475, label %463

427:                                              ; preds = %328
  %428 = lshr i24 %266, 20, !dbg !3980
  %429 = lshr i24 %266, 19, !dbg !3981
  %430 = or i24 %428, %429, !dbg !3982
  %431 = and i24 %430, 1, !dbg !3982
  %432 = icmp eq i24 %431, 0, !dbg !3982
  br i1 %432, label %437, label %433, !dbg !3983

433:                                              ; preds = %427
  %434 = call i32 %13(i32 noundef 48, i8* noundef %1) #24, !dbg !3984
  call void @llvm.dbg.value(metadata i32 %434, metadata !3618, metadata !DIExpression()), !dbg !3985
  %435 = icmp slt i32 %434, 0, !dbg !3986
  %436 = add i32 %329, 1, !dbg !3984
  call void @llvm.dbg.value(metadata i32 undef, metadata !3484, metadata !DIExpression()), !dbg !3636
  br i1 %435, label %475, label %437

437:                                              ; preds = %433, %427
  %438 = phi i32 [ %436, %433 ], [ %329, %427 ], !dbg !3640
  call void @llvm.dbg.value(metadata i32 %438, metadata !3484, metadata !DIExpression()), !dbg !3636
  %439 = and i24 %266, 1048576, !dbg !3988
  %440 = icmp eq i24 %439, 0, !dbg !3988
  br i1 %440, label %447, label %441, !dbg !3989

441:                                              ; preds = %437
  %442 = load i8, i8* %24, align 1, !dbg !3990
  %443 = zext i8 %442 to i32, !dbg !3990
  %444 = call i32 %13(i32 noundef %443, i8* noundef %1) #24, !dbg !3990
  call void @llvm.dbg.value(metadata i32 %444, metadata !3623, metadata !DIExpression()), !dbg !3991
  %445 = icmp slt i32 %444, 0, !dbg !3992
  %446 = add i32 %438, 1, !dbg !3990
  call void @llvm.dbg.value(metadata i32 undef, metadata !3484, metadata !DIExpression()), !dbg !3636
  br i1 %445, label %475, label %447

447:                                              ; preds = %441, %437
  %448 = phi i32 [ %446, %441 ], [ %438, %437 ], !dbg !3640
  call void @llvm.dbg.value(metadata i32 %448, metadata !3484, metadata !DIExpression()), !dbg !3636
  %449 = load i32, i32* %19, align 4, !dbg !3994
  call void @llvm.dbg.value(metadata i32 %449, metadata !3567, metadata !DIExpression()), !dbg !3650
  br label %450, !dbg !3995

450:                                              ; preds = %454, %447
  %451 = phi i32 [ %449, %447 ], [ %455, %454 ], !dbg !3996
  %452 = phi i32 [ %448, %447 ], [ %458, %454 ], !dbg !3640
  call void @llvm.dbg.value(metadata i32 %452, metadata !3484, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i32 %451, metadata !3567, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3650
  %453 = icmp sgt i32 %451, 0, !dbg !3997
  br i1 %453, label %454, label %459, !dbg !3995

454:                                              ; preds = %450
  %455 = add nsw i32 %451, -1, !dbg !3998
  call void @llvm.dbg.value(metadata i32 %455, metadata !3567, metadata !DIExpression()), !dbg !3650
  %456 = call i32 %13(i32 noundef 48, i8* noundef %1) #24, !dbg !3999
  call void @llvm.dbg.value(metadata i32 %456, metadata !3627, metadata !DIExpression()), !dbg !4000
  %457 = icmp slt i32 %456, 0, !dbg !4001
  %458 = add i32 %452, 1, !dbg !3999
  call void @llvm.dbg.value(metadata i32 undef, metadata !3484, metadata !DIExpression()), !dbg !3636
  br i1 %457, label %475, label %450, !llvm.loop !4003

459:                                              ; preds = %450
  call void @llvm.dbg.value(metadata i8* %263, metadata !3547, metadata !DIExpression()), !dbg !3650
  %460 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %264, i8* noundef %263) #25, !dbg !4005
  call void @llvm.dbg.value(metadata i32 %460, metadata !3630, metadata !DIExpression()), !dbg !4006
  %461 = icmp slt i32 %460, 0, !dbg !4007
  %462 = add i32 %460, %452, !dbg !4005
  call void @llvm.dbg.value(metadata i32 undef, metadata !3484, metadata !DIExpression()), !dbg !3636
  br i1 %461, label %475, label %463

463:                                              ; preds = %459, %422
  %464 = phi i32 [ %426, %422 ], [ %462, %459 ], !dbg !3640
  call void @llvm.dbg.value(metadata i32 %464, metadata !3484, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i32 %320, metadata !3544, metadata !DIExpression()), !dbg !3650
  %465 = icmp sgt i32 %320, 0, !dbg !4009
  br i1 %465, label %466, label %477, !dbg !4010

466:                                              ; preds = %463
  %467 = add i32 %320, %464, !dbg !4010
  br label %468, !dbg !4010

468:                                              ; preds = %466, %472
  %469 = phi i32 [ %473, %472 ], [ %320, %466 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3484, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i32 %469, metadata !3544, metadata !DIExpression()), !dbg !3650
  %470 = call i32 %13(i32 noundef 32, i8* noundef %1) #24, !dbg !4011
  call void @llvm.dbg.value(metadata i32 %470, metadata !3632, metadata !DIExpression()), !dbg !4012
  %471 = icmp slt i32 %470, 0, !dbg !4013
  br i1 %471, label %475, label %472

472:                                              ; preds = %468
  %473 = add nsw i32 %469, -1, !dbg !4015
  call void @llvm.dbg.value(metadata i32 undef, metadata !3484, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3636
  call void @llvm.dbg.value(metadata i32 %473, metadata !3544, metadata !DIExpression()), !dbg !3650
  %474 = icmp sgt i32 %469, 1, !dbg !4009
  br i1 %474, label %468, label %477, !dbg !4010, !llvm.loop !4016

475:                                              ; preds = %422, %459, %441, %433, %323, %196, %297, %384, %190, %313, %340, %353, %369, %393, %404, %417, %454, %468
  %476 = phi i32 [ %470, %468 ], [ %456, %454 ], [ %419, %417 ], [ %406, %404 ], [ %395, %393 ], [ %371, %369 ], [ %355, %353 ], [ %343, %340 ], [ %315, %313 ], [ %197, %196 ], [ %325, %323 ], [ %434, %433 ], [ %444, %441 ], [ %460, %459 ], [ %423, %422 ], [ %299, %297 ], [ %386, %384 ], [ %191, %190 ]
  call void @llvm.dbg.value(metadata i32 %478, metadata !3484, metadata !DIExpression()), !dbg !3636
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #23, !dbg !3647
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #23, !dbg !3647
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #23, !dbg !3647
  br label %479

477:                                              ; preds = %472, %463, %196, %250, %194, %190, %257
  %478 = phi i32 [ %32, %257 ], [ %193, %190 ], [ %199, %196 ], [ %32, %250 ], [ %32, %194 ], [ %464, %463 ], [ %467, %472 ], !dbg !3640
  call void @llvm.dbg.value(metadata i32 %478, metadata !3484, metadata !DIExpression()), !dbg !3636
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #23, !dbg !3647
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #23, !dbg !3647
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #23, !dbg !3647
  br label %27

479:                                              ; preds = %31, %35, %475
  %480 = phi i32 [ %476, %475 ], [ %32, %31 ], [ %38, %35 ], !dbg !3636
  call void @llvm.lifetime.end.p0i8(i64 25, i8* nonnull %12) #23, !dbg !4018
  ret i32 %480, !dbg !4018
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #10

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !4019 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4023, metadata !DIExpression()), !dbg !4025
  call void @llvm.dbg.value(metadata i8* %1, metadata !4024, metadata !DIExpression()), !dbg !4025
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4026
  store i24 0, i24* %3, align 4, !dbg !4026
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4026
  store i8 0, i8* %4, align 1, !dbg !4026
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4026
  store i32 0, i32* %5, align 4, !dbg !4026
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4026
  store i32 0, i32* %6, align 4, !dbg !4026
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4027
  call void @llvm.dbg.value(metadata i8* %7, metadata !4024, metadata !DIExpression()), !dbg !4025
  %8 = load i8, i8* %7, align 1, !dbg !4028
  %9 = icmp eq i8 %8, 37, !dbg !4030
  br i1 %9, label %10, label %12, !dbg !4031

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4032
  call void @llvm.dbg.value(metadata i8* %11, metadata !4024, metadata !DIExpression()), !dbg !4025
  store i8 37, i8* %4, align 1, !dbg !4034
  br label %18, !dbg !4035

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #25, !dbg !4036
  call void @llvm.dbg.value(metadata i8* %13, metadata !4024, metadata !DIExpression()), !dbg !4025
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #25, !dbg !4037
  call void @llvm.dbg.value(metadata i8* %14, metadata !4024, metadata !DIExpression()), !dbg !4025
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #25, !dbg !4038
  call void @llvm.dbg.value(metadata i8* %15, metadata !4024, metadata !DIExpression()), !dbg !4025
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #25, !dbg !4039
  call void @llvm.dbg.value(metadata i8* %16, metadata !4024, metadata !DIExpression()), !dbg !4025
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #25, !dbg !4040
  call void @llvm.dbg.value(metadata i8* %17, metadata !4024, metadata !DIExpression()), !dbg !4025
  br label %18, !dbg !4041

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4025
  ret i8* %19, !dbg !4042
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4043 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4047, metadata !DIExpression()), !dbg !4054
  call void @llvm.dbg.value(metadata i8* %1, metadata !4048, metadata !DIExpression()), !dbg !4054
  call void @llvm.dbg.value(metadata i8* %2, metadata !4049, metadata !DIExpression()), !dbg !4054
  call void @llvm.dbg.value(metadata i8* %3, metadata !4050, metadata !DIExpression()), !dbg !4054
  call void @llvm.dbg.value(metadata i32 0, metadata !4051, metadata !DIExpression()), !dbg !4054
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4055

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4056
  call void @llvm.dbg.value(metadata i32 %9, metadata !4051, metadata !DIExpression()), !dbg !4054
  call void @llvm.dbg.value(metadata i8* %8, metadata !4049, metadata !DIExpression()), !dbg !4054
  %10 = icmp ult i8* %8, %3, !dbg !4057
  br i1 %10, label %11, label %13, !dbg !4058

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4059
  br label %17, !dbg !4058

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4060

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4061
  %16 = icmp eq i8 %15, 0, !dbg !4060
  br i1 %16, label %24, label %17, !dbg !4055

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4059
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4062
  call void @llvm.dbg.value(metadata i8* %19, metadata !4049, metadata !DIExpression()), !dbg !4054
  %20 = zext i8 %18 to i32, !dbg !4063
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #24, !dbg !4064
  call void @llvm.dbg.value(metadata i32 %21, metadata !4052, metadata !DIExpression()), !dbg !4065
  %22 = icmp slt i32 %21, 0, !dbg !4066
  %23 = add i32 %9, 1, !dbg !4068
  call void @llvm.dbg.value(metadata i32 undef, metadata !4051, metadata !DIExpression()), !dbg !4054
  br i1 %22, label %24, label %7, !llvm.loop !4069

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4054
  ret i32 %25, !dbg !4071
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #11 !dbg !4072 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4076, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4077, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %2, metadata !4078, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %3, metadata !4079, metadata !DIExpression()), !dbg !4086
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4087
  %6 = load i8, i8* %5, align 1, !dbg !4087
  %7 = zext i8 %6 to i32, !dbg !4088
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #25, !dbg !4089
  %9 = icmp eq i32 %8, 0, !dbg !4089
  call void @llvm.dbg.value(metadata i1 %9, metadata !4080, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4086
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #25, !dbg !4090
  call void @llvm.dbg.value(metadata i32 %10, metadata !4081, metadata !DIExpression()), !dbg !4086
  %11 = ptrtoint i8* %3 to i32, !dbg !4091
  %12 = ptrtoint i8* %2 to i32, !dbg !4091
  %13 = sub i32 %11, %12, !dbg !4091
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4092
  call void @llvm.dbg.value(metadata i8* %14, metadata !4083, metadata !DIExpression()), !dbg !4086
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4093

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4086
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4076, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i8* %18, metadata !4083, metadata !DIExpression()), !dbg !4086
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4094
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4095
  call void @llvm.dbg.value(metadata i32 %25, metadata !4084, metadata !DIExpression()), !dbg !4096
  %26 = icmp ult i32 %25, 10, !dbg !4097
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4098
  %28 = add i32 %27, %25, !dbg !4096
  %29 = trunc i32 %28 to i8, !dbg !4098
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4099
  call void @llvm.dbg.value(metadata i8* %30, metadata !4083, metadata !DIExpression()), !dbg !4086
  store i8 %29, i8* %30, align 1, !dbg !4100
  call void @llvm.dbg.value(metadata i64 %22, metadata !4076, metadata !DIExpression()), !dbg !4086
  %31 = icmp uge i64 %19, %15, !dbg !4101
  %32 = icmp ugt i8* %30, %2, !dbg !4102
  %33 = and i1 %31, %32, !dbg !4102
  br i1 %33, label %17, label %34, !dbg !4103, !llvm.loop !4104

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4106
  %36 = load i24, i24* %35, align 4, !dbg !4106
  %37 = and i24 %36, 32, !dbg !4106
  %38 = icmp eq i24 %37, 0, !dbg !4106
  br i1 %38, label %44, label %39, !dbg !4108

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4109

40:                                               ; preds = %39
  br label %41, !dbg !4111

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4115
  store i24 %43, i24* %35, align 4, !dbg !4115
  br label %44, !dbg !4116

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4116
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !4117 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4123, metadata !DIExpression()), !dbg !4126
  call void @llvm.dbg.value(metadata i8* %1, metadata !4124, metadata !DIExpression()), !dbg !4126
  call void @llvm.dbg.value(metadata i32 %2, metadata !4125, metadata !DIExpression()), !dbg !4126
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4127
  %5 = load i24, i24* %4, align 4, !dbg !4127
  %6 = lshr i24 %5, 11, !dbg !4127
  %7 = and i24 %6, 15, !dbg !4127
  %8 = zext i24 %7 to i32, !dbg !4127
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4128

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4129
  store i32 %2, i32* %10, align 4, !dbg !4131
  br label %28, !dbg !4132

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4133
  store i8 %12, i8* %1, align 1, !dbg !4134
  br label %28, !dbg !4135

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4136
  %15 = bitcast i8* %1 to i16*, !dbg !4137
  store i16 %14, i16* %15, align 2, !dbg !4138
  br label %28, !dbg !4139

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4140
  store i32 %2, i32* %17, align 4, !dbg !4141
  br label %28, !dbg !4142

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4143
  %20 = bitcast i8* %1 to i64*, !dbg !4144
  store i64 %19, i64* %20, align 8, !dbg !4145
  br label %28, !dbg !4146

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4147
  %23 = bitcast i8* %1 to i64*, !dbg !4148
  store i64 %22, i64* %23, align 8, !dbg !4149
  br label %28, !dbg !4150

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4151
  store i32 %2, i32* %25, align 4, !dbg !4152
  br label %28, !dbg !4153

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4154
  store i32 %2, i32* %27, align 4, !dbg !4155
  br label %28, !dbg !4156

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4157
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @encode_float(double noundef %0, %struct.conversion* nocapture noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3, i8* noundef returned %4, i8** nocapture noundef writeonly %5) unnamed_addr #1 !dbg !4158 {
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  call void @llvm.dbg.value(metadata double %0, metadata !4163, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4164, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i32 %2, metadata !4165, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i8* %3, metadata !4166, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i8* %4, metadata !4167, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i8** %5, metadata !4168, metadata !DIExpression()), !dbg !4184
  %10 = bitcast double %0 to i64, !dbg !4185
  call void @llvm.dbg.value(metadata i64 %10, metadata !4169, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i8 0, metadata !4174, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i8* %4, metadata !4175, metadata !DIExpression()), !dbg !4184
  %11 = icmp sgt i64 %10, -1, !dbg !4186
  br i1 %11, label %12, label %20, !dbg !4188

12:                                               ; preds = %6
  %13 = bitcast %struct.conversion* %1 to i24*, !dbg !4189
  %14 = load i24, i24* %13, align 4, !dbg !4189
  %15 = and i24 %14, 8, !dbg !4189
  %16 = icmp eq i24 %15, 0, !dbg !4189
  br i1 %16, label %17, label %20, !dbg !4191

17:                                               ; preds = %12
  %18 = and i24 %14, 16, !dbg !4192
  %19 = icmp eq i24 %18, 0, !dbg !4192
  br i1 %19, label %22, label %20, !dbg !4194

20:                                               ; preds = %17, %12, %6
  %21 = phi i8 [ 45, %6 ], [ 43, %12 ], [ 32, %17 ]
  store i8 %21, i8* %3, align 1, !dbg !4195
  br label %22, !dbg !4196

22:                                               ; preds = %20, %17
  %23 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4196
  %24 = load i8, i8* %23, align 1, !dbg !4196
  call void @llvm.dbg.value(metadata i8 %24, metadata !4176, metadata !DIExpression()), !dbg !4184
  %25 = lshr i64 %10, 52, !dbg !4197
  %26 = trunc i64 %25 to i32, !dbg !4198
  %27 = and i32 %26, 2047, !dbg !4198
  call void @llvm.dbg.value(metadata i32 %27, metadata !4177, metadata !DIExpression()), !dbg !4184
  %28 = bitcast i64* %7 to i8*, !dbg !4199
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #23, !dbg !4199
  %29 = and i64 %10, 4503599627370495, !dbg !4200
  call void @llvm.dbg.value(metadata i64 %29, metadata !4178, metadata !DIExpression()), !dbg !4184
  %30 = icmp eq i32 %27, 0, !dbg !4201
  %31 = icmp ne i64 %29, 0, !dbg !4202
  %32 = and i1 %31, %30, !dbg !4202
  call void @llvm.dbg.value(metadata i1 %32, metadata !4179, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4184
  %33 = icmp eq i32 %27, 2047, !dbg !4203
  br i1 %33, label %34, label %56, !dbg !4205

34:                                               ; preds = %22
  %35 = icmp eq i64 %29, 0, !dbg !4206
  %36 = zext i8 %24 to i32, !dbg !4209
  %37 = tail call fastcc i32 @isupper(i32 noundef %36) #25, !dbg !4209
  %38 = icmp eq i32 %37, 0, !dbg !4209
  %39 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !4209
  call void @llvm.dbg.value(metadata i8* %39, metadata !4175, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i8* %39, metadata !4175, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i8* %39, metadata !4175, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i8* %39, metadata !4175, metadata !DIExpression()), !dbg !4184
  br i1 %35, label %40, label %44, !dbg !4210

40:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i8* undef, metadata !4175, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i8* undef, metadata !4175, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i8* %4, metadata !4175, metadata !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value)), !dbg !4184
  call void @llvm.dbg.value(metadata i8* %4, metadata !4175, metadata !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value)), !dbg !4184
  %41 = select i1 %38, i8 105, i8 73
  %42 = select i1 %38, i8 110, i8 78
  %43 = select i1 %38, i8 102, i8 70
  br label %47

44:                                               ; preds = %34
  %45 = select i1 %38, i8 110, i8 78
  %46 = select i1 %38, i8 97, i8 65
  br label %47

47:                                               ; preds = %44, %40
  %48 = phi i8 [ %41, %40 ], [ %45, %44 ]
  %49 = phi i8 [ %42, %40 ], [ %46, %44 ]
  %50 = phi i8 [ %43, %40 ], [ %45, %44 ]
  store i8 %48, i8* %4, align 1, !dbg !4209
  %51 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !4209
  store i8 %49, i8* %39, align 1, !dbg !4209
  store i8 %50, i8* %51, align 1, !dbg !4209
  %52 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !4209
  call void @llvm.dbg.value(metadata i8* %52, metadata !4175, metadata !DIExpression()), !dbg !4184
  %53 = bitcast %struct.conversion* %1 to i24*, !dbg !4211
  %54 = load i24, i24* %53, align 4, !dbg !4212
  %55 = and i24 %54, -65, !dbg !4212
  store i24 %55, i24* %53, align 4, !dbg !4212
  store i8* %52, i8** %5, align 4, !dbg !4213
  br label %302, !dbg !4214

56:                                               ; preds = %22
  %57 = icmp eq i8 %24, 70, !dbg !4215
  %58 = select i1 %57, i8 102, i8 %24, !dbg !4217
  call void @llvm.dbg.value(metadata i8 %58, metadata !4176, metadata !DIExpression()), !dbg !4184
  %59 = shl nuw nsw i64 %29, 11, !dbg !4218
  call void @llvm.dbg.value(metadata i64 %59, metadata !4178, metadata !DIExpression()), !dbg !4184
  %60 = zext i32 %27 to i64, !dbg !4219
  %61 = or i64 %59, %60, !dbg !4221
  %62 = icmp eq i64 %61, 0, !dbg !4222
  br i1 %62, label %80, label %63, !dbg !4223

63:                                               ; preds = %56
  br i1 %32, label %64, label %70, !dbg !4224

64:                                               ; preds = %63, %64
  %65 = phi i64 [ %67, %64 ], [ %59, %63 ], !dbg !4184
  %66 = phi i32 [ %69, %64 ], [ 0, %63 ], !dbg !4184
  call void @llvm.dbg.value(metadata i32 %66, metadata !4177, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i64 %65, metadata !4178, metadata !DIExpression()), !dbg !4184
  %67 = shl nuw i64 %65, 1, !dbg !4226
  call void @llvm.dbg.value(metadata i64 %67, metadata !4178, metadata !DIExpression()), !dbg !4184
  %68 = icmp sgt i64 %67, -1, !dbg !4229
  %69 = add nsw i32 %66, -1, !dbg !4230
  call void @llvm.dbg.value(metadata i32 %69, metadata !4177, metadata !DIExpression()), !dbg !4184
  br i1 %68, label %64, label %70, !dbg !4232, !llvm.loop !4233

70:                                               ; preds = %64, %63
  %71 = phi i64 [ %59, %63 ], [ %67, %64 ], !dbg !4235
  %72 = phi i32 [ %27, %63 ], [ %66, %64 ], !dbg !4236
  call void @llvm.dbg.value(metadata i32 %72, metadata !4177, metadata !DIExpression()), !dbg !4184
  %73 = add nsw i32 %72, -1022, !dbg !4237
  call void @llvm.dbg.value(metadata i32 %73, metadata !4177, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i64 %71, metadata !4178, metadata !DIExpression()), !dbg !4184
  %74 = or i64 %71, -9223372036854775808, !dbg !4235
  call void @llvm.dbg.value(metadata i64 %74, metadata !4178, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i32 0, metadata !4180, metadata !DIExpression()), !dbg !4184
  %75 = icmp slt i32 %72, 1020, !dbg !4238
  br i1 %75, label %76, label %80, !dbg !4239

76:                                               ; preds = %70, %93
  %77 = phi i32 [ %96, %93 ], [ 0, %70 ]
  %78 = phi i32 [ %95, %93 ], [ %73, %70 ]
  %79 = phi i64 [ %94, %93 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %77, metadata !4180, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i32 %78, metadata !4177, metadata !DIExpression()), !dbg !4184
  br label %85, !dbg !4240

80:                                               ; preds = %93, %56, %70
  %81 = phi i64 [ %74, %70 ], [ %59, %56 ], [ %94, %93 ]
  %82 = phi i32 [ %73, %70 ], [ %27, %56 ], [ %95, %93 ], !dbg !4184
  %83 = phi i32 [ 0, %70 ], [ 0, %56 ], [ %96, %93 ], !dbg !4184
  call void @llvm.dbg.value(metadata i32 %83, metadata !4180, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i32 %82, metadata !4177, metadata !DIExpression()), !dbg !4184
  %84 = icmp sgt i32 %82, 0, !dbg !4242
  br i1 %84, label %101, label %114, !dbg !4243

85:                                               ; preds = %76, %85
  %86 = phi i64 [ %88, %85 ], [ %79, %76 ], !dbg !4184
  %87 = phi i32 [ %89, %85 ], [ %78, %76 ], !dbg !4184
  call void @llvm.dbg.value(metadata i32 %87, metadata !4177, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i64 %86, metadata !4178, metadata !DIExpression()), !dbg !4184
  %88 = lshr i64 %86, 1, !dbg !4244
  call void @llvm.dbg.value(metadata i64 %88, metadata !4178, metadata !DIExpression()), !dbg !4184
  %89 = add nsw i32 %87, 1, !dbg !4246
  call void @llvm.dbg.value(metadata i32 %89, metadata !4177, metadata !DIExpression()), !dbg !4184
  %90 = lshr i64 %86, 33, !dbg !4247
  %91 = trunc i64 %90 to i32, !dbg !4248
  %92 = icmp ugt i32 %91, 858993458, !dbg !4249
  br i1 %92, label %85, label %93, !dbg !4250, !llvm.loop !4251

93:                                               ; preds = %85
  %94 = mul i64 %88, 5, !dbg !4253
  call void @llvm.dbg.value(metadata i64 %94, metadata !4178, metadata !DIExpression()), !dbg !4184
  %95 = add nsw i32 %87, 2, !dbg !4254
  call void @llvm.dbg.value(metadata i32 %95, metadata !4177, metadata !DIExpression()), !dbg !4184
  %96 = add nsw i32 %77, -1, !dbg !4255
  call void @llvm.dbg.value(metadata i32 %96, metadata !4180, metadata !DIExpression()), !dbg !4184
  %97 = icmp slt i32 %87, -4, !dbg !4238
  br i1 %97, label %76, label %80, !dbg !4239, !llvm.loop !4256

98:                                               ; preds = %108
  %99 = add nsw i32 %103, 1, !dbg !4258
  store i64 %111, i64* %7, align 8, !dbg !4260
  call void @llvm.dbg.value(metadata i32 %99, metadata !4180, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i32 %112, metadata !4177, metadata !DIExpression()), !dbg !4184
  %100 = icmp sgt i32 %110, 1, !dbg !4242
  br i1 %100, label %101, label %114, !dbg !4243, !llvm.loop !4262

101:                                              ; preds = %80, %98
  %102 = phi i64 [ %111, %98 ], [ %81, %80 ], !dbg !4264
  %103 = phi i32 [ %99, %98 ], [ %83, %80 ]
  %104 = phi i32 [ %112, %98 ], [ %82, %80 ]
  call void @llvm.dbg.value(metadata i32 %103, metadata !4180, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i32 %104, metadata !4177, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i64 %102, metadata !4178, metadata !DIExpression()), !dbg !4184
  %105 = add i64 %102, 2, !dbg !4264
  call void @llvm.dbg.value(metadata i64 %105, metadata !4178, metadata !DIExpression()), !dbg !4184
  store i64 %105, i64* %7, align 8, !dbg !4264
  call void @llvm.dbg.value(metadata i64* %7, metadata !4178, metadata !DIExpression(DW_OP_deref)), !dbg !4184
  call fastcc void @_ldiv5(i64* noundef nonnull %7) #25, !dbg !4265
  %106 = add nsw i32 %104, -1, !dbg !4266
  call void @llvm.dbg.value(metadata i32 %106, metadata !4177, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i32 %99, metadata !4180, metadata !DIExpression()), !dbg !4184
  %107 = load i64, i64* %7, align 8
  br label %108, !dbg !4267

108:                                              ; preds = %108, %101
  %109 = phi i64 [ %107, %101 ], [ %111, %108 ], !dbg !4184
  %110 = phi i32 [ %106, %101 ], [ %112, %108 ], !dbg !4268
  call void @llvm.dbg.value(metadata i32 %110, metadata !4177, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i64 %109, metadata !4178, metadata !DIExpression()), !dbg !4184
  %111 = shl i64 %109, 1, !dbg !4260
  call void @llvm.dbg.value(metadata i64 %111, metadata !4178, metadata !DIExpression()), !dbg !4184
  %112 = add nsw i32 %110, -1, !dbg !4269
  call void @llvm.dbg.value(metadata i32 %112, metadata !4177, metadata !DIExpression()), !dbg !4184
  %113 = icmp sgt i64 %111, -1, !dbg !4270
  br i1 %113, label %108, label %98, !dbg !4271

114:                                              ; preds = %98, %80
  %115 = phi i64 [ %81, %80 ], [ %111, %98 ], !dbg !4272
  %116 = phi i32 [ %82, %80 ], [ %112, %98 ], !dbg !4184
  %117 = phi i32 [ %83, %80 ], [ %99, %98 ], !dbg !4184
  %118 = sub nsw i32 4, %116, !dbg !4273
  call void @llvm.dbg.value(metadata i64 %115, metadata !4178, metadata !DIExpression()), !dbg !4184
  %119 = zext i32 %118 to i64, !dbg !4272
  %120 = lshr i64 %115, %119, !dbg !4272
  call void @llvm.dbg.value(metadata i64 %120, metadata !4178, metadata !DIExpression()), !dbg !4184
  %121 = and i8 %58, -33, !dbg !4274
  %122 = icmp eq i8 %121, 71, !dbg !4274
  br i1 %122, label %123, label %143, !dbg !4274

123:                                              ; preds = %114
  %124 = icmp slt i32 %117, -3, !dbg !4276
  %125 = icmp sgt i32 %117, %2
  %126 = or i1 %124, %125, !dbg !4279
  br i1 %126, label %127, label %132, !dbg !4279

127:                                              ; preds = %123
  %128 = add nsw i8 %58, -2, !dbg !4280
  call void @llvm.dbg.value(metadata i8 %128, metadata !4176, metadata !DIExpression()), !dbg !4184
  %129 = icmp sgt i32 %2, 0, !dbg !4282
  %130 = sext i1 %129 to i32, !dbg !4284
  %131 = add nsw i32 %130, %2, !dbg !4284
  br label %134, !dbg !4284

132:                                              ; preds = %123
  call void @llvm.dbg.value(metadata i8 102, metadata !4176, metadata !DIExpression()), !dbg !4184
  %133 = sub nsw i32 %2, %117, !dbg !4285
  call void @llvm.dbg.value(metadata i32 %133, metadata !4165, metadata !DIExpression()), !dbg !4184
  br label %134

134:                                              ; preds = %127, %132
  %135 = phi i32 [ %133, %132 ], [ %131, %127 ]
  %136 = phi i8 [ 102, %132 ], [ %128, %127 ], !dbg !4287
  call void @llvm.dbg.value(metadata i8 %136, metadata !4176, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i32 %135, metadata !4165, metadata !DIExpression()), !dbg !4184
  %137 = bitcast %struct.conversion* %1 to i24*, !dbg !4288
  %138 = load i24, i24* %137, align 4, !dbg !4288
  %139 = and i24 %138, 32, !dbg !4288
  %140 = icmp eq i24 %139, 0, !dbg !4288
  %141 = icmp sgt i32 %135, 0
  %142 = select i1 %140, i1 %141, i1 false, !dbg !4290
  br label %143, !dbg !4290

143:                                              ; preds = %134, %114
  %144 = phi i32 [ %2, %114 ], [ %135, %134 ]
  %145 = phi i1 [ false, %114 ], [ %142, %134 ]
  %146 = phi i8 [ %58, %114 ], [ %136, %134 ], !dbg !4184
  call void @llvm.dbg.value(metadata i8 %146, metadata !4176, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i8 poison, metadata !4174, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i32 %144, metadata !4165, metadata !DIExpression()), !dbg !4184
  %147 = icmp eq i8 %146, 102, !dbg !4291
  %148 = add nsw i32 %144, %117, !dbg !4293
  %149 = icmp sgt i32 %148, 0, !dbg !4293
  %150 = select i1 %149, i32 %148, i32 0, !dbg !4293
  %151 = add nsw i32 %144, 1, !dbg !4293
  %152 = select i1 %147, i32 %150, i32 %151, !dbg !4293
  call void @llvm.dbg.value(metadata i32 %152, metadata !4181, metadata !DIExpression()), !dbg !4184
  %153 = bitcast i32* %8 to i8*, !dbg !4294
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %153) #23, !dbg !4294
  call void @llvm.dbg.value(metadata i32 16, metadata !4182, metadata !DIExpression()), !dbg !4184
  store i32 16, i32* %8, align 4, !dbg !4295
  %154 = icmp slt i32 %152, 16, !dbg !4296
  call void @llvm.dbg.value(metadata i32 undef, metadata !4181, metadata !DIExpression()), !dbg !4184
  %155 = bitcast i64* %9 to i8*, !dbg !4297
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #23, !dbg !4297
  call void @llvm.dbg.value(metadata i64 576460752303423488, metadata !4183, metadata !DIExpression()), !dbg !4184
  store i64 576460752303423488, i64* %9, align 8, !dbg !4298
  %156 = select i1 %154, i32 %152, i32 16, !dbg !4184
  call void @llvm.dbg.value(metadata i32 %156, metadata !4181, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4184
  %157 = icmp eq i32 %156, 0, !dbg !4299
  br i1 %157, label %164, label %158, !dbg !4299

158:                                              ; preds = %143, %158
  %159 = phi i32 [ %160, %158 ], [ %156, %143 ]
  call void @llvm.dbg.value(metadata i32 %159, metadata !4181, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4184
  %160 = add nsw i32 %159, -1, !dbg !4300
  call void @llvm.dbg.value(metadata i32 %160, metadata !4181, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i64* %9, metadata !4183, metadata !DIExpression(DW_OP_deref)), !dbg !4184
  call fastcc void @_ldiv10(i64* noundef nonnull %9) #25, !dbg !4301
  call void @llvm.dbg.value(metadata i32 %160, metadata !4181, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4184
  %161 = icmp eq i32 %160, 0, !dbg !4299
  br i1 %161, label %162, label %158, !dbg !4299, !llvm.loop !4303

162:                                              ; preds = %158
  %163 = load i64, i64* %9, align 8, !dbg !4305
  br label %164, !dbg !4305

164:                                              ; preds = %162, %143
  %165 = phi i64 [ %163, %162 ], [ 576460752303423488, %143 ], !dbg !4305
  call void @llvm.dbg.value(metadata i64 %165, metadata !4183, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i64 %120, metadata !4178, metadata !DIExpression()), !dbg !4184
  %166 = add i64 %120, %165, !dbg !4306
  call void @llvm.dbg.value(metadata i64 %166, metadata !4178, metadata !DIExpression()), !dbg !4184
  store i64 %166, i64* %7, align 8, !dbg !4306
  %167 = icmp ugt i64 %166, 1152921504606846975, !dbg !4307
  br i1 %167, label %168, label %170, !dbg !4309

168:                                              ; preds = %164
  call void @llvm.dbg.value(metadata i64* %7, metadata !4178, metadata !DIExpression(DW_OP_deref)), !dbg !4184
  call fastcc void @_ldiv10(i64* noundef nonnull %7) #25, !dbg !4310
  %169 = add nsw i32 %117, 1, !dbg !4312
  call void @llvm.dbg.value(metadata i32 %169, metadata !4180, metadata !DIExpression()), !dbg !4184
  br label %170, !dbg !4313

170:                                              ; preds = %168, %164
  %171 = phi i32 [ %169, %168 ], [ %117, %164 ], !dbg !4184
  call void @llvm.dbg.value(metadata i32 %171, metadata !4180, metadata !DIExpression()), !dbg !4184
  br i1 %147, label %172, label %211, !dbg !4314

172:                                              ; preds = %170
  %173 = icmp sgt i32 %171, 0, !dbg !4315
  br i1 %173, label %174, label %186, !dbg !4319

174:                                              ; preds = %172, %174
  %175 = phi i32 [ %179, %174 ], [ %171, %172 ]
  %176 = phi i8* [ %178, %174 ], [ %4, %172 ]
  call void @llvm.dbg.value(metadata i32 %175, metadata !4180, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i8* %176, metadata !4175, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i64* %7, metadata !4178, metadata !DIExpression(DW_OP_deref)), !dbg !4184
  call void @llvm.dbg.value(metadata i32* %8, metadata !4182, metadata !DIExpression(DW_OP_deref)), !dbg !4184
  %177 = call fastcc zeroext i8 @_get_digit(i64* noundef nonnull %7, i32* noundef nonnull %8) #25, !dbg !4320
  %178 = getelementptr inbounds i8, i8* %176, i32 1, !dbg !4323
  call void @llvm.dbg.value(metadata i8* %178, metadata !4175, metadata !DIExpression()), !dbg !4184
  store i8 %177, i8* %176, align 1, !dbg !4324
  %179 = add nsw i32 %175, -1, !dbg !4325
  call void @llvm.dbg.value(metadata i32 %179, metadata !4180, metadata !DIExpression()), !dbg !4184
  %180 = icmp ugt i32 %175, 1, !dbg !4326
  %181 = load i32, i32* %8, align 4, !dbg !4327
  call void @llvm.dbg.value(metadata i32 %181, metadata !4182, metadata !DIExpression()), !dbg !4184
  %182 = icmp sgt i32 %181, 0, !dbg !4327
  %183 = select i1 %180, i1 %182, i1 false, !dbg !4327
  br i1 %183, label %174, label %184, !dbg !4328, !llvm.loop !4329

184:                                              ; preds = %174
  %185 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 2, i32 0, !dbg !4331
  store i32 %179, i32* %185, align 4, !dbg !4332
  call void @llvm.dbg.value(metadata i32 0, metadata !4180, metadata !DIExpression()), !dbg !4184
  br label %188, !dbg !4333

186:                                              ; preds = %172
  %187 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !4334
  call void @llvm.dbg.value(metadata i8* %187, metadata !4175, metadata !DIExpression()), !dbg !4184
  store i8 48, i8* %4, align 1, !dbg !4336
  br label %188

188:                                              ; preds = %186, %184
  %189 = phi i8* [ %178, %184 ], [ %187, %186 ], !dbg !4184
  %190 = phi i32 [ 0, %184 ], [ %171, %186 ], !dbg !4184
  call void @llvm.dbg.value(metadata i32 %190, metadata !4180, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i8* %189, metadata !4175, metadata !DIExpression()), !dbg !4184
  %191 = bitcast %struct.conversion* %1 to i24*, !dbg !4337
  %192 = load i24, i24* %191, align 4, !dbg !4337
  %193 = and i24 %192, 32, !dbg !4337
  %194 = icmp ne i24 %193, 0, !dbg !4337
  %195 = icmp sgt i32 %144, 0
  %196 = select i1 %194, i1 true, i1 %195, !dbg !4339
  br i1 %196, label %197, label %199, !dbg !4339

197:                                              ; preds = %188
  %198 = getelementptr inbounds i8, i8* %189, i32 1, !dbg !4340
  call void @llvm.dbg.value(metadata i8* %198, metadata !4175, metadata !DIExpression()), !dbg !4184
  store i8 46, i8* %189, align 1, !dbg !4342
  br label %199, !dbg !4343

199:                                              ; preds = %188, %197
  %200 = phi i8* [ %198, %197 ], [ %189, %188 ], !dbg !4184
  call void @llvm.dbg.value(metadata i8* %200, metadata !4175, metadata !DIExpression()), !dbg !4184
  %201 = icmp slt i32 %190, 0, !dbg !4344
  %202 = select i1 %201, i1 %195, i1 false, !dbg !4346
  br i1 %202, label %203, label %225, !dbg !4346

203:                                              ; preds = %199
  %204 = sub nsw i32 0, %190, !dbg !4347
  %205 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 2, i32 0, !dbg !4349
  %206 = icmp ult i32 %144, %204, !dbg !4350
  %207 = select i1 %206, i32 %144, i32 %204, !dbg !4352
  store i32 %207, i32* %205, align 4, !dbg !4353
  %208 = sub nsw i32 %144, %207, !dbg !4354
  call void @llvm.dbg.value(metadata i32 %208, metadata !4165, metadata !DIExpression()), !dbg !4184
  %209 = load i24, i24* %191, align 4, !dbg !4355
  %210 = or i24 %209, 2097152, !dbg !4355
  store i24 %210, i24* %191, align 4, !dbg !4355
  br label %225, !dbg !4356

211:                                              ; preds = %170
  call void @llvm.dbg.value(metadata i64* %7, metadata !4178, metadata !DIExpression(DW_OP_deref)), !dbg !4184
  call void @llvm.dbg.value(metadata i32* %8, metadata !4182, metadata !DIExpression(DW_OP_deref)), !dbg !4184
  %212 = call fastcc zeroext i8 @_get_digit(i64* noundef nonnull %7, i32* noundef nonnull %8) #25, !dbg !4357
  store i8 %212, i8* %4, align 1, !dbg !4359
  %213 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !4360
  call void @llvm.dbg.value(metadata i8* %213, metadata !4175, metadata !DIExpression()), !dbg !4184
  %214 = icmp ne i8 %212, 48, !dbg !4362
  %215 = sext i1 %214 to i32, !dbg !4363
  %216 = add nsw i32 %171, %215, !dbg !4363
  call void @llvm.dbg.value(metadata i32 %216, metadata !4180, metadata !DIExpression()), !dbg !4184
  %217 = bitcast %struct.conversion* %1 to i24*, !dbg !4364
  %218 = load i24, i24* %217, align 4, !dbg !4364
  %219 = and i24 %218, 32, !dbg !4364
  %220 = icmp ne i24 %219, 0, !dbg !4364
  %221 = icmp sgt i32 %144, 0
  %222 = select i1 %220, i1 true, i1 %221, !dbg !4366
  br i1 %222, label %223, label %243, !dbg !4366

223:                                              ; preds = %211
  %224 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !4367
  call void @llvm.dbg.value(metadata i8* %224, metadata !4175, metadata !DIExpression()), !dbg !4184
  store i8 46, i8* %213, align 1, !dbg !4369
  br label %225, !dbg !4370

225:                                              ; preds = %223, %199, %203
  %226 = phi i32 [ %208, %203 ], [ %144, %199 ], [ %144, %223 ], !dbg !4184
  %227 = phi i8* [ %200, %203 ], [ %200, %199 ], [ %224, %223 ], !dbg !4371
  %228 = phi i32 [ %190, %203 ], [ %190, %199 ], [ %216, %223 ], !dbg !4371
  call void @llvm.dbg.value(metadata i32 %228, metadata !4180, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i8* %227, metadata !4175, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i32 %226, metadata !4165, metadata !DIExpression()), !dbg !4184
  %229 = icmp sgt i32 %226, 0, !dbg !4372
  %230 = load i32, i32* %8, align 4, !dbg !4373
  call void @llvm.dbg.value(metadata i32 %230, metadata !4182, metadata !DIExpression()), !dbg !4184
  %231 = icmp sgt i32 %230, 0, !dbg !4373
  %232 = select i1 %229, i1 %231, i1 false, !dbg !4373
  br i1 %232, label %233, label %243, !dbg !4374

233:                                              ; preds = %225, %233
  %234 = phi i8* [ %237, %233 ], [ %227, %225 ]
  %235 = phi i32 [ %238, %233 ], [ %226, %225 ]
  call void @llvm.dbg.value(metadata i8* %234, metadata !4175, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i32 %235, metadata !4165, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i64* %7, metadata !4178, metadata !DIExpression(DW_OP_deref)), !dbg !4184
  call void @llvm.dbg.value(metadata i32* %8, metadata !4182, metadata !DIExpression(DW_OP_deref)), !dbg !4184
  %236 = call fastcc zeroext i8 @_get_digit(i64* noundef nonnull %7, i32* noundef nonnull %8) #25, !dbg !4375
  %237 = getelementptr inbounds i8, i8* %234, i32 1, !dbg !4377
  call void @llvm.dbg.value(metadata i8* %237, metadata !4175, metadata !DIExpression()), !dbg !4184
  store i8 %236, i8* %234, align 1, !dbg !4378
  %238 = add nsw i32 %235, -1, !dbg !4379
  call void @llvm.dbg.value(metadata i32 %238, metadata !4165, metadata !DIExpression()), !dbg !4184
  %239 = icmp ugt i32 %235, 1, !dbg !4372
  %240 = load i32, i32* %8, align 4, !dbg !4373
  call void @llvm.dbg.value(metadata i32 %240, metadata !4182, metadata !DIExpression()), !dbg !4184
  %241 = icmp sgt i32 %240, 0, !dbg !4373
  %242 = select i1 %239, i1 %241, i1 false, !dbg !4373
  br i1 %242, label %233, label %243, !dbg !4374, !llvm.loop !4380

243:                                              ; preds = %233, %211, %225
  %244 = phi i32 [ %228, %225 ], [ %216, %211 ], [ %228, %233 ]
  %245 = phi i32 [ %226, %225 ], [ %144, %211 ], [ %238, %233 ], !dbg !4184
  %246 = phi i8* [ %227, %225 ], [ %213, %211 ], [ %237, %233 ], !dbg !4184
  %247 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 3, i32 0, !dbg !4382
  store i32 %245, i32* %247, align 4, !dbg !4383
  br i1 %145, label %248, label %254, !dbg !4384

248:                                              ; preds = %243
  store i32 0, i32* %247, align 4, !dbg !4385
  br label %249, !dbg !4388

249:                                              ; preds = %249, %248
  %250 = phi i8* [ %246, %248 ], [ %251, %249 ], !dbg !4184
  call void @llvm.dbg.value(metadata i8* %250, metadata !4175, metadata !DIExpression()), !dbg !4184
  %251 = getelementptr inbounds i8, i8* %250, i32 -1, !dbg !4389
  call void @llvm.dbg.value(metadata i8* %251, metadata !4175, metadata !DIExpression()), !dbg !4184
  %252 = load i8, i8* %251, align 1, !dbg !4390
  switch i8 %252, label %254 [
    i8 48, label %249
    i8 46, label %253
  ], !dbg !4388

253:                                              ; preds = %249
  br label %254, !dbg !4391

254:                                              ; preds = %249, %253, %243
  %255 = phi i8* [ %246, %243 ], [ %251, %253 ], [ %250, %249 ], !dbg !4184
  call void @llvm.dbg.value(metadata i8* %255, metadata !4175, metadata !DIExpression()), !dbg !4184
  %256 = and i8 %146, -33, !dbg !4391
  %257 = icmp eq i8 %256, 69, !dbg !4391
  br i1 %257, label %258, label %287, !dbg !4391

258:                                              ; preds = %254
  %259 = getelementptr inbounds i8, i8* %255, i32 1, !dbg !4393
  call void @llvm.dbg.value(metadata i8* %259, metadata !4175, metadata !DIExpression()), !dbg !4184
  store i8 %146, i8* %255, align 1, !dbg !4395
  %260 = icmp slt i32 %244, 0, !dbg !4396
  %261 = sub nsw i32 0, %244, !dbg !4398
  %262 = select i1 %260, i8 45, i8 43, !dbg !4398
  %263 = select i1 %260, i32 %261, i32 %244, !dbg !4398
  %264 = getelementptr inbounds i8, i8* %255, i32 2, !dbg !4399
  store i8 %262, i8* %259, align 1, !dbg !4399
  call void @llvm.dbg.value(metadata i32 %263, metadata !4180, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i8* %264, metadata !4175, metadata !DIExpression()), !dbg !4184
  %265 = icmp sgt i32 %263, 99, !dbg !4400
  br i1 %265, label %266, label %274, !dbg !4402

266:                                              ; preds = %258
  %267 = freeze i32 %263
  %268 = udiv i32 %267, 100, !dbg !4403
  %269 = trunc i32 %268 to i8, !dbg !4405
  %270 = add i8 %269, 48, !dbg !4405
  %271 = getelementptr inbounds i8, i8* %255, i32 3, !dbg !4406
  call void @llvm.dbg.value(metadata i8* %271, metadata !4175, metadata !DIExpression()), !dbg !4184
  store i8 %270, i8* %264, align 1, !dbg !4407
  %272 = mul i32 %268, 100
  %273 = sub i32 %267, %272
  call void @llvm.dbg.value(metadata i32 %273, metadata !4180, metadata !DIExpression()), !dbg !4184
  br label %274, !dbg !4408

274:                                              ; preds = %266, %258
  %275 = phi i8* [ %271, %266 ], [ %264, %258 ], !dbg !4409
  %276 = phi i32 [ %273, %266 ], [ %263, %258 ], !dbg !4409
  call void @llvm.dbg.value(metadata i32 %276, metadata !4180, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i8* %275, metadata !4175, metadata !DIExpression()), !dbg !4184
  %277 = freeze i32 %276
  %278 = udiv i32 %277, 10, !dbg !4410
  %279 = trunc i32 %278 to i8, !dbg !4411
  %280 = add i8 %279, 48, !dbg !4411
  %281 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !4412
  call void @llvm.dbg.value(metadata i8* %281, metadata !4175, metadata !DIExpression()), !dbg !4184
  store i8 %280, i8* %275, align 1, !dbg !4413
  %282 = mul i32 %278, 10
  %283 = sub i32 %277, %282
  %284 = trunc i32 %283 to i8, !dbg !4414
  %285 = or i8 %284, 48, !dbg !4414
  %286 = getelementptr inbounds i8, i8* %275, i32 2, !dbg !4415
  call void @llvm.dbg.value(metadata i8* %286, metadata !4175, metadata !DIExpression()), !dbg !4184
  store i8 %285, i8* %281, align 1, !dbg !4416
  br label %287, !dbg !4417

287:                                              ; preds = %254, %274
  %288 = phi i8* [ %286, %274 ], [ %255, %254 ], !dbg !4184
  call void @llvm.dbg.value(metadata i8* %288, metadata !4175, metadata !DIExpression()), !dbg !4184
  %289 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 2, i32 0, !dbg !4418
  %290 = load i32, i32* %289, align 4, !dbg !4418
  %291 = icmp sgt i32 %290, 0, !dbg !4419
  br i1 %291, label %296, label %292, !dbg !4420

292:                                              ; preds = %287
  %293 = load i32, i32* %247, align 4, !dbg !4421
  %294 = icmp sgt i32 %293, 0, !dbg !4422
  %295 = select i1 %294, i24 4194304, i24 0, !dbg !4420
  br label %296, !dbg !4420

296:                                              ; preds = %292, %287
  %297 = phi i24 [ 4194304, %287 ], [ %295, %292 ]
  %298 = bitcast %struct.conversion* %1 to i24*, !dbg !4423
  %299 = load i24, i24* %298, align 4, !dbg !4424
  %300 = and i24 %299, -4194305, !dbg !4424
  %301 = or i24 %300, %297, !dbg !4424
  store i24 %301, i24* %298, align 4, !dbg !4424
  store i8* %288, i8** %5, align 4, !dbg !4425
  store i8 0, i8* %288, align 1, !dbg !4426
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #23, !dbg !4427
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %153) #23, !dbg !4427
  br label %302

302:                                              ; preds = %296, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #23, !dbg !4427
  ret i8* %4, !dbg !4427
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #12 !dbg !4428 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4431, metadata !DIExpression()), !dbg !4432
  %2 = add i32 %0, -48, !dbg !4433
  %3 = icmp ult i32 %2, 10, !dbg !4434
  %4 = zext i1 %3 to i32, !dbg !4434
  ret i32 %4, !dbg !4435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #12 !dbg !4436 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4438, metadata !DIExpression()), !dbg !4439
  %2 = add i32 %0, -65, !dbg !4440
  %3 = icmp ult i32 %2, 26, !dbg !4441
  %4 = zext i1 %3 to i32, !dbg !4441
  ret i32 %4, !dbg !4442
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_ldiv5(i64* nocapture noundef %0) unnamed_addr #1 !dbg !4443 {
  call void @llvm.dbg.value(metadata i64* %0, metadata !4448, metadata !DIExpression()), !dbg !4453
  %2 = load i64, i64* %0, align 8, !dbg !4454
  call void @llvm.dbg.value(metadata i64 %2, metadata !4449, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4453
  %3 = lshr i64 %2, 32, !dbg !4455
  call void @llvm.dbg.value(metadata i64 %3, metadata !4450, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4453
  call void @llvm.dbg.value(metadata i32 858993459, metadata !4451, metadata !DIExpression()), !dbg !4453
  %4 = tail call i32 asm "", "=r,0"(i32 858993459) #27, !dbg !4456, !srcloc !4457
  call void @llvm.dbg.value(metadata i32 %4, metadata !4451, metadata !DIExpression()), !dbg !4453
  %5 = zext i32 %4 to i64, !dbg !4458
  %6 = mul nuw i64 %5, 4294967297, !dbg !4459
  call void @llvm.dbg.value(metadata i64 %6, metadata !4452, metadata !DIExpression()), !dbg !4453
  %7 = and i64 %2, 4294967295, !dbg !4460
  %8 = mul nuw i64 %7, %5, !dbg !4461
  %9 = add i64 %6, %8, !dbg !4462
  call void @llvm.dbg.value(metadata i64 %9, metadata !4452, metadata !DIExpression()), !dbg !4453
  %10 = lshr i64 %9, 32, !dbg !4463
  call void @llvm.dbg.value(metadata i64 %10, metadata !4452, metadata !DIExpression()), !dbg !4453
  call void @llvm.dbg.value(metadata i64 undef, metadata !4452, metadata !DIExpression()), !dbg !4453
  %11 = mul nuw i64 %3, %5, !dbg !4464
  %12 = add i64 %11, %8, !dbg !4465
  %13 = add i64 %12, %10, !dbg !4466
  call void @llvm.dbg.value(metadata i64 %13, metadata !4452, metadata !DIExpression()), !dbg !4453
  %14 = lshr i64 %13, 32, !dbg !4467
  call void @llvm.dbg.value(metadata i64 %14, metadata !4452, metadata !DIExpression()), !dbg !4453
  %15 = add nuw i64 %14, %11, !dbg !4468
  call void @llvm.dbg.value(metadata i64 %15, metadata !4452, metadata !DIExpression()), !dbg !4453
  store i64 %15, i64* %0, align 8, !dbg !4469
  ret void, !dbg !4470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_ldiv10(i64* nocapture noundef %0) unnamed_addr #1 !dbg !4471 {
  call void @llvm.dbg.value(metadata i64* %0, metadata !4473, metadata !DIExpression()), !dbg !4474
  %2 = load i64, i64* %0, align 8, !dbg !4475
  %3 = lshr i64 %2, 1, !dbg !4475
  store i64 %3, i64* %0, align 8, !dbg !4475
  tail call fastcc void @_ldiv5(i64* noundef nonnull %0) #25, !dbg !4476
  ret void, !dbg !4477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc zeroext i8 @_get_digit(i64* nocapture noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !4478 {
  call void @llvm.dbg.value(metadata i64* %0, metadata !4482, metadata !DIExpression()), !dbg !4485
  call void @llvm.dbg.value(metadata i32* %1, metadata !4483, metadata !DIExpression()), !dbg !4485
  %3 = load i32, i32* %1, align 4, !dbg !4486
  %4 = icmp sgt i32 %3, 0, !dbg !4488
  br i1 %4, label %5, label %13, !dbg !4489

5:                                                ; preds = %2
  %6 = add nsw i32 %3, -1, !dbg !4490
  store i32 %6, i32* %1, align 4, !dbg !4490
  %7 = load i64, i64* %0, align 8, !dbg !4492
  %8 = mul i64 %7, 10, !dbg !4492
  %9 = lshr i64 %8, 60, !dbg !4493
  %10 = trunc i64 %9 to i8, !dbg !4494
  %11 = or i8 %10, 48, !dbg !4494
  call void @llvm.dbg.value(metadata i8 %11, metadata !4484, metadata !DIExpression()), !dbg !4485
  %12 = and i64 %8, 1152921504606846974, !dbg !4495
  store i64 %12, i64* %0, align 8, !dbg !4495
  br label %13, !dbg !4496

13:                                               ; preds = %2, %5
  %14 = phi i8 [ %11, %5 ], [ 48, %2 ], !dbg !4497
  call void @llvm.dbg.value(metadata i8 %14, metadata !4484, metadata !DIExpression()), !dbg !4485
  ret i8 %14, !dbg !4498
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #12 !dbg !4499 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4503, metadata !DIExpression()), !dbg !4504
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4505

2:                                                ; preds = %1
  br label %4, !dbg !4506

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4508

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4509
  ret i32 %5, !dbg !4510
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !4511 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4513, metadata !DIExpression()), !dbg !4516
  call void @llvm.dbg.value(metadata i8* %1, metadata !4514, metadata !DIExpression()), !dbg !4516
  call void @llvm.dbg.value(metadata i8 1, metadata !4515, metadata !DIExpression()), !dbg !4516
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4517

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4515, metadata !DIExpression()), !dbg !4516
  call void @llvm.dbg.value(metadata i8* %5, metadata !4514, metadata !DIExpression()), !dbg !4516
  %6 = load i8, i8* %5, align 1, !dbg !4518
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4520

7:                                                ; preds = %4
  br label %11, !dbg !4521

8:                                                ; preds = %4
  br label %11, !dbg !4523

9:                                                ; preds = %4
  br label %11, !dbg !4524

10:                                               ; preds = %4
  br label %11, !dbg !4525

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !4526
  %14 = or i24 %13, %12, !dbg !4526
  store i24 %14, i24* %3, align 4, !dbg !4526
  call void @llvm.dbg.value(metadata i8 poison, metadata !4515, metadata !DIExpression()), !dbg !4516
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4514, metadata !DIExpression()), !dbg !4516
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4515, metadata !DIExpression()), !dbg !4516
  call void @llvm.dbg.value(metadata i8* %15, metadata !4514, metadata !DIExpression()), !dbg !4516
  %17 = load i24, i24* %3, align 4, !dbg !4527
  %18 = and i24 %17, 68, !dbg !4529
  %19 = icmp eq i24 %18, 68, !dbg !4529
  br i1 %19, label %20, label %22, !dbg !4529

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !4530
  store i24 %21, i24* %3, align 4, !dbg !4530
  br label %22, !dbg !4532

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !4533
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !4534 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4536, metadata !DIExpression()), !dbg !4540
  call void @llvm.dbg.value(metadata i8* %1, metadata !4537, metadata !DIExpression()), !dbg !4540
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4541
  %5 = load i24, i24* %4, align 4, !dbg !4542
  %6 = or i24 %5, 128, !dbg !4542
  store i24 %6, i24* %4, align 4, !dbg !4542
  call void @llvm.dbg.value(metadata i8* %1, metadata !4537, metadata !DIExpression()), !dbg !4540
  %7 = load i8, i8* %1, align 1, !dbg !4543
  %8 = icmp eq i8 %7, 42, !dbg !4545
  br i1 %8, label %9, label %12, !dbg !4546

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !4547
  store i24 %10, i24* %4, align 4, !dbg !4547
  call void @llvm.dbg.value(metadata i8* %1, metadata !4537, metadata !DIExpression()), !dbg !4540
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4549
  call void @llvm.dbg.value(metadata i8* %11, metadata !4537, metadata !DIExpression()), !dbg !4540
  store i8* %11, i8** %3, align 4, !dbg !4549
  br label %29, !dbg !4550

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4538, metadata !DIExpression()), !dbg !4540
  call void @llvm.dbg.value(metadata i8** %3, metadata !4537, metadata !DIExpression(DW_OP_deref)), !dbg !4540
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !4551
  call void @llvm.dbg.value(metadata i32 %13, metadata !4539, metadata !DIExpression()), !dbg !4540
  %14 = load i8*, i8** %3, align 4, !dbg !4552
  call void @llvm.dbg.value(metadata i8* %14, metadata !4537, metadata !DIExpression()), !dbg !4540
  %15 = icmp eq i8* %14, %1, !dbg !4554
  br i1 %15, label %29, label %16, !dbg !4555

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !4556
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4558
  store i32 %13, i32* %18, align 4, !dbg !4559
  %19 = lshr i32 %13, 31, !dbg !4560
  %20 = lshr i24 %17, 1, !dbg !4561
  %21 = and i24 %20, 1, !dbg !4561
  %22 = zext i24 %21 to i32, !dbg !4561
  %23 = or i32 %19, %22, !dbg !4561
  %24 = trunc i32 %23 to i24, !dbg !4561
  %25 = shl nuw nsw i24 %24, 1, !dbg !4561
  %26 = and i24 %17, -131, !dbg !4561
  %27 = or i24 %26, 128, !dbg !4561
  %28 = or i24 %25, %27, !dbg !4561
  store i24 %28, i24* %4, align 4, !dbg !4561
  br label %29, !dbg !4562

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !4540
  ret i8* %30, !dbg !4563
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !4564 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4566, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.value(metadata i8* %1, metadata !4567, metadata !DIExpression()), !dbg !4569
  %4 = load i8, i8* %1, align 1, !dbg !4570
  %5 = icmp eq i8 %4, 46, !dbg !4571
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !4572
  %7 = load i24, i24* %6, align 4, !dbg !4573
  %8 = select i1 %5, i24 512, i24 0, !dbg !4573
  %9 = and i24 %7, -513, !dbg !4573
  %10 = or i24 %9, %8, !dbg !4573
  store i24 %10, i24* %6, align 4, !dbg !4573
  br i1 %5, label %11, label %32, !dbg !4574

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4567, metadata !DIExpression()), !dbg !4569
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4575
  call void @llvm.dbg.value(metadata i8* %12, metadata !4567, metadata !DIExpression()), !dbg !4569
  store i8* %12, i8** %3, align 4, !dbg !4575
  %13 = load i8, i8* %12, align 1, !dbg !4576
  %14 = icmp eq i8 %13, 42, !dbg !4578
  br i1 %14, label %15, label %18, !dbg !4579

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !4580
  store i24 %16, i24* %6, align 4, !dbg !4580
  call void @llvm.dbg.value(metadata i8* %12, metadata !4567, metadata !DIExpression()), !dbg !4569
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4582
  call void @llvm.dbg.value(metadata i8* %17, metadata !4567, metadata !DIExpression()), !dbg !4569
  store i8* %17, i8** %3, align 4, !dbg !4582
  br label %32, !dbg !4583

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !4567, metadata !DIExpression(DW_OP_deref)), !dbg !4569
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !4584
  call void @llvm.dbg.value(metadata i32 %19, metadata !4568, metadata !DIExpression()), !dbg !4569
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4585
  store i32 %19, i32* %20, align 4, !dbg !4586
  %21 = lshr i32 %19, 31, !dbg !4587
  %22 = load i24, i24* %6, align 4, !dbg !4588
  %23 = lshr i24 %22, 1, !dbg !4588
  %24 = and i24 %23, 1, !dbg !4588
  %25 = zext i24 %24 to i32, !dbg !4588
  %26 = or i32 %21, %25, !dbg !4588
  %27 = trunc i32 %26 to i24, !dbg !4588
  %28 = shl nuw nsw i24 %27, 1, !dbg !4588
  %29 = and i24 %22, -3, !dbg !4588
  %30 = or i24 %28, %29, !dbg !4588
  store i24 %30, i24* %6, align 4, !dbg !4588
  %31 = load i8*, i8** %3, align 4, !dbg !4589
  call void @llvm.dbg.value(metadata i8* %31, metadata !4567, metadata !DIExpression()), !dbg !4569
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !4569
  ret i8* %33, !dbg !4590
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !4591 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4593, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i8* %1, metadata !4594, metadata !DIExpression()), !dbg !4595
  %3 = load i8, i8* %1, align 1, !dbg !4596
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !4597

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4598
  call void @llvm.dbg.value(metadata i8* %5, metadata !4594, metadata !DIExpression()), !dbg !4595
  %6 = load i8, i8* %5, align 1, !dbg !4601
  %7 = icmp eq i8 %6, 104, !dbg !4602
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4603
  %9 = load i24, i24* %8, align 4, !dbg !4603
  %10 = and i24 %9, -30721, !dbg !4603
  br i1 %7, label %11, label %14, !dbg !4604

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !4605
  store i24 %12, i24* %8, align 4, !dbg !4605
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4607
  call void @llvm.dbg.value(metadata i8* %13, metadata !4594, metadata !DIExpression()), !dbg !4595
  br label %56, !dbg !4608

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !4609
  store i24 %15, i24* %8, align 4, !dbg !4609
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4611
  call void @llvm.dbg.value(metadata i8* %17, metadata !4594, metadata !DIExpression()), !dbg !4595
  %18 = load i8, i8* %17, align 1, !dbg !4613
  %19 = icmp eq i8 %18, 108, !dbg !4614
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !4615
  %21 = load i24, i24* %20, align 4, !dbg !4615
  %22 = and i24 %21, -30721, !dbg !4615
  br i1 %19, label %23, label %26, !dbg !4616

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !4617
  store i24 %24, i24* %20, align 4, !dbg !4617
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4619
  call void @llvm.dbg.value(metadata i8* %25, metadata !4594, metadata !DIExpression()), !dbg !4595
  br label %56, !dbg !4620

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !4621
  store i24 %27, i24* %20, align 4, !dbg !4621
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !4623
  %30 = load i24, i24* %29, align 4, !dbg !4624
  %31 = and i24 %30, -30721, !dbg !4624
  %32 = or i24 %31, 10240, !dbg !4624
  store i24 %32, i24* %29, align 4, !dbg !4624
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4625
  call void @llvm.dbg.value(metadata i8* %33, metadata !4594, metadata !DIExpression()), !dbg !4595
  br label %56, !dbg !4626

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !4627
  %36 = load i24, i24* %35, align 4, !dbg !4628
  %37 = and i24 %36, -30721, !dbg !4628
  %38 = or i24 %37, 12288, !dbg !4628
  store i24 %38, i24* %35, align 4, !dbg !4628
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4629
  call void @llvm.dbg.value(metadata i8* %39, metadata !4594, metadata !DIExpression()), !dbg !4595
  br label %56, !dbg !4630

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !4631
  %42 = load i24, i24* %41, align 4, !dbg !4632
  %43 = and i24 %42, -30721, !dbg !4632
  %44 = or i24 %43, 14336, !dbg !4632
  store i24 %44, i24* %41, align 4, !dbg !4632
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4633
  call void @llvm.dbg.value(metadata i8* %45, metadata !4594, metadata !DIExpression()), !dbg !4595
  br label %56, !dbg !4634

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !4635
  %48 = load i24, i24* %47, align 4, !dbg !4636
  %49 = and i24 %48, -30723, !dbg !4636
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4637
  call void @llvm.dbg.value(metadata i8* %50, metadata !4594, metadata !DIExpression()), !dbg !4595
  %51 = or i24 %49, 16386, !dbg !4638
  store i24 %51, i24* %47, align 4, !dbg !4638
  br label %56, !dbg !4639

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !4640
  %54 = load i24, i24* %53, align 4, !dbg !4641
  %55 = and i24 %54, -30721, !dbg !4641
  store i24 %55, i24* %53, align 4, !dbg !4641
  br label %56, !dbg !4642

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !4594, metadata !DIExpression()), !dbg !4595
  ret i8* %57, !dbg !4643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !4644 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4646, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i8* %1, metadata !4647, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i8 0, metadata !4648, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i8* %1, metadata !4647, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4651
  %3 = load i8, i8* %1, align 1, !dbg !4652
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4653
  store i8 %3, i8* %4, align 1, !dbg !4654
  switch i8 %3, label %50 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %36
    i8 115, label %43
    i8 112, label %43
  ], !dbg !4655

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !4656

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4657
  %9 = load i24, i24* %8, align 4, !dbg !4657
  %10 = and i24 %9, -458753, !dbg !4657
  %11 = or i24 %10, %7, !dbg !4657
  call void @llvm.dbg.label(metadata !4649), !dbg !4658
  %12 = and i24 %9, 30720, !dbg !4659
  %13 = icmp eq i24 %12, 16384, !dbg !4659
  %14 = zext i1 %13 to i24, !dbg !4661
  %15 = or i24 %11, %14, !dbg !4661
  %16 = icmp eq i8 %3, 99, !dbg !4662
  br i1 %16, label %17, label %54, !dbg !4664

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !4665
  %19 = icmp ne i24 %18, 0, !dbg !4665
  call void @llvm.dbg.value(metadata i1 %19, metadata !4648, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4651
  br label %54, !dbg !4667

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !4668
  %22 = load i24, i24* %21, align 4, !dbg !4669
  %23 = and i8 %3, -33, !dbg !4670
  %24 = icmp eq i8 %23, 65, !dbg !4670
  %25 = select i1 %24, i24 32768, i24 0, !dbg !4670
  %26 = and i24 %22, -491521, !dbg !4671
  %27 = or i24 %26, %25, !dbg !4671
  %28 = or i24 %27, 262144, !dbg !4671
  br i1 %24, label %54, label %29, !dbg !4672

29:                                               ; preds = %20
  %30 = lshr i24 %22, 11, !dbg !4673
  %31 = trunc i24 %30 to i4, !dbg !4675
  switch i4 %31, label %34 [
    i4 3, label %32
    i4 0, label %54
    i4 -8, label %54
  ], !dbg !4675

32:                                               ; preds = %29
  %33 = and i24 %28, -227329, !dbg !4676
  br label %54, !dbg !4678

34:                                               ; preds = %29
  %35 = or i24 %27, 262145, !dbg !4679
  br label %54, !dbg !4682

36:                                               ; preds = %2
  %37 = bitcast %struct.conversion* %0 to i24*, !dbg !4683
  %38 = load i24, i24* %37, align 4, !dbg !4684
  %39 = and i24 %38, -458753, !dbg !4684
  %40 = or i24 %39, 196608, !dbg !4684
  %41 = and i24 %38, 30720, !dbg !4685
  %42 = icmp eq i24 %41, 16384, !dbg !4685
  br label %54, !dbg !4687

43:                                               ; preds = %2, %2
  %44 = bitcast %struct.conversion* %0 to i24*, !dbg !4688
  %45 = load i24, i24* %44, align 4, !dbg !4689
  %46 = and i24 %45, -458753, !dbg !4689
  %47 = or i24 %46, 196608, !dbg !4689
  %48 = and i24 %45, 30720, !dbg !4690
  %49 = icmp ne i24 %48, 0, !dbg !4690
  br label %54, !dbg !4692

50:                                               ; preds = %2
  %51 = bitcast %struct.conversion* %0 to i24*, !dbg !4693
  %52 = load i24, i24* %51, align 4, !dbg !4694
  %53 = or i24 %52, 1, !dbg !4694
  br label %54, !dbg !4695

54:                                               ; preds = %43, %36, %29, %29, %20, %32, %34, %17, %6, %50
  %55 = phi i24 [ %47, %43 ], [ %40, %36 ], [ %28, %29 ], [ %28, %29 ], [ %28, %20 ], [ %33, %32 ], [ %35, %34 ], [ %15, %17 ], [ %15, %6 ], [ %53, %50 ], !dbg !4696
  %56 = phi i1 [ %49, %43 ], [ %42, %36 ], [ false, %29 ], [ false, %29 ], [ true, %20 ], [ false, %32 ], [ false, %34 ], [ %19, %17 ], [ false, %6 ], [ false, %50 ]
  %57 = bitcast %struct.conversion* %0 to i24*, !dbg !4697
  %58 = zext i1 %56 to i32
  %59 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4698
  call void @llvm.dbg.value(metadata i8* %59, metadata !4647, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.value(metadata i8 poison, metadata !4648, metadata !DIExpression()), !dbg !4651
  %60 = lshr i24 %55, 1, !dbg !4696
  %61 = and i24 %60, 1, !dbg !4696
  %62 = zext i24 %61 to i32, !dbg !4696
  %63 = or i32 %62, %58, !dbg !4696
  %64 = trunc i32 %63 to i24, !dbg !4696
  %65 = shl nuw nsw i24 %64, 1, !dbg !4696
  %66 = and i24 %55, -3, !dbg !4696
  %67 = or i24 %65, %66, !dbg !4696
  store i24 %67, i24* %57, align 4, !dbg !4696
  ret i8* %59, !dbg !4699
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #11 !dbg !4700 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !4704, metadata !DIExpression()), !dbg !4707
  %2 = load i8*, i8** %0, align 4, !dbg !4708
  call void @llvm.dbg.value(metadata i8* %2, metadata !4705, metadata !DIExpression()), !dbg !4707
  call void @llvm.dbg.value(metadata i32 0, metadata !4706, metadata !DIExpression()), !dbg !4707
  %3 = load i8, i8* %2, align 1, !dbg !4709
  %4 = zext i8 %3 to i32, !dbg !4710
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #25, !dbg !4711
  %6 = icmp eq i32 %5, 0, !dbg !4712
  br i1 %6, label %19, label %7, !dbg !4712

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4706, metadata !DIExpression()), !dbg !4707
  call void @llvm.dbg.value(metadata i8* %10, metadata !4705, metadata !DIExpression()), !dbg !4707
  %11 = mul i32 %9, 10, !dbg !4713
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !4715
  call void @llvm.dbg.value(metadata i8* %12, metadata !4705, metadata !DIExpression()), !dbg !4707
  %13 = add i32 %11, -48, !dbg !4716
  %14 = add i32 %13, %8, !dbg !4717
  call void @llvm.dbg.value(metadata i32 %14, metadata !4706, metadata !DIExpression()), !dbg !4707
  %15 = load i8, i8* %12, align 1, !dbg !4709
  %16 = zext i8 %15 to i32, !dbg !4710
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #25, !dbg !4711
  %18 = icmp eq i32 %17, 0, !dbg !4712
  br i1 %18, label %19, label %7, !dbg !4712, !llvm.loop !4718

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !4707
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !4707
  store i8* %20, i8** %0, align 4, !dbg !4720
  ret i32 %21, !dbg !4721
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !4722 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !4724, !srcloc !4725
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !4726, !srcloc !4727
  tail call void asm sideeffect ".globl\09CONFIG_SENSOR\0A\09.equ\09CONFIG_SENSOR,1\0A\09.type\09CONFIG_SENSOR,%object", ""() #23, !dbg !4728, !srcloc !4729
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !4730, !srcloc !4731
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !4732, !srcloc !4733
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !4734, !srcloc !4735
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,86\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !4736, !srcloc !4737
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !4738, !srcloc !4739
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !4740, !srcloc !4741
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !4742, !srcloc !4743
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !4744, !srcloc !4745
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !4746, !srcloc !4747
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !4748, !srcloc !4749
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !4750, !srcloc !4751
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !4752, !srcloc !4753
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !4754, !srcloc !4755
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !4756, !srcloc !4757
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !4758, !srcloc !4759
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !4760, !srcloc !4761
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !4762, !srcloc !4763
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !4764, !srcloc !4765
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !4766, !srcloc !4767
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !4768, !srcloc !4769
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !4770, !srcloc !4771
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !4772, !srcloc !4773
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !4774, !srcloc !4775
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !4776, !srcloc !4777
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !4778, !srcloc !4779
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !4780, !srcloc !4781
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !4782, !srcloc !4783
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !4784, !srcloc !4785
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !4786, !srcloc !4787
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !4788, !srcloc !4789
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4790, !srcloc !4791
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !4792, !srcloc !4793
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4794, !srcloc !4795
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !4796, !srcloc !4797
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !4798, !srcloc !4799
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4800, !srcloc !4801
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !4802, !srcloc !4803
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !4804, !srcloc !4805
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !4806, !srcloc !4807
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !4808, !srcloc !4809
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !4810, !srcloc !4811
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !4812, !srcloc !4813
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4814, !srcloc !4815
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !4816, !srcloc !4817
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #23, !dbg !4818, !srcloc !4819
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !4820, !srcloc !4821
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !4822, !srcloc !4823
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !4824, !srcloc !4825
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !4826, !srcloc !4827
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !4828, !srcloc !4829
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !4830, !srcloc !4831
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !4832, !srcloc !4833
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !4834, !srcloc !4835
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !4836, !srcloc !4837
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !4838, !srcloc !4839
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !4840, !srcloc !4841
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !4842, !srcloc !4843
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !4844, !srcloc !4845
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !4846, !srcloc !4847
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !4848, !srcloc !4849
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !4850, !srcloc !4851
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !4852, !srcloc !4853
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !4854, !srcloc !4855
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !4856, !srcloc !4857
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !4858, !srcloc !4859
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !4860, !srcloc !4861
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !4862, !srcloc !4863
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !4864, !srcloc !4865
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !4866, !srcloc !4867
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !4868, !srcloc !4869
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !4870, !srcloc !4871
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !4872, !srcloc !4873
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !4874, !srcloc !4875
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !4876, !srcloc !4877
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !4878, !srcloc !4879
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !4880, !srcloc !4881
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !4882, !srcloc !4883
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !4884, !srcloc !4885
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !4886, !srcloc !4887
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_NEONKEY\0A\09.equ\09CONFIG_BOARD_96B_NEONKEY,1\0A\09.type\09CONFIG_BOARD_96B_NEONKEY,%object", ""() #23, !dbg !4888, !srcloc !4889
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !4890, !srcloc !4891
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !4892, !srcloc !4893
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !4894, !srcloc !4895
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !4896, !srcloc !4897
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !4898, !srcloc !4899
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F411XE\0A\09.equ\09CONFIG_SOC_STM32F411XE,1\0A\09.type\09CONFIG_SOC_STM32F411XE,%object", ""() #23, !dbg !4900, !srcloc !4901
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !4902, !srcloc !4903
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !4904, !srcloc !4905
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !4906, !srcloc !4907
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !4908, !srcloc !4909
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !4910, !srcloc !4911
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !4912, !srcloc !4913
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !4914, !srcloc !4915
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !4916, !srcloc !4917
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !4918, !srcloc !4919
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !4920, !srcloc !4921
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !4922, !srcloc !4923
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !4924, !srcloc !4925
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !4926, !srcloc !4927
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !4928, !srcloc !4929
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !4930, !srcloc !4931
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !4932, !srcloc !4933
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !4934, !srcloc !4935
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !4936, !srcloc !4937
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !4938, !srcloc !4939
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !4940, !srcloc !4941
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !4942, !srcloc !4943
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !4944, !srcloc !4945
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !4946, !srcloc !4947
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !4948, !srcloc !4949
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !4950, !srcloc !4951
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !4952, !srcloc !4953
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !4954, !srcloc !4955
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !4956, !srcloc !4957
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !4958, !srcloc !4959
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !4960, !srcloc !4961
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !4962, !srcloc !4963
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !4964, !srcloc !4965
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !4966, !srcloc !4967
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !4968, !srcloc !4969
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !4970, !srcloc !4971
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !4972, !srcloc !4973
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !4974, !srcloc !4975
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !4976, !srcloc !4977
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !4978, !srcloc !4979
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !4980, !srcloc !4981
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !4982, !srcloc !4983
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !4984, !srcloc !4985
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !4986, !srcloc !4987
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !4988, !srcloc !4989
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !4990, !srcloc !4991
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !4992, !srcloc !4993
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !4994, !srcloc !4995
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !4996, !srcloc !4997
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !4998, !srcloc !4999
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5000, !srcloc !5001
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5002, !srcloc !5003
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5004, !srcloc !5005
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5006, !srcloc !5007
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5008, !srcloc !5009
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5010, !srcloc !5011
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5012, !srcloc !5013
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5014, !srcloc !5015
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5016, !srcloc !5017
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5018, !srcloc !5019
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5020, !srcloc !5021
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5022, !srcloc !5023
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5024, !srcloc !5025
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5026, !srcloc !5027
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5028, !srcloc !5029
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5030, !srcloc !5031
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5032, !srcloc !5033
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5034, !srcloc !5035
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5036, !srcloc !5037
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5038, !srcloc !5039
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5040, !srcloc !5041
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5042, !srcloc !5043
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5044, !srcloc !5045
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5046, !srcloc !5047
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5048, !srcloc !5049
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5050, !srcloc !5051
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5052, !srcloc !5053
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5054, !srcloc !5055
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5056, !srcloc !5057
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5058, !srcloc !5059
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5060, !srcloc !5061
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5062, !srcloc !5063
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5064, !srcloc !5065
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5066, !srcloc !5067
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5068, !srcloc !5069
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5070, !srcloc !5071
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5072, !srcloc !5073
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5074, !srcloc !5075
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5076, !srcloc !5077
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5078, !srcloc !5079
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5080, !srcloc !5081
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5082, !srcloc !5083
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5084, !srcloc !5085
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5086, !srcloc !5087
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5088, !srcloc !5089
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5090, !srcloc !5091
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5092, !srcloc !5093
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5094, !srcloc !5095
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5096, !srcloc !5097
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5098, !srcloc !5099
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5100, !srcloc !5101
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5102, !srcloc !5103
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5104, !srcloc !5105
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5106, !srcloc !5107
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5108, !srcloc !5109
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5110, !srcloc !5111
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5112, !srcloc !5113
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5114, !srcloc !5115
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5116, !srcloc !5117
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5118, !srcloc !5119
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5120, !srcloc !5121
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5122, !srcloc !5123
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5124, !srcloc !5125
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5126, !srcloc !5127
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5128, !srcloc !5129
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5130, !srcloc !5131
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5132, !srcloc !5133
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5134, !srcloc !5135
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5136, !srcloc !5137
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5138, !srcloc !5139
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5140, !srcloc !5141
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5142, !srcloc !5143
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5144, !srcloc !5145
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5146, !srcloc !5147
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5148, !srcloc !5149
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5150, !srcloc !5151
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5152, !srcloc !5153
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5154, !srcloc !5155
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5156, !srcloc !5157
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5158, !srcloc !5159
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5160, !srcloc !5161
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5162, !srcloc !5163
  tail call void asm sideeffect ".globl\09CONFIG_SENSOR_INIT_PRIORITY\0A\09.equ\09CONFIG_SENSOR_INIT_PRIORITY,90\0A\09.type\09CONFIG_SENSOR_INIT_PRIORITY,%object", ""() #23, !dbg !5164, !srcloc !5165
  tail call void asm sideeffect ".globl\09CONFIG_TMP112_FULL_SCALE_RUNTIME\0A\09.equ\09CONFIG_TMP112_FULL_SCALE_RUNTIME,1\0A\09.type\09CONFIG_TMP112_FULL_SCALE_RUNTIME,%object", ""() #23, !dbg !5166, !srcloc !5167
  tail call void asm sideeffect ".globl\09CONFIG_TMP112_SAMPLING_FREQUENCY_RUNTIME\0A\09.equ\09CONFIG_TMP112_SAMPLING_FREQUENCY_RUNTIME,1\0A\09.type\09CONFIG_TMP112_SAMPLING_FREQUENCY_RUNTIME,%object", ""() #23, !dbg !5168, !srcloc !5169
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5170, !srcloc !5171
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5172, !srcloc !5173
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5174, !srcloc !5175
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5176, !srcloc !5177
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5178, !srcloc !5179
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5180, !srcloc !5181
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5182, !srcloc !5183
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5184, !srcloc !5185
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5186, !srcloc !5187
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5188, !srcloc !5189
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5190, !srcloc !5191
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5192, !srcloc !5193
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5194, !srcloc !5195
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5196, !srcloc !5197
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5198, !srcloc !5199
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5200, !srcloc !5201
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5202, !srcloc !5203
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5204, !srcloc !5205
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FP_SUPPORT\0A\09.equ\09CONFIG_CBPRINTF_FP_SUPPORT,1\0A\09.type\09CONFIG_CBPRINTF_FP_SUPPORT,%object", ""() #23, !dbg !5206, !srcloc !5207
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5208, !srcloc !5209
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5210, !srcloc !5211
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5212, !srcloc !5213
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5214, !srcloc !5215
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5216, !srcloc !5217
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5218, !srcloc !5219
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5220, !srcloc !5221
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5222, !srcloc !5223
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5224, !srcloc !5225
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5226, !srcloc !5227
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5228, !srcloc !5229
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5230, !srcloc !5231
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5232, !srcloc !5233
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5234, !srcloc !5235
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5236, !srcloc !5237
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5238, !srcloc !5239
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5240, !srcloc !5241
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5242, !srcloc !5243
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5244, !srcloc !5245
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5246, !srcloc !5247
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5248, !srcloc !5249
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5250, !srcloc !5251
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5252, !srcloc !5253
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5254, !srcloc !5255
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5256, !srcloc !5257
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5258, !srcloc !5259
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5260, !srcloc !5261
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5262, !srcloc !5263
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5264, !srcloc !5265
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5266, !srcloc !5267
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5268, !srcloc !5269
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5270, !srcloc !5271
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5272, !srcloc !5273
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5274, !srcloc !5275
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5276, !srcloc !5277
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5278, !srcloc !5279
  ret void, !dbg !5280
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5281 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5283, metadata !DIExpression()), !dbg !5285
  tail call fastcc void @LL_FLASH_EnableInstCache() #25, !dbg !5286
  tail call fastcc void @LL_FLASH_EnableDataCache() #25, !dbg !5287
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !5288, !srcloc !5297
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5288
  call void @llvm.dbg.value(metadata i32 %3, metadata !5294, metadata !DIExpression()) #23, !dbg !5298
  call void @llvm.dbg.value(metadata i32 undef, metadata !5295, metadata !DIExpression()) #23, !dbg !5298
  call void @llvm.dbg.value(metadata i32 %3, metadata !5284, metadata !DIExpression()), !dbg !5285
  call void @llvm.dbg.value(metadata i32 %3, metadata !5299, metadata !DIExpression()) #23, !dbg !5304
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !5306, !srcloc !5307
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5308
  ret i32 0, !dbg !5309
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #13 !dbg !5310 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5312
  %2 = or i32 %1, 512, !dbg !5312
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5312
  ret void, !dbg !5313
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #13 !dbg !5314 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5315
  %2 = or i32 %1, 1024, !dbg !5315
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5315
  ret void, !dbg !5316
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #12 !dbg !5317 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5319, metadata !DIExpression()), !dbg !5320
  ret i32 0, !dbg !5321
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5371, metadata !DIExpression()), !dbg !5373
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !5372, metadata !DIExpression()), !dbg !5373
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !5374
  ret void, !dbg !5375
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !5376 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5393, metadata !DIExpression()), !dbg !5396
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !5394, metadata !DIExpression()), !dbg !5396
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5397
  %4 = load i32, i32* %3, align 4, !dbg !5397
  call void @llvm.dbg.value(metadata i32 %4, metadata !5395, metadata !DIExpression()), !dbg !5396
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #25, !dbg !5398
  ret void, !dbg !5399
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !5400 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5404, metadata !DIExpression()), !dbg !5407
  call void @llvm.dbg.value(metadata i8* %0, metadata !5405, metadata !DIExpression()), !dbg !5407
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !5408
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !5408
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !5406, metadata !DIExpression()), !dbg !5409
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !5409
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !5410
  %5 = bitcast i8* %4 to i32*, !dbg !5410
  %6 = load i32, i32* %5, align 4, !dbg !5410
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !5411
  store i32 %6, i32* %7, align 4, !dbg !5412
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #25, !dbg !5413
  unreachable, !dbg !5414
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !5415 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5418, metadata !DIExpression()), !dbg !5419
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #25, !dbg !5420
  ret void, !dbg !5421
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5426, metadata !DIExpression()), !dbg !5427
  %2 = icmp sgt i32 %0, -1, !dbg !5428
  br i1 %2, label %3, label %8, !dbg !5430

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5431, !srcloc !5433
  %4 = and i32 %0, 31, !dbg !5434
  %5 = shl nuw i32 1, %4, !dbg !5435
  %6 = lshr i32 %0, 5, !dbg !5436
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !5437
  store volatile i32 %5, i32* %7, align 4, !dbg !5438
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5439, !srcloc !5440
  br label %8, !dbg !5441

8:                                                ; preds = %3, %1
  ret void, !dbg !5442
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !5443 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5445, metadata !DIExpression()), !dbg !5446
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #25, !dbg !5447
  ret void, !dbg !5448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5449 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5451, metadata !DIExpression()), !dbg !5452
  %2 = icmp sgt i32 %0, -1, !dbg !5453
  br i1 %2, label %3, label %8, !dbg !5455

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !5456
  %5 = shl nuw i32 1, %4, !dbg !5458
  %6 = lshr i32 %0, 5, !dbg !5459
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !5460
  store volatile i32 %5, i32* %7, align 4, !dbg !5461
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5462, !srcloc !5466
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5467, !srcloc !5470
  br label %8, !dbg !5471

8:                                                ; preds = %3, %1
  ret void, !dbg !5472
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #14 !dbg !5473 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5477, metadata !DIExpression()), !dbg !5478
  %2 = lshr i32 %0, 5, !dbg !5479
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !5480
  %4 = load volatile i32, i32* %3, align 4, !dbg !5480
  %5 = and i32 %0, 31, !dbg !5481
  %6 = shl nuw i32 1, %5, !dbg !5481
  %7 = and i32 %4, %6, !dbg !5482
  ret i32 %7, !dbg !5483
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !5484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5488, metadata !DIExpression()), !dbg !5491
  call void @llvm.dbg.value(metadata i32 %1, metadata !5489, metadata !DIExpression()), !dbg !5491
  call void @llvm.dbg.value(metadata i32 %2, metadata !5490, metadata !DIExpression()), !dbg !5491
  %4 = add i32 %1, 1, !dbg !5492
  call void @llvm.dbg.value(metadata i32 %4, metadata !5489, metadata !DIExpression()), !dbg !5491
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #25, !dbg !5495
  ret void, !dbg !5496
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5497 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5501, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.value(metadata i32 %1, metadata !5502, metadata !DIExpression()), !dbg !5503
  %3 = trunc i32 %1 to i8, !dbg !5504
  %4 = shl i8 %3, 4, !dbg !5504
  %5 = and i32 %0, 15, !dbg !5506
  %6 = add nsw i32 %5, -4, !dbg !5506
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !5506
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5506
  %9 = icmp slt i32 %0, 0, !dbg !5506
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !5506
  store volatile i8 %4, i8* %10, align 1, !dbg !5504
  ret void, !dbg !5507
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !5508 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5510, metadata !DIExpression()), !dbg !5511
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #24, !dbg !5512
  ret void, !dbg !5513
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !5514 {
  tail call void @z_SysNmiOnReset() #24, !dbg !5516
  tail call void @z_arm_int_exit() #24, !dbg !5517
  ret void, !dbg !5518
}

; Function Attrs: optsize
declare !dbg !5519 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !5520 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !5522 {
  tail call fastcc void @relocate_vector_table() #25, !dbg !5524
  tail call fastcc void @z_arm_floating_point_init() #25, !dbg !5525
  tail call void @z_bss_zero() #24, !dbg !5526
  tail call void @z_data_copy() #24, !dbg !5527
  tail call void @z_arm_interrupt_init() #24, !dbg !5528
  tail call void @z_cstart() #28, !dbg !5529
  unreachable, !dbg !5529
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !5530 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !5531
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5532, !srcloc !5535
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5536, !srcloc !5539
  ret void, !dbg !5540
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !5541 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !5542
  %2 = and i32 %1, -15728641, !dbg !5542
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !5542
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !5543, !srcloc !5550
  call void @llvm.dbg.value(metadata i32 %3, metadata !5548, metadata !DIExpression()) #23, !dbg !5551
  %4 = and i32 %3, -5, !dbg !5552
  call void @llvm.dbg.value(metadata i32 %4, metadata !5553, metadata !DIExpression()) #23, !dbg !5558
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5562, !srcloc !5539
  ret void, !dbg !5564
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !5565 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5568, metadata !DIExpression()), !dbg !5569
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5570
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !5571
  store i32 %0, i32* %3, align 4, !dbg !5572
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !5573
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !5574
  store i32 %4, i32* %5, align 4, !dbg !5575
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5576
  %7 = or i32 %6, 268435456, !dbg !5576
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5576
  call void @llvm.dbg.value(metadata i32 0, metadata !5577, metadata !DIExpression()) #23, !dbg !5580
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5582, !srcloc !5583
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5584
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !5585
  %10 = load i32, i32* %9, align 4, !dbg !5585
  ret i32 %10, !dbg !5586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #5 !dbg !5587 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5697, metadata !DIExpression()), !dbg !5705
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !5698, metadata !DIExpression()), !dbg !5705
  call void @llvm.dbg.value(metadata i8* %2, metadata !5699, metadata !DIExpression()), !dbg !5705
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !5700, metadata !DIExpression()), !dbg !5705
  call void @llvm.dbg.value(metadata i8* %4, metadata !5701, metadata !DIExpression()), !dbg !5705
  call void @llvm.dbg.value(metadata i8* %5, metadata !5702, metadata !DIExpression()), !dbg !5705
  call void @llvm.dbg.value(metadata i8* %6, metadata !5703, metadata !DIExpression()), !dbg !5705
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !5706
  call void @llvm.dbg.value(metadata i8* %8, metadata !5704, metadata !DIExpression()), !dbg !5705
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !5707
  %10 = bitcast i8* %9 to i32*, !dbg !5707
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !5708
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !5709
  %12 = bitcast i8* %8 to i32*, !dbg !5710
  store i32 %11, i32* %12, align 4, !dbg !5711
  %13 = ptrtoint i8* %4 to i32, !dbg !5712
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !5713
  %15 = bitcast i8* %14 to i32*, !dbg !5713
  store i32 %13, i32* %15, align 4, !dbg !5714
  %16 = ptrtoint i8* %5 to i32, !dbg !5715
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !5716
  %18 = bitcast i8* %17 to i32*, !dbg !5716
  store i32 %16, i32* %18, align 4, !dbg !5717
  %19 = ptrtoint i8* %6 to i32, !dbg !5718
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !5719
  %21 = bitcast i8* %20 to i32*, !dbg !5719
  store i32 %19, i32* %21, align 4, !dbg !5720
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !5721
  %23 = bitcast i8* %22 to i32*, !dbg !5721
  store i32 16777216, i32* %23, align 4, !dbg !5722
  %24 = ptrtoint i8* %8 to i32, !dbg !5723
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !5724
  store i32 %24, i32* %25, align 8, !dbg !5725
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !5726
  store i32 0, i32* %26, align 4, !dbg !5727
  ret void, !dbg !5728
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !5729 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5734, metadata !DIExpression()), !dbg !5740
  call void @llvm.dbg.value(metadata i32 %1, metadata !5735, metadata !DIExpression()), !dbg !5740
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5741
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !5736, metadata !DIExpression()), !dbg !5740
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !5742
  br i1 %4, label %19, label %5, !dbg !5744

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !5739, metadata !DIExpression()), !dbg !5740
  %6 = icmp eq i32 %0, -22, !dbg !5745
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !5745
  %8 = load i32, i32* %7, align 4, !dbg !5745
  br i1 %6, label %16, label %9, !dbg !5747

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !5745
  %11 = icmp ule i32 %10, %0, !dbg !5745
  %12 = icmp ugt i32 %8, %0, !dbg !5745
  %13 = and i1 %12, %11, !dbg !5745
  %14 = icmp ugt i32 %8, %1, !dbg !5745
  %15 = and i1 %14, %13, !dbg !5745
  br i1 %15, label %18, label %19, !dbg !5745

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !5745
  br i1 %17, label %18, label %19, !dbg !5747

18:                                               ; preds = %9, %16
  br label %19, !dbg !5748

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !5740
  ret i32 %20, !dbg !5750
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !5751 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5755, metadata !DIExpression()), !dbg !5758
  call void @llvm.dbg.value(metadata i8* %1, metadata !5756, metadata !DIExpression()), !dbg !5758
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !5757, metadata !DIExpression()), !dbg !5758
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5759
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #24, !dbg !5760
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !5761, !srcloc !5762
  unreachable, !dbg !5763
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !5764 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5782, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.value(metadata i32 %1, metadata !5783, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.value(metadata i32 %2, metadata !5784, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !5785, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.value(metadata i32 0, metadata !5786, metadata !DIExpression()), !dbg !5792
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5793
  %9 = and i32 %8, 511, !dbg !5794
  call void @llvm.dbg.value(metadata i32 %9, metadata !5787, metadata !DIExpression()), !dbg !5792
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5795
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5795
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !5796
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5796
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !5791, metadata !DIExpression()), !dbg !5797
  call void @llvm.dbg.value(metadata i32 0, metadata !5798, metadata !DIExpression()) #23, !dbg !5801
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5803, !srcloc !5804
  call void @llvm.dbg.value(metadata i8* %6, metadata !5789, metadata !DIExpression(DW_OP_deref)), !dbg !5792
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #25, !dbg !5805
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !5790, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.value(metadata i8* %5, metadata !5788, metadata !DIExpression(DW_OP_deref)), !dbg !5792
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #25, !dbg !5806
  call void @llvm.dbg.value(metadata i32 %12, metadata !5786, metadata !DIExpression()), !dbg !5792
  %13 = load i8, i8* %5, align 1, !dbg !5807, !range !5809
  call void @llvm.dbg.value(metadata i8 %13, metadata !5788, metadata !DIExpression()), !dbg !5792
  %14 = icmp eq i8 %13, 0, !dbg !5807
  br i1 %14, label %15, label %32, !dbg !5810

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !5811
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #24, !dbg !5812
  %18 = load i8, i8* %6, align 1, !dbg !5813, !range !5809
  call void @llvm.dbg.value(metadata i8 %18, metadata !5789, metadata !DIExpression()), !dbg !5792
  %19 = icmp eq i8 %18, 0, !dbg !5813
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !5815
  %21 = load i32, i32* %20, align 4, !dbg !5815
  br i1 %19, label %27, label %22, !dbg !5816

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !5817
  %24 = icmp eq i32 %23, 0, !dbg !5820
  br i1 %24, label %25, label %31, !dbg !5821

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !5822
  br label %29, !dbg !5824

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !5825
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !5815
  br label %31, !dbg !5827

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #24, !dbg !5827
  br label %32, !dbg !5828

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5828
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5828
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5828
  ret void, !dbg !5828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #5 !dbg !5829 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5834, metadata !DIExpression()), !dbg !5840
  call void @llvm.dbg.value(metadata i32 %1, metadata !5835, metadata !DIExpression()), !dbg !5840
  call void @llvm.dbg.value(metadata i32 %2, metadata !5836, metadata !DIExpression()), !dbg !5840
  call void @llvm.dbg.value(metadata i8* %3, metadata !5837, metadata !DIExpression()), !dbg !5840
  call void @llvm.dbg.value(metadata i8 0, metadata !5838, metadata !DIExpression()), !dbg !5840
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !5839, metadata !DIExpression()), !dbg !5840
  store i8 0, i8* %3, align 1, !dbg !5841
  %5 = icmp ult i32 %2, -16777216, !dbg !5842
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !5844
  br i1 %8, label %16, label %9, !dbg !5844

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !5845
  %11 = icmp eq i32 %10, 0, !dbg !5845
  br i1 %11, label %12, label %13, !dbg !5847

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !5839, metadata !DIExpression()), !dbg !5840
  store i8 1, i8* %3, align 1, !dbg !5850
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !5840
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !5839, metadata !DIExpression()), !dbg !5840
  br label %16, !dbg !5853

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !5840
  ret %struct.__esf* %17, !dbg !5854
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !5855 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5859, metadata !DIExpression()), !dbg !5863
  call void @llvm.dbg.value(metadata i32 %1, metadata !5860, metadata !DIExpression()), !dbg !5863
  call void @llvm.dbg.value(metadata i8* %2, metadata !5861, metadata !DIExpression()), !dbg !5863
  call void @llvm.dbg.value(metadata i32 0, metadata !5862, metadata !DIExpression()), !dbg !5863
  store i8 0, i8* %2, align 1, !dbg !5864
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !5865

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #25, !dbg !5866
  call void @llvm.dbg.value(metadata i32 %5, metadata !5862, metadata !DIExpression()), !dbg !5863
  br label %11, !dbg !5868

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !5869
  call void @llvm.dbg.value(metadata i32 %7, metadata !5862, metadata !DIExpression()), !dbg !5863
  br label %11, !dbg !5870

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !5871
  call void @llvm.dbg.value(metadata i32 0, metadata !5862, metadata !DIExpression()), !dbg !5863
  br label %11, !dbg !5872

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #25, !dbg !5873
  call void @llvm.dbg.value(metadata i32 0, metadata !5862, metadata !DIExpression()), !dbg !5863
  br label %11, !dbg !5874

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #25, !dbg !5875
  br label %11, !dbg !5876

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !5877
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !5878 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5882, metadata !DIExpression()), !dbg !5885
  call void @llvm.dbg.value(metadata i8* %1, metadata !5883, metadata !DIExpression()), !dbg !5885
  call void @llvm.dbg.value(metadata i32 0, metadata !5884, metadata !DIExpression()), !dbg !5885
  store i8 0, i8* %1, align 1, !dbg !5886
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5887
  %4 = and i32 %3, 2, !dbg !5889
  %5 = icmp eq i32 %4, 0, !dbg !5890
  br i1 %5, label %6, label %33, !dbg !5891

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5892
  %8 = icmp sgt i32 %7, -1, !dbg !5894
  br i1 %8, label %9, label %33, !dbg !5895

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5896
  %11 = and i32 %10, 1073741824, !dbg !5898
  %12 = icmp eq i32 %11, 0, !dbg !5899
  br i1 %12, label %33, label %13, !dbg !5900

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #25, !dbg !5901
  br i1 %14, label %15, label %18, !dbg !5904

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5905
  %17 = load i32, i32* %16, align 4, !dbg !5905
  call void @llvm.dbg.value(metadata i32 %17, metadata !5884, metadata !DIExpression()), !dbg !5885
  br label %33, !dbg !5907

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5908
  %20 = and i32 %19, 255, !dbg !5910
  %21 = icmp eq i32 %20, 0, !dbg !5911
  br i1 %21, label %24, label %22, !dbg !5912

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !5913
  call void @llvm.dbg.value(metadata i32 %23, metadata !5884, metadata !DIExpression()), !dbg !5885
  br label %33, !dbg !5915

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5916
  %26 = and i32 %25, 65280, !dbg !5918
  %27 = icmp eq i32 %26, 0, !dbg !5919
  br i1 %27, label %29, label %28, !dbg !5920

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !5921
  call void @llvm.dbg.value(metadata i32 0, metadata !5884, metadata !DIExpression()), !dbg !5885
  br label %33, !dbg !5923

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5924
  %31 = icmp ult i32 %30, 65536, !dbg !5926
  br i1 %31, label %33, label %32, !dbg !5927

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #25, !dbg !5928
  call void @llvm.dbg.value(metadata i32 0, metadata !5884, metadata !DIExpression()), !dbg !5885
  br label %33, !dbg !5930

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !5885
  call void @llvm.dbg.value(metadata i32 %34, metadata !5884, metadata !DIExpression()), !dbg !5885
  ret i32 %34, !dbg !5931
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !5932 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5934, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata i32 %1, metadata !5935, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata i8* %2, metadata !5936, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata i32 0, metadata !5937, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata i32 -22, metadata !5938, metadata !DIExpression()), !dbg !5947
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5948
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5950
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5952
  %7 = and i32 %6, 2, !dbg !5953
  %8 = icmp eq i32 %7, 0, !dbg !5954
  br i1 %8, label %19, label %9, !dbg !5955

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !5956
  call void @llvm.dbg.value(metadata i32 %10, metadata !5939, metadata !DIExpression()), !dbg !5957
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5958
  %12 = and i32 %11, 128, !dbg !5960
  %13 = icmp eq i32 %12, 0, !dbg !5961
  br i1 %13, label %19, label %14, !dbg !5962

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !5938, metadata !DIExpression()), !dbg !5947
  %15 = icmp eq i32 %1, 0, !dbg !5963
  br i1 %15, label %19, label %16, !dbg !5966

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5967
  %18 = and i32 %17, -129, !dbg !5967
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5967
  br label %19, !dbg !5969

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !5947
  call void @llvm.dbg.value(metadata i32 %20, metadata !5938, metadata !DIExpression()), !dbg !5947
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5970
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5972
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5974
  %24 = and i32 %23, 16, !dbg !5975
  %25 = icmp eq i32 %24, 0, !dbg !5975
  br i1 %25, label %26, label %30, !dbg !5976

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5977
  %28 = and i32 %27, 2, !dbg !5978
  %29 = icmp eq i32 %28, 0, !dbg !5978
  br i1 %29, label %39, label %30, !dbg !5979

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5980
  %32 = and i32 %31, 2048, !dbg !5981
  %33 = icmp eq i32 %32, 0, !dbg !5981
  br i1 %33, label %39, label %34, !dbg !5982

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !5983
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #24, !dbg !5984
  call void @llvm.dbg.value(metadata i32 %36, metadata !5942, metadata !DIExpression()), !dbg !5985
  %37 = icmp eq i32 %36, 0, !dbg !5986
  br i1 %37, label %39, label %38, !dbg !5988

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !5989, metadata !DIExpression()) #23, !dbg !5992
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #23, !dbg !5995, !srcloc !5996
  call void @llvm.dbg.value(metadata i32 2, metadata !5937, metadata !DIExpression()), !dbg !5947
  br label %39, !dbg !5997

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !5947
  call void @llvm.dbg.value(metadata i32 %40, metadata !5937, metadata !DIExpression()), !dbg !5947
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5998
  %42 = and i32 %41, 32, !dbg !6000
  %43 = icmp eq i32 %42, 0, !dbg !6001
  br i1 %43, label %47, label %44, !dbg !6002

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6003
  %46 = and i32 %45, -8193, !dbg !6003
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6003
  br label %47, !dbg !6005

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6006
  %49 = or i32 %48, 255, !dbg !6006
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6006
  store i8 0, i8* %2, align 1, !dbg !6007
  ret i32 %40, !dbg !6008
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !6009 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6013, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i32 %0, metadata !6014, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i8* %1, metadata !6015, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata i32 0, metadata !6016, metadata !DIExpression()), !dbg !6020
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6021
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6023
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6025
  %6 = and i32 %5, 512, !dbg !6026
  %7 = icmp eq i32 %6, 0, !dbg !6026
  br i1 %7, label %18, label %8, !dbg !6027

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6028
  call void @llvm.dbg.value(metadata i32 %9, metadata !6017, metadata !DIExpression()), !dbg !6029
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6030
  %11 = and i32 %10, 32768, !dbg !6032
  %12 = icmp ne i32 %11, 0, !dbg !6033
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6034
  br i1 %14, label %15, label %18, !dbg !6034

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6035
  %17 = and i32 %16, -32769, !dbg !6035
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6035
  br label %18, !dbg !6039

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6040
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6042
  %21 = and i32 %20, 256, !dbg !6044
  %22 = icmp eq i32 %21, 0, !dbg !6045
  br i1 %22, label %23, label %25, !dbg !6046

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6047
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6049
  %27 = or i32 %26, 65280, !dbg !6049
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6049
  store i8 0, i8* %1, align 1, !dbg !6050
  ret void, !dbg !6051
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #13 !dbg !6052 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6058, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata i32 0, metadata !6059, metadata !DIExpression()), !dbg !6060
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6061
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6063
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6065
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6067
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6069
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6071
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6073
  %8 = or i32 %7, -65536, !dbg !6073
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6073
  ret void, !dbg !6074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #5 !dbg !6075 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6079, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i8* %0, metadata !6080, metadata !DIExpression()), !dbg !6081
  store i8 0, i8* %0, align 1, !dbg !6082
  ret void, !dbg !6083
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6084 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6088, metadata !DIExpression()), !dbg !6091
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6092
  %3 = load i32, i32* %2, align 4, !dbg !6092
  %4 = inttoptr i32 %3 to i16*, !dbg !6093
  call void @llvm.dbg.value(metadata i16* %4, metadata !6089, metadata !DIExpression()), !dbg !6091
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6094
  %6 = or i32 %5, 256, !dbg !6094
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6094
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6095, !srcloc !6098
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6099, !srcloc !6102
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6103
  %8 = load i16, i16* %7, align 2, !dbg !6104
  call void @llvm.dbg.value(metadata i16 %8, metadata !6090, metadata !DIExpression()), !dbg !6091
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6105
  %10 = and i32 %9, -257, !dbg !6105
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6105
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6106, !srcloc !6098
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6108, !srcloc !6102
  %11 = icmp eq i16 %8, -8446, !dbg !6110
  ret i1 %11, !dbg !6112
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #13 !dbg !6113 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6114
  %2 = or i32 %1, 16, !dbg !6114
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6114
  ret void, !dbg !6115
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #13 !dbg !6116 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6119, metadata !DIExpression()), !dbg !6120
  br label %1, !dbg !6121

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6119, metadata !DIExpression()), !dbg !6120
  tail call fastcc void @__NVIC_SetPriority.14(i32 noundef %2) #25, !dbg !6123
  %3 = add nuw nsw i32 %2, 1, !dbg !6126
  call void @llvm.dbg.value(metadata i32 %3, metadata !6119, metadata !DIExpression()), !dbg !6120
  %4 = icmp eq i32 %3, 86, !dbg !6127
  br i1 %4, label %5, label %1, !dbg !6121, !llvm.loop !6128

5:                                                ; preds = %1
  ret void, !dbg !6130
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.14(i32 noundef %0) unnamed_addr #13 !dbg !6131 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6133, metadata !DIExpression()), !dbg !6135
  call void @llvm.dbg.value(metadata i32 1, metadata !6134, metadata !DIExpression()), !dbg !6135
  %2 = and i32 %0, 15, !dbg !6136
  %3 = add nsw i32 %2, -4, !dbg !6136
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6136
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6136
  %6 = icmp slt i32 %0, 0, !dbg !6136
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6136
  store volatile i8 16, i8* %7, align 1, !dbg !6137
  ret void, !dbg !6139
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6140 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6246, metadata !DIExpression()), !dbg !6247
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6248
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6250
  br i1 %3, label %4, label %12, !dbg !6251

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !6252, !srcloc !6264
  call void @llvm.dbg.value(metadata i32 %5, metadata !6255, metadata !DIExpression()) #23, !dbg !6265
  %6 = icmp eq i32 %5, 0, !dbg !6266
  br i1 %6, label %12, label %7, !dbg !6267

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6268
  %9 = or i32 %8, 268435456, !dbg !6268
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6268
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6270
  %11 = and i32 %10, -32769, !dbg !6270
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6270
  br label %12, !dbg !6271

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !6272
  ret void, !dbg !6273
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !6274 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #24, !dbg !6275
  ret void, !dbg !6276
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !205 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !329, metadata !DIExpression()), !dbg !6277
  call void @llvm.dbg.value(metadata i8 0, metadata !330, metadata !DIExpression()), !dbg !6277
  call void @llvm.dbg.value(metadata i32 64, metadata !332, metadata !DIExpression()), !dbg !6277
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !6278
  %3 = load i32, i32* %2, align 4, !dbg !6278
  %4 = add i32 %3, -64, !dbg !6280
  call void @llvm.dbg.value(metadata i32 %4, metadata !331, metadata !DIExpression()), !dbg !6277
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !6281
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !6282
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !6283
  call void @llvm.dbg.value(metadata i8 1, metadata !330, metadata !DIExpression()), !dbg !6277
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #24, !dbg !6284
  ret void, !dbg !6285
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !6286 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6287
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6288, !srcloc !6291
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6292, !srcloc !6295
  ret void, !dbg !6296
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !6297 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !6298, !srcloc !6301
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6302
  ret void, !dbg !6303
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !6304 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6319, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i8 %1, metadata !6320, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %2, metadata !6321, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %3, metadata !6322, metadata !DIExpression()), !dbg !6323
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !6324
  ret void, !dbg !6326
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !6327 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6332, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i8 %1, metadata !6333, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i32 undef, metadata !6334, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i32 undef, metadata !6335, metadata !DIExpression()), !dbg !6337
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6338
  call void @llvm.dbg.value(metadata i8 %3, metadata !6336, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6337
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #25, !dbg !6339
  call void @llvm.dbg.value(metadata i32 %4, metadata !6336, metadata !DIExpression()), !dbg !6337
  %5 = trunc i32 %4 to i8, !dbg !6340
  store i8 %5, i8* @static_regions_num, align 1, !dbg !6341
  ret void, !dbg !6342
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #15 !dbg !6343 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6347, metadata !DIExpression()), !dbg !6353
  call void @llvm.dbg.value(metadata i8 %1, metadata !6348, metadata !DIExpression()), !dbg !6353
  call void @llvm.dbg.value(metadata i8 %2, metadata !6349, metadata !DIExpression()), !dbg !6353
  call void @llvm.dbg.value(metadata i1 %3, metadata !6350, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6353
  %5 = zext i8 %2 to i32, !dbg !6354
  call void @llvm.dbg.value(metadata i32 %5, metadata !6352, metadata !DIExpression()), !dbg !6353
  call void @llvm.dbg.value(metadata i32 0, metadata !6351, metadata !DIExpression()), !dbg !6353
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !6352, metadata !DIExpression()), !dbg !6353
  call void @llvm.dbg.value(metadata i32 0, metadata !6351, metadata !DIExpression()), !dbg !6353
  %7 = icmp eq i8 %1, 0, !dbg !6355
  br i1 %7, label %29, label %8, !dbg !6358

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6352, metadata !DIExpression()), !dbg !6353
  call void @llvm.dbg.value(metadata i32 %10, metadata !6351, metadata !DIExpression()), !dbg !6353
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !6359
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !6362
  %13 = load i32, i32* %12, align 4, !dbg !6362
  %14 = icmp eq i32 %13, 0, !dbg !6363
  br i1 %14, label %25, label %15, !dbg !6364

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !6365

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !6367
  %18 = icmp eq i32 %17, 0, !dbg !6367
  br i1 %18, label %29, label %19, !dbg !6368

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !6369
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !6370
  call void @llvm.dbg.value(metadata i32 %21, metadata !6352, metadata !DIExpression()), !dbg !6353
  %22 = icmp eq i32 %21, -22, !dbg !6371
  br i1 %22, label %29, label %23, !dbg !6373

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !6374
  call void @llvm.dbg.value(metadata i32 %24, metadata !6352, metadata !DIExpression()), !dbg !6353
  br label %25, !dbg !6375

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !6353
  call void @llvm.dbg.value(metadata i32 %26, metadata !6352, metadata !DIExpression()), !dbg !6353
  %27 = add nuw nsw i32 %10, 1, !dbg !6376
  call void @llvm.dbg.value(metadata i32 %27, metadata !6351, metadata !DIExpression()), !dbg !6353
  %28 = icmp eq i32 %27, %6, !dbg !6355
  br i1 %28, label %29, label %8, !dbg !6358, !llvm.loop !6377

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !6353
  ret i32 %30, !dbg !6379
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !6380 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6384, metadata !DIExpression()), !dbg !6386
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !6387
  %3 = load i32, i32* %2, align 4, !dbg !6387
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !6388, !range !6389
  %5 = icmp ult i32 %4, 2, !dbg !6388
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !6390
  br i1 %7, label %8, label %15, !dbg !6390

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !6391
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !6392
  %11 = load i32, i32* %10, align 4, !dbg !6392
  %12 = and i32 %11, %9, !dbg !6393
  %13 = icmp eq i32 %12, 0, !dbg !6394
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !6385, metadata !DIExpression()), !dbg !6386
  ret i32 %16, !dbg !6395
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #15 !dbg !6396 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !6400, metadata !DIExpression()), !dbg !6403
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !6401, metadata !DIExpression()), !dbg !6403
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !6404
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !6404
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !6402, metadata !DIExpression()), !dbg !6405
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !6406
  %6 = load i32, i32* %5, align 4, !dbg !6406
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !6407
  store i32 %6, i32* %7, align 4, !dbg !6408
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !6409
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !6410
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !6411
  %11 = load i32, i32* %10, align 4, !dbg !6411
  call fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.1* noundef nonnull %8, %union.anon.1* noundef nonnull %9, i32 noundef %11) #25, !dbg !6412
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #25, !dbg !6413
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !6414
  ret i32 %12, !dbg !6415
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.1* nocapture noundef writeonly %0, %union.anon.1* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !6416 {
  call void @llvm.dbg.value(metadata %union.anon.1* %0, metadata !6423, metadata !DIExpression()), !dbg !6427
  call void @llvm.dbg.value(metadata %union.anon.1* %1, metadata !6424, metadata !DIExpression()), !dbg !6427
  call void @llvm.dbg.value(metadata i32 undef, metadata !6425, metadata !DIExpression()), !dbg !6427
  call void @llvm.dbg.value(metadata i32 %2, metadata !6426, metadata !DIExpression()), !dbg !6427
  %4 = getelementptr inbounds %union.anon.1, %union.anon.1* %1, i32 0, i32 0, !dbg !6428
  %5 = load i32, i32* %4, align 4, !dbg !6428
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #25, !dbg !6429
  %7 = or i32 %6, %5, !dbg !6430
  %8 = getelementptr inbounds %union.anon.1, %union.anon.1* %0, i32 0, i32 0, !dbg !6431
  store i32 %7, i32* %8, align 4, !dbg !6432
  ret void, !dbg !6433
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !6434 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6438, metadata !DIExpression()), !dbg !6440
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6439, metadata !DIExpression()), !dbg !6440
  %3 = zext i8 %0 to i32, !dbg !6441
  %4 = icmp ugt i8 %0, 7, !dbg !6443
  br i1 %4, label %6, label %5, !dbg !6444

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #25, !dbg !6445
  br label %6, !dbg !6446

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !6440
  ret i32 %7, !dbg !6447
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !6448 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6452, metadata !DIExpression()), !dbg !6454
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6453, metadata !DIExpression()), !dbg !6454
  tail call fastcc void @set_region_number(i32 noundef %0) #25, !dbg !6455
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !6456
  %4 = load i32, i32* %3, align 4, !dbg !6456
  %5 = and i32 %4, -32, !dbg !6457
  %6 = or i32 %5, %0, !dbg !6458
  %7 = or i32 %6, 16, !dbg !6458
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !6459
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !6460
  %9 = load i32, i32* %8, align 4, !dbg !6460
  %10 = or i32 %9, 1, !dbg !6461
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6462
  ret void, !dbg !6463
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #13 !dbg !6464 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6467, metadata !DIExpression()), !dbg !6468
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6469
  ret void, !dbg !6470
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !6471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6475, metadata !DIExpression()), !dbg !6476
  %2 = icmp ult i32 %0, 33, !dbg !6477
  br i1 %2, label %11, label %3, !dbg !6479

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !6480
  br i1 %4, label %11, label %5, !dbg !6482

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !6483
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !6484, !range !6389
  %8 = mul nsw i32 %7, -2, !dbg !6485
  %9 = add nsw i32 %8, 62, !dbg !6485
  %10 = and i32 %9, 62, !dbg !6486
  br label %11, !dbg !6487

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !6476
  ret i32 %12, !dbg !6488
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #15 !dbg !6489 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6493, metadata !DIExpression()), !dbg !6495
  call void @llvm.dbg.value(metadata i8 %1, metadata !6494, metadata !DIExpression()), !dbg !6495
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !6496
  ret void, !dbg !6498
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !6499 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6503, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.value(metadata i8 %1, metadata !6504, metadata !DIExpression()), !dbg !6510
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6511
  call void @llvm.dbg.value(metadata i8 %3, metadata !6505, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6510
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #25, !dbg !6512
  call void @llvm.dbg.value(metadata i32 %4, metadata !6505, metadata !DIExpression()), !dbg !6510
  %5 = icmp ne i32 %4, -22, !dbg !6513
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !6514
  call void @llvm.dbg.value(metadata i32 %4, metadata !6506, metadata !DIExpression()), !dbg !6515
  br i1 %7, label %8, label %12, !dbg !6514

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6506, metadata !DIExpression()), !dbg !6515
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #25, !dbg !6516
  %10 = add i32 %9, 1, !dbg !6519
  call void @llvm.dbg.value(metadata i32 %10, metadata !6506, metadata !DIExpression()), !dbg !6515
  %11 = icmp eq i32 %10, 8, !dbg !6520
  br i1 %11, label %12, label %8, !dbg !6521, !llvm.loop !6522

12:                                               ; preds = %8, %2
  ret void, !dbg !6524
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #13 !dbg !6525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6528, metadata !DIExpression()), !dbg !6529
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6530
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6531
  ret void, !dbg !6532
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !6533 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !6538
  %2 = icmp ugt i32 %1, 8, !dbg !6540
  br i1 %2, label %14, label %3, !dbg !6541

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #25, !dbg !6542
  call void @llvm.dbg.value(metadata i32 0, metadata !6537, metadata !DIExpression()), !dbg !6543
  %4 = icmp eq i32 %1, 0, !dbg !6544
  br i1 %4, label %12, label %5, !dbg !6547

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !6547

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6537, metadata !DIExpression()), !dbg !6543
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !6548
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #25, !dbg !6550
  %10 = add nuw i32 %8, 1, !dbg !6551
  call void @llvm.dbg.value(metadata i32 %10, metadata !6537, metadata !DIExpression()), !dbg !6543
  %11 = icmp eq i32 %10, %1, !dbg !6544
  br i1 %11, label %12, label %7, !dbg !6547, !llvm.loop !6552

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !6554
  store i8 %13, i8* @static_regions_num, align 1, !dbg !6555
  tail call void @arm_core_mpu_enable() #25, !dbg !6556
  br label %14, !dbg !6557

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !6543
  ret i32 %15, !dbg !6558
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6559 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6566, metadata !DIExpression()), !dbg !6569
  call void @llvm.dbg.value(metadata i8* %1, metadata !6567, metadata !DIExpression()), !dbg !6569
  call void @llvm.dbg.value(metadata i8* %0, metadata !6568, metadata !DIExpression()), !dbg !6569
  %3 = load i8, i8* %1, align 1, !dbg !6570
  %4 = icmp eq i8 %3, 0, !dbg !6571
  br i1 %4, label %13, label %5, !dbg !6572

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !6566, metadata !DIExpression()), !dbg !6569
  call void @llvm.dbg.value(metadata i8* %8, metadata !6567, metadata !DIExpression()), !dbg !6569
  store i8 %6, i8* %7, align 1, !dbg !6573
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6575
  call void @llvm.dbg.value(metadata i8* %9, metadata !6566, metadata !DIExpression()), !dbg !6569
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6576
  call void @llvm.dbg.value(metadata i8* %10, metadata !6567, metadata !DIExpression()), !dbg !6569
  %11 = load i8, i8* %10, align 1, !dbg !6570
  %12 = icmp eq i8 %11, 0, !dbg !6571
  br i1 %12, label %13, label %5, !dbg !6572, !llvm.loop !6577

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !6579
  ret i8* %0, !dbg !6580
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6581 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6585, metadata !DIExpression()), !dbg !6589
  call void @llvm.dbg.value(metadata i8* %1, metadata !6586, metadata !DIExpression()), !dbg !6589
  call void @llvm.dbg.value(metadata i32 %2, metadata !6587, metadata !DIExpression()), !dbg !6589
  call void @llvm.dbg.value(metadata i8* %0, metadata !6588, metadata !DIExpression()), !dbg !6589
  %4 = icmp eq i32 %2, 0, !dbg !6590
  br i1 %4, label %22, label %5, !dbg !6591

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6585, metadata !DIExpression()), !dbg !6589
  call void @llvm.dbg.value(metadata i32 %7, metadata !6587, metadata !DIExpression()), !dbg !6589
  call void @llvm.dbg.value(metadata i8* %8, metadata !6586, metadata !DIExpression()), !dbg !6589
  %9 = load i8, i8* %8, align 1, !dbg !6592
  %10 = icmp eq i8 %9, 0, !dbg !6593
  br i1 %10, label %16, label %11, !dbg !6594

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !6595
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6597
  call void @llvm.dbg.value(metadata i8* %12, metadata !6586, metadata !DIExpression()), !dbg !6589
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6598
  call void @llvm.dbg.value(metadata i8* %13, metadata !6585, metadata !DIExpression()), !dbg !6589
  %14 = add i32 %7, -1, !dbg !6599
  call void @llvm.dbg.value(metadata i32 %14, metadata !6587, metadata !DIExpression()), !dbg !6589
  %15 = icmp eq i32 %14, 0, !dbg !6590
  br i1 %15, label %22, label %5, !dbg !6591, !llvm.loop !6600

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !6585, metadata !DIExpression()), !dbg !6589
  call void @llvm.dbg.value(metadata i32 %18, metadata !6587, metadata !DIExpression()), !dbg !6589
  store i8 0, i8* %17, align 1, !dbg !6602
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6604
  call void @llvm.dbg.value(metadata i8* %19, metadata !6585, metadata !DIExpression()), !dbg !6589
  %20 = add i32 %18, -1, !dbg !6605
  call void @llvm.dbg.value(metadata i32 %20, metadata !6587, metadata !DIExpression()), !dbg !6589
  %21 = icmp eq i32 %20, 0, !dbg !6606
  br i1 %21, label %22, label %16, !dbg !6607, !llvm.loop !6608

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !6610
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6611 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6615, metadata !DIExpression()), !dbg !6618
  call void @llvm.dbg.value(metadata i32 %1, metadata !6616, metadata !DIExpression()), !dbg !6618
  call void @llvm.dbg.value(metadata i32 %1, metadata !6617, metadata !DIExpression()), !dbg !6618
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6619

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !6615, metadata !DIExpression()), !dbg !6618
  %6 = load i8, i8* %5, align 1, !dbg !6620
  %7 = icmp eq i8 %6, %3, !dbg !6621
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !6622
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6623
  call void @llvm.dbg.value(metadata i8* %10, metadata !6615, metadata !DIExpression()), !dbg !6618
  br i1 %9, label %11, label %4, !dbg !6622, !llvm.loop !6625

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !6627
  ret i8* %12, !dbg !6628
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6629 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6631, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.value(metadata i32 %1, metadata !6632, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.value(metadata i8* null, metadata !6633, metadata !DIExpression()), !dbg !6634
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6635

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !6634
  call void @llvm.dbg.value(metadata i8* %6, metadata !6633, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.value(metadata i8* %5, metadata !6631, metadata !DIExpression()), !dbg !6634
  %7 = load i8, i8* %5, align 1, !dbg !6636
  %8 = icmp eq i8 %7, %3, !dbg !6639
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !6640
  call void @llvm.dbg.value(metadata i8* %9, metadata !6633, metadata !DIExpression()), !dbg !6634
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6641
  call void @llvm.dbg.value(metadata i8* %10, metadata !6631, metadata !DIExpression()), !dbg !6634
  %11 = icmp eq i8 %7, 0, !dbg !6642
  br i1 %11, label %12, label %4, !dbg !6642, !llvm.loop !6643

12:                                               ; preds = %4
  ret i8* %9, !dbg !6645
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #18 !dbg !6646 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6650, metadata !DIExpression()), !dbg !6652
  call void @llvm.dbg.value(metadata i32 0, metadata !6651, metadata !DIExpression()), !dbg !6652
  %2 = load i8, i8* %0, align 1, !dbg !6653
  %3 = icmp eq i8 %2, 0, !dbg !6654
  br i1 %3, label %11, label %4, !dbg !6655

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6651, metadata !DIExpression()), !dbg !6652
  call void @llvm.dbg.value(metadata i8* %6, metadata !6650, metadata !DIExpression()), !dbg !6652
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6656
  call void @llvm.dbg.value(metadata i8* %7, metadata !6650, metadata !DIExpression()), !dbg !6652
  %8 = add i32 %5, 1, !dbg !6658
  call void @llvm.dbg.value(metadata i32 %8, metadata !6651, metadata !DIExpression()), !dbg !6652
  %9 = load i8, i8* %7, align 1, !dbg !6653
  %10 = icmp eq i8 %9, 0, !dbg !6654
  br i1 %10, label %11, label %4, !dbg !6655, !llvm.loop !6659

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !6652
  ret i32 %12, !dbg !6661
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6662 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6666, metadata !DIExpression()), !dbg !6669
  call void @llvm.dbg.value(metadata i32 %1, metadata !6667, metadata !DIExpression()), !dbg !6669
  call void @llvm.dbg.value(metadata i32 0, metadata !6668, metadata !DIExpression()), !dbg !6669
  %3 = load i8, i8* %0, align 1, !dbg !6670
  %4 = icmp ne i8 %3, 0, !dbg !6671
  %5 = icmp ne i32 %1, 0, !dbg !6672
  %6 = and i1 %4, %5, !dbg !6672
  br i1 %6, label %7, label %16, !dbg !6673

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6668, metadata !DIExpression()), !dbg !6669
  call void @llvm.dbg.value(metadata i8* %9, metadata !6666, metadata !DIExpression()), !dbg !6669
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6674
  call void @llvm.dbg.value(metadata i8* %10, metadata !6666, metadata !DIExpression()), !dbg !6669
  %11 = add nuw i32 %8, 1, !dbg !6676
  call void @llvm.dbg.value(metadata i32 %11, metadata !6668, metadata !DIExpression()), !dbg !6669
  %12 = load i8, i8* %10, align 1, !dbg !6670
  %13 = icmp ne i8 %12, 0, !dbg !6671
  %14 = icmp ult i32 %11, %1, !dbg !6672
  %15 = select i1 %13, i1 %14, i1 false, !dbg !6672
  br i1 %15, label %7, label %16, !dbg !6673, !llvm.loop !6677

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !6669
  ret i32 %17, !dbg !6679
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !6680 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6684, metadata !DIExpression()), !dbg !6686
  call void @llvm.dbg.value(metadata i8* %1, metadata !6685, metadata !DIExpression()), !dbg !6686
  %3 = load i8, i8* %0, align 1, !dbg !6687
  %4 = load i8, i8* %1, align 1, !dbg !6688
  %5 = icmp ne i8 %3, %4, !dbg !6689
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !6690
  br i1 %7, label %18, label %8, !dbg !6690

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6685, metadata !DIExpression()), !dbg !6686
  call void @llvm.dbg.value(metadata i8* %10, metadata !6684, metadata !DIExpression()), !dbg !6686
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6691
  call void @llvm.dbg.value(metadata i8* %11, metadata !6684, metadata !DIExpression()), !dbg !6686
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6693
  call void @llvm.dbg.value(metadata i8* %12, metadata !6685, metadata !DIExpression()), !dbg !6686
  %13 = load i8, i8* %11, align 1, !dbg !6687
  %14 = load i8, i8* %12, align 1, !dbg !6688
  %15 = icmp ne i8 %13, %14, !dbg !6689
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !6690
  br i1 %17, label %18, label %8, !dbg !6690, !llvm.loop !6694

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !6687
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !6688
  %21 = zext i8 %19 to i32, !dbg !6697
  %22 = zext i8 %20 to i32, !dbg !6698
  %23 = sub nsw i32 %21, %22, !dbg !6699
  ret i32 %23, !dbg !6700
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6701 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6705, metadata !DIExpression()), !dbg !6708
  call void @llvm.dbg.value(metadata i8* %1, metadata !6706, metadata !DIExpression()), !dbg !6708
  call void @llvm.dbg.value(metadata i32 %2, metadata !6707, metadata !DIExpression()), !dbg !6708
  %4 = icmp eq i32 %2, 0, !dbg !6709
  br i1 %4, label %23, label %5, !dbg !6709

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !6707, metadata !DIExpression()), !dbg !6708
  call void @llvm.dbg.value(metadata i8* %7, metadata !6706, metadata !DIExpression()), !dbg !6708
  call void @llvm.dbg.value(metadata i8* %8, metadata !6705, metadata !DIExpression()), !dbg !6708
  %9 = load i8, i8* %8, align 1, !dbg !6710
  %10 = load i8, i8* %7, align 1, !dbg !6711
  %11 = icmp ne i8 %9, %10, !dbg !6712
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !6713
  br i1 %13, label %19, label %14, !dbg !6713

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6714
  call void @llvm.dbg.value(metadata i8* %15, metadata !6705, metadata !DIExpression()), !dbg !6708
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6716
  call void @llvm.dbg.value(metadata i8* %16, metadata !6706, metadata !DIExpression()), !dbg !6708
  %17 = add i32 %6, -1, !dbg !6717
  call void @llvm.dbg.value(metadata i32 %17, metadata !6707, metadata !DIExpression()), !dbg !6708
  %18 = icmp eq i32 %17, 0, !dbg !6709
  br i1 %18, label %23, label %5, !dbg !6709, !llvm.loop !6718

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !6721
  %21 = zext i8 %10 to i32, !dbg !6722
  %22 = sub nsw i32 %20, %21, !dbg !6723
  br label %23, !dbg !6724

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !6724
  ret i32 %24, !dbg !6725
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #11 !dbg !6726 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6731, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i8* %1, metadata !6732, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i8** %2, metadata !6733, metadata !DIExpression()), !dbg !6736
  %4 = icmp eq i8* %0, null, !dbg !6737
  br i1 %4, label %5, label %7, !dbg !6737

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !6738
  br label %7, !dbg !6737

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !6737
  call void @llvm.dbg.value(metadata i8* %8, metadata !6734, metadata !DIExpression()), !dbg !6736
  %9 = load i8, i8* %8, align 1, !dbg !6739
  %10 = icmp eq i8 %9, 0, !dbg !6739
  br i1 %10, label %33, label %11, !dbg !6740

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6734, metadata !DIExpression()), !dbg !6736
  %14 = zext i8 %12 to i32, !dbg !6739
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #25, !dbg !6741
  %16 = icmp eq i8* %15, null, !dbg !6740
  br i1 %16, label %21, label %17, !dbg !6742

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6743
  call void @llvm.dbg.value(metadata i8* %18, metadata !6734, metadata !DIExpression()), !dbg !6736
  %19 = load i8, i8* %18, align 1, !dbg !6739
  %20 = icmp eq i8 %19, 0, !dbg !6739
  br i1 %20, label %33, label %11, !dbg !6740, !llvm.loop !6745

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !6735, metadata !DIExpression()), !dbg !6736
  %24 = zext i8 %22 to i32, !dbg !6747
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #25, !dbg !6748
  %26 = icmp eq i8* %25, null, !dbg !6749
  br i1 %26, label %27, label %31, !dbg !6750

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6751
  call void @llvm.dbg.value(metadata i8* %28, metadata !6735, metadata !DIExpression()), !dbg !6736
  %29 = load i8, i8* %28, align 1, !dbg !6747
  %30 = icmp eq i8 %29, 0, !dbg !6747
  br i1 %30, label %33, label %21, !dbg !6753, !llvm.loop !6754

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !6756
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6759
  br label %33, !dbg !6760

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !6736
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !6736
  store i8* %34, i8** %2, align 4, !dbg !6736
  ret i8* %35, !dbg !6761
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6762 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6764, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i8* %1, metadata !6765, metadata !DIExpression()), !dbg !6766
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6767
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !6768
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #25, !dbg !6769
  ret i8* %0, !dbg !6770
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6771 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6773, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i8* %1, metadata !6774, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i32 %2, metadata !6775, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i8* %0, metadata !6776, metadata !DIExpression()), !dbg !6778
  %4 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6779
  call void @llvm.dbg.value(metadata i32 %4, metadata !6777, metadata !DIExpression()), !dbg !6778
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !6780
  call void @llvm.dbg.value(metadata i8* %5, metadata !6773, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i8* %1, metadata !6774, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i32 %2, metadata !6775, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i32 %2, metadata !6775, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6778
  %6 = icmp eq i32 %2, 0, !dbg !6781
  br i1 %6, label %18, label %7, !dbg !6782

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !6783
  call void @llvm.dbg.value(metadata i8* %9, metadata !6773, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i8* %10, metadata !6774, metadata !DIExpression()), !dbg !6778
  %12 = load i8, i8* %10, align 1, !dbg !6784
  %13 = icmp eq i8 %12, 0, !dbg !6785
  br i1 %13, label %18, label %14, !dbg !6786

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6787
  call void @llvm.dbg.value(metadata i8* %15, metadata !6774, metadata !DIExpression()), !dbg !6778
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6789
  call void @llvm.dbg.value(metadata i8* %16, metadata !6773, metadata !DIExpression()), !dbg !6778
  store i8 %12, i8* %9, align 1, !dbg !6790
  call void @llvm.dbg.value(metadata i32 %11, metadata !6775, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i32 %11, metadata !6775, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6778
  %17 = icmp eq i32 %11, 0, !dbg !6781
  br i1 %17, label %18, label %7, !dbg !6782, !llvm.loop !6791

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !6778
  store i8 0, i8* %19, align 1, !dbg !6793
  ret i8* %0, !dbg !6794
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6795 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6799, metadata !DIExpression()), !dbg !6804
  call void @llvm.dbg.value(metadata i8* %1, metadata !6800, metadata !DIExpression()), !dbg !6804
  call void @llvm.dbg.value(metadata i32 %2, metadata !6801, metadata !DIExpression()), !dbg !6804
  call void @llvm.dbg.value(metadata i8* %0, metadata !6802, metadata !DIExpression()), !dbg !6804
  call void @llvm.dbg.value(metadata i8* %1, metadata !6803, metadata !DIExpression()), !dbg !6804
  %4 = icmp eq i32 %2, 0, !dbg !6805
  br i1 %4, label %31, label %5, !dbg !6807

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6803, metadata !DIExpression()), !dbg !6804
  call void @llvm.dbg.value(metadata i8* %0, metadata !6802, metadata !DIExpression()), !dbg !6804
  call void @llvm.dbg.value(metadata i32 %2, metadata !6801, metadata !DIExpression()), !dbg !6804
  %6 = add i32 %2, -1, !dbg !6808
  call void @llvm.dbg.value(metadata i32 %6, metadata !6801, metadata !DIExpression()), !dbg !6804
  %7 = icmp eq i32 %6, 0, !dbg !6809
  br i1 %7, label %23, label %8, !dbg !6810

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !6811
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !6811
  br label %11, !dbg !6811

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6803, metadata !DIExpression()), !dbg !6804
  call void @llvm.dbg.value(metadata i8* %14, metadata !6802, metadata !DIExpression()), !dbg !6804
  %15 = load i8, i8* %14, align 1, !dbg !6812
  %16 = load i8, i8* %13, align 1, !dbg !6813
  %17 = icmp eq i8 %15, %16, !dbg !6814
  br i1 %17, label %18, label %23, !dbg !6811

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6815
  call void @llvm.dbg.value(metadata i8* %19, metadata !6802, metadata !DIExpression()), !dbg !6804
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6817
  call void @llvm.dbg.value(metadata i8* %20, metadata !6803, metadata !DIExpression()), !dbg !6804
  call void @llvm.dbg.value(metadata i32 %12, metadata !6801, metadata !DIExpression()), !dbg !6804
  %21 = add i32 %12, -1, !dbg !6808
  call void @llvm.dbg.value(metadata i32 %21, metadata !6801, metadata !DIExpression()), !dbg !6804
  %22 = icmp eq i32 %21, 0, !dbg !6809
  br i1 %22, label %23, label %11, !dbg !6810, !llvm.loop !6818

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !6804
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !6804
  %26 = load i8, i8* %24, align 1, !dbg !6820
  %27 = zext i8 %26 to i32, !dbg !6820
  %28 = load i8, i8* %25, align 1, !dbg !6821
  %29 = zext i8 %28 to i32, !dbg !6821
  %30 = sub nsw i32 %27, %29, !dbg !6822
  br label %31, !dbg !6823

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !6804
  ret i32 %32, !dbg !6824
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6825 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6829, metadata !DIExpression()), !dbg !6834
  call void @llvm.dbg.value(metadata i8* %1, metadata !6830, metadata !DIExpression()), !dbg !6834
  call void @llvm.dbg.value(metadata i32 %2, metadata !6831, metadata !DIExpression()), !dbg !6834
  call void @llvm.dbg.value(metadata i8* %0, metadata !6832, metadata !DIExpression()), !dbg !6834
  call void @llvm.dbg.value(metadata i8* %1, metadata !6833, metadata !DIExpression()), !dbg !6834
  %4 = ptrtoint i8* %0 to i32, !dbg !6835
  %5 = ptrtoint i8* %1 to i32, !dbg !6835
  %6 = sub i32 %4, %5, !dbg !6835
  %7 = icmp ult i32 %6, %2, !dbg !6837
  br i1 %7, label %10, label %8, !dbg !6838

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6833, metadata !DIExpression()), !dbg !6834
  call void @llvm.dbg.value(metadata i8* %0, metadata !6832, metadata !DIExpression()), !dbg !6834
  call void @llvm.dbg.value(metadata i32 %2, metadata !6831, metadata !DIExpression()), !dbg !6834
  %9 = icmp eq i32 %2, 0, !dbg !6839
  br i1 %9, label %26, label %17, !dbg !6841

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6831, metadata !DIExpression()), !dbg !6834
  %12 = add i32 %11, -1, !dbg !6842
  call void @llvm.dbg.value(metadata i32 %12, metadata !6831, metadata !DIExpression()), !dbg !6834
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !6845
  %14 = load i8, i8* %13, align 1, !dbg !6845
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !6846
  store i8 %14, i8* %15, align 1, !dbg !6847
  %16 = icmp eq i32 %12, 0, !dbg !6848
  br i1 %16, label %26, label %10, !dbg !6849, !llvm.loop !6850

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !6833, metadata !DIExpression()), !dbg !6834
  call void @llvm.dbg.value(metadata i8* %19, metadata !6832, metadata !DIExpression()), !dbg !6834
  call void @llvm.dbg.value(metadata i32 %20, metadata !6831, metadata !DIExpression()), !dbg !6834
  %21 = load i8, i8* %18, align 1, !dbg !6852
  store i8 %21, i8* %19, align 1, !dbg !6854
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !6855
  call void @llvm.dbg.value(metadata i8* %22, metadata !6832, metadata !DIExpression()), !dbg !6834
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6856
  call void @llvm.dbg.value(metadata i8* %23, metadata !6833, metadata !DIExpression()), !dbg !6834
  %24 = add i32 %20, -1, !dbg !6857
  call void @llvm.dbg.value(metadata i32 %24, metadata !6831, metadata !DIExpression()), !dbg !6834
  %25 = icmp eq i32 %24, 0, !dbg !6839
  br i1 %25, label %26, label %17, !dbg !6841, !llvm.loop !6858

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !6860
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6861 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6867, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i8* %1, metadata !6868, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i32 %2, metadata !6869, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i8* %0, metadata !6870, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i8* %1, metadata !6871, metadata !DIExpression()), !dbg !6872
  %4 = icmp eq i32 %2, 0, !dbg !6873
  br i1 %4, label %14, label %5, !dbg !6874

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6871, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i8* %7, metadata !6870, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i32 %8, metadata !6869, metadata !DIExpression()), !dbg !6872
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6875
  call void @llvm.dbg.value(metadata i8* %9, metadata !6871, metadata !DIExpression()), !dbg !6872
  %10 = load i8, i8* %6, align 1, !dbg !6877
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6878
  call void @llvm.dbg.value(metadata i8* %11, metadata !6870, metadata !DIExpression()), !dbg !6872
  store i8 %10, i8* %7, align 1, !dbg !6879
  %12 = add i32 %8, -1, !dbg !6880
  call void @llvm.dbg.value(metadata i32 %12, metadata !6869, metadata !DIExpression()), !dbg !6872
  %13 = icmp eq i32 %12, 0, !dbg !6873
  br i1 %13, label %14, label %5, !dbg !6874, !llvm.loop !6881

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !6883
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !6884 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6888, metadata !DIExpression()), !dbg !6893
  call void @llvm.dbg.value(metadata i32 %1, metadata !6889, metadata !DIExpression()), !dbg !6893
  call void @llvm.dbg.value(metadata i32 %2, metadata !6890, metadata !DIExpression()), !dbg !6893
  call void @llvm.dbg.value(metadata i8* %0, metadata !6891, metadata !DIExpression()), !dbg !6893
  %4 = trunc i32 %1 to i8, !dbg !6894
  call void @llvm.dbg.value(metadata i8 %4, metadata !6892, metadata !DIExpression()), !dbg !6893
  call void @llvm.dbg.value(metadata i32 %2, metadata !6890, metadata !DIExpression()), !dbg !6893
  call void @llvm.dbg.value(metadata i8* %0, metadata !6891, metadata !DIExpression()), !dbg !6893
  %5 = icmp eq i32 %2, 0, !dbg !6895
  br i1 %5, label %12, label %6, !dbg !6896

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !6890, metadata !DIExpression()), !dbg !6893
  call void @llvm.dbg.value(metadata i8* %8, metadata !6891, metadata !DIExpression()), !dbg !6893
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6897
  call void @llvm.dbg.value(metadata i8* %9, metadata !6891, metadata !DIExpression()), !dbg !6893
  store i8 %4, i8* %8, align 1, !dbg !6899
  %10 = add i32 %7, -1, !dbg !6900
  call void @llvm.dbg.value(metadata i32 %10, metadata !6890, metadata !DIExpression()), !dbg !6893
  %11 = icmp eq i32 %10, 0, !dbg !6895
  br i1 %11, label %12, label %6, !dbg !6896, !llvm.loop !6901

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !6903
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6904 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6908, metadata !DIExpression()), !dbg !6914
  call void @llvm.dbg.value(metadata i32 %1, metadata !6909, metadata !DIExpression()), !dbg !6914
  call void @llvm.dbg.value(metadata i32 %2, metadata !6910, metadata !DIExpression()), !dbg !6914
  %4 = icmp eq i32 %2, 0, !dbg !6915
  br i1 %4, label %17, label %5, !dbg !6916

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !6917

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !6918
  call void @llvm.dbg.value(metadata i8* %9, metadata !6911, metadata !DIExpression()), !dbg !6918
  call void @llvm.dbg.value(metadata i32 %8, metadata !6910, metadata !DIExpression()), !dbg !6914
  call void @llvm.dbg.value(metadata i8* %9, metadata !6911, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6918
  %10 = load i8, i8* %9, align 1, !dbg !6919
  %11 = icmp eq i8 %10, %6, !dbg !6922
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !6923
  call void @llvm.dbg.value(metadata i8* %12, metadata !6911, metadata !DIExpression()), !dbg !6918
  call void @llvm.dbg.value(metadata i32 %13, metadata !6910, metadata !DIExpression()), !dbg !6914
  br i1 %15, label %16, label %7, !dbg !6923, !llvm.loop !6924

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !6926

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !6914
  ret i8* %19, !dbg !6927
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #5 !dbg !6928 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !6930, metadata !DIExpression()), !dbg !6931
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !6932
  ret void, !dbg !6933
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #12 !dbg !6934 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6936, metadata !DIExpression()), !dbg !6937
  ret i32 -1, !dbg !6938
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6939 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6943, metadata !DIExpression()), !dbg !6945
  call void @llvm.dbg.value(metadata i32* %1, metadata !6944, metadata !DIExpression()), !dbg !6945
  %3 = ptrtoint i32* %1 to i32, !dbg !6946
  %4 = and i32 %3, -2, !dbg !6946
  %5 = icmp eq i32 %4, 2, !dbg !6946
  br i1 %5, label %6, label %9, !dbg !6946

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6947
  %8 = tail call i32 %7(i32 noundef %0) #24, !dbg !6947
  br label %9, !dbg !6948

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !6948
  ret i32 %10, !dbg !6949
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) #1 !dbg !6950 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6952, metadata !DIExpression()), !dbg !6954
  call void @llvm.dbg.value(metadata i32* %1, metadata !6953, metadata !DIExpression()), !dbg !6954
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !6955
  ret i32 %3, !dbg !6956
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !6957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6960, metadata !DIExpression()), !dbg !6962
  call void @llvm.dbg.value(metadata i32* %1, metadata !6961, metadata !DIExpression()), !dbg !6962
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6963, !srcloc !6965
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !6966
  ret i32 %3, !dbg !6967
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !6968 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6973, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i32* %1, metadata !6974, metadata !DIExpression()), !dbg !6977
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !6978
  call void @llvm.dbg.value(metadata i32 %3, metadata !6975, metadata !DIExpression()), !dbg !6977
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #25, !dbg !6979
  call void @llvm.dbg.value(metadata i32 %4, metadata !6976, metadata !DIExpression()), !dbg !6977
  %5 = icmp ne i32 %3, %4, !dbg !6980
  %6 = sext i1 %5 to i32, !dbg !6981
  ret i32 %6, !dbg !6982
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !6983 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6987, metadata !DIExpression()), !dbg !6991
  call void @llvm.dbg.value(metadata i32 %1, metadata !6988, metadata !DIExpression()), !dbg !6991
  call void @llvm.dbg.value(metadata i32 %2, metadata !6989, metadata !DIExpression()), !dbg !6991
  call void @llvm.dbg.value(metadata i32* %3, metadata !6990, metadata !DIExpression()), !dbg !6991
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !6992
  ret i32 %5, !dbg !6993
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !6994 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6996, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.value(metadata i32 %1, metadata !6997, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.value(metadata i32 %2, metadata !6998, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.value(metadata i32* %3, metadata !6999, metadata !DIExpression()), !dbg !7000
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7001, !srcloc !7003
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !7004
  ret i32 %5, !dbg !7005
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7006 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7008, metadata !DIExpression()), !dbg !7016
  call void @llvm.dbg.value(metadata i32 %1, metadata !7009, metadata !DIExpression()), !dbg !7016
  call void @llvm.dbg.value(metadata i32 %2, metadata !7010, metadata !DIExpression()), !dbg !7016
  call void @llvm.dbg.value(metadata i32* %3, metadata !7011, metadata !DIExpression()), !dbg !7016
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7017
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7019
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7019
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7019
  br i1 %11, label %33, label %12, !dbg !7019

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7016
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7016
  call void @llvm.dbg.value(metadata i8* %14, metadata !7014, metadata !DIExpression()), !dbg !7016
  call void @llvm.dbg.value(metadata i32 %13, metadata !7012, metadata !DIExpression()), !dbg !7016
  call void @llvm.dbg.value(metadata i32 %1, metadata !7013, metadata !DIExpression()), !dbg !7016
  br label %15, !dbg !7020

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7022
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7016
  call void @llvm.dbg.value(metadata i8* %17, metadata !7014, metadata !DIExpression()), !dbg !7016
  call void @llvm.dbg.value(metadata i32 %16, metadata !7013, metadata !DIExpression()), !dbg !7016
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7023
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7026
  call void @llvm.dbg.value(metadata i8* %19, metadata !7014, metadata !DIExpression()), !dbg !7016
  %20 = load i8, i8* %17, align 1, !dbg !7027
  %21 = zext i8 %20 to i32, !dbg !7028
  %22 = tail call i32 %18(i32 noundef %21) #24, !dbg !7023
  %23 = icmp eq i32 %22, -1, !dbg !7029
  br i1 %23, label %30, label %24, !dbg !7030

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7031
  call void @llvm.dbg.value(metadata i32 %25, metadata !7013, metadata !DIExpression()), !dbg !7016
  %26 = icmp eq i32 %25, 0, !dbg !7032
  br i1 %26, label %27, label %15, !dbg !7033, !llvm.loop !7034

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7036
  call void @llvm.dbg.value(metadata i32 %28, metadata !7012, metadata !DIExpression()), !dbg !7016
  %29 = icmp eq i32 %28, 0, !dbg !7037
  br i1 %29, label %30, label %12, !dbg !7038, !llvm.loop !7039

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7016
  call void @llvm.dbg.value(metadata i32 %31, metadata !7012, metadata !DIExpression()), !dbg !7016
  call void @llvm.dbg.label(metadata !7015), !dbg !7042
  %32 = sub i32 %2, %31, !dbg !7043
  br label %33, !dbg !7044

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7016
  ret i32 %34, !dbg !7045
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7046 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7050, metadata !DIExpression()), !dbg !7051
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !7052
  %3 = icmp eq i32 %2, -1, !dbg !7054
  br i1 %3, label %8, label %4, !dbg !7055

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !7056
  %6 = icmp eq i32 %5, -1, !dbg !7057
  %7 = sext i1 %6 to i32, !dbg !7056
  br label %8, !dbg !7058

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7051
  ret i32 %9, !dbg !7059
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fprintf(i32* noalias noundef %0, i8* noalias noundef %1, ...) local_unnamed_addr #1 !dbg !7060 {
  %3 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i32* %0, metadata !7065, metadata !DIExpression()), !dbg !7075
  call void @llvm.dbg.value(metadata i8* %1, metadata !7066, metadata !DIExpression()), !dbg !7075
  %4 = bitcast %struct.__va_list* %3 to i8*, !dbg !7076
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !7076
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !7067, metadata !DIExpression()), !dbg !7077
  call void @llvm.va_start(i8* nonnull %4), !dbg !7078
  %5 = bitcast i32* %0 to i8*, !dbg !7079
  %6 = bitcast %struct.__va_list* %3 to i32*, !dbg !7080
  %7 = load i32, i32* %6, align 4, !dbg !7080
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !7080
  %9 = call fastcc i32 @cbvprintf.29(i8* noundef %5, i8* noundef %1, [1 x i32] %8) #25, !dbg !7080
  call void @llvm.dbg.value(metadata i32 %9, metadata !7074, metadata !DIExpression()), !dbg !7075
  call void @llvm.va_end(i8* nonnull %4), !dbg !7081
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !7082
  ret i32 %9, !dbg !7083
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbvprintf.29(i8* noundef %0, i8* noundef %1, [1 x i32] %2) unnamed_addr #1 !dbg !7084 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7091, metadata !DIExpression()), !dbg !7092
  call void @llvm.dbg.value(metadata i32 (...)* bitcast (i32 (i32, i32*)* @fputc to i32 (...)*), metadata !7088, metadata !DIExpression()), !dbg !7092
  call void @llvm.dbg.value(metadata i8* %0, metadata !7089, metadata !DIExpression()), !dbg !7092
  call void @llvm.dbg.value(metadata i8* %1, metadata !7090, metadata !DIExpression()), !dbg !7092
  %4 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef bitcast (i32 (i32, i32*)* @fputc to i32 (...)*), i8* noundef %0, i8* noundef %1, [1 x i32] %2, i32 noundef 0) #24, !dbg !7093
  ret i32 %4, !dbg !7094
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vfprintf(i32* noalias noundef %0, i8* noalias noundef %1, [1 x i32] %2) local_unnamed_addr #1 !dbg !7095 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7101, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.value(metadata i32* %0, metadata !7099, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.value(metadata i8* %1, metadata !7100, metadata !DIExpression()), !dbg !7103
  %4 = bitcast i32* %0 to i8*, !dbg !7104
  %5 = tail call fastcc i32 @cbvprintf.29(i8* noundef %4, i8* noundef %1, [1 x i32] %2) #25, !dbg !7105
  call void @llvm.dbg.value(metadata i32 %5, metadata !7102, metadata !DIExpression()), !dbg !7103
  ret i32 %5, !dbg !7106
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @printf(i8* noalias noundef %0, ...) local_unnamed_addr #1 !dbg !7107 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7111, metadata !DIExpression()), !dbg !7114
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7115
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !7115
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7112, metadata !DIExpression()), !dbg !7116
  call void @llvm.va_start(i8* nonnull %3), !dbg !7117
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7118
  %5 = load i32, i32* %4, align 4, !dbg !7118
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7118
  %7 = call fastcc i32 @cbvprintf.29(i8* noundef nonnull inttoptr (i32 2 to i8*), i8* noundef %0, [1 x i32] %6) #25, !dbg !7118
  call void @llvm.dbg.value(metadata i32 %7, metadata !7113, metadata !DIExpression()), !dbg !7114
  call void @llvm.va_end(i8* nonnull %3), !dbg !7119
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !7120
  ret i32 %7, !dbg !7121
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vprintf(i8* noalias noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7122 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7127, metadata !DIExpression()), !dbg !7129
  call void @llvm.dbg.value(metadata i8* %0, metadata !7126, metadata !DIExpression()), !dbg !7129
  %3 = tail call fastcc i32 @cbvprintf.29(i8* noundef nonnull inttoptr (i32 2 to i8*), i8* noundef %0, [1 x i32] %1) #25, !dbg !7130
  call void @llvm.dbg.value(metadata i32 %3, metadata !7128, metadata !DIExpression()), !dbg !7129
  ret i32 %3, !dbg !7131
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7132 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7134, metadata !DIExpression()), !dbg !7135
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #25, !dbg !7136
  ret void, !dbg !7137
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7138 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7142, metadata !DIExpression()), !dbg !7148
  call void @llvm.dbg.value(metadata i32 %1, metadata !7143, metadata !DIExpression()), !dbg !7148
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7144, metadata !DIExpression()), !dbg !7148
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7149
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7149
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7149
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7145, metadata !DIExpression()), !dbg !7148
  call void @llvm.dbg.value(metadata i32 %0, metadata !7147, metadata !DIExpression()), !dbg !7148
  %7 = icmp slt i32 %0, %1, !dbg !7150
  br i1 %7, label %8, label %22, !dbg !7153

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7147, metadata !DIExpression()), !dbg !7148
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #25, !dbg !7154
  %11 = icmp eq i32 %10, 0, !dbg !7154
  br i1 %11, label %19, label %12, !dbg !7157

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #25, !dbg !7158
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7160
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7160
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7162
  br i1 %15, label %19, label %16, !dbg !7163

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7164
  %18 = load i8*, i8** %17, align 4, !dbg !7164
  tail call void %14(i32 noundef %9, i8* noundef %18) #24, !dbg !7165
  br label %19, !dbg !7166

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7167
  call void @llvm.dbg.value(metadata i32 %20, metadata !7147, metadata !DIExpression()), !dbg !7148
  %21 = icmp eq i32 %20, %1, !dbg !7150
  br i1 %21, label %22, label %8, !dbg !7153, !llvm.loop !7168

22:                                               ; preds = %19, %3
  ret void, !dbg !7170
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #14 !dbg !7171 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7173, metadata !DIExpression()), !dbg !7174
  %2 = shl nuw i32 1, %0, !dbg !7175
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #25, !dbg !7178
  ret i32 %3, !dbg !7179
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #13 !dbg !7180 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7184, metadata !DIExpression()), !dbg !7185
  %2 = shl nuw i32 1, %0, !dbg !7186
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #25, !dbg !7189
  ret void, !dbg !7190
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #13 !dbg !7191 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7194, metadata !DIExpression()), !dbg !7195
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7196
  ret void, !dbg !7197
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7198 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7200, metadata !DIExpression()), !dbg !7201
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7202
  %3 = and i32 %2, %0, !dbg !7202
  %4 = icmp eq i32 %3, %0, !dbg !7203
  %5 = zext i1 %4 to i32, !dbg !7203
  ret i32 %5, !dbg !7204
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7205 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7207, metadata !DIExpression()), !dbg !7208
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #25, !dbg !7209
  ret void, !dbg !7210
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7211 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7213, metadata !DIExpression()), !dbg !7214
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #25, !dbg !7215
  ret void, !dbg !7216
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7217 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7219, metadata !DIExpression()), !dbg !7220
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #25, !dbg !7221
  ret void, !dbg !7222
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !7223 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7225, metadata !DIExpression()), !dbg !7226
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #25, !dbg !7227
  ret void, !dbg !7228
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !7229 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7231, metadata !DIExpression()), !dbg !7232
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #25, !dbg !7233
  ret void, !dbg !7234
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7235 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7237, metadata !DIExpression()), !dbg !7238
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #25, !dbg !7239
  ret void, !dbg !7240
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !7241 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7243, metadata !DIExpression()), !dbg !7244
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #25, !dbg !7245
  ret void, !dbg !7246
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !7247 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7249, metadata !DIExpression()), !dbg !7250
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #25, !dbg !7251
  ret void, !dbg !7252
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !7253 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7255, metadata !DIExpression()), !dbg !7256
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #25, !dbg !7257
  ret void, !dbg !7258
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !7259 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7261, metadata !DIExpression()), !dbg !7262
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #25, !dbg !7263
  ret void, !dbg !7264
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7265 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7267, metadata !DIExpression()), !dbg !7268
  tail call fastcc void @__stm32_exti_connect_irqs() #25, !dbg !7269
  ret i32 0, !dbg !7270
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !558 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !562, metadata !DIExpression()), !dbg !7271
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #24, !dbg !7272
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #24, !dbg !7274
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #24, !dbg !7276
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #24, !dbg !7278
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #24, !dbg !7280
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #24, !dbg !7282
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #24, !dbg !7284
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #24, !dbg !7286
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #24, !dbg !7288
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #24, !dbg !7290
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #24, !dbg !7292
  ret void, !dbg !7294
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7295 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7297, metadata !DIExpression()), !dbg !7299
  call void @llvm.dbg.value(metadata i32 0, metadata !7298, metadata !DIExpression()), !dbg !7299
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !7300
  %3 = load i32, i32* %2, align 4, !dbg !7300
  call void @llvm.dbg.value(metadata i32 %3, metadata !7298, metadata !DIExpression()), !dbg !7299
  %4 = shl nuw i32 1, %0, !dbg !7301
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #25, !dbg !7302
  tail call void @arch_irq_enable(i32 noundef %3) #24, !dbg !7303
  ret void, !dbg !7304
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !7305 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7307, metadata !DIExpression()), !dbg !7308
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7309
  %3 = or i32 %2, %0, !dbg !7309
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7309
  ret void, !dbg !7310
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #13 !dbg !7311 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7313, metadata !DIExpression()), !dbg !7314
  %2 = icmp slt i32 %0, 32, !dbg !7315
  br i1 %2, label %3, label %5, !dbg !7317

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !7318
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #25, !dbg !7320
  br label %5, !dbg !7321

5:                                                ; preds = %1, %3
  ret void, !dbg !7322
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !7323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7325, metadata !DIExpression()), !dbg !7326
  %2 = xor i32 %0, -1, !dbg !7327
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7327
  %4 = and i32 %3, %2, !dbg !7327
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7327
  ret void, !dbg !7328
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #13 !dbg !7329 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7333, metadata !DIExpression()), !dbg !7335
  call void @llvm.dbg.value(metadata i32 %1, metadata !7334, metadata !DIExpression()), !dbg !7335
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !7336

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !7337
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #25, !dbg !7339
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #25, !dbg !7340
  br label %11, !dbg !7341

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !7342
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #25, !dbg !7343
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #25, !dbg !7344
  br label %11, !dbg !7345

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !7346
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #25, !dbg !7347
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #25, !dbg !7348
  br label %11, !dbg !7349

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !7350
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #25, !dbg !7351
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #25, !dbg !7352
  br label %11, !dbg !7353

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !7354
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !7355 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7357, metadata !DIExpression()), !dbg !7358
  %2 = xor i32 %0, -1, !dbg !7359
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7359
  %4 = and i32 %3, %2, !dbg !7359
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7359
  ret void, !dbg !7360
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !7361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7363, metadata !DIExpression()), !dbg !7364
  %2 = xor i32 %0, -1, !dbg !7365
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7365
  %4 = and i32 %3, %2, !dbg !7365
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7365
  ret void, !dbg !7366
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !7367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7369, metadata !DIExpression()), !dbg !7370
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7371
  %3 = or i32 %2, %0, !dbg !7371
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7371
  ret void, !dbg !7372
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !7373 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7375, metadata !DIExpression()), !dbg !7376
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7377
  %3 = or i32 %2, %0, !dbg !7377
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7377
  ret void, !dbg !7378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !7379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7383, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !7384, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.value(metadata i8* %2, metadata !7385, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !7386, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7388, metadata !DIExpression()), !dbg !7389
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7390
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !7390
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !7392
  br i1 %6, label %7, label %9, !dbg !7393

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !7394
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7395
  store i8* %2, i8** %8, align 4, !dbg !7396
  br label %9, !dbg !7397

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !7389
  ret i32 %10, !dbg !7398
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #5 !dbg !7399 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7401, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !7402, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7403, metadata !DIExpression()), !dbg !7404
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7405
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !7406
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7407
  store i8* null, i8** %3, align 4, !dbg !7408
  ret void, !dbg !7409
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !7410 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7412, metadata !DIExpression()), !dbg !7417
  call void @llvm.dbg.value(metadata i8* %1, metadata !7413, metadata !DIExpression()), !dbg !7417
  call void @llvm.dbg.value(metadata i8* %1, metadata !7414, metadata !DIExpression()), !dbg !7417
  %3 = bitcast i8* %1 to i32*, !dbg !7418
  %4 = load i32, i32* %3, align 4, !dbg !7418
  %5 = add i32 %4, -169, !dbg !7418
  %6 = icmp ult i32 %5, -121, !dbg !7418
  br i1 %6, label %15, label %7, !dbg !7420

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7421
  %9 = inttoptr i32 %8 to i32*, !dbg !7422
  call void @llvm.dbg.value(metadata i32* %9, metadata !7415, metadata !DIExpression()), !dbg !7417
  %10 = load volatile i32, i32* %9, align 4, !dbg !7423
  call void @llvm.dbg.value(metadata i32 %10, metadata !7416, metadata !DIExpression()), !dbg !7417
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7424
  %12 = bitcast i8* %11 to i32*, !dbg !7424
  %13 = load i32, i32* %12, align 4, !dbg !7424
  %14 = or i32 %13, %10, !dbg !7425
  call void @llvm.dbg.value(metadata i32 %14, metadata !7416, metadata !DIExpression()), !dbg !7417
  store volatile i32 %14, i32* %9, align 4, !dbg !7426
  br label %15, !dbg !7427

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7417
  ret i32 %16, !dbg !7428
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !7429 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7431, metadata !DIExpression()), !dbg !7436
  call void @llvm.dbg.value(metadata i8* %1, metadata !7432, metadata !DIExpression()), !dbg !7436
  call void @llvm.dbg.value(metadata i8* %1, metadata !7433, metadata !DIExpression()), !dbg !7436
  %3 = bitcast i8* %1 to i32*, !dbg !7437
  %4 = load i32, i32* %3, align 4, !dbg !7437
  %5 = add i32 %4, -169, !dbg !7437
  %6 = icmp ult i32 %5, -121, !dbg !7437
  br i1 %6, label %16, label %7, !dbg !7439

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7440
  %9 = inttoptr i32 %8 to i32*, !dbg !7441
  call void @llvm.dbg.value(metadata i32* %9, metadata !7434, metadata !DIExpression()), !dbg !7436
  %10 = load volatile i32, i32* %9, align 4, !dbg !7442
  call void @llvm.dbg.value(metadata i32 %10, metadata !7435, metadata !DIExpression()), !dbg !7436
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7443
  %12 = bitcast i8* %11 to i32*, !dbg !7443
  %13 = load i32, i32* %12, align 4, !dbg !7443
  %14 = xor i32 %13, -1, !dbg !7444
  %15 = and i32 %10, %14, !dbg !7445
  call void @llvm.dbg.value(metadata i32 %15, metadata !7435, metadata !DIExpression()), !dbg !7436
  store volatile i32 %15, i32* %9, align 4, !dbg !7446
  br label %16, !dbg !7447

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7436
  ret i32 %17, !dbg !7448
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !7449 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7451, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i8* %1, metadata !7452, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i32* %2, metadata !7453, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i8* %1, metadata !7454, metadata !DIExpression()), !dbg !7459
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !7460
  call void @llvm.dbg.value(metadata i32 %4, metadata !7455, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i32 undef, metadata !7456, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i32 undef, metadata !7457, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i32 %4, metadata !7458, metadata !DIExpression()), !dbg !7459
  %5 = bitcast i8* %1 to i32*, !dbg !7461
  %6 = load i32, i32* %5, align 4, !dbg !7461
  switch i32 %6, label %18 [
    i32 48, label %16
    i32 52, label %16
    i32 56, label %16
    i32 64, label %7
    i32 68, label %9
    i32 168, label %16
    i32 6, label %16
    i32 1, label %11
    i32 4, label %14
    i32 5, label %15
  ], !dbg !7462

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #25, !dbg !7463
  call void @llvm.dbg.value(metadata i32 %8, metadata !7456, metadata !DIExpression()), !dbg !7459
  br label %16, !dbg !7464

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #25, !dbg !7466
  call void @llvm.dbg.value(metadata i32 %10, metadata !7457, metadata !DIExpression()), !dbg !7459
  br label %16, !dbg !7467

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #24, !dbg !7468
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12) #25, !dbg !7469
  br label %16, !dbg !7470

14:                                               ; preds = %3
  br label %16, !dbg !7471

15:                                               ; preds = %3
  br label %16, !dbg !7472

16:                                               ; preds = %3, %3, %3, %3, %3, %15, %14, %11, %9, %7
  %17 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ 0, %14 ], [ 32000, %15 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %17, i32* %2, align 4, !dbg !7473
  br label %18, !dbg !7474

18:                                               ; preds = %16, %3
  %19 = phi i32 [ -134, %3 ], [ 0, %16 ], !dbg !7459
  ret i32 %19, !dbg !7474
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #13 !dbg !7475 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7477, metadata !DIExpression()), !dbg !7485
  call void @llvm.dbg.value(metadata i8* %1, metadata !7478, metadata !DIExpression()), !dbg !7485
  call void @llvm.dbg.value(metadata i8* %2, metadata !7479, metadata !DIExpression()), !dbg !7485
  call void @llvm.dbg.value(metadata i8* %1, metadata !7480, metadata !DIExpression()), !dbg !7485
  %4 = bitcast i8* %1 to i32*, !dbg !7486
  %5 = load i32, i32* %4, align 4, !dbg !7486
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #25, !dbg !7487
  call void @llvm.dbg.value(metadata i32 %6, metadata !7484, metadata !DIExpression()), !dbg !7485
  %7 = icmp slt i32 %6, 0, !dbg !7488
  br i1 %7, label %22, label %8, !dbg !7490

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7480, metadata !DIExpression()), !dbg !7485
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7491
  %10 = bitcast i8* %9 to i32*, !dbg !7491
  %11 = load i32, i32* %10, align 4, !dbg !7491
  %12 = lshr i32 %11, 16, !dbg !7491
  %13 = and i32 %12, 7, !dbg !7491
  %14 = lshr i32 %11, 8, !dbg !7492
  %15 = and i32 %14, 31, !dbg !7492
  %16 = shl i32 %13, %15, !dbg !7493
  call void @llvm.dbg.value(metadata i32 %16, metadata !7483, metadata !DIExpression()), !dbg !7485
  %17 = and i32 %11, 255, !dbg !7494
  %18 = or i32 %17, 1073887232, !dbg !7495
  %19 = inttoptr i32 %18 to i32*, !dbg !7496
  call void @llvm.dbg.value(metadata i32* %19, metadata !7481, metadata !DIExpression()), !dbg !7485
  %20 = load volatile i32, i32* %19, align 4, !dbg !7497
  call void @llvm.dbg.value(metadata i32 %20, metadata !7482, metadata !DIExpression()), !dbg !7485
  %21 = or i32 %16, %20, !dbg !7498
  call void @llvm.dbg.value(metadata i32 %21, metadata !7482, metadata !DIExpression()), !dbg !7485
  store volatile i32 %21, i32* %19, align 4, !dbg !7499
  br label %22, !dbg !7500

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !7485
  ret i32 %23, !dbg !7501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #12 !dbg !7502 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7506, metadata !DIExpression()), !dbg !7508
  call void @llvm.dbg.value(metadata i32 0, metadata !7507, metadata !DIExpression()), !dbg !7508
  %2 = add i32 %0, -1, !dbg !7509
  %3 = icmp ult i32 %2, 6, !dbg !7509
  br i1 %3, label %4, label %7, !dbg !7509

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !7509
  %6 = load i32, i32* %5, align 4, !dbg !7509
  call void @llvm.dbg.value(metadata i32 %6, metadata !7507, metadata !DIExpression()), !dbg !7508
  br label %7, !dbg !7510

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !7508
  ret i32 %8, !dbg !7511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !7512 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7516, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.value(metadata i32 %1, metadata !7517, metadata !DIExpression()), !dbg !7518
  %3 = udiv i32 %0, %1, !dbg !7519
  ret i32 %3, !dbg !7520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0) unnamed_addr #12 !dbg !7521 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7525, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata i32 16, metadata !7526, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata i32 336, metadata !7527, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata i32 4, metadata !7528, metadata !DIExpression()), !dbg !7529
  %2 = mul i32 %0, 336, !dbg !7530
  %3 = lshr i32 %2, 6, !dbg !7531
  ret i32 %3, !dbg !7532
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !7533 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !7535, metadata !DIExpression()), !dbg !7538
  tail call void @config_enable_default_clocks() #24, !dbg !7539
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !7540
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #25, !dbg !7540
  %4 = lshr i32 %3, 4, !dbg !7540
  %5 = and i32 %4, 15, !dbg !7540
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !7540
  %7 = load i8, i8* %6, align 1, !dbg !7540
  %8 = zext i8 %7 to i32, !dbg !7540
  %9 = lshr i32 %2, %8, !dbg !7540
  call void @llvm.dbg.value(metadata i32 %9, metadata !7536, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !7537, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !7538
  %10 = icmp ult i32 %9, 84000000, !dbg !7541
  br i1 %10, label %11, label %13, !dbg !7543

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #24, !dbg !7544
  br label %13, !dbg !7546

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #25, !dbg !7547
  tail call fastcc void @set_up_plls() #25, !dbg !7548
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !7549
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #25, !dbg !7552
  br label %14, !dbg !7553

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !7554
  %16 = icmp eq i32 %15, 8, !dbg !7555
  br i1 %16, label %17, label %14, !dbg !7553, !llvm.loop !7556

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !7558
  br i1 %18, label %19, label %21, !dbg !7560

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #24, !dbg !7561
  br label %21, !dbg !7563

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !7564
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #25, !dbg !7565
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #25, !dbg !7566
  ret i32 0, !dbg !7567
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #14 !dbg !7568 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7570
  %2 = and i32 %1, 240, !dbg !7570
  ret i32 %2, !dbg !7571
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #13 !dbg !7572 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !7573
  %2 = icmp eq i32 %1, 1, !dbg !7577
  br i1 %2, label %7, label %3, !dbg !7578

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #25, !dbg !7579
  br label %4, !dbg !7581

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !7582
  %6 = icmp eq i32 %5, 1, !dbg !7583
  br i1 %6, label %7, label %4, !dbg !7581, !llvm.loop !7584

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #25, !dbg !7586
  br label %8, !dbg !7589

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #25, !dbg !7590
  %10 = icmp eq i32 %9, 1, !dbg !7591
  br i1 %10, label %11, label %8, !dbg !7589, !llvm.loop !7592

11:                                               ; preds = %8
  ret void, !dbg !7594
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !7595 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !7596
  %2 = icmp eq i32 %1, 8, !dbg !7598
  br i1 %2, label %3, label %4, !dbg !7599

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !7600
  tail call fastcc void @stm32_clock_switch_to_hsi() #25, !dbg !7602
  br label %4, !dbg !7603

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #25, !dbg !7604
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7605
  %6 = and i32 %5, -196609, !dbg !7605
  %7 = or i32 %6, 65536, !dbg !7605
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7605
  tail call void @config_pll_sysclock() #24, !dbg !7606
  tail call fastcc void @LL_RCC_PLL_Enable() #25, !dbg !7607
  br label %8, !dbg !7608

8:                                                ; preds = %8, %4
  %9 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #25, !dbg !7609
  %10 = icmp eq i32 %9, 1, !dbg !7610
  br i1 %10, label %11, label %8, !dbg !7608, !llvm.loop !7611

11:                                               ; preds = %8
  ret void, !dbg !7613
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #13 !dbg !7614 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7616, metadata !DIExpression()), !dbg !7617
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7618
  %2 = and i32 %1, -241, !dbg !7618
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7618
  ret void, !dbg !7619
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #13 !dbg !7620 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7622, metadata !DIExpression()), !dbg !7623
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7624
  %3 = and i32 %2, -4, !dbg !7624
  %4 = or i32 %3, %0, !dbg !7624
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7624
  ret void, !dbg !7625
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #14 !dbg !7626 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7627
  %2 = and i32 %1, 12, !dbg !7627
  ret i32 %2, !dbg !7628
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #13 !dbg !7629 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !7631, metadata !DIExpression()), !dbg !7632
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7633
  %2 = and i32 %1, -7169, !dbg !7633
  %3 = or i32 %2, 4096, !dbg !7633
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7633
  ret void, !dbg !7634
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #13 !dbg !7635 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7637, metadata !DIExpression()), !dbg !7638
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7639
  %2 = and i32 %1, -57345, !dbg !7639
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7639
  ret void, !dbg !7640
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #13 !dbg !7641 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !7642
  %2 = icmp eq i32 %1, 1, !dbg !7644
  br i1 %2, label %7, label %3, !dbg !7645

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #25, !dbg !7646
  br label %4, !dbg !7648

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !7649
  %6 = icmp eq i32 %5, 1, !dbg !7650
  br i1 %6, label %7, label %4, !dbg !7648, !llvm.loop !7651

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #25, !dbg !7653
  br label %8, !dbg !7654

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !7655
  %10 = icmp eq i32 %9, 0, !dbg !7656
  br i1 %10, label %11, label %8, !dbg !7654, !llvm.loop !7657

11:                                               ; preds = %8
  ret void, !dbg !7659
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #13 !dbg !7660 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7661
  %2 = and i32 %1, -16777217, !dbg !7661
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7661
  ret void, !dbg !7662
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #13 !dbg !7663 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7664
  %2 = or i32 %1, 16777216, !dbg !7664
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7664
  ret void, !dbg !7665
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #14 !dbg !7666 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7667
  %2 = lshr i32 %1, 25, !dbg !7668
  %3 = and i32 %2, 1, !dbg !7668
  ret i32 %3, !dbg !7669
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #14 !dbg !7670 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7671
  %2 = lshr i32 %1, 1, !dbg !7672
  %3 = and i32 %2, 1, !dbg !7672
  ret i32 %3, !dbg !7673
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #13 !dbg !7674 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7675
  %2 = or i32 %1, 1, !dbg !7675
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7675
  ret void, !dbg !7676
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #13 !dbg !7677 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7678
  %2 = or i32 %1, 1, !dbg !7678
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7678
  ret void, !dbg !7679
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #14 !dbg !7680 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7681
  %2 = lshr i32 %1, 1, !dbg !7682
  %3 = and i32 %2, 1, !dbg !7682
  ret i32 %3, !dbg !7683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #12 !dbg !7684 {
  ret i32 16000000, !dbg !7686
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #13 !dbg !7689 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #25, !dbg !7690
  ret void, !dbg !7691
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #13 !dbg !7692 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7696, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata i32 16, metadata !7697, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata i32 336, metadata !7698, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata i32 65536, metadata !7699, metadata !DIExpression()), !dbg !7700
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7701
  %2 = and i32 %1, -4227072, !dbg !7701
  %3 = or i32 %2, 21520, !dbg !7701
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7701
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7702
  %5 = and i32 %4, -196609, !dbg !7702
  %6 = or i32 %5, 65536, !dbg !7702
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7702
  ret void, !dbg !7703
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #15 !dbg !7704 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #25, !dbg !7705
  ret void, !dbg !7706
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #15 !dbg !7707 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !7710, metadata !DIExpression()), !dbg !7712
  %2 = bitcast i32* %1 to i8*, !dbg !7713
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !7713
  call void @llvm.dbg.declare(metadata i32* %1, metadata !7711, metadata !DIExpression()), !dbg !7714
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7715
  %4 = or i32 %3, 268435456, !dbg !7715
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7715
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7716
  %6 = and i32 %5, 268435456, !dbg !7716
  store volatile i32 %6, i32* %1, align 4, !dbg !7717
  %7 = load volatile i32, i32* %1, align 4, !dbg !7718
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !7719
  ret void, !dbg !7719
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7720 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7722, metadata !DIExpression()), !dbg !7723
  %2 = tail call fastcc zeroext i1 @device_is_ready() #25, !dbg !7724
  br i1 %2, label %3, label %4, !dbg !7726

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #25, !dbg !7727
  br label %4, !dbg !7728

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !7723
  ret i32 %5, !dbg !7729
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !7730 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !7734, metadata !DIExpression()), !dbg !7735
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7736, !srcloc !7738
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #25, !dbg !7739
  ret i1 %1, !dbg !7740
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !7741 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !7742
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !7743
  ret void, !dbg !7744
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !7745 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7747, metadata !DIExpression()), !dbg !7748
  %2 = icmp eq i32 %0, 10, !dbg !7749
  br i1 %2, label %3, label %4, !dbg !7751

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !7752
  br label %4, !dbg !7754

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !7755
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #25, !dbg !7756
  ret i32 %0, !dbg !7757
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7758 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !7761, metadata !DIExpression()), !dbg !7763
  call void @llvm.dbg.value(metadata i8 %0, metadata !7762, metadata !DIExpression()), !dbg !7763
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7764, !srcloc !7766
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #25, !dbg !7767
  ret void, !dbg !7768
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7769 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !7771, metadata !DIExpression()), !dbg !7774
  call void @llvm.dbg.value(metadata i8 %0, metadata !7772, metadata !DIExpression()), !dbg !7774
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7775
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !7773, metadata !DIExpression()), !dbg !7774
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !7776
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !7776
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #24, !dbg !7777
  ret void, !dbg !7778
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !7779 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !7781, metadata !DIExpression()), !dbg !7782
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #24, !dbg !7783
  ret i1 %1, !dbg !7784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #12 !dbg !7785 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !7832, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !7833, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !7834, metadata !DIExpression()), !dbg !7835
  ret void, !dbg !7836
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !7837 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7839, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i8 %1, metadata !7840, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i32 %2, metadata !7841, metadata !DIExpression()), !dbg !7844
  %5 = bitcast i32* %4 to i8*, !dbg !7845
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7845
  call void @llvm.dbg.value(metadata i32* %4, metadata !7843, metadata !DIExpression(DW_OP_deref)), !dbg !7844
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #25, !dbg !7846
  call void @llvm.dbg.value(metadata i32 %6, metadata !7842, metadata !DIExpression()), !dbg !7844
  %7 = icmp eq i32 %6, 0, !dbg !7847
  br i1 %7, label %8, label %31, !dbg !7849

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !7842, metadata !DIExpression()), !dbg !7844
  %9 = and i32 %2, 131072, !dbg !7850
  %10 = icmp eq i32 %9, 0, !dbg !7852
  br i1 %10, label %28, label %11, !dbg !7853

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !7854
  %13 = icmp eq i32 %12, 0, !dbg !7857
  br i1 %13, label %18, label %14, !dbg !7858

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !7859
  %16 = shl nuw i32 1, %15, !dbg !7859
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #25, !dbg !7861
  br label %25, !dbg !7862

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !7863
  %20 = icmp eq i32 %19, 0, !dbg !7865
  %21 = zext i8 %1 to i32, !dbg !7844
  br i1 %20, label %25, label %22, !dbg !7866

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !7867
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #25, !dbg !7869
  br label %25, !dbg !7870

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !7871
  %27 = load i32, i32* %4, align 4, !dbg !7872
  call void @llvm.dbg.value(metadata i32 %30, metadata !7843, metadata !DIExpression()), !dbg !7844
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #25, !dbg !7873
  br label %31, !dbg !7874

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !7871
  %30 = load i32, i32* %4, align 4, !dbg !7872
  call void @llvm.dbg.value(metadata i32 %30, metadata !7843, metadata !DIExpression()), !dbg !7844
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #25, !dbg !7873
  call void @llvm.dbg.value(metadata i32 0, metadata !7842, metadata !DIExpression()), !dbg !7844
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7875
  ret i32 %6, !dbg !7875
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #14 !dbg !7876 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7880, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i32* %1, metadata !7881, metadata !DIExpression()), !dbg !7885
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7886
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7886
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7886
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7882, metadata !DIExpression()), !dbg !7885
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7887
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7887
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7887
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7884, metadata !DIExpression()), !dbg !7885
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #25, !dbg !7888
  store i32 %9, i32* %1, align 4, !dbg !7889
  ret i32 0, !dbg !7890
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #13 !dbg !7891 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7893, metadata !DIExpression()), !dbg !7899
  call void @llvm.dbg.value(metadata i32 %1, metadata !7894, metadata !DIExpression()), !dbg !7899
  call void @llvm.dbg.value(metadata i32 %2, metadata !7895, metadata !DIExpression()), !dbg !7899
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7900
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !7900
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !7900
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !7896, metadata !DIExpression()), !dbg !7899
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !7901
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !7901
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !7901
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !7897, metadata !DIExpression()), !dbg !7899
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #25, !dbg !7902
  call void @llvm.dbg.value(metadata i32 %10, metadata !7898, metadata !DIExpression()), !dbg !7899
  %11 = xor i32 %1, -1, !dbg !7903
  %12 = and i32 %10, %11, !dbg !7904
  %13 = and i32 %2, %1, !dbg !7905
  %14 = or i32 %12, %13, !dbg !7906
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #25, !dbg !7907
  ret i32 0, !dbg !7908
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7909 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7911, metadata !DIExpression()), !dbg !7915
  call void @llvm.dbg.value(metadata i32 %1, metadata !7912, metadata !DIExpression()), !dbg !7915
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7916
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7916
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7916
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7913, metadata !DIExpression()), !dbg !7915
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7917
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7917
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7917
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7914, metadata !DIExpression()), !dbg !7915
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !7918
  store volatile i32 %1, i32* %9, align 4, !dbg !7918
  ret i32 0, !dbg !7919
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7920 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7922, metadata !DIExpression()), !dbg !7926
  call void @llvm.dbg.value(metadata i32 %1, metadata !7923, metadata !DIExpression()), !dbg !7926
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7927
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7927
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7927
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7924, metadata !DIExpression()), !dbg !7926
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7928
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7928
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7928
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7925, metadata !DIExpression()), !dbg !7926
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #25, !dbg !7929
  ret i32 0, !dbg !7930
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7931 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7933, metadata !DIExpression()), !dbg !7937
  call void @llvm.dbg.value(metadata i32 %1, metadata !7934, metadata !DIExpression()), !dbg !7937
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7938
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7938
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7938
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7935, metadata !DIExpression()), !dbg !7937
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7939
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7939
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7939
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7936, metadata !DIExpression()), !dbg !7937
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !7940
  %10 = load volatile i32, i32* %9, align 4, !dbg !7940
  %11 = xor i32 %10, %1, !dbg !7940
  store volatile i32 %11, i32* %9, align 4, !dbg !7940
  ret i32 0, !dbg !7941
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !7942 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7944, metadata !DIExpression()), !dbg !7954
  call void @llvm.dbg.value(metadata i8 %1, metadata !7945, metadata !DIExpression()), !dbg !7954
  call void @llvm.dbg.value(metadata i32 %2, metadata !7946, metadata !DIExpression()), !dbg !7954
  call void @llvm.dbg.value(metadata i32 %3, metadata !7947, metadata !DIExpression()), !dbg !7954
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7955
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7955
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7955
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7948, metadata !DIExpression()), !dbg !7954
  call void @llvm.dbg.value(metadata i8* undef, metadata !7949, metadata !DIExpression()), !dbg !7954
  call void @llvm.dbg.value(metadata i32 0, metadata !7951, metadata !DIExpression()), !dbg !7954
  call void @llvm.dbg.value(metadata i32 0, metadata !7952, metadata !DIExpression()), !dbg !7954
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !7956

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !7957
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #25, !dbg !7961
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7962
  %12 = load i32, i32* %11, align 4, !dbg !7962
  %13 = icmp eq i32 %10, %12, !dbg !7963
  br i1 %13, label %14, label %29, !dbg !7964

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #24, !dbg !7965
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #24, !dbg !7967
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #24, !dbg !7968
  br label %29, !dbg !7969

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7970
  %17 = load i8*, i8** %16, align 4, !dbg !7970
  call void @llvm.dbg.value(metadata i8* %17, metadata !7949, metadata !DIExpression()), !dbg !7954
  %18 = zext i8 %1 to i32, !dbg !7971
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #24, !dbg !7973
  %20 = icmp eq i32 %19, 0, !dbg !7974
  br i1 %20, label %21, label %29, !dbg !7975

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7976
  %23 = load i32, i32* %22, align 4, !dbg !7976
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #25, !dbg !7977
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !7978

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !7951, metadata !DIExpression()), !dbg !7954
  br label %27, !dbg !7979

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !7951, metadata !DIExpression()), !dbg !7954
  br label %27, !dbg !7981

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !7951, metadata !DIExpression()), !dbg !7954
  br label %27, !dbg !7982

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !7954
  call void @llvm.dbg.value(metadata i32 %28, metadata !7951, metadata !DIExpression()), !dbg !7954
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #24, !dbg !7983
  tail call void @stm32_exti_enable(i32 noundef %18) #24, !dbg !7984
  br label %29, !dbg !7984

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !7954
  call void @llvm.dbg.value(metadata i32 %30, metadata !7952, metadata !DIExpression()), !dbg !7954
  call void @llvm.dbg.label(metadata !7953), !dbg !7985
  ret i32 %30, !dbg !7986
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #11 !dbg !7987 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7989, metadata !DIExpression()), !dbg !7993
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7990, metadata !DIExpression()), !dbg !7993
  call void @llvm.dbg.value(metadata i1 %2, metadata !7991, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7993
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7994
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !7994
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !7994
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !7992, metadata !DIExpression()), !dbg !7993
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !7995
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #25, !dbg !7996
  ret i32 %8, !dbg !7997
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #11 !dbg !7998 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8004, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8005, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.value(metadata i1 %2, metadata !8006, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8007
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #25, !dbg !8008
  br i1 %4, label %10, label %5, !dbg !8010

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8011
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #25, !dbg !8014
  %8 = or i1 %7, %2, !dbg !8015
  %9 = select i1 %8, i32 0, i32 -22, !dbg !8015
  br i1 %2, label %11, label %13, !dbg !8015

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !8016

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8017
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #25, !dbg !8020
  br label %13, !dbg !8021

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !8007
  ret i32 %14, !dbg !8022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !8023 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8027, metadata !DIExpression()), !dbg !8028
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !8029
  %3 = icmp eq %struct._snode* %2, null, !dbg !8029
  ret i1 %3, !dbg !8029
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !8030 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8034, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8035, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8036, metadata !DIExpression()), !dbg !8038
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !8039
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8037, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8036, metadata !DIExpression()), !dbg !8038
  %4 = icmp eq %struct._snode* %3, null, !dbg !8041
  br i1 %4, label %15, label %5, !dbg !8039

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8037, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8036, metadata !DIExpression()), !dbg !8038
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8043
  br i1 %6, label %9, label %11, !dbg !8046

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8037, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8036, metadata !DIExpression()), !dbg !8038
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8043
  br i1 %8, label %9, label %11, !dbg !8046, !llvm.loop !8047

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #25, !dbg !8048
  br label %15, !dbg !8048

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8037, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8036, metadata !DIExpression()), !dbg !8038
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #25, !dbg !8041
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8037, metadata !DIExpression()), !dbg !8038
  %14 = icmp eq %struct._snode* %13, null, !dbg !8041
  br i1 %14, label %15, label %7, !dbg !8039, !llvm.loop !8047

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8051 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8055, metadata !DIExpression()), !dbg !8057
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8056, metadata !DIExpression()), !dbg !8057
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !8058
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #25, !dbg !8058
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !8058
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !8059
  %5 = icmp eq %struct._snode* %4, null, !dbg !8059
  br i1 %5, label %6, label %8, !dbg !8058

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !8061
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #25, !dbg !8061
  br label %8, !dbg !8061

8:                                                ; preds = %6, %2
  ret void, !dbg !8058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !8063 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8067, metadata !DIExpression()), !dbg !8068
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8069
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8069
  ret %struct._snode* %3, !dbg !8070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #5 !dbg !8071 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8075, metadata !DIExpression()), !dbg !8077
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8076, metadata !DIExpression()), !dbg !8077
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8078
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8079
  ret void, !dbg !8080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #5 !dbg !8081 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8083, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8084, metadata !DIExpression()), !dbg !8085
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8086
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8087
  ret void, !dbg !8088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !8089 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8091, metadata !DIExpression()), !dbg !8092
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8093
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8093
  ret %struct._snode* %3, !dbg !8094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #5 !dbg !8095 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8097, metadata !DIExpression()), !dbg !8099
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8098, metadata !DIExpression()), !dbg !8099
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8100
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8101
  ret void, !dbg !8102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !8103 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8107, metadata !DIExpression()), !dbg !8110
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8108, metadata !DIExpression()), !dbg !8110
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !8109, metadata !DIExpression()), !dbg !8110
  %4 = icmp eq %struct._snode* %1, null, !dbg !8111
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #25, !dbg !8113
  br i1 %4, label %6, label %11, !dbg !8114

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #25, !dbg !8115
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !8117
  %8 = icmp eq %struct._snode* %7, %2, !dbg !8117
  br i1 %8, label %9, label %15, !dbg !8115

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !8119
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #25, !dbg !8119
  br label %15, !dbg !8119

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #25, !dbg !8121
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !8123
  %13 = icmp eq %struct._snode* %12, %2, !dbg !8123
  br i1 %13, label %14, label %15, !dbg !8121

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #25, !dbg !8125
  br label %15, !dbg !8125

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #25, !dbg !8114
  ret void, !dbg !8114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #4 !dbg !8127 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8131, metadata !DIExpression()), !dbg !8132
  %2 = icmp eq %struct._snode* %0, null, !dbg !8133
  br i1 %2, label %5, label %3, !dbg !8133

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #25, !dbg !8133
  br label %5, !dbg !8133

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !8133
  ret %struct._snode* %6, !dbg !8133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !8134 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8136, metadata !DIExpression()), !dbg !8137
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #25, !dbg !8138
  ret %struct._snode* %2, !dbg !8138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !8139 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8141, metadata !DIExpression()), !dbg !8142
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8143
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8143
  ret %struct._snode* %3, !dbg !8144
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !8145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8147, metadata !DIExpression()), !dbg !8150
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #25, !dbg !8151, !range !8152
  call void @llvm.dbg.value(metadata i32 %2, metadata !8148, metadata !DIExpression()), !dbg !8150
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #25, !dbg !8153
  call void @llvm.dbg.value(metadata i32 %3, metadata !8149, metadata !DIExpression()), !dbg !8150
  ret i32 %3, !dbg !8154
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !8155 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8157, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.value(metadata i8* %1, metadata !8158, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.value(metadata i8* %1, metadata !8159, metadata !DIExpression()), !dbg !8160
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !8161
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !8161
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8162
  %6 = bitcast i8* %5 to %struct.device**, !dbg !8162
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !8162
  %8 = shl nuw i32 1, %0, !dbg !8163
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #25, !dbg !8164
  ret void, !dbg !8165
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8166 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !8170, metadata !DIExpression()), !dbg !8176
  call void @llvm.dbg.value(metadata i32 %1, metadata !8171, metadata !DIExpression()), !dbg !8176
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8172, metadata !DIExpression()), !dbg !8176
  %4 = bitcast i64* %3 to i8*, !dbg !8177
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !8177
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !8174, metadata !DIExpression()), !dbg !8176
  store i64 70368744177732, i64* %3, align 8, !dbg !8178
  call void @llvm.dbg.value(metadata i64* %3, metadata !8174, metadata !DIExpression(DW_OP_deref)), !dbg !8176
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #25, !dbg !8179
  call void @llvm.dbg.value(metadata i32 %5, metadata !8175, metadata !DIExpression()), !dbg !8176
  %6 = icmp eq i32 %5, 0, !dbg !8180
  br i1 %6, label %7, label %8, !dbg !8182

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #25, !dbg !8183
  br label %8, !dbg !8184

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !8185
  ret void, !dbg !8185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !8186 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8188, metadata !DIExpression()), !dbg !8191
  call void @llvm.dbg.value(metadata i8* %0, metadata !8189, metadata !DIExpression()), !dbg !8191
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !8192
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !8190, metadata !DIExpression()), !dbg !8191
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !8193
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !8193
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #24, !dbg !8194
  ret i32 %5, !dbg !8195
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8198, metadata !DIExpression()), !dbg !8201
  call void @llvm.dbg.value(metadata i32 %1, metadata !8199, metadata !DIExpression()), !dbg !8201
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #25, !dbg !8202
  call void @llvm.dbg.value(metadata i32 %3, metadata !8200, metadata !DIExpression()), !dbg !8201
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #25, !dbg !8203
  ret void, !dbg !8204
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #12 !dbg !8205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8209, metadata !DIExpression()), !dbg !8210
  %2 = sdiv i32 %0, 4, !dbg !8211
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !8212
  %6 = add nsw i32 %5, 16, !dbg !8213
  %7 = shl i32 15, %6, !dbg !8214
  %8 = or i32 %7, %2, !dbg !8215
  ret i32 %8, !dbg !8216
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8217 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8221, metadata !DIExpression()), !dbg !8223
  call void @llvm.dbg.value(metadata i32 %1, metadata !8222, metadata !DIExpression()), !dbg !8223
  %3 = and i32 %1, 255, !dbg !8224
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !8224
  %5 = load volatile i32, i32* %4, align 4, !dbg !8224
  %6 = lshr i32 %1, 16, !dbg !8224
  %7 = xor i32 %6, -1, !dbg !8224
  %8 = and i32 %5, %7, !dbg !8224
  call void @llvm.dbg.value(metadata i32 %6, metadata !8225, metadata !DIExpression()) #23, !dbg !8229
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #27, !dbg !8231, !srcloc !8232
  call void @llvm.dbg.value(metadata i32 %9, metadata !8228, metadata !DIExpression()) #23, !dbg !8229
  call void @llvm.dbg.value(metadata i32 %9, metadata !8233, metadata !DIExpression()) #23, !dbg !8238
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !8240, !range !6389
  %11 = shl i32 %0, %10, !dbg !8224
  %12 = or i32 %11, %8, !dbg !8224
  store volatile i32 %12, i32* %4, align 4, !dbg !8224
  ret void, !dbg !8241
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8242 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8246, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !8247, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.value(metadata i32 %2, metadata !8248, metadata !DIExpression()), !dbg !8251
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !8252
  %5 = icmp eq %struct._snode* %4, null, !dbg !8252
  br i1 %5, label %21, label %6, !dbg !8252

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #25, !dbg !8254
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8250, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !8249, metadata !DIExpression()), !dbg !8251
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !8255
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !8255
  %11 = load i32, i32* %10, align 4, !dbg !8255
  %12 = and i32 %11, %2, !dbg !8259
  %13 = icmp eq i32 %12, 0, !dbg !8259
  br i1 %13, label %19, label %14, !dbg !8260

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !8249, metadata !DIExpression()), !dbg !8251
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !8261
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !8261
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !8261
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #24, !dbg !8263
  br label %19, !dbg !8264

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8249, metadata !DIExpression()), !dbg !8251
  %20 = icmp eq %struct._snode* %8, null, !dbg !8265
  br i1 %20, label %21, label %6, !dbg !8265

21:                                               ; preds = %19, %3
  ret void, !dbg !8266
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !8267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8269, metadata !DIExpression()), !dbg !8270
  %2 = and i32 %0, 255, !dbg !8271
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !8271
  %4 = load volatile i32, i32* %3, align 4, !dbg !8271
  %5 = lshr i32 %0, 16, !dbg !8271
  %6 = and i32 %4, %5, !dbg !8271
  call void @llvm.dbg.value(metadata i32 %5, metadata !8225, metadata !DIExpression()) #23, !dbg !8272
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #27, !dbg !8274, !srcloc !8232
  call void @llvm.dbg.value(metadata i32 %7, metadata !8228, metadata !DIExpression()) #23, !dbg !8272
  call void @llvm.dbg.value(metadata i32 %7, metadata !8233, metadata !DIExpression()) #23, !dbg !8275
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !8277, !range !6389
  %9 = lshr i32 %6, %8, !dbg !8278
  ret i32 %9, !dbg !8279
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8280 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8285, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata i32 %1, metadata !8286, metadata !DIExpression()), !dbg !8287
  %3 = shl i32 %1, 16, !dbg !8288
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !8288
  store volatile i32 %3, i32* %4, align 4, !dbg !8288
  ret void, !dbg !8289
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !8290 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8294, metadata !DIExpression()), !dbg !8295
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8296
  %3 = load volatile i32, i32* %2, align 4, !dbg !8296
  ret i32 %3, !dbg !8297
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8298 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8300, metadata !DIExpression()), !dbg !8302
  call void @llvm.dbg.value(metadata i32 %1, metadata !8301, metadata !DIExpression()), !dbg !8302
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8303
  store volatile i32 %1, i32* %3, align 4, !dbg !8303
  ret void, !dbg !8304
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !8305 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8307, metadata !DIExpression()), !dbg !8308
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !8309
  %3 = load volatile i32, i32* %2, align 4, !dbg !8309
  ret i32 %3, !dbg !8310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !8311 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8315, metadata !DIExpression()), !dbg !8317
  call void @llvm.dbg.value(metadata i32* %1, metadata !8316, metadata !DIExpression()), !dbg !8317
  %3 = and i32 %0, 131072, !dbg !8318
  %4 = icmp eq i32 %3, 0, !dbg !8320
  br i1 %4, label %22, label %5, !dbg !8321

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !8322
  %6 = and i32 %0, 2, !dbg !8324
  %7 = icmp eq i32 %6, 0, !dbg !8326
  br i1 %7, label %11, label %8, !dbg !8327

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !8328
  %10 = icmp eq i32 %9, 0, !dbg !8328
  br i1 %10, label %33, label %11, !dbg !8331

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !8332
  store i32 %12, i32* %1, align 4, !dbg !8332
  %13 = and i32 %0, 16, !dbg !8333
  %14 = icmp eq i32 %13, 0, !dbg !8335
  br i1 %14, label %17, label %15, !dbg !8336

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !8337
  br label %31, !dbg !8339

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !8340
  %19 = icmp eq i32 %18, 0, !dbg !8342
  br i1 %19, label %33, label %20, !dbg !8343

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !8344
  br label %31, !dbg !8346

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !8347
  %24 = icmp eq i32 %23, 0, !dbg !8349
  br i1 %24, label %31, label %25, !dbg !8350

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !8351
  %27 = icmp eq i32 %26, 0, !dbg !8354
  br i1 %27, label %28, label %31, !dbg !8355

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !8356
  br label %33, !dbg !8357

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !8317
  ret i32 %34, !dbg !8357
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8358 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8362, metadata !DIExpression()), !dbg !8373
  call void @llvm.dbg.value(metadata i32 %1, metadata !8363, metadata !DIExpression()), !dbg !8373
  call void @llvm.dbg.value(metadata i32 %2, metadata !8364, metadata !DIExpression()), !dbg !8373
  call void @llvm.dbg.value(metadata i32 %3, metadata !8365, metadata !DIExpression()), !dbg !8373
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8374
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8374
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8374
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8366, metadata !DIExpression()), !dbg !8373
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !8375
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !8375
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !8375
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !8367, metadata !DIExpression()), !dbg !8373
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #25, !dbg !8376
  call void @llvm.dbg.value(metadata i32 %11, metadata !8368, metadata !DIExpression()), !dbg !8373
  %12 = and i32 %2, 48, !dbg !8377
  call void @llvm.dbg.value(metadata i32 %12, metadata !8369, metadata !DIExpression()), !dbg !8373
  call void @llvm.dbg.value(metadata i32 %2, metadata !8370, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !8373
  call void @llvm.dbg.value(metadata i32 %2, metadata !8371, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !8373
  call void @llvm.dbg.value(metadata i32 %2, metadata !8372, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !8373
  %13 = lshr i32 %2, 6, !dbg !8378
  %14 = and i32 %13, 1, !dbg !8378
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #25, !dbg !8379
  %15 = lshr i32 %2, 7, !dbg !8380
  %16 = and i32 %15, 3, !dbg !8380
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #25, !dbg !8381
  %17 = lshr i32 %2, 9, !dbg !8382
  %18 = and i32 %17, 3, !dbg !8382
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #25, !dbg !8383
  %19 = icmp eq i32 %12, 32, !dbg !8384
  br i1 %19, label %20, label %24, !dbg !8386

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !8387
  br i1 %21, label %22, label %23, !dbg !8390

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !8391
  br label %24, !dbg !8393

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !8394
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !8396
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #25, !dbg !8397
  ret void, !dbg !8398
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #12 !dbg !8399 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8401, metadata !DIExpression()), !dbg !8403
  %2 = shl nuw i32 1, %0, !dbg !8404
  call void @llvm.dbg.value(metadata i32 %2, metadata !8402, metadata !DIExpression()), !dbg !8403
  ret i32 %2, !dbg !8405
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8406 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8410, metadata !DIExpression()), !dbg !8413
  call void @llvm.dbg.value(metadata i32 %1, metadata !8411, metadata !DIExpression()), !dbg !8413
  call void @llvm.dbg.value(metadata i32 %2, metadata !8412, metadata !DIExpression()), !dbg !8413
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !8414
  %5 = load volatile i32, i32* %4, align 4, !dbg !8414
  %6 = xor i32 %1, -1, !dbg !8414
  %7 = and i32 %5, %6, !dbg !8414
  %8 = mul i32 %2, %1, !dbg !8414
  %9 = or i32 %7, %8, !dbg !8414
  store volatile i32 %9, i32* %4, align 4, !dbg !8414
  ret void, !dbg !8415
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8416 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8418, metadata !DIExpression()), !dbg !8421
  call void @llvm.dbg.value(metadata i32 %1, metadata !8419, metadata !DIExpression()), !dbg !8421
  call void @llvm.dbg.value(metadata i32 %2, metadata !8420, metadata !DIExpression()), !dbg !8421
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !8422
  %5 = load volatile i32, i32* %4, align 4, !dbg !8422
  call void @llvm.dbg.value(metadata i32 %1, metadata !8225, metadata !DIExpression()) #23, !dbg !8423
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #27, !dbg !8425, !srcloc !8232
  call void @llvm.dbg.value(metadata i32 %6, metadata !8228, metadata !DIExpression()) #23, !dbg !8423
  call void @llvm.dbg.value(metadata i32 %6, metadata !8233, metadata !DIExpression()) #23, !dbg !8426
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !8428, !range !6389
  %8 = shl nuw nsw i32 %7, 1, !dbg !8422
  %9 = shl i32 3, %8, !dbg !8422
  %10 = xor i32 %9, -1, !dbg !8422
  %11 = and i32 %5, %10, !dbg !8422
  call void @llvm.dbg.value(metadata i32 %1, metadata !8225, metadata !DIExpression()) #23, !dbg !8429
  call void @llvm.dbg.value(metadata i32 %6, metadata !8228, metadata !DIExpression()) #23, !dbg !8429
  call void @llvm.dbg.value(metadata i32 %6, metadata !8233, metadata !DIExpression()) #23, !dbg !8431
  %12 = shl i32 %2, %8, !dbg !8422
  %13 = or i32 %11, %12, !dbg !8422
  store volatile i32 %13, i32* %4, align 4, !dbg !8422
  ret void, !dbg !8433
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8434 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8436, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.value(metadata i32 %1, metadata !8437, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.value(metadata i32 %2, metadata !8438, metadata !DIExpression()), !dbg !8439
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !8440
  %5 = load volatile i32, i32* %4, align 4, !dbg !8440
  call void @llvm.dbg.value(metadata i32 %1, metadata !8225, metadata !DIExpression()) #23, !dbg !8441
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #27, !dbg !8443, !srcloc !8232
  call void @llvm.dbg.value(metadata i32 %6, metadata !8228, metadata !DIExpression()) #23, !dbg !8441
  call void @llvm.dbg.value(metadata i32 %6, metadata !8233, metadata !DIExpression()) #23, !dbg !8444
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !8446, !range !6389
  %8 = shl nuw nsw i32 %7, 1, !dbg !8440
  %9 = shl i32 3, %8, !dbg !8440
  %10 = xor i32 %9, -1, !dbg !8440
  %11 = and i32 %5, %10, !dbg !8440
  call void @llvm.dbg.value(metadata i32 %1, metadata !8225, metadata !DIExpression()) #23, !dbg !8447
  call void @llvm.dbg.value(metadata i32 %6, metadata !8228, metadata !DIExpression()) #23, !dbg !8447
  call void @llvm.dbg.value(metadata i32 %6, metadata !8233, metadata !DIExpression()) #23, !dbg !8449
  %12 = shl i32 %2, %8, !dbg !8440
  %13 = or i32 %11, %12, !dbg !8440
  store volatile i32 %13, i32* %4, align 4, !dbg !8440
  ret void, !dbg !8451
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8452 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8454, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.value(metadata i32 %1, metadata !8455, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.value(metadata i32 %2, metadata !8456, metadata !DIExpression()), !dbg !8457
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !8458
  %5 = load volatile i32, i32* %4, align 4, !dbg !8458
  call void @llvm.dbg.value(metadata i32 %1, metadata !8225, metadata !DIExpression()) #23, !dbg !8459
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #27, !dbg !8461, !srcloc !8232
  call void @llvm.dbg.value(metadata i32 %6, metadata !8228, metadata !DIExpression()) #23, !dbg !8459
  call void @llvm.dbg.value(metadata i32 %6, metadata !8233, metadata !DIExpression()) #23, !dbg !8462
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !8464, !range !6389
  %8 = shl nuw nsw i32 %7, 2, !dbg !8458
  %9 = shl i32 15, %8, !dbg !8458
  %10 = xor i32 %9, -1, !dbg !8458
  %11 = and i32 %5, %10, !dbg !8458
  call void @llvm.dbg.value(metadata i32 %1, metadata !8225, metadata !DIExpression()) #23, !dbg !8465
  call void @llvm.dbg.value(metadata i32 %6, metadata !8228, metadata !DIExpression()) #23, !dbg !8465
  call void @llvm.dbg.value(metadata i32 %6, metadata !8233, metadata !DIExpression()) #23, !dbg !8467
  %12 = shl i32 %2, %8, !dbg !8458
  %13 = or i32 %11, %12, !dbg !8458
  store volatile i32 %13, i32* %4, align 4, !dbg !8458
  ret void, !dbg !8469
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8470 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8472, metadata !DIExpression()), !dbg !8475
  call void @llvm.dbg.value(metadata i32 %1, metadata !8473, metadata !DIExpression()), !dbg !8475
  call void @llvm.dbg.value(metadata i32 %2, metadata !8474, metadata !DIExpression()), !dbg !8475
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !8476
  %5 = load volatile i32, i32* %4, align 4, !dbg !8476
  %6 = lshr i32 %1, 8, !dbg !8476
  call void @llvm.dbg.value(metadata i32 %6, metadata !8225, metadata !DIExpression()) #23, !dbg !8477
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #27, !dbg !8479, !srcloc !8232
  call void @llvm.dbg.value(metadata i32 %7, metadata !8228, metadata !DIExpression()) #23, !dbg !8477
  call void @llvm.dbg.value(metadata i32 %7, metadata !8233, metadata !DIExpression()) #23, !dbg !8480
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !8482, !range !6389
  %9 = shl nuw nsw i32 %8, 2, !dbg !8476
  %10 = shl i32 15, %9, !dbg !8476
  %11 = xor i32 %10, -1, !dbg !8476
  %12 = and i32 %5, %11, !dbg !8476
  call void @llvm.dbg.value(metadata i32 %6, metadata !8225, metadata !DIExpression()) #23, !dbg !8483
  call void @llvm.dbg.value(metadata i32 %7, metadata !8228, metadata !DIExpression()) #23, !dbg !8483
  call void @llvm.dbg.value(metadata i32 %7, metadata !8233, metadata !DIExpression()) #23, !dbg !8485
  %13 = shl i32 %2, %9, !dbg !8476
  %14 = or i32 %12, %13, !dbg !8476
  store volatile i32 %14, i32* %4, align 4, !dbg !8476
  ret void, !dbg !8487
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8488 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8490, metadata !DIExpression()), !dbg !8493
  call void @llvm.dbg.value(metadata i32 %1, metadata !8491, metadata !DIExpression()), !dbg !8493
  call void @llvm.dbg.value(metadata i32 %2, metadata !8492, metadata !DIExpression()), !dbg !8493
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !8494
  %5 = load volatile i32, i32* %4, align 4, !dbg !8494
  call void @llvm.dbg.value(metadata i32 %1, metadata !8225, metadata !DIExpression()) #23, !dbg !8495
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #27, !dbg !8497, !srcloc !8232
  call void @llvm.dbg.value(metadata i32 %6, metadata !8228, metadata !DIExpression()) #23, !dbg !8495
  call void @llvm.dbg.value(metadata i32 %6, metadata !8233, metadata !DIExpression()) #23, !dbg !8498
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !8500, !range !6389
  %8 = shl nuw nsw i32 %7, 1, !dbg !8494
  %9 = shl i32 3, %8, !dbg !8494
  %10 = xor i32 %9, -1, !dbg !8494
  %11 = and i32 %5, %10, !dbg !8494
  call void @llvm.dbg.value(metadata i32 %1, metadata !8225, metadata !DIExpression()) #23, !dbg !8501
  call void @llvm.dbg.value(metadata i32 %6, metadata !8228, metadata !DIExpression()) #23, !dbg !8501
  call void @llvm.dbg.value(metadata i32 %6, metadata !8233, metadata !DIExpression()) #23, !dbg !8503
  %12 = shl i32 %2, %8, !dbg !8494
  %13 = or i32 %11, %12, !dbg !8494
  store volatile i32 %13, i32* %4, align 4, !dbg !8494
  ret void, !dbg !8505
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !8506 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8508, metadata !DIExpression()), !dbg !8511
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8512
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !8512
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !8512
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !8509, metadata !DIExpression()), !dbg !8511
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !8513
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !8514
  %6 = tail call fastcc zeroext i1 @device_is_ready.56() #25, !dbg !8515
  br i1 %6, label %7, label %11, !dbg !8517

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #25, !dbg !8518
  call void @llvm.dbg.value(metadata i32 %8, metadata !8510, metadata !DIExpression()), !dbg !8511
  %9 = icmp slt i32 %8, 0, !dbg !8519
  %10 = select i1 %9, i32 %8, i32 0, !dbg !8521
  br label %11, !dbg !8521

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !8511
  ret i32 %12, !dbg !8522
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.56() unnamed_addr #1 !dbg !8523 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8527, metadata !DIExpression()), !dbg !8528
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8529, !srcloc !8531
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.57() #25, !dbg !8532
  ret i1 %1, !dbg !8533
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8534 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8538, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.value(metadata i8 1, metadata !8539, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !8540, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.value(metadata i32 0, metadata !8541, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8542, metadata !DIExpression()), !dbg !8543
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8544
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !8544
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !8544
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !8540, metadata !DIExpression()), !dbg !8543
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !8545
  %6 = bitcast %struct.sensor_value* %5 to i8*, !dbg !8548
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #25, !dbg !8549
  call void @llvm.dbg.value(metadata i32 %7, metadata !8541, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.value(metadata i32 %7, metadata !8541, metadata !DIExpression()), !dbg !8543
  ret i32 %7, !dbg !8550
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.57() unnamed_addr #1 !dbg !8551 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8553, metadata !DIExpression()), !dbg !8554
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #24, !dbg !8555
  ret i1 %1, !dbg !8556
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8557 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8561, metadata !DIExpression()), !dbg !8569
  call void @llvm.dbg.value(metadata i32 %1, metadata !8562, metadata !DIExpression()), !dbg !8569
  call void @llvm.dbg.value(metadata i32 %2, metadata !8563, metadata !DIExpression()), !dbg !8569
  call void @llvm.dbg.value(metadata i32 %3, metadata !8564, metadata !DIExpression()), !dbg !8569
  call void @llvm.dbg.value(metadata i32 0, metadata !8565, metadata !DIExpression()), !dbg !8569
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #25, !dbg !8570
  %5 = icmp eq i32 %3, 17, !dbg !8571
  br i1 %5, label %6, label %14, !dbg !8572

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !8573
  call void @llvm.dbg.value(metadata i32 %7, metadata !8566, metadata !DIExpression()), !dbg !8574
  %8 = icmp eq i32 %7, 0, !dbg !8575
  %9 = shl nuw i32 1, %1, !dbg !8577
  br i1 %8, label %12, label %10, !dbg !8578

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !8579
  br label %14, !dbg !8581

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !8582
  br label %14, !dbg !8585

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !8586
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #15 !dbg !8587 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8589, metadata !DIExpression()), !dbg !8593
  call void @llvm.dbg.value(metadata i8* %1, metadata !8590, metadata !DIExpression()), !dbg !8593
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8594
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8594
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8594
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8591, metadata !DIExpression()), !dbg !8593
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8595
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8595
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #25, !dbg !8597
  %9 = icmp eq i32 %8, 0, !dbg !8597
  br i1 %9, label %12, label %10, !dbg !8598

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8599
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #25, !dbg !8601
  br label %12, !dbg !8602

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8603
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #25, !dbg !8605
  %15 = icmp eq i32 %14, 0, !dbg !8605
  br i1 %15, label %19, label %16, !dbg !8606

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8607
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #25, !dbg !8608
  store i8 %18, i8* %1, align 1, !dbg !8609
  br label %19, !dbg !8610

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !8593
  ret i32 %20, !dbg !8611
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !8612 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8614, metadata !DIExpression()), !dbg !8618
  call void @llvm.dbg.value(metadata i8 %1, metadata !8615, metadata !DIExpression()), !dbg !8618
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8619
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8619
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8619
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8616, metadata !DIExpression()), !dbg !8618
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !8620

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8621
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #25, !dbg !8624
  %10 = icmp eq i32 %9, 0, !dbg !8624
  br i1 %10, label %18, label %11, !dbg !8625

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8626, !srcloc !8633
  call void @llvm.dbg.value(metadata i32 undef, metadata !8629, metadata !DIExpression()) #23, !dbg !8634
  call void @llvm.dbg.value(metadata i32 undef, metadata !8630, metadata !DIExpression()) #23, !dbg !8634
  call void @llvm.dbg.value(metadata i32 undef, metadata !8617, metadata !DIExpression()), !dbg !8618
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8635
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #25, !dbg !8637
  %15 = icmp eq i32 %14, 0, !dbg !8637
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !8626
  br i1 %15, label %17, label %19, !dbg !8638

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !8629, metadata !DIExpression()) #23, !dbg !8634
  call void @llvm.dbg.value(metadata i32 %16, metadata !8617, metadata !DIExpression()), !dbg !8618
  call void @llvm.dbg.value(metadata i32 undef, metadata !8639, metadata !DIExpression()) #23, !dbg !8642
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !8644, !srcloc !8645
  br label %18, !dbg !8646

18:                                               ; preds = %17, %7
  br label %7, !dbg !8621, !llvm.loop !8647

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !8626
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8649
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #25, !dbg !8650
  call void @llvm.dbg.value(metadata i32 %20, metadata !8639, metadata !DIExpression()) #23, !dbg !8651
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !8653, !srcloc !8645
  ret void, !dbg !8654
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #15 !dbg !8655 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8657, metadata !DIExpression()), !dbg !8660
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8661
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8661
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8661
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8658, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i32 0, metadata !8659, metadata !DIExpression()), !dbg !8660
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8662
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8662
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #25, !dbg !8664
  %8 = icmp ne i32 %7, 0, !dbg !8664
  %9 = zext i1 %8 to i32, !dbg !8665
  call void @llvm.dbg.value(metadata i32 %9, metadata !8659, metadata !DIExpression()), !dbg !8660
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8666
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #25, !dbg !8668
  %12 = icmp eq i32 %11, 0, !dbg !8668
  %13 = or i32 %9, 2, !dbg !8669
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !8669
  call void @llvm.dbg.value(metadata i32 %14, metadata !8659, metadata !DIExpression()), !dbg !8660
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8670
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #25, !dbg !8672
  %17 = icmp eq i32 %16, 0, !dbg !8672
  %18 = or i32 %14, 4, !dbg !8673
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !8673
  call void @llvm.dbg.value(metadata i32 %19, metadata !8659, metadata !DIExpression()), !dbg !8660
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8674
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #25, !dbg !8676
  %22 = icmp eq i32 %21, 0, !dbg !8676
  %23 = or i32 %19, 8, !dbg !8677
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !8677
  call void @llvm.dbg.value(metadata i32 %24, metadata !8659, metadata !DIExpression()), !dbg !8660
  %25 = and i32 %24, 8, !dbg !8678
  %26 = icmp eq i32 %25, 0, !dbg !8678
  br i1 %26, label %29, label %27, !dbg !8680

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8681
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #25, !dbg !8683
  br label %29, !dbg !8684

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !8685
  %31 = icmp eq i32 %30, 0, !dbg !8685
  br i1 %31, label %34, label %32, !dbg !8687

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8688
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #25, !dbg !8690
  br label %34, !dbg !8691

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !8692
  %36 = icmp eq i32 %35, 0, !dbg !8692
  br i1 %36, label %39, label %37, !dbg !8694

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8695
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #25, !dbg !8697
  br label %39, !dbg !8698

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !8699
  %41 = icmp eq i32 %40, 0, !dbg !8699
  br i1 %41, label %44, label %42, !dbg !8701

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8702
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #25, !dbg !8704
  br label %44, !dbg !8705

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8706
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #25, !dbg !8707
  ret i32 %24, !dbg !8708
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !8709 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8711, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8712, metadata !DIExpression()), !dbg !8720
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8721
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8721
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8721
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8713, metadata !DIExpression()), !dbg !8720
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8722
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !8722
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !8722
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !8714, metadata !DIExpression()), !dbg !8720
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8723
  %10 = load i8, i8* %9, align 4, !dbg !8723
  %11 = zext i8 %10 to i32, !dbg !8724
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #25, !dbg !8725
  call void @llvm.dbg.value(metadata i32 %12, metadata !8716, metadata !DIExpression()), !dbg !8720
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8726
  %14 = load i8, i8* %13, align 1, !dbg !8726
  %15 = zext i8 %14 to i32, !dbg !8727
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #25, !dbg !8728
  call void @llvm.dbg.value(metadata i32 %16, metadata !8717, metadata !DIExpression()), !dbg !8720
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8729
  %18 = load i8, i8* %17, align 2, !dbg !8729
  %19 = zext i8 %18 to i32, !dbg !8730
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #25, !dbg !8731
  call void @llvm.dbg.value(metadata i32 %20, metadata !8718, metadata !DIExpression()), !dbg !8720
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8732
  %22 = load i8, i8* %21, align 1, !dbg !8732
  %23 = zext i8 %22 to i32, !dbg !8733
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #25, !dbg !8734
  call void @llvm.dbg.value(metadata i32 %24, metadata !8719, metadata !DIExpression()), !dbg !8720
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !8735

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !8737
  br i1 %26, label %69, label %27, !dbg !8739

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !8740

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !8741
  br i1 %29, label %65, label %30, !dbg !8741

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !8743
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !8720
  br i1 %31, label %38, label %34, !dbg !8745

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !8746
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !8746

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !8749
  br i1 %37, label %38, label %69, !dbg !8750

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8751
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #25, !dbg !8752
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #25, !dbg !8753
  %41 = icmp eq i32 %12, %40, !dbg !8755
  br i1 %41, label %43, label %42, !dbg !8756

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #25, !dbg !8757
  br label %43, !dbg !8759

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #25, !dbg !8760
  %45 = icmp eq i32 %16, %44, !dbg !8762
  br i1 %45, label %47, label %46, !dbg !8763

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #25, !dbg !8764
  br label %47, !dbg !8766

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #25, !dbg !8767
  %49 = icmp eq i32 %20, %48, !dbg !8769
  br i1 %49, label %51, label %50, !dbg !8770

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #25, !dbg !8771
  br label %51, !dbg !8773

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #25, !dbg !8774
  %53 = icmp eq i32 %24, %52, !dbg !8776
  br i1 %53, label %55, label %54, !dbg !8777

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #25, !dbg !8778
  br label %55, !dbg !8780

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8781
  %57 = load i32, i32* %56, align 4, !dbg !8781
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !8783
  %59 = load i32, i32* %58, align 4, !dbg !8783
  %60 = icmp eq i32 %57, %59, !dbg !8784
  br i1 %60, label %63, label %61, !dbg !8785

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #25, !dbg !8786
  %62 = load i32, i32* %56, align 4, !dbg !8788
  store i32 %62, i32* %58, align 4, !dbg !8789
  br label %63, !dbg !8790

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !8791
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #25, !dbg !8792
  br label %69, !dbg !8793

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !8741
  %67 = and i8 %66, 1, !dbg !8741
  %68 = icmp eq i8 %67, 0, !dbg !8741
  br i1 %68, label %30, label %69, !dbg !8741

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !8720
  ret i32 %70, !dbg !8794
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !8795 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8797, metadata !DIExpression()), !dbg !8800
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8798, metadata !DIExpression()), !dbg !8800
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8801
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !8801
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !8801
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !8799, metadata !DIExpression()), !dbg !8800
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !8802
  %7 = load i32, i32* %6, align 4, !dbg !8802
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8803
  store i32 %7, i32* %8, align 4, !dbg !8804
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !8805, !range !8806
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #25, !dbg !8807
  %11 = trunc i32 %10 to i8, !dbg !8807
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8808
  store i8 %11, i8* %12, align 4, !dbg !8809
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #25, !dbg !8810, !range !8811
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #25, !dbg !8812
  %15 = trunc i32 %14 to i8, !dbg !8812
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8813
  store i8 %15, i8* %16, align 1, !dbg !8814
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #25, !dbg !8815
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !8816, !range !8806
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #25, !dbg !8817
  %20 = trunc i32 %19 to i8, !dbg !8817
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8818
  store i8 %20, i8* %21, align 2, !dbg !8819
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #25, !dbg !8820, !range !8821
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #25, !dbg !8822
  %24 = trunc i32 %23 to i8, !dbg !8822
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8823
  store i8 %24, i8* %25, align 1, !dbg !8824
  ret i32 0, !dbg !8825
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8826 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8830, metadata !DIExpression()), !dbg !8832
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8833
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8833
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8833
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8831, metadata !DIExpression()), !dbg !8832
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8834
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8834
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #25, !dbg !8835
  ret i32 %7, !dbg !8836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #12 !dbg !8837 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8841, metadata !DIExpression()), !dbg !8842
  %2 = icmp eq i32 %0, 1024, !dbg !8843
  %3 = select i1 %2, i32 2, i32 0, !dbg !8843
  %4 = icmp eq i32 %0, 1536, !dbg !8843
  %5 = select i1 %4, i32 1, i32 %3, !dbg !8843
  ret i32 %5, !dbg !8844
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8845 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8847, metadata !DIExpression()), !dbg !8849
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8850
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8850
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8850
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8848, metadata !DIExpression()), !dbg !8849
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8851
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8851
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #25, !dbg !8852
  ret i32 %7, !dbg !8853
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !8854 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8858, metadata !DIExpression()), !dbg !8859
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !8860
  %3 = icmp ult i32 %2, 4, !dbg !8860
  br i1 %3, label %4, label %7, !dbg !8860

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !8860
  %6 = load i32, i32* %5, align 4, !dbg !8860
  br label %7, !dbg !8860

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !8861
  ret i32 %8, !dbg !8863
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8864 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8866, metadata !DIExpression()), !dbg !8868
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8869
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8869
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8869
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8867, metadata !DIExpression()), !dbg !8868
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8870
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8870
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #25, !dbg !8871
  ret i32 %7, !dbg !8872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8873 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8877, metadata !DIExpression()), !dbg !8879
  call void @llvm.dbg.value(metadata i32 %1, metadata !8878, metadata !DIExpression()), !dbg !8879
  %3 = icmp eq i32 %0, 4096, !dbg !8880
  %4 = icmp eq i32 %1, 0, !dbg !8880
  %5 = select i1 %4, i32 4, i32 3, !dbg !8880
  %6 = select i1 %4, i32 3, i32 2, !dbg !8880
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !8880
  ret i32 %7, !dbg !8881
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8882 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8884, metadata !DIExpression()), !dbg !8886
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8887
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8887
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8887
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8885, metadata !DIExpression()), !dbg !8886
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8888
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8888
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #25, !dbg !8889
  ret i32 %7, !dbg !8890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8891 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8895, metadata !DIExpression()), !dbg !8896
  %2 = icmp eq i32 %0, 768, !dbg !8897
  %3 = zext i1 %2 to i32, !dbg !8896
  ret i32 %3, !dbg !8899
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8900 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8905, metadata !DIExpression()), !dbg !8906
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8907
  %3 = load volatile i32, i32* %2, align 4, !dbg !8907
  %4 = and i32 %3, 768, !dbg !8907
  ret i32 %4, !dbg !8908
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8909 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8911, metadata !DIExpression()), !dbg !8912
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8913
  %3 = load volatile i32, i32* %2, align 4, !dbg !8913
  %4 = and i32 %3, 4096, !dbg !8913
  ret i32 %4, !dbg !8914
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8915 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8917, metadata !DIExpression()), !dbg !8918
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8919
  %3 = load volatile i32, i32* %2, align 4, !dbg !8919
  %4 = and i32 %3, 12288, !dbg !8919
  ret i32 %4, !dbg !8920
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8921 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8923, metadata !DIExpression()), !dbg !8924
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8925
  %3 = load volatile i32, i32* %2, align 4, !dbg !8925
  %4 = and i32 %3, 1536, !dbg !8925
  ret i32 %4, !dbg !8926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #12 !dbg !8927 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8931, metadata !DIExpression()), !dbg !8932
  %2 = icmp eq i32 %0, 2, !dbg !8933
  %3 = select i1 %2, i32 1024, i32 0, !dbg !8933
  %4 = icmp eq i32 %0, 1, !dbg !8933
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !8933
  ret i32 %5, !dbg !8934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !8935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8939, metadata !DIExpression()), !dbg !8940
  %2 = icmp ult i32 %0, 3, !dbg !8941
  br i1 %2, label %3, label %6, !dbg !8941

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !8941
  %5 = load i32, i32* %4, align 4, !dbg !8941
  br label %6, !dbg !8941

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !8942
  ret i32 %7, !dbg !8944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8945 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8949, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i32 %1, metadata !8950, metadata !DIExpression()), !dbg !8951
  %3 = icmp eq i32 %0, 4, !dbg !8952
  %4 = icmp eq i32 %1, 0, !dbg !8952
  %5 = select i1 %4, i32 0, i32 4096, !dbg !8952
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !8952
  ret i32 %6, !dbg !8953
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8954 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8958, metadata !DIExpression()), !dbg !8959
  %2 = icmp eq i32 %0, 1, !dbg !8960
  %3 = select i1 %2, i32 768, i32 0, !dbg !8959
  ret i32 %3, !dbg !8962
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8963 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8967, metadata !DIExpression()), !dbg !8968
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8969
  %3 = load volatile i32, i32* %2, align 4, !dbg !8969
  %4 = and i32 %3, -8193, !dbg !8969
  store volatile i32 %4, i32* %2, align 4, !dbg !8969
  ret void, !dbg !8970
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8971 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8975, metadata !DIExpression()), !dbg !8978
  call void @llvm.dbg.value(metadata i32 %1, metadata !8976, metadata !DIExpression()), !dbg !8978
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8979
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8979
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8979
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8977, metadata !DIExpression()), !dbg !8978
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8980
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8980
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8981
  ret void, !dbg !8982
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8983 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8985, metadata !DIExpression()), !dbg !8988
  call void @llvm.dbg.value(metadata i32 %1, metadata !8986, metadata !DIExpression()), !dbg !8988
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8989
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8989
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8989
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8987, metadata !DIExpression()), !dbg !8988
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8990
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8990
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8991
  ret void, !dbg !8992
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8993 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8995, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.value(metadata i32 %1, metadata !8996, metadata !DIExpression()), !dbg !8998
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8999
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8999
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8999
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8997, metadata !DIExpression()), !dbg !8998
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9000
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9000
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !9001
  ret void, !dbg !9002
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !9003 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9005, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata i32 %1, metadata !9006, metadata !DIExpression()), !dbg !9008
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9009
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9009
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9009
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9007, metadata !DIExpression()), !dbg !9008
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9010
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9010
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !9011
  ret void, !dbg !9012
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9013 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9015, metadata !DIExpression()), !dbg !9020
  call void @llvm.dbg.value(metadata i32 %1, metadata !9016, metadata !DIExpression()), !dbg !9020
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9021
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9021
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9021
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9017, metadata !DIExpression()), !dbg !9020
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9022
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !9022
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !9022
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !9018, metadata !DIExpression()), !dbg !9020
  %10 = bitcast i32* %3 to i8*, !dbg !9023
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !9023
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !9024
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !9024
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !9028
  %14 = bitcast %struct.sensor_value** %13 to i8**, !dbg !9028
  %15 = load i8*, i8** %14, align 4, !dbg !9028
  call void @llvm.dbg.value(metadata i32* %3, metadata !9019, metadata !DIExpression(DW_OP_deref)), !dbg !9020
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #25, !dbg !9029
  %17 = icmp slt i32 %16, 0, !dbg !9030
  br i1 %17, label %23, label %18, !dbg !9031

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9032
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9032
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #25, !dbg !9033
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9034
  %22 = load i32, i32* %3, align 4, !dbg !9035
  call void @llvm.dbg.value(metadata i32 %22, metadata !9019, metadata !DIExpression()), !dbg !9020
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #25, !dbg !9036
  br label %23, !dbg !9037

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !9037
  ret void, !dbg !9037
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !9038 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9040, metadata !DIExpression()), !dbg !9041
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9042
  %3 = load volatile i32, i32* %2, align 4, !dbg !9042
  %4 = or i32 %3, 8192, !dbg !9042
  store volatile i32 %4, i32* %2, align 4, !dbg !9042
  ret void, !dbg !9043
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !9044 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9046, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i8* %1, metadata !9047, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32* %2, metadata !9048, metadata !DIExpression()), !dbg !9050
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9051
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !9051
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !9051
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !9049, metadata !DIExpression()), !dbg !9050
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !9052
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !9052
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !9054
  br i1 %9, label %12, label %10, !dbg !9055

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #24, !dbg !9056
  br label %12, !dbg !9057

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !9050
  ret i32 %13, !dbg !9058
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !9059 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9063, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.value(metadata i32 0, metadata !9064, metadata !DIExpression()), !dbg !9065
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9066
  %3 = load volatile i32, i32* %2, align 4, !dbg !9066
  %4 = and i32 %3, -32769, !dbg !9066
  store volatile i32 %4, i32* %2, align 4, !dbg !9066
  ret void, !dbg !9067
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !9068 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9072, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32 %1, metadata !9073, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32 0, metadata !9074, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32 %2, metadata !9075, metadata !DIExpression()), !dbg !9076
  %4 = zext i32 %1 to i64, !dbg !9077
  %5 = mul nuw nsw i64 %4, 25, !dbg !9077
  %6 = zext i32 %2 to i64, !dbg !9077
  %7 = shl nuw nsw i64 %6, 2, !dbg !9077
  %8 = udiv i64 %5, %7, !dbg !9077
  %9 = trunc i64 %8 to i32, !dbg !9077
  %10 = udiv i32 %9, 100, !dbg !9077
  %11 = shl nuw nsw i32 %10, 4, !dbg !9077
  %12 = mul i32 %10, -100, !dbg !9077
  %13 = add i32 %12, %9, !dbg !9077
  %14 = shl i32 %13, 4, !dbg !9077
  %15 = add i32 %14, 50, !dbg !9077
  %16 = udiv i32 %15, 100, !dbg !9077
  %17 = and i32 %16, 240, !dbg !9077
  %18 = add nuw nsw i32 %17, %11, !dbg !9077
  %19 = and i32 %16, 15, !dbg !9077
  %20 = and i32 %18, 65520, !dbg !9080
  %21 = or i32 %20, %19, !dbg !9080
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !9081
  store volatile i32 %21, i32* %22, align 4, !dbg !9082
  ret void, !dbg !9083
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !9084 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9086, metadata !DIExpression()), !dbg !9088
  call void @llvm.dbg.value(metadata i32 %1, metadata !9087, metadata !DIExpression()), !dbg !9088
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9089
  %4 = load volatile i32, i32* %3, align 4, !dbg !9089
  %5 = and i32 %4, -769, !dbg !9089
  %6 = or i32 %5, %1, !dbg !9089
  store volatile i32 %6, i32* %3, align 4, !dbg !9089
  ret void, !dbg !9090
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !9091 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9093, metadata !DIExpression()), !dbg !9095
  call void @llvm.dbg.value(metadata i32 %1, metadata !9094, metadata !DIExpression()), !dbg !9095
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9096
  %4 = load volatile i32, i32* %3, align 4, !dbg !9096
  %5 = and i32 %4, -4097, !dbg !9096
  %6 = or i32 %5, %1, !dbg !9096
  store volatile i32 %6, i32* %3, align 4, !dbg !9096
  ret void, !dbg !9097
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !9098 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9100, metadata !DIExpression()), !dbg !9102
  call void @llvm.dbg.value(metadata i32 %1, metadata !9101, metadata !DIExpression()), !dbg !9102
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9103
  %4 = load volatile i32, i32* %3, align 4, !dbg !9103
  %5 = and i32 %4, -12289, !dbg !9103
  %6 = or i32 %5, %1, !dbg !9103
  store volatile i32 %6, i32* %3, align 4, !dbg !9103
  ret void, !dbg !9104
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !9105 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9107, metadata !DIExpression()), !dbg !9109
  call void @llvm.dbg.value(metadata i32 %1, metadata !9108, metadata !DIExpression()), !dbg !9109
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9110
  %4 = load volatile i32, i32* %3, align 4, !dbg !9110
  %5 = and i32 %4, -1537, !dbg !9110
  %6 = or i32 %5, %1, !dbg !9110
  store volatile i32 %6, i32* %3, align 4, !dbg !9110
  ret void, !dbg !9111
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9112 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9114, metadata !DIExpression()), !dbg !9115
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9116
  %3 = load volatile i32, i32* %2, align 4, !dbg !9116
  %4 = lshr i32 %3, 3, !dbg !9117
  %5 = and i32 %4, 1, !dbg !9117
  ret i32 %5, !dbg !9118
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9119 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9121, metadata !DIExpression()), !dbg !9122
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9123
  %3 = load volatile i32, i32* %2, align 4, !dbg !9123
  %4 = and i32 %3, 1, !dbg !9123
  ret i32 %4, !dbg !9124
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9125 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9127, metadata !DIExpression()), !dbg !9128
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9129
  %3 = load volatile i32, i32* %2, align 4, !dbg !9129
  %4 = lshr i32 %3, 1, !dbg !9130
  %5 = and i32 %4, 1, !dbg !9130
  ret i32 %5, !dbg !9131
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9132 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9134, metadata !DIExpression()), !dbg !9135
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9136
  %3 = load volatile i32, i32* %2, align 4, !dbg !9136
  %4 = lshr i32 %3, 8, !dbg !9137
  %5 = and i32 %4, 1, !dbg !9137
  ret i32 %5, !dbg !9138
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !9139 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9141, metadata !DIExpression()), !dbg !9142
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9143
  store volatile i32 -257, i32* %2, align 4, !dbg !9143
  ret void, !dbg !9144
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9145 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9147, metadata !DIExpression()), !dbg !9149
  %3 = bitcast i32* %2 to i8*, !dbg !9150
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9150
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9148, metadata !DIExpression()), !dbg !9151
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9152
  %5 = load volatile i32, i32* %4, align 4, !dbg !9152
  store volatile i32 %5, i32* %2, align 4, !dbg !9153
  %6 = load volatile i32, i32* %2, align 4, !dbg !9154
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9155
  %8 = load volatile i32, i32* %7, align 4, !dbg !9155
  store volatile i32 %8, i32* %2, align 4, !dbg !9156
  %9 = load volatile i32, i32* %2, align 4, !dbg !9157
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9158
  ret void, !dbg !9158
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9159 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9161, metadata !DIExpression()), !dbg !9163
  %3 = bitcast i32* %2 to i8*, !dbg !9164
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9164
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9162, metadata !DIExpression()), !dbg !9165
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9166
  %5 = load volatile i32, i32* %4, align 4, !dbg !9166
  store volatile i32 %5, i32* %2, align 4, !dbg !9167
  %6 = load volatile i32, i32* %2, align 4, !dbg !9168
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9169
  %8 = load volatile i32, i32* %7, align 4, !dbg !9169
  store volatile i32 %8, i32* %2, align 4, !dbg !9170
  %9 = load volatile i32, i32* %2, align 4, !dbg !9171
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9172
  ret void, !dbg !9172
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9173 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9175, metadata !DIExpression()), !dbg !9177
  %3 = bitcast i32* %2 to i8*, !dbg !9178
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9178
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9176, metadata !DIExpression()), !dbg !9179
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9180
  %5 = load volatile i32, i32* %4, align 4, !dbg !9180
  store volatile i32 %5, i32* %2, align 4, !dbg !9181
  %6 = load volatile i32, i32* %2, align 4, !dbg !9182
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9183
  %8 = load volatile i32, i32* %7, align 4, !dbg !9183
  store volatile i32 %8, i32* %2, align 4, !dbg !9184
  %9 = load volatile i32, i32* %2, align 4, !dbg !9185
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9186
  ret void, !dbg !9186
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9187 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9189, metadata !DIExpression()), !dbg !9191
  %3 = bitcast i32* %2 to i8*, !dbg !9192
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9192
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9190, metadata !DIExpression()), !dbg !9193
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9194
  %5 = load volatile i32, i32* %4, align 4, !dbg !9194
  store volatile i32 %5, i32* %2, align 4, !dbg !9195
  %6 = load volatile i32, i32* %2, align 4, !dbg !9196
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9197
  %8 = load volatile i32, i32* %7, align 4, !dbg !9197
  store volatile i32 %8, i32* %2, align 4, !dbg !9198
  %9 = load volatile i32, i32* %2, align 4, !dbg !9199
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9200
  ret void, !dbg !9200
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9201 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9203, metadata !DIExpression()), !dbg !9204
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9205
  %3 = load volatile i32, i32* %2, align 4, !dbg !9205
  %4 = lshr i32 %3, 7, !dbg !9206
  %5 = and i32 %4, 1, !dbg !9206
  ret i32 %5, !dbg !9207
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #13 !dbg !9208 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9212, metadata !DIExpression()), !dbg !9214
  call void @llvm.dbg.value(metadata i8 %1, metadata !9213, metadata !DIExpression()), !dbg !9214
  %3 = zext i8 %1 to i32, !dbg !9215
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9216
  store volatile i32 %3, i32* %4, align 4, !dbg !9217
  ret void, !dbg !9218
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9219 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9221, metadata !DIExpression()), !dbg !9222
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9223
  %3 = load volatile i32, i32* %2, align 4, !dbg !9223
  %4 = lshr i32 %3, 5, !dbg !9224
  %5 = and i32 %4, 1, !dbg !9224
  ret i32 %5, !dbg !9225
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9226 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9230, metadata !DIExpression()), !dbg !9231
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9232
  %3 = load volatile i32, i32* %2, align 4, !dbg !9232
  %4 = trunc i32 %3 to i8, !dbg !9233
  ret i8 %4, !dbg !9234
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !9235 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9237, metadata !DIExpression()), !dbg !9243
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9244
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9244
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9244
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9238, metadata !DIExpression()), !dbg !9243
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9245
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !9245
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !9245
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !9239, metadata !DIExpression()), !dbg !9243
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #25, !dbg !9246
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !9247
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !9247
  %10 = tail call fastcc zeroext i1 @device_is_ready.62(%struct.device* noundef %9) #25, !dbg !9249
  br i1 %10, label %11, label %49, !dbg !9250

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !9251
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !9252
  %14 = bitcast %struct.sensor_value** %13 to i8**, !dbg !9252
  %15 = load i8*, i8** %14, align 4, !dbg !9252
  %16 = tail call fastcc i32 @clock_control_on.63(%struct.device* noundef %12, i8* noundef %15) #25, !dbg !9253
  call void @llvm.dbg.value(metadata i32 %16, metadata !9242, metadata !DIExpression()), !dbg !9243
  %17 = icmp eq i32 %16, 0, !dbg !9254
  br i1 %17, label %18, label %49, !dbg !9256

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !9257
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !9257
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #25, !dbg !9258
  call void @llvm.dbg.value(metadata i32 %21, metadata !9242, metadata !DIExpression()), !dbg !9243
  %22 = icmp slt i32 %21, 0, !dbg !9259
  br i1 %22, label %49, label %23, !dbg !9261

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9262
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9262
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #25, !dbg !9263
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9264
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #25, !dbg !9265
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !9266
  %28 = load i32, i32* %27, align 4, !dbg !9266
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !9268

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !9240, metadata !DIExpression()), !dbg !9243
  call void @llvm.dbg.value(metadata i32 4096, metadata !9241, metadata !DIExpression()), !dbg !9243
  br label %31, !dbg !9269

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !9240, metadata !DIExpression()), !dbg !9243
  call void @llvm.dbg.value(metadata i32 0, metadata !9241, metadata !DIExpression()), !dbg !9243
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !9272
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !9272
  call void @llvm.dbg.value(metadata i32 %33, metadata !9241, metadata !DIExpression()), !dbg !9243
  call void @llvm.dbg.value(metadata i32 %32, metadata !9240, metadata !DIExpression()), !dbg !9243
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9273
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #25, !dbg !9274
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !9275
  %36 = load i8, i8* %35, align 4, !dbg !9275, !range !5809
  %37 = icmp eq i8 %36, 0, !dbg !9275
  br i1 %37, label %39, label %38, !dbg !9277

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #25, !dbg !9278
  br label %39, !dbg !9280

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !9281
  %41 = load i32, i32* %40, align 4, !dbg !9281
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #25, !dbg !9282
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !9283
  %43 = load i8, i8* %42, align 4, !dbg !9283, !range !5809
  %44 = icmp eq i8 %43, 0, !dbg !9283
  br i1 %44, label %47, label %45, !dbg !9285

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9286
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #25, !dbg !9288
  br label %47, !dbg !9289

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9290
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #25, !dbg !9291
  br label %49, !dbg !9292

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !9243
  ret i32 %50, !dbg !9293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !9294 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9298, metadata !DIExpression()), !dbg !9302
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9303
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !9303
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !9303
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !9299, metadata !DIExpression()), !dbg !9302
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9300, metadata !DIExpression()), !dbg !9302
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !9304
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !9305
  ret void, !dbg !9306
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.62(%struct.device* noundef %0) unnamed_addr #1 !dbg !9307 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9311, metadata !DIExpression()), !dbg !9312
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9313, !srcloc !9315
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.64(%struct.device* noundef %0) #25, !dbg !9316
  ret i1 %2, !dbg !9317
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.63(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !9318 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9320, metadata !DIExpression()), !dbg !9323
  call void @llvm.dbg.value(metadata i8* %1, metadata !9321, metadata !DIExpression()), !dbg !9323
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9324
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !9324
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !9324
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !9322, metadata !DIExpression()), !dbg !9323
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !9325
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !9325
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #24, !dbg !9326
  ret i32 %8, !dbg !9327
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !9328 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9332, metadata !DIExpression()), !dbg !9336
  call void @llvm.dbg.value(metadata i8 0, metadata !9333, metadata !DIExpression()), !dbg !9336
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !9337
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !9337
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9335, metadata !DIExpression(DW_OP_deref)), !dbg !9336
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #24, !dbg !9338
  call void @llvm.dbg.value(metadata i32 %4, metadata !9334, metadata !DIExpression()), !dbg !9336
  %5 = icmp slt i32 %4, 0, !dbg !9339
  br i1 %5, label %9, label %6, !dbg !9341

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !9342
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !9335, metadata !DIExpression()), !dbg !9336
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #25, !dbg !9343
  br label %9, !dbg !9344

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !9336
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !9345
  ret i32 %10, !dbg !9345
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9346 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9348, metadata !DIExpression()), !dbg !9352
  call void @llvm.dbg.value(metadata i32 12, metadata !9349, metadata !DIExpression()), !dbg !9352
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9353

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9354, metadata !DIExpression()) #23, !dbg !9360
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !9363, !srcloc !9364
  call void @llvm.dbg.value(metadata i32 %4, metadata !9359, metadata !DIExpression()) #23, !dbg !9360
  %5 = or i32 %4, 12, !dbg !9365
  call void @llvm.dbg.value(metadata i32 %5, metadata !9350, metadata !DIExpression()), !dbg !9366
  call void @llvm.dbg.value(metadata i32 %5, metadata !9367, metadata !DIExpression()) #23, !dbg !9374
  call void @llvm.dbg.value(metadata i32* %2, metadata !9372, metadata !DIExpression()) #23, !dbg !9374
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !9376, !srcloc !9377
  call void @llvm.dbg.value(metadata i32 %6, metadata !9373, metadata !DIExpression()) #23, !dbg !9374
  %7 = icmp eq i32 %6, 0, !dbg !9353
  br i1 %7, label %8, label %3, !dbg !9365, !llvm.loop !9378

8:                                                ; preds = %3
  ret void, !dbg !9379
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !9380 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9382, metadata !DIExpression()), !dbg !9386
  call void @llvm.dbg.value(metadata i32 %1, metadata !9383, metadata !DIExpression()), !dbg !9386
  call void @llvm.dbg.value(metadata i32 %2, metadata !9384, metadata !DIExpression()), !dbg !9386
  call void @llvm.dbg.value(metadata i32 0, metadata !9385, metadata !DIExpression()), !dbg !9386
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9387
  %5 = load volatile i32, i32* %4, align 4, !dbg !9387
  %6 = and i32 %5, -5633, !dbg !9387
  %7 = or i32 %2, %1, !dbg !9387
  %8 = or i32 %7, %6, !dbg !9387
  store volatile i32 %8, i32* %4, align 4, !dbg !9387
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9388
  %10 = load volatile i32, i32* %9, align 4, !dbg !9388
  %11 = and i32 %10, -12289, !dbg !9388
  store volatile i32 %11, i32* %9, align 4, !dbg !9388
  ret void, !dbg !9389
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !9390 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9392, metadata !DIExpression()), !dbg !9393
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9394
  %3 = load volatile i32, i32* %2, align 4, !dbg !9394
  %4 = or i32 %3, 8, !dbg !9394
  store volatile i32 %4, i32* %2, align 4, !dbg !9394
  ret void, !dbg !9395
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9396 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !9400, metadata !DIExpression()), !dbg !9403
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !9401, metadata !DIExpression()), !dbg !9403
  call void @llvm.dbg.value(metadata i32 0, metadata !9402, metadata !DIExpression()), !dbg !9403
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !9404
  %3 = load %struct.sensor_value*, %struct.sensor_value** %2, align 4, !dbg !9404
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !9405
  %5 = load i8, i8* %4, align 4, !dbg !9405
  %6 = tail call i32 @pinctrl_configure_pins(%struct.sensor_value* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #24, !dbg !9406
  ret i32 %6, !dbg !9407
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.64(%struct.device* noundef %0) unnamed_addr #1 !dbg !9408 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9410, metadata !DIExpression()), !dbg !9411
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !9412
  ret i1 %2, !dbg !9413
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #13 !dbg !9414 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9416, metadata !DIExpression()), !dbg !9417
  tail call fastcc void @__NVIC_SetPriority.66() #25, !dbg !9418
  store i32 8399, i32* @last_load, align 4, !dbg !9419
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9420
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9421
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9422
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9423
  %3 = or i32 %2, 7, !dbg !9423
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9423
  ret i32 0, !dbg !9424
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.66() unnamed_addr #13 !dbg !9425 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !9427, metadata !DIExpression()), !dbg !9429
  call void @llvm.dbg.value(metadata i32 1, metadata !9428, metadata !DIExpression()), !dbg !9429
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !9430
  ret void, !dbg !9433
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !9434 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9436, metadata !DIExpression()), !dbg !9438
  %2 = tail call fastcc i32 @elapsed() #25, !dbg !9439
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9440
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9441
  %5 = add i32 %4, %3, !dbg !9441
  store i32 %5, i32* @cycle_count, align 4, !dbg !9441
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9442
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !9443
  %7 = sub i32 %5, %6, !dbg !9446
  %8 = udiv i32 %7, 8400, !dbg !9447
  call void @llvm.dbg.value(metadata i32 %8, metadata !9437, metadata !DIExpression()), !dbg !9438
  %9 = mul nuw i32 %8, 8400, !dbg !9448
  %10 = add i32 %9, %6, !dbg !9449
  store i32 %10, i32* @announced_cycles, align 4, !dbg !9449
  tail call void @sys_clock_announce(i32 noundef %8) #24, !dbg !9450
  tail call void @z_arm_int_exit() #24, !dbg !9451
  ret void, !dbg !9452
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #13 !dbg !9453 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9458
  call void @llvm.dbg.value(metadata i32 %1, metadata !9455, metadata !DIExpression()), !dbg !9459
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9460
  call void @llvm.dbg.value(metadata i32 %2, metadata !9456, metadata !DIExpression()), !dbg !9459
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9461
  call void @llvm.dbg.value(metadata i32 %3, metadata !9457, metadata !DIExpression()), !dbg !9459
  %4 = and i32 %2, 65536, !dbg !9462
  %5 = icmp ne i32 %4, 0, !dbg !9462
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !9464
  %8 = load i32, i32* @last_load, align 4, !dbg !9459
  br i1 %7, label %9, label %13, !dbg !9464

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9465
  %11 = add i32 %10, %8, !dbg !9465
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !9465
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9467
  br label %13, !dbg !9468

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !9469
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9470
  %16 = add i32 %14, %15, !dbg !9471
  ret i32 %16, !dbg !9472
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !9473 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9477, metadata !DIExpression()), !dbg !9490
  call void @llvm.dbg.value(metadata i1 %1, metadata !9478, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9490
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !9491
  br i1 %4, label %5, label %8, !dbg !9491

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9493
  %7 = and i32 %6, -2, !dbg !9493
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9493
  store i32 -16777216, i32* @last_load, align 4, !dbg !9495
  br label %54, !dbg !9496

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !9497
  call void @llvm.dbg.value(metadata i32 %9, metadata !9482, metadata !DIExpression()), !dbg !9490
  br i1 %3, label %18, label %10, !dbg !9498

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !9498
  call void @llvm.dbg.value(metadata i32 undef, metadata !9477, metadata !DIExpression()), !dbg !9490
  %12 = icmp slt i32 %11, 1, !dbg !9499
  br i1 %12, label %18, label %13, !dbg !9499

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !9499
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !9499
  %16 = mul nuw nsw i32 %15, 8400, !dbg !9499
  %17 = add nuw nsw i32 %16, 8399, !dbg !9499
  br label %18, !dbg !9499

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !9477, metadata !DIExpression()), !dbg !9490
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9500, metadata !DIExpression()) #23, !dbg !9507
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9509, !srcloc !9515
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !9509
  call void @llvm.dbg.value(metadata i32 %21, metadata !9512, metadata !DIExpression()) #23, !dbg !9516
  call void @llvm.dbg.value(metadata i32 undef, metadata !9513, metadata !DIExpression()) #23, !dbg !9516
  call void @llvm.dbg.value(metadata i32 %21, metadata !9506, metadata !DIExpression()) #23, !dbg !9507
  call void @llvm.dbg.value(metadata i32 %21, metadata !9483, metadata !DIExpression()), !dbg !9490
  %22 = tail call fastcc i32 @elapsed() #25, !dbg !9517
  call void @llvm.dbg.value(metadata i32 %22, metadata !9488, metadata !DIExpression()), !dbg !9490
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9518
  call void @llvm.dbg.value(metadata i32 %23, metadata !9480, metadata !DIExpression()), !dbg !9490
  %24 = load i32, i32* @cycle_count, align 4, !dbg !9519
  %25 = add i32 %24, %22, !dbg !9519
  store i32 %25, i32* @cycle_count, align 4, !dbg !9519
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9520
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !9521
  %27 = sub i32 %25, %26, !dbg !9522
  call void @llvm.dbg.value(metadata i32 %27, metadata !9489, metadata !DIExpression()), !dbg !9490
  %28 = icmp slt i32 %27, 0, !dbg !9523
  br i1 %28, label %38, label %29, !dbg !9525

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !9479, metadata !DIExpression()), !dbg !9490
  call void @llvm.dbg.value(metadata i32 undef, metadata !9479, metadata !DIExpression()), !dbg !9490
  %30 = add nuw i32 %19, %27, !dbg !9526
  %31 = urem i32 %30, 8400, !dbg !9528
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !9479, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9490
  %32 = sub nuw nsw i32 %19, %31, !dbg !9529
  call void @llvm.dbg.value(metadata i32 %32, metadata !9479, metadata !DIExpression()), !dbg !9490
  %33 = icmp ugt i32 %32, 1024, !dbg !9530
  br i1 %33, label %34, label %36, !dbg !9530

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !9479, metadata !DIExpression()), !dbg !9490
  %35 = icmp ugt i32 %32, 16766400, !dbg !9531
  br i1 %35, label %38, label %36, !dbg !9533

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !9534
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9535
  call void @llvm.dbg.value(metadata i32 %40, metadata !9481, metadata !DIExpression()), !dbg !9490
  %41 = add nsw i32 %39, -1, !dbg !9536
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9537
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9538
  %42 = icmp ult i32 %23, %40, !dbg !9539
  br i1 %42, label %43, label %48, !dbg !9541

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !9542
  %45 = add i32 %23, %9, !dbg !9544
  %46 = sub i32 %45, %40, !dbg !9545
  %47 = add i32 %46, %44, !dbg !9542
  br label %52, !dbg !9546

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !9547
  %50 = load i32, i32* @cycle_count, align 4, !dbg !9549
  %51 = add i32 %49, %50, !dbg !9549
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !9550
  store i32 %53, i32* @cycle_count, align 4, !dbg !9550
  call void @llvm.dbg.value(metadata i32 %21, metadata !9551, metadata !DIExpression()) #23, !dbg !9557
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9556, metadata !DIExpression()) #23, !dbg !9557
  call void @llvm.dbg.value(metadata i32 %21, metadata !9559, metadata !DIExpression()) #23, !dbg !9562
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !9564, !srcloc !9565
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !9566
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !9567 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9500, metadata !DIExpression()) #23, !dbg !9571
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9573, !srcloc !9515
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9573
  call void @llvm.dbg.value(metadata i32 %2, metadata !9512, metadata !DIExpression()) #23, !dbg !9575
  call void @llvm.dbg.value(metadata i32 undef, metadata !9513, metadata !DIExpression()) #23, !dbg !9575
  call void @llvm.dbg.value(metadata i32 %2, metadata !9506, metadata !DIExpression()) #23, !dbg !9571
  call void @llvm.dbg.value(metadata i32 %2, metadata !9569, metadata !DIExpression()), !dbg !9576
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !9577
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9578
  %5 = add i32 %4, %3, !dbg !9579
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !9580
  %7 = sub i32 %5, %6, !dbg !9581
  call void @llvm.dbg.value(metadata i32 %7, metadata !9570, metadata !DIExpression()), !dbg !9576
  call void @llvm.dbg.value(metadata i32 %2, metadata !9551, metadata !DIExpression()) #23, !dbg !9582
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9556, metadata !DIExpression()) #23, !dbg !9582
  call void @llvm.dbg.value(metadata i32 %2, metadata !9559, metadata !DIExpression()) #23, !dbg !9584
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !9586, !srcloc !9565
  %8 = udiv i32 %7, 8400, !dbg !9587
  ret i32 %8, !dbg !9588
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !9589 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9500, metadata !DIExpression()) #23, !dbg !9593
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9595, !srcloc !9515
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9595
  call void @llvm.dbg.value(metadata i32 %2, metadata !9512, metadata !DIExpression()) #23, !dbg !9597
  call void @llvm.dbg.value(metadata i32 undef, metadata !9513, metadata !DIExpression()) #23, !dbg !9597
  call void @llvm.dbg.value(metadata i32 %2, metadata !9506, metadata !DIExpression()) #23, !dbg !9593
  call void @llvm.dbg.value(metadata i32 %2, metadata !9591, metadata !DIExpression()), !dbg !9598
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !9599
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9600
  %5 = add i32 %4, %3, !dbg !9601
  call void @llvm.dbg.value(metadata i32 %5, metadata !9592, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i32 %2, metadata !9551, metadata !DIExpression()) #23, !dbg !9602
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9556, metadata !DIExpression()) #23, !dbg !9602
  call void @llvm.dbg.value(metadata i32 %2, metadata !9559, metadata !DIExpression()) #23, !dbg !9604
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !9606, !srcloc !9565
  ret i32 %5, !dbg !9607
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #13 !dbg !9608 {
  %1 = load i32, i32* @last_load, align 4, !dbg !9609
  %2 = icmp eq i32 %1, -16777216, !dbg !9611
  br i1 %2, label %3, label %6, !dbg !9612

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9613
  %5 = or i32 %4, 1, !dbg !9613
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9613
  br label %6, !dbg !9615

6:                                                ; preds = %3, %0
  ret void, !dbg !9616
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #13 !dbg !9617 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9618
  %2 = and i32 %1, -2, !dbg !9618
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9618
  ret void, !dbg !9619
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #11 !dbg !9620 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9646, metadata !DIExpression()), !dbg !9649
  call void @llvm.dbg.value(metadata i8 %1, metadata !9647, metadata !DIExpression()), !dbg !9649
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9648, metadata !DIExpression()), !dbg !9649
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !9650
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9650
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !9649
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9651
  %8 = load i8, i8* %6, align 4, !dbg !9652
  %9 = zext i8 %8 to i32, !dbg !9653
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !9653
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !9654
  br i1 %11, label %18, label %24, !dbg !9655

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !9649
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9651
  %14 = load i8, i8* %6, align 4, !dbg !9652
  %15 = zext i8 %14 to i32, !dbg !9653
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !9653
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !9654
  br i1 %17, label %18, label %24, !dbg !9655, !llvm.loop !9656

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !9658
  %21 = load i8, i8* %20, align 1, !dbg !9658
  %22 = icmp eq i8 %21, %1, !dbg !9661
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !9662
  br i1 %22, label %24, label %12, !dbg !9663

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !9649
  ret i32 %25, !dbg !9664
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.sensor_value* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9665 {
  call void @llvm.dbg.value(metadata %struct.sensor_value* %0, metadata !9676, metadata !DIExpression()), !dbg !9692
  call void @llvm.dbg.value(metadata i8 %1, metadata !9677, metadata !DIExpression()), !dbg !9692
  call void @llvm.dbg.value(metadata i32 %2, metadata !9678, metadata !DIExpression()), !dbg !9692
  call void @llvm.dbg.value(metadata i32 0, metadata !9681, metadata !DIExpression()), !dbg !9692
  call void @llvm.dbg.value(metadata i32 0, metadata !9682, metadata !DIExpression()), !dbg !9692
  call void @llvm.dbg.value(metadata i8 0, metadata !9683, metadata !DIExpression()), !dbg !9693
  %4 = icmp eq i8 %1, 0, !dbg !9694
  br i1 %4, label %35, label %5, !dbg !9695

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !9694
  br label %9, !dbg !9695

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !9683, metadata !DIExpression()), !dbg !9693
  call void @llvm.dbg.value(metadata i32 %29, metadata !9681, metadata !DIExpression()), !dbg !9692
  %8 = icmp eq i32 %34, %6, !dbg !9694
  br i1 %8, label %35, label %9, !dbg !9695, !llvm.loop !9696

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !9683, metadata !DIExpression()), !dbg !9693
  call void @llvm.dbg.value(metadata i32 %11, metadata !9681, metadata !DIExpression()), !dbg !9692
  %12 = getelementptr inbounds %struct.sensor_value, %struct.sensor_value* %0, i32 %10, i32 0, !dbg !9698
  %13 = load i32, i32* %12, align 4, !dbg !9698
  call void @llvm.dbg.value(metadata i32 %13, metadata !9680, metadata !DIExpression()), !dbg !9692
  %14 = and i32 %13, 31, !dbg !9699
  %15 = icmp ult i32 %14, 16, !dbg !9700
  br i1 %15, label %16, label %20, !dbg !9701

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.sensor_value, %struct.sensor_value* %0, i32 %10, i32 1, !dbg !9702
  %18 = load i32, i32* %17, align 4, !dbg !9702
  %19 = or i32 %18, 32, !dbg !9704
  call void @llvm.dbg.value(metadata i32 %19, metadata !9681, metadata !DIExpression()), !dbg !9692
  br label %28, !dbg !9705

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !9706

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct.sensor_value, %struct.sensor_value* %0, i32 %10, i32 1, !dbg !9707
  %23 = load i32, i32* %22, align 4, !dbg !9707
  call void @llvm.dbg.value(metadata i32 %23, metadata !9685, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !9708
  %24 = lshr i32 %23, 7, !dbg !9709
  %25 = and i32 %24, 16, !dbg !9709
  %26 = or i32 %25, %23, !dbg !9709
  call void @llvm.dbg.value(metadata i32 %26, metadata !9681, metadata !DIExpression()), !dbg !9692
  br label %28, !dbg !9710

27:                                               ; preds = %20
  br label %28, !dbg !9711

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !9692
  call void @llvm.dbg.value(metadata i32 %29, metadata !9681, metadata !DIExpression()), !dbg !9692
  %30 = lshr i32 %13, 5, !dbg !9711
  %31 = and i32 %30, 255, !dbg !9711
  call void @llvm.dbg.value(metadata i32 %31, metadata !9679, metadata !DIExpression()), !dbg !9692
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #25, !dbg !9712
  call void @llvm.dbg.value(metadata i32 %32, metadata !9682, metadata !DIExpression()), !dbg !9692
  %33 = icmp slt i32 %32, 0, !dbg !9713
  %34 = add nuw nsw i32 %10, 1, !dbg !9715
  call void @llvm.dbg.value(metadata i32 %34, metadata !9683, metadata !DIExpression()), !dbg !9693
  br i1 %33, label %35, label %7, !dbg !9716

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !9717
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9718 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9722, metadata !DIExpression()), !dbg !9726
  call void @llvm.dbg.value(metadata i32 %1, metadata !9723, metadata !DIExpression()), !dbg !9726
  call void @llvm.dbg.value(metadata i32 %2, metadata !9724, metadata !DIExpression()), !dbg !9726
  %4 = icmp ugt i32 %0, 175, !dbg !9727
  br i1 %4, label %16, label %5, !dbg !9729

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !9730
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !9731
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !9731
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !9725, metadata !DIExpression()), !dbg !9726
  %9 = add nsw i32 %6, -8, !dbg !9732
  %10 = icmp ult i32 %9, 3, !dbg !9732
  br i1 %10, label %16, label %11, !dbg !9734

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.71(%struct.device* noundef %8) #25, !dbg !9735
  br i1 %12, label %13, label %16, !dbg !9736

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !9737
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #24, !dbg !9738
  br label %16, !dbg !9739

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !9726
  ret i32 %17, !dbg !9740
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.71(%struct.device* noundef %0) unnamed_addr #1 !dbg !9741 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9745, metadata !DIExpression()), !dbg !9746
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9747, !srcloc !9749
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.72(%struct.device* noundef %0) #25, !dbg !9750
  ret i1 %2, !dbg !9751
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.72(%struct.device* noundef %0) unnamed_addr #1 !dbg !9752 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9754, metadata !DIExpression()), !dbg !9755
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !9756
  ret i1 %2, !dbg !9757
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #12 !dbg !9758 {
  ret void, !dbg !9759
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #14 !dbg !9760 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9762, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.value(metadata i32 0, metadata !9763, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.value(metadata i32 2, metadata !9764, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.value(metadata i32 0, metadata !9765, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.value(metadata i32 2, metadata !9766, metadata !DIExpression()), !dbg !9767
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9768
  %2 = and i32 %1, 12, !dbg !9769
  call void @llvm.dbg.value(metadata i32 %2, metadata !9762, metadata !DIExpression()), !dbg !9767
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !9770

3:                                                ; preds = %0
  br label %21, !dbg !9771

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9773
  call void @llvm.dbg.value(metadata i32 %5, metadata !9765, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !9767
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9774
  %7 = and i32 %6, 63, !dbg !9775
  call void @llvm.dbg.value(metadata i32 %7, metadata !9766, metadata !DIExpression()), !dbg !9767
  %8 = and i32 %5, 4194304, !dbg !9776
  %9 = icmp eq i32 %8, 0, !dbg !9776
  %10 = select i1 %9, i32 16000000, i32 8000000
  %11 = udiv i32 %10, %7, !dbg !9778
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9778
  %13 = lshr i32 %12, 6, !dbg !9778
  %14 = and i32 %13, 511, !dbg !9778
  %15 = mul i32 %14, %11, !dbg !9778
  call void @llvm.dbg.value(metadata i32 %15, metadata !9763, metadata !DIExpression()), !dbg !9767
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9779
  %17 = lshr i32 %16, 15, !dbg !9780
  %18 = and i32 %17, 6, !dbg !9780
  %19 = add nuw nsw i32 %18, 2, !dbg !9780
  call void @llvm.dbg.value(metadata i32 %19, metadata !9764, metadata !DIExpression()), !dbg !9767
  %20 = udiv i32 %15, %19, !dbg !9781
  br label %21, !dbg !9782

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 8000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !9783
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9784
  %24 = lshr i32 %23, 4, !dbg !9785
  %25 = and i32 %24, 15, !dbg !9785
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !9786
  %27 = load i8, i8* %26, align 1, !dbg !9786
  %28 = zext i8 %27 to i32, !dbg !9786
  call void @llvm.dbg.value(metadata i32 %28, metadata !9762, metadata !DIExpression()), !dbg !9767
  %29 = lshr i32 %22, %28, !dbg !9787
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !9787
  ret void, !dbg !9788
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !9789 {
  ret i32 0, !dbg !9794
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !9795 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !9821, metadata !DIExpression()), !dbg !9832
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !9833
  br i1 %3, label %311, label %4, !dbg !9835

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !9836
  %6 = load i32, i32* %5, align 4, !dbg !9836
  %7 = and i32 %6, 1, !dbg !9838
  %8 = icmp eq i32 %7, 0, !dbg !9839
  br i1 %8, label %66, label %9, !dbg !9840

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9841
  %11 = and i32 %10, 12, !dbg !9841
  %12 = icmp eq i32 %11, 4, !dbg !9844
  br i1 %12, label %21, label %13, !dbg !9845

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9846
  %15 = and i32 %14, 12, !dbg !9846
  %16 = icmp eq i32 %15, 8, !dbg !9847
  br i1 %16, label %17, label %29, !dbg !9848

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9849
  %19 = and i32 %18, 4194304, !dbg !9850
  %20 = icmp eq i32 %19, 0, !dbg !9851
  br i1 %20, label %29, label %21, !dbg !9852

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9853
  %23 = and i32 %22, 131072, !dbg !9853
  %24 = icmp eq i32 %23, 0, !dbg !9853
  br i1 %24, label %66, label %25, !dbg !9856

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9857
  %27 = load i32, i32* %26, align 4, !dbg !9857
  %28 = icmp eq i32 %27, 0, !dbg !9858
  br i1 %28, label %311, label %66, !dbg !9859

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9860
  %31 = load i32, i32* %30, align 4, !dbg !9860
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !9864

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9865
  %34 = or i32 %33, 65536, !dbg !9865
  br label %45, !dbg !9865

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9867
  %37 = or i32 %36, 262144, !dbg !9867
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9867
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9867
  %39 = or i32 %38, 65536, !dbg !9867
  br label %45, !dbg !9867

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9870
  %42 = and i32 %41, -65537, !dbg !9870
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9870
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9870
  %44 = and i32 %43, -262145, !dbg !9870
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9872
  %47 = load i32, i32* %30, align 4, !dbg !9873
  %48 = icmp eq i32 %47, 0, !dbg !9875
  %49 = tail call i32 @HAL_GetTick() #24, !dbg !9876
  call void @llvm.dbg.value(metadata i32 %49, metadata !9822, metadata !DIExpression()), !dbg !9832
  call void @llvm.dbg.value(metadata i32 %49, metadata !9822, metadata !DIExpression()), !dbg !9832
  br i1 %48, label %58, label %50, !dbg !9877

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9878
  %52 = and i32 %51, 131072, !dbg !9880
  %53 = icmp eq i32 %52, 0, !dbg !9880
  br i1 %53, label %54, label %66, !dbg !9881

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #24, !dbg !9882
  %56 = sub i32 %55, %49, !dbg !9885
  %57 = icmp ugt i32 %56, 100, !dbg !9886
  br i1 %57, label %311, label %50, !dbg !9887, !llvm.loop !9888

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9890
  %60 = and i32 %59, 131072, !dbg !9890
  %61 = icmp eq i32 %60, 0, !dbg !9890
  br i1 %61, label %66, label %62, !dbg !9892

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #24, !dbg !9893
  %64 = sub i32 %63, %49, !dbg !9896
  %65 = icmp ugt i32 %64, 100, !dbg !9897
  br i1 %65, label %311, label %58, !dbg !9898, !llvm.loop !9899

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !9901
  %68 = and i32 %67, 2, !dbg !9903
  %69 = icmp eq i32 %68, 0, !dbg !9904
  br i1 %69, label %121, label %70, !dbg !9905

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9906
  %72 = and i32 %71, 12, !dbg !9906
  %73 = icmp eq i32 %72, 0, !dbg !9909
  br i1 %73, label %82, label %74, !dbg !9910

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9911
  %76 = and i32 %75, 12, !dbg !9911
  %77 = icmp eq i32 %76, 8, !dbg !9912
  br i1 %77, label %78, label %90, !dbg !9913

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9914
  %80 = and i32 %79, 4194304, !dbg !9915
  %81 = icmp eq i32 %80, 0, !dbg !9916
  br i1 %81, label %82, label %90, !dbg !9917

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9918
  %84 = and i32 %83, 2, !dbg !9918
  %85 = icmp eq i32 %84, 0, !dbg !9918
  br i1 %85, label %114, label %86, !dbg !9921

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9922
  %88 = load i32, i32* %87, align 4, !dbg !9922
  %89 = icmp eq i32 %88, 1, !dbg !9923
  br i1 %89, label %114, label %311, !dbg !9924

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9925
  %92 = load i32, i32* %91, align 4, !dbg !9925
  %93 = icmp eq i32 %92, 0, !dbg !9928
  br i1 %93, label %104, label %94, !dbg !9929

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !9930
  %95 = tail call i32 @HAL_GetTick() #24, !dbg !9932
  call void @llvm.dbg.value(metadata i32 %95, metadata !9822, metadata !DIExpression()), !dbg !9832
  br label %96, !dbg !9933

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9934
  %98 = and i32 %97, 2, !dbg !9935
  %99 = icmp eq i32 %98, 0, !dbg !9935
  br i1 %99, label %100, label %114, !dbg !9933

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #24, !dbg !9936
  %102 = sub i32 %101, %95, !dbg !9939
  %103 = icmp ugt i32 %102, 2, !dbg !9940
  br i1 %103, label %311, label %96, !dbg !9941, !llvm.loop !9942

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !9944
  %105 = tail call i32 @HAL_GetTick() #24, !dbg !9946
  call void @llvm.dbg.value(metadata i32 %105, metadata !9822, metadata !DIExpression()), !dbg !9832
  br label %106, !dbg !9947

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9948
  %108 = and i32 %107, 2, !dbg !9948
  %109 = icmp eq i32 %108, 0, !dbg !9948
  br i1 %109, label %121, label %110, !dbg !9947

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #24, !dbg !9949
  %112 = sub i32 %111, %105, !dbg !9952
  %113 = icmp ugt i32 %112, 2, !dbg !9953
  br i1 %113, label %311, label %106, !dbg !9954, !llvm.loop !9955

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9957
  %116 = and i32 %115, -249, !dbg !9957
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !9957
  %118 = load i32, i32* %117, align 4, !dbg !9957
  %119 = shl i32 %118, 3, !dbg !9957
  %120 = or i32 %119, %116, !dbg !9957
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9957
  br label %121, !dbg !9958

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !9958
  %123 = and i32 %122, 8, !dbg !9960
  %124 = icmp eq i32 %123, 0, !dbg !9961
  br i1 %124, label %149, label %125, !dbg !9962

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !9963
  %127 = load i32, i32* %126, align 4, !dbg !9963
  %128 = icmp eq i32 %127, 0, !dbg !9966
  br i1 %128, label %139, label %129, !dbg !9967

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !9968
  %130 = tail call i32 @HAL_GetTick() #24, !dbg !9970
  call void @llvm.dbg.value(metadata i32 %130, metadata !9822, metadata !DIExpression()), !dbg !9832
  br label %131, !dbg !9971

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9972
  %133 = and i32 %132, 2, !dbg !9973
  %134 = icmp eq i32 %133, 0, !dbg !9973
  br i1 %134, label %135, label %149, !dbg !9971

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #24, !dbg !9974
  %137 = sub i32 %136, %130, !dbg !9977
  %138 = icmp ugt i32 %137, 2, !dbg !9978
  br i1 %138, label %311, label %131, !dbg !9979, !llvm.loop !9980

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !9982
  %140 = tail call i32 @HAL_GetTick() #24, !dbg !9984
  call void @llvm.dbg.value(metadata i32 %140, metadata !9822, metadata !DIExpression()), !dbg !9832
  br label %141, !dbg !9985

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9986
  %143 = and i32 %142, 2, !dbg !9986
  %144 = icmp eq i32 %143, 0, !dbg !9986
  br i1 %144, label %149, label %145, !dbg !9985

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #24, !dbg !9987
  %147 = sub i32 %146, %140, !dbg !9990
  %148 = icmp ugt i32 %147, 2, !dbg !9991
  br i1 %148, label %311, label %141, !dbg !9992, !llvm.loop !9993

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !9995
  %151 = and i32 %150, 4, !dbg !9996
  %152 = icmp eq i32 %151, 0, !dbg !9997
  br i1 %152, label %221, label %153, !dbg !9998

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !9824, metadata !DIExpression()), !dbg !9999
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10000
  %155 = and i32 %154, 268435456, !dbg !10000
  %156 = icmp eq i32 %155, 0, !dbg !10000
  br i1 %156, label %157, label %164, !dbg !10001

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !10002
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !10002
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9828, metadata !DIExpression()), !dbg !10002
  store volatile i32 0, i32* %2, align 4, !dbg !10002
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10002
  %160 = or i32 %159, 268435456, !dbg !10002
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10002
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10002
  %162 = and i32 %161, 268435456, !dbg !10002
  store volatile i32 %162, i32* %2, align 4, !dbg !10002
  %163 = load volatile i32, i32* %2, align 4, !dbg !10002
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !10003
  call void @llvm.dbg.value(metadata i32 1, metadata !9824, metadata !DIExpression()), !dbg !9999
  br label %164, !dbg !10004

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !9824, metadata !DIExpression()), !dbg !9999
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10005
  %166 = and i32 %165, 256, !dbg !10005
  %167 = icmp eq i32 %166, 0, !dbg !10005
  br i1 %167, label %168, label %180, !dbg !10007

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10008
  %170 = or i32 %169, 256, !dbg !10008
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10008
  %171 = tail call i32 @HAL_GetTick() #24, !dbg !10010
  call void @llvm.dbg.value(metadata i32 %171, metadata !9822, metadata !DIExpression()), !dbg !9832
  br label %172, !dbg !10011

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10012
  %174 = and i32 %173, 256, !dbg !10012
  %175 = icmp eq i32 %174, 0, !dbg !10012
  br i1 %175, label %176, label %180, !dbg !10011

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #24, !dbg !10013
  %178 = sub i32 %177, %171, !dbg !10016
  %179 = icmp ugt i32 %178, 2, !dbg !10017
  br i1 %179, label %311, label %172, !dbg !10018, !llvm.loop !10019

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10021
  %182 = load i32, i32* %181, align 4, !dbg !10021
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !10024

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10025
  %185 = or i32 %184, 1, !dbg !10025
  br label %196, !dbg !10025

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10027
  %188 = or i32 %187, 4, !dbg !10027
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10027
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10027
  %190 = or i32 %189, 1, !dbg !10027
  br label %196, !dbg !10027

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10030
  %193 = and i32 %192, -2, !dbg !10030
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10030
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10030
  %195 = and i32 %194, -5, !dbg !10030
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10032
  %198 = load i32, i32* %181, align 4, !dbg !10033
  %199 = icmp eq i32 %198, 0, !dbg !10035
  %200 = tail call i32 @HAL_GetTick() #24, !dbg !10036
  call void @llvm.dbg.value(metadata i32 %200, metadata !9822, metadata !DIExpression()), !dbg !9832
  call void @llvm.dbg.value(metadata i32 %200, metadata !9822, metadata !DIExpression()), !dbg !9832
  br i1 %199, label %209, label %201, !dbg !10037

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10038
  %203 = and i32 %202, 2, !dbg !10040
  %204 = icmp eq i32 %203, 0, !dbg !10040
  br i1 %204, label %205, label %217, !dbg !10041

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #24, !dbg !10042
  %207 = sub i32 %206, %200, !dbg !10045
  %208 = icmp ugt i32 %207, 5000, !dbg !10046
  br i1 %208, label %311, label %201, !dbg !10047, !llvm.loop !10048

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10050
  %211 = and i32 %210, 2, !dbg !10050
  %212 = icmp eq i32 %211, 0, !dbg !10050
  br i1 %212, label %217, label %213, !dbg !10052

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #24, !dbg !10053
  %215 = sub i32 %214, %200, !dbg !10056
  %216 = icmp ugt i32 %215, 5000, !dbg !10057
  br i1 %216, label %311, label %209, !dbg !10058, !llvm.loop !10059

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !10061

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10062
  %220 = and i32 %219, -268435457, !dbg !10062
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10062
  br label %221, !dbg !10065

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10066
  %223 = load i32, i32* %222, align 4, !dbg !10066
  %224 = icmp eq i32 %223, 0, !dbg !10068
  br i1 %224, label %310, label %225, !dbg !10069

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10070
  %227 = and i32 %226, 12, !dbg !10070
  %228 = icmp eq i32 %227, 8, !dbg !10073
  br i1 %228, label %277, label %229, !dbg !10074

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !10075
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10078
  %231 = tail call i32 @HAL_GetTick() #24, !dbg !10078
  call void @llvm.dbg.value(metadata i32 %231, metadata !9822, metadata !DIExpression()), !dbg !9832
  call void @llvm.dbg.value(metadata i32 %231, metadata !9822, metadata !DIExpression()), !dbg !9832
  br i1 %230, label %232, label %269, !dbg !10079

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10080
  %234 = and i32 %233, 33554432, !dbg !10080
  %235 = icmp eq i32 %234, 0, !dbg !10080
  br i1 %235, label %240, label %236, !dbg !10082

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #24, !dbg !10083
  %238 = sub i32 %237, %231, !dbg !10086
  %239 = icmp ugt i32 %238, 2, !dbg !10087
  br i1 %239, label %311, label %232, !dbg !10088, !llvm.loop !10089

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10091
  %242 = load i32, i32* %241, align 4, !dbg !10091
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10091
  %244 = load i32, i32* %243, align 4, !dbg !10091
  %245 = or i32 %244, %242, !dbg !10091
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10091
  %247 = load i32, i32* %246, align 4, !dbg !10091
  %248 = shl i32 %247, 6, !dbg !10091
  %249 = or i32 %245, %248, !dbg !10091
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10091
  %251 = load i32, i32* %250, align 4, !dbg !10091
  %252 = shl i32 %251, 15, !dbg !10091
  %253 = add i32 %252, -65536, !dbg !10091
  %254 = and i32 %253, -65536, !dbg !10091
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10091
  %256 = load i32, i32* %255, align 4, !dbg !10091
  %257 = shl i32 %256, 24, !dbg !10091
  %258 = or i32 %249, %257, !dbg !10091
  %259 = or i32 %258, %254, !dbg !10091
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10091
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10092
  %260 = tail call i32 @HAL_GetTick() #24, !dbg !10093
  call void @llvm.dbg.value(metadata i32 %260, metadata !9822, metadata !DIExpression()), !dbg !9832
  br label %261, !dbg !10094

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10095
  %263 = and i32 %262, 33554432, !dbg !10096
  %264 = icmp eq i32 %263, 0, !dbg !10096
  br i1 %264, label %265, label %310, !dbg !10094

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #24, !dbg !10097
  %267 = sub i32 %266, %260, !dbg !10100
  %268 = icmp ugt i32 %267, 2, !dbg !10101
  br i1 %268, label %311, label %261, !dbg !10102, !llvm.loop !10103

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10105
  %271 = and i32 %270, 33554432, !dbg !10105
  %272 = icmp eq i32 %271, 0, !dbg !10105
  br i1 %272, label %310, label %273, !dbg !10107

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #24, !dbg !10108
  %275 = sub i32 %274, %231, !dbg !10111
  %276 = icmp ugt i32 %275, 2, !dbg !10112
  br i1 %276, label %311, label %269, !dbg !10113, !llvm.loop !10114

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !10116
  br i1 %278, label %311, label %279, !dbg !10119

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10120
  call void @llvm.dbg.value(metadata i32 %280, metadata !9823, metadata !DIExpression()), !dbg !9832
  %281 = and i32 %280, 4194304, !dbg !10122
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10124
  %283 = load i32, i32* %282, align 4, !dbg !10124
  %284 = icmp eq i32 %281, %283, !dbg !10125
  br i1 %284, label %285, label %311, !dbg !10126

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !10127
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10128
  %288 = load i32, i32* %287, align 4, !dbg !10128
  %289 = icmp eq i32 %286, %288, !dbg !10129
  br i1 %289, label %290, label %311, !dbg !10130

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !10131
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10132
  %293 = load i32, i32* %292, align 4, !dbg !10132
  %294 = shl i32 %293, 6, !dbg !10133
  %295 = icmp eq i32 %291, %294, !dbg !10134
  br i1 %295, label %296, label %311, !dbg !10135

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !10136
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10137
  %299 = load i32, i32* %298, align 4, !dbg !10137
  %300 = shl i32 %299, 15, !dbg !10138
  %301 = add i32 %300, -65536, !dbg !10138
  %302 = and i32 %301, -65536, !dbg !10138
  %303 = icmp eq i32 %297, %302, !dbg !10139
  br i1 %303, label %304, label %311, !dbg !10140

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !10141
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10142
  %307 = load i32, i32* %306, align 4, !dbg !10142
  %308 = shl i32 %307, 24, !dbg !10143
  %309 = icmp eq i32 %305, %308, !dbg !10144
  br i1 %309, label %310, label %311, !dbg !10145

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !10146

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !9832
  ret i32 %312, !dbg !10147
}

; Function Attrs: optsize
declare !dbg !10148 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10150 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !10163, metadata !DIExpression()), !dbg !10166
  call void @llvm.dbg.value(metadata i32 %1, metadata !10164, metadata !DIExpression()), !dbg !10166
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !10167
  br i1 %3, label %115, label %4, !dbg !10169

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10170
  %6 = and i32 %5, 7, !dbg !10170
  %7 = icmp ult i32 %6, %1, !dbg !10172
  br i1 %7, label %8, label %13, !dbg !10173

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !10174
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !10174
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10176
  %11 = and i32 %10, 7, !dbg !10176
  %12 = icmp eq i32 %11, %1, !dbg !10178
  br i1 %12, label %13, label %115, !dbg !10179

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !10180
  %15 = load i32, i32* %14, align 4, !dbg !10180
  %16 = and i32 %15, 2, !dbg !10182
  %17 = icmp eq i32 %16, 0, !dbg !10183
  br i1 %17, label %39, label %18, !dbg !10184

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !10185
  %20 = icmp eq i32 %19, 0, !dbg !10188
  br i1 %20, label %25, label %21, !dbg !10189

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10190
  %23 = or i32 %22, 7168, !dbg !10190
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10190
  %24 = load i32, i32* %14, align 4, !dbg !10192
  br label %25, !dbg !10194

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !10192
  %27 = and i32 %26, 8, !dbg !10195
  %28 = icmp eq i32 %27, 0, !dbg !10196
  br i1 %28, label %32, label %29, !dbg !10197

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10198
  %31 = or i32 %30, 57344, !dbg !10198
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10198
  br label %32, !dbg !10200

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10201
  %34 = and i32 %33, -241, !dbg !10201
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !10201
  %36 = load i32, i32* %35, align 4, !dbg !10201
  %37 = or i32 %34, %36, !dbg !10201
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10201
  %38 = load i32, i32* %14, align 4, !dbg !10202
  br label %39, !dbg !10204

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !10202
  %41 = and i32 %40, 1, !dbg !10205
  %42 = icmp eq i32 %41, 0, !dbg !10206
  br i1 %42, label %73, label %43, !dbg !10207

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !10208
  %45 = load i32, i32* %44, align 4, !dbg !10208
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !10211

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10212
  %48 = and i32 %47, 131072, !dbg !10215
  %49 = icmp eq i32 %48, 0, !dbg !10215
  br i1 %49, label %115, label %58, !dbg !10216

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10217
  %52 = and i32 %51, 33554432, !dbg !10221
  %53 = icmp eq i32 %52, 0, !dbg !10221
  br i1 %53, label %115, label %58, !dbg !10222

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10223
  %56 = and i32 %55, 2, !dbg !10226
  %57 = icmp eq i32 %56, 0, !dbg !10226
  br i1 %57, label %115, label %58, !dbg !10227

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10228
  %60 = and i32 %59, -4, !dbg !10228
  %61 = or i32 %60, %45, !dbg !10228
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10228
  %62 = tail call i32 @HAL_GetTick() #24, !dbg !10229
  call void @llvm.dbg.value(metadata i32 %62, metadata !10165, metadata !DIExpression()), !dbg !10166
  br label %63, !dbg !10230

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10231
  %65 = and i32 %64, 12, !dbg !10231
  %66 = load i32, i32* %44, align 4, !dbg !10232
  %67 = shl i32 %66, 2, !dbg !10233
  %68 = icmp eq i32 %65, %67, !dbg !10234
  br i1 %68, label %73, label %69, !dbg !10230

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #24, !dbg !10235
  %71 = sub i32 %70, %62, !dbg !10238
  %72 = icmp ugt i32 %71, 5000, !dbg !10239
  br i1 %72, label %115, label %63, !dbg !10240, !llvm.loop !10241

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10243
  %75 = and i32 %74, 7, !dbg !10243
  %76 = icmp ugt i32 %75, %1, !dbg !10245
  br i1 %76, label %77, label %82, !dbg !10246

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !10247
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !10247
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10249
  %80 = and i32 %79, 7, !dbg !10249
  %81 = icmp eq i32 %80, %1, !dbg !10251
  br i1 %81, label %82, label %115, !dbg !10252

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !10253
  %84 = and i32 %83, 4, !dbg !10255
  %85 = icmp eq i32 %84, 0, !dbg !10256
  br i1 %85, label %93, label %86, !dbg !10257

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10258
  %88 = and i32 %87, -7169, !dbg !10258
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !10258
  %90 = load i32, i32* %89, align 4, !dbg !10258
  %91 = or i32 %88, %90, !dbg !10258
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10258
  %92 = load i32, i32* %14, align 4, !dbg !10260
  br label %93, !dbg !10262

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !10260
  %95 = and i32 %94, 8, !dbg !10263
  %96 = icmp eq i32 %95, 0, !dbg !10264
  br i1 %96, label %104, label %97, !dbg !10265

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10266
  %99 = and i32 %98, -57345, !dbg !10266
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !10266
  %101 = load i32, i32* %100, align 4, !dbg !10266
  %102 = shl i32 %101, 3, !dbg !10266
  %103 = or i32 %102, %99, !dbg !10266
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10266
  br label %104, !dbg !10268

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !10269
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10270
  %107 = lshr i32 %106, 4, !dbg !10271
  %108 = and i32 %107, 15, !dbg !10271
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !10272
  %110 = load i8, i8* %109, align 1, !dbg !10272
  %111 = zext i8 %110 to i32, !dbg !10272
  %112 = lshr i32 %105, %111, !dbg !10273
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !10274
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !10275
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #24, !dbg !10276
  br label %115, !dbg !10277

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !10166
  ret i32 %116, !dbg !10278
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !10279 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10281, metadata !DIExpression()), !dbg !10285
  call void @llvm.dbg.value(metadata i32 0, metadata !10282, metadata !DIExpression()), !dbg !10285
  call void @llvm.dbg.value(metadata i32 0, metadata !10283, metadata !DIExpression()), !dbg !10285
  call void @llvm.dbg.value(metadata i32 0, metadata !10284, metadata !DIExpression()), !dbg !10285
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10286
  %2 = and i32 %1, 12, !dbg !10287
  switch i32 %2, label %29 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !10288

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !10284, metadata !DIExpression()), !dbg !10285
  br label %29, !dbg !10289

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10292
  %6 = and i32 %5, 63, !dbg !10294
  call void @llvm.dbg.value(metadata i32 %6, metadata !10281, metadata !DIExpression()), !dbg !10285
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10295
  %8 = and i32 %7, 4194304, !dbg !10295
  %9 = icmp eq i32 %8, 0, !dbg !10297
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10298
  %11 = lshr i32 %10, 6, !dbg !10298
  %12 = and i32 %11, 511, !dbg !10298
  br i1 %9, label %16, label %13, !dbg !10299

13:                                               ; preds = %4
  %14 = mul nuw i32 %12, 8000000, !dbg !10300
  %15 = udiv i32 %14, %6, !dbg !10302
  call void @llvm.dbg.value(metadata i32 %15, metadata !10282, metadata !DIExpression()), !dbg !10285
  br label %22, !dbg !10303

16:                                               ; preds = %4
  %17 = zext i32 %12 to i64, !dbg !10304
  %18 = mul nuw nsw i64 %17, 16000000, !dbg !10306
  %19 = zext i32 %6 to i64, !dbg !10307
  %20 = udiv i64 %18, %19, !dbg !10308
  %21 = trunc i64 %20 to i32, !dbg !10309
  call void @llvm.dbg.value(metadata i32 %21, metadata !10282, metadata !DIExpression()), !dbg !10285
  br label %22

22:                                               ; preds = %16, %13
  %23 = phi i32 [ %15, %13 ], [ %21, %16 ], !dbg !10298
  call void @llvm.dbg.value(metadata i32 %23, metadata !10282, metadata !DIExpression()), !dbg !10285
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10310
  %25 = lshr i32 %24, 15, !dbg !10311
  %26 = and i32 %25, 6, !dbg !10311
  %27 = add nuw nsw i32 %26, 2, !dbg !10311
  call void @llvm.dbg.value(metadata i32 %27, metadata !10283, metadata !DIExpression()), !dbg !10285
  %28 = udiv i32 %23, %27, !dbg !10312
  call void @llvm.dbg.value(metadata i32 %28, metadata !10284, metadata !DIExpression()), !dbg !10285
  br label %29, !dbg !10313

29:                                               ; preds = %0, %22, %3
  %30 = phi i32 [ %28, %22 ], [ 8000000, %3 ], [ 16000000, %0 ], !dbg !10314
  call void @llvm.dbg.value(metadata i32 %30, metadata !10284, metadata !DIExpression()), !dbg !10285
  ret i32 %30, !dbg !10315
}

; Function Attrs: optsize
declare !dbg !10316 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10319 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10323, metadata !DIExpression()), !dbg !10343
  call void @llvm.dbg.value(metadata i32 %1, metadata !10324, metadata !DIExpression()), !dbg !10343
  call void @llvm.dbg.value(metadata i32 %2, metadata !10325, metadata !DIExpression()), !dbg !10343
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !10344
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !10344
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !10326, metadata !DIExpression()), !dbg !10345
  %8 = icmp eq i32 %0, 0, !dbg !10346
  br i1 %8, label %9, label %23, !dbg !10347

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !10348
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !10348
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10336, metadata !DIExpression()), !dbg !10348
  store volatile i32 0, i32* %5, align 4, !dbg !10348
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10348
  %12 = or i32 %11, 1, !dbg !10348
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10348
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10348
  %14 = and i32 %13, 1, !dbg !10348
  store volatile i32 %14, i32* %5, align 4, !dbg !10348
  %15 = load volatile i32, i32* %5, align 4, !dbg !10348
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !10349
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !10350
  store i32 256, i32* %16, align 4, !dbg !10351
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !10352
  store i32 2, i32* %17, align 4, !dbg !10353
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !10354
  store i32 3, i32* %18, align 4, !dbg !10355
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !10356
  store i32 0, i32* %19, align 4, !dbg !10357
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !10358
  store i32 0, i32* %20, align 4, !dbg !10359
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #24, !dbg !10360
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10361
  %22 = and i32 %21, -123731969, !dbg !10361
  br label %38, !dbg !10362

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !10363
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !10363
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10340, metadata !DIExpression()), !dbg !10363
  store volatile i32 0, i32* %6, align 4, !dbg !10363
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10363
  %26 = or i32 %25, 4, !dbg !10363
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10363
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10363
  %28 = and i32 %27, 4, !dbg !10363
  store volatile i32 %28, i32* %6, align 4, !dbg !10363
  %29 = load volatile i32, i32* %6, align 4, !dbg !10363
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !10364
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !10365
  store i32 512, i32* %30, align 4, !dbg !10366
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !10367
  store i32 2, i32* %31, align 4, !dbg !10368
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !10369
  store i32 3, i32* %32, align 4, !dbg !10370
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !10371
  store i32 0, i32* %33, align 4, !dbg !10372
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !10373
  store i32 0, i32* %34, align 4, !dbg !10374
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #24, !dbg !10375
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10376
  %36 = and i32 %35, 134217727, !dbg !10376
  %37 = shl i32 %2, 3, !dbg !10376
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !10377
  %42 = or i32 %41, %40, !dbg !10377
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10377
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !10378
  ret void, !dbg !10378
}

; Function Attrs: optsize
declare !dbg !10379 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #13 !dbg !10383 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !10384
  ret void, !dbg !10385
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #13 !dbg !10386 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !10387
  ret void, !dbg !10388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #4 !dbg !10389 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !10390
  ret i32 %1, !dbg !10391
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #14 !dbg !10392 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #25, !dbg !10393
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10394
  %3 = lshr i32 %2, 10, !dbg !10395
  %4 = and i32 %3, 7, !dbg !10395
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !10396
  %6 = load i8, i8* %5, align 1, !dbg !10396
  %7 = zext i8 %6 to i32, !dbg !10396
  %8 = lshr i32 %1, %7, !dbg !10397
  ret i32 %8, !dbg !10398
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #14 !dbg !10399 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #25, !dbg !10400
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10401
  %3 = lshr i32 %2, 13, !dbg !10402
  %4 = and i32 %3, 7, !dbg !10402
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !10403
  %6 = load i8, i8* %5, align 1, !dbg !10403
  %7 = zext i8 %6 to i32, !dbg !10403
  %8 = lshr i32 %1, %7, !dbg !10404
  ret i32 %8, !dbg !10405
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !10406 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10410, metadata !DIExpression()), !dbg !10411
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10412
  store i32 15, i32* %2, align 4, !dbg !10413
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10414
  %4 = and i32 %3, 262144, !dbg !10416
  %5 = icmp eq i32 %4, 0, !dbg !10417
  br i1 %5, label %8, label %6, !dbg !10418

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10419
  store i32 327680, i32* %7, align 4, !dbg !10421
  br label %15, !dbg !10422

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10423
  %10 = and i32 %9, 65536, !dbg !10425
  %11 = icmp eq i32 %10, 0, !dbg !10426
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10427
  br i1 %11, label %14, label %13, !dbg !10428

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !10429
  br label %15, !dbg !10431

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !10432
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10434
  %17 = and i32 %16, 1, !dbg !10436
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10437
  store i32 %17, i32* %18, align 4, !dbg !10439
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10440
  %20 = lshr i32 %19, 3, !dbg !10441
  %21 = and i32 %20, 31, !dbg !10441
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10442
  store i32 %21, i32* %22, align 4, !dbg !10443
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10444
  %24 = and i32 %23, 4, !dbg !10446
  %25 = icmp eq i32 %24, 0, !dbg !10447
  br i1 %25, label %28, label %26, !dbg !10448

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10449
  store i32 5, i32* %27, align 4, !dbg !10451
  br label %35, !dbg !10452

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10453
  %30 = and i32 %29, 1, !dbg !10455
  %31 = icmp eq i32 %30, 0, !dbg !10456
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10457
  br i1 %31, label %34, label %33, !dbg !10458

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !10459
  br label %35, !dbg !10461

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !10462
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10464
  %37 = and i32 %36, 1, !dbg !10466
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10467
  store i32 %37, i32* %38, align 4, !dbg !10469
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10470
  %40 = and i32 %39, 16777216, !dbg !10472
  %41 = icmp eq i32 %40, 0, !dbg !10473
  %42 = select i1 %41, i32 1, i32 2, !dbg !10474
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10475
  store i32 %42, i32* %43, align 4, !dbg !10477
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10478
  %45 = and i32 %44, 4194304, !dbg !10479
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10480
  store i32 %45, i32* %46, align 4, !dbg !10481
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10482
  %48 = and i32 %47, 63, !dbg !10483
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10484
  store i32 %48, i32* %49, align 4, !dbg !10485
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10486
  %51 = lshr i32 %50, 6, !dbg !10487
  %52 = and i32 %51, 511, !dbg !10487
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10488
  store i32 %52, i32* %53, align 4, !dbg !10489
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10490
  %55 = shl i32 %54, 1, !dbg !10491
  %56 = and i32 %55, 393216, !dbg !10491
  %57 = add nuw nsw i32 %56, 131072, !dbg !10491
  %58 = lshr exact i32 %57, 16, !dbg !10492
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10493
  store i32 %58, i32* %59, align 4, !dbg !10494
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10495
  %61 = lshr i32 %60, 24, !dbg !10496
  %62 = and i32 %61, 15, !dbg !10496
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10497
  store i32 %62, i32* %63, align 4, !dbg !10498
  ret void, !dbg !10499
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #14 !dbg !10500 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !10504, metadata !DIExpression()), !dbg !10506
  call void @llvm.dbg.value(metadata i32* %1, metadata !10505, metadata !DIExpression()), !dbg !10506
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !10507
  store i32 15, i32* %3, align 4, !dbg !10508
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10509
  %5 = and i32 %4, 3, !dbg !10510
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !10511
  store i32 %5, i32* %6, align 4, !dbg !10512
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10513
  %8 = and i32 %7, 240, !dbg !10514
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !10515
  store i32 %8, i32* %9, align 4, !dbg !10516
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10517
  %11 = and i32 %10, 7168, !dbg !10518
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !10519
  store i32 %11, i32* %12, align 4, !dbg !10520
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10521
  %14 = lshr i32 %13, 3, !dbg !10522
  %15 = and i32 %14, 7168, !dbg !10522
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !10523
  store i32 %15, i32* %16, align 4, !dbg !10524
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10525
  %18 = and i32 %17, 7, !dbg !10526
  store i32 %18, i32* %1, align 4, !dbg !10527
  ret void, !dbg !10528
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !10529 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10530
  %2 = and i32 %1, 128, !dbg !10530
  %3 = icmp eq i32 %2, 0, !dbg !10530
  br i1 %3, label %5, label %4, !dbg !10532

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #25, !dbg !10533
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !10535
  br label %5, !dbg !10536

5:                                                ; preds = %4, %0
  ret void, !dbg !10537
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !10538 {
  ret void, !dbg !10539
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #13 !dbg !10540 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10543, metadata !DIExpression()), !dbg !10544
  tail call fastcc void @LL_InitTick(i32 noundef %0) #25, !dbg !10545
  ret void, !dbg !10546
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #13 !dbg !10547 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10550, metadata !DIExpression()), !dbg !10552
  call void @llvm.dbg.value(metadata i32 1000, metadata !10551, metadata !DIExpression()), !dbg !10552
  %2 = udiv i32 %0, 1000, !dbg !10553
  %3 = add nsw i32 %2, -1, !dbg !10554
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10555
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10556
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10557
  ret void, !dbg !10558
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #15 !dbg !10559 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10561, metadata !DIExpression()), !dbg !10563
  %3 = bitcast i32* %2 to i8*, !dbg !10564
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10564
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10562, metadata !DIExpression()), !dbg !10565
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10566
  store volatile i32 %4, i32* %2, align 4, !dbg !10565
  %5 = load volatile i32, i32* %2, align 4, !dbg !10567
  %6 = icmp eq i32 %0, -1, !dbg !10568
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10561, metadata !DIExpression()), !dbg !10563
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !10563
  call void @llvm.dbg.value(metadata i32 %8, metadata !10561, metadata !DIExpression()), !dbg !10563
  br label %9, !dbg !10570

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10561, metadata !DIExpression()), !dbg !10563
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10571
  call void @llvm.dbg.value(metadata i32 undef, metadata !10561, metadata !DIExpression()), !dbg !10563
  %12 = shl i32 %11, 15, !dbg !10563
  %13 = ashr i32 %12, 31, !dbg !10563
  %14 = add i32 %13, %10, !dbg !10563
  call void @llvm.dbg.value(metadata i32 %14, metadata !10561, metadata !DIExpression()), !dbg !10563
  %15 = icmp eq i32 %14, 0, !dbg !10570
  br i1 %15, label %16, label %9, !dbg !10570

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10574
  ret void, !dbg !10574
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #5 !dbg !10575 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10577, metadata !DIExpression()), !dbg !10578
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !10579
  ret void, !dbg !10580
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #13 !dbg !10581 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10586, metadata !DIExpression()), !dbg !10591
  call void @llvm.dbg.value(metadata i32 0, metadata !10589, metadata !DIExpression()), !dbg !10591
  call void @llvm.dbg.value(metadata i32 0, metadata !10590, metadata !DIExpression()), !dbg !10591
  %2 = icmp eq i32 %0, 0, !dbg !10592
  br i1 %2, label %50, label %3, !dbg !10594

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !10595
  %5 = icmp eq i32 %4, 49152, !dbg !10598
  br i1 %5, label %6, label %15, !dbg !10599

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !10589, metadata !DIExpression()), !dbg !10591
  %7 = add i32 %0, -64000001, !dbg !10600
  %8 = icmp ult i32 %7, 26000000, !dbg !10600
  br i1 %8, label %15, label %9, !dbg !10600

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !10603
  %11 = select i1 %10, i32 0, i32 3, !dbg !10605
  call void @llvm.dbg.value(metadata i32 %11, metadata !10589, metadata !DIExpression()), !dbg !10591
  %12 = add i32 %0, -30000001, !dbg !10606
  %13 = icmp ult i32 %12, 60000000, !dbg !10606
  %14 = select i1 %13, i32 1, i32 %11, !dbg !10606
  call void @llvm.dbg.value(metadata i32 %14, metadata !10589, metadata !DIExpression()), !dbg !10591
  br label %15, !dbg !10606

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !10591
  call void @llvm.dbg.value(metadata i32 %16, metadata !10589, metadata !DIExpression()), !dbg !10591
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !10609
  %18 = icmp eq i32 %17, 32768, !dbg !10611
  br i1 %18, label %19, label %27, !dbg !10612

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !10613
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !10616
  br i1 %22, label %27, label %23, !dbg !10616

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !10617
  %25 = and i1 %24, %21, !dbg !10620
  %26 = select i1 %25, i32 1, i32 %16, !dbg !10620
  call void @llvm.dbg.value(metadata i32 %26, metadata !10589, metadata !DIExpression()), !dbg !10591
  br label %27, !dbg !10620

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !10621
  call void @llvm.dbg.value(metadata i32 %28, metadata !10589, metadata !DIExpression()), !dbg !10591
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !10622
  %30 = icmp eq i32 %29, 16384, !dbg !10624
  br i1 %30, label %31, label %39, !dbg !10625

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !10626
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !10629
  br i1 %34, label %39, label %35, !dbg !10629

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !10630
  %37 = select i1 %36, i1 %33, i1 false, !dbg !10633
  %38 = select i1 %37, i32 1, i32 %28, !dbg !10633
  call void @llvm.dbg.value(metadata i32 %38, metadata !10589, metadata !DIExpression()), !dbg !10591
  br label %39, !dbg !10633

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !10621
  call void @llvm.dbg.value(metadata i32 %40, metadata !10589, metadata !DIExpression()), !dbg !10591
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #25, !dbg !10634
  call void @llvm.dbg.value(metadata i32 2, metadata !10587, metadata !DIExpression()), !dbg !10591
  br label %41, !dbg !10635

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !10621
  call void @llvm.dbg.value(metadata i32 %42, metadata !10587, metadata !DIExpression()), !dbg !10591
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #25, !dbg !10636
  call void @llvm.dbg.value(metadata i32 %43, metadata !10588, metadata !DIExpression()), !dbg !10591
  %44 = add nsw i32 %42, -1, !dbg !10638
  call void @llvm.dbg.value(metadata i32 %44, metadata !10587, metadata !DIExpression()), !dbg !10591
  %45 = icmp ne i32 %43, %40, !dbg !10639
  %46 = icmp ne i32 %44, 0, !dbg !10640
  %47 = select i1 %45, i1 %46, i1 false, !dbg !10640
  br i1 %47, label %41, label %48, !dbg !10641, !llvm.loop !10642

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !10644
  call void @llvm.dbg.value(metadata i32 %51, metadata !10590, metadata !DIExpression()), !dbg !10591
  ret i32 %51, !dbg !10645
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #14 !dbg !10646 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10648
  %2 = and i32 %1, 49152, !dbg !10648
  ret i32 %2, !dbg !10649
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #13 !dbg !10650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10652, metadata !DIExpression()), !dbg !10653
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10654
  %3 = and i32 %2, -8, !dbg !10654
  %4 = or i32 %3, %0, !dbg !10654
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10654
  ret void, !dbg !10655
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #14 !dbg !10656 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10657
  %2 = and i32 %1, 7, !dbg !10657
  ret i32 %2, !dbg !10658
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !10659 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !10677, metadata !DIExpression()), !dbg !10681
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10678, metadata !DIExpression()), !dbg !10681
  call void @llvm.dbg.value(metadata i32 0, metadata !10679, metadata !DIExpression()), !dbg !10681
  call void @llvm.dbg.value(metadata i32 0, metadata !10680, metadata !DIExpression()), !dbg !10681
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !10682
  %4 = icmp eq i32 %3, 0, !dbg !10684
  br i1 %4, label %5, label %21, !dbg !10685

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #25, !dbg !10686
  call void @llvm.dbg.value(metadata i32 %6, metadata !10680, metadata !DIExpression()), !dbg !10681
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.81() #25, !dbg !10688
  %8 = icmp eq i32 %7, 1, !dbg !10690
  br i1 %8, label %13, label %9, !dbg !10691

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.82() #25, !dbg !10692
  br label %10, !dbg !10694

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.81() #25, !dbg !10695
  %12 = icmp eq i32 %11, 1, !dbg !10696
  br i1 %12, label %13, label %10, !dbg !10694, !llvm.loop !10697

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !10699
  %15 = load i32, i32* %14, align 4, !dbg !10699
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !10700
  %17 = load i32, i32* %16, align 4, !dbg !10700
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !10701
  %19 = load i32, i32* %18, align 4, !dbg !10701
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.83(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #25, !dbg !10702
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #25, !dbg !10703
  call void @llvm.dbg.value(metadata i32 %20, metadata !10679, metadata !DIExpression()), !dbg !10681
  br label %21, !dbg !10704

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !10705
  call void @llvm.dbg.value(metadata i32 %22, metadata !10679, metadata !DIExpression()), !dbg !10681
  ret i32 %22, !dbg !10706
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #14 !dbg !10707 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10711, metadata !DIExpression()), !dbg !10712
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.85() #25, !dbg !10713
  %2 = icmp ne i32 %1, 0, !dbg !10715
  call void @llvm.dbg.value(metadata i1 %2, metadata !10711, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10712
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #25, !dbg !10716
  %4 = icmp ne i32 %3, 0, !dbg !10718
  %5 = select i1 %4, i1 true, i1 %2, !dbg !10719
  %6 = zext i1 %5 to i32, !dbg !10719
  call void @llvm.dbg.value(metadata i32 %6, metadata !10711, metadata !DIExpression()), !dbg !10712
  ret i32 %6, !dbg !10720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #4 !dbg !10721 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10725, metadata !DIExpression()), !dbg !10728
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10726, metadata !DIExpression()), !dbg !10728
  call void @llvm.dbg.value(metadata i32 0, metadata !10727, metadata !DIExpression()), !dbg !10728
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10729
  %4 = load i32, i32* %3, align 4, !dbg !10729
  %5 = and i32 %4, 63, !dbg !10730
  %6 = udiv i32 %0, %5, !dbg !10731
  call void @llvm.dbg.value(metadata i32 %6, metadata !10727, metadata !DIExpression()), !dbg !10728
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10732
  %8 = load i32, i32* %7, align 4, !dbg !10732
  %9 = and i32 %8, 511, !dbg !10733
  %10 = mul i32 %9, %6, !dbg !10734
  call void @llvm.dbg.value(metadata i32 %10, metadata !10727, metadata !DIExpression()), !dbg !10728
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10735
  %12 = load i32, i32* %11, align 4, !dbg !10735
  %13 = lshr i32 %12, 15, !dbg !10736
  %14 = and i32 %13, 131070, !dbg !10736
  %15 = add nuw nsw i32 %14, 2, !dbg !10736
  %16 = udiv i32 %10, %15, !dbg !10737
  call void @llvm.dbg.value(metadata i32 %16, metadata !10727, metadata !DIExpression()), !dbg !10728
  ret i32 %16, !dbg !10738
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.81() unnamed_addr #14 !dbg !10739 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10740
  %2 = lshr i32 %1, 1, !dbg !10741
  %3 = and i32 %2, 1, !dbg !10741
  ret i32 %3, !dbg !10742
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.82() unnamed_addr #13 !dbg !10743 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10744
  %2 = or i32 %1, 1, !dbg !10744
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10744
  ret void, !dbg !10745
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.83(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #13 !dbg !10746 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10748, metadata !DIExpression()), !dbg !10752
  call void @llvm.dbg.value(metadata i32 %1, metadata !10749, metadata !DIExpression()), !dbg !10752
  call void @llvm.dbg.value(metadata i32 %2, metadata !10750, metadata !DIExpression()), !dbg !10752
  call void @llvm.dbg.value(metadata i32 %3, metadata !10751, metadata !DIExpression()), !dbg !10752
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10753
  %6 = and i32 %5, -4227072, !dbg !10753
  %7 = or i32 %1, %0, !dbg !10753
  %8 = shl i32 %2, 6, !dbg !10753
  %9 = or i32 %7, %8, !dbg !10753
  %10 = or i32 %9, %6, !dbg !10753
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10753
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10754
  %12 = and i32 %11, -196609, !dbg !10754
  %13 = or i32 %12, %3, !dbg !10754
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10754
  ret void, !dbg !10755
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #13 !dbg !10756 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10760, metadata !DIExpression()), !dbg !10764
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10761, metadata !DIExpression()), !dbg !10764
  call void @llvm.dbg.value(metadata i32 0, metadata !10762, metadata !DIExpression()), !dbg !10764
  call void @llvm.dbg.value(metadata i32 0, metadata !10763, metadata !DIExpression()), !dbg !10764
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10765
  %4 = load i32, i32* %3, align 4, !dbg !10765
  %5 = lshr i32 %4, 4, !dbg !10765
  %6 = and i32 %5, 15, !dbg !10765
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !10765
  %8 = load i8, i8* %7, align 1, !dbg !10765
  %9 = zext i8 %8 to i32, !dbg !10765
  %10 = lshr i32 %0, %9, !dbg !10765
  call void @llvm.dbg.value(metadata i32 %10, metadata !10763, metadata !DIExpression()), !dbg !10764
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !10766
  %12 = icmp ult i32 %11, %10, !dbg !10768
  br i1 %12, label %13, label %16, !dbg !10769

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !10770
  call void @llvm.dbg.value(metadata i32 %14, metadata !10762, metadata !DIExpression()), !dbg !10764
  %15 = icmp eq i32 %14, 0, !dbg !10772
  br i1 %15, label %16, label %30, !dbg !10774

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.84() #25, !dbg !10775
  br label %17, !dbg !10777

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.85() #25, !dbg !10778
  %19 = icmp eq i32 %18, 1, !dbg !10779
  br i1 %19, label %20, label %17, !dbg !10777, !llvm.loop !10780

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !10782
  tail call fastcc void @LL_RCC_SetAHBPrescaler.86(i32 noundef %21) #25, !dbg !10783
  tail call fastcc void @LL_RCC_SetSysClkSource.87() #25, !dbg !10784
  br label %22, !dbg !10785

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.88() #25, !dbg !10786
  %24 = icmp eq i32 %23, 8, !dbg !10787
  br i1 %24, label %25, label %22, !dbg !10785, !llvm.loop !10788

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10790
  %27 = load i32, i32* %26, align 4, !dbg !10790
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.89(i32 noundef %27) #25, !dbg !10791
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10792
  %29 = load i32, i32* %28, align 4, !dbg !10792
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.90(i32 noundef %29) #25, !dbg !10793
  br label %30, !dbg !10794

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !10795
  %33 = icmp ugt i32 %32, %10, !dbg !10797
  br i1 %33, label %34, label %36, !dbg !10798

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !10799
  call void @llvm.dbg.value(metadata i32 %35, metadata !10762, metadata !DIExpression()), !dbg !10764
  br label %36, !dbg !10801

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !10764
  call void @llvm.dbg.value(metadata i32 %37, metadata !10762, metadata !DIExpression()), !dbg !10764
  %38 = icmp eq i32 %37, 0, !dbg !10802
  br i1 %38, label %39, label %40, !dbg !10804

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #25, !dbg !10805
  br label %40, !dbg !10807

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !10808
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.84() unnamed_addr #13 !dbg !10809 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10810
  %2 = or i32 %1, 16777216, !dbg !10810
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10810
  ret void, !dbg !10811
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.85() unnamed_addr #14 !dbg !10812 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10813
  %2 = lshr i32 %1, 25, !dbg !10814
  %3 = and i32 %2, 1, !dbg !10814
  ret i32 %3, !dbg !10815
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.86(i32 noundef %0) unnamed_addr #13 !dbg !10816 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10818, metadata !DIExpression()), !dbg !10819
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10820
  %3 = and i32 %2, -241, !dbg !10820
  %4 = or i32 %3, %0, !dbg !10820
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10820
  ret void, !dbg !10821
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.87() unnamed_addr #13 !dbg !10822 {
  call void @llvm.dbg.value(metadata i32 2, metadata !10824, metadata !DIExpression()), !dbg !10825
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10826
  %2 = and i32 %1, -4, !dbg !10826
  %3 = or i32 %2, 2, !dbg !10826
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10826
  ret void, !dbg !10827
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.88() unnamed_addr #14 !dbg !10828 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10829
  %2 = and i32 %1, 12, !dbg !10829
  ret i32 %2, !dbg !10830
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.89(i32 noundef %0) unnamed_addr #13 !dbg !10831 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10833, metadata !DIExpression()), !dbg !10834
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10835
  %3 = and i32 %2, -7169, !dbg !10835
  %4 = or i32 %3, %0, !dbg !10835
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10835
  ret void, !dbg !10836
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.90(i32 noundef %0) unnamed_addr #13 !dbg !10837 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10839, metadata !DIExpression()), !dbg !10840
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10841
  %3 = and i32 %2, -57345, !dbg !10841
  %4 = or i32 %3, %0, !dbg !10841
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10841
  ret void, !dbg !10842
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #14 !dbg !10843 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10844
  %2 = lshr i32 %1, 27, !dbg !10845
  %3 = and i32 %2, 1, !dbg !10845
  ret i32 %3, !dbg !10846
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !10847 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10851, metadata !DIExpression()), !dbg !10857
  call void @llvm.dbg.value(metadata i32 %1, metadata !10852, metadata !DIExpression()), !dbg !10857
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !10853, metadata !DIExpression()), !dbg !10857
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !10854, metadata !DIExpression()), !dbg !10857
  call void @llvm.dbg.value(metadata i32 0, metadata !10855, metadata !DIExpression()), !dbg !10857
  call void @llvm.dbg.value(metadata i32 0, metadata !10856, metadata !DIExpression()), !dbg !10857
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !10858
  %6 = icmp eq i32 %5, 0, !dbg !10860
  br i1 %6, label %7, label %27, !dbg !10861

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #25, !dbg !10862
  call void @llvm.dbg.value(metadata i32 %8, metadata !10856, metadata !DIExpression()), !dbg !10857
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #25, !dbg !10864
  %10 = icmp eq i32 %9, 1, !dbg !10866
  br i1 %10, label %19, label %11, !dbg !10867

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !10868
  br i1 %12, label %13, label %14, !dbg !10871

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #25, !dbg !10872
  br label %15, !dbg !10874

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #25, !dbg !10875
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #25, !dbg !10877
  br label %16, !dbg !10878

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #25, !dbg !10879
  %18 = icmp eq i32 %17, 1, !dbg !10880
  br i1 %18, label %19, label %16, !dbg !10878, !llvm.loop !10881

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !10883
  %21 = load i32, i32* %20, align 4, !dbg !10883
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !10884
  %23 = load i32, i32* %22, align 4, !dbg !10884
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !10885
  %25 = load i32, i32* %24, align 4, !dbg !10885
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.83(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #25, !dbg !10886
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #25, !dbg !10887
  call void @llvm.dbg.value(metadata i32 %26, metadata !10855, metadata !DIExpression()), !dbg !10857
  br label %27, !dbg !10888

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !10889
  call void @llvm.dbg.value(metadata i32 %28, metadata !10855, metadata !DIExpression()), !dbg !10857
  ret i32 %28, !dbg !10890
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #14 !dbg !10891 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10892
  %2 = lshr i32 %1, 17, !dbg !10893
  %3 = and i32 %2, 1, !dbg !10893
  ret i32 %3, !dbg !10894
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #13 !dbg !10895 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10896
  %2 = or i32 %1, 262144, !dbg !10896
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10896
  ret void, !dbg !10897
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #13 !dbg !10898 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10899
  %2 = and i32 %1, -262145, !dbg !10899
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10899
  ret void, !dbg !10900
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #13 !dbg !10901 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10902
  %2 = or i32 %1, 65536, !dbg !10902
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10902
  ret void, !dbg !10903
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !10904 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10907, metadata !DIExpression()), !dbg !10923
  call void @llvm.dbg.value(metadata i32 undef, metadata !10907, metadata !DIExpression()), !dbg !10923
  call void @llvm.dbg.value(metadata i32 undef, metadata !10907, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !10923
  ret void, !dbg !10924
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !10925 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10929, metadata !DIExpression()), !dbg !10931
  %2 = icmp eq i8* %0, null, !dbg !10932
  br i1 %2, label %29, label %3, !dbg !10934

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !10935
  %5 = icmp eq i8 %4, 0, !dbg !10936
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !10937
  br i1 %6, label %29, label %8, !dbg !10937

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10930, metadata !DIExpression()), !dbg !10931
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !10938

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !10930, metadata !DIExpression()), !dbg !10931
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #25, !dbg !10940
  br i1 %10, label %11, label %15, !dbg !10945

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !10946
  %13 = load i8*, i8** %12, align 4, !dbg !10946
  %14 = icmp eq i8* %13, %0, !dbg !10947
  br i1 %14, label %29, label %15, !dbg !10948

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !10949
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !10930, metadata !DIExpression()), !dbg !10931
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10950
  br i1 %17, label %7, label %8, !dbg !10951, !llvm.loop !10952

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !10930, metadata !DIExpression()), !dbg !10931
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #25, !dbg !10954
  br i1 %20, label %21, label %26, !dbg !10958

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !10959
  %23 = load i8*, i8** %22, align 4, !dbg !10959
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #24, !dbg !10960
  %25 = icmp eq i32 %24, 0, !dbg !10961
  br i1 %25, label %29, label %26, !dbg !10962

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !10963
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !10930, metadata !DIExpression()), !dbg !10931
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10964
  br i1 %28, label %29, label %18, !dbg !10938, !llvm.loop !10965

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !10931
  ret %struct.device* %30, !dbg !10967
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #4 !dbg !10968 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10972, metadata !DIExpression()), !dbg !10973
  %2 = icmp eq %struct.device* %0, null, !dbg !10974
  br i1 %2, label %14, label %3, !dbg !10976

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !10977
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !10977
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !10978
  %7 = load i8, i8* %6, align 1, !dbg !10978
  %8 = and i8 %7, 1, !dbg !10978
  %9 = icmp eq i8 %8, 0, !dbg !10978
  br i1 %9, label %14, label %10, !dbg !10979

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !10980
  %12 = load i8, i8* %11, align 1, !dbg !10980
  %13 = icmp eq i8 %12, 0, !dbg !10981
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !10973
  ret i1 %15, !dbg !10982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #5 !dbg !10983 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !10988, metadata !DIExpression()), !dbg !10989
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !10990
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !10991
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10992 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11000, metadata !DIExpression()), !dbg !11005
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11001, metadata !DIExpression()), !dbg !11005
  call void @llvm.dbg.value(metadata i8* %2, metadata !11002, metadata !DIExpression()), !dbg !11005
  %5 = bitcast i32* %4 to i8*, !dbg !11006
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11006
  call void @llvm.dbg.value(metadata i32 0, metadata !11003, metadata !DIExpression()), !dbg !11005
  store i32 0, i32* %4, align 4, !dbg !11007
  call void @llvm.dbg.value(metadata i32* %4, metadata !11003, metadata !DIExpression(DW_OP_deref)), !dbg !11005
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !11008
  call void @llvm.dbg.value(metadata i16* %6, metadata !11004, metadata !DIExpression()), !dbg !11005
  %7 = load i32, i32* %4, align 4, !dbg !11009
  call void @llvm.dbg.value(metadata i32 %7, metadata !11003, metadata !DIExpression()), !dbg !11005
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !11010
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11011
  ret i32 %8, !dbg !11012
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !11013 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11017, metadata !DIExpression()), !dbg !11023
  call void @llvm.dbg.value(metadata i32* %1, metadata !11018, metadata !DIExpression()), !dbg !11023
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11024
  %4 = load i16*, i16** %3, align 4, !dbg !11024
  call void @llvm.dbg.value(metadata i16* %4, metadata !11019, metadata !DIExpression()), !dbg !11023
  %5 = icmp eq i16* %4, null, !dbg !11025
  br i1 %5, label %14, label %6, !dbg !11026

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11027
  call void @llvm.dbg.value(metadata i32 %7, metadata !11020, metadata !DIExpression()), !dbg !11027
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11028
  %9 = load i16, i16* %8, align 2, !dbg !11028
  %10 = add i16 %9, -32767, !dbg !11029
  %11 = icmp ult i16 %10, 2, !dbg !11029
  %12 = add i32 %7, 1, !dbg !11030
  call void @llvm.dbg.value(metadata i32 %12, metadata !11020, metadata !DIExpression()), !dbg !11027
  br i1 %11, label %13, label %6, !dbg !11029, !llvm.loop !11032

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11035
  br label %14, !dbg !11036

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11037
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11038 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11042, metadata !DIExpression()), !dbg !11053
  call void @llvm.dbg.value(metadata i32 %1, metadata !11043, metadata !DIExpression()), !dbg !11053
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11044, metadata !DIExpression()), !dbg !11053
  call void @llvm.dbg.value(metadata i8* %3, metadata !11045, metadata !DIExpression()), !dbg !11053
  call void @llvm.dbg.value(metadata i32 0, metadata !11046, metadata !DIExpression()), !dbg !11054
  %5 = icmp eq i32 %1, 0, !dbg !11055
  br i1 %5, label %16, label %8, !dbg !11056

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11046, metadata !DIExpression()), !dbg !11054
  %7 = icmp eq i32 %15, %1, !dbg !11055
  br i1 %7, label %16, label %8, !dbg !11056, !llvm.loop !11057

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11046, metadata !DIExpression()), !dbg !11054
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11059
  %11 = load i16, i16* %10, align 2, !dbg !11059
  call void @llvm.dbg.value(metadata i16 %11, metadata !11048, metadata !DIExpression()), !dbg !11060
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #25, !dbg !11061
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11051, metadata !DIExpression()), !dbg !11060
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #24, !dbg !11062
  call void @llvm.dbg.value(metadata i32 %13, metadata !11052, metadata !DIExpression()), !dbg !11060
  %14 = icmp slt i32 %13, 0, !dbg !11063
  %15 = add nuw i32 %9, 1, !dbg !11065
  call void @llvm.dbg.value(metadata i32 %15, metadata !11046, metadata !DIExpression()), !dbg !11054
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #12 !dbg !11067 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11071, metadata !DIExpression()), !dbg !11074
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11072, metadata !DIExpression()), !dbg !11074
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11073, metadata !DIExpression()), !dbg !11074
  %2 = sext i16 %0 to i32, !dbg !11075
  %3 = icmp slt i16 %0, 1, !dbg !11077
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11078
  %6 = add nsw i32 %2, -1, !dbg !11078
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11078
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11078
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11072, metadata !DIExpression()), !dbg !11074
  ret %struct.device* %8, !dbg !11079
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11080 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11082, metadata !DIExpression()), !dbg !11087
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11083, metadata !DIExpression()), !dbg !11087
  call void @llvm.dbg.value(metadata i8* %2, metadata !11084, metadata !DIExpression()), !dbg !11087
  %5 = bitcast i32* %4 to i8*, !dbg !11088
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11088
  call void @llvm.dbg.value(metadata i32 0, metadata !11085, metadata !DIExpression()), !dbg !11087
  store i32 0, i32* %4, align 4, !dbg !11089
  call void @llvm.dbg.value(metadata i32* %4, metadata !11085, metadata !DIExpression(DW_OP_deref)), !dbg !11087
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !11090
  call void @llvm.dbg.value(metadata i16* %6, metadata !11086, metadata !DIExpression()), !dbg !11087
  %7 = load i32, i32* %4, align 4, !dbg !11091
  call void @llvm.dbg.value(metadata i32 %7, metadata !11085, metadata !DIExpression()), !dbg !11087
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !11092
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11093
  ret i32 %8, !dbg !11094
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !11095 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11097, metadata !DIExpression()), !dbg !11102
  call void @llvm.dbg.value(metadata i32* %1, metadata !11098, metadata !DIExpression()), !dbg !11102
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11103
  %4 = load i16*, i16** %3, align 4, !dbg !11103
  call void @llvm.dbg.value(metadata i16* %4, metadata !11099, metadata !DIExpression()), !dbg !11102
  call void @llvm.dbg.value(metadata i32 0, metadata !11100, metadata !DIExpression()), !dbg !11102
  call void @llvm.dbg.value(metadata i32 0, metadata !11101, metadata !DIExpression()), !dbg !11102
  %5 = icmp eq i16* %4, null, !dbg !11104
  br i1 %5, label %22, label %6, !dbg !11106

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11100, metadata !DIExpression()), !dbg !11102
  call void @llvm.dbg.value(metadata i16* %8, metadata !11099, metadata !DIExpression()), !dbg !11102
  %9 = load i16, i16* %8, align 2, !dbg !11107
  %10 = icmp eq i16 %9, -32768, !dbg !11111
  call void @llvm.dbg.value(metadata i32 undef, metadata !11100, metadata !DIExpression()), !dbg !11102
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !11112
  call void @llvm.dbg.value(metadata i16* %11, metadata !11099, metadata !DIExpression()), !dbg !11102
  %12 = zext i1 %10 to i32, !dbg !11113
  %13 = add i32 %7, %12, !dbg !11113
  call void @llvm.dbg.value(metadata i32 %13, metadata !11100, metadata !DIExpression()), !dbg !11102
  %14 = icmp eq i32 %13, 2, !dbg !11114
  br i1 %14, label %15, label %6, !dbg !11115

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !11102
  call void @llvm.dbg.value(metadata i32 %16, metadata !11101, metadata !DIExpression()), !dbg !11102
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !11116
  %18 = load i16, i16* %17, align 2, !dbg !11116
  %19 = icmp eq i16 %18, 32767, !dbg !11117
  %20 = add i32 %16, 1, !dbg !11118
  call void @llvm.dbg.value(metadata i32 %20, metadata !11101, metadata !DIExpression()), !dbg !11102
  br i1 %19, label %21, label %15, !dbg !11120, !llvm.loop !11121

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !11123
  br label %22, !dbg !11124

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !11125
  call void @llvm.dbg.value(metadata i16* %23, metadata !11099, metadata !DIExpression()), !dbg !11102
  ret i16* %23, !dbg !11126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #4 !dbg !11127 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11130
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !11131
  ret i32* %2, !dbg !11132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #12 !dbg !11133 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11281, metadata !DIExpression()), !dbg !11284
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !11282, metadata !DIExpression()), !dbg !11284
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11283, metadata !DIExpression()), !dbg !11284
  ret void, !dbg !11285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !11286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11290, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata i32 %1, metadata !11291, metadata !DIExpression()), !dbg !11292
  ret void, !dbg !11293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !11294 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11298, metadata !DIExpression()), !dbg !11300
  call void @llvm.dbg.value(metadata i32 %1, metadata !11299, metadata !DIExpression()), !dbg !11300
  ret void, !dbg !11301
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11302 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11306, metadata !DIExpression()), !dbg !11308
  call void @llvm.dbg.value(metadata i8* %1, metadata !11307, metadata !DIExpression()), !dbg !11308
  ret i32 -134, !dbg !11309
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11310 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11314, metadata !DIExpression()), !dbg !11316
  call void @llvm.dbg.value(metadata i8* %1, metadata !11315, metadata !DIExpression()), !dbg !11316
  ret i32 -134, !dbg !11317
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !11318 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11321, metadata !DIExpression()), !dbg !11322
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11323, !srcloc !11329
  call void @llvm.dbg.value(metadata i32 undef, metadata !11326, metadata !DIExpression()) #23, !dbg !11330
  call void @llvm.dbg.value(metadata i32 undef, metadata !11327, metadata !DIExpression()) #23, !dbg !11330
  br label %3, !dbg !11331

3:                                                ; preds = %3, %1
  br label %3, !dbg !11332, !llvm.loop !11335
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11342, metadata !DIExpression()), !dbg !11344
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11343, metadata !DIExpression()), !dbg !11344
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11345
  unreachable, !dbg !11345
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !11346 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11348, metadata !DIExpression()), !dbg !11349
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11350
  unreachable, !dbg !11350
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11353, metadata !DIExpression()), !dbg !11357
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11354, metadata !DIExpression()), !dbg !11357
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11358, !srcloc !11329
  call void @llvm.dbg.value(metadata i32 undef, metadata !11326, metadata !DIExpression()) #23, !dbg !11360
  call void @llvm.dbg.value(metadata i32 undef, metadata !11327, metadata !DIExpression()) #23, !dbg !11360
  call void @llvm.dbg.value(metadata i32 undef, metadata !11355, metadata !DIExpression()), !dbg !11357
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11356, metadata !DIExpression()), !dbg !11357
  %4 = icmp eq %struct.__esf* %1, null, !dbg !11361
  br i1 %4, label %6, label %5, !dbg !11363

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #25, !dbg !11364
  br label %7, !dbg !11365

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #25, !dbg !11364
  br label %7, !dbg !11368

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !11358
  call void @llvm.dbg.value(metadata i32 %8, metadata !11326, metadata !DIExpression()) #23, !dbg !11360
  call void @llvm.dbg.value(metadata i32 %8, metadata !11355, metadata !DIExpression()), !dbg !11357
  %9 = tail call fastcc %struct.k_thread* @k_current_get.99() #26, !dbg !11370
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !11356, metadata !DIExpression()), !dbg !11357
  call void @llvm.dbg.value(metadata i32 undef, metadata !11371, metadata !DIExpression()) #23, !dbg !11374
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !11376, !srcloc !11377
  tail call fastcc void @k_thread_abort.100(%struct.k_thread* noundef %9) #25, !dbg !11378
  ret void, !dbg !11381
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.99() unnamed_addr #9 !dbg !11382 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.101() #26, !dbg !11386
  ret %struct.k_thread* %1, !dbg !11387
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.100(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11388 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11392, metadata !DIExpression()), !dbg !11393
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11394, !srcloc !11396
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !11397
  ret void, !dbg !11398
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.101() unnamed_addr #9 !dbg !11399 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11400, !srcloc !11402
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !11403
  ret %struct.k_thread* %1, !dbg !11404
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11405 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11409, metadata !DIExpression()), !dbg !11412
  call void @llvm.dbg.value(metadata i32 %1, metadata !11410, metadata !DIExpression()), !dbg !11412
  call void @llvm.dbg.value(metadata i32 %2, metadata !11411, metadata !DIExpression()), !dbg !11412
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #24, !dbg !11413
  ret void, !dbg !11414
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11415 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11419, metadata !DIExpression()), !dbg !11422
  call void @llvm.dbg.value(metadata i8* %1, metadata !11420, metadata !DIExpression()), !dbg !11422
  call void @llvm.dbg.value(metadata i32 %2, metadata !11421, metadata !DIExpression()), !dbg !11422
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #24, !dbg !11423
  ret void, !dbg !11424
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !11425 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #25, !dbg !11426
  ret void, !dbg !11427
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !11428 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11430, metadata !DIExpression()), !dbg !11431
  tail call fastcc void @init_idle_thread(i32 noundef %0) #25, !dbg !11432
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11433
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !11434
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !11435
  %4 = trunc i32 %0 to i8, !dbg !11436
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !11437
  store i8 %4, i8* %5, align 4, !dbg !11438
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !11439
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #25, !dbg !11440
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !11441
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !11442
  store i8* %8, i8** %9, align 4, !dbg !11443
  ret void, !dbg !11444
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !11445 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11447, metadata !DIExpression()), !dbg !11453
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11454
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11448, metadata !DIExpression()), !dbg !11453
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !11455
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !11449, metadata !DIExpression()), !dbg !11453
  call void @llvm.dbg.value(metadata i8* null, metadata !11452, metadata !DIExpression()), !dbg !11453
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !11456
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !11457
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #24, !dbg !11458
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #25, !dbg !11459
  ret void, !dbg !11460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !11461 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11465, metadata !DIExpression()), !dbg !11466
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11467
  ret i8* %2, !dbg !11468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !11469 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11474, metadata !DIExpression()), !dbg !11475
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11476
  %3 = load i8, i8* %2, align 1, !dbg !11477
  %4 = and i8 %3, -5, !dbg !11477
  store i8 %4, i8* %2, align 1, !dbg !11477
  ret void, !dbg !11478
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !11479 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #25, !dbg !11482
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #24, !dbg !11483
  %3 = ptrtoint i8* %2 to i32, !dbg !11492
  %4 = add i32 %3, 2048, !dbg !11493
  call void @llvm.dbg.value(metadata i32 %4, metadata !11487, metadata !DIExpression()) #23, !dbg !11494
  call void @llvm.dbg.value(metadata i32 %4, metadata !11495, metadata !DIExpression()) #23, !dbg !11498
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !11500, !srcloc !11501
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11502
  %6 = or i32 %5, 512, !dbg !11502
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11502
  tail call fastcc void @__NVIC_SetPriority.108(i32 noundef -2, i32 noundef 255) #24, !dbg !11503
  tail call fastcc void @__NVIC_SetPriority.108(i32 noundef -5, i32 noundef 0) #24, !dbg !11506
  tail call fastcc void @__NVIC_SetPriority.108(i32 noundef -12, i32 noundef 0) #24, !dbg !11507
  tail call fastcc void @__NVIC_SetPriority.108(i32 noundef -11, i32 noundef 0) #24, !dbg !11508
  tail call fastcc void @__NVIC_SetPriority.108(i32 noundef -10, i32 noundef 0) #24, !dbg !11509
  tail call fastcc void @__NVIC_SetPriority.108(i32 noundef -4, i32 noundef 0) #24, !dbg !11510
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11511
  %8 = or i32 %7, 458752, !dbg !11511
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11511
  tail call void @z_arm_fault_init() #24, !dbg !11512
  tail call void @z_arm_cpu_idle_init() #24, !dbg !11513
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !11514
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !11517
  %9 = tail call i32 @z_arm_mpu_init() #24, !dbg !11518
  tail call void @z_arm_configure_static_mpu_regions() #24, !dbg !11519
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !11520
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !11520
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !11481, metadata !DIExpression()), !dbg !11521
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #25, !dbg !11522
  call void @z_device_state_init() #24, !dbg !11523
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #25, !dbg !11524
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #25, !dbg !11525
  %11 = call fastcc i8* @prepare_multithreading() #25, !dbg !11526
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !11527
  unreachable, !dbg !11527
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1847 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1851, metadata !DIExpression()), !dbg !11528
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !11529
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !11529
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1852, metadata !DIExpression()), !dbg !11528
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1852, metadata !DIExpression()), !dbg !11528
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !11530
  br i1 %7, label %8, label %35, !dbg !11531

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1852, metadata !DIExpression()), !dbg !11528
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !11532
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !11532
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1862, metadata !DIExpression()), !dbg !11533
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !11534
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !11534
  %14 = tail call i32 %13(%struct.device* noundef %11) #24, !dbg !11535
  call void @llvm.dbg.value(metadata i32 %14, metadata !1866, metadata !DIExpression()), !dbg !11533
  %15 = icmp eq %struct.device* %11, null, !dbg !11536
  br i1 %15, label %32, label %16, !dbg !11538

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !11539
  br i1 %17, label %26, label %18, !dbg !11542

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !11543
  call void @llvm.dbg.value(metadata i32 %19, metadata !1866, metadata !DIExpression()), !dbg !11533
  %20 = icmp ult i32 %19, 255, !dbg !11545
  %21 = select i1 %20, i32 %19, i32 255, !dbg !11545
  call void @llvm.dbg.value(metadata i32 %21, metadata !1866, metadata !DIExpression()), !dbg !11533
  %22 = trunc i32 %21 to i8, !dbg !11546
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11547
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !11547
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !11548
  store i8 %22, i8* %25, align 1, !dbg !11549
  br label %26, !dbg !11550

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11551
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !11551
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !11552
  %30 = load i8, i8* %29, align 1, !dbg !11553
  %31 = or i8 %30, 1, !dbg !11553
  store i8 %31, i8* %29, align 1, !dbg !11553
  br label %32, !dbg !11554

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !11555
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1852, metadata !DIExpression()), !dbg !11528
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !11530
  br i1 %34, label %8, label %35, !dbg !11531, !llvm.loop !11556

35:                                               ; preds = %32, %1
  ret void, !dbg !11558
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.108(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !11559 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11561, metadata !DIExpression()), !dbg !11563
  call void @llvm.dbg.value(metadata i32 %1, metadata !11562, metadata !DIExpression()), !dbg !11563
  %3 = trunc i32 %1 to i8, !dbg !11564
  %4 = shl i8 %3, 4, !dbg !11564
  %5 = and i32 %0, 15, !dbg !11567
  %6 = add nsw i32 %5, -4, !dbg !11568
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !11569
  store volatile i8 %4, i8* %7, align 1, !dbg !11570
  ret void, !dbg !11571
}

; Function Attrs: optsize
declare !dbg !11572 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !11573 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11576, metadata !DIExpression()), !dbg !11577
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11578
  store i8 1, i8* %2, align 1, !dbg !11579
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !11580
  store i8 1, i8* %3, align 4, !dbg !11581
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11582
  store i32 0, i32* %4, align 4, !dbg !11583
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11584
  store i32 0, i32* %5, align 4, !dbg !11585
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11586
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !11587
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11588
  ret void, !dbg !11589
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !11590 {
  tail call void @z_sched_init() #24, !dbg !11595
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11596
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.109, i32 0, i32 0)) #24, !dbg !11597
  call void @llvm.dbg.value(metadata i8* %1, metadata !11594, metadata !DIExpression()), !dbg !11598
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !11599
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !11600
  tail call void @z_init_cpu(i32 noundef 0) #25, !dbg !11601
  ret i8* %1, !dbg !11602
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !11603 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11607, metadata !DIExpression()), !dbg !11608
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #24, !dbg !11609
  unreachable, !dbg !11610
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !11611 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11613, metadata !DIExpression()), !dbg !11616
  call void @llvm.dbg.value(metadata i8* %1, metadata !11614, metadata !DIExpression()), !dbg !11616
  call void @llvm.dbg.value(metadata i8* %2, metadata !11615, metadata !DIExpression()), !dbg !11616
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !11617
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #25, !dbg !11618
  tail call void @boot_banner() #24, !dbg !11619
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #25, !dbg !11620
  tail call void @z_init_static_threads() #24, !dbg !11621
  tail call void @main() #24, !dbg !11622
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11623
  %5 = and i8 %4, -2, !dbg !11623
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11623
  ret void, !dbg !11624
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !11625 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11635, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.value(metadata i8* %1, metadata !11636, metadata !DIExpression()), !dbg !11637
  ret void, !dbg !11638
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !11639 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11641, metadata !DIExpression()), !dbg !11643
  call void @llvm.dbg.value(metadata i8* %1, metadata !11642, metadata !DIExpression()), !dbg !11643
  ret void, !dbg !11644
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !11645 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !11646, !srcloc !11653
  call void @llvm.dbg.value(metadata i32 %1, metadata !11649, metadata !DIExpression()) #23, !dbg !11654
  %2 = icmp ne i32 %1, 0, !dbg !11655
  ret i1 %2, !dbg !11656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !11657 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11658
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11659
  %3 = load i8, i8* %2, align 4, !dbg !11660
  %4 = or i8 %3, 1, !dbg !11660
  store i8 %4, i8* %2, align 4, !dbg !11660
  ret void, !dbg !11661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !11662 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11663
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11664
  %3 = load i8, i8* %2, align 4, !dbg !11665
  %4 = and i8 %3, -2, !dbg !11665
  store i8 %4, i8* %2, align 4, !dbg !11665
  ret void, !dbg !11666
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #4 !dbg !11667 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11668
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11669
  %3 = load i8, i8* %2, align 4, !dbg !11669
  %4 = and i8 %3, 1, !dbg !11670
  %5 = icmp ne i8 %4, 0, !dbg !11671
  ret i1 %5, !dbg !11672
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11673 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11677, metadata !DIExpression()), !dbg !11679
  call void @llvm.dbg.value(metadata i8* %1, metadata !11678, metadata !DIExpression()), !dbg !11679
  ret i32 -88, !dbg !11680
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !11681 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11685, metadata !DIExpression()), !dbg !11686
  ret i8* null, !dbg !11687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #12 !dbg !11688 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11692, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata i8* %1, metadata !11693, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata i32 %2, metadata !11694, metadata !DIExpression()), !dbg !11695
  ret i32 -88, !dbg !11696
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1875 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !1989, metadata !DIExpression()), !dbg !11697
  call void @llvm.dbg.value(metadata i8* %1, metadata !1990, metadata !DIExpression()), !dbg !11697
  call void @llvm.dbg.value(metadata i32 %2, metadata !1991, metadata !DIExpression()), !dbg !11697
  call void @llvm.dbg.value(metadata i32 0, metadata !1992, metadata !DIExpression()), !dbg !11697
  call void @llvm.dbg.value(metadata i8 undef, metadata !1994, metadata !DIExpression()), !dbg !11697
  %4 = icmp eq i8* %1, null, !dbg !11698
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !11700
  br i1 %6, label %46, label %7, !dbg !11700

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11701
  %9 = load i8, i8* %8, align 1, !dbg !11701
  call void @llvm.dbg.value(metadata i8 %9, metadata !1994, metadata !DIExpression()), !dbg !11697
  %10 = add i32 %2, -1, !dbg !11702
  call void @llvm.dbg.value(metadata i32 %10, metadata !1991, metadata !DIExpression()), !dbg !11697
  call void @llvm.dbg.value(metadata i8 0, metadata !1995, metadata !DIExpression()), !dbg !11703
  call void @llvm.dbg.value(metadata i8 %9, metadata !1994, metadata !DIExpression()), !dbg !11697
  call void @llvm.dbg.value(metadata i32 0, metadata !1992, metadata !DIExpression()), !dbg !11697
  %11 = icmp eq i8 %9, 0, !dbg !11704
  br i1 %11, label %12, label %15, !dbg !11706

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !11707
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !11708
  store i8 0, i8* %14, align 1, !dbg !11709
  br label %46, !dbg !11710

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !1995, metadata !DIExpression()), !dbg !11703
  call void @llvm.dbg.value(metadata i8 %17, metadata !1994, metadata !DIExpression()), !dbg !11697
  call void @llvm.dbg.value(metadata i32 %18, metadata !1992, metadata !DIExpression()), !dbg !11697
  %19 = zext i8 %17 to i32, !dbg !11711
  %20 = zext i8 %16 to i32, !dbg !11712
  %21 = shl nuw i32 1, %20, !dbg !11712
  call void @llvm.dbg.value(metadata i32 %21, metadata !1993, metadata !DIExpression()), !dbg !11697
  %22 = and i32 %21, %19, !dbg !11714
  %23 = icmp eq i32 %22, 0, !dbg !11716
  br i1 %23, label %42, label %24, !dbg !11717

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !11718
  %26 = sub i32 %10, %18, !dbg !11719
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !11720
  %28 = load i8*, i8** %27, align 4, !dbg !11720
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !11721
  %30 = load i32, i32* %29, align 4, !dbg !11721
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #25, !dbg !11722
  %32 = add i32 %31, %18, !dbg !11723
  call void @llvm.dbg.value(metadata i32 %32, metadata !1992, metadata !DIExpression()), !dbg !11697
  %33 = trunc i32 %21 to i8, !dbg !11724
  %34 = xor i8 %33, -1, !dbg !11724
  %35 = and i8 %17, %34, !dbg !11724
  call void @llvm.dbg.value(metadata i8 %35, metadata !1994, metadata !DIExpression()), !dbg !11697
  %36 = icmp eq i8 %35, 0, !dbg !11725
  br i1 %36, label %12, label %37, !dbg !11727

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !11728
  %39 = sub i32 %10, %32, !dbg !11730
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.110, i32 0, i32 0), i32 noundef 1) #25, !dbg !11731
  %41 = add i32 %40, %32, !dbg !11732
  call void @llvm.dbg.value(metadata i32 %41, metadata !1992, metadata !DIExpression()), !dbg !11697
  br label %42, !dbg !11733

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !11697
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !11697
  call void @llvm.dbg.value(metadata i8 %44, metadata !1994, metadata !DIExpression()), !dbg !11697
  call void @llvm.dbg.value(metadata i32 %43, metadata !1992, metadata !DIExpression()), !dbg !11697
  %45 = add i8 %16, 1, !dbg !11734
  call void @llvm.dbg.value(metadata i8 %45, metadata !1995, metadata !DIExpression()), !dbg !11703
  br label %15, !dbg !11706

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.111, i32 0, i32 0), %3 ], !dbg !11697
  ret i8* %47, !dbg !11735
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11736 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11740, metadata !DIExpression()), !dbg !11745
  call void @llvm.dbg.value(metadata i32 %1, metadata !11741, metadata !DIExpression()), !dbg !11745
  call void @llvm.dbg.value(metadata i8* %2, metadata !11742, metadata !DIExpression()), !dbg !11745
  call void @llvm.dbg.value(metadata i32 %3, metadata !11743, metadata !DIExpression()), !dbg !11745
  %5 = icmp ult i32 %1, %3, !dbg !11746
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !11746
  call void @llvm.dbg.value(metadata i32 %6, metadata !11744, metadata !DIExpression()), !dbg !11745
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #24, !dbg !11747
  ret i32 %6, !dbg !11748
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11749 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11753, metadata !DIExpression()), !dbg !11754
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #24, !dbg !11755
  ret void, !dbg !11756
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !11757 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11766, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11767, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.value(metadata i32 %2, metadata !11768, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11769, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.value(metadata i8* %4, metadata !11770, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.value(metadata i8* %5, metadata !11771, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.value(metadata i8* %6, metadata !11772, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.value(metadata i32 %7, metadata !11773, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.value(metadata i32 %8, metadata !11774, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.value(metadata i8* undef, metadata !11775, metadata !DIExpression()), !dbg !11777
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !11778
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #25, !dbg !11779
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !11780
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #25, !dbg !11781
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #25, !dbg !11782
  call void @llvm.dbg.value(metadata i8* %13, metadata !11776, metadata !DIExpression()), !dbg !11777
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #24, !dbg !11783
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !11784
  store i8* null, i8** %14, align 4, !dbg !11785
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11786
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !11786
  br i1 %16, label %20, label %17, !dbg !11788

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !11789
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !11789
  br label %20, !dbg !11790

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !11777
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11791
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !11793
  ret i8* %13, !dbg !11794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #5 !dbg !11795 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11800, metadata !DIExpression()), !dbg !11801
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !11802
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #25, !dbg !11803
  ret void, !dbg !11804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #5 !dbg !11805 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11810, metadata !DIExpression()), !dbg !11814
  call void @llvm.dbg.value(metadata i32 %1, metadata !11811, metadata !DIExpression()), !dbg !11814
  call void @llvm.dbg.value(metadata i32 %2, metadata !11812, metadata !DIExpression()), !dbg !11814
  call void @llvm.dbg.value(metadata i32 %3, metadata !11813, metadata !DIExpression()), !dbg !11814
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !11815
  store %union.anon* null, %union.anon** %5, align 8, !dbg !11816
  %6 = trunc i32 %3 to i8, !dbg !11817
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !11818
  store i8 %6, i8* %7, align 4, !dbg !11819
  %8 = trunc i32 %2 to i8, !dbg !11820
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !11821
  store i8 %8, i8* %9, align 1, !dbg !11822
  %10 = trunc i32 %1 to i8, !dbg !11823
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !11824
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !11824
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !11824
  store i8 %10, i8* %13, align 2, !dbg !11825
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !11826
  store i8 0, i8* %14, align 1, !dbg !11827
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #25, !dbg !11828
  ret void, !dbg !11829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !11830 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11834, metadata !DIExpression()), !dbg !11842
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11835, metadata !DIExpression()), !dbg !11842
  call void @llvm.dbg.value(metadata i32 %2, metadata !11836, metadata !DIExpression()), !dbg !11842
  call void @llvm.dbg.value(metadata i32 0, metadata !11841, metadata !DIExpression()), !dbg !11842
  %4 = add i32 %2, 7, !dbg !11843
  %5 = and i32 %4, -8, !dbg !11843
  %6 = add i32 %5, 64, !dbg !11843
  call void @llvm.dbg.value(metadata i32 %6, metadata !11837, metadata !DIExpression()), !dbg !11842
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.121(%struct.z_thread_stack_element* noundef %1) #25, !dbg !11845
  call void @llvm.dbg.value(metadata i8* %7, metadata !11840, metadata !DIExpression()), !dbg !11842
  call void @llvm.dbg.value(metadata i32 %5, metadata !11838, metadata !DIExpression()), !dbg !11842
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !11846
  call void @llvm.dbg.value(metadata i8* %8, metadata !11839, metadata !DIExpression()), !dbg !11842
  call void @llvm.dbg.value(metadata i32 0, metadata !11841, metadata !DIExpression()), !dbg !11842
  %9 = ptrtoint i8* %7 to i32, !dbg !11847
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11848
  store i32 %9, i32* %10, align 4, !dbg !11849
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11850
  store i32 %5, i32* %11, align 4, !dbg !11851
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !11852
  store i32 0, i32* %12, align 4, !dbg !11853
  call void @llvm.dbg.value(metadata i8* %8, metadata !11839, metadata !DIExpression()), !dbg !11842
  ret i8* %8, !dbg !11854
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.121(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !11855 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11859, metadata !DIExpression()), !dbg !11860
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11861
  ret i8* %2, !dbg !11862
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #5 !dbg !11863 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11868, metadata !DIExpression()), !dbg !11869
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !11870
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !11871
  ret void, !dbg !11872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #5 !dbg !11873 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11875, metadata !DIExpression()), !dbg !11876
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11877
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #25, !dbg !11878
  ret void, !dbg !11879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #5 !dbg !11880 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11884, metadata !DIExpression()), !dbg !11885
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11886
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !11887
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11888
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !11889
  ret void, !dbg !11890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !11891 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11896, metadata !DIExpression()), !dbg !11897
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11898
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !11899
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11900
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !11901
  ret void, !dbg !11902
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !11903 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !11920, metadata !DIExpression()), !dbg !11921
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11911, metadata !DIExpression()), !dbg !11921
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11912, metadata !DIExpression()), !dbg !11921
  call void @llvm.dbg.value(metadata i32 %2, metadata !11913, metadata !DIExpression()), !dbg !11921
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11914, metadata !DIExpression()), !dbg !11921
  call void @llvm.dbg.value(metadata i8* %4, metadata !11915, metadata !DIExpression()), !dbg !11921
  call void @llvm.dbg.value(metadata i8* %5, metadata !11916, metadata !DIExpression()), !dbg !11921
  call void @llvm.dbg.value(metadata i8* %6, metadata !11917, metadata !DIExpression()), !dbg !11921
  call void @llvm.dbg.value(metadata i32 %7, metadata !11918, metadata !DIExpression()), !dbg !11921
  call void @llvm.dbg.value(metadata i32 %8, metadata !11919, metadata !DIExpression()), !dbg !11921
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #25, !dbg !11922
  %13 = icmp eq i64 %11, -1, !dbg !11923
  br i1 %13, label %15, label %14, !dbg !11925

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #25, !dbg !11926
  br label %15, !dbg !11928

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !11929
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11930 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !11935, metadata !DIExpression()), !dbg !11936
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11934, metadata !DIExpression()), !dbg !11936
  %4 = icmp eq i64 %3, 0, !dbg !11937
  br i1 %4, label %5, label %6, !dbg !11939

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !11940
  br label %7, !dbg !11942

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !11943
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !11945
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11946 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11950, metadata !DIExpression()), !dbg !11951
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11952, !srcloc !11954
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !11955
  ret void, !dbg !11956
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11957 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11960, metadata !DIExpression()), !dbg !11961
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11959, metadata !DIExpression()), !dbg !11961
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11962
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !11963
  ret void, !dbg !11964
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !11965 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11967, metadata !DIExpression()), !dbg !11987
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !11988

1:                                                ; preds = %2
  tail call void @k_sched_lock() #24, !dbg !11989
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11985, metadata !DIExpression()), !dbg !11990
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !11991

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !11967, metadata !DIExpression()), !dbg !11987
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !11992
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11992
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !11995
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !11995
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !11996
  %9 = load i32, i32* %8, align 4, !dbg !11996
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !11997
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !11997
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !11998
  %13 = load i8*, i8** %12, align 4, !dbg !11998
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !11999
  %15 = load i8*, i8** %14, align 4, !dbg !11999
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12000
  %17 = load i8*, i8** %16, align 4, !dbg !12000
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12001
  %19 = load i32, i32* %18, align 4, !dbg !12001
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12002
  %21 = load i32, i32* %20, align 4, !dbg !12002
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #25, !dbg !12003
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12004
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !12005
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !12006
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !12006
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12007
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !11967, metadata !DIExpression()), !dbg !11987
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12008
  br i1 %27, label %2, label %1, !dbg !11988, !llvm.loop !12010

28:                                               ; preds = %0
  tail call void @k_sched_lock() #24, !dbg !11989
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11985, metadata !DIExpression()), !dbg !11990
  br label %29, !dbg !11991

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #24, !dbg !12012
  ret void, !dbg !12013

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !11985, metadata !DIExpression()), !dbg !11990
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !12014
  %33 = load i32, i32* %32, align 4, !dbg !12014
  %34 = icmp eq i32 %33, -1, !dbg !12018
  br i1 %34, label %43, label %35, !dbg !12019

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !12020
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !12020
  %38 = icmp sgt i32 %33, 0, !dbg !12022
  %39 = select i1 %38, i32 %33, i32 0, !dbg !12022
  %40 = zext i32 %39 to i64, !dbg !12022
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #25, !dbg !12022
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !12023
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #25, !dbg !12023
  br label %43, !dbg !12024

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !12025
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !11985, metadata !DIExpression()), !dbg !11990
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12026
  br i1 %45, label %30, label %29, !dbg !11991, !llvm.loop !12028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !12030 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12035, metadata !DIExpression()), !dbg !12036
  call void @llvm.dbg.value(metadata i64 %0, metadata !12037, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 1000, metadata !12042, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 10000, metadata !12043, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i8 1, metadata !12044, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i8 0, metadata !12045, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i8 1, metadata !12046, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i8 0, metadata !12047, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i8 1, metadata !12048, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i8 0, metadata !12049, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i64 0, metadata !12050, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i64 0, metadata !12050, metadata !DIExpression()), !dbg !12054
  %2 = mul i64 %0, 10, !dbg !12056
  ret i64 %2, !dbg !12062
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !12063 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !12065, metadata !DIExpression()), !dbg !12069
  call void @llvm.dbg.value(metadata i8* %1, metadata !12066, metadata !DIExpression()), !dbg !12069
  call void @llvm.dbg.value(metadata i8* %2, metadata !12067, metadata !DIExpression()), !dbg !12069
  call void @llvm.dbg.value(metadata i8* %3, metadata !12068, metadata !DIExpression()), !dbg !12069
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12070
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !12071
  %7 = load i8, i8* %6, align 4, !dbg !12072
  %8 = or i8 %7, 4, !dbg !12072
  store i8 %8, i8* %6, align 4, !dbg !12072
  tail call void @z_thread_essential_clear() #25, !dbg !12073
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !12074
  unreachable, !dbg !12074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !12075 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12079, metadata !DIExpression()), !dbg !12080
  ret i32 -134, !dbg !12081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #12 !dbg !12082 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12086, metadata !DIExpression()), !dbg !12088
  call void @llvm.dbg.value(metadata i32 %1, metadata !12087, metadata !DIExpression()), !dbg !12088
  ret i32 -134, !dbg !12089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #12 !dbg !12090 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12097, metadata !DIExpression()), !dbg !12099
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !12098, metadata !DIExpression()), !dbg !12099
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !12100
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !12102
  %6 = select i1 %5, i32 -22, i32 0, !dbg !12099
  ret i32 %6, !dbg !12103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #12 !dbg !12104 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12108, metadata !DIExpression()), !dbg !12109
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !12110
  %3 = select i1 %2, i32 -22, i32 0, !dbg !12109
  ret i32 %3, !dbg !12112
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !12113 {
  tail call void @sys_clock_idle_exit() #24, !dbg !12115
  ret void, !dbg !12116
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !12117 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12119, metadata !DIExpression()), !dbg !12122
  call void @llvm.dbg.value(metadata i8* %1, metadata !12120, metadata !DIExpression()), !dbg !12122
  call void @llvm.dbg.value(metadata i8* %2, metadata !12121, metadata !DIExpression()), !dbg !12122
  br label %4, !dbg !12123

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12124, !srcloc !12131
  call void @llvm.dbg.value(metadata i32 undef, metadata !12127, metadata !DIExpression()) #23, !dbg !12132
  call void @llvm.dbg.value(metadata i32 undef, metadata !12128, metadata !DIExpression()) #23, !dbg !12132
  tail call fastcc void @k_cpu_idle() #25, !dbg !12133
  br label %4, !dbg !12123, !llvm.loop !12134
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !12136 {
  tail call void @arch_cpu_idle() #24, !dbg !12137
  ret void, !dbg !12138
}

; Function Attrs: optsize
declare !dbg !12139 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !12140 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12144, metadata !DIExpression()), !dbg !12148
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12145, metadata !DIExpression()), !dbg !12148
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12149
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !12149
  %5 = load i8, i8* %4, align 2, !dbg !12149
  call void @llvm.dbg.value(metadata i8 %5, metadata !12146, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12148
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12150
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !12150
  %8 = load i8, i8* %7, align 2, !dbg !12150
  call void @llvm.dbg.value(metadata i8 %8, metadata !12147, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12148
  %9 = icmp eq i8 %8, %5, !dbg !12151
  %10 = sext i8 %5 to i32, !dbg !12153
  %11 = sext i8 %8 to i32, !dbg !12153
  %12 = sub nsw i32 %11, %10, !dbg !12153
  %13 = select i1 %9, i32 0, i32 %12, !dbg !12153
  ret i32 %13, !dbg !12154
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !12155 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12159, metadata !DIExpression()), !dbg !12160
  %2 = tail call fastcc i32 @slice_time() #25, !dbg !12161
  %3 = icmp eq i32 %2, 0, !dbg !12163
  br i1 %3, label %8, label %4, !dbg !12164

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #24, !dbg !12165
  %6 = add i32 %5, %2, !dbg !12167
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12168
  %7 = tail call fastcc i32 @slice_time() #25, !dbg !12169
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #24, !dbg !12170
  br label %8, !dbg !12171

8:                                                ; preds = %4, %1
  ret void, !dbg !12172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #4 !dbg !12173 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12177, metadata !DIExpression()), !dbg !12179
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !12180
  call void @llvm.dbg.value(metadata i32 %1, metadata !12178, metadata !DIExpression()), !dbg !12179
  ret i32 %1, !dbg !12181
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12182 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12186, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i32 %1, metadata !12187, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i32 0, metadata !12188, metadata !DIExpression()), !dbg !12196
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !12204
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12206, !srcloc !12212
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12206
  call void @llvm.dbg.value(metadata i32 %4, metadata !12209, metadata !DIExpression()) #23, !dbg !12213
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !12213
  call void @llvm.dbg.value(metadata i32 %4, metadata !12203, metadata !DIExpression()) #23, !dbg !12204
  call void @llvm.dbg.value(metadata i32 %4, metadata !12194, metadata !DIExpression()), !dbg !12196
  call void @llvm.dbg.value(metadata i32 undef, metadata !12188, metadata !DIExpression()), !dbg !12196
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12214
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #25, !dbg !12217
  %6 = icmp sgt i32 %0, 0, !dbg !12218
  %7 = icmp sgt i32 %5, 2, !dbg !12220
  %8 = select i1 %7, i32 %5, i32 2, !dbg !12220
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !12220
  store i32 %9, i32* @slice_ticks, align 4, !dbg !12221
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !12222
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !12223
  call void @llvm.dbg.value(metadata i32 %4, metadata !12224, metadata !DIExpression()) #23, !dbg !12230
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !12230
  call void @llvm.dbg.value(metadata i32 %4, metadata !12232, metadata !DIExpression()) #23, !dbg !12235
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12237, !srcloc !12238
  call void @llvm.dbg.value(metadata i32 1, metadata !12188, metadata !DIExpression()), !dbg !12196
  call void @llvm.dbg.value(metadata i32 undef, metadata !12188, metadata !DIExpression()), !dbg !12196
  ret void, !dbg !12239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #12 !dbg !12240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12242, metadata !DIExpression()), !dbg !12243
  call void @llvm.dbg.value(metadata i32 %0, metadata !12244, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12259
  call void @llvm.dbg.value(metadata i32 1000, metadata !12247, metadata !DIExpression()), !dbg !12259
  call void @llvm.dbg.value(metadata i32 10000, metadata !12248, metadata !DIExpression()), !dbg !12259
  call void @llvm.dbg.value(metadata i8 1, metadata !12249, metadata !DIExpression()), !dbg !12259
  call void @llvm.dbg.value(metadata i1 true, metadata !12250, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12259
  call void @llvm.dbg.value(metadata i1 true, metadata !12251, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12259
  call void @llvm.dbg.value(metadata i8 0, metadata !12252, metadata !DIExpression()), !dbg !12259
  call void @llvm.dbg.value(metadata i1 true, metadata !12253, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12259
  call void @llvm.dbg.value(metadata i1 false, metadata !12254, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12259
  call void @llvm.dbg.value(metadata i64 0, metadata !12255, metadata !DIExpression()), !dbg !12259
  call void @llvm.dbg.value(metadata i64 0, metadata !12255, metadata !DIExpression()), !dbg !12259
  %2 = mul i32 %0, 10, !dbg !12261
  ret i32 %2, !dbg !12267
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !12268 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12270, metadata !DIExpression()), !dbg !12272
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !12273
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12275, !srcloc !12212
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12275
  call void @llvm.dbg.value(metadata i32 %3, metadata !12209, metadata !DIExpression()) #23, !dbg !12277
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !12277
  call void @llvm.dbg.value(metadata i32 %3, metadata !12203, metadata !DIExpression()) #23, !dbg !12273
  call void @llvm.dbg.value(metadata i32 %3, metadata !12271, metadata !DIExpression()), !dbg !12272
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12278
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12280
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !12281
  br i1 %6, label %7, label %8, !dbg !12282

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !12283
  call void @llvm.dbg.value(metadata i32 %3, metadata !12224, metadata !DIExpression()) #23, !dbg !12285
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !12285
  call void @llvm.dbg.value(metadata i32 %3, metadata !12232, metadata !DIExpression()) #23, !dbg !12287
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12289, !srcloc !12238
  br label %24, !dbg !12290

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12291
  %9 = tail call fastcc i32 @slice_time() #25, !dbg !12292
  %10 = icmp eq i32 %9, 0, !dbg !12292
  br i1 %10, label %21, label %11, !dbg !12294

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #25, !dbg !12295
  br i1 %12, label %13, label %21, !dbg !12296

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12297
  %15 = icmp sgt i32 %14, %0, !dbg !12300
  br i1 %15, label %19, label %16, !dbg !12301

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12302
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #25, !dbg !12302
  call void @llvm.dbg.value(metadata i32 %18, metadata !12271, metadata !DIExpression()), !dbg !12272
  br label %22, !dbg !12304

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !12305
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12305
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12307
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !12272
  call void @llvm.dbg.value(metadata i32 %23, metadata !12271, metadata !DIExpression()), !dbg !12272
  call void @llvm.dbg.value(metadata i32 %23, metadata !12224, metadata !DIExpression()) #23, !dbg !12309
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !12309
  call void @llvm.dbg.value(metadata i32 %23, metadata !12232, metadata !DIExpression()) #23, !dbg !12311
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !12313, !srcloc !12238
  br label %24, !dbg !12314

24:                                               ; preds = %22, %7
  ret void, !dbg !12314
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12315 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12319, metadata !DIExpression()), !dbg !12321
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #25, !dbg !12322
  %3 = icmp eq i32 %2, 0, !dbg !12322
  br i1 %3, label %16, label %4, !dbg !12323

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !12324
  br i1 %5, label %16, label %6, !dbg !12325

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12326
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !12326
  %9 = load i8, i8* %8, align 2, !dbg !12326
  %10 = sext i8 %9 to i32, !dbg !12327
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !12328
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #25, !dbg !12329
  br i1 %12, label %16, label %13, !dbg !12330

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #25, !dbg !12331
  %15 = xor i1 %14, true, !dbg !12332
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !12321
  call void @llvm.dbg.value(metadata i1 %17, metadata !12320, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12321
  ret i1 %17, !dbg !12333
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !12334 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12338, metadata !DIExpression()), !dbg !12340
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12341
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12339, metadata !DIExpression()), !dbg !12340
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #25, !dbg !12342
  br i1 %3, label %5, label %4, !dbg !12344

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #25, !dbg !12345
  br label %5, !dbg !12347

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !12338, metadata !DIExpression()), !dbg !12340
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !12348
  ret i32 %6, !dbg !12349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12350 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12352, metadata !DIExpression()), !dbg !12354
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12355
  %3 = load i8, i8* %2, align 1, !dbg !12355
  call void @llvm.dbg.value(metadata i8 %3, metadata !12353, metadata !DIExpression()), !dbg !12354
  %4 = and i8 %3, 31, !dbg !12356
  %5 = icmp ne i8 %4, 0, !dbg !12357
  ret i1 %5, !dbg !12358
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12359 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12361, metadata !DIExpression()), !dbg !12362
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12363
  br i1 %2, label %3, label %7, !dbg !12365

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12366, metadata !DIExpression()) #23, !dbg !12369
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12372
  %5 = load i8, i8* %4, align 1, !dbg !12373
  %6 = and i8 %5, 127, !dbg !12373
  store i8 %6, i8* %4, align 1, !dbg !12373
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12374, metadata !DIExpression()) #23, !dbg !12377
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12381
  br label %7, !dbg !12382

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12383, metadata !DIExpression()) #23, !dbg !12386
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12388
  %9 = load i8, i8* %8, align 1, !dbg !12389
  %10 = or i8 %9, -128, !dbg !12389
  store i8 %10, i8* %8, align 1, !dbg !12389
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12390, metadata !DIExpression()) #23, !dbg !12393
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12397, metadata !DIExpression()) #23, !dbg !12405
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12403, metadata !DIExpression()) #23, !dbg !12405
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12407
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !12404, metadata !DIExpression()) #23, !dbg !12405
  %12 = icmp eq %struct._dnode* %11, null, !dbg !12409
  br i1 %12, label %23, label %13, !dbg !12407

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !12404, metadata !DIExpression()) #23, !dbg !12405
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !12411
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !12404, metadata !DIExpression()) #23, !dbg !12405
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #24, !dbg !12412
  %17 = icmp sgt i32 %16, 0, !dbg !12415
  br i1 %17, label %18, label %20, !dbg !12416

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12417
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #24, !dbg !12419
  br label %25, !dbg !12420

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #24, !dbg !12409
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !12404, metadata !DIExpression()) #23, !dbg !12405
  %22 = icmp eq %struct._dnode* %21, null, !dbg !12409
  br i1 %22, label %23, label %13, !dbg !12407, !llvm.loop !12421

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12423
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #24, !dbg !12424
  br label %25, !dbg !12425

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12426
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !12427
  %28 = zext i1 %27 to i32, !dbg !12427
  tail call fastcc void @update_cache(i32 noundef %28) #25, !dbg !12428
  ret void, !dbg !12429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12430 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12432, metadata !DIExpression()), !dbg !12433
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #25, !dbg !12434
  ret i1 %2, !dbg !12435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !12436 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !12438, metadata !DIExpression()), !dbg !12440
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12439, metadata !DIExpression()), !dbg !12440
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !12441
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #25, !dbg !12442
  ret void, !dbg !12443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !12444 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12448, metadata !DIExpression()), !dbg !12449
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #25, !dbg !12450
  br i1 %2, label %6, label %3, !dbg !12450

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12451
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12451
  br label %6, !dbg !12450

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !12450
  ret %struct._dnode* %7, !dbg !12452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !12453 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12457, metadata !DIExpression()), !dbg !12461
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12458, metadata !DIExpression()), !dbg !12461
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12462
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12462
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12459, metadata !DIExpression()), !dbg !12461
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12463
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !12464
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12465
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !12466
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12467
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12468
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12469
  ret void, !dbg !12470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !12471 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12475, metadata !DIExpression()), !dbg !12477
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12476, metadata !DIExpression()), !dbg !12477
  %3 = icmp eq %struct._dnode* %1, null, !dbg !12478
  br i1 %3, label %6, label %4, !dbg !12479

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #25, !dbg !12480
  br label %6, !dbg !12479

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !12479
  ret %struct._dnode* %7, !dbg !12481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !12482 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12486, metadata !DIExpression()), !dbg !12489
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12487, metadata !DIExpression()), !dbg !12489
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12490
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12490
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12488, metadata !DIExpression()), !dbg !12489
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12491
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !12492
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12493
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !12494
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12495
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12496
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12497
  ret void, !dbg !12498
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !12499 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12501, metadata !DIExpression()), !dbg !12503
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12504
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12511, metadata !DIExpression()) #23, !dbg !12513
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !12514
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !12515
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !12515
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12502, metadata !DIExpression()), !dbg !12503
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12516, metadata !DIExpression()) #23, !dbg !12522
  call void @llvm.dbg.value(metadata i32 %0, metadata !12521, metadata !DIExpression()) #23, !dbg !12522
  %6 = icmp eq i32 %0, 0, !dbg !12525
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12527
  br i1 %6, label %8, label %15, !dbg !12528

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #24, !dbg !12529
  br i1 %9, label %15, label %10, !dbg !12531

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #24, !dbg !12532
  br i1 %11, label %15, label %12, !dbg !12534

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #24, !dbg !12535
  %14 = icmp eq i32 %13, 0, !dbg !12535
  br i1 %14, label %18, label %15, !dbg !12537

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !12538
  br i1 %16, label %18, label %17, !dbg !12541

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !12542
  br label %18, !dbg !12544

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !12527
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12527
  ret void, !dbg !12545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #4 !dbg !12546 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12550, metadata !DIExpression()), !dbg !12553
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12551, metadata !DIExpression()), !dbg !12553
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #25, !dbg !12554
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !12552, metadata !DIExpression()), !dbg !12553
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12551, metadata !DIExpression()), !dbg !12553
  ret %struct.k_thread* %3, !dbg !12555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12556 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12558, metadata !DIExpression()), !dbg !12559
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12560
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !12561
  %4 = xor i1 %3, true, !dbg !12562
  ret i1 %4, !dbg !12563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12564 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12566, metadata !DIExpression()), !dbg !12567
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !12568
  %3 = load i16, i16* %2, align 2, !dbg !12568
  %4 = icmp ult i16 %3, 128, !dbg !12569
  %5 = zext i1 %4 to i32, !dbg !12569
  ret i32 %5, !dbg !12570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12571 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12577, metadata !DIExpression()), !dbg !12578
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12579
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #25, !dbg !12580
  %4 = xor i1 %3, true, !dbg !12581
  ret i1 %4, !dbg !12582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12583 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12589, metadata !DIExpression()), !dbg !12590
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12591
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12591
  %4 = icmp ne %struct._dnode* %3, null, !dbg !12592
  ret i1 %4, !dbg !12593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !12594 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12596, metadata !DIExpression()), !dbg !12598
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12597, metadata !DIExpression()), !dbg !12598
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12599
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12599
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !12600
  br i1 %5, label %9, label %6, !dbg !12601

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12602
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !12602
  br label %9, !dbg !12601

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !12601
  ret %struct._dnode* %10, !dbg !12603
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !12604 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12608, metadata !DIExpression()), !dbg !12609
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12610
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12610
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !12611
  ret i1 %4, !dbg !12612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !12613 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12617, metadata !DIExpression()), !dbg !12620
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12621
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12621
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !12618, metadata !DIExpression()), !dbg !12620
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12622
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12622
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !12619, metadata !DIExpression()), !dbg !12620
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !12623
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !12624
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !12625
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !12626
  tail call fastcc void @sys_dnode_init.126(%struct._dnode* noundef %0) #25, !dbg !12627
  ret void, !dbg !12628
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.126(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #5 !dbg !12629 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12631, metadata !DIExpression()), !dbg !12632
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12633
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12634
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12635
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12636
  ret void, !dbg !12637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12638 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12642, metadata !DIExpression()), !dbg !12644
  call void @llvm.dbg.value(metadata i32 128, metadata !12643, metadata !DIExpression()), !dbg !12644
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12645
  %3 = load i8, i8* %2, align 1, !dbg !12645
  %4 = icmp slt i8 %3, 0, !dbg !12646
  ret i1 %4, !dbg !12647
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !12648 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12652, metadata !DIExpression()), !dbg !12654
  call void @llvm.dbg.value(metadata i32 %1, metadata !12653, metadata !DIExpression()), !dbg !12654
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #25, !dbg !12655
  ret i1 %3, !dbg !12656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #12 !dbg !12657 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12659, metadata !DIExpression()), !dbg !12660
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !12661
  ret i1 %2, !dbg !12662
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !12663 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12665, metadata !DIExpression()), !dbg !12667
  call void @llvm.dbg.value(metadata i32 %1, metadata !12666, metadata !DIExpression()), !dbg !12667
  %3 = icmp slt i32 %0, %1, !dbg !12668
  ret i1 %3, !dbg !12669
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12670 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12672, metadata !DIExpression()), !dbg !12676
  call void @llvm.dbg.value(metadata i32 0, metadata !12673, metadata !DIExpression()), !dbg !12677
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !12678
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12680, !srcloc !12212
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12680
  call void @llvm.dbg.value(metadata i32 %3, metadata !12209, metadata !DIExpression()) #23, !dbg !12682
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !12682
  call void @llvm.dbg.value(metadata i32 %3, metadata !12203, metadata !DIExpression()) #23, !dbg !12678
  call void @llvm.dbg.value(metadata i32 %3, metadata !12675, metadata !DIExpression()), !dbg !12677
  call void @llvm.dbg.value(metadata i32 undef, metadata !12673, metadata !DIExpression()), !dbg !12677
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12683
  call void @llvm.dbg.value(metadata i32 %3, metadata !12224, metadata !DIExpression()) #23, !dbg !12688
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !12688
  call void @llvm.dbg.value(metadata i32 %3, metadata !12232, metadata !DIExpression()) #23, !dbg !12690
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12692, !srcloc !12238
  call void @llvm.dbg.value(metadata i32 1, metadata !12673, metadata !DIExpression()), !dbg !12677
  call void @llvm.dbg.value(metadata i32 undef, metadata !12673, metadata !DIExpression()), !dbg !12677
  ret void, !dbg !12693
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12694 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12696, metadata !DIExpression()), !dbg !12697
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12698
  br i1 %2, label %24, label %3, !dbg !12700

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !12701
  br i1 %4, label %5, label %24, !dbg !12702

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12383, metadata !DIExpression()) #23, !dbg !12703
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12706
  %7 = load i8, i8* %6, align 1, !dbg !12707
  %8 = or i8 %7, -128, !dbg !12707
  store i8 %8, i8* %6, align 1, !dbg !12707
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12390, metadata !DIExpression()) #23, !dbg !12708
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12397, metadata !DIExpression()) #23, !dbg !12710
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12403, metadata !DIExpression()) #23, !dbg !12710
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12712
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !12404, metadata !DIExpression()) #23, !dbg !12710
  %10 = icmp eq %struct._dnode* %9, null, !dbg !12713
  br i1 %10, label %21, label %11, !dbg !12712

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !12404, metadata !DIExpression()) #23, !dbg !12710
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !12714
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12404, metadata !DIExpression()) #23, !dbg !12710
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #24, !dbg !12715
  %15 = icmp sgt i32 %14, 0, !dbg !12716
  br i1 %15, label %16, label %18, !dbg !12717

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12718
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #24, !dbg !12719
  br label %23, !dbg !12720

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #24, !dbg !12713
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !12404, metadata !DIExpression()) #23, !dbg !12710
  %20 = icmp eq %struct._dnode* %19, null, !dbg !12713
  br i1 %20, label %21, label %11, !dbg !12712, !llvm.loop !12721

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12723
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #24, !dbg !12724
  br label %23, !dbg !12725

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !12726
  br label %24, !dbg !12727

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !12728
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12729 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12731, metadata !DIExpression()), !dbg !12732
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !12733
  br i1 %2, label %6, label %3, !dbg !12734

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #25, !dbg !12735
  %5 = xor i1 %4, true, !dbg !12734
  br label %6, !dbg !12734

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !12736
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12737 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12739, metadata !DIExpression()), !dbg !12743
  call void @llvm.dbg.value(metadata i32 0, metadata !12740, metadata !DIExpression()), !dbg !12744
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !12745
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12747, !srcloc !12212
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12747
  call void @llvm.dbg.value(metadata i32 %3, metadata !12209, metadata !DIExpression()) #23, !dbg !12749
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !12749
  call void @llvm.dbg.value(metadata i32 %3, metadata !12203, metadata !DIExpression()) #23, !dbg !12745
  call void @llvm.dbg.value(metadata i32 %3, metadata !12742, metadata !DIExpression()), !dbg !12744
  call void @llvm.dbg.value(metadata i32 undef, metadata !12740, metadata !DIExpression()), !dbg !12744
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #25, !dbg !12750
  call void @llvm.dbg.value(metadata i32 %3, metadata !12224, metadata !DIExpression()) #23, !dbg !12753
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !12753
  call void @llvm.dbg.value(metadata i32 %3, metadata !12232, metadata !DIExpression()) #23, !dbg !12755
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12757, !srcloc !12238
  call void @llvm.dbg.value(metadata i32 1, metadata !12740, metadata !DIExpression()), !dbg !12744
  call void @llvm.dbg.value(metadata i32 undef, metadata !12740, metadata !DIExpression()), !dbg !12744
  ret void, !dbg !12758
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12759 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12761, metadata !DIExpression()), !dbg !12763
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !12764
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12766, !srcloc !12212
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12766
  call void @llvm.dbg.value(metadata i32 %3, metadata !12209, metadata !DIExpression()) #23, !dbg !12768
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !12768
  call void @llvm.dbg.value(metadata i32 %3, metadata !12203, metadata !DIExpression()) #23, !dbg !12764
  call void @llvm.dbg.value(metadata i32 %3, metadata !12762, metadata !DIExpression()), !dbg !12763
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #25, !dbg !12769
  br i1 %4, label %5, label %6, !dbg !12771

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12224, metadata !DIExpression()) #23, !dbg !12772
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !12772
  call void @llvm.dbg.value(metadata i32 %3, metadata !12232, metadata !DIExpression()) #23, !dbg !12775
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12777, !srcloc !12238
  br label %8, !dbg !12778

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.131(%struct.k_thread* noundef %0) #25, !dbg !12779
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12780
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12781
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !12781
  br label %8, !dbg !12782

8:                                                ; preds = %6, %5
  ret void, !dbg !12782
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12783 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12785, metadata !DIExpression()), !dbg !12786
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12787
  %3 = load i8, i8* %2, align 1, !dbg !12787
  %4 = and i8 %3, 4, !dbg !12788
  %5 = icmp eq i8 %4, 0, !dbg !12789
  ret i1 %5, !dbg !12790
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.131(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12791 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12793, metadata !DIExpression()), !dbg !12794
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12795
  %3 = load i8, i8* %2, align 1, !dbg !12796
  %4 = and i8 %3, -5, !dbg !12796
  store i8 %4, i8* %2, align 1, !dbg !12796
  ret void, !dbg !12797
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !12798 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !12801, metadata !DIExpression()), !dbg !12802
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12800, metadata !DIExpression()), !dbg !12802
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #25, !dbg !12803
  br i1 %4, label %5, label %9, !dbg !12805

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #25, !dbg !12806
  br i1 %6, label %7, label %9, !dbg !12807

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !12808, metadata !DIExpression()) #23, !dbg !12814
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12813, metadata !DIExpression()) #23, !dbg !12814
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !12817
  br label %10, !dbg !12818

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !12224, metadata !DIExpression()) #23, !dbg !12819
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !12819
  call void @llvm.dbg.value(metadata i32 %3, metadata !12232, metadata !DIExpression()) #23, !dbg !12822
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12824, !srcloc !12238
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !12825
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !12826 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12830, metadata !DIExpression()), !dbg !12831
  call void @llvm.dbg.value(metadata i32 %0, metadata !12832, metadata !DIExpression()), !dbg !12837
  %2 = icmp eq i32 %0, 0, !dbg !12839
  br i1 %2, label %3, label %6, !dbg !12840

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12841, !srcloc !12848
  call void @llvm.dbg.value(metadata i32 %4, metadata !12844, metadata !DIExpression()) #23, !dbg !12849
  %5 = icmp eq i32 %4, 0, !dbg !12850
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !12831
  ret i1 %7, !dbg !12851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #4 !dbg !12852 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12855
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12854, metadata !DIExpression()), !dbg !12856
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12857
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !12858
  ret i1 %3, !dbg !12859
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !12860 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12862, metadata !DIExpression()), !dbg !12864
  %2 = tail call i32 @arch_swap(i32 noundef %0) #24, !dbg !12865
  call void @llvm.dbg.value(metadata i32 %2, metadata !12863, metadata !DIExpression()), !dbg !12864
  ret i32 %2, !dbg !12866
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12867 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12869, metadata !DIExpression()), !dbg !12873
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !12874
  call void @llvm.dbg.value(metadata i32 0, metadata !12870, metadata !DIExpression()), !dbg !12875
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !12876
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12878, !srcloc !12212
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12878
  call void @llvm.dbg.value(metadata i32 %4, metadata !12209, metadata !DIExpression()) #23, !dbg !12880
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !12880
  call void @llvm.dbg.value(metadata i32 %4, metadata !12203, metadata !DIExpression()) #23, !dbg !12876
  call void @llvm.dbg.value(metadata i32 %4, metadata !12872, metadata !DIExpression()), !dbg !12875
  call void @llvm.dbg.value(metadata i32 undef, metadata !12870, metadata !DIExpression()), !dbg !12875
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12881
  br i1 %5, label %6, label %10, !dbg !12885

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12366, metadata !DIExpression()) #23, !dbg !12886
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12889
  %8 = load i8, i8* %7, align 1, !dbg !12890
  %9 = and i8 %8, 127, !dbg !12890
  store i8 %9, i8* %7, align 1, !dbg !12890
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12374, metadata !DIExpression()) #23, !dbg !12891
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12893
  br label %10, !dbg !12894

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #25, !dbg !12895
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12896
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !12897
  %13 = zext i1 %12 to i32, !dbg !12897
  tail call fastcc void @update_cache(i32 noundef %13) #25, !dbg !12898
  call void @llvm.dbg.value(metadata i32 %4, metadata !12224, metadata !DIExpression()) #23, !dbg !12899
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !12899
  call void @llvm.dbg.value(metadata i32 %4, metadata !12232, metadata !DIExpression()) #23, !dbg !12901
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12903, !srcloc !12238
  call void @llvm.dbg.value(metadata i32 1, metadata !12870, metadata !DIExpression()), !dbg !12875
  call void @llvm.dbg.value(metadata i32 undef, metadata !12870, metadata !DIExpression()), !dbg !12875
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12904
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !12906
  br i1 %15, label %16, label %17, !dbg !12907

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !12908
  br label %17, !dbg !12910

17:                                               ; preds = %16, %10
  ret void, !dbg !12911
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12912 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12914, metadata !DIExpression()), !dbg !12915
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12916
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !12917
  ret i32 %3, !dbg !12918
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12919 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12921, metadata !DIExpression()), !dbg !12922
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12923
  %3 = load i8, i8* %2, align 1, !dbg !12924
  %4 = or i8 %3, 16, !dbg !12924
  store i8 %4, i8* %2, align 1, !dbg !12924
  ret void, !dbg !12925
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !12926 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12927, !srcloc !12212
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12927
  call void @llvm.dbg.value(metadata i32 %2, metadata !12209, metadata !DIExpression()) #23, !dbg !12929
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !12929
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !12930
  ret void, !dbg !12931
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !12932 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12934, metadata !DIExpression()), !dbg !12935
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #25, !dbg !12936
  br i1 %2, label %3, label %5, !dbg !12938

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !12939
  br label %6, !dbg !12941

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !12232, metadata !DIExpression()) #23, !dbg !12942
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !12945, !srcloc !12238
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !12946
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12947 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12949, metadata !DIExpression()), !dbg !12951
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !12952
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12954, !srcloc !12212
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12954
  call void @llvm.dbg.value(metadata i32 %3, metadata !12209, metadata !DIExpression()) #23, !dbg !12956
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !12956
  call void @llvm.dbg.value(metadata i32 %3, metadata !12203, metadata !DIExpression()) #23, !dbg !12952
  call void @llvm.dbg.value(metadata i32 %3, metadata !12950, metadata !DIExpression()), !dbg !12951
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #25, !dbg !12957
  br i1 %4, label %6, label %5, !dbg !12959

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12224, metadata !DIExpression()) #23, !dbg !12960
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !12960
  call void @llvm.dbg.value(metadata i32 %3, metadata !12232, metadata !DIExpression()) #23, !dbg !12963
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12965, !srcloc !12238
  br label %8, !dbg !12966

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !12967
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12968
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12969
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !12969
  br label %8, !dbg !12970

8:                                                ; preds = %6, %5
  ret void, !dbg !12970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12971 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12973, metadata !DIExpression()), !dbg !12974
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12975
  %3 = load i8, i8* %2, align 1, !dbg !12975
  %4 = and i8 %3, 16, !dbg !12976
  %5 = icmp ne i8 %4, 0, !dbg !12977
  ret i1 %5, !dbg !12978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12979 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12981, metadata !DIExpression()), !dbg !12982
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12983
  %3 = load i8, i8* %2, align 1, !dbg !12984
  %4 = and i8 %3, -17, !dbg !12984
  store i8 %4, i8* %2, align 1, !dbg !12984
  ret void, !dbg !12985
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12986 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12996, metadata !DIExpression()), !dbg !13000
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12994, metadata !DIExpression()), !dbg !13000
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12995, metadata !DIExpression()), !dbg !13000
  call void @llvm.dbg.value(metadata i32 0, metadata !12997, metadata !DIExpression()), !dbg !13001
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !13002
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13004, !srcloc !12212
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !13004
  call void @llvm.dbg.value(metadata i32 %5, metadata !12209, metadata !DIExpression()) #23, !dbg !13006
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !13006
  call void @llvm.dbg.value(metadata i32 %5, metadata !12203, metadata !DIExpression()) #23, !dbg !13002
  call void @llvm.dbg.value(metadata i32 %5, metadata !12999, metadata !DIExpression()), !dbg !13001
  call void @llvm.dbg.value(metadata i32 undef, metadata !12997, metadata !DIExpression()), !dbg !13001
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !13007
  call void @llvm.dbg.value(metadata i32 %5, metadata !12224, metadata !DIExpression()) #23, !dbg !13010
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !13010
  call void @llvm.dbg.value(metadata i32 %5, metadata !12232, metadata !DIExpression()) #23, !dbg !13012
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !13014, !srcloc !12238
  call void @llvm.dbg.value(metadata i32 1, metadata !12997, metadata !DIExpression()), !dbg !13001
  call void @llvm.dbg.value(metadata i32 undef, metadata !12997, metadata !DIExpression()), !dbg !13001
  ret void, !dbg !13015
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !13016 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13020, metadata !DIExpression()), !dbg !13021
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13018, metadata !DIExpression()), !dbg !13021
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13019, metadata !DIExpression()), !dbg !13021
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #25, !dbg !13022
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #25, !dbg !13023
  ret void, !dbg !13024
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !13025 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13029, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13030, metadata !DIExpression()), !dbg !13031
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #25, !dbg !13032
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #25, !dbg !13033
  %3 = icmp eq %union.anon* %1, null, !dbg !13034
  br i1 %3, label %21, label %4, !dbg !13036

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13037
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !13039
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !13040
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !12397, metadata !DIExpression()) #23, !dbg !13041
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12403, metadata !DIExpression()) #23, !dbg !13041
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #24, !dbg !13043
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !12404, metadata !DIExpression()) #23, !dbg !13041
  %8 = icmp eq %struct._dnode* %7, null, !dbg !13044
  br i1 %8, label %19, label %9, !dbg !13043

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12404, metadata !DIExpression()) #23, !dbg !13041
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !13045
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !12404, metadata !DIExpression()) #23, !dbg !13041
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #24, !dbg !13046
  %13 = icmp sgt i32 %12, 0, !dbg !13047
  br i1 %13, label %14, label %16, !dbg !13048

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13049
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #24, !dbg !13050
  br label %21, !dbg !13051

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #24, !dbg !13044
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !12404, metadata !DIExpression()) #23, !dbg !13041
  %18 = icmp eq %struct._dnode* %17, null, !dbg !13044
  br i1 %18, label %19, label %9, !dbg !13043, !llvm.loop !13052

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13054
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #24, !dbg !13055
  br label %21, !dbg !13056

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !13057
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13058 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13063, metadata !DIExpression()), !dbg !13064
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13062, metadata !DIExpression()), !dbg !13064
  %4 = icmp eq i64 %3, -1, !dbg !13065
  br i1 %4, label %6, label %5, !dbg !13067

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.132(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !13068
  br label %6, !dbg !13070

6:                                                ; preds = %5, %2
  ret void, !dbg !13071
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.132(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13072 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13075, metadata !DIExpression()), !dbg !13076
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13074, metadata !DIExpression()), !dbg !13076
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13077
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !13078
  ret void, !dbg !13079
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !13080 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13082, metadata !DIExpression()), !dbg !13090
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !13091
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !13091
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13083, metadata !DIExpression()), !dbg !13090
  call void @llvm.dbg.value(metadata i32 0, metadata !13084, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !13093
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13095, !srcloc !12212
  call void @llvm.dbg.value(metadata i32 undef, metadata !12209, metadata !DIExpression()) #23, !dbg !13097
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !13097
  call void @llvm.dbg.value(metadata i32 undef, metadata !12203, metadata !DIExpression()) #23, !dbg !13093
  call void @llvm.dbg.value(metadata i32 undef, metadata !13086, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.value(metadata i32 undef, metadata !13084, metadata !DIExpression()), !dbg !13092
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !13098
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !13099
  %7 = load i8, i8* %6, align 1, !dbg !13099
  %8 = and i8 %7, 40, !dbg !13100
  %9 = icmp eq i8 %8, 0, !dbg !13100
  call void @llvm.dbg.value(metadata i1 %9, metadata !13087, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13101
  br i1 %9, label %10, label %17, !dbg !13102

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !13103
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !13103
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !13103
  %14 = icmp eq %union.anon* %13, null, !dbg !13107
  br i1 %14, label %16, label %15, !dbg !13108

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #25, !dbg !13109
  br label %16, !dbg !13111

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.131(%struct.k_thread* noundef nonnull %3) #25, !dbg !13112
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #25, !dbg !13113
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #25, !dbg !13114
  br label %17, !dbg !13115

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !13095
  call void @llvm.dbg.value(metadata i32 %18, metadata !12209, metadata !DIExpression()) #23, !dbg !13097
  call void @llvm.dbg.value(metadata i32 %18, metadata !12203, metadata !DIExpression()) #23, !dbg !13093
  call void @llvm.dbg.value(metadata i32 %18, metadata !13086, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.value(metadata i32 undef, metadata !12224, metadata !DIExpression()) #23, !dbg !13116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !13116
  call void @llvm.dbg.value(metadata i32 undef, metadata !12232, metadata !DIExpression()) #23, !dbg !13118
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !13120, !srcloc !12238
  call void @llvm.dbg.value(metadata i32 1, metadata !13084, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.value(metadata i32 undef, metadata !13084, metadata !DIExpression()), !dbg !13092
  ret void, !dbg !13121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13122 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13124, metadata !DIExpression()), !dbg !13125
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13126
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #25, !dbg !13127
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13128
  store %union.anon* null, %union.anon** %2, align 8, !dbg !13129
  ret void, !dbg !13130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13131 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13133, metadata !DIExpression()), !dbg !13134
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13135
  %3 = load i8, i8* %2, align 1, !dbg !13136
  %4 = and i8 %3, -3, !dbg !13136
  store i8 %4, i8* %2, align 1, !dbg !13136
  ret void, !dbg !13137
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13138 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13140, metadata !DIExpression()), !dbg !13141
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !13142
  br i1 %2, label %3, label %7, !dbg !13144

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12366, metadata !DIExpression()) #23, !dbg !13145
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13148
  %5 = load i8, i8* %4, align 1, !dbg !13149
  %6 = and i8 %5, 127, !dbg !13149
  store i8 %6, i8* %4, align 1, !dbg !13149
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12374, metadata !DIExpression()) #23, !dbg !13150
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !13152
  br label %7, !dbg !13153

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13154
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !13155
  %10 = zext i1 %9 to i32, !dbg !13155
  tail call fastcc void @update_cache(i32 noundef %10) #25, !dbg !13156
  ret void, !dbg !13157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13158 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13160, metadata !DIExpression()), !dbg !13161
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13162
  %3 = load i8, i8* %2, align 1, !dbg !13163
  %4 = or i8 %3, 2, !dbg !13163
  store i8 %4, i8* %2, align 1, !dbg !13163
  ret void, !dbg !13164
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !13165 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13167, metadata !DIExpression()), !dbg !13171
  call void @llvm.dbg.value(metadata i32 0, metadata !13168, metadata !DIExpression()), !dbg !13172
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !13173
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13175, !srcloc !12212
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13175
  call void @llvm.dbg.value(metadata i32 %3, metadata !12209, metadata !DIExpression()) #23, !dbg !13177
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !13177
  call void @llvm.dbg.value(metadata i32 %3, metadata !12203, metadata !DIExpression()) #23, !dbg !13173
  call void @llvm.dbg.value(metadata i32 %3, metadata !13170, metadata !DIExpression()), !dbg !13172
  call void @llvm.dbg.value(metadata i32 undef, metadata !13168, metadata !DIExpression()), !dbg !13172
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !13178
  call void @llvm.dbg.value(metadata i32 %3, metadata !12224, metadata !DIExpression()) #23, !dbg !13181
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !13181
  call void @llvm.dbg.value(metadata i32 %3, metadata !12232, metadata !DIExpression()) #23, !dbg !13183
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13185, !srcloc !12238
  call void @llvm.dbg.value(metadata i32 1, metadata !13168, metadata !DIExpression()), !dbg !13172
  call void @llvm.dbg.value(metadata i32 undef, metadata !13168, metadata !DIExpression()), !dbg !13172
  ret void, !dbg !13186
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13187 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13193, metadata !DIExpression()), !dbg !13198
  call void @llvm.dbg.value(metadata i32 %0, metadata !13191, metadata !DIExpression()), !dbg !13198
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13192, metadata !DIExpression()), !dbg !13198
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13199
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !13200
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13201
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13202
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !13203
  call void @llvm.dbg.value(metadata i32 %6, metadata !13194, metadata !DIExpression()), !dbg !13198
  call void @llvm.dbg.value(metadata i32 0, metadata !13195, metadata !DIExpression()), !dbg !13204
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !13205
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13207, !srcloc !12212
  call void @llvm.dbg.value(metadata i32 undef, metadata !12209, metadata !DIExpression()) #23, !dbg !13209
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !13209
  call void @llvm.dbg.value(metadata i32 undef, metadata !12203, metadata !DIExpression()) #23, !dbg !13205
  call void @llvm.dbg.value(metadata i32 undef, metadata !13197, metadata !DIExpression()), !dbg !13204
  call void @llvm.dbg.value(metadata i32 undef, metadata !13195, metadata !DIExpression()), !dbg !13204
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13210
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13214
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !13215
  br i1 %10, label %11, label %12, !dbg !13216

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13217
  br label %12, !dbg !13219

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !13207
  call void @llvm.dbg.value(metadata i32 %13, metadata !12209, metadata !DIExpression()) #23, !dbg !13209
  call void @llvm.dbg.value(metadata i32 %13, metadata !12203, metadata !DIExpression()) #23, !dbg !13205
  call void @llvm.dbg.value(metadata i32 %13, metadata !13197, metadata !DIExpression()), !dbg !13204
  call void @llvm.dbg.value(metadata i32 undef, metadata !12224, metadata !DIExpression()) #23, !dbg !13220
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !13220
  call void @llvm.dbg.value(metadata i32 undef, metadata !12232, metadata !DIExpression()) #23, !dbg !13222
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !13224, !srcloc !12238
  call void @llvm.dbg.value(metadata i32 1, metadata !13195, metadata !DIExpression()), !dbg !13204
  call void @llvm.dbg.value(metadata i32 undef, metadata !13195, metadata !DIExpression()), !dbg !13204
  ret i32 %6, !dbg !13225
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !13226 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13231, metadata !DIExpression()), !dbg !13234
  call void @llvm.dbg.value(metadata i64 undef, metadata !13233, metadata !DIExpression()), !dbg !13234
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13230, metadata !DIExpression()), !dbg !13234
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !13232, metadata !DIExpression()), !dbg !13234
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13235
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13236
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !13237
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13239, !srcloc !12212
  call void @llvm.dbg.value(metadata i32 undef, metadata !12209, metadata !DIExpression()) #23, !dbg !13241
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !13241
  call void @llvm.dbg.value(metadata i32 undef, metadata !12203, metadata !DIExpression()) #23, !dbg !13237
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13242
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !13243
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !12808, metadata !DIExpression()) #23, !dbg !13244
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12813, metadata !DIExpression()) #23, !dbg !13244
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #24, !dbg !13246
  ret i32 %9, !dbg !13247
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13248 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13252, metadata !DIExpression()), !dbg !13257
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13253, metadata !DIExpression()), !dbg !13257
  call void @llvm.dbg.value(metadata i32 0, metadata !13254, metadata !DIExpression()), !dbg !13258
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !13259
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13261, !srcloc !12212
  call void @llvm.dbg.value(metadata i32 undef, metadata !12209, metadata !DIExpression()) #23, !dbg !13263
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !13263
  call void @llvm.dbg.value(metadata i32 undef, metadata !12203, metadata !DIExpression()) #23, !dbg !13259
  call void @llvm.dbg.value(metadata i32 undef, metadata !13256, metadata !DIExpression()), !dbg !13258
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13253, metadata !DIExpression()), !dbg !13257
  call void @llvm.dbg.value(metadata i32 undef, metadata !13254, metadata !DIExpression()), !dbg !13258
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !13264
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13253, metadata !DIExpression()), !dbg !13257
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13267
  br i1 %5, label %7, label %6, !dbg !13269

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !13270
  br label %7, !dbg !13272

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13261
  call void @llvm.dbg.value(metadata i32 %8, metadata !12209, metadata !DIExpression()) #23, !dbg !13263
  call void @llvm.dbg.value(metadata i32 %8, metadata !12203, metadata !DIExpression()) #23, !dbg !13259
  call void @llvm.dbg.value(metadata i32 %8, metadata !13256, metadata !DIExpression()), !dbg !13258
  call void @llvm.dbg.value(metadata i32 undef, metadata !12224, metadata !DIExpression()) #23, !dbg !13273
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !13273
  call void @llvm.dbg.value(metadata i32 undef, metadata !12232, metadata !DIExpression()) #23, !dbg !13275
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !13277, !srcloc !12238
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13253, metadata !DIExpression()), !dbg !13257
  call void @llvm.dbg.value(metadata i32 undef, metadata !13254, metadata !DIExpression()), !dbg !13258
  ret %struct.k_thread* %4, !dbg !13278
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13279 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13281, metadata !DIExpression()), !dbg !13286
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13282, metadata !DIExpression()), !dbg !13286
  call void @llvm.dbg.value(metadata i32 0, metadata !13283, metadata !DIExpression()), !dbg !13287
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !13288
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13290, !srcloc !12212
  call void @llvm.dbg.value(metadata i32 undef, metadata !12209, metadata !DIExpression()) #23, !dbg !13292
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !13292
  call void @llvm.dbg.value(metadata i32 undef, metadata !12203, metadata !DIExpression()) #23, !dbg !13288
  call void @llvm.dbg.value(metadata i32 undef, metadata !13285, metadata !DIExpression()), !dbg !13287
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13282, metadata !DIExpression()), !dbg !13286
  call void @llvm.dbg.value(metadata i32 undef, metadata !13283, metadata !DIExpression()), !dbg !13287
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !13293
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13282, metadata !DIExpression()), !dbg !13286
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13296
  br i1 %5, label %8, label %6, !dbg !13298

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !13299
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !13301
  br label %8, !dbg !13302

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !13290
  call void @llvm.dbg.value(metadata i32 %9, metadata !12209, metadata !DIExpression()) #23, !dbg !13292
  call void @llvm.dbg.value(metadata i32 %9, metadata !12203, metadata !DIExpression()) #23, !dbg !13288
  call void @llvm.dbg.value(metadata i32 %9, metadata !13285, metadata !DIExpression()), !dbg !13287
  call void @llvm.dbg.value(metadata i32 undef, metadata !12224, metadata !DIExpression()) #23, !dbg !13303
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !13303
  call void @llvm.dbg.value(metadata i32 undef, metadata !12232, metadata !DIExpression()) #23, !dbg !13305
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !13307, !srcloc !12238
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13282, metadata !DIExpression()), !dbg !13286
  call void @llvm.dbg.value(metadata i32 undef, metadata !13283, metadata !DIExpression()), !dbg !13287
  ret %struct.k_thread* %4, !dbg !13308
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13309 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13311, metadata !DIExpression()), !dbg !13312
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13167, metadata !DIExpression()) #23, !dbg !13313
  call void @llvm.dbg.value(metadata i32 0, metadata !13168, metadata !DIExpression()) #23, !dbg !13315
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !13316
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13318, !srcloc !12212
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13318
  call void @llvm.dbg.value(metadata i32 %3, metadata !12209, metadata !DIExpression()) #23, !dbg !13320
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !13320
  call void @llvm.dbg.value(metadata i32 %3, metadata !12203, metadata !DIExpression()) #23, !dbg !13316
  call void @llvm.dbg.value(metadata i32 %3, metadata !13170, metadata !DIExpression()) #23, !dbg !13315
  call void @llvm.dbg.value(metadata i32 undef, metadata !13168, metadata !DIExpression()) #23, !dbg !13315
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !13321
  call void @llvm.dbg.value(metadata i32 %3, metadata !12224, metadata !DIExpression()) #23, !dbg !13322
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !13322
  call void @llvm.dbg.value(metadata i32 %3, metadata !12232, metadata !DIExpression()) #23, !dbg !13324
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13326, !srcloc !12238
  call void @llvm.dbg.value(metadata i32 1, metadata !13168, metadata !DIExpression()) #23, !dbg !13315
  call void @llvm.dbg.value(metadata i32 undef, metadata !13168, metadata !DIExpression()) #23, !dbg !13315
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !13327
  ret void, !dbg !13328
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13329 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13331, metadata !DIExpression()), !dbg !13337
  call void @llvm.dbg.value(metadata i32 %1, metadata !13332, metadata !DIExpression()), !dbg !13337
  call void @llvm.dbg.value(metadata i8 0, metadata !13333, metadata !DIExpression()), !dbg !13337
  call void @llvm.dbg.value(metadata i32 0, metadata !13334, metadata !DIExpression()), !dbg !13338
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !13339
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13341, !srcloc !12212
  call void @llvm.dbg.value(metadata i32 undef, metadata !12209, metadata !DIExpression()) #23, !dbg !13343
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !13343
  call void @llvm.dbg.value(metadata i32 undef, metadata !12203, metadata !DIExpression()) #23, !dbg !13339
  call void @llvm.dbg.value(metadata i32 undef, metadata !13336, metadata !DIExpression()), !dbg !13338
  call void @llvm.dbg.value(metadata i8 poison, metadata !13333, metadata !DIExpression()), !dbg !13337
  call void @llvm.dbg.value(metadata i32 undef, metadata !13334, metadata !DIExpression()), !dbg !13338
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !13344
  call void @llvm.dbg.value(metadata i1 %6, metadata !13333, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13337
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !13347

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12366, metadata !DIExpression()) #23, !dbg !13348
  %11 = load i8, i8* %4, align 1, !dbg !13354
  %12 = and i8 %11, 127, !dbg !13354
  store i8 %12, i8* %4, align 1, !dbg !13354
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12374, metadata !DIExpression()) #23, !dbg !13355
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !13357
  store i8 %9, i8* %8, align 2, !dbg !13358
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12383, metadata !DIExpression()) #23, !dbg !13359
  %13 = load i8, i8* %4, align 1, !dbg !13361
  %14 = or i8 %13, -128, !dbg !13361
  store i8 %14, i8* %4, align 1, !dbg !13361
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12390, metadata !DIExpression()) #23, !dbg !13362
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12397, metadata !DIExpression()) #23, !dbg !13364
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12403, metadata !DIExpression()) #23, !dbg !13364
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !13366
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !12404, metadata !DIExpression()) #23, !dbg !13364
  %16 = icmp eq %struct._dnode* %15, null, !dbg !13367
  br i1 %16, label %26, label %17, !dbg !13366

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !12404, metadata !DIExpression()) #23, !dbg !13364
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !13368
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !12404, metadata !DIExpression()) #23, !dbg !13364
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #24, !dbg !13369
  %21 = icmp sgt i32 %20, 0, !dbg !13370
  br i1 %21, label %22, label %23, !dbg !13371

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #24, !dbg !13372
  br label %27, !dbg !13373

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #24, !dbg !13367
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !12404, metadata !DIExpression()) #23, !dbg !13364
  %25 = icmp eq %struct._dnode* %24, null, !dbg !13367
  br i1 %25, label %26, label %17, !dbg !13366, !llvm.loop !13374

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #24, !dbg !13376
  br label %27, !dbg !13377

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13378
  br label %29, !dbg !13379

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !13380
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !13341
  call void @llvm.dbg.value(metadata i32 %30, metadata !12209, metadata !DIExpression()) #23, !dbg !13343
  call void @llvm.dbg.value(metadata i32 %30, metadata !12203, metadata !DIExpression()) #23, !dbg !13339
  call void @llvm.dbg.value(metadata i32 %30, metadata !13336, metadata !DIExpression()), !dbg !13338
  call void @llvm.dbg.value(metadata i32 undef, metadata !12224, metadata !DIExpression()) #23, !dbg !13382
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !13382
  call void @llvm.dbg.value(metadata i32 undef, metadata !12232, metadata !DIExpression()) #23, !dbg !13384
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !13386, !srcloc !12238
  call void @llvm.dbg.value(metadata i8 poison, metadata !13333, metadata !DIExpression()), !dbg !13337
  call void @llvm.dbg.value(metadata i32 undef, metadata !13334, metadata !DIExpression()), !dbg !13338
  ret i1 %6, !dbg !13387
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13388 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13392, metadata !DIExpression()), !dbg !13395
  call void @llvm.dbg.value(metadata i32 %1, metadata !13393, metadata !DIExpression()), !dbg !13395
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !13396
  call void @llvm.dbg.value(metadata i1 %3, metadata !13394, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13395
  br i1 %3, label %4, label %12, !dbg !13397

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13399
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13400
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13400
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13400
  %9 = load i8, i8* %8, align 1, !dbg !13400
  %10 = icmp eq i8 %9, 0, !dbg !13401
  br i1 %10, label %11, label %12, !dbg !13402

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !13403
  br label %12, !dbg !13405

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !13406
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !13407 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13409, metadata !DIExpression()), !dbg !13412
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !13413
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13415, !srcloc !12212
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13415
  call void @llvm.dbg.value(metadata i32 %2, metadata !12209, metadata !DIExpression()) #23, !dbg !13417
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !13417
  call void @llvm.dbg.value(metadata i32 %2, metadata !12203, metadata !DIExpression()) #23, !dbg !13413
  call void @llvm.dbg.value(metadata i32 %2, metadata !13411, metadata !DIExpression()), !dbg !13412
  call void @llvm.dbg.value(metadata i32 undef, metadata !13409, metadata !DIExpression()), !dbg !13412
  tail call fastcc void @z_sched_lock() #25, !dbg !13418
  call void @llvm.dbg.value(metadata i32 %2, metadata !12224, metadata !DIExpression()) #23, !dbg !13421
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !13421
  call void @llvm.dbg.value(metadata i32 %2, metadata !12232, metadata !DIExpression()) #23, !dbg !13423
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13425, !srcloc !12238
  call void @llvm.dbg.value(metadata i32 1, metadata !13409, metadata !DIExpression()), !dbg !13412
  call void @llvm.dbg.value(metadata i32 undef, metadata !13409, metadata !DIExpression()), !dbg !13412
  ret void, !dbg !13426
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !13427 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13428
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13429
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !13429
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !13429
  %5 = load i8, i8* %4, align 1, !dbg !13430
  %6 = add i8 %5, -1, !dbg !13430
  store i8 %6, i8* %4, align 1, !dbg !13430
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13431, !srcloc !13433
  ret void, !dbg !13434
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !13435 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13437, metadata !DIExpression()), !dbg !13440
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !13441
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13443, !srcloc !12212
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13443
  call void @llvm.dbg.value(metadata i32 %2, metadata !12209, metadata !DIExpression()) #23, !dbg !13445
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !13445
  call void @llvm.dbg.value(metadata i32 %2, metadata !12203, metadata !DIExpression()) #23, !dbg !13441
  call void @llvm.dbg.value(metadata i32 %2, metadata !13439, metadata !DIExpression()), !dbg !13440
  call void @llvm.dbg.value(metadata i32 undef, metadata !13437, metadata !DIExpression()), !dbg !13440
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13446
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !13449
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !13449
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13449
  %7 = load i8, i8* %6, align 1, !dbg !13450
  %8 = add i8 %7, 1, !dbg !13450
  store i8 %8, i8* %6, align 1, !dbg !13450
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !13451
  call void @llvm.dbg.value(metadata i32 %2, metadata !12224, metadata !DIExpression()) #23, !dbg !13452
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !13452
  call void @llvm.dbg.value(metadata i32 %2, metadata !12232, metadata !DIExpression()) #23, !dbg !13454
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13456, !srcloc !12238
  call void @llvm.dbg.value(metadata i32 1, metadata !13437, metadata !DIExpression()), !dbg !13440
  call void @llvm.dbg.value(metadata i32 undef, metadata !13437, metadata !DIExpression()), !dbg !13440
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !13457
  ret void, !dbg !13458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #4 !dbg !13459 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13460
  ret %struct.k_thread* %1, !dbg !13461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !13462 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !13466, metadata !DIExpression()), !dbg !13471
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !13467, metadata !DIExpression()), !dbg !13471
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !13472
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13468, metadata !DIExpression()), !dbg !13471
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !13473
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13469, metadata !DIExpression()), !dbg !13471
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #25, !dbg !13474
  call void @llvm.dbg.value(metadata i32 %5, metadata !13470, metadata !DIExpression()), !dbg !13471
  %6 = icmp sgt i32 %5, 0, !dbg !13475
  br i1 %6, label %17, label %7, !dbg !13477

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !13478
  br i1 %8, label %17, label %9, !dbg !13480

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !13481
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !13481
  %12 = load i32, i32* %11, align 8, !dbg !13481
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !13483
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !13483
  %15 = load i32, i32* %14, align 8, !dbg !13483
  %16 = icmp ult i32 %12, %15, !dbg !13484
  br label %17, !dbg !13485

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !13486
  ret i1 %18, !dbg !13487
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13488 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13505, metadata !DIExpression()), !dbg !13520
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13506, metadata !DIExpression()), !dbg !13520
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13521
  %5 = load i32, i32* %4, align 4, !dbg !13522
  %6 = add nsw i32 %5, 1, !dbg !13522
  store i32 %6, i32* %4, align 4, !dbg !13522
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !13523
  store i32 %5, i32* %7, align 8, !dbg !13524
  %8 = load i32, i32* %4, align 4, !dbg !13525
  %9 = icmp eq i32 %8, 0, !dbg !13526
  br i1 %9, label %10, label %32, !dbg !13527

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !13528
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !13528
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !13508, metadata !DIExpression()), !dbg !13528
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13528
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !13528
  %14 = load i32, i32* %13, align 4, !dbg !13528
  %15 = shl i32 %14, 2, !dbg !13528
  %16 = alloca i8, i32 %15, align 8, !dbg !13528
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !13528
  store i8* %16, i8** %17, align 4, !dbg !13528
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !13528
  %19 = alloca i8, i32 %14, align 8, !dbg !13528
  store i8* %19, i8** %18, align 4, !dbg !13528
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !13528
  store i32 -1, i32* %20, align 4, !dbg !13528
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !13529
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !13517, metadata !DIExpression()), !dbg !13530
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !13507, metadata !DIExpression()), !dbg !13520
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !13531
  br i1 %22, label %23, label %24, !dbg !13528

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !13531
  br label %32, !dbg !13532

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !13507, metadata !DIExpression()), !dbg !13520
  %26 = load i32, i32* %4, align 4, !dbg !13533
  %27 = add nsw i32 %26, 1, !dbg !13533
  store i32 %27, i32* %4, align 4, !dbg !13533
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !13535
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !13535
  store i32 %26, i32* %29, align 8, !dbg !13536
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !13529
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !13517, metadata !DIExpression()), !dbg !13530
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !13507, metadata !DIExpression()), !dbg !13520
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !13531
  br i1 %31, label %23, label %24, !dbg !13528, !llvm.loop !13537

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13539
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13540
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #24, !dbg !13541
  ret void, !dbg !13542
}

; Function Attrs: optsize
declare !dbg !13543 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !13548 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13551 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13553, metadata !DIExpression()), !dbg !13555
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13554, metadata !DIExpression()), !dbg !13555
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13556
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13557
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #24, !dbg !13558
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !13559
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !13559
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !13561
  br i1 %7, label %8, label %10, !dbg !13562

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13563
  store i32 0, i32* %9, align 4, !dbg !13565
  br label %10, !dbg !13566

10:                                               ; preds = %8, %2
  ret void, !dbg !13567
}

; Function Attrs: optsize
declare !dbg !13568 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !13569 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13573, metadata !DIExpression()), !dbg !13576
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13574, metadata !DIExpression()), !dbg !13576
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13577
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #25, !dbg !13578
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !13575, metadata !DIExpression()), !dbg !13576
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13574, metadata !DIExpression()), !dbg !13576
  ret %struct.k_thread* %4, !dbg !13579
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !13580 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !13584, metadata !DIExpression()), !dbg !13585
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #24, !dbg !13586
  ret %struct.rbnode* %2, !dbg !13587
}

; Function Attrs: optsize
declare !dbg !13588 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !13591 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !13603, metadata !DIExpression()), !dbg !13607
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !13608
  %3 = load i32, i32* %2, align 4, !dbg !13608
  %4 = icmp eq i32 %3, 0, !dbg !13610
  br i1 %4, label %10, label %5, !dbg !13611

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13604, metadata !DIExpression()), !dbg !13607
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !13612, !range !6389
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !13613
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13605, metadata !DIExpression()), !dbg !13607
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #25, !dbg !13614
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !13606, metadata !DIExpression()), !dbg !13607
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13604, metadata !DIExpression()), !dbg !13607
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !13607
  ret %struct.k_thread* %11, !dbg !13615
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13616 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13620, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.value(metadata i32 0, metadata !13621, metadata !DIExpression()), !dbg !13623
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13624
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13622, metadata !DIExpression()), !dbg !13623
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13625
  br i1 %3, label %8, label %4, !dbg !13626

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !13627
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !13629
  call void @llvm.dbg.value(metadata i32 1, metadata !13621, metadata !DIExpression()), !dbg !13623
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13624
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13622, metadata !DIExpression()), !dbg !13623
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13625
  br i1 %7, label %8, label %4, !dbg !13626, !llvm.loop !13630

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !13623
  ret i32 %9, !dbg !13632
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #4 !dbg !13633 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13635, metadata !DIExpression()), !dbg !13636
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13637
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #25, !dbg !13638
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13639
  ret %struct.k_thread* %4, !dbg !13640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #5 !dbg !13641 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !13650, metadata !DIExpression()), !dbg !13651
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !13652
  tail call fastcc void @sys_dlist_init.139(%struct._dnode* noundef nonnull %2) #25, !dbg !13653
  ret void, !dbg !13654
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.139(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13655 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13659, metadata !DIExpression()), !dbg !13660
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13661
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13662
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13663
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13664
  ret void, !dbg !13665
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !13666 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #25, !dbg !13667
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #25, !dbg !13668
  ret void, !dbg !13669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #4 !dbg !13670 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13675, metadata !DIExpression()), !dbg !13676
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13677
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !13677
  %4 = load i8, i8* %3, align 2, !dbg !13677
  %5 = sext i8 %4 to i32, !dbg !13678
  ret i32 %5, !dbg !13679
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13680 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13684, metadata !DIExpression()), !dbg !13687
  call void @llvm.dbg.value(metadata i32 %1, metadata !13685, metadata !DIExpression()), !dbg !13687
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13686, metadata !DIExpression()), !dbg !13687
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !13688
  ret void, !dbg !13689
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !13690 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #25, !dbg !13691
  br i1 %1, label %8, label %2, !dbg !13692

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !13693
  br i1 %3, label %8, label %4, !dbg !13694

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13695
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #25, !dbg !13696
  %7 = xor i1 %6, true, !dbg !13694
  br label %8, !dbg !13694

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !13697
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #4 !dbg !13698 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !13699, !range !5809
  %2 = icmp eq i8 %1, 0, !dbg !13699
  ret i1 %2, !dbg !13700
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !13701 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !13704
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13706, !srcloc !12212
  call void @llvm.dbg.value(metadata i32 undef, metadata !12209, metadata !DIExpression()) #23, !dbg !13708
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !13708
  call void @llvm.dbg.value(metadata i32 undef, metadata !12203, metadata !DIExpression()) #23, !dbg !13704
  call void @llvm.dbg.value(metadata i32 undef, metadata !13703, metadata !DIExpression()), !dbg !13709
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13710
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12366, metadata !DIExpression()) #23, !dbg !13713
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !13715
  %4 = load i8, i8* %3, align 1, !dbg !13716
  %5 = and i8 %4, 127, !dbg !13716
  store i8 %5, i8* %3, align 1, !dbg !13716
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12374, metadata !DIExpression()) #23, !dbg !13717
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #24, !dbg !13719
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13720
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12383, metadata !DIExpression()) #23, !dbg !13721
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !13723
  %8 = load i8, i8* %7, align 1, !dbg !13724
  %9 = or i8 %8, -128, !dbg !13724
  store i8 %9, i8* %7, align 1, !dbg !13724
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12390, metadata !DIExpression()) #23, !dbg !13725
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12397, metadata !DIExpression()) #23, !dbg !13727
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12403, metadata !DIExpression()) #23, !dbg !13727
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !13729
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12404, metadata !DIExpression()) #23, !dbg !13727
  %11 = icmp eq %struct._dnode* %10, null, !dbg !13730
  br i1 %11, label %22, label %12, !dbg !13729

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !12404, metadata !DIExpression()) #23, !dbg !13727
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !13731
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !12404, metadata !DIExpression()) #23, !dbg !13727
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #24, !dbg !13732
  %16 = icmp sgt i32 %15, 0, !dbg !13733
  br i1 %16, label %17, label %19, !dbg !13734

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13735
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #24, !dbg !13736
  br label %24, !dbg !13737

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #24, !dbg !13730
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !12404, metadata !DIExpression()) #23, !dbg !13727
  %21 = icmp eq %struct._dnode* %20, null, !dbg !13730
  br i1 %21, label %22, label %12, !dbg !13729, !llvm.loop !13738

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13740
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #24, !dbg !13741
  br label %24, !dbg !13742

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !13706
  call void @llvm.dbg.value(metadata i32 %25, metadata !12209, metadata !DIExpression()) #23, !dbg !13708
  call void @llvm.dbg.value(metadata i32 %25, metadata !12203, metadata !DIExpression()) #23, !dbg !13704
  call void @llvm.dbg.value(metadata i32 %25, metadata !13703, metadata !DIExpression()), !dbg !13709
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13743
  call void @llvm.dbg.value(metadata i32 undef, metadata !12808, metadata !DIExpression()) #23, !dbg !13744
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12813, metadata !DIExpression()) #23, !dbg !13744
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #24, !dbg !13746
  ret void, !dbg !13747
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !13748 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !13752, metadata !DIExpression()), !dbg !13755
  %3 = icmp eq i64 %2, -1, !dbg !13756
  br i1 %3, label %4, label %6, !dbg !13758

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13759
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #25, !dbg !13761
  br label %11, !dbg !13762

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !13753, metadata !DIExpression()), !dbg !13755
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #25, !dbg !13763
  %8 = sext i32 %7 to i64, !dbg !13763
  call void @llvm.dbg.value(metadata i64 %8, metadata !13753, metadata !DIExpression()), !dbg !13755
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #25, !dbg !13764
  %10 = trunc i64 %9 to i32, !dbg !13764
  call void @llvm.dbg.value(metadata i32 %10, metadata !13754, metadata !DIExpression()), !dbg !13755
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !13755
  ret i32 %12, !dbg !13765
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13766 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13770, metadata !DIExpression()), !dbg !13771
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13772, !srcloc !13774
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #25, !dbg !13775
  ret void, !dbg !13776
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !13777 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13781, metadata !DIExpression()), !dbg !13785
  %2 = icmp eq i64 %0, 0, !dbg !13786
  br i1 %2, label %3, label %4, !dbg !13788

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #25, !dbg !13789
  br label %29, !dbg !13791

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !13783, metadata !DIExpression()), !dbg !13785
  %5 = icmp sgt i64 %0, -3, !dbg !13792
  br i1 %5, label %6, label %10, !dbg !13794

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !13795
  %8 = trunc i64 %0 to i32, !dbg !13797
  %9 = add i32 %7, %8, !dbg !13797
  call void @llvm.dbg.value(metadata i32 %9, metadata !13782, metadata !DIExpression()), !dbg !13785
  br label %13, !dbg !13798

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !13799
  %12 = sub i32 -2, %11, !dbg !13799
  call void @llvm.dbg.value(metadata i32 %12, metadata !13782, metadata !DIExpression()), !dbg !13785
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !13801
  call void @llvm.dbg.value(metadata i32 %14, metadata !13782, metadata !DIExpression()), !dbg !13785
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !13802
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13804, !srcloc !12212
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !13804
  call void @llvm.dbg.value(metadata i32 %16, metadata !12209, metadata !DIExpression()) #23, !dbg !13806
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !13806
  call void @llvm.dbg.value(metadata i32 %16, metadata !12203, metadata !DIExpression()) #23, !dbg !13802
  call void @llvm.dbg.value(metadata i32 %16, metadata !13784, metadata !DIExpression()), !dbg !13785
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13807
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !13808
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #25, !dbg !13809
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13810
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !13811
  tail call fastcc void @z_add_thread_timeout.132(%struct.k_thread* noundef %18, [1 x i64] %19) #25, !dbg !13811
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13812
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #25, !dbg !13813
  call void @llvm.dbg.value(metadata i32 %16, metadata !12808, metadata !DIExpression()) #23, !dbg !13814
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12813, metadata !DIExpression()) #23, !dbg !13814
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #24, !dbg !13816
  %22 = zext i32 %14 to i64, !dbg !13817
  %23 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !13818
  %24 = zext i32 %23 to i64, !dbg !13818
  %25 = sub nsw i64 %22, %24, !dbg !13819
  call void @llvm.dbg.value(metadata i64 %25, metadata !13781, metadata !DIExpression()), !dbg !13785
  %26 = icmp sgt i64 %25, 0, !dbg !13820
  %27 = select i1 %26, i64 %25, i64 0, !dbg !13820
  %28 = trunc i64 %27 to i32, !dbg !13820
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !13785
  ret i32 %30, !dbg !13821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #12 !dbg !13822 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13824, metadata !DIExpression()), !dbg !13825
  call void @llvm.dbg.value(metadata i64 %0, metadata !12244, metadata !DIExpression()), !dbg !13826
  call void @llvm.dbg.value(metadata i32 10000, metadata !12247, metadata !DIExpression()), !dbg !13826
  call void @llvm.dbg.value(metadata i32 1000, metadata !12248, metadata !DIExpression()), !dbg !13826
  call void @llvm.dbg.value(metadata i8 1, metadata !12249, metadata !DIExpression()), !dbg !13826
  call void @llvm.dbg.value(metadata i1 false, metadata !12250, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13826
  call void @llvm.dbg.value(metadata i1 false, metadata !12251, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13826
  call void @llvm.dbg.value(metadata i8 0, metadata !12252, metadata !DIExpression()), !dbg !13826
  call void @llvm.dbg.value(metadata i1 false, metadata !12253, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13826
  call void @llvm.dbg.value(metadata i1 true, metadata !12254, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13826
  call void @llvm.dbg.value(metadata i64 0, metadata !12255, metadata !DIExpression()), !dbg !13826
  call void @llvm.dbg.value(metadata i64 0, metadata !12255, metadata !DIExpression()), !dbg !13826
  call void @llvm.dbg.value(metadata i64 %0, metadata !12244, metadata !DIExpression()), !dbg !13826
  %2 = udiv i64 %0, 10, !dbg !13828
  ret i64 %2, !dbg !13832
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !13833 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13834, !srcloc !13836
  tail call void @z_impl_k_yield() #25, !dbg !13837
  ret void, !dbg !13838
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !13839 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13843, metadata !DIExpression()), !dbg !13845
  %2 = sext i32 %0 to i64, !dbg !13846
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #25, !dbg !13847
  call void @llvm.dbg.value(metadata i64 %3, metadata !13844, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13845
  %4 = shl i64 %3, 32, !dbg !13848
  %5 = ashr exact i64 %4, 32, !dbg !13848
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #25, !dbg !13849
  call void @llvm.dbg.value(metadata i32 %6, metadata !13844, metadata !DIExpression()), !dbg !13845
  %7 = sext i32 %6 to i64, !dbg !13850
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #25, !dbg !13851
  %9 = trunc i64 %8 to i32, !dbg !13851
  ret i32 %9, !dbg !13852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !13853 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13855, metadata !DIExpression()), !dbg !13856
  call void @llvm.dbg.value(metadata i64 %0, metadata !12244, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12247, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i32 10000, metadata !12248, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i8 1, metadata !12249, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i1 false, metadata !12250, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13857
  call void @llvm.dbg.value(metadata i1 true, metadata !12251, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13857
  call void @llvm.dbg.value(metadata i8 0, metadata !12252, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i1 false, metadata !12253, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13857
  call void @llvm.dbg.value(metadata i1 true, metadata !12254, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13857
  call void @llvm.dbg.value(metadata i64 0, metadata !12255, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i64 0, metadata !12255, metadata !DIExpression()), !dbg !13857
  %2 = add i64 %0, 99, !dbg !13859
  call void @llvm.dbg.value(metadata i64 %2, metadata !12244, metadata !DIExpression()), !dbg !13857
  %3 = udiv i64 %2, 100, !dbg !13860
  ret i64 %3, !dbg !13861
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #12 !dbg !13862 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13864, metadata !DIExpression()), !dbg !13865
  call void @llvm.dbg.value(metadata i64 %0, metadata !12244, metadata !DIExpression()), !dbg !13866
  call void @llvm.dbg.value(metadata i32 10000, metadata !12247, metadata !DIExpression()), !dbg !13866
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12248, metadata !DIExpression()), !dbg !13866
  call void @llvm.dbg.value(metadata i8 1, metadata !12249, metadata !DIExpression()), !dbg !13866
  call void @llvm.dbg.value(metadata i1 false, metadata !12250, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13866
  call void @llvm.dbg.value(metadata i1 false, metadata !12251, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13866
  call void @llvm.dbg.value(metadata i8 0, metadata !12252, metadata !DIExpression()), !dbg !13866
  call void @llvm.dbg.value(metadata i1 true, metadata !12253, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13866
  call void @llvm.dbg.value(metadata i1 false, metadata !12254, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13866
  call void @llvm.dbg.value(metadata i64 0, metadata !12255, metadata !DIExpression()), !dbg !13866
  call void @llvm.dbg.value(metadata i64 0, metadata !12255, metadata !DIExpression()), !dbg !13866
  %2 = mul i64 %0, 100, !dbg !13868
  ret i64 %2, !dbg !13870
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13871 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13873, metadata !DIExpression()), !dbg !13874
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #25, !dbg !13875
  br i1 %2, label %14, label %3, !dbg !13877

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !13878
  %5 = icmp slt i32 %4, 0, !dbg !13880
  br i1 %5, label %6, label %10, !dbg !13881

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13882
  %8 = load i8, i8* %7, align 1, !dbg !13882
  %9 = icmp eq i8 %8, 16, !dbg !13885
  br i1 %9, label %10, label %14, !dbg !13886

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !13887
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !13888
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13889, !srcloc !12848
  call void @llvm.dbg.value(metadata i32 %11, metadata !12844, metadata !DIExpression()) #23, !dbg !13893
  %12 = icmp eq i32 %11, 0, !dbg !13894
  br i1 %12, label %13, label %14, !dbg !13895

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !13896
  br label %14, !dbg !13898

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !13899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13900 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13902, metadata !DIExpression()), !dbg !13903
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13904
  %3 = load i8, i8* %2, align 1, !dbg !13904
  %4 = and i8 %3, 2, !dbg !13905
  %5 = icmp ne i8 %4, 0, !dbg !13906
  ret i1 %5, !dbg !13907
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #4 !dbg !13908 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13913
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13912, metadata !DIExpression()), !dbg !13914
  ret %struct.k_thread* %1, !dbg !13915
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !13916 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13917, !srcloc !12848
  call void @llvm.dbg.value(metadata i32 %1, metadata !12844, metadata !DIExpression()) #23, !dbg !13920
  %2 = icmp eq i32 %1, 0, !dbg !13921
  br i1 %2, label %3, label %8, !dbg !13922

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13923
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #25, !dbg !13924
  %6 = icmp ne i32 %5, 0, !dbg !13922
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !13925
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13926 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13928, metadata !DIExpression()), !dbg !13930
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !13931
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13933, !srcloc !12212
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13933
  call void @llvm.dbg.value(metadata i32 %3, metadata !12209, metadata !DIExpression()) #23, !dbg !13935
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !13935
  call void @llvm.dbg.value(metadata i32 %3, metadata !12203, metadata !DIExpression()) #23, !dbg !13931
  call void @llvm.dbg.value(metadata i32 %3, metadata !13929, metadata !DIExpression()), !dbg !13930
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13936
  %5 = load i8, i8* %4, align 4, !dbg !13936
  %6 = and i8 %5, 1, !dbg !13938
  %7 = icmp eq i8 %6, 0, !dbg !13939
  br i1 %7, label %9, label %8, !dbg !13940

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12224, metadata !DIExpression()) #23, !dbg !13941
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !13941
  call void @llvm.dbg.value(metadata i32 %3, metadata !12232, metadata !DIExpression()) #23, !dbg !13944
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13946, !srcloc !12238
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !13947, !srcloc !13949
  br label %24, !dbg !13950

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13951
  %11 = load i8, i8* %10, align 1, !dbg !13951
  %12 = and i8 %11, 8, !dbg !13953
  %13 = icmp eq i8 %12, 0, !dbg !13954
  br i1 %13, label %15, label %14, !dbg !13955

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !12224, metadata !DIExpression()) #23, !dbg !13956
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !13956
  call void @llvm.dbg.value(metadata i32 %3, metadata !12232, metadata !DIExpression()) #23, !dbg !13959
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13961, !srcloc !12238
  br label %24, !dbg !13962

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #25, !dbg !13963
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13964
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !13966
  br i1 %17, label %18, label %23, !dbg !13967

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13968, !srcloc !12848
  call void @llvm.dbg.value(metadata i32 %19, metadata !12844, metadata !DIExpression()) #23, !dbg !13971
  %20 = icmp eq i32 %19, 0, !dbg !13972
  br i1 %20, label %21, label %23, !dbg !13973

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !12808, metadata !DIExpression()) #23, !dbg !13974
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12813, metadata !DIExpression()) #23, !dbg !13974
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !13977
  br label %23, !dbg !13978

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !12224, metadata !DIExpression()) #23, !dbg !13979
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !13979
  call void @llvm.dbg.value(metadata i32 %3, metadata !12232, metadata !DIExpression()) #23, !dbg !13981
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13983, !srcloc !12238
  br label %24, !dbg !13984

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !13984
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13985 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13987, metadata !DIExpression()), !dbg !13988
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13989
  %3 = load i8, i8* %2, align 1, !dbg !13989
  %4 = and i8 %3, 8, !dbg !13991
  %5 = icmp eq i8 %4, 0, !dbg !13992
  br i1 %5, label %6, label %20, !dbg !13993

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !13994
  %8 = or i8 %7, 8, !dbg !13994
  store i8 %8, i8* %2, align 1, !dbg !13994
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #25, !dbg !13996
  br i1 %9, label %10, label %12, !dbg !13998

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12366, metadata !DIExpression()) #23, !dbg !13999
  %11 = and i8 %8, 95, !dbg !14002
  store i8 %11, i8* %2, align 1, !dbg !14002
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12374, metadata !DIExpression()) #23, !dbg !14003
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #24, !dbg !14005
  br label %12, !dbg !14006

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14007
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !14007
  %15 = icmp eq %union.anon* %14, null, !dbg !14009
  br i1 %15, label %17, label %16, !dbg !14010

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !14011
  br label %17, !dbg !14013

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !14014
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14015
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #25, !dbg !14016
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !14017
  br label %20, !dbg !14018

20:                                               ; preds = %17, %1
  ret void, !dbg !14019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !14020 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14024, metadata !DIExpression()), !dbg !14026
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !14027
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14025, metadata !DIExpression()), !dbg !14026
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14028
  br i1 %3, label %10, label %4, !dbg !14029

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !14030
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !14032
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14033, metadata !DIExpression()), !dbg !14039
  call void @llvm.dbg.value(metadata i32 0, metadata !14038, metadata !DIExpression()), !dbg !14039
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !14041
  store i32 0, i32* %7, align 4, !dbg !14042
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !14043
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !14027
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !14025, metadata !DIExpression()), !dbg !14026
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !14028
  br i1 %9, label %10, label %4, !dbg !14029, !llvm.loop !14044

10:                                               ; preds = %4, %1
  ret void, !dbg !14046
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14047 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14052, metadata !DIExpression()), !dbg !14055
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14051, metadata !DIExpression()), !dbg !14055
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !14056
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14058, !srcloc !12212
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14058
  call void @llvm.dbg.value(metadata i32 %4, metadata !12209, metadata !DIExpression()) #23, !dbg !14060
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !14060
  call void @llvm.dbg.value(metadata i32 %4, metadata !12203, metadata !DIExpression()) #23, !dbg !14056
  call void @llvm.dbg.value(metadata i32 %4, metadata !14053, metadata !DIExpression()), !dbg !14055
  call void @llvm.dbg.value(metadata i32 0, metadata !14054, metadata !DIExpression()), !dbg !14055
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14061
  %6 = load i8, i8* %5, align 1, !dbg !14061
  %7 = and i8 %6, 8, !dbg !14063
  %8 = icmp eq i8 %7, 0, !dbg !14064
  br i1 %8, label %9, label %24, !dbg !14065

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !14052, metadata !DIExpression()), !dbg !14055
  %11 = icmp eq i64 %10, 0, !dbg !14066
  br i1 %11, label %24, label %12, !dbg !14068

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14069
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !14071
  br i1 %14, label %24, label %15, !dbg !14072

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14073
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !14073
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !14074
  %19 = icmp eq %union.anon* %17, %18, !dbg !14075
  br i1 %19, label %24, label %20, !dbg !14076

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14077
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #25, !dbg !14079
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14080
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #25, !dbg !14081
  call void @llvm.dbg.value(metadata i32 %4, metadata !12808, metadata !DIExpression()) #23, !dbg !14082
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12813, metadata !DIExpression()) #23, !dbg !14082
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #24, !dbg !14084
  call void @llvm.dbg.value(metadata i32 %23, metadata !14054, metadata !DIExpression()), !dbg !14055
  br label %26, !dbg !14085

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !14086
  call void @llvm.dbg.value(metadata i32 %25, metadata !14054, metadata !DIExpression()), !dbg !14055
  call void @llvm.dbg.value(metadata i32 %4, metadata !12224, metadata !DIExpression()) #23, !dbg !14087
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !14087
  call void @llvm.dbg.value(metadata i32 %4, metadata !12232, metadata !DIExpression()) #23, !dbg !14089
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !14091, !srcloc !12238
  br label %26, !dbg !14092

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !14055
  ret i32 %27, !dbg !14093
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14094 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14098, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.value(metadata i32 %1, metadata !14099, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.value(metadata i8* %2, metadata !14100, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.value(metadata i8 0, metadata !14102, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.value(metadata i32 0, metadata !14103, metadata !DIExpression()), !dbg !14107
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12197, metadata !DIExpression()) #23, !dbg !14108
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14110, !srcloc !12212
  call void @llvm.dbg.value(metadata i32 undef, metadata !12209, metadata !DIExpression()) #23, !dbg !14112
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !14112
  call void @llvm.dbg.value(metadata i32 undef, metadata !12203, metadata !DIExpression()) #23, !dbg !14108
  call void @llvm.dbg.value(metadata i32 undef, metadata !14105, metadata !DIExpression()), !dbg !14107
  call void @llvm.dbg.value(metadata i8 poison, metadata !14102, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.value(metadata i32 undef, metadata !14103, metadata !DIExpression()), !dbg !14107
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #25, !dbg !14113
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14101, metadata !DIExpression()), !dbg !14106
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14116
  br i1 %7, label %12, label %8, !dbg !14118

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14119, metadata !DIExpression()), !dbg !14127
  call void @llvm.dbg.value(metadata i32 %1, metadata !14125, metadata !DIExpression()), !dbg !14127
  call void @llvm.dbg.value(metadata i8* %2, metadata !14126, metadata !DIExpression()), !dbg !14127
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14033, metadata !DIExpression()), !dbg !14130
  call void @llvm.dbg.value(metadata i32 %1, metadata !14038, metadata !DIExpression()), !dbg !14130
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !14132
  store i32 %1, i32* %9, align 4, !dbg !14133
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !14134
  store i8* %2, i8** %10, align 4, !dbg !14135
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !14136
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !14137
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #25, !dbg !14138
  call void @llvm.dbg.value(metadata i8 1, metadata !14102, metadata !DIExpression()), !dbg !14106
  br label %12, !dbg !14139

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !14110
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !14110
  call void @llvm.dbg.value(metadata i32 %14, metadata !12209, metadata !DIExpression()) #23, !dbg !14112
  call void @llvm.dbg.value(metadata i32 %14, metadata !12203, metadata !DIExpression()) #23, !dbg !14108
  call void @llvm.dbg.value(metadata i32 %14, metadata !14105, metadata !DIExpression()), !dbg !14107
  call void @llvm.dbg.value(metadata i8 poison, metadata !14102, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.value(metadata i32 undef, metadata !12224, metadata !DIExpression()) #23, !dbg !14140
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12229, metadata !DIExpression()) #23, !dbg !14140
  call void @llvm.dbg.value(metadata i32 undef, metadata !12232, metadata !DIExpression()) #23, !dbg !14142
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14144, !srcloc !12238
  call void @llvm.dbg.value(metadata i32 undef, metadata !14103, metadata !DIExpression()), !dbg !14107
  ret i1 %13, !dbg !14145
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !14146 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14152, metadata !DIExpression()), !dbg !14157
  call void @llvm.dbg.value(metadata i64 undef, metadata !14154, metadata !DIExpression()), !dbg !14157
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14151, metadata !DIExpression()), !dbg !14157
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14153, metadata !DIExpression()), !dbg !14157
  call void @llvm.dbg.value(metadata i8** %4, metadata !14155, metadata !DIExpression()), !dbg !14157
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !14158
  call void @llvm.dbg.value(metadata i32 %6, metadata !14156, metadata !DIExpression()), !dbg !14157
  %7 = icmp eq i8** %4, null, !dbg !14159
  br i1 %7, label %12, label %8, !dbg !14161

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14162
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !14164
  %11 = load i8*, i8** %10, align 4, !dbg !14164
  store i8* %11, i8** %4, align 4, !dbg !14165
  br label %12, !dbg !14166

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !14167
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !14168 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #24, !dbg !14170
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #24, !dbg !14171
  ret void, !dbg !14172
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14173 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !14183, metadata !DIExpression()), !dbg !14200
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14181, metadata !DIExpression()), !dbg !14200
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !14182, metadata !DIExpression()), !dbg !14200
  %5 = icmp eq i64 %4, -1, !dbg !14201
  br i1 %5, label %55, label %6, !dbg !14203

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !14204
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !14205
  call void @llvm.dbg.value(metadata i32 0, metadata !14184, metadata !DIExpression()), !dbg !14206
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14207, metadata !DIExpression()) #23, !dbg !14214
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14216, !srcloc !14222
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !14216
  call void @llvm.dbg.value(metadata i32 %9, metadata !14219, metadata !DIExpression()) #23, !dbg !14223
  call void @llvm.dbg.value(metadata i32 undef, metadata !14220, metadata !DIExpression()) #23, !dbg !14223
  call void @llvm.dbg.value(metadata i32 %9, metadata !14213, metadata !DIExpression()) #23, !dbg !14214
  call void @llvm.dbg.value(metadata i32 %9, metadata !14190, metadata !DIExpression()), !dbg !14206
  call void @llvm.dbg.value(metadata i32 undef, metadata !14184, metadata !DIExpression()), !dbg !14206
  %10 = icmp slt i64 %4, -1, !dbg !14224
  br i1 %10, label %11, label %17, !dbg !14225

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !14226
  %13 = add i64 %4, %12, !dbg !14227
  %14 = sub i64 -2, %13, !dbg !14227
  call void @llvm.dbg.value(metadata i64 %14, metadata !14194, metadata !DIExpression()), !dbg !14228
  %15 = icmp sgt i64 %14, 1, !dbg !14229
  %16 = select i1 %15, i64 %14, i64 1, !dbg !14229
  br label %22, !dbg !14230

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !14231
  %19 = tail call fastcc i32 @elapsed.152() #25, !dbg !14233
  %20 = sext i32 %19 to i64, !dbg !14233
  %21 = add nsw i64 %18, %20, !dbg !14234
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !14235
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14236
  store i64 %23, i64* %24, align 8, !dbg !14237
  %25 = tail call fastcc %struct._timeout* @first() #25, !dbg !14238
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !14191, metadata !DIExpression()), !dbg !14240
  %26 = icmp eq %struct._timeout* %25, null, !dbg !14241
  br i1 %26, label %42, label %27, !dbg !14241

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !14242
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !14191, metadata !DIExpression()), !dbg !14240
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14246
  %31 = load i64, i64* %30, align 8, !dbg !14246
  %32 = icmp slt i64 %28, %31, !dbg !14247
  br i1 %32, label %33, label %38, !dbg !14248

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14246
  %35 = sub nsw i64 %31, %28, !dbg !14249
  store i64 %35, i64* %34, align 8, !dbg !14249
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !14251
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14252
  tail call fastcc void @sys_dlist_insert.153(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #25, !dbg !14253
  br label %44, !dbg !14254

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !14255
  store i64 %39, i64* %24, align 8, !dbg !14255
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #25, !dbg !14256
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !14191, metadata !DIExpression()), !dbg !14240
  %41 = icmp eq %struct._timeout* %40, null, !dbg !14241
  br i1 %41, label %42, label %27, !dbg !14241, !llvm.loop !14257

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14259
  tail call fastcc void @sys_dlist_append.154(%struct._dnode* noundef %43) #25, !dbg !14262
  br label %44, !dbg !14263

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #25, !dbg !14264
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !14265
  br i1 %46, label %47, label %54, !dbg !14266

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #25, !dbg !14267
  call void @llvm.dbg.value(metadata i32 %48, metadata !14197, metadata !DIExpression()), !dbg !14268
  %49 = icmp ne i32 %48, 0, !dbg !14269
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !14271
  br i1 %52, label %54, label %53, !dbg !14271

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #24, !dbg !14272
  br label %54, !dbg !14274

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !14275, metadata !DIExpression()) #23, !dbg !14281
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14280, metadata !DIExpression()) #23, !dbg !14281
  call void @llvm.dbg.value(metadata i32 %9, metadata !14283, metadata !DIExpression()) #23, !dbg !14286
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14288, !srcloc !14289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14184, metadata !DIExpression()), !dbg !14206
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !14290
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.152() unnamed_addr #1 !dbg !14291 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !14294
  %2 = icmp eq i32 %1, 0, !dbg !14295
  br i1 %2, label %3, label %5, !dbg !14294

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #24, !dbg !14296
  br label %5, !dbg !14294

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !14294
  ret i32 %6, !dbg !14297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #4 !dbg !14298 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.157() #25, !dbg !14304
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14302, metadata !DIExpression()), !dbg !14305
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !14306
  ret %struct._timeout* %2, !dbg !14307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.153(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !14308 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14312, metadata !DIExpression()), !dbg !14316
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14313, metadata !DIExpression()), !dbg !14316
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14317
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14317
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14314, metadata !DIExpression()), !dbg !14316
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14318
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14319
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14320
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14321
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14322
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14323
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14324
  ret void, !dbg !14325
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #4 !dbg !14326 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14330, metadata !DIExpression()), !dbg !14332
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14333
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.155(%struct._dnode* noundef %2) #25, !dbg !14334
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14331, metadata !DIExpression()), !dbg !14332
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !14335
  ret %struct._timeout* %4, !dbg !14336
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.154(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14337 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14342, metadata !DIExpression()), !dbg !14345
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14343, metadata !DIExpression()), !dbg !14345
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14346
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14344, metadata !DIExpression()), !dbg !14345
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14347
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !14348
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14349
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !14350
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !14351
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14352
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14353
  ret void, !dbg !14354
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !14355 {
  %1 = tail call fastcc %struct._timeout* @first() #25, !dbg !14360
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !14357, metadata !DIExpression()), !dbg !14361
  %2 = tail call fastcc i32 @elapsed.152() #25, !dbg !14362
  call void @llvm.dbg.value(metadata i32 %2, metadata !14358, metadata !DIExpression()), !dbg !14361
  %3 = icmp eq %struct._timeout* %1, null, !dbg !14363
  br i1 %3, label %14, label %4, !dbg !14365

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !14366
  %6 = load i64, i64* %5, align 8, !dbg !14366
  %7 = sext i32 %2 to i64, !dbg !14367
  %8 = sub nsw i64 %6, %7, !dbg !14368
  %9 = icmp sgt i64 %8, 2147483647, !dbg !14369
  br i1 %9, label %14, label %10, !dbg !14370

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !14371
  %12 = select i1 %11, i64 %8, i64 0, !dbg !14371
  %13 = trunc i64 %12 to i32, !dbg !14371
  call void @llvm.dbg.value(metadata i32 %13, metadata !14359, metadata !DIExpression()), !dbg !14361
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !14373
  call void @llvm.dbg.value(metadata i32 %15, metadata !14359, metadata !DIExpression()), !dbg !14361
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14374
  %17 = icmp ne i32 %16, 0, !dbg !14376
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !14377
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !14377
  call void @llvm.dbg.value(metadata i32 %20, metadata !14359, metadata !DIExpression()), !dbg !14361
  ret i32 %20, !dbg !14378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.155(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !14379 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14383, metadata !DIExpression()), !dbg !14385
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14384, metadata !DIExpression()), !dbg !14385
  %2 = icmp eq %struct._dnode* %0, null, !dbg !14386
  br i1 %2, label %5, label %3, !dbg !14387

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.156(%struct._dnode* noundef nonnull %0) #25, !dbg !14388
  br label %5, !dbg !14387

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !14387
  ret %struct._dnode* %6, !dbg !14389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.156(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !14390 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14392, metadata !DIExpression()), !dbg !14394
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14393, metadata !DIExpression()), !dbg !14394
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14395
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !14396
  br i1 %3, label %7, label %4, !dbg !14397

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14398
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !14398
  br label %7, !dbg !14397

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !14397
  ret %struct._dnode* %8, !dbg !14399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.157() unnamed_addr #4 !dbg !14400 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14404, metadata !DIExpression()), !dbg !14405
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.158() #25, !dbg !14406
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !14406
  ret %struct._dnode* %3, !dbg !14407
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.158() unnamed_addr #4 !dbg !14408 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14412, metadata !DIExpression()), !dbg !14413
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !14414
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !14415
  ret i1 %2, !dbg !14416
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14417 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14421, metadata !DIExpression()), !dbg !14426
  call void @llvm.dbg.value(metadata i32 -22, metadata !14422, metadata !DIExpression()), !dbg !14426
  call void @llvm.dbg.value(metadata i32 0, metadata !14423, metadata !DIExpression()), !dbg !14427
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14207, metadata !DIExpression()) #23, !dbg !14428
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14430, !srcloc !14222
  call void @llvm.dbg.value(metadata i32 undef, metadata !14219, metadata !DIExpression()) #23, !dbg !14432
  call void @llvm.dbg.value(metadata i32 undef, metadata !14220, metadata !DIExpression()) #23, !dbg !14432
  call void @llvm.dbg.value(metadata i32 undef, metadata !14213, metadata !DIExpression()) #23, !dbg !14428
  call void @llvm.dbg.value(metadata i32 undef, metadata !14425, metadata !DIExpression()), !dbg !14427
  call void @llvm.dbg.value(metadata i32 -22, metadata !14422, metadata !DIExpression()), !dbg !14426
  call void @llvm.dbg.value(metadata i32 undef, metadata !14423, metadata !DIExpression()), !dbg !14427
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !14422, metadata !DIExpression()), !dbg !14426
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.161(%struct._dnode* noundef %3) #25, !dbg !14433
  br i1 %4, label %5, label %6, !dbg !14437

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #25, !dbg !14438
  call void @llvm.dbg.value(metadata i32 0, metadata !14422, metadata !DIExpression()), !dbg !14426
  br label %6, !dbg !14440

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !14426
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14430
  call void @llvm.dbg.value(metadata i32 %8, metadata !14219, metadata !DIExpression()) #23, !dbg !14432
  call void @llvm.dbg.value(metadata i32 %8, metadata !14213, metadata !DIExpression()) #23, !dbg !14428
  call void @llvm.dbg.value(metadata i32 %8, metadata !14425, metadata !DIExpression()), !dbg !14427
  call void @llvm.dbg.value(metadata i32 %7, metadata !14422, metadata !DIExpression()), !dbg !14426
  call void @llvm.dbg.value(metadata i32 undef, metadata !14275, metadata !DIExpression()) #23, !dbg !14441
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14280, metadata !DIExpression()) #23, !dbg !14441
  call void @llvm.dbg.value(metadata i32 undef, metadata !14283, metadata !DIExpression()) #23, !dbg !14443
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !14445, !srcloc !14289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14423, metadata !DIExpression()), !dbg !14427
  ret i32 %7, !dbg !14446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.161(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !14447 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14453, metadata !DIExpression()), !dbg !14454
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14455
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14455
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14456
  ret i1 %4, !dbg !14457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !14458 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14460, metadata !DIExpression()), !dbg !14461
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #25, !dbg !14462
  %3 = icmp eq %struct._timeout* %2, null, !dbg !14464
  br i1 %3, label %10, label %4, !dbg !14465

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14466
  %6 = load i64, i64* %5, align 8, !dbg !14466
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !14468
  %8 = load i64, i64* %7, align 8, !dbg !14469
  %9 = add nsw i64 %8, %6, !dbg !14469
  store i64 %9, i64* %7, align 8, !dbg !14469
  br label %10, !dbg !14470

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14471
  tail call fastcc void @sys_dlist_remove.162(%struct._dnode* noundef %11) #25, !dbg !14472
  ret void, !dbg !14473
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.162(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !14474 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14478, metadata !DIExpression()), !dbg !14481
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14482
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14482
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14479, metadata !DIExpression()), !dbg !14481
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14483
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14483
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14480, metadata !DIExpression()), !dbg !14481
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14484
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14485
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14486
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14487
  tail call fastcc void @sys_dnode_init.163(%struct._dnode* noundef %0) #25, !dbg !14488
  ret void, !dbg !14489
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.163(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #5 !dbg !14490 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14492, metadata !DIExpression()), !dbg !14493
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14494
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14495
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14496
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14497
  ret void, !dbg !14498
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14499 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14505, metadata !DIExpression()), !dbg !14510
  call void @llvm.dbg.value(metadata i64 0, metadata !14506, metadata !DIExpression()), !dbg !14510
  call void @llvm.dbg.value(metadata i32 0, metadata !14507, metadata !DIExpression()), !dbg !14511
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14207, metadata !DIExpression()) #23, !dbg !14512
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14514, !srcloc !14222
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14514
  call void @llvm.dbg.value(metadata i32 %3, metadata !14219, metadata !DIExpression()) #23, !dbg !14516
  call void @llvm.dbg.value(metadata i32 undef, metadata !14220, metadata !DIExpression()) #23, !dbg !14516
  call void @llvm.dbg.value(metadata i32 %3, metadata !14213, metadata !DIExpression()) #23, !dbg !14512
  call void @llvm.dbg.value(metadata i32 %3, metadata !14509, metadata !DIExpression()), !dbg !14511
  call void @llvm.dbg.value(metadata i64 0, metadata !14506, metadata !DIExpression()), !dbg !14510
  call void @llvm.dbg.value(metadata i32 undef, metadata !14507, metadata !DIExpression()), !dbg !14511
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !14517
  call void @llvm.dbg.value(metadata i64 %4, metadata !14506, metadata !DIExpression()), !dbg !14510
  call void @llvm.dbg.value(metadata i32 %3, metadata !14275, metadata !DIExpression()) #23, !dbg !14520
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14280, metadata !DIExpression()) #23, !dbg !14520
  call void @llvm.dbg.value(metadata i32 %3, metadata !14283, metadata !DIExpression()) #23, !dbg !14522
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14524, !srcloc !14289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14507, metadata !DIExpression()), !dbg !14511
  ret i64 %4, !dbg !14525
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !14526 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14528, metadata !DIExpression()), !dbg !14532
  call void @llvm.dbg.value(metadata i64 0, metadata !14529, metadata !DIExpression()), !dbg !14532
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.164(%struct._timeout* noundef %0) #25, !dbg !14533
  br i1 %2, label %21, label %3, !dbg !14535

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #25, !dbg !14536
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !14530, metadata !DIExpression()), !dbg !14537
  call void @llvm.dbg.value(metadata i64 0, metadata !14529, metadata !DIExpression()), !dbg !14532
  %5 = icmp eq %struct._timeout* %4, null, !dbg !14538
  br i1 %5, label %16, label %6, !dbg !14540

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !14530, metadata !DIExpression()), !dbg !14537
  call void @llvm.dbg.value(metadata i64 %8, metadata !14529, metadata !DIExpression()), !dbg !14532
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !14541
  %10 = load i64, i64* %9, align 8, !dbg !14541
  %11 = add nsw i64 %10, %8, !dbg !14543
  call void @llvm.dbg.value(metadata i64 %11, metadata !14529, metadata !DIExpression()), !dbg !14532
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !14544
  br i1 %12, label %16, label %13, !dbg !14546

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #25, !dbg !14547
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !14530, metadata !DIExpression()), !dbg !14537
  call void @llvm.dbg.value(metadata i64 %11, metadata !14529, metadata !DIExpression()), !dbg !14532
  %15 = icmp eq %struct._timeout* %14, null, !dbg !14538
  br i1 %15, label %16, label %6, !dbg !14540, !llvm.loop !14548

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !14532
  call void @llvm.dbg.value(metadata i64 %17, metadata !14529, metadata !DIExpression()), !dbg !14532
  %18 = tail call fastcc i32 @elapsed.152() #25, !dbg !14550
  %19 = sext i32 %18 to i64, !dbg !14550
  %20 = sub nsw i64 %17, %19, !dbg !14551
  br label %21, !dbg !14552

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !14532
  ret i64 %22, !dbg !14553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.164(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !14554 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14558, metadata !DIExpression()), !dbg !14559
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14560
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.161(%struct._dnode* noundef %2) #25, !dbg !14561
  %4 = xor i1 %3, true, !dbg !14562
  ret i1 %4, !dbg !14563
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14564 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14566, metadata !DIExpression()), !dbg !14571
  call void @llvm.dbg.value(metadata i64 0, metadata !14567, metadata !DIExpression()), !dbg !14571
  call void @llvm.dbg.value(metadata i32 0, metadata !14568, metadata !DIExpression()), !dbg !14572
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14207, metadata !DIExpression()) #23, !dbg !14573
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14575, !srcloc !14222
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14575
  call void @llvm.dbg.value(metadata i32 %3, metadata !14219, metadata !DIExpression()) #23, !dbg !14577
  call void @llvm.dbg.value(metadata i32 undef, metadata !14220, metadata !DIExpression()) #23, !dbg !14577
  call void @llvm.dbg.value(metadata i32 %3, metadata !14213, metadata !DIExpression()) #23, !dbg !14573
  call void @llvm.dbg.value(metadata i32 %3, metadata !14570, metadata !DIExpression()), !dbg !14572
  call void @llvm.dbg.value(metadata i64 0, metadata !14567, metadata !DIExpression()), !dbg !14571
  call void @llvm.dbg.value(metadata i32 undef, metadata !14568, metadata !DIExpression()), !dbg !14572
  %4 = load i64, i64* @curr_tick, align 8, !dbg !14578
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !14581
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !14567, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14571
  call void @llvm.dbg.value(metadata i32 %3, metadata !14275, metadata !DIExpression()) #23, !dbg !14582
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14280, metadata !DIExpression()) #23, !dbg !14582
  call void @llvm.dbg.value(metadata i32 %3, metadata !14283, metadata !DIExpression()) #23, !dbg !14584
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14586, !srcloc !14289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14568, metadata !DIExpression()), !dbg !14572
  %6 = add i64 %5, %4, !dbg !14587
  ret i64 %6, !dbg !14588
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !14589 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !14591, metadata !DIExpression()), !dbg !14595
  call void @llvm.dbg.value(metadata i32 0, metadata !14592, metadata !DIExpression()), !dbg !14596
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14207, metadata !DIExpression()) #23, !dbg !14597
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14599, !srcloc !14222
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14599
  call void @llvm.dbg.value(metadata i32 %2, metadata !14219, metadata !DIExpression()) #23, !dbg !14601
  call void @llvm.dbg.value(metadata i32 undef, metadata !14220, metadata !DIExpression()) #23, !dbg !14601
  call void @llvm.dbg.value(metadata i32 %2, metadata !14213, metadata !DIExpression()) #23, !dbg !14597
  call void @llvm.dbg.value(metadata i32 %2, metadata !14594, metadata !DIExpression()), !dbg !14596
  call void @llvm.dbg.value(metadata i32 -1, metadata !14591, metadata !DIExpression()), !dbg !14595
  call void @llvm.dbg.value(metadata i32 undef, metadata !14592, metadata !DIExpression()), !dbg !14596
  %3 = tail call fastcc i32 @next_timeout() #25, !dbg !14602
  call void @llvm.dbg.value(metadata i32 %3, metadata !14591, metadata !DIExpression()), !dbg !14595
  call void @llvm.dbg.value(metadata i32 %2, metadata !14275, metadata !DIExpression()) #23, !dbg !14605
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14280, metadata !DIExpression()) #23, !dbg !14605
  call void @llvm.dbg.value(metadata i32 %2, metadata !14283, metadata !DIExpression()) #23, !dbg !14607
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14609, !srcloc !14289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14592, metadata !DIExpression()), !dbg !14596
  ret i32 %3, !dbg !14610
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !14611 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14613, metadata !DIExpression()), !dbg !14623
  call void @llvm.dbg.value(metadata i1 %1, metadata !14614, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14623
  call void @llvm.dbg.value(metadata i32 0, metadata !14615, metadata !DIExpression()), !dbg !14624
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14207, metadata !DIExpression()) #23, !dbg !14625
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14627, !srcloc !14222
  call void @llvm.dbg.value(metadata i32 undef, metadata !14219, metadata !DIExpression()) #23, !dbg !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14220, metadata !DIExpression()) #23, !dbg !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14213, metadata !DIExpression()) #23, !dbg !14625
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()), !dbg !14624
  call void @llvm.dbg.value(metadata i32 undef, metadata !14615, metadata !DIExpression()), !dbg !14624
  %4 = tail call fastcc i32 @next_timeout() #25, !dbg !14630
  call void @llvm.dbg.value(metadata i32 %4, metadata !14618, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata i1 undef, metadata !14621, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14631
  %5 = icmp slt i32 %4, 2, !dbg !14632
  call void @llvm.dbg.value(metadata i1 %5, metadata !14622, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14631
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !14633
  call void @llvm.dbg.value(metadata i1 %6, metadata !14621, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14631
  br i1 %7, label %11, label %8, !dbg !14633

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !14635
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !14635
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #24, !dbg !14637
  br label %11, !dbg !14638

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !14627
  call void @llvm.dbg.value(metadata i32 %12, metadata !14219, metadata !DIExpression()) #23, !dbg !14629
  call void @llvm.dbg.value(metadata i32 %12, metadata !14213, metadata !DIExpression()) #23, !dbg !14625
  call void @llvm.dbg.value(metadata i32 %12, metadata !14617, metadata !DIExpression()), !dbg !14624
  call void @llvm.dbg.value(metadata i32 undef, metadata !14275, metadata !DIExpression()) #23, !dbg !14639
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14280, metadata !DIExpression()) #23, !dbg !14639
  call void @llvm.dbg.value(metadata i32 undef, metadata !14283, metadata !DIExpression()) #23, !dbg !14641
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !14643, !srcloc !14289
  call void @llvm.dbg.value(metadata i32 1, metadata !14615, metadata !DIExpression()), !dbg !14624
  call void @llvm.dbg.value(metadata i32 undef, metadata !14615, metadata !DIExpression()), !dbg !14624
  ret void, !dbg !14644
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !14645 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14649, metadata !DIExpression()), !dbg !14654
  tail call void @z_time_slice(i32 noundef %0) #24, !dbg !14655
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14207, metadata !DIExpression()) #23, !dbg !14656
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14658, !srcloc !14222
  call void @llvm.dbg.value(metadata i32 undef, metadata !14219, metadata !DIExpression()) #23, !dbg !14660
  call void @llvm.dbg.value(metadata i32 undef, metadata !14220, metadata !DIExpression()) #23, !dbg !14660
  call void @llvm.dbg.value(metadata i32 undef, metadata !14213, metadata !DIExpression()) #23, !dbg !14656
  call void @llvm.dbg.value(metadata i32 undef, metadata !14650, metadata !DIExpression()), !dbg !14654
  store i32 %0, i32* @announce_remaining, align 4, !dbg !14654
  call void @llvm.dbg.value(metadata i32 undef, metadata !14650, metadata !DIExpression()), !dbg !14654
  %3 = tail call fastcc %struct._timeout* @first() #25, !dbg !14661
  %4 = icmp eq %struct._timeout* %3, null, !dbg !14662
  br i1 %4, label %28, label %5, !dbg !14663

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !14664
  %10 = load i64, i64* %9, align 8, !dbg !14664
  %11 = sext i32 %8 to i64, !dbg !14665
  %12 = icmp sgt i64 %10, %11, !dbg !14666
  br i1 %12, label %26, label %13, !dbg !14667

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !14654
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !14651, metadata !DIExpression()), !dbg !14668
  %15 = trunc i64 %10 to i32, !dbg !14669
  call void @llvm.dbg.value(metadata i32 %15, metadata !14653, metadata !DIExpression()), !dbg !14668
  %16 = sext i32 %15 to i64, !dbg !14670
  %17 = load i64, i64* @curr_tick, align 8, !dbg !14671
  %18 = add i64 %17, %16, !dbg !14671
  store i64 %18, i64* @curr_tick, align 8, !dbg !14671
  store i64 0, i64* %9, align 8, !dbg !14672
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #25, !dbg !14673
  call void @llvm.dbg.value(metadata i32 %14, metadata !14275, metadata !DIExpression()) #23, !dbg !14674
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14280, metadata !DIExpression()) #23, !dbg !14674
  call void @llvm.dbg.value(metadata i32 %14, metadata !14283, metadata !DIExpression()) #23, !dbg !14676
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14678, !srcloc !14289
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !14679
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !14679
  tail call void %20(%struct._timeout* noundef nonnull %6) #24, !dbg !14680
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14207, metadata !DIExpression()) #23, !dbg !14681
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14683, !srcloc !14222
  call void @llvm.dbg.value(metadata i32 undef, metadata !14219, metadata !DIExpression()) #23, !dbg !14685
  call void @llvm.dbg.value(metadata i32 undef, metadata !14220, metadata !DIExpression()) #23, !dbg !14685
  call void @llvm.dbg.value(metadata i32 undef, metadata !14213, metadata !DIExpression()) #23, !dbg !14681
  call void @llvm.dbg.value(metadata i32 undef, metadata !14650, metadata !DIExpression()), !dbg !14654
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !14686
  %23 = sub nsw i32 %22, %15, !dbg !14686
  store i32 %23, i32* @announce_remaining, align 4, !dbg !14654
  call void @llvm.dbg.value(metadata i32 undef, metadata !14650, metadata !DIExpression()), !dbg !14654
  %24 = tail call fastcc %struct._timeout* @first() #25, !dbg !14661
  %25 = icmp eq %struct._timeout* %24, null, !dbg !14662
  br i1 %25, label %28, label %5, !dbg !14663, !llvm.loop !14687

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !14689
  store i64 %27, i64* %9, align 8, !dbg !14689
  br label %32, !dbg !14692

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !14654
  %31 = sext i32 %30 to i64, !dbg !14693
  br label %32, !dbg !14693

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !14693
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !14654
  %36 = load i64, i64* @curr_tick, align 8, !dbg !14694
  %37 = add i64 %36, %33, !dbg !14694
  store i64 %37, i64* @curr_tick, align 8, !dbg !14694
  store i32 0, i32* @announce_remaining, align 4, !dbg !14695
  %38 = tail call fastcc i32 @next_timeout() #25, !dbg !14696
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #24, !dbg !14697
  call void @llvm.dbg.value(metadata i32 %35, metadata !14275, metadata !DIExpression()) #23, !dbg !14698
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14280, metadata !DIExpression()) #23, !dbg !14698
  call void @llvm.dbg.value(metadata i32 %35, metadata !14283, metadata !DIExpression()) #23, !dbg !14700
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !14702, !srcloc !14289
  ret void, !dbg !14703
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !14704 {
  call void @llvm.dbg.value(metadata i64 0, metadata !14708, metadata !DIExpression()), !dbg !14712
  call void @llvm.dbg.value(metadata i32 0, metadata !14709, metadata !DIExpression()), !dbg !14713
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14207, metadata !DIExpression()) #23, !dbg !14714
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14716, !srcloc !14222
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14716
  call void @llvm.dbg.value(metadata i32 %2, metadata !14219, metadata !DIExpression()) #23, !dbg !14718
  call void @llvm.dbg.value(metadata i32 undef, metadata !14220, metadata !DIExpression()) #23, !dbg !14718
  call void @llvm.dbg.value(metadata i32 %2, metadata !14213, metadata !DIExpression()) #23, !dbg !14714
  call void @llvm.dbg.value(metadata i32 %2, metadata !14711, metadata !DIExpression()), !dbg !14713
  call void @llvm.dbg.value(metadata i64 0, metadata !14708, metadata !DIExpression()), !dbg !14712
  call void @llvm.dbg.value(metadata i32 undef, metadata !14709, metadata !DIExpression()), !dbg !14713
  %3 = load i64, i64* @curr_tick, align 8, !dbg !14719
  %4 = tail call fastcc i32 @elapsed.152() #25, !dbg !14722
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !14708, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14712
  call void @llvm.dbg.value(metadata i32 %2, metadata !14275, metadata !DIExpression()) #23, !dbg !14723
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14280, metadata !DIExpression()) #23, !dbg !14723
  call void @llvm.dbg.value(metadata i32 %2, metadata !14283, metadata !DIExpression()) #23, !dbg !14725
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14727, !srcloc !14289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14709, metadata !DIExpression()), !dbg !14713
  %5 = sext i32 %4 to i64, !dbg !14722
  %6 = add i64 %3, %5, !dbg !14728
  ret i64 %6, !dbg !14729
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !14730 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !14731
  %2 = trunc i64 %1 to i32, !dbg !14732
  ret i32 %2, !dbg !14733
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !14734 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !14735
  ret i64 %1, !dbg !14736
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !14737 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14739, metadata !DIExpression()), !dbg !14746
  %2 = icmp eq i32 %0, 0, !dbg !14747
  br i1 %2, label %10, label %3, !dbg !14749

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !14750
  call void @llvm.dbg.value(metadata i32 %4, metadata !14740, metadata !DIExpression()), !dbg !14746
  %5 = mul i32 %0, 84, !dbg !14751
  call void @llvm.dbg.value(metadata i32 %5, metadata !14741, metadata !DIExpression()), !dbg !14746
  br label %6, !dbg !14752

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !14753
  call void @llvm.dbg.value(metadata i32 %7, metadata !14742, metadata !DIExpression()), !dbg !14754
  %8 = sub i32 %7, %4, !dbg !14755
  %9 = icmp ult i32 %8, %5, !dbg !14757
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !14758
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !14759 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #25, !dbg !14760
  ret i32 %1, !dbg !14761
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !14762 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !14764
  ret i32 %1, !dbg !14765
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !14766 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14770, metadata !DIExpression()), !dbg !14772
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !14773

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #25, !dbg !14774
  br label %14, !dbg !14778

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14771, metadata !DIExpression()), !dbg !14772
  %6 = icmp slt i64 %2, -1, !dbg !14779
  br i1 %6, label %7, label %9, !dbg !14782

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !14783
  br label %14, !dbg !14784

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #25, !dbg !14786
  %11 = icmp ugt i64 %2, 1, !dbg !14787
  %12 = select i1 %11, i64 %2, i64 1, !dbg !14787
  %13 = add nsw i64 %10, %12, !dbg !14788
  br label %14, !dbg !14789

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !14790
  ret i64 %15, !dbg !14791
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !14792 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.173, i32 0, i32 0)) #24, !dbg !14794
  ret void, !dbg !14795
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { argmemonly nofree nounwind willreturn writeonly }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nounwind readnone }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!595, !2, !2152, !2154, !27, !2319, !2321, !2359, !111, !168, !2361, !2372, !2418, !2420, !2448, !2476, !2519, !2591, !2636, !197, !351, !2664, !387, !2669, !397, !422, !627, !2672, !765, !831, !1135, !1354, !2711, !1467, !1557, !2713, !2799, !2864, !1609, !2867, !1616, !1980, !2885, !2000, !2887, !2115, !2890}
!llvm.ident = !{!2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892, !2892}
!llvm.module.flags = !{!2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 98, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5504, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 86)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2752, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !111, file: !129, line: 56, type: !130, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !113, globals: !128, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!113 = !{!114}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 259, baseType: !117)
!116 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f411xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 250, size: 224, elements: !118)
!118 = !{!119, !122, !123, !124, !125, !126, !127}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !117, file: !116, line: 252, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !117, file: !116, line: 253, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !117, file: !116, line: 254, baseType: !120, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !117, file: !116, line: 255, baseType: !120, size: 32, offset: 96)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !117, file: !116, line: 256, baseType: !120, size: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !117, file: !116, line: 257, baseType: !120, size: 32, offset: 160)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !117, file: !116, line: 258, baseType: !120, size: 32, offset: 192)
!128 = !{!109}
!129 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !133)
!132 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!133 = !{!134, !165}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !131, file: !132, line: 60, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DISubroutineType(types: !137)
!137 = !{!103, !138}
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !140)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = !{!143, !147, !148, !149, !158, !159}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !140, file: !141, line: 380, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!146 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !140, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !140, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !140, file: !141, line: 386, baseType: !150, size: 32, offset: 96)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !152)
!152 = !{!153, !156}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !151, file: !141, line: 359, baseType: !154, size: 8)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !155)
!155 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !151, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!157 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !140, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !140, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !141, line: 43, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !164)
!164 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !131, file: !132, line: 65, baseType: !138, size: 32, offset: 32)
!166 = !DIGlobalVariableExpression(var: !167, expr: !DIExpression())
!167 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !168, file: !171, line: 71, type: !172, isLocal: true, isDefinition: true, align: 32)
!168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !169, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !170, splitDebugInlining: false, nameTableKind: None)
!169 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!170 = !{!166}
!171 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !174)
!174 = !{!175, !194}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !173, file: !132, line: 60, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DISubroutineType(types: !178)
!178 = !{!103, !179}
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !182)
!182 = !{!183, !184, !185, !186, !192, !193}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !181, file: !141, line: 380, baseType: !144, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !181, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !181, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !181, file: !141, line: 386, baseType: !187, size: 32, offset: 96)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !188, file: !141, line: 359, baseType: !154, size: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !188, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !181, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !181, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !173, file: !132, line: 65, baseType: !179, size: 32, offset: 32)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "static_regions", scope: !197, file: !206, line: 62, type: !347, isLocal: true, isDefinition: true)
!197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !199, globals: !202, splitDebugInlining: false, nameTableKind: None)
!198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!199 = !{!200, !103, !121, !102}
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !201, line: 214, baseType: !32)
!201 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!202 = !{!203, !195}
!203 = !DIGlobalVariableExpression(var: !204, expr: !DIExpression())
!204 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !205, file: !206, line: 198, type: !333, isLocal: true, isDefinition: true)
!205 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !206, file: !206, line: 175, type: !207, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !328)
!206 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!207 = !DISubroutineType(types: !208)
!208 = !{null, !209}
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !212)
!211 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!212 = !{!213, !282, !295, !296, !297, !298, !304, !323}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !210, file: !211, line: 247, baseType: !214, size: 384)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !215)
!215 = !{!216, !244, !252, !253, !254, !267, !268, !269}
!216 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !211, line: 60, baseType: !217, size: 64)
!217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !214, file: !211, line: 60, size: 64, elements: !218)
!218 = !{!219, !235}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !217, file: !211, line: 61, baseType: !220, size: 64)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !222)
!221 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !223)
!223 = !{!224, !230}
!224 = !DIDerivedType(tag: DW_TAG_member, scope: !222, file: !221, line: 38, baseType: !225, size: 32)
!225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !222, file: !221, line: 38, size: 32, elements: !226)
!226 = !{!227, !229}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !225, file: !221, line: 39, baseType: !228, size: 32)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !225, file: !221, line: 40, baseType: !228, size: 32)
!230 = !DIDerivedType(tag: DW_TAG_member, scope: !222, file: !221, line: 42, baseType: !231, size: 32, offset: 32)
!231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !222, file: !221, line: 42, size: 32, elements: !232)
!232 = !{!233, !234}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !231, file: !221, line: 43, baseType: !228, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !231, file: !221, line: 44, baseType: !228, size: 32)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !217, file: !211, line: 62, baseType: !236, size: 64)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !238)
!237 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!238 = !{!239}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !236, file: !237, line: 50, baseType: !240, size: 64)
!240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 64, elements: !242)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!242 = !{!243}
!243 = !DISubrange(count: 2)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !214, file: !211, line: 68, baseType: !245, size: 32, offset: 64)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !249)
!249 = !{!250}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !248, file: !247, line: 232, baseType: !251, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !222)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !214, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !214, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!254 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !211, line: 90, baseType: !255, size: 16, offset: 112)
!255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !214, file: !211, line: 90, size: 16, elements: !256)
!256 = !{!257, !264}
!257 = !DIDerivedType(tag: DW_TAG_member, scope: !255, file: !211, line: 91, baseType: !258, size: 16)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !255, file: !211, line: 91, size: 16, elements: !259)
!259 = !{!260, !263}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !258, file: !211, line: 96, baseType: !261, size: 8)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !262)
!262 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !258, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !255, file: !211, line: 100, baseType: !265, size: 16)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !266)
!266 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !214, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !214, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !214, file: !211, line: 131, baseType: !270, size: 192, offset: 192)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !271)
!271 = !{!272, !273, !279}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !270, file: !247, line: 245, baseType: !220, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !270, file: !247, line: 246, baseType: !274, size: 32, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!276 = !DISubroutineType(types: !277)
!277 = !{null, !278}
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !270, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !281)
!281 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !210, file: !211, line: 250, baseType: !283, size: 288, offset: 384)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !285)
!284 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!285 = !{!286, !287, !288, !289, !290, !291, !292, !293, !294}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !283, file: !284, line: 26, baseType: !121, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !283, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !283, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !283, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !283, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !283, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !283, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !283, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !283, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !210, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !210, file: !211, line: 256, baseType: !246, size: 64, offset: 704)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !210, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !210, file: !211, line: 300, baseType: !299, size: 96, offset: 800)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !300)
!300 = !{!301, !302, !303}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !299, file: !211, line: 153, baseType: !22, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !299, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !299, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !210, file: !211, line: 325, baseType: !305, size: 32, offset: 896)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 32)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !308)
!307 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!308 = !{!309, !318, !319}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !306, file: !307, line: 5074, baseType: !310, size: 96)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !312)
!311 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!312 = !{!313, !316, !317}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !310, file: !311, line: 57, baseType: !314, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 32)
!315 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !311, line: 57, flags: DIFlagFwdDecl)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !310, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !310, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !306, file: !307, line: 5075, baseType: !246, size: 64, offset: 96)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !306, file: !307, line: 5076, baseType: !320, offset: 160)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!321 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!322 = !{}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !210, file: !211, line: 343, baseType: !324, size: 64, offset: 928)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !325)
!325 = !{!326, !327}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !324, file: !284, line: 63, baseType: !121, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !324, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!328 = !{!329, !330, !331, !332}
!329 = !DILocalVariable(name: "thread", arg: 1, scope: !205, file: !206, line: 175, type: !209)
!330 = !DILocalVariable(name: "region_num", scope: !205, file: !206, line: 200, type: !154)
!331 = !DILocalVariable(name: "guard_start", scope: !205, file: !206, line: 265, type: !22)
!332 = !DILocalVariable(name: "guard_size", scope: !205, file: !206, line: 266, type: !200)
!333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !334, size: 96, elements: !345)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !335, line: 52, size: 96, elements: !336)
!335 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!336 = !{!337, !338, !339}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !334, file: !335, line: 53, baseType: !22, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !334, file: !335, line: 54, baseType: !200, size: 32, offset: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !334, file: !335, line: 55, baseType: !340, size: 32, offset: 64)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !341, line: 151, baseType: !342)
!341 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !341, line: 149, size: 32, elements: !343)
!343 = !{!344}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !342, file: !341, line: 150, baseType: !121, size: 32)
!345 = !{!346}
!346 = !DISubrange(count: 1)
!347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 96, elements: !345)
!348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !334)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !351, file: !384, line: 39, type: !154, isLocal: true, isDefinition: true)
!351 = distinct !DICompileUnit(language: DW_LANG_C99, file: !352, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !353, globals: !383, splitDebugInlining: false, nameTableKind: None)
!352 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!353 = !{!354, !102, !103, !371, !154}
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 32)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !356, line: 1226, baseType: !357)
!356 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!357 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 1213, size: 352, elements: !358)
!358 = !{!359, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !357, file: !356, line: 1215, baseType: !360, size: 32)
!360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !357, file: !356, line: 1216, baseType: !120, size: 32, offset: 32)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !357, file: !356, line: 1217, baseType: !120, size: 32, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !357, file: !356, line: 1218, baseType: !120, size: 32, offset: 96)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !357, file: !356, line: 1219, baseType: !120, size: 32, offset: 128)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !357, file: !356, line: 1220, baseType: !120, size: 32, offset: 160)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !357, file: !356, line: 1221, baseType: !120, size: 32, offset: 192)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !357, file: !356, line: 1222, baseType: !120, size: 32, offset: 224)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !357, file: !356, line: 1223, baseType: !120, size: 32, offset: 256)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !357, file: !356, line: 1224, baseType: !120, size: 32, offset: 288)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !357, file: !356, line: 1225, baseType: !120, size: 32, offset: 320)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !373)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !374, line: 27, size: 96, elements: !375)
!374 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!375 = !{!376, !377, !378}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !373, file: !374, line: 29, baseType: !121, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !373, file: !374, line: 31, baseType: !144, size: 32, offset: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !373, file: !374, line: 37, baseType: !379, size: 32, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !341, line: 146, baseType: !380)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !341, line: 141, size: 32, elements: !381)
!381 = !{!382}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !380, file: !341, line: 143, baseType: !121, size: 32)
!383 = !{!349}
!384 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !387, file: !394, line: 21, type: !106, isLocal: true, isDefinition: true)
!387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !389, globals: !393, splitDebugInlining: false, nameTableKind: None)
!388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!389 = !{!390, !103, !102}
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!391 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !392, line: 22, baseType: !103)
!392 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!393 = !{!385}
!394 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !397, file: !402, line: 13, type: !419, isLocal: true, isDefinition: true)
!397 = distinct !DICompileUnit(language: DW_LANG_C99, file: !398, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !399, splitDebugInlining: false, nameTableKind: None)
!398 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!399 = !{!400, !395}
!400 = !DIGlobalVariableExpression(var: !401, expr: !DIExpression())
!401 = distinct !DIGlobalVariable(name: "mpu_config", scope: !397, file: !402, line: 37, type: !403, isLocal: false, isDefinition: true)
!402 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !404)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !374, line: 41, size: 64, elements: !405)
!405 = !{!406, !407}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !404, file: !374, line: 43, baseType: !121, size: 32)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !404, file: !374, line: 45, baseType: !408, size: 32, offset: 32)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !410)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !374, line: 27, size: 96, elements: !411)
!411 = !{!412, !413, !414}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !410, file: !374, line: 29, baseType: !121, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !410, file: !374, line: 31, baseType: !144, size: 32, offset: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !410, file: !374, line: 37, baseType: !415, size: 32, offset: 64)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !341, line: 146, baseType: !416)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !341, line: 141, size: 32, elements: !417)
!417 = !{!418}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !416, file: !341, line: 143, baseType: !121, size: 32)
!419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 192, elements: !242)
!420 = !DIGlobalVariableExpression(var: !421, expr: !DIExpression())
!421 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !422, file: !506, line: 72, type: !590, isLocal: true, isDefinition: true)
!422 = distinct !DICompileUnit(language: DW_LANG_C99, file: !423, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !424, retainedTypes: !492, globals: !503, splitDebugInlining: false, nameTableKind: None)
!423 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!424 = !{!30, !425}
!425 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 65, baseType: !103, size: 32, elements: !426)
!426 = !{!427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491}
!427 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!428 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!429 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!430 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!431 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!432 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!433 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!434 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!435 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!436 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!437 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!438 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!439 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!440 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!441 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!442 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!443 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!444 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!445 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!446 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!447 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!448 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!449 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!450 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!451 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!452 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!453 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!454 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!455 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!456 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!457 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!458 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!459 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!460 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!461 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!462 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!463 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!464 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!465 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!466 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!467 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!468 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!469 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!470 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!471 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!472 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!473 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!474 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!475 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!476 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!477 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!478 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!479 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!480 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!481 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!482 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!483 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!484 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!485 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!486 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!487 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!488 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!489 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!490 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!491 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!492 = !{!200, !103, !102, !493}
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 32)
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !116, line: 244, baseType: !495)
!495 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 236, size: 192, elements: !496)
!496 = !{!497, !498, !499, !500, !501, !502}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !495, file: !116, line: 238, baseType: !120, size: 32)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !495, file: !116, line: 239, baseType: !120, size: 32, offset: 32)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !495, file: !116, line: 240, baseType: !120, size: 32, offset: 64)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !495, file: !116, line: 241, baseType: !120, size: 32, offset: 96)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !495, file: !116, line: 242, baseType: !120, size: 32, offset: 128)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !495, file: !116, line: 243, baseType: !120, size: 32, offset: 160)
!503 = !{!504, !510, !526, !537, !554, !420, !556, !570, !572, !574, !576, !578, !580, !582, !584, !586, !588}
!504 = !DIGlobalVariableExpression(var: !505, expr: !DIExpression())
!505 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !422, file: !506, line: 424, type: !507, isLocal: false, isDefinition: true, align: 16)
!506 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !508)
!508 = !{!509}
!509 = !DISubrange(count: 4)
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !422, file: !506, line: 424, type: !512, isLocal: false, isDefinition: true, align: 32)
!512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !513)
!513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !514)
!514 = !{!515, !516, !517, !518, !524, !525}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !513, file: !141, line: 380, baseType: !144, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !513, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !513, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !513, file: !141, line: 386, baseType: !519, size: 32, offset: 96)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 32)
!520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !521)
!521 = !{!522, !523}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !520, file: !141, line: 359, baseType: !154, size: 8)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !520, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !513, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !513, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !422, file: !506, line: 424, type: !528, isLocal: true, isDefinition: true, align: 32)
!528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !529)
!529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !530)
!530 = !{!531, !536}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !529, file: !132, line: 60, baseType: !532, size: 32)
!532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 32)
!533 = !DISubroutineType(types: !534)
!534 = !{!103, !535}
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 32)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !529, file: !132, line: 65, baseType: !535, size: 32, offset: 32)
!537 = !DIGlobalVariableExpression(var: !538, expr: !DIExpression())
!538 = distinct !DIGlobalVariable(name: "exti_data", scope: !422, file: !506, line: 423, type: !539, isLocal: true, isDefinition: true)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !506, line: 107, size: 1472, elements: !540)
!540 = !{!541}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !539, file: !506, line: 109, baseType: !542, size: 1472)
!542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !543, size: 1472, elements: !552)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !506, line: 101, size: 64, elements: !544)
!544 = !{!545, !551}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !543, file: !506, line: 102, baseType: !546, size: 32)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !547, line: 63, baseType: !548)
!547 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 32)
!549 = !DISubroutineType(types: !550)
!550 = !{null, !103, !102}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !543, file: !506, line: 103, baseType: !102, size: 32, offset: 32)
!552 = !{!553}
!553 = !DISubrange(count: 23)
!554 = !DIGlobalVariableExpression(var: !555, expr: !DIExpression())
!555 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !422, file: !506, line: 424, type: !520, isLocal: true, isDefinition: true, align: 8)
!556 = !DIGlobalVariableExpression(var: !557, expr: !DIExpression())
!557 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !558, file: !506, line: 493, type: !563, isLocal: true, isDefinition: true, align: 32)
!558 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !506, file: !506, line: 460, type: !559, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !561)
!559 = !DISubroutineType(types: !560)
!560 = !{null, !535}
!561 = !{!562}
!562 = !DILocalVariable(name: "dev", arg: 1, scope: !558, file: !506, line: 460, type: !535)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !564)
!564 = !{!565, !567, !568, !569}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !563, file: !10, line: 55, baseType: !566, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !563, file: !10, line: 57, baseType: !566, size: 32, offset: 32)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !563, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !563, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!570 = !DIGlobalVariableExpression(var: !571, expr: !DIExpression())
!571 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !558, file: !506, line: 497, type: !563, isLocal: true, isDefinition: true, align: 32)
!572 = !DIGlobalVariableExpression(var: !573, expr: !DIExpression())
!573 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !558, file: !506, line: 507, type: !563, isLocal: true, isDefinition: true, align: 32)
!574 = !DIGlobalVariableExpression(var: !575, expr: !DIExpression())
!575 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !558, file: !506, line: 512, type: !563, isLocal: true, isDefinition: true, align: 32)
!576 = !DIGlobalVariableExpression(var: !577, expr: !DIExpression())
!577 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !558, file: !506, line: 516, type: !563, isLocal: true, isDefinition: true, align: 32)
!578 = !DIGlobalVariableExpression(var: !579, expr: !DIExpression())
!579 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !558, file: !506, line: 523, type: !563, isLocal: true, isDefinition: true, align: 32)
!580 = !DIGlobalVariableExpression(var: !581, expr: !DIExpression())
!581 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !558, file: !506, line: 527, type: !563, isLocal: true, isDefinition: true, align: 32)
!582 = !DIGlobalVariableExpression(var: !583, expr: !DIExpression())
!583 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !558, file: !506, line: 581, type: !563, isLocal: true, isDefinition: true, align: 32)
!584 = !DIGlobalVariableExpression(var: !585, expr: !DIExpression())
!585 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !558, file: !506, line: 586, type: !563, isLocal: true, isDefinition: true, align: 32)
!586 = !DIGlobalVariableExpression(var: !587, expr: !DIExpression())
!587 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !558, file: !506, line: 591, type: !563, isLocal: true, isDefinition: true, align: 32)
!588 = !DIGlobalVariableExpression(var: !589, expr: !DIExpression())
!589 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !558, file: !506, line: 595, type: !563, isLocal: true, isDefinition: true, align: 32)
!590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !591, size: 736, elements: !552)
!591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !592)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !116, line: 134, baseType: !425)
!593 = !DIGlobalVariableExpression(var: !594, expr: !DIExpression())
!594 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !595, file: !600, line: 22, type: !622, isLocal: false, isDefinition: true, align: 16)
!595 = distinct !DICompileUnit(language: DW_LANG_C99, file: !596, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !597, splitDebugInlining: false, nameTableKind: None)
!596 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!597 = !{!598, !593, !604, !606, !608, !610, !612, !614, !616, !618, !620}
!598 = !DIGlobalVariableExpression(var: !599, expr: !DIExpression())
!599 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !595, file: !600, line: 17, type: !601, isLocal: false, isDefinition: true, align: 16)
!600 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 192, elements: !602)
!602 = !{!603}
!603 = !DISubrange(count: 12)
!604 = !DIGlobalVariableExpression(var: !605, expr: !DIExpression())
!605 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !595, file: !600, line: 29, type: !507, isLocal: false, isDefinition: true, align: 16)
!606 = !DIGlobalVariableExpression(var: !607, expr: !DIExpression())
!607 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !595, file: !600, line: 36, type: !507, isLocal: false, isDefinition: true, align: 16)
!608 = !DIGlobalVariableExpression(var: !609, expr: !DIExpression())
!609 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !595, file: !600, line: 43, type: !507, isLocal: false, isDefinition: true, align: 16)
!610 = !DIGlobalVariableExpression(var: !611, expr: !DIExpression())
!611 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !595, file: !600, line: 50, type: !507, isLocal: false, isDefinition: true, align: 16)
!612 = !DIGlobalVariableExpression(var: !613, expr: !DIExpression())
!613 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !595, file: !600, line: 57, type: !507, isLocal: false, isDefinition: true, align: 16)
!614 = !DIGlobalVariableExpression(var: !615, expr: !DIExpression())
!615 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !595, file: !600, line: 64, type: !507, isLocal: false, isDefinition: true, align: 16)
!616 = !DIGlobalVariableExpression(var: !617, expr: !DIExpression())
!617 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !595, file: !600, line: 71, type: !507, isLocal: false, isDefinition: true, align: 16)
!618 = !DIGlobalVariableExpression(var: !619, expr: !DIExpression())
!619 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !595, file: !600, line: 78, type: !507, isLocal: false, isDefinition: true, align: 16)
!620 = !DIGlobalVariableExpression(var: !621, expr: !DIExpression())
!621 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !595, file: !600, line: 85, type: !507, isLocal: false, isDefinition: true, align: 16)
!622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 48, elements: !623)
!623 = !{!624}
!624 = !DISubrange(count: 3)
!625 = !DIGlobalVariableExpression(var: !626, expr: !DIExpression())
!626 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !627, file: !691, line: 398, type: !724, isLocal: true, isDefinition: true)
!627 = distinct !DICompileUnit(language: DW_LANG_C99, file: !628, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !629, retainedTypes: !642, globals: !688, splitDebugInlining: false, nameTableKind: None)
!628 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!629 = !{!630, !30, !635}
!630 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !631, line: 197, baseType: !32, size: 32, elements: !632)
!631 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!632 = !{!633, !634}
!633 = !DIEnumerator(name: "SUCCESS", value: 0)
!634 = !DIEnumerator(name: "ERROR", value: 1)
!635 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !636, line: 44, baseType: !32, size: 32, elements: !637)
!636 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!637 = !{!638, !639, !640, !641}
!638 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!639 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!640 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!641 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!642 = !{!102, !103, !121, !643, !681, !687}
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !645)
!645 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !646)
!646 = !{!647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !680}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !645, file: !116, line: 338, baseType: !120, size: 32)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !645, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !645, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !645, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !645, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !645, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !645, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !645, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !645, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !645, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !645, file: !116, line: 348, baseType: !658, size: 64, offset: 320)
!658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 64, elements: !242)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !645, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !645, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !645, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !645, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !645, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !645, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !645, file: !116, line: 355, baseType: !658, size: 64, offset: 576)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !645, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !645, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !645, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !645, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !645, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !645, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !645, file: !116, line: 362, baseType: !658, size: 64, offset: 832)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !645, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !645, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !645, file: !116, line: 365, baseType: !658, size: 64, offset: 960)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !645, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !645, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !645, file: !116, line: 368, baseType: !679, size: 32, offset: 1088)
!679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 32, elements: !345)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !645, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 32)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !683, line: 343, size: 64, elements: !684)
!683 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!684 = !{!685, !686}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !682, file: !683, line: 344, baseType: !121, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !682, file: !683, line: 345, baseType: !121, size: 32, offset: 32)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!688 = !{!689, !695, !711, !722, !625}
!689 = !DIGlobalVariableExpression(var: !690, expr: !DIExpression())
!690 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !627, file: !691, line: 752, type: !692, isLocal: false, isDefinition: true, align: 16)
!691 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 704, elements: !693)
!693 = !{!694}
!694 = !DISubrange(count: 44)
!695 = !DIGlobalVariableExpression(var: !696, expr: !DIExpression())
!696 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !627, file: !691, line: 752, type: !697, isLocal: false, isDefinition: true, align: 32)
!697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !698)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !699)
!699 = !{!700, !701, !702, !703, !709, !710}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !698, file: !141, line: 380, baseType: !144, size: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !698, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !698, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !698, file: !141, line: 386, baseType: !704, size: 32, offset: 96)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 32)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !706)
!706 = !{!707, !708}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !705, file: !141, line: 359, baseType: !154, size: 8)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !705, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !698, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !698, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!711 = !DIGlobalVariableExpression(var: !712, expr: !DIExpression())
!712 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !627, file: !691, line: 752, type: !713, isLocal: true, isDefinition: true, align: 32)
!713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !714)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !715)
!715 = !{!716, !721}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !714, file: !132, line: 60, baseType: !717, size: 32)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 32)
!718 = !DISubroutineType(types: !719)
!719 = !{!103, !720}
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 32)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !714, file: !132, line: 65, baseType: !720, size: 32, offset: 32)
!722 = !DIGlobalVariableExpression(var: !723, expr: !DIExpression())
!723 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !627, file: !691, line: 752, type: !705, isLocal: true, isDefinition: true, align: 8)
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !636, line: 100, size: 224, elements: !725)
!725 = !{!726, !732, !733, !742, !747, !752, !758}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !724, file: !636, line: 101, baseType: !727, size: 32)
!727 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !636, line: 76, baseType: !728)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 32)
!729 = !DISubroutineType(types: !730)
!730 = !{!103, !720, !731}
!731 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !636, line: 56, baseType: !102)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !724, file: !636, line: 102, baseType: !727, size: 32, offset: 32)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !724, file: !636, line: 103, baseType: !734, size: 32, offset: 64)
!734 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !636, line: 83, baseType: !735)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 32)
!736 = !DISubroutineType(types: !737)
!737 = !{!103, !720, !731, !738, !102}
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !636, line: 72, baseType: !739)
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 32)
!740 = !DISubroutineType(types: !741)
!741 = !{null, !720, !731, !102}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !724, file: !636, line: 104, baseType: !743, size: 32, offset: 96)
!743 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !636, line: 79, baseType: !744)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 32)
!745 = !DISubroutineType(types: !746)
!746 = !{!103, !720, !731, !687}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !724, file: !636, line: 105, baseType: !748, size: 32, offset: 128)
!748 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !636, line: 88, baseType: !749)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 32)
!750 = !DISubroutineType(types: !751)
!751 = !{!635, !720, !731}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !724, file: !636, line: 106, baseType: !753, size: 32, offset: 160)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !636, line: 92, baseType: !754)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 32)
!755 = !DISubroutineType(types: !756)
!756 = !{!103, !720, !731, !757}
!757 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !636, line: 64, baseType: !102)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !724, file: !636, line: 107, baseType: !759, size: 32, offset: 192)
!759 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !636, line: 96, baseType: !760)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 32)
!761 = !DISubroutineType(types: !762)
!762 = !{!103, !720, !731, !102}
!763 = !DIGlobalVariableExpression(var: !764, expr: !DIExpression())
!764 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !765, file: !822, line: 603, type: !824, isLocal: true, isDefinition: true, align: 32)
!765 = distinct !DICompileUnit(language: DW_LANG_C99, file: !766, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !767, globals: !819, splitDebugInlining: false, nameTableKind: None)
!766 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!767 = !{!102, !103, !768}
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 32)
!769 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !770)
!770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !771, line: 336, size: 160, elements: !772)
!771 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!772 = !{!773, !793, !797, !801, !814}
!773 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !770, file: !771, line: 365, baseType: !774, size: 32)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 32)
!775 = !DISubroutineType(types: !776)
!776 = !{!103, !777, !792}
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 32)
!778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !779)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !780)
!780 = !{!781, !782, !783, !784, !790, !791}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !779, file: !141, line: 380, baseType: !144, size: 32)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !779, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !779, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !779, file: !141, line: 386, baseType: !785, size: 32, offset: 96)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 32)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !787)
!787 = !{!788, !789}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !786, file: !141, line: 359, baseType: !154, size: 8)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !786, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !779, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !779, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !770, file: !771, line: 366, baseType: !794, size: 32, offset: 32)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 32)
!795 = !DISubroutineType(types: !796)
!796 = !{null, !777, !155}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !770, file: !771, line: 374, baseType: !798, size: 32, offset: 64)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 32)
!799 = !DISubroutineType(types: !800)
!800 = !{!103, !777}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !770, file: !771, line: 377, baseType: !802, size: 32, offset: 96)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 32)
!803 = !DISubroutineType(types: !804)
!804 = !{!103, !777, !805}
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !807)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !771, line: 122, size: 64, elements: !808)
!808 = !{!809, !810, !811, !812, !813}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !807, file: !771, line: 123, baseType: !121, size: 32)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !807, file: !771, line: 124, baseType: !154, size: 8, offset: 32)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !807, file: !771, line: 125, baseType: !154, size: 8, offset: 40)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !807, file: !771, line: 126, baseType: !154, size: 8, offset: 48)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !807, file: !771, line: 127, baseType: !154, size: 8, offset: 56)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !770, file: !771, line: 379, baseType: !815, size: 32, offset: 128)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 32)
!816 = !DISubroutineType(types: !817)
!817 = !{!103, !777, !818}
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 32)
!819 = !{!763, !820}
!820 = !DIGlobalVariableExpression(var: !821, expr: !DIExpression())
!821 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !765, file: !822, line: 38, type: !823, isLocal: true, isDefinition: true)
!822 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !777)
!824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !825)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !826)
!826 = !{!827, !828}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !825, file: !132, line: 60, baseType: !798, size: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !825, file: !132, line: 65, baseType: !777, size: 32, offset: 32)
!829 = !DIGlobalVariableExpression(var: !830, expr: !DIExpression())
!830 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !831, file: !1001, line: 762, type: !1110, isLocal: true, isDefinition: true)
!831 = distinct !DICompileUnit(language: DW_LANG_C99, file: !832, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !833, retainedTypes: !851, globals: !998, splitDebugInlining: false, nameTableKind: None)
!832 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!833 = !{!30, !834, !840, !845, !635}
!834 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !835, line: 506, baseType: !32, size: 32, elements: !836)
!835 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!836 = !{!837, !838, !839}
!837 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!838 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!839 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!840 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !835, line: 512, baseType: !32, size: 32, elements: !841)
!841 = !{!842, !843, !844}
!842 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!843 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!844 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!845 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !547, line: 43, baseType: !32, size: 32, elements: !846)
!846 = !{!847, !848, !849, !850}
!847 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!848 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!849 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!850 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!851 = !{!102, !103, !852, !922, !927, !887, !840, !834, !932, !933, !121, !947, !902, !957, !958, !959}
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 32)
!853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !854)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !835, line: 523, size: 288, elements: !855)
!855 = !{!856, !877, !883, !888, !892, !893, !894, !898, !918}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !854, file: !835, line: 524, baseType: !857, size: 32)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 32)
!858 = !DISubroutineType(types: !859)
!859 = !{!103, !860, !875, !876}
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 32)
!861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !862)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !863)
!863 = !{!864, !865, !866, !867, !873, !874}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !862, file: !141, line: 380, baseType: !144, size: 32)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !862, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !862, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !862, file: !141, line: 386, baseType: !868, size: 32, offset: 96)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 32)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !870)
!870 = !{!871, !872}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !869, file: !141, line: 359, baseType: !154, size: 8)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !869, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !862, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !862, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !835, line: 237, baseType: !154)
!876 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !835, line: 257, baseType: !121)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !854, file: !835, line: 530, baseType: !878, size: 32, offset: 32)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!879 = !DISubroutineType(types: !880)
!880 = !{!103, !860, !881}
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 32)
!882 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !835, line: 229, baseType: !121)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !854, file: !835, line: 532, baseType: !884, size: 32, offset: 64)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 32)
!885 = !DISubroutineType(types: !886)
!886 = !{!103, !860, !887, !882}
!887 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !835, line: 216, baseType: !121)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !854, file: !835, line: 535, baseType: !889, size: 32, offset: 96)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 32)
!890 = !DISubroutineType(types: !891)
!891 = !{!103, !860, !887}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !854, file: !835, line: 537, baseType: !889, size: 32, offset: 128)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !854, file: !835, line: 539, baseType: !889, size: 32, offset: 160)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !854, file: !835, line: 541, baseType: !895, size: 32, offset: 192)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 32)
!896 = !DISubroutineType(types: !897)
!897 = !{!103, !860, !875, !834, !840}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !854, file: !835, line: 544, baseType: !899, size: 32, offset: 224)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 32)
!900 = !DISubroutineType(types: !901)
!901 = !{!103, !860, !902, !157}
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 32)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !835, line: 478, size: 96, elements: !904)
!904 = !{!905, !912, !917}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !903, file: !835, line: 482, baseType: !906, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !907, line: 33, baseType: !908)
!907 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !907, line: 29, size: 32, elements: !909)
!909 = !{!910}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !908, file: !907, line: 30, baseType: !911, size: 32)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 32)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !903, file: !835, line: 485, baseType: !913, size: 32, offset: 32)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !835, line: 464, baseType: !914)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DISubroutineType(types: !916)
!916 = !{null, !860, !902, !887}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !903, file: !835, line: 493, baseType: !887, size: 32, offset: 64)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !854, file: !835, line: 547, baseType: !919, size: 32, offset: 256)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32)
!920 = !DISubroutineType(types: !921)
!921 = !{!121, !860}
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 32)
!923 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !924)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !835, line: 428, size: 32, elements: !925)
!925 = !{!926}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !924, file: !835, line: 434, baseType: !887, size: 32)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 32)
!928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !929)
!929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !835, line: 441, size: 32, elements: !930)
!930 = !{!931}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !929, file: !835, line: 447, baseType: !887, size: 32)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 32)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 276, baseType: !935)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 265, size: 320, elements: !936)
!936 = !{!937, !938, !939, !940, !941, !942, !943, !944, !945}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !935, file: !116, line: 267, baseType: !120, size: 32)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !935, file: !116, line: 268, baseType: !120, size: 32, offset: 32)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !935, file: !116, line: 269, baseType: !120, size: 32, offset: 64)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !935, file: !116, line: 270, baseType: !120, size: 32, offset: 96)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !935, file: !116, line: 271, baseType: !120, size: 32, offset: 128)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !935, file: !116, line: 272, baseType: !120, size: 32, offset: 160)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !935, file: !116, line: 273, baseType: !120, size: 32, offset: 192)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !935, file: !116, line: 274, baseType: !120, size: 32, offset: 224)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !935, file: !116, line: 275, baseType: !946, size: 64, offset: 256)
!946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !242)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !116, line: 289, baseType: !949)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 282, size: 288, elements: !950)
!950 = !{!951, !952, !953, !955, !956}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !949, file: !116, line: 284, baseType: !120, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !949, file: !116, line: 285, baseType: !120, size: 32, offset: 32)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !949, file: !116, line: 286, baseType: !954, size: 128, offset: 64)
!954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !508)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !949, file: !116, line: 287, baseType: !658, size: 64, offset: 192)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !949, file: !116, line: 288, baseType: !120, size: 32, offset: 256)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 32)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 32)
!960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !961)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !636, line: 100, size: 224, elements: !962)
!962 = !{!963, !968, !969, !978, !983, !988, !993}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !961, file: !636, line: 101, baseType: !964, size: 32)
!964 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !636, line: 76, baseType: !965)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 32)
!966 = !DISubroutineType(types: !967)
!967 = !{!103, !860, !731}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !961, file: !636, line: 102, baseType: !964, size: 32, offset: 32)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !961, file: !636, line: 103, baseType: !970, size: 32, offset: 64)
!970 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !636, line: 83, baseType: !971)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 32)
!972 = !DISubroutineType(types: !973)
!973 = !{!103, !860, !731, !974, !102}
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !636, line: 72, baseType: !975)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 32)
!976 = !DISubroutineType(types: !977)
!977 = !{null, !860, !731, !102}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !961, file: !636, line: 104, baseType: !979, size: 32, offset: 96)
!979 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !636, line: 79, baseType: !980)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 32)
!981 = !DISubroutineType(types: !982)
!982 = !{!103, !860, !731, !687}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !961, file: !636, line: 105, baseType: !984, size: 32, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !636, line: 88, baseType: !985)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 32)
!986 = !DISubroutineType(types: !987)
!987 = !{!635, !860, !731}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !961, file: !636, line: 106, baseType: !989, size: 32, offset: 160)
!989 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !636, line: 92, baseType: !990)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!991 = !DISubroutineType(types: !992)
!992 = !{!103, !860, !731, !757}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !961, file: !636, line: 107, baseType: !994, size: 32, offset: 192)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !636, line: 96, baseType: !995)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!996 = !DISubroutineType(types: !997)
!997 = !{!103, !860, !731, !102}
!998 = !{!999, !1005, !1007, !1017, !1022, !1024, !1026, !1028, !1030, !1032, !1034, !1036, !1038, !1040, !1042, !1044, !1046, !1048, !1050, !1052, !1054, !1056, !1058, !1060, !1062, !1076, !1078, !1080, !1082, !1084, !1086, !1088, !1090, !1092, !1094, !1096, !1098, !1100, !1102, !1104, !829, !1106, !1108, !1121, !1123, !1125, !1127, !1129, !1131}
!999 = !DIGlobalVariableExpression(var: !1000, expr: !DIExpression())
!1000 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !831, file: !1001, line: 762, type: !1002, isLocal: false, isDefinition: true, align: 16)
!1001 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 80, elements: !1003)
!1003 = !{!1004}
!1004 = !DISubrange(count: 5)
!1005 = !DIGlobalVariableExpression(var: !1006, expr: !DIExpression())
!1006 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !831, file: !1001, line: 762, type: !861, isLocal: false, isDefinition: true, align: 32)
!1007 = !DIGlobalVariableExpression(var: !1008, expr: !DIExpression())
!1008 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !831, file: !1001, line: 762, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1010)
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1011)
!1011 = !{!1012, !1016}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1010, file: !132, line: 60, baseType: !1013, size: 32)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 32)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!103, !860}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1010, file: !132, line: 65, baseType: !860, size: 32, offset: 32)
!1017 = !DIGlobalVariableExpression(var: !1018, expr: !DIExpression())
!1018 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !831, file: !1001, line: 766, type: !1019, isLocal: false, isDefinition: true, align: 16)
!1019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 160, elements: !1020)
!1020 = !{!1021}
!1021 = !DISubrange(count: 10)
!1022 = !DIGlobalVariableExpression(var: !1023, expr: !DIExpression())
!1023 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !831, file: !1001, line: 766, type: !861, isLocal: false, isDefinition: true, align: 32)
!1024 = !DIGlobalVariableExpression(var: !1025, expr: !DIExpression())
!1025 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !831, file: !1001, line: 766, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1026 = !DIGlobalVariableExpression(var: !1027, expr: !DIExpression())
!1027 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !831, file: !1001, line: 770, type: !1002, isLocal: false, isDefinition: true, align: 16)
!1028 = !DIGlobalVariableExpression(var: !1029, expr: !DIExpression())
!1029 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !831, file: !1001, line: 770, type: !861, isLocal: false, isDefinition: true, align: 32)
!1030 = !DIGlobalVariableExpression(var: !1031, expr: !DIExpression())
!1031 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !831, file: !1001, line: 770, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1032 = !DIGlobalVariableExpression(var: !1033, expr: !DIExpression())
!1033 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !831, file: !1001, line: 774, type: !1002, isLocal: false, isDefinition: true, align: 16)
!1034 = !DIGlobalVariableExpression(var: !1035, expr: !DIExpression())
!1035 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !831, file: !1001, line: 774, type: !861, isLocal: false, isDefinition: true, align: 32)
!1036 = !DIGlobalVariableExpression(var: !1037, expr: !DIExpression())
!1037 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !831, file: !1001, line: 774, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1038 = !DIGlobalVariableExpression(var: !1039, expr: !DIExpression())
!1039 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !831, file: !1001, line: 778, type: !1002, isLocal: false, isDefinition: true, align: 16)
!1040 = !DIGlobalVariableExpression(var: !1041, expr: !DIExpression())
!1041 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !831, file: !1001, line: 778, type: !861, isLocal: false, isDefinition: true, align: 32)
!1042 = !DIGlobalVariableExpression(var: !1043, expr: !DIExpression())
!1043 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !831, file: !1001, line: 778, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1044 = !DIGlobalVariableExpression(var: !1045, expr: !DIExpression())
!1045 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !831, file: !1001, line: 782, type: !1002, isLocal: false, isDefinition: true, align: 16)
!1046 = !DIGlobalVariableExpression(var: !1047, expr: !DIExpression())
!1047 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !831, file: !1001, line: 782, type: !861, isLocal: false, isDefinition: true, align: 32)
!1048 = !DIGlobalVariableExpression(var: !1049, expr: !DIExpression())
!1049 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !831, file: !1001, line: 782, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1050 = !DIGlobalVariableExpression(var: !1051, expr: !DIExpression())
!1051 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !831, file: !1001, line: 786, type: !1002, isLocal: false, isDefinition: true, align: 16)
!1052 = !DIGlobalVariableExpression(var: !1053, expr: !DIExpression())
!1053 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !831, file: !1001, line: 786, type: !861, isLocal: false, isDefinition: true, align: 32)
!1054 = !DIGlobalVariableExpression(var: !1055, expr: !DIExpression())
!1055 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !831, file: !1001, line: 786, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1056 = !DIGlobalVariableExpression(var: !1057, expr: !DIExpression())
!1057 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !831, file: !1001, line: 790, type: !1002, isLocal: false, isDefinition: true, align: 16)
!1058 = !DIGlobalVariableExpression(var: !1059, expr: !DIExpression())
!1059 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !831, file: !1001, line: 790, type: !861, isLocal: false, isDefinition: true, align: 32)
!1060 = !DIGlobalVariableExpression(var: !1061, expr: !DIExpression())
!1061 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !831, file: !1001, line: 790, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1062 = !DIGlobalVariableExpression(var: !1063, expr: !DIExpression())
!1063 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !831, file: !1001, line: 762, type: !1064, isLocal: true, isDefinition: true)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1065, line: 237, size: 128, elements: !1066)
!1065 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1066 = !{!1067, !1068, !1069}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1064, file: !1065, line: 239, baseType: !929, size: 32)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1064, file: !1065, line: 241, baseType: !860, size: 32, offset: 32)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1064, file: !1065, line: 243, baseType: !1070, size: 64, offset: 64)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !907, line: 40, baseType: !1071)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !907, line: 35, size: 64, elements: !1072)
!1072 = !{!1073, !1075}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1071, file: !907, line: 36, baseType: !1074, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1071, file: !907, line: 37, baseType: !1074, size: 32, offset: 32)
!1076 = !DIGlobalVariableExpression(var: !1077, expr: !DIExpression())
!1077 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !831, file: !1001, line: 762, type: !869, isLocal: true, isDefinition: true, align: 8)
!1078 = !DIGlobalVariableExpression(var: !1079, expr: !DIExpression())
!1079 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !831, file: !1001, line: 766, type: !1064, isLocal: true, isDefinition: true)
!1080 = !DIGlobalVariableExpression(var: !1081, expr: !DIExpression())
!1081 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !831, file: !1001, line: 766, type: !869, isLocal: true, isDefinition: true, align: 8)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !831, file: !1001, line: 770, type: !1064, isLocal: true, isDefinition: true)
!1084 = !DIGlobalVariableExpression(var: !1085, expr: !DIExpression())
!1085 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !831, file: !1001, line: 770, type: !869, isLocal: true, isDefinition: true, align: 8)
!1086 = !DIGlobalVariableExpression(var: !1087, expr: !DIExpression())
!1087 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !831, file: !1001, line: 774, type: !1064, isLocal: true, isDefinition: true)
!1088 = !DIGlobalVariableExpression(var: !1089, expr: !DIExpression())
!1089 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !831, file: !1001, line: 774, type: !869, isLocal: true, isDefinition: true, align: 8)
!1090 = !DIGlobalVariableExpression(var: !1091, expr: !DIExpression())
!1091 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !831, file: !1001, line: 778, type: !1064, isLocal: true, isDefinition: true)
!1092 = !DIGlobalVariableExpression(var: !1093, expr: !DIExpression())
!1093 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !831, file: !1001, line: 778, type: !869, isLocal: true, isDefinition: true, align: 8)
!1094 = !DIGlobalVariableExpression(var: !1095, expr: !DIExpression())
!1095 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !831, file: !1001, line: 782, type: !1064, isLocal: true, isDefinition: true)
!1096 = !DIGlobalVariableExpression(var: !1097, expr: !DIExpression())
!1097 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !831, file: !1001, line: 782, type: !869, isLocal: true, isDefinition: true, align: 8)
!1098 = !DIGlobalVariableExpression(var: !1099, expr: !DIExpression())
!1099 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !831, file: !1001, line: 786, type: !1064, isLocal: true, isDefinition: true)
!1100 = !DIGlobalVariableExpression(var: !1101, expr: !DIExpression())
!1101 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !831, file: !1001, line: 786, type: !869, isLocal: true, isDefinition: true, align: 8)
!1102 = !DIGlobalVariableExpression(var: !1103, expr: !DIExpression())
!1103 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !831, file: !1001, line: 790, type: !1064, isLocal: true, isDefinition: true)
!1104 = !DIGlobalVariableExpression(var: !1105, expr: !DIExpression())
!1105 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !831, file: !1001, line: 790, type: !869, isLocal: true, isDefinition: true, align: 8)
!1106 = !DIGlobalVariableExpression(var: !1107, expr: !DIExpression())
!1107 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !831, file: !1001, line: 656, type: !853, isLocal: true, isDefinition: true)
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !831, file: !1001, line: 766, type: !1110, isLocal: true, isDefinition: true)
!1110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1111)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1065, line: 224, size: 160, elements: !1112)
!1112 = !{!1113, !1114, !1115, !1116}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1111, file: !1065, line: 226, baseType: !924, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1111, file: !1065, line: 228, baseType: !687, size: 32, offset: 32)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1111, file: !1065, line: 230, baseType: !103, size: 32, offset: 64)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1111, file: !1065, line: 231, baseType: !1117, size: 64, offset: 96)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !683, line: 343, size: 64, elements: !1118)
!1118 = !{!1119, !1120}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1117, file: !683, line: 344, baseType: !121, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1117, file: !683, line: 345, baseType: !121, size: 32, offset: 32)
!1121 = !DIGlobalVariableExpression(var: !1122, expr: !DIExpression())
!1122 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !831, file: !1001, line: 770, type: !1110, isLocal: true, isDefinition: true)
!1123 = !DIGlobalVariableExpression(var: !1124, expr: !DIExpression())
!1124 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !831, file: !1001, line: 774, type: !1110, isLocal: true, isDefinition: true)
!1125 = !DIGlobalVariableExpression(var: !1126, expr: !DIExpression())
!1126 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !831, file: !1001, line: 778, type: !1110, isLocal: true, isDefinition: true)
!1127 = !DIGlobalVariableExpression(var: !1128, expr: !DIExpression())
!1128 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !831, file: !1001, line: 782, type: !1110, isLocal: true, isDefinition: true)
!1129 = !DIGlobalVariableExpression(var: !1130, expr: !DIExpression())
!1130 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !831, file: !1001, line: 786, type: !1110, isLocal: true, isDefinition: true)
!1131 = !DIGlobalVariableExpression(var: !1132, expr: !DIExpression())
!1132 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !831, file: !1001, line: 790, type: !1110, isLocal: true, isDefinition: true)
!1133 = !DIGlobalVariableExpression(var: !1134, expr: !DIExpression())
!1134 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1135, file: !1276, line: 1914, type: !1337, isLocal: true, isDefinition: true)
!1135 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1136, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1137, retainedTypes: !1170, globals: !1273, splitDebugInlining: false, nameTableKind: None)
!1136 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!1137 = !{!30, !1138, !1145, !1152, !1159, !1165, !635}
!1138 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !771, line: 47, baseType: !32, size: 32, elements: !1139)
!1139 = !{!1140, !1141, !1142, !1143, !1144}
!1140 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1141 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1142 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1143 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1144 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !771, line: 75, baseType: !32, size: 32, elements: !1146)
!1146 = !{!1147, !1148, !1149, !1150, !1151}
!1147 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1148 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1149 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1150 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1151 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !771, line: 92, baseType: !32, size: 32, elements: !1153)
!1153 = !{!1154, !1155, !1156, !1157, !1158}
!1154 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1155 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1156 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1157 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1158 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1159 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !771, line: 84, baseType: !32, size: 32, elements: !1160)
!1160 = !{!1161, !1162, !1163, !1164}
!1161 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1162 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1163 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1164 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !771, line: 107, baseType: !32, size: 32, elements: !1166)
!1166 = !{!1167, !1168, !1169}
!1167 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1168 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1169 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1170 = !{!102, !103, !1171, !155, !154, !1220, !121, !731, !1231, !265, !1270, !1272}
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1173)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !771, line: 336, size: 160, elements: !1174)
!1174 = !{!1175, !1194, !1198, !1202, !1215}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1173, file: !771, line: 365, baseType: !1176, size: 32)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 32)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{!103, !1179, !792}
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 32)
!1180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1181)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1182)
!1182 = !{!1183, !1184, !1185, !1186, !1192, !1193}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1181, file: !141, line: 380, baseType: !144, size: 32)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1181, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1181, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1181, file: !141, line: 386, baseType: !1187, size: 32, offset: 96)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1189)
!1189 = !{!1190, !1191}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1188, file: !141, line: 359, baseType: !154, size: 8)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1188, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1181, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1181, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1173, file: !771, line: 366, baseType: !1195, size: 32, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 32)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{null, !1179, !155}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1173, file: !771, line: 374, baseType: !1199, size: 32, offset: 64)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!103, !1179}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1173, file: !771, line: 377, baseType: !1203, size: 32, offset: 96)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 32)
!1204 = !DISubroutineType(types: !1205)
!1205 = !{!103, !1179, !1206}
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!1207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !771, line: 122, size: 64, elements: !1209)
!1209 = !{!1210, !1211, !1212, !1213, !1214}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1208, file: !771, line: 123, baseType: !121, size: 32)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1208, file: !771, line: 124, baseType: !154, size: 8, offset: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1208, file: !771, line: 125, baseType: !154, size: 8, offset: 40)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1208, file: !771, line: 126, baseType: !154, size: 8, offset: 48)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1208, file: !771, line: 127, baseType: !154, size: 8, offset: 56)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1173, file: !771, line: 379, baseType: !1216, size: 32, offset: 128)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{!103, !1179, !1219}
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 32)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !116, line: 508, baseType: !1222)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 499, size: 224, elements: !1223)
!1223 = !{!1224, !1225, !1226, !1227, !1228, !1229, !1230}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1222, file: !116, line: 501, baseType: !120, size: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1222, file: !116, line: 502, baseType: !120, size: 32, offset: 32)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1222, file: !116, line: 503, baseType: !120, size: 32, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1222, file: !116, line: 504, baseType: !120, size: 32, offset: 96)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1222, file: !116, line: 505, baseType: !120, size: 32, offset: 128)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1222, file: !116, line: 506, baseType: !120, size: 32, offset: 160)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1222, file: !116, line: 507, baseType: !120, size: 32, offset: 192)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1233)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !636, line: 100, size: 224, elements: !1234)
!1234 = !{!1235, !1240, !1241, !1250, !1255, !1260, !1265}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1233, file: !636, line: 101, baseType: !1236, size: 32)
!1236 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !636, line: 76, baseType: !1237)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!103, !1179, !731}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1233, file: !636, line: 102, baseType: !1236, size: 32, offset: 32)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1233, file: !636, line: 103, baseType: !1242, size: 32, offset: 64)
!1242 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !636, line: 83, baseType: !1243)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1244 = !DISubroutineType(types: !1245)
!1245 = !{!103, !1179, !731, !1246, !102}
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !636, line: 72, baseType: !1247)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 32)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{null, !1179, !731, !102}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1233, file: !636, line: 104, baseType: !1251, size: 32, offset: 96)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !636, line: 79, baseType: !1252)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{!103, !1179, !731, !687}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1233, file: !636, line: 105, baseType: !1256, size: 32, offset: 128)
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !636, line: 88, baseType: !1257)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 32)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!635, !1179, !731}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1233, file: !636, line: 106, baseType: !1261, size: 32, offset: 160)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !636, line: 92, baseType: !1262)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!103, !1179, !731, !757}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1233, file: !636, line: 107, baseType: !1266, size: 32, offset: 192)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !636, line: 96, baseType: !1267)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!103, !1179, !731, !102}
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1271)
!1271 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!1273 = !{!1274, !1280, !1282, !1289, !1133, !1291, !1299, !1322, !1325, !1328, !1330}
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1135, file: !1276, line: 1914, type: !1277, isLocal: false, isDefinition: true, align: 16)
!1276 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 128, elements: !1278)
!1278 = !{!1279}
!1279 = !DISubrange(count: 8)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1135, file: !1276, line: 1914, type: !1180, isLocal: false, isDefinition: true, align: 32)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1135, file: !1276, line: 1914, type: !1284, isLocal: true, isDefinition: true, align: 32)
!1284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1285)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1286)
!1286 = !{!1287, !1288}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1285, file: !132, line: 60, baseType: !1199, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1285, file: !132, line: 65, baseType: !1179, size: 32, offset: 32)
!1289 = !DIGlobalVariableExpression(var: !1290, expr: !DIExpression())
!1290 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1135, file: !1276, line: 1914, type: !1188, isLocal: true, isDefinition: true, align: 8)
!1291 = !DIGlobalVariableExpression(var: !1292, expr: !DIExpression())
!1292 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1135, file: !1276, line: 1914, type: !1293, isLocal: true, isDefinition: true)
!1293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 64, elements: !345)
!1294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1295)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !683, line: 343, size: 64, elements: !1296)
!1296 = !{!1297, !1298}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1295, file: !683, line: 344, baseType: !121, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1295, file: !683, line: 345, baseType: !121, size: 32, offset: 32)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1135, file: !1276, line: 1914, type: !1301, isLocal: true, isDefinition: true)
!1301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1302)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1303, line: 60, size: 64, elements: !1304)
!1303 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1304 = !{!1305, !1321}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1302, file: !1303, line: 69, baseType: !1306, size: 32)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 32)
!1307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1308)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1303, line: 50, size: 64, elements: !1309)
!1309 = !{!1310, !1319, !1320}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1308, file: !1303, line: 52, baseType: !1311, size: 32)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1313)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1314, line: 37, baseType: !1315)
!1314 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1314, line: 32, size: 64, elements: !1316)
!1316 = !{!1317, !1318}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1315, file: !1314, line: 34, baseType: !121, size: 32)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1315, file: !1314, line: 36, baseType: !121, size: 32, offset: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1308, file: !1303, line: 54, baseType: !154, size: 8, offset: 32)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1308, file: !1303, line: 56, baseType: !154, size: 8, offset: 40)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1302, file: !1303, line: 71, baseType: !154, size: 8, offset: 32)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1135, file: !1276, line: 1914, type: !1324, isLocal: true, isDefinition: true)
!1324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1307, size: 64, elements: !345)
!1325 = !DIGlobalVariableExpression(var: !1326, expr: !DIExpression())
!1326 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1135, file: !1276, line: 1914, type: !1327, isLocal: true, isDefinition: true)
!1327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1312, size: 128, elements: !242)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1135, file: !1276, line: 1539, type: !1172, isLocal: true, isDefinition: true)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1135, file: !1276, line: 1914, type: !1332, isLocal: true, isDefinition: true)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1333, line: 74, size: 64, elements: !1334)
!1333 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1334 = !{!1335, !1336}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1332, file: !1333, line: 76, baseType: !121, size: 32)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1332, file: !1333, line: 78, baseType: !1179, size: 32, offset: 32)
!1337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1338)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1333, line: 22, size: 224, elements: !1339)
!1339 = !{!1340, !1341, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1338, file: !1333, line: 24, baseType: !1220, size: 32)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1338, file: !1333, line: 26, baseType: !1342, size: 32, offset: 32)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 32)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1338, file: !1333, line: 28, baseType: !200, size: 32, offset: 64)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1338, file: !1333, line: 30, baseType: !157, size: 8, offset: 96)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1338, file: !1333, line: 32, baseType: !103, size: 32, offset: 128)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1338, file: !1333, line: 34, baseType: !157, size: 8, offset: 160)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1338, file: !1333, line: 36, baseType: !157, size: 8, offset: 168)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1338, file: !1333, line: 38, baseType: !157, size: 8, offset: 176)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1338, file: !1333, line: 40, baseType: !157, size: 8, offset: 184)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1338, file: !1333, line: 41, baseType: !1351, size: 32, offset: 192)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 32)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1354, file: !1432, line: 65, type: !120, isLocal: true, isDefinition: true)
!1354 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1355, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1356, retainedTypes: !1357, globals: !1429, splitDebugInlining: false, nameTableKind: None)
!1355 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!1356 = !{!425}
!1357 = !{!1358, !1360, !566, !154, !121, !1368, !1399}
!1358 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1359, line: 46, baseType: !280)
!1359 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 32)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !356, line: 770, baseType: !1362)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 764, size: 128, elements: !1363)
!1363 = !{!1364, !1365, !1366, !1367}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1362, file: !356, line: 766, baseType: !120, size: 32)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1362, file: !356, line: 767, baseType: !120, size: 32, offset: 32)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1362, file: !356, line: 768, baseType: !120, size: 32, offset: 64)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1362, file: !356, line: 769, baseType: !360, size: 32, offset: 96)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 32)
!1369 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !1370)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !1371)
!1371 = !{!1372, !1374, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1389, !1394, !1398}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1370, file: !356, line: 413, baseType: !1373, size: 256)
!1373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1278)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1370, file: !356, line: 414, baseType: !1375, size: 768, offset: 256)
!1375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1376)
!1376 = !{!1377}
!1377 = !DISubrange(count: 24)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1370, file: !356, line: 415, baseType: !1373, size: 256, offset: 1024)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1370, file: !356, line: 416, baseType: !1375, size: 768, offset: 1280)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1370, file: !356, line: 417, baseType: !1373, size: 256, offset: 2048)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1370, file: !356, line: 418, baseType: !1375, size: 768, offset: 2304)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1370, file: !356, line: 419, baseType: !1373, size: 256, offset: 3072)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1370, file: !356, line: 420, baseType: !1375, size: 768, offset: 3328)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1370, file: !356, line: 421, baseType: !1373, size: 256, offset: 4096)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1370, file: !356, line: 422, baseType: !1386, size: 1792, offset: 4352)
!1386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1387)
!1387 = !{!1388}
!1388 = !DISubrange(count: 56)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1370, file: !356, line: 423, baseType: !1390, size: 1920, offset: 6144)
!1390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1391, size: 1920, elements: !1392)
!1391 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !154)
!1392 = !{!1393}
!1393 = !DISubrange(count: 240)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1370, file: !356, line: 424, baseType: !1395, size: 20608, offset: 8064)
!1395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1396)
!1396 = !{!1397}
!1397 = !DISubrange(count: 644)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1370, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 32)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !1401)
!1401 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !1402)
!1402 = !{!1403, !1404, !1405, !1406, !1407, !1408, !1409, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1420, !1421, !1422, !1424, !1426, !1428}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1401, file: !356, line: 447, baseType: !360, size: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1401, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1401, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1401, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1401, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1401, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1401, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!1410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1391, size: 96, elements: !602)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1401, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1401, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1401, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1401, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1401, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1401, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1401, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1401, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!1419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 64, elements: !242)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1401, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1401, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1401, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!1423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 128, elements: !508)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1401, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!1425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 160, elements: !1003)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1401, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!1427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !1003)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1401, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!1429 = !{!1430, !1456, !1459, !1461, !1463, !1352}
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1354, file: !1432, line: 285, type: !1433, isLocal: true, isDefinition: true, align: 32)
!1432 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1434)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1435)
!1435 = !{!1436, !1455}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1434, file: !132, line: 60, baseType: !1437, size: 32)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 32)
!1438 = !DISubroutineType(types: !1439)
!1439 = !{!103, !1440}
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 32)
!1441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1442)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1443)
!1443 = !{!1444, !1445, !1446, !1447, !1453, !1454}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1442, file: !141, line: 380, baseType: !144, size: 32)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1442, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1442, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1442, file: !141, line: 386, baseType: !1448, size: 32, offset: 96)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 32)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1450)
!1450 = !{!1451, !1452}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1449, file: !141, line: 359, baseType: !154, size: 8)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1449, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1442, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1442, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1434, file: !132, line: 65, baseType: !1440, size: 32, offset: 32)
!1456 = !DIGlobalVariableExpression(var: !1457, expr: !DIExpression())
!1457 = distinct !DIGlobalVariable(name: "lock", scope: !1354, file: !1432, line: 34, type: !1458, isLocal: true, isDefinition: true)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!1459 = !DIGlobalVariableExpression(var: !1460, expr: !DIExpression())
!1460 = distinct !DIGlobalVariable(name: "last_load", scope: !1354, file: !1432, line: 36, type: !121, isLocal: true, isDefinition: true)
!1461 = !DIGlobalVariableExpression(var: !1462, expr: !DIExpression())
!1462 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1354, file: !1432, line: 48, type: !121, isLocal: true, isDefinition: true)
!1463 = !DIGlobalVariableExpression(var: !1464, expr: !DIExpression())
!1464 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1354, file: !1432, line: 54, type: !121, isLocal: true, isDefinition: true)
!1465 = !DIGlobalVariableExpression(var: !1466, expr: !DIExpression())
!1466 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1467, file: !1549, line: 22, type: !1551, isLocal: true, isDefinition: true)
!1467 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1468, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1469, retainedTypes: !1470, globals: !1546, splitDebugInlining: false, nameTableKind: None)
!1468 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!1469 = !{!834, !840}
!1470 = !{!1471, !1535, !1540, !887, !840, !834, !1545, !102}
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1473)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !835, line: 523, size: 288, elements: !1474)
!1474 = !{!1475, !1494, !1498, !1502, !1506, !1507, !1508, !1512, !1531}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1473, file: !835, line: 524, baseType: !1476, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 32)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{!103, !1479, !875, !876}
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1481)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1482)
!1482 = !{!1483, !1484, !1485, !1486, !1492, !1493}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1481, file: !141, line: 380, baseType: !144, size: 32)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1481, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1481, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1481, file: !141, line: 386, baseType: !1487, size: 32, offset: 96)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1489)
!1489 = !{!1490, !1491}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1488, file: !141, line: 359, baseType: !154, size: 8)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1488, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1481, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1481, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1473, file: !835, line: 530, baseType: !1495, size: 32, offset: 32)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = !DISubroutineType(types: !1497)
!1497 = !{!103, !1479, !881}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1473, file: !835, line: 532, baseType: !1499, size: 32, offset: 64)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 32)
!1500 = !DISubroutineType(types: !1501)
!1501 = !{!103, !1479, !887, !882}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1473, file: !835, line: 535, baseType: !1503, size: 32, offset: 96)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 32)
!1504 = !DISubroutineType(types: !1505)
!1505 = !{!103, !1479, !887}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1473, file: !835, line: 537, baseType: !1503, size: 32, offset: 128)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1473, file: !835, line: 539, baseType: !1503, size: 32, offset: 160)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1473, file: !835, line: 541, baseType: !1509, size: 32, offset: 192)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 32)
!1510 = !DISubroutineType(types: !1511)
!1511 = !{!103, !1479, !875, !834, !840}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1473, file: !835, line: 544, baseType: !1513, size: 32, offset: 224)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 32)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!103, !1479, !1516, !157}
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 32)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !835, line: 478, size: 96, elements: !1518)
!1518 = !{!1519, !1525, !1530}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1517, file: !835, line: 482, baseType: !1520, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !907, line: 33, baseType: !1521)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !907, line: 29, size: 32, elements: !1522)
!1522 = !{!1523}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1521, file: !907, line: 30, baseType: !1524, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1517, file: !835, line: 485, baseType: !1526, size: 32, offset: 32)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !835, line: 464, baseType: !1527)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 32)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{null, !1479, !1516, !887}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1517, file: !835, line: 493, baseType: !887, size: 32, offset: 64)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1473, file: !835, line: 547, baseType: !1532, size: 32, offset: 256)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 32)
!1533 = !DISubroutineType(types: !1534)
!1534 = !{!121, !1479}
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1537)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !835, line: 428, size: 32, elements: !1538)
!1538 = !{!1539}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1537, file: !835, line: 434, baseType: !887, size: 32)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1542)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !835, line: 441, size: 32, elements: !1543)
!1543 = !{!1544}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1542, file: !835, line: 447, baseType: !887, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 32)
!1546 = !{!1547, !1465}
!1547 = !DIGlobalVariableExpression(var: !1548, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1548 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1467, file: !1549, line: 37, type: !1550, isLocal: true, isDefinition: true)
!1549 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !200)
!1551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, size: 352, elements: !1553)
!1552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1479)
!1553 = !{!1554}
!1554 = !DISubrange(count: 11)
!1555 = !DIGlobalVariableExpression(var: !1556, expr: !DIExpression())
!1556 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1557, file: !1599, line: 139, type: !1606, isLocal: false, isDefinition: true)
!1557 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1558, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1559, globals: !1596, splitDebugInlining: false, nameTableKind: None)
!1558 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!1559 = !{!1560}
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !1562)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !1563)
!1563 = !{!1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1562, file: !116, line: 338, baseType: !120, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1562, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1562, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1562, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1562, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1562, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1562, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1562, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1562, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1562, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1562, file: !116, line: 348, baseType: !658, size: 64, offset: 320)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1562, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1562, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1562, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1562, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1562, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1562, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1562, file: !116, line: 355, baseType: !658, size: 64, offset: 576)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1562, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1562, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1562, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1562, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1562, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1562, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1562, file: !116, line: 362, baseType: !658, size: 64, offset: 832)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1562, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1562, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1562, file: !116, line: 365, baseType: !658, size: 64, offset: 960)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1562, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1562, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1562, file: !116, line: 368, baseType: !679, size: 32, offset: 1088)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1562, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!1596 = !{!1597, !1600, !1555}
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1557, file: !1599, line: 137, type: !121, isLocal: false, isDefinition: true)
!1599 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1600 = !DIGlobalVariableExpression(var: !1601, expr: !DIExpression())
!1601 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1557, file: !1599, line: 138, type: !1602, isLocal: false, isDefinition: true)
!1602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1603, size: 128, elements: !1604)
!1603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!1604 = !{!1605}
!1605 = !DISubrange(count: 16)
!1606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1603, size: 64, elements: !1278)
!1607 = !DIGlobalVariableExpression(var: !1608, expr: !DIExpression())
!1608 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1609, file: !1612, line: 23, type: !1613, isLocal: false, isDefinition: true)
!1609 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1610, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1611, splitDebugInlining: false, nameTableKind: None)
!1610 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!1611 = !{!1607}
!1612 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1616, file: !1620, line: 86, type: !1870, isLocal: false, isDefinition: true, align: 512)
!1616 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1617, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1618, retainedTypes: !1627, globals: !1701, splitDebugInlining: false, nameTableKind: None)
!1617 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!1618 = !{!1619, !30, !425}
!1619 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1620, line: 63, baseType: !32, size: 32, elements: !1621)
!1620 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1621 = !{!1622, !1623, !1624, !1625, !1626}
!1622 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1623 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1624 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1625 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1626 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1627 = !{!200, !102, !103, !1628, !957, !121, !1659, !566, !154, !1684}
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1630)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1631, line: 51, size: 64, elements: !1632)
!1631 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1632 = !{!1633, !1654}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1630, file: !1631, line: 52, baseType: !1634, size: 32)
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1631, line: 38, baseType: !1635)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!1636 = !DISubroutineType(types: !1637)
!1637 = !{!103, !1638, !1653, !265}
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1640)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1641)
!1641 = !{!1642, !1643, !1644, !1645, !1651, !1652}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1640, file: !141, line: 380, baseType: !144, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1640, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1640, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1640, file: !141, line: 386, baseType: !1646, size: 32, offset: 96)
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 32)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1648)
!1648 = !{!1649, !1650}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1647, file: !141, line: 359, baseType: !154, size: 8)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1647, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1640, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1640, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1630, file: !1631, line: 53, baseType: !1655, size: 32, offset: 32)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1631, line: 47, baseType: !1656)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 32)
!1657 = !DISubroutineType(types: !1658)
!1658 = !{!103, !1638, !1653, !265, !121}
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !1661)
!1661 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !1662)
!1662 = !{!1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1661, file: !356, line: 447, baseType: !360, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1661, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1661, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1661, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1661, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1661, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1661, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1661, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1661, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1661, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1661, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1661, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1661, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1661, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1661, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1661, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1661, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1661, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1661, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1661, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1661, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 32)
!1685 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !1686)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !1687)
!1687 = !{!1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1686, file: !356, line: 413, baseType: !1373, size: 256)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1686, file: !356, line: 414, baseType: !1375, size: 768, offset: 256)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1686, file: !356, line: 415, baseType: !1373, size: 256, offset: 1024)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1686, file: !356, line: 416, baseType: !1375, size: 768, offset: 1280)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1686, file: !356, line: 417, baseType: !1373, size: 256, offset: 2048)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1686, file: !356, line: 418, baseType: !1375, size: 768, offset: 2304)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1686, file: !356, line: 419, baseType: !1373, size: 256, offset: 3072)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1686, file: !356, line: 420, baseType: !1375, size: 768, offset: 3328)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1686, file: !356, line: 421, baseType: !1373, size: 256, offset: 4096)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1686, file: !356, line: 422, baseType: !1386, size: 1792, offset: 4352)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1686, file: !356, line: 423, baseType: !1390, size: 1920, offset: 6144)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1686, file: !356, line: 424, baseType: !1395, size: 20608, offset: 8064)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1686, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!1701 = !{!1702, !1824, !1833, !1835, !1614, !1838, !1840, !1845}
!1702 = !DIGlobalVariableExpression(var: !1703, expr: !DIExpression())
!1703 = distinct !DIGlobalVariable(name: "_kernel", scope: !1616, file: !1620, line: 40, type: !1704, isLocal: false, isDefinition: true)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !247, line: 158, size: 288, elements: !1705)
!1705 = !{!1706, !1819}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1704, file: !247, line: 159, baseType: !1707, size: 192)
!1707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1708, size: 192, elements: !345)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !247, line: 100, size: 192, elements: !1709)
!1709 = !{!1710, !1711, !1712, !1813, !1814, !1815, !1816}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1708, file: !247, line: 102, baseType: !121, size: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1708, file: !247, line: 105, baseType: !957, size: 32, offset: 32)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1708, file: !247, line: 108, baseType: !1713, size: 32, offset: 64)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 32)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !1715)
!1715 = !{!1716, !1774, !1786, !1787, !1788, !1789, !1795, !1808}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1714, file: !211, line: 247, baseType: !1717, size: 384)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !1718)
!1718 = !{!1719, !1743, !1750, !1751, !1752, !1761, !1762, !1763}
!1719 = !DIDerivedType(tag: DW_TAG_member, scope: !1717, file: !211, line: 60, baseType: !1720, size: 64)
!1720 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1717, file: !211, line: 60, size: 64, elements: !1721)
!1721 = !{!1722, !1737}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1720, file: !211, line: 61, baseType: !1723, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !1724)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !1725)
!1725 = !{!1726, !1732}
!1726 = !DIDerivedType(tag: DW_TAG_member, scope: !1724, file: !221, line: 38, baseType: !1727, size: 32)
!1727 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1724, file: !221, line: 38, size: 32, elements: !1728)
!1728 = !{!1729, !1731}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1727, file: !221, line: 39, baseType: !1730, size: 32)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1727, file: !221, line: 40, baseType: !1730, size: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, scope: !1724, file: !221, line: 42, baseType: !1733, size: 32, offset: 32)
!1733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1724, file: !221, line: 42, size: 32, elements: !1734)
!1734 = !{!1735, !1736}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1733, file: !221, line: 43, baseType: !1730, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1733, file: !221, line: 44, baseType: !1730, size: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1720, file: !211, line: 62, baseType: !1738, size: 64)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !1739)
!1739 = !{!1740}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1738, file: !237, line: 50, baseType: !1741, size: 64)
!1741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1742, size: 64, elements: !242)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 32)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1717, file: !211, line: 68, baseType: !1744, size: 32, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 32)
!1745 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !1746)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !1747)
!1747 = !{!1748}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1746, file: !247, line: 232, baseType: !1749, size: 64)
!1749 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !1724)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1717, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1717, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!1752 = !DIDerivedType(tag: DW_TAG_member, scope: !1717, file: !211, line: 90, baseType: !1753, size: 16, offset: 112)
!1753 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1717, file: !211, line: 90, size: 16, elements: !1754)
!1754 = !{!1755, !1760}
!1755 = !DIDerivedType(tag: DW_TAG_member, scope: !1753, file: !211, line: 91, baseType: !1756, size: 16)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !211, line: 91, size: 16, elements: !1757)
!1757 = !{!1758, !1759}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1756, file: !211, line: 96, baseType: !261, size: 8)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1756, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1753, file: !211, line: 100, baseType: !265, size: 16)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1717, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1717, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1717, file: !211, line: 131, baseType: !1764, size: 192, offset: 192)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !1765)
!1765 = !{!1766, !1767, !1773}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1764, file: !247, line: 245, baseType: !1723, size: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1764, file: !247, line: 246, baseType: !1768, size: 32, offset: 64)
!1768 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !1769)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 32)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{null, !1772}
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1764, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1714, file: !211, line: 250, baseType: !1775, size: 288, offset: 384)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !1776)
!1776 = !{!1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1775, file: !284, line: 26, baseType: !121, size: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1775, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1775, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1775, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1775, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1775, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1775, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1775, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1775, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1714, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1714, file: !211, line: 256, baseType: !1745, size: 64, offset: 704)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1714, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1714, file: !211, line: 300, baseType: !1790, size: 96, offset: 800)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !1791)
!1791 = !{!1792, !1793, !1794}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1790, file: !211, line: 153, baseType: !22, size: 32)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1790, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1790, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1714, file: !211, line: 325, baseType: !1796, size: 32, offset: 896)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 32)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !1798)
!1798 = !{!1799, !1805, !1806}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1797, file: !307, line: 5074, baseType: !1800, size: 96)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !1801)
!1801 = !{!1802, !1803, !1804}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1800, file: !311, line: 57, baseType: !314, size: 32)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1800, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1800, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1797, file: !307, line: 5075, baseType: !1745, size: 64, offset: 96)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1797, file: !307, line: 5076, baseType: !1807, offset: 160)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1714, file: !211, line: 343, baseType: !1809, size: 64, offset: 928)
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !1810)
!1810 = !{!1811, !1812}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1809, file: !284, line: 63, baseType: !121, size: 32)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1809, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1708, file: !247, line: 111, baseType: !1713, size: 32, offset: 96)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1708, file: !247, line: 124, baseType: !103, size: 32, offset: 128)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1708, file: !247, line: 127, baseType: !154, size: 8, offset: 160)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1708, file: !247, line: 153, baseType: !1817, offset: 168)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1818, line: 33, elements: !322)
!1818 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1704, file: !247, line: 170, baseType: !1820, size: 96, offset: 192)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !247, line: 83, size: 96, elements: !1821)
!1821 = !{!1822, !1823}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1820, file: !247, line: 86, baseType: !1713, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1820, file: !247, line: 90, baseType: !1749, size: 64, offset: 32)
!1824 = !DIGlobalVariableExpression(var: !1825, expr: !DIExpression())
!1825 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1616, file: !1620, line: 43, type: !1826, isLocal: false, isDefinition: true, align: 512)
!1826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1827, size: 8704, elements: !1831)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1828, line: 47, size: 8, elements: !1829)
!1828 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1829 = !{!1830}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1827, file: !1828, line: 48, baseType: !146, size: 8)
!1831 = !{!1832}
!1832 = !DISubrange(count: 1088)
!1833 = !DIGlobalVariableExpression(var: !1834, expr: !DIExpression())
!1834 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1616, file: !1620, line: 44, type: !1714, isLocal: false, isDefinition: true)
!1835 = !DIGlobalVariableExpression(var: !1836, expr: !DIExpression())
!1836 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1616, file: !1620, line: 48, type: !1837, isLocal: false, isDefinition: true)
!1837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1714, size: 1024, elements: !345)
!1838 = !DIGlobalVariableExpression(var: !1839, expr: !DIExpression())
!1839 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1616, file: !1620, line: 217, type: !157, isLocal: false, isDefinition: true)
!1840 = !DIGlobalVariableExpression(var: !1841, expr: !DIExpression())
!1841 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1616, file: !1620, line: 50, type: !1842, isLocal: true, isDefinition: true, align: 512)
!1842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1827, size: 3072, elements: !1843)
!1843 = !{!346, !1844}
!1844 = !DISubrange(count: 384)
!1845 = !DIGlobalVariableExpression(var: !1846, expr: !DIExpression())
!1846 = distinct !DIGlobalVariable(name: "levels", scope: !1847, file: !1620, line: 232, type: !1867, isLocal: true, isDefinition: true)
!1847 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1620, file: !1620, line: 230, type: !1848, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !1850)
!1848 = !DISubroutineType(types: !1849)
!1849 = !{null, !1619}
!1850 = !{!1851, !1852, !1862, !1866}
!1851 = !DILocalVariable(name: "level", arg: 1, scope: !1847, file: !1620, line: 230, type: !1619)
!1852 = !DILocalVariable(name: "entry", scope: !1847, file: !1620, line: 244, type: !1853)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1856)
!1856 = !{!1857, !1861}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1855, file: !132, line: 60, baseType: !1858, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 32)
!1859 = !DISubroutineType(types: !1860)
!1860 = !{!103, !1638}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1855, file: !132, line: 65, baseType: !1638, size: 32, offset: 32)
!1862 = !DILocalVariable(name: "dev", scope: !1863, file: !1620, line: 247, type: !1638)
!1863 = distinct !DILexicalBlock(scope: !1864, file: !1620, line: 246, column: 64)
!1864 = distinct !DILexicalBlock(scope: !1865, file: !1620, line: 246, column: 2)
!1865 = distinct !DILexicalBlock(scope: !1847, file: !1620, line: 246, column: 2)
!1866 = !DILocalVariable(name: "rc", scope: !1863, file: !1620, line: 248, type: !103)
!1867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1853, size: 192, elements: !1868)
!1868 = !{!1869}
!1869 = !DISubrange(count: 6)
!1870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1827, size: 16896, elements: !1871)
!1871 = !{!346, !1872}
!1872 = !DISubrange(count: 2112)
!1873 = !DIGlobalVariableExpression(var: !1874, expr: !DIExpression())
!1874 = distinct !DIGlobalVariable(name: "states_str", scope: !1875, file: !1876, line: 276, type: !1997, isLocal: true, isDefinition: true)
!1875 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1876, file: !1876, line: 271, type: !1877, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !1988)
!1876 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1877 = !DISubroutineType(types: !1878)
!1878 = !{!144, !1879, !957, !200}
!1879 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !1880)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 32)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !1882)
!1882 = !{!1883, !1941, !1953, !1954, !1955, !1956, !1962, !1975}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1881, file: !211, line: 247, baseType: !1884, size: 384)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !1885)
!1885 = !{!1886, !1910, !1917, !1918, !1919, !1928, !1929, !1930}
!1886 = !DIDerivedType(tag: DW_TAG_member, scope: !1884, file: !211, line: 60, baseType: !1887, size: 64)
!1887 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1884, file: !211, line: 60, size: 64, elements: !1888)
!1888 = !{!1889, !1904}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1887, file: !211, line: 61, baseType: !1890, size: 64)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !1891)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !1892)
!1892 = !{!1893, !1899}
!1893 = !DIDerivedType(tag: DW_TAG_member, scope: !1891, file: !221, line: 38, baseType: !1894, size: 32)
!1894 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1891, file: !221, line: 38, size: 32, elements: !1895)
!1895 = !{!1896, !1898}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1894, file: !221, line: 39, baseType: !1897, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1894, file: !221, line: 40, baseType: !1897, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, scope: !1891, file: !221, line: 42, baseType: !1900, size: 32, offset: 32)
!1900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1891, file: !221, line: 42, size: 32, elements: !1901)
!1901 = !{!1902, !1903}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1900, file: !221, line: 43, baseType: !1897, size: 32)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1900, file: !221, line: 44, baseType: !1897, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1887, file: !211, line: 62, baseType: !1905, size: 64)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !1906)
!1906 = !{!1907}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1905, file: !237, line: 50, baseType: !1908, size: 64)
!1908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1909, size: 64, elements: !242)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 32)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1884, file: !211, line: 68, baseType: !1911, size: 32, offset: 64)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !1913)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !1914)
!1914 = !{!1915}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1913, file: !247, line: 232, baseType: !1916, size: 64)
!1916 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !1891)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1884, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1884, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!1919 = !DIDerivedType(tag: DW_TAG_member, scope: !1884, file: !211, line: 90, baseType: !1920, size: 16, offset: 112)
!1920 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1884, file: !211, line: 90, size: 16, elements: !1921)
!1921 = !{!1922, !1927}
!1922 = !DIDerivedType(tag: DW_TAG_member, scope: !1920, file: !211, line: 91, baseType: !1923, size: 16)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1920, file: !211, line: 91, size: 16, elements: !1924)
!1924 = !{!1925, !1926}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1923, file: !211, line: 96, baseType: !261, size: 8)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1923, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1920, file: !211, line: 100, baseType: !265, size: 16)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1884, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1884, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1884, file: !211, line: 131, baseType: !1931, size: 192, offset: 192)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !1932)
!1932 = !{!1933, !1934, !1940}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1931, file: !247, line: 245, baseType: !1890, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1931, file: !247, line: 246, baseType: !1935, size: 32, offset: 64)
!1935 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !1936)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 32)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{null, !1939}
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1931, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1881, file: !211, line: 250, baseType: !1942, size: 288, offset: 384)
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !1943)
!1943 = !{!1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1942, file: !284, line: 26, baseType: !121, size: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1942, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1942, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1942, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1942, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1942, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1942, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1942, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1942, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1881, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1881, file: !211, line: 256, baseType: !1912, size: 64, offset: 704)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1881, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1881, file: !211, line: 300, baseType: !1957, size: 96, offset: 800)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !1958)
!1958 = !{!1959, !1960, !1961}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1957, file: !211, line: 153, baseType: !22, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1957, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1957, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1881, file: !211, line: 325, baseType: !1963, size: 32, offset: 896)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 32)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !1965)
!1965 = !{!1966, !1972, !1973}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1964, file: !307, line: 5074, baseType: !1967, size: 96)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !1968)
!1968 = !{!1969, !1970, !1971}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1967, file: !311, line: 57, baseType: !314, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1967, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1967, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1964, file: !307, line: 5075, baseType: !1912, size: 64, offset: 96)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1964, file: !307, line: 5076, baseType: !1974, offset: 160)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1881, file: !211, line: 343, baseType: !1976, size: 64, offset: 928)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !1977)
!1977 = !{!1978, !1979}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1976, file: !284, line: 63, baseType: !121, size: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1976, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!1980 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1981, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1982, globals: !1984, splitDebugInlining: false, nameTableKind: None)
!1981 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!1982 = !{!102, !144, !1358, !154, !103, !1983, !24, !200, !957, !22, !121, !1270}
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 32)
!1984 = !{!1873, !1985}
!1985 = !DIGlobalVariableExpression(var: !1986, expr: !DIExpression())
!1986 = distinct !DIGlobalVariable(name: "states_sz", scope: !1875, file: !1876, line: 279, type: !1987, isLocal: true, isDefinition: true)
!1987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1550, size: 256, elements: !1278)
!1988 = !{!1989, !1990, !1991, !1992, !1993, !1994, !1995}
!1989 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1875, file: !1876, line: 271, type: !1879)
!1990 = !DILocalVariable(name: "buf", arg: 2, scope: !1875, file: !1876, line: 271, type: !957)
!1991 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1875, file: !1876, line: 271, type: !200)
!1992 = !DILocalVariable(name: "off", scope: !1875, file: !1876, line: 273, type: !200)
!1993 = !DILocalVariable(name: "bit", scope: !1875, file: !1876, line: 274, type: !154)
!1994 = !DILocalVariable(name: "thread_state", scope: !1875, file: !1876, line: 275, type: !154)
!1995 = !DILocalVariable(name: "index", scope: !1996, file: !1876, line: 293, type: !154)
!1996 = distinct !DILexicalBlock(scope: !1875, file: !1876, line: 293, column: 2)
!1997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 256, elements: !1278)
!1998 = !DIGlobalVariableExpression(var: !1999, expr: !DIExpression())
!1999 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2000, file: !2108, line: 56, type: !2097, isLocal: false, isDefinition: true)
!2000 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2001, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2002, globals: !2105, splitDebugInlining: false, nameTableKind: None)
!2001 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2002 = !{!2003, !957, !102, !2103, !1653, !1358, !566, !103, !121, !1270, !2104}
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 32)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !2005)
!2005 = !{!2006, !2064, !2076, !2077, !2078, !2079, !2085, !2098}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2004, file: !211, line: 247, baseType: !2007, size: 384)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !2008)
!2008 = !{!2009, !2033, !2040, !2041, !2042, !2051, !2052, !2053}
!2009 = !DIDerivedType(tag: DW_TAG_member, scope: !2007, file: !211, line: 60, baseType: !2010, size: 64)
!2010 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2007, file: !211, line: 60, size: 64, elements: !2011)
!2011 = !{!2012, !2027}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2010, file: !211, line: 61, baseType: !2013, size: 64)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !2015)
!2015 = !{!2016, !2022}
!2016 = !DIDerivedType(tag: DW_TAG_member, scope: !2014, file: !221, line: 38, baseType: !2017, size: 32)
!2017 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2014, file: !221, line: 38, size: 32, elements: !2018)
!2018 = !{!2019, !2021}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2017, file: !221, line: 39, baseType: !2020, size: 32)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 32)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2017, file: !221, line: 40, baseType: !2020, size: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, scope: !2014, file: !221, line: 42, baseType: !2023, size: 32, offset: 32)
!2023 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2014, file: !221, line: 42, size: 32, elements: !2024)
!2024 = !{!2025, !2026}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2023, file: !221, line: 43, baseType: !2020, size: 32)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2023, file: !221, line: 44, baseType: !2020, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2010, file: !211, line: 62, baseType: !2028, size: 64)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !2029)
!2029 = !{!2030}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2028, file: !237, line: 50, baseType: !2031, size: 64)
!2031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2032, size: 64, elements: !242)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2007, file: !211, line: 68, baseType: !2034, size: 32, offset: 64)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 32)
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !2036)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !2037)
!2037 = !{!2038}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2036, file: !247, line: 232, baseType: !2039, size: 64)
!2039 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !2014)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2007, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2007, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!2042 = !DIDerivedType(tag: DW_TAG_member, scope: !2007, file: !211, line: 90, baseType: !2043, size: 16, offset: 112)
!2043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2007, file: !211, line: 90, size: 16, elements: !2044)
!2044 = !{!2045, !2050}
!2045 = !DIDerivedType(tag: DW_TAG_member, scope: !2043, file: !211, line: 91, baseType: !2046, size: 16)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2043, file: !211, line: 91, size: 16, elements: !2047)
!2047 = !{!2048, !2049}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2046, file: !211, line: 96, baseType: !261, size: 8)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2046, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2043, file: !211, line: 100, baseType: !265, size: 16)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2007, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2007, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2007, file: !211, line: 131, baseType: !2054, size: 192, offset: 192)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !2055)
!2055 = !{!2056, !2057, !2063}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2054, file: !247, line: 245, baseType: !2013, size: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2054, file: !247, line: 246, baseType: !2058, size: 32, offset: 64)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !2059)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 32)
!2060 = !DISubroutineType(types: !2061)
!2061 = !{null, !2062}
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2054, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2004, file: !211, line: 250, baseType: !2065, size: 288, offset: 384)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !2066)
!2066 = !{!2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2065, file: !284, line: 26, baseType: !121, size: 32)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2065, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2065, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2065, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2065, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2065, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2065, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2065, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2065, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2004, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2004, file: !211, line: 256, baseType: !2035, size: 64, offset: 704)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2004, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2004, file: !211, line: 300, baseType: !2080, size: 96, offset: 800)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !2081)
!2081 = !{!2082, !2083, !2084}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2080, file: !211, line: 153, baseType: !22, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2080, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2080, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2004, file: !211, line: 325, baseType: !2086, size: 32, offset: 896)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 32)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !2088)
!2088 = !{!2089, !2095, !2096}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2087, file: !307, line: 5074, baseType: !2090, size: 96)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !2091)
!2091 = !{!2092, !2093, !2094}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2090, file: !311, line: 57, baseType: !314, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2090, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2090, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2087, file: !307, line: 5075, baseType: !2035, size: 64, offset: 96)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2087, file: !307, line: 5076, baseType: !2097, offset: 160)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2004, file: !211, line: 343, baseType: !2099, size: 64, offset: 928)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !2100)
!2100 = !{!2101, !2102}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2099, file: !284, line: 63, baseType: !121, size: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2099, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 32)
!2105 = !{!1998, !2106, !2109, !2111}
!2106 = !DIGlobalVariableExpression(var: !2107, expr: !DIExpression())
!2107 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2000, file: !2108, line: 404, type: !103, isLocal: true, isDefinition: true)
!2108 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2109 = !DIGlobalVariableExpression(var: !2110, expr: !DIExpression())
!2110 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2000, file: !2108, line: 405, type: !103, isLocal: true, isDefinition: true)
!2111 = !DIGlobalVariableExpression(var: !2112, expr: !DIExpression())
!2112 = distinct !DIGlobalVariable(name: "pending_current", scope: !2000, file: !2108, line: 425, type: !2003, isLocal: true, isDefinition: true)
!2113 = !DIGlobalVariableExpression(var: !2114, expr: !DIExpression())
!2114 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2115, file: !2145, line: 15, type: !1270, isLocal: true, isDefinition: true)
!2115 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2116, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2117, globals: !2142, splitDebugInlining: false, nameTableKind: None)
!2116 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2117 = !{!1358, !102, !566, !121, !1270, !103, !2118, !957, !280}
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 32)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !2120)
!2120 = !{!2121, !2136, !2141}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2119, file: !247, line: 245, baseType: !2122, size: 64)
!2122 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !2123)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !2124)
!2124 = !{!2125, !2131}
!2125 = !DIDerivedType(tag: DW_TAG_member, scope: !2123, file: !221, line: 38, baseType: !2126, size: 32)
!2126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2123, file: !221, line: 38, size: 32, elements: !2127)
!2127 = !{!2128, !2130}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2126, file: !221, line: 39, baseType: !2129, size: 32)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 32)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2126, file: !221, line: 40, baseType: !2129, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, scope: !2123, file: !221, line: 42, baseType: !2132, size: 32, offset: 32)
!2132 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2123, file: !221, line: 42, size: 32, elements: !2133)
!2133 = !{!2134, !2135}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2132, file: !221, line: 43, baseType: !2129, size: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2132, file: !221, line: 44, baseType: !2129, size: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2119, file: !247, line: 246, baseType: !2137, size: 32, offset: 64)
!2137 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !2138)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 32)
!2139 = !DISubroutineType(types: !2140)
!2140 = !{null, !2118}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2119, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!2142 = !{!2113, !2143, !2147, !2149}
!2143 = !DIGlobalVariableExpression(var: !2144, expr: !DIExpression())
!2144 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2115, file: !2145, line: 19, type: !2146, isLocal: true, isDefinition: true)
!2145 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!2147 = !DIGlobalVariableExpression(var: !2148, expr: !DIExpression())
!2148 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2115, file: !2145, line: 25, type: !103, isLocal: true, isDefinition: true)
!2149 = !DIGlobalVariableExpression(var: !2150, expr: !DIExpression())
!2150 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2115, file: !2145, line: 17, type: !2151, isLocal: true, isDefinition: true)
!2151 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !2123)
!2152 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2153, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2153 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2154 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2155, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2156, retainedTypes: !2256, splitDebugInlining: false, nameTableKind: None)
!2155 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/sensor/thermometer/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2156 = !{!2157, !30, !2221, !2241}
!2157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sensor_channel", file: !2158, line: 53, baseType: !32, size: 32, elements: !2159)
!2158 = !DIFile(filename: "zephyr/include/zephyr/drivers/sensor.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2159 = !{!2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220}
!2160 = !DIEnumerator(name: "SENSOR_CHAN_ACCEL_X", value: 0)
!2161 = !DIEnumerator(name: "SENSOR_CHAN_ACCEL_Y", value: 1)
!2162 = !DIEnumerator(name: "SENSOR_CHAN_ACCEL_Z", value: 2)
!2163 = !DIEnumerator(name: "SENSOR_CHAN_ACCEL_XYZ", value: 3)
!2164 = !DIEnumerator(name: "SENSOR_CHAN_GYRO_X", value: 4)
!2165 = !DIEnumerator(name: "SENSOR_CHAN_GYRO_Y", value: 5)
!2166 = !DIEnumerator(name: "SENSOR_CHAN_GYRO_Z", value: 6)
!2167 = !DIEnumerator(name: "SENSOR_CHAN_GYRO_XYZ", value: 7)
!2168 = !DIEnumerator(name: "SENSOR_CHAN_MAGN_X", value: 8)
!2169 = !DIEnumerator(name: "SENSOR_CHAN_MAGN_Y", value: 9)
!2170 = !DIEnumerator(name: "SENSOR_CHAN_MAGN_Z", value: 10)
!2171 = !DIEnumerator(name: "SENSOR_CHAN_MAGN_XYZ", value: 11)
!2172 = !DIEnumerator(name: "SENSOR_CHAN_DIE_TEMP", value: 12)
!2173 = !DIEnumerator(name: "SENSOR_CHAN_AMBIENT_TEMP", value: 13)
!2174 = !DIEnumerator(name: "SENSOR_CHAN_PRESS", value: 14)
!2175 = !DIEnumerator(name: "SENSOR_CHAN_PROX", value: 15)
!2176 = !DIEnumerator(name: "SENSOR_CHAN_HUMIDITY", value: 16)
!2177 = !DIEnumerator(name: "SENSOR_CHAN_LIGHT", value: 17)
!2178 = !DIEnumerator(name: "SENSOR_CHAN_IR", value: 18)
!2179 = !DIEnumerator(name: "SENSOR_CHAN_RED", value: 19)
!2180 = !DIEnumerator(name: "SENSOR_CHAN_GREEN", value: 20)
!2181 = !DIEnumerator(name: "SENSOR_CHAN_BLUE", value: 21)
!2182 = !DIEnumerator(name: "SENSOR_CHAN_ALTITUDE", value: 22)
!2183 = !DIEnumerator(name: "SENSOR_CHAN_PM_1_0", value: 23)
!2184 = !DIEnumerator(name: "SENSOR_CHAN_PM_2_5", value: 24)
!2185 = !DIEnumerator(name: "SENSOR_CHAN_PM_10", value: 25)
!2186 = !DIEnumerator(name: "SENSOR_CHAN_DISTANCE", value: 26)
!2187 = !DIEnumerator(name: "SENSOR_CHAN_CO2", value: 27)
!2188 = !DIEnumerator(name: "SENSOR_CHAN_VOC", value: 28)
!2189 = !DIEnumerator(name: "SENSOR_CHAN_GAS_RES", value: 29)
!2190 = !DIEnumerator(name: "SENSOR_CHAN_VOLTAGE", value: 30)
!2191 = !DIEnumerator(name: "SENSOR_CHAN_CURRENT", value: 31)
!2192 = !DIEnumerator(name: "SENSOR_CHAN_POWER", value: 32)
!2193 = !DIEnumerator(name: "SENSOR_CHAN_RESISTANCE", value: 33)
!2194 = !DIEnumerator(name: "SENSOR_CHAN_ROTATION", value: 34)
!2195 = !DIEnumerator(name: "SENSOR_CHAN_POS_DX", value: 35)
!2196 = !DIEnumerator(name: "SENSOR_CHAN_POS_DY", value: 36)
!2197 = !DIEnumerator(name: "SENSOR_CHAN_POS_DZ", value: 37)
!2198 = !DIEnumerator(name: "SENSOR_CHAN_RPM", value: 38)
!2199 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_VOLTAGE", value: 39)
!2200 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_AVG_CURRENT", value: 40)
!2201 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_STDBY_CURRENT", value: 41)
!2202 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_MAX_LOAD_CURRENT", value: 42)
!2203 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_TEMP", value: 43)
!2204 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_STATE_OF_CHARGE", value: 44)
!2205 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_FULL_CHARGE_CAPACITY", value: 45)
!2206 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_REMAINING_CHARGE_CAPACITY", value: 46)
!2207 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_NOM_AVAIL_CAPACITY", value: 47)
!2208 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_FULL_AVAIL_CAPACITY", value: 48)
!2209 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_AVG_POWER", value: 49)
!2210 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_STATE_OF_HEALTH", value: 50)
!2211 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_TIME_TO_EMPTY", value: 51)
!2212 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_TIME_TO_FULL", value: 52)
!2213 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_CYCLE_COUNT", value: 53)
!2214 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_DESIGN_VOLTAGE", value: 54)
!2215 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_DESIRED_VOLTAGE", value: 55)
!2216 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_DESIRED_CHARGING_CURRENT", value: 56)
!2217 = !DIEnumerator(name: "SENSOR_CHAN_ALL", value: 57)
!2218 = !DIEnumerator(name: "SENSOR_CHAN_COMMON_COUNT", value: 58)
!2219 = !DIEnumerator(name: "SENSOR_CHAN_PRIV_START", value: 58)
!2220 = !DIEnumerator(name: "SENSOR_CHAN_MAX", value: 32767)
!2221 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sensor_attribute", file: !2158, line: 274, baseType: !32, size: 32, elements: !2222)
!2222 = !{!2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240}
!2223 = !DIEnumerator(name: "SENSOR_ATTR_SAMPLING_FREQUENCY", value: 0)
!2224 = !DIEnumerator(name: "SENSOR_ATTR_LOWER_THRESH", value: 1)
!2225 = !DIEnumerator(name: "SENSOR_ATTR_UPPER_THRESH", value: 2)
!2226 = !DIEnumerator(name: "SENSOR_ATTR_SLOPE_TH", value: 3)
!2227 = !DIEnumerator(name: "SENSOR_ATTR_SLOPE_DUR", value: 4)
!2228 = !DIEnumerator(name: "SENSOR_ATTR_HYSTERESIS", value: 5)
!2229 = !DIEnumerator(name: "SENSOR_ATTR_OVERSAMPLING", value: 6)
!2230 = !DIEnumerator(name: "SENSOR_ATTR_FULL_SCALE", value: 7)
!2231 = !DIEnumerator(name: "SENSOR_ATTR_OFFSET", value: 8)
!2232 = !DIEnumerator(name: "SENSOR_ATTR_CALIB_TARGET", value: 9)
!2233 = !DIEnumerator(name: "SENSOR_ATTR_CONFIGURATION", value: 10)
!2234 = !DIEnumerator(name: "SENSOR_ATTR_CALIBRATION", value: 11)
!2235 = !DIEnumerator(name: "SENSOR_ATTR_FEATURE_MASK", value: 12)
!2236 = !DIEnumerator(name: "SENSOR_ATTR_ALERT", value: 13)
!2237 = !DIEnumerator(name: "SENSOR_ATTR_FF_DUR", value: 14)
!2238 = !DIEnumerator(name: "SENSOR_ATTR_COMMON_COUNT", value: 15)
!2239 = !DIEnumerator(name: "SENSOR_ATTR_PRIV_START", value: 15)
!2240 = !DIEnumerator(name: "SENSOR_ATTR_MAX", value: 32767)
!2241 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sensor_trigger_type", file: !2158, line: 203, baseType: !32, size: 32, elements: !2242)
!2242 = !{!2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255}
!2243 = !DIEnumerator(name: "SENSOR_TRIG_TIMER", value: 0)
!2244 = !DIEnumerator(name: "SENSOR_TRIG_DATA_READY", value: 1)
!2245 = !DIEnumerator(name: "SENSOR_TRIG_DELTA", value: 2)
!2246 = !DIEnumerator(name: "SENSOR_TRIG_NEAR_FAR", value: 3)
!2247 = !DIEnumerator(name: "SENSOR_TRIG_THRESHOLD", value: 4)
!2248 = !DIEnumerator(name: "SENSOR_TRIG_TAP", value: 5)
!2249 = !DIEnumerator(name: "SENSOR_TRIG_DOUBLE_TAP", value: 6)
!2250 = !DIEnumerator(name: "SENSOR_TRIG_FREEFALL", value: 7)
!2251 = !DIEnumerator(name: "SENSOR_TRIG_MOTION", value: 8)
!2252 = !DIEnumerator(name: "SENSOR_TRIG_STATIONARY", value: 9)
!2253 = !DIEnumerator(name: "SENSOR_TRIG_COMMON_COUNT", value: 10)
!2254 = !DIEnumerator(name: "SENSOR_TRIG_PRIV_START", value: 10)
!2255 = !DIEnumerator(name: "SENSOR_TRIG_MAX", value: 32767)
!2256 = !{!1358, !102, !103, !2257, !2318, !121, !1270}
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2259)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sensor_driver_api", file: !2158, line: 397, size: 160, elements: !2260)
!2260 = !{!2261, !2287, !2293, !2308, !2313}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "attr_set", scope: !2259, file: !2158, line: 398, baseType: !2262, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_typedef, name: "sensor_attr_set_t", file: !2158, line: 354, baseType: !2263)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 32)
!2264 = !DISubroutineType(types: !2265)
!2265 = !{!103, !2266, !2157, !2221, !2281}
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 32)
!2267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2268)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !2269)
!2269 = !{!2270, !2271, !2272, !2273, !2279, !2280}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2268, file: !141, line: 380, baseType: !144, size: 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2268, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2268, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2268, file: !141, line: 386, baseType: !2274, size: 32, offset: 96)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 32)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !2276)
!2276 = !{!2277, !2278}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2275, file: !141, line: 359, baseType: !154, size: 8)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2275, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2268, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2268, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 32)
!2282 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2283)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sensor_value", file: !2158, line: 43, size: 64, elements: !2284)
!2284 = !{!2285, !2286}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "val1", scope: !2283, file: !2158, line: 45, baseType: !566, size: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !2283, file: !2158, line: 47, baseType: !566, size: 32, offset: 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "attr_get", scope: !2259, file: !2158, line: 399, baseType: !2288, size: 32, offset: 32)
!2288 = !DIDerivedType(tag: DW_TAG_typedef, name: "sensor_attr_get_t", file: !2158, line: 365, baseType: !2289)
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 32)
!2290 = !DISubroutineType(types: !2291)
!2291 = !{!103, !2266, !2157, !2221, !2292}
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "trigger_set", scope: !2259, file: !2158, line: 400, baseType: !2294, size: 32, offset: 64)
!2294 = !DIDerivedType(tag: DW_TAG_typedef, name: "sensor_trigger_set_t", file: !2158, line: 376, baseType: !2295)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 32)
!2296 = !DISubroutineType(types: !2297)
!2297 = !{!103, !2266, !2298, !2304}
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 32)
!2299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2300)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sensor_trigger", file: !2158, line: 264, size: 64, elements: !2301)
!2301 = !{!2302, !2303}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2300, file: !2158, line: 266, baseType: !2241, size: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !2300, file: !2158, line: 268, baseType: !2157, size: 32, offset: 32)
!2304 = !DIDerivedType(tag: DW_TAG_typedef, name: "sensor_trigger_handler_t", file: !2158, line: 345, baseType: !2305)
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 32)
!2306 = !DISubroutineType(types: !2307)
!2307 = !{null, !2266, !2298}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fetch", scope: !2259, file: !2158, line: 401, baseType: !2309, size: 32, offset: 96)
!2309 = !DIDerivedType(tag: DW_TAG_typedef, name: "sensor_sample_fetch_t", file: !2158, line: 385, baseType: !2310)
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2311, size: 32)
!2311 = !DISubroutineType(types: !2312)
!2312 = !{!103, !2266, !2157}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "channel_get", scope: !2259, file: !2158, line: 402, baseType: !2314, size: 32, offset: 128)
!2314 = !DIDerivedType(tag: DW_TAG_typedef, name: "sensor_channel_get_t", file: !2158, line: 393, baseType: !2315)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 32)
!2316 = !DISubroutineType(types: !2317)
!2317 = !{!103, !2266, !2157, !2292}
!2318 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2319 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2320, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2320 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2321 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2322, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2323, retainedTypes: !2343, splitDebugInlining: false, nameTableKind: None)
!2322 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2323 = !{!2324, !2332}
!2324 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2325, line: 69, baseType: !32, size: 32, elements: !2326)
!2325 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2326 = !{!2327, !2328, !2329, !2330, !2331}
!2327 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2328 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2329 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2330 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2331 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2332 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2325, line: 56, baseType: !32, size: 32, elements: !2333)
!2333 = !{!2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342}
!2334 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2335 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2336 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2337 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2338 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2339 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2340 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2341 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2342 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2343 = !{!103, !2324, !2332, !2344, !262, !164, !2346, !2347, !155, !266, !144, !200, !102, !22, !32, !2349, !2350, !2351, !2352, !2353, !281, !2354, !2345, !2355, !2356, !2357, !2358, !121, !1270}
!2344 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2325, line: 31, baseType: !2345)
!2345 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !281)
!2346 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !201, line: 329, baseType: !32)
!2347 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2325, line: 32, baseType: !2348)
!2348 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1271)
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!2352 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 32)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!2357 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !201, line: 145, baseType: !103)
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 32)
!2359 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2360, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2360 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2361 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2362, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2363, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2362 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2363 = !{!2364, !30}
!2364 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2365, line: 27, baseType: !32, size: 32, elements: !2366)
!2365 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2366 = !{!2367, !2368, !2369, !2370, !2371}
!2367 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2368 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2369 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2370 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2371 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2372 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2373, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2374, retainedTypes: !2375, splitDebugInlining: false, nameTableKind: None)
!2373 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2374 = !{!425, !2364, !30}
!2375 = !{!592, !2376, !102, !103, !566, !121, !154, !2393}
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 32)
!2377 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !2378)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !2379)
!2379 = !{!2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2378, file: !356, line: 413, baseType: !1373, size: 256)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2378, file: !356, line: 414, baseType: !1375, size: 768, offset: 256)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2378, file: !356, line: 415, baseType: !1373, size: 256, offset: 1024)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2378, file: !356, line: 416, baseType: !1375, size: 768, offset: 1280)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2378, file: !356, line: 417, baseType: !1373, size: 256, offset: 2048)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2378, file: !356, line: 418, baseType: !1375, size: 768, offset: 2304)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2378, file: !356, line: 419, baseType: !1373, size: 256, offset: 3072)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2378, file: !356, line: 420, baseType: !1375, size: 768, offset: 3328)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2378, file: !356, line: 421, baseType: !1373, size: 256, offset: 4096)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2378, file: !356, line: 422, baseType: !1386, size: 1792, offset: 4352)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2378, file: !356, line: 423, baseType: !1390, size: 1920, offset: 6144)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2378, file: !356, line: 424, baseType: !1395, size: 20608, offset: 8064)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2378, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 32)
!2394 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2395)
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2396)
!2396 = !{!2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2395, file: !356, line: 447, baseType: !360, size: 32)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2395, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2395, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2395, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2395, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2395, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2395, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2395, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2395, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2395, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2395, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2395, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2395, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2395, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2395, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2395, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2395, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2395, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2395, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2395, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2395, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2418 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2419, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2419 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2420 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2421, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2422, splitDebugInlining: false, nameTableKind: None)
!2421 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2422 = !{!102, !103, !22, !2423}
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 32)
!2424 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2425)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2426)
!2426 = !{!2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2425, file: !356, line: 447, baseType: !360, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2425, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2425, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2425, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2425, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2425, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2425, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2425, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2425, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2425, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2425, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2425, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2425, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2425, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2425, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2425, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2425, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2425, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2425, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2425, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2425, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2448 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2449, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2450, splitDebugInlining: false, nameTableKind: None)
!2449 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2450 = !{!2451, !102, !103}
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2453)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2454)
!2454 = !{!2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2453, file: !356, line: 447, baseType: !360, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2453, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2453, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2453, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2453, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2453, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2453, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2453, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2453, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2453, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2453, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2453, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2453, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2453, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2453, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2453, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2453, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2453, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2453, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2453, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2453, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2476 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2477, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2478, splitDebugInlining: false, nameTableKind: None)
!2477 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2478 = !{!2479, !121, !102, !103}
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 32)
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2481, line: 98, size: 256, elements: !2482)
!2481 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2482 = !{!2483, !2488, !2493, !2498, !2503, !2508, !2513, !2518}
!2483 = !DIDerivedType(tag: DW_TAG_member, scope: !2480, file: !2481, line: 99, baseType: !2484, size: 32)
!2484 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2480, file: !2481, line: 99, size: 32, elements: !2485)
!2485 = !{!2486, !2487}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2484, file: !2481, line: 99, baseType: !121, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2484, file: !2481, line: 99, baseType: !121, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, scope: !2480, file: !2481, line: 100, baseType: !2489, size: 32, offset: 32)
!2489 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2480, file: !2481, line: 100, size: 32, elements: !2490)
!2490 = !{!2491, !2492}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2489, file: !2481, line: 100, baseType: !121, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2489, file: !2481, line: 100, baseType: !121, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, scope: !2480, file: !2481, line: 101, baseType: !2494, size: 32, offset: 64)
!2494 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2480, file: !2481, line: 101, size: 32, elements: !2495)
!2495 = !{!2496, !2497}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2494, file: !2481, line: 101, baseType: !121, size: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2494, file: !2481, line: 101, baseType: !121, size: 32)
!2498 = !DIDerivedType(tag: DW_TAG_member, scope: !2480, file: !2481, line: 102, baseType: !2499, size: 32, offset: 96)
!2499 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2480, file: !2481, line: 102, size: 32, elements: !2500)
!2500 = !{!2501, !2502}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2499, file: !2481, line: 102, baseType: !121, size: 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2499, file: !2481, line: 102, baseType: !121, size: 32)
!2503 = !DIDerivedType(tag: DW_TAG_member, scope: !2480, file: !2481, line: 103, baseType: !2504, size: 32, offset: 128)
!2504 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2480, file: !2481, line: 103, size: 32, elements: !2505)
!2505 = !{!2506, !2507}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2504, file: !2481, line: 103, baseType: !121, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2504, file: !2481, line: 103, baseType: !121, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, scope: !2480, file: !2481, line: 104, baseType: !2509, size: 32, offset: 160)
!2509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2480, file: !2481, line: 104, size: 32, elements: !2510)
!2510 = !{!2511, !2512}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2509, file: !2481, line: 104, baseType: !121, size: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2509, file: !2481, line: 104, baseType: !121, size: 32)
!2513 = !DIDerivedType(tag: DW_TAG_member, scope: !2480, file: !2481, line: 105, baseType: !2514, size: 32, offset: 192)
!2514 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2480, file: !2481, line: 105, size: 32, elements: !2515)
!2515 = !{!2516, !2517}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2514, file: !2481, line: 105, baseType: !121, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2514, file: !2481, line: 105, baseType: !121, size: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2480, file: !2481, line: 106, baseType: !121, size: 32, offset: 224)
!2519 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2520, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2363, retainedTypes: !2521, splitDebugInlining: false, nameTableKind: None)
!2520 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2521 = !{!2522, !102, !103, !2547, !2590, !121}
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2524)
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2525)
!2525 = !{!2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2524, file: !356, line: 447, baseType: !360, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2524, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2524, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2524, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2524, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2524, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2524, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2524, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2524, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2524, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2524, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2524, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2524, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2524, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2524, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2524, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2524, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2524, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2524, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2524, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2524, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2481, line: 141, baseType: !2549)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2481, line: 97, size: 256, elements: !2550)
!2550 = !{!2551}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2549, file: !2481, line: 107, baseType: !2552, size: 256)
!2552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2481, line: 98, size: 256, elements: !2553)
!2553 = !{!2554, !2559, !2564, !2569, !2574, !2579, !2584, !2589}
!2554 = !DIDerivedType(tag: DW_TAG_member, scope: !2552, file: !2481, line: 99, baseType: !2555, size: 32)
!2555 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2552, file: !2481, line: 99, size: 32, elements: !2556)
!2556 = !{!2557, !2558}
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2555, file: !2481, line: 99, baseType: !121, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2555, file: !2481, line: 99, baseType: !121, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_member, scope: !2552, file: !2481, line: 100, baseType: !2560, size: 32, offset: 32)
!2560 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2552, file: !2481, line: 100, size: 32, elements: !2561)
!2561 = !{!2562, !2563}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2560, file: !2481, line: 100, baseType: !121, size: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2560, file: !2481, line: 100, baseType: !121, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, scope: !2552, file: !2481, line: 101, baseType: !2565, size: 32, offset: 64)
!2565 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2552, file: !2481, line: 101, size: 32, elements: !2566)
!2566 = !{!2567, !2568}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2565, file: !2481, line: 101, baseType: !121, size: 32)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2565, file: !2481, line: 101, baseType: !121, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_member, scope: !2552, file: !2481, line: 102, baseType: !2570, size: 32, offset: 96)
!2570 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2552, file: !2481, line: 102, size: 32, elements: !2571)
!2571 = !{!2572, !2573}
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2570, file: !2481, line: 102, baseType: !121, size: 32)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2570, file: !2481, line: 102, baseType: !121, size: 32)
!2574 = !DIDerivedType(tag: DW_TAG_member, scope: !2552, file: !2481, line: 103, baseType: !2575, size: 32, offset: 128)
!2575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2552, file: !2481, line: 103, size: 32, elements: !2576)
!2576 = !{!2577, !2578}
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2575, file: !2481, line: 103, baseType: !121, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2575, file: !2481, line: 103, baseType: !121, size: 32)
!2579 = !DIDerivedType(tag: DW_TAG_member, scope: !2552, file: !2481, line: 104, baseType: !2580, size: 32, offset: 160)
!2580 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2552, file: !2481, line: 104, size: 32, elements: !2581)
!2581 = !{!2582, !2583}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2580, file: !2481, line: 104, baseType: !121, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2580, file: !2481, line: 104, baseType: !121, size: 32)
!2584 = !DIDerivedType(tag: DW_TAG_member, scope: !2552, file: !2481, line: 105, baseType: !2585, size: 32, offset: 192)
!2585 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2552, file: !2481, line: 105, size: 32, elements: !2586)
!2586 = !{!2587, !2588}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2585, file: !2481, line: 105, baseType: !121, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2585, file: !2481, line: 105, baseType: !121, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2552, file: !2481, line: 106, baseType: !121, size: 32, offset: 224)
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!2591 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2592, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1356, retainedTypes: !2593, splitDebugInlining: false, nameTableKind: None)
!2592 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2593 = !{!592, !566, !154, !121, !2594, !2611}
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !2596)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !2597)
!2597 = !{!2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2596, file: !356, line: 413, baseType: !1373, size: 256)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2596, file: !356, line: 414, baseType: !1375, size: 768, offset: 256)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2596, file: !356, line: 415, baseType: !1373, size: 256, offset: 1024)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2596, file: !356, line: 416, baseType: !1375, size: 768, offset: 1280)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2596, file: !356, line: 417, baseType: !1373, size: 256, offset: 2048)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2596, file: !356, line: 418, baseType: !1375, size: 768, offset: 2304)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2596, file: !356, line: 419, baseType: !1373, size: 256, offset: 3072)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2596, file: !356, line: 420, baseType: !1375, size: 768, offset: 3328)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2596, file: !356, line: 421, baseType: !1373, size: 256, offset: 4096)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2596, file: !356, line: 422, baseType: !1386, size: 1792, offset: 4352)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2596, file: !356, line: 423, baseType: !1390, size: 1920, offset: 6144)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2596, file: !356, line: 424, baseType: !1395, size: 20608, offset: 8064)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2596, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 32)
!2612 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2613)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2614)
!2614 = !{!2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2613, file: !356, line: 447, baseType: !360, size: 32)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2613, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2613, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2613, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2613, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2613, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2613, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2613, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2613, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2613, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2613, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2613, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2613, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2613, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2613, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2613, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2613, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2613, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2613, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2613, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2613, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2636 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2637, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2638, splitDebugInlining: false, nameTableKind: None)
!2637 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2638 = !{!2639, !102, !103}
!2639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2640, size: 32)
!2640 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2641)
!2641 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2642)
!2642 = !{!2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663}
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2641, file: !356, line: 447, baseType: !360, size: 32)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2641, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2641, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2641, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2641, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2641, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2641, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2641, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2641, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2641, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2641, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2641, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2641, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2641, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2641, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2641, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2641, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2641, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2641, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2641, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2641, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2664 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2665, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2666, splitDebugInlining: false, nameTableKind: None)
!2665 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2666 = !{!146, !957, !200, !792, !2667, !155, !102}
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2668, size: 32)
!2668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!2669 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2670, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2671, splitDebugInlining: false, nameTableKind: None)
!2670 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/fprintf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2671 = !{!102, !390}
!2672 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2673, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2674, splitDebugInlining: false, nameTableKind: None)
!2673 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2674 = !{!2675}
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !2677)
!2677 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !2678)
!2678 = !{!2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2677, file: !116, line: 338, baseType: !120, size: 32)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2677, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2677, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2677, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2677, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2677, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2677, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2677, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2677, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2677, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2677, file: !116, line: 348, baseType: !658, size: 64, offset: 320)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2677, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2677, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2677, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2677, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2677, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2677, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2677, file: !116, line: 355, baseType: !658, size: 64, offset: 576)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2677, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2677, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2677, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2677, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2677, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2677, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2677, file: !116, line: 362, baseType: !658, size: 64, offset: 832)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2677, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2677, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2677, file: !116, line: 365, baseType: !658, size: 64, offset: 960)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2677, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2677, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2677, file: !116, line: 368, baseType: !679, size: 32, offset: 1088)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2677, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!2711 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2712, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2712 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2713 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2714, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2715, retainedTypes: !2731, splitDebugInlining: false, nameTableKind: None)
!2714 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2715 = !{!2716, !2723, !2727}
!2716 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2717, line: 38, baseType: !32, size: 32, elements: !2718)
!2717 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2718 = !{!2719, !2720, !2721, !2722}
!2719 = !DIEnumerator(name: "HAL_OK", value: 0)
!2720 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2721 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2722 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2723 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !631, line: 184, baseType: !32, size: 32, elements: !2724)
!2724 = !{!2725, !2726}
!2725 = !DIEnumerator(name: "RESET", value: 0)
!2726 = !DIEnumerator(name: "SET", value: 1)
!2727 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !631, line: 190, baseType: !32, size: 32, elements: !2728)
!2728 = !{!2729, !2730}
!2729 = !DIEnumerator(name: "DISABLE", value: 0)
!2730 = !DIEnumerator(name: "ENABLE", value: 1)
!2731 = !{!102, !2732, !154, !121, !1272, !2768, !2774, !2785, !265, !2786, !1270}
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !2734)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !2735)
!2735 = !{!2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2734, file: !116, line: 338, baseType: !120, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2734, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2734, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2734, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2734, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2734, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2734, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2734, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2734, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2734, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2734, file: !116, line: 348, baseType: !658, size: 64, offset: 320)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2734, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2734, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2734, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2734, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2734, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2734, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2734, file: !116, line: 355, baseType: !658, size: 64, offset: 576)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2734, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2734, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2734, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2734, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2734, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2734, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2734, file: !116, line: 362, baseType: !658, size: 64, offset: 832)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2734, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2734, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2734, file: !116, line: 365, baseType: !658, size: 64, offset: 960)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2734, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2734, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2734, file: !116, line: 368, baseType: !679, size: 32, offset: 1088)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2734, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2769, size: 32)
!2769 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 330, baseType: !2770)
!2770 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 326, size: 64, elements: !2771)
!2771 = !{!2772, !2773}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2770, file: !116, line: 328, baseType: !120, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2770, file: !116, line: 329, baseType: !120, size: 32, offset: 32)
!2774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2775, size: 32)
!2775 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 259, baseType: !2776)
!2776 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 250, size: 224, elements: !2777)
!2777 = !{!2778, !2779, !2780, !2781, !2782, !2783, !2784}
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2776, file: !116, line: 252, baseType: !120, size: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2776, file: !116, line: 253, baseType: !120, size: 32, offset: 32)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2776, file: !116, line: 254, baseType: !120, size: 32, offset: 64)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2776, file: !116, line: 255, baseType: !120, size: 32, offset: 96)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2776, file: !116, line: 256, baseType: !120, size: 32, offset: 128)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2776, file: !116, line: 257, baseType: !120, size: 32, offset: 160)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2776, file: !116, line: 258, baseType: !120, size: 32, offset: 192)
!2785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 32)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 32)
!2787 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 276, baseType: !2788)
!2788 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 265, size: 320, elements: !2789)
!2789 = !{!2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798}
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2788, file: !116, line: 267, baseType: !120, size: 32)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2788, file: !116, line: 268, baseType: !120, size: 32, offset: 32)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2788, file: !116, line: 269, baseType: !120, size: 32, offset: 64)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2788, file: !116, line: 270, baseType: !120, size: 32, offset: 96)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2788, file: !116, line: 271, baseType: !120, size: 32, offset: 128)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2788, file: !116, line: 272, baseType: !120, size: 32, offset: 160)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2788, file: !116, line: 273, baseType: !120, size: 32, offset: 192)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2788, file: !116, line: 274, baseType: !120, size: 32, offset: 224)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2788, file: !116, line: 275, baseType: !946, size: 64, offset: 256)
!2799 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2800, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2801, retainedTypes: !2802, splitDebugInlining: false, nameTableKind: None)
!2800 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2801 = !{!630}
!2802 = !{!2803, !121, !2811, !2817, !2828}
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2804, size: 32)
!2804 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !356, line: 770, baseType: !2805)
!2805 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 764, size: 128, elements: !2806)
!2806 = !{!2807, !2808, !2809, !2810}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2805, file: !356, line: 766, baseType: !120, size: 32)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2805, file: !356, line: 767, baseType: !120, size: 32, offset: 32)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2805, file: !356, line: 768, baseType: !120, size: 32, offset: 64)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2805, file: !356, line: 769, baseType: !360, size: 32, offset: 96)
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 32)
!2812 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 330, baseType: !2813)
!2813 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 326, size: 64, elements: !2814)
!2814 = !{!2815, !2816}
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2813, file: !116, line: 328, baseType: !120, size: 32)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2813, file: !116, line: 329, baseType: !120, size: 32, offset: 32)
!2817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2818, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 259, baseType: !2819)
!2819 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 250, size: 224, elements: !2820)
!2820 = !{!2821, !2822, !2823, !2824, !2825, !2826, !2827}
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2819, file: !116, line: 252, baseType: !120, size: 32)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2819, file: !116, line: 253, baseType: !120, size: 32, offset: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2819, file: !116, line: 254, baseType: !120, size: 32, offset: 64)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2819, file: !116, line: 255, baseType: !120, size: 32, offset: 96)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2819, file: !116, line: 256, baseType: !120, size: 32, offset: 128)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2819, file: !116, line: 257, baseType: !120, size: 32, offset: 160)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2819, file: !116, line: 258, baseType: !120, size: 32, offset: 192)
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !2830)
!2830 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !2831)
!2831 = !{!2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2830, file: !116, line: 338, baseType: !120, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2830, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2830, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2830, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2830, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2830, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2830, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2830, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2830, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2830, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2830, file: !116, line: 348, baseType: !658, size: 64, offset: 320)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2830, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2830, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2830, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2830, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2830, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2830, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2830, file: !116, line: 355, baseType: !658, size: 64, offset: 576)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2830, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2830, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2830, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2830, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2830, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2830, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2830, file: !116, line: 362, baseType: !658, size: 64, offset: 832)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2830, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2830, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2830, file: !116, line: 365, baseType: !658, size: 64, offset: 960)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2830, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2830, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2830, file: !116, line: 368, baseType: !679, size: 32, offset: 1088)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2830, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!2864 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2865, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2866, splitDebugInlining: false, nameTableKind: None)
!2865 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2866 = !{!102, !200}
!2867 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2868, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2869, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2868 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2869 = !{!2870, !2877, !30}
!2870 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2871, line: 14, baseType: !32, size: 32, elements: !2872)
!2871 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2872 = !{!2873, !2874, !2875, !2876}
!2873 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2874 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2875 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2876 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2877 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2871, line: 42, baseType: !32, size: 32, elements: !2878)
!2878 = !{!2879, !2880, !2881, !2882, !2883, !2884}
!2879 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2880 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2881 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2882 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2883 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2884 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2885 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2886, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2886 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2887 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2888, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2889, splitDebugInlining: false, nameTableKind: None)
!2888 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2889 = !{!22, !102, !103}
!2890 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2891, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2891 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!2892 = !{!"Ubuntu clang version 14.0.6"}
!2893 = !{i32 7, !"Dwarf Version", i32 4}
!2894 = !{i32 2, !"Debug Info Version", i32 3}
!2895 = !{i32 1, !"wchar_size", i32 4}
!2896 = !{i32 1, !"min_enum_size", i32 4}
!2897 = !{i32 1, !"branch-target-enforcement", i32 0}
!2898 = !{i32 1, !"sign-return-address", i32 0}
!2899 = !{i32 1, !"sign-return-address-all", i32 0}
!2900 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2901 = !{i32 7, !"frame-pointer", i32 2}
!2902 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2903, file: !2903, line: 26, type: !2904, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2152, retainedNodes: !322)
!2903 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2904 = !DISubroutineType(types: !2905)
!2905 = !{null}
!2906 = !DILocation(line: 28, column: 1, scope: !2902)
!2907 = !{i64 2154340238, i64 2154340258, i64 2154340321}
!2908 = !DILocation(line: 29, column: 1, scope: !2902)
!2909 = !{i64 2154340653, i64 2154340673, i64 2154340736}
!2910 = !DILocation(line: 30, column: 1, scope: !2902)
!2911 = !{i64 2154341072, i64 2154341092, i64 2154341155}
!2912 = !DILocation(line: 31, column: 1, scope: !2902)
!2913 = !{i64 2154341491, i64 2154341511, i64 2154341574}
!2914 = !DILocation(line: 33, column: 1, scope: !2902)
!2915 = !{i64 2154341783, i64 2154341803, i64 2154341866}
!2916 = !DILocation(line: 35, column: 1, scope: !2902)
!2917 = !{i64 2154342108, i64 2154342128, i64 2154342191}
!2918 = !DILocation(line: 50, column: 1, scope: !2902)
!2919 = !{i64 2154342535, i64 2154342555, i64 2154342618}
!2920 = !DILocation(line: 54, column: 1, scope: !2902)
!2921 = !{i64 2154342974, i64 2154342994, i64 2154343057}
!2922 = !DILocation(line: 61, column: 1, scope: !2902)
!2923 = !{i64 2154343291, i64 2154343311, i64 2154343374}
!2924 = !DILocation(line: 63, column: 1, scope: !2902)
!2925 = !{i64 2154343671, i64 2154343691, i64 2154343754}
!2926 = !DILocation(line: 64, column: 1, scope: !2902)
!2927 = !{i64 2154344193, i64 2154344213, i64 2154344276}
!2928 = !DILocation(line: 65, column: 1, scope: !2902)
!2929 = !{i64 2154344691, i64 2154344711, i64 2154344774}
!2930 = !DILocation(line: 66, column: 1, scope: !2902)
!2931 = !{i64 2154345173, i64 2154345193, i64 2154345256}
!2932 = !DILocation(line: 67, column: 1, scope: !2902)
!2933 = !{i64 2154345680, i64 2154345700, i64 2154345763}
!2934 = !DILocation(line: 68, column: 1, scope: !2902)
!2935 = !{i64 2154346168, i64 2154346188, i64 2154346251}
!2936 = !DILocation(line: 70, column: 1, scope: !2902)
!2937 = !{i64 2154346636, i64 2154346656, i64 2154346719}
!2938 = !DILocation(line: 71, column: 1, scope: !2902)
!2939 = !{i64 2154347078, i64 2154347098, i64 2154347161}
!2940 = !DILocation(line: 72, column: 1, scope: !2902)
!2941 = !{i64 2154347536, i64 2154347556, i64 2154347619}
!2942 = !DILocation(line: 79, column: 1, scope: !2902)
!2943 = !{i64 2154347990, i64 2154348010, i64 2154348073}
!2944 = !DILocation(line: 80, column: 1, scope: !2902)
!2945 = !{i64 2154348501, i64 2154348521, i64 2154348584}
!2946 = !DILocation(line: 82, column: 1, scope: !2902)
!2947 = !{i64 2154353053, i64 2154353073, i64 2154353136}
!2948 = !DILocation(line: 97, column: 1, scope: !2902)
!2949 = !{i64 2154353390, i64 2154353410, i64 2154353473}
!2950 = !DILocation(line: 99, column: 1, scope: !2902)
!2951 = !{i64 2154353608, i64 2154353628, i64 2154353691}
!2952 = !DILocation(line: 102, column: 1, scope: !2902)
!2953 = !{i64 2154353865, i64 2154353885, i64 2154353948}
!2954 = !DILocation(line: 105, column: 1, scope: !2902)
!2955 = !{i64 2154354105, i64 2154354125, i64 2154354188}
!2956 = !DILocation(line: 115, column: 1, scope: !2902)
!2957 = !{i64 2154354444, i64 2154354464, i64 2154354527}
!2958 = !DILocation(line: 118, column: 1, scope: !2902)
!2959 = !{i64 2154354788, i64 2154354808, i64 2154354871}
!2960 = !DILocation(line: 32, column: 1, scope: !2961)
!2961 = !DILexicalBlockFile(scope: !2902, file: !2962, discriminator: 0)
!2962 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2963 = !{i64 2154355144, i64 2154355164, i64 2154355227}
!2964 = !DILocation(line: 33, column: 1, scope: !2961)
!2965 = !{i64 2154355656, i64 2154355676, i64 2154355739}
!2966 = !DILocation(line: 53, column: 1, scope: !2961)
!2967 = !{i64 2154356164, i64 2154356184, i64 2154356247}
!2968 = !DILocation(line: 54, column: 1, scope: !2961)
!2969 = !{i64 2154356582, i64 2154356602, i64 2154356665}
!2970 = !DILocation(line: 55, column: 1, scope: !2961)
!2971 = !{i64 2154357000, i64 2154357020, i64 2154357083}
!2972 = !DILocation(line: 56, column: 1, scope: !2961)
!2973 = !{i64 2154357418, i64 2154357438, i64 2154357501}
!2974 = !DILocation(line: 57, column: 1, scope: !2961)
!2975 = !{i64 2154357836, i64 2154357856, i64 2154357919}
!2976 = !DILocation(line: 58, column: 1, scope: !2961)
!2977 = !{i64 2154358254, i64 2154358274, i64 2154358337}
!2978 = !DILocation(line: 59, column: 1, scope: !2961)
!2979 = !{i64 2154358672, i64 2154358692, i64 2154358755}
!2980 = !DILocation(line: 60, column: 1, scope: !2961)
!2981 = !{i64 2154359096, i64 2154359116, i64 2154359179}
!2982 = !DILocation(line: 61, column: 1, scope: !2961)
!2983 = !{i64 2154359413, i64 2154359433, i64 2154359496}
!2984 = !DILocation(line: 70, column: 1, scope: !2961)
!2985 = !{i64 2154359642, i64 2154359662, i64 2154359725}
!2986 = !DILocation(line: 72, column: 1, scope: !2961)
!2987 = !{i64 2154359974, i64 2154359994, i64 2154360057}
!2988 = !DILocation(line: 73, column: 1, scope: !2961)
!2989 = !{i64 2154360424, i64 2154360444, i64 2154360507}
!2990 = !DILocation(line: 74, column: 1, scope: !2961)
!2991 = !{i64 2154360874, i64 2154360894, i64 2154360957}
!2992 = !DILocation(line: 75, column: 1, scope: !2961)
!2993 = !{i64 2154361324, i64 2154361344, i64 2154361407}
!2994 = !DILocation(line: 76, column: 1, scope: !2961)
!2995 = !{i64 2154361774, i64 2154361794, i64 2154361857}
!2996 = !DILocation(line: 77, column: 1, scope: !2961)
!2997 = !{i64 2154362224, i64 2154362244, i64 2154362307}
!2998 = !DILocation(line: 78, column: 1, scope: !2961)
!2999 = !{i64 2154366735, i64 2154366755, i64 2154366818}
!3000 = !DILocation(line: 79, column: 1, scope: !2961)
!3001 = !{i64 2154367185, i64 2154367205, i64 2154367268}
!3002 = !DILocation(line: 80, column: 1, scope: !2961)
!3003 = !{i64 2154367638, i64 2154367658, i64 2154367721}
!3004 = !DILocation(line: 84, column: 1, scope: !2961)
!3005 = !{i64 2154367970, i64 2154367990, i64 2154368053}
!3006 = !DILocation(line: 91, column: 1, scope: !2961)
!3007 = !{i64 2154368367, i64 2154368387, i64 2154368450}
!3008 = !DILocation(line: 93, column: 1, scope: !2961)
!3009 = !{i64 2154368734, i64 2154368754, i64 2154368817}
!3010 = !DILocation(line: 106, column: 1, scope: !2961)
!3011 = !{i64 2154369004, i64 2154369024, i64 2154369087}
!3012 = !DILocation(line: 11, column: 1, scope: !3013)
!3013 = !DILexicalBlockFile(scope: !2902, file: !3014, discriminator: 0)
!3014 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3015 = distinct !DISubprogram(name: "main", scope: !3016, file: !3016, line: 11, type: !2904, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2154, retainedNodes: !3017)
!3016 = !DIFile(filename: "zephyr/samples/sensor/thermometer/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3017 = !{!3018, !3019, !3021}
!3018 = !DILocalVariable(name: "temp_dev", scope: !3015, file: !3016, line: 13, type: !2266)
!3019 = !DILocalVariable(name: "r", scope: !3020, file: !3016, line: 27, type: !103)
!3020 = distinct !DILexicalBlock(scope: !3015, file: !3016, line: 26, column: 12)
!3021 = !DILocalVariable(name: "temp_value", scope: !3020, file: !3016, line: 28, type: !2283)
!3022 = !DILocation(line: 15, column: 2, scope: !3015)
!3023 = !DILocation(line: 17, column: 13, scope: !3015)
!3024 = !DILocation(line: 0, scope: !3015)
!3025 = !DILocation(line: 18, column: 7, scope: !3026)
!3026 = distinct !DILexicalBlock(scope: !3015, file: !3016, line: 18, column: 6)
!3027 = !DILocation(line: 18, column: 6, scope: !3015)
!3028 = !DILocation(line: 19, column: 3, scope: !3029)
!3029 = distinct !DILexicalBlock(scope: !3026, file: !3016, line: 18, column: 17)
!3030 = !DILocation(line: 20, column: 3, scope: !3029)
!3031 = !DILocation(line: 24, column: 29, scope: !3015)
!3032 = !DILocation(line: 23, column: 2, scope: !3015)
!3033 = !DILocation(line: 28, column: 3, scope: !3020)
!3034 = !DILocation(line: 28, column: 23, scope: !3020)
!3035 = !DILocation(line: 30, column: 7, scope: !3020)
!3036 = !DILocation(line: 0, scope: !3020)
!3037 = !DILocation(line: 31, column: 7, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3020, file: !3016, line: 31, column: 7)
!3039 = !DILocation(line: 31, column: 7, scope: !3020)
!3040 = !DILocation(line: 32, column: 4, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !3038, file: !3016, line: 31, column: 10)
!3042 = !DILocation(line: 33, column: 4, scope: !3041)
!3043 = !DILocation(line: 36, column: 7, scope: !3020)
!3044 = !DILocation(line: 38, column: 7, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3020, file: !3016, line: 38, column: 7)
!3046 = !DILocation(line: 38, column: 7, scope: !3020)
!3047 = !DILocation(line: 39, column: 4, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3045, file: !3016, line: 38, column: 10)
!3049 = !DILocation(line: 40, column: 4, scope: !3048)
!3050 = !DILocation(line: 47, column: 2, scope: !3015)
!3051 = !DILocation(line: 44, column: 10, scope: !3020)
!3052 = !DILocation(line: 43, column: 3, scope: !3020)
!3053 = !DILocation(line: 46, column: 3, scope: !3020)
!3054 = !DILocation(line: 48, column: 1, scope: !3015)
!3055 = distinct !DISubprogram(name: "device_get_binding", scope: !3056, file: !3056, line: 24, type: !3057, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2154, retainedNodes: !3059)
!3056 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!3057 = !DISubroutineType(types: !3058)
!3058 = !{!2266, !144}
!3059 = !{!3060}
!3060 = !DILocalVariable(name: "name", arg: 1, scope: !3055, file: !3056, line: 24, type: !144)
!3061 = !DILocation(line: 0, scope: !3055)
!3062 = !DILocation(line: 32, column: 2, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !3055, file: !3056, line: 32, column: 2)
!3064 = !{i64 2154259964}
!3065 = !DILocation(line: 33, column: 9, scope: !3055)
!3066 = !DILocation(line: 33, column: 2, scope: !3055)
!3067 = distinct !DISubprogram(name: "sensor_sample_fetch", scope: !3068, file: !3068, line: 76, type: !3069, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2154, retainedNodes: !3071)
!3068 = !DIFile(filename: "zephyr/include/generated/syscalls/sensor.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!3069 = !DISubroutineType(types: !3070)
!3070 = !{!103, !2266}
!3071 = !{!3072}
!3072 = !DILocalVariable(name: "dev", arg: 1, scope: !3067, file: !3068, line: 76, type: !2266)
!3073 = !DILocation(line: 0, scope: !3067)
!3074 = !DILocation(line: 84, column: 2, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3067, file: !3068, line: 84, column: 2)
!3076 = !{i64 2154266502}
!3077 = !DILocation(line: 85, column: 9, scope: !3067)
!3078 = !DILocation(line: 85, column: 2, scope: !3067)
!3079 = distinct !DISubprogram(name: "sensor_channel_get", scope: !3068, file: !3068, line: 123, type: !2316, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2154, retainedNodes: !3080)
!3080 = !{!3081, !3082, !3083}
!3081 = !DILocalVariable(name: "dev", arg: 1, scope: !3079, file: !3068, line: 123, type: !2266)
!3082 = !DILocalVariable(name: "chan", arg: 2, scope: !3079, file: !3068, line: 123, type: !2157)
!3083 = !DILocalVariable(name: "val", arg: 3, scope: !3079, file: !3068, line: 123, type: !2292)
!3084 = !DILocation(line: 0, scope: !3079)
!3085 = !DILocation(line: 133, column: 2, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3079, file: !3068, line: 133, column: 2)
!3087 = !{i64 2154266638}
!3088 = !DILocation(line: 134, column: 9, scope: !3079)
!3089 = !DILocation(line: 134, column: 2, scope: !3079)
!3090 = distinct !DISubprogram(name: "sensor_value_to_double", scope: !2158, file: !2158, line: 669, type: !3091, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2154, retainedNodes: !3093)
!3091 = !DISubroutineType(types: !3092)
!3092 = !{!2318, !2281}
!3093 = !{!3094}
!3094 = !DILocalVariable(name: "val", arg: 1, scope: !3090, file: !2158, line: 669, type: !2281)
!3095 = !DILocation(line: 0, scope: !3090)
!3096 = !DILocation(line: 671, column: 22, scope: !3090)
!3097 = !DILocation(line: 671, column: 9, scope: !3090)
!3098 = !DILocation(line: 671, column: 42, scope: !3090)
!3099 = !DILocation(line: 671, column: 29, scope: !3090)
!3100 = !DILocation(line: 671, column: 47, scope: !3090)
!3101 = !DILocation(line: 671, column: 27, scope: !3090)
!3102 = !DILocation(line: 671, column: 2, scope: !3090)
!3103 = distinct !DISubprogram(name: "k_sleep", scope: !3104, file: !3104, line: 91, type: !3105, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2154, retainedNodes: !3111)
!3104 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!3105 = !DISubroutineType(types: !3106)
!3106 = !{!566, !3107}
!3107 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1359, line: 67, baseType: !3108)
!3108 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1359, line: 65, size: 64, elements: !3109)
!3109 = !{!3110}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3108, file: !1359, line: 66, baseType: !1358, size: 64)
!3111 = !{!3112}
!3112 = !DILocalVariable(name: "timeout", arg: 1, scope: !3103, file: !3104, line: 91, type: !3107)
!3113 = !DILocation(line: 0, scope: !3103)
!3114 = !DILocation(line: 99, column: 2, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !3103, file: !3104, line: 99, column: 2)
!3116 = !{i64 2154060572}
!3117 = !DILocation(line: 100, column: 9, scope: !3103)
!3118 = !DILocation(line: 100, column: 2, scope: !3103)
!3119 = distinct !DISubprogram(name: "z_impl_sensor_channel_get", scope: !2158, file: !2158, line: 582, type: !2316, scopeLine: 585, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2154, retainedNodes: !3120)
!3120 = !{!3121, !3122, !3123, !3124}
!3121 = !DILocalVariable(name: "dev", arg: 1, scope: !3119, file: !2158, line: 582, type: !2266)
!3122 = !DILocalVariable(name: "chan", arg: 2, scope: !3119, file: !2158, line: 583, type: !2157)
!3123 = !DILocalVariable(name: "val", arg: 3, scope: !3119, file: !2158, line: 584, type: !2292)
!3124 = !DILocalVariable(name: "api", scope: !3119, file: !2158, line: 586, type: !2257)
!3125 = !DILocation(line: 0, scope: !3119)
!3126 = !DILocation(line: 587, column: 42, scope: !3119)
!3127 = !DILocation(line: 589, column: 14, scope: !3119)
!3128 = !DILocation(line: 589, column: 9, scope: !3119)
!3129 = !DILocation(line: 589, column: 2, scope: !3119)
!3130 = distinct !DISubprogram(name: "z_impl_sensor_sample_fetch", scope: !2158, file: !2158, line: 518, type: !3069, scopeLine: 519, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2154, retainedNodes: !3131)
!3131 = !{!3132, !3133}
!3132 = !DILocalVariable(name: "dev", arg: 1, scope: !3130, file: !2158, line: 518, type: !2266)
!3133 = !DILocalVariable(name: "api", scope: !3130, file: !2158, line: 520, type: !2257)
!3134 = !DILocation(line: 0, scope: !3130)
!3135 = !DILocation(line: 521, column: 42, scope: !3130)
!3136 = !DILocation(line: 523, column: 14, scope: !3130)
!3137 = !DILocation(line: 523, column: 9, scope: !3130)
!3138 = !DILocation(line: 523, column: 2, scope: !3130)
!3139 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3140)
!3140 = !{!3141}
!3141 = !DILocalVariable(name: "c", arg: 1, scope: !3139, file: !105, line: 45, type: !103)
!3142 = !DILocation(line: 0, scope: !3139)
!3143 = !DILocation(line: 50, column: 2, scope: !3139)
!3144 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !3145, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3147)
!3145 = !DISubroutineType(types: !3146)
!3146 = !{null, !106}
!3147 = !{!3148}
!3148 = !DILocalVariable(name: "fn", arg: 1, scope: !3144, file: !105, line: 63, type: !106)
!3149 = !DILocation(line: 0, scope: !3144)
!3150 = !DILocation(line: 65, column: 12, scope: !3144)
!3151 = !DILocation(line: 66, column: 1, scope: !3144)
!3152 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !3153, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !322)
!3153 = !DISubroutineType(types: !3154)
!3154 = !{!102}
!3155 = !DILocation(line: 78, column: 9, scope: !3152)
!3156 = !DILocation(line: 78, column: 2, scope: !3152)
!3157 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !3158, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3167)
!3158 = !DISubroutineType(types: !3159)
!3159 = !{null, !144, !3160}
!3160 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3161, line: 99, baseType: !3162)
!3161 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3162 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3161, line: 40, baseType: !3163)
!3163 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !3164)
!3164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3165)
!3165 = !{!3166}
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3164, file: !105, line: 79, baseType: !102, size: 32)
!3167 = !{!3168, !3169, !3170}
!3168 = !DILocalVariable(name: "fmt", arg: 1, scope: !3157, file: !105, line: 113, type: !144)
!3169 = !DILocalVariable(name: "ap", arg: 2, scope: !3157, file: !105, line: 113, type: !3160)
!3170 = !DILocalVariable(name: "ctx", scope: !3171, file: !105, line: 121, type: !3173)
!3171 = distinct !DILexicalBlock(scope: !3172, file: !105, line: 120, column: 27)
!3172 = distinct !DILexicalBlock(scope: !3157, file: !105, line: 120, column: 6)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !3174)
!3174 = !{!3175, !3176}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3173, file: !105, line: 85, baseType: !32, size: 32)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3173, file: !105, line: 86, baseType: !3177, offset: 32)
!3177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, elements: !3178)
!3178 = !{!3179}
!3179 = !DISubrange(count: 0)
!3180 = !DILocation(line: 0, scope: !3157)
!3181 = !DILocation(line: 148, column: 3, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !3172, file: !105, line: 138, column: 9)
!3183 = !DILocation(line: 155, column: 1, scope: !3157)
!3184 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !3185, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3187)
!3185 = !DISubroutineType(types: !3186)
!3186 = !{!103, !103, !102}
!3187 = !{!3188, !3189}
!3188 = !DILocalVariable(name: "c", arg: 1, scope: !3184, file: !105, line: 107, type: !103)
!3189 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3184, file: !105, line: 107, type: !102)
!3190 = !DILocation(line: 0, scope: !3184)
!3191 = !DILocation(line: 110, column: 9, scope: !3184)
!3192 = !DILocation(line: 110, column: 2, scope: !3184)
!3193 = distinct !DISubprogram(name: "cbvprintf", scope: !3194, file: !3194, line: 739, type: !3195, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3201)
!3194 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3195 = !DISubroutineType(types: !3196)
!3196 = !{!103, !3197, !102, !144, !3160}
!3197 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3194, line: 297, baseType: !3198)
!3198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3199, size: 32)
!3199 = !DISubroutineType(types: !3200)
!3200 = !{!103, null}
!3201 = !{!3202, !3203, !3204, !3205}
!3202 = !DILocalVariable(name: "out", arg: 1, scope: !3193, file: !3194, line: 739, type: !3197)
!3203 = !DILocalVariable(name: "ctx", arg: 2, scope: !3193, file: !3194, line: 739, type: !102)
!3204 = !DILocalVariable(name: "format", arg: 3, scope: !3193, file: !3194, line: 739, type: !144)
!3205 = !DILocalVariable(name: "ap", arg: 4, scope: !3193, file: !3194, line: 739, type: !3160)
!3206 = !DILocation(line: 0, scope: !3193)
!3207 = !DILocation(line: 741, column: 9, scope: !3193)
!3208 = !DILocation(line: 741, column: 2, scope: !3193)
!3209 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !3210, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3212)
!3210 = !DISubroutineType(types: !3211)
!3211 = !{null, !957, !200}
!3212 = !{!3213, !3214, !3215}
!3213 = !DILocalVariable(name: "c", arg: 1, scope: !3209, file: !105, line: 157, type: !957)
!3214 = !DILocalVariable(name: "n", arg: 2, scope: !3209, file: !105, line: 157, type: !200)
!3215 = !DILocalVariable(name: "i", scope: !3209, file: !105, line: 159, type: !200)
!3216 = !DILocation(line: 0, scope: !3209)
!3217 = !DILocation(line: 164, column: 16, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3219, file: !105, line: 164, column: 2)
!3219 = distinct !DILexicalBlock(scope: !3209, file: !105, line: 164, column: 2)
!3220 = !DILocation(line: 164, column: 2, scope: !3219)
!3221 = !DILocation(line: 165, column: 3, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3218, file: !105, line: 164, column: 26)
!3223 = !DILocation(line: 165, column: 13, scope: !3222)
!3224 = !DILocation(line: 164, column: 22, scope: !3218)
!3225 = distinct !{!3225, !3220, !3226}
!3226 = !DILocation(line: 166, column: 2, scope: !3219)
!3227 = !DILocation(line: 171, column: 1, scope: !3209)
!3228 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !3229, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3231)
!3229 = !DISubroutineType(types: !3230)
!3230 = !{null, !144, null}
!3231 = !{!3232, !3233}
!3232 = !DILocalVariable(name: "fmt", arg: 1, scope: !3228, file: !105, line: 203, type: !144)
!3233 = !DILocalVariable(name: "ap", scope: !3228, file: !105, line: 205, type: !3160)
!3234 = !DILocation(line: 0, scope: !3228)
!3235 = !DILocation(line: 205, column: 2, scope: !3228)
!3236 = !DILocation(line: 205, column: 10, scope: !3228)
!3237 = !DILocation(line: 207, column: 2, scope: !3228)
!3238 = !DILocation(line: 209, column: 2, scope: !3228)
!3239 = !DILocation(line: 211, column: 2, scope: !3228)
!3240 = !DILocation(line: 212, column: 1, scope: !3228)
!3241 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !3242, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3244)
!3242 = !DISubroutineType(types: !3243)
!3243 = !{!103, !957, !200, !144, null}
!3244 = !{!3245, !3246, !3247, !3248, !3249}
!3245 = !DILocalVariable(name: "str", arg: 1, scope: !3241, file: !105, line: 239, type: !957)
!3246 = !DILocalVariable(name: "size", arg: 2, scope: !3241, file: !105, line: 239, type: !200)
!3247 = !DILocalVariable(name: "fmt", arg: 3, scope: !3241, file: !105, line: 239, type: !144)
!3248 = !DILocalVariable(name: "ap", scope: !3241, file: !105, line: 241, type: !3160)
!3249 = !DILocalVariable(name: "ret", scope: !3241, file: !105, line: 242, type: !103)
!3250 = !DILocation(line: 0, scope: !3241)
!3251 = !DILocation(line: 241, column: 2, scope: !3241)
!3252 = !DILocation(line: 241, column: 10, scope: !3241)
!3253 = !DILocation(line: 244, column: 2, scope: !3241)
!3254 = !DILocation(line: 245, column: 8, scope: !3241)
!3255 = !DILocation(line: 246, column: 2, scope: !3241)
!3256 = !DILocation(line: 249, column: 1, scope: !3241)
!3257 = !DILocation(line: 248, column: 2, scope: !3241)
!3258 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !3259, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3261)
!3259 = !DISubroutineType(types: !3260)
!3260 = !{!103, !957, !200, !144, !3160}
!3261 = !{!3262, !3263, !3264, !3265, !3266}
!3262 = !DILocalVariable(name: "str", arg: 1, scope: !3258, file: !105, line: 251, type: !957)
!3263 = !DILocalVariable(name: "size", arg: 2, scope: !3258, file: !105, line: 251, type: !200)
!3264 = !DILocalVariable(name: "fmt", arg: 3, scope: !3258, file: !105, line: 251, type: !144)
!3265 = !DILocalVariable(name: "ap", arg: 4, scope: !3258, file: !105, line: 251, type: !3160)
!3266 = !DILocalVariable(name: "ctx", scope: !3258, file: !105, line: 253, type: !3267)
!3267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !3268)
!3268 = !{!3269, !3270, !3271}
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3267, file: !105, line: 218, baseType: !957, size: 32)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3267, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3267, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!3272 = !DILocation(line: 0, scope: !3258)
!3273 = !DILocation(line: 253, column: 2, scope: !3258)
!3274 = !DILocation(line: 253, column: 21, scope: !3258)
!3275 = !DILocation(line: 253, column: 27, scope: !3258)
!3276 = !DILocation(line: 255, column: 2, scope: !3258)
!3277 = !DILocation(line: 257, column: 10, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3258, file: !105, line: 257, column: 6)
!3279 = !DILocation(line: 257, column: 22, scope: !3278)
!3280 = !DILocation(line: 257, column: 16, scope: !3278)
!3281 = !DILocation(line: 257, column: 6, scope: !3258)
!3282 = !DILocation(line: 258, column: 3, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3278, file: !105, line: 257, column: 27)
!3284 = !DILocation(line: 258, column: 18, scope: !3283)
!3285 = !DILocation(line: 259, column: 2, scope: !3283)
!3286 = !DILocation(line: 262, column: 1, scope: !3258)
!3287 = !DILocation(line: 261, column: 2, scope: !3258)
!3288 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !3289, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3292)
!3289 = !DISubroutineType(types: !3290)
!3290 = !{!103, !103, !3291}
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 32)
!3292 = !{!3293, !3294}
!3293 = !DILocalVariable(name: "c", arg: 1, scope: !3288, file: !105, line: 223, type: !103)
!3294 = !DILocalVariable(name: "ctx", arg: 2, scope: !3288, file: !105, line: 223, type: !3291)
!3295 = !DILocation(line: 0, scope: !3288)
!3296 = !DILocation(line: 225, column: 11, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3288, file: !105, line: 225, column: 6)
!3298 = !DILocation(line: 225, column: 15, scope: !3297)
!3299 = !DILocation(line: 0, scope: !3297)
!3300 = !DILocation(line: 225, column: 23, scope: !3297)
!3301 = !DILocation(line: 225, column: 45, scope: !3297)
!3302 = !DILocation(line: 225, column: 37, scope: !3297)
!3303 = !DILocation(line: 225, column: 6, scope: !3288)
!3304 = !DILocation(line: 226, column: 8, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3297, file: !105, line: 225, column: 50)
!3306 = !DILocation(line: 226, column: 13, scope: !3305)
!3307 = !DILocation(line: 227, column: 3, scope: !3305)
!3308 = !DILocation(line: 230, column: 29, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3288, file: !105, line: 230, column: 6)
!3310 = !DILocation(line: 230, column: 17, scope: !3309)
!3311 = !DILocation(line: 230, column: 6, scope: !3288)
!3312 = !DILocation(line: 231, column: 22, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3309, file: !105, line: 230, column: 34)
!3314 = !DILocation(line: 231, column: 3, scope: !3313)
!3315 = !DILocation(line: 231, column: 26, scope: !3313)
!3316 = !DILocation(line: 232, column: 2, scope: !3313)
!3317 = !DILocation(line: 233, column: 28, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3309, file: !105, line: 232, column: 9)
!3319 = !DILocation(line: 233, column: 22, scope: !3318)
!3320 = !DILocation(line: 233, column: 3, scope: !3318)
!3321 = !DILocation(line: 233, column: 26, scope: !3318)
!3322 = !DILocation(line: 237, column: 1, scope: !3288)
!3323 = distinct !DISubprogram(name: "z_thread_entry", scope: !3324, file: !3324, line: 30, type: !3325, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !3332)
!3324 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3325 = !DISubroutineType(types: !3326)
!3326 = !{null, !3327, !102, !102, !102}
!3327 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3328, line: 46, baseType: !3329)
!3328 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3330, size: 32)
!3330 = !DISubroutineType(types: !3331)
!3331 = !{null, !102, !102, !102}
!3332 = !{!3333, !3334, !3335, !3336}
!3333 = !DILocalVariable(name: "entry", arg: 1, scope: !3323, file: !3324, line: 30, type: !3327)
!3334 = !DILocalVariable(name: "p1", arg: 2, scope: !3323, file: !3324, line: 31, type: !102)
!3335 = !DILocalVariable(name: "p2", arg: 3, scope: !3323, file: !3324, line: 31, type: !102)
!3336 = !DILocalVariable(name: "p3", arg: 4, scope: !3323, file: !3324, line: 31, type: !102)
!3337 = !DILocation(line: 0, scope: !3323)
!3338 = !DILocation(line: 36, column: 2, scope: !3323)
!3339 = !DILocation(line: 38, column: 17, scope: !3323)
!3340 = !DILocation(line: 38, column: 2, scope: !3323)
!3341 = !DILocation(line: 45, column: 2, scope: !3323)
!3342 = distinct !DISubprogram(name: "k_current_get", scope: !307, file: !307, line: 530, type: !3343, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !322)
!3343 = !DISubroutineType(types: !3344)
!3344 = !{!3345}
!3345 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !3346)
!3346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3347, size: 32)
!3347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !3348)
!3348 = !{!3349, !3407, !3419, !3420, !3421, !3422, !3428, !3441}
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3347, file: !211, line: 247, baseType: !3350, size: 384)
!3350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !3351)
!3351 = !{!3352, !3376, !3383, !3384, !3385, !3394, !3395, !3396}
!3352 = !DIDerivedType(tag: DW_TAG_member, scope: !3350, file: !211, line: 60, baseType: !3353, size: 64)
!3353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3350, file: !211, line: 60, size: 64, elements: !3354)
!3354 = !{!3355, !3370}
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3353, file: !211, line: 61, baseType: !3356, size: 64)
!3356 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !3357)
!3357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !3358)
!3358 = !{!3359, !3365}
!3359 = !DIDerivedType(tag: DW_TAG_member, scope: !3357, file: !221, line: 38, baseType: !3360, size: 32)
!3360 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3357, file: !221, line: 38, size: 32, elements: !3361)
!3361 = !{!3362, !3364}
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3360, file: !221, line: 39, baseType: !3363, size: 32)
!3363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3357, size: 32)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3360, file: !221, line: 40, baseType: !3363, size: 32)
!3365 = !DIDerivedType(tag: DW_TAG_member, scope: !3357, file: !221, line: 42, baseType: !3366, size: 32, offset: 32)
!3366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3357, file: !221, line: 42, size: 32, elements: !3367)
!3367 = !{!3368, !3369}
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3366, file: !221, line: 43, baseType: !3363, size: 32)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3366, file: !221, line: 44, baseType: !3363, size: 32)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3353, file: !211, line: 62, baseType: !3371, size: 64)
!3371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !3372)
!3372 = !{!3373}
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3371, file: !237, line: 50, baseType: !3374, size: 64)
!3374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3375, size: 64, elements: !242)
!3375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3371, size: 32)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3350, file: !211, line: 68, baseType: !3377, size: 32, offset: 64)
!3377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3378, size: 32)
!3378 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !3379)
!3379 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !3380)
!3380 = !{!3381}
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3379, file: !247, line: 232, baseType: !3382, size: 64)
!3382 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !3357)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3350, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3350, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!3385 = !DIDerivedType(tag: DW_TAG_member, scope: !3350, file: !211, line: 90, baseType: !3386, size: 16, offset: 112)
!3386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3350, file: !211, line: 90, size: 16, elements: !3387)
!3387 = !{!3388, !3393}
!3388 = !DIDerivedType(tag: DW_TAG_member, scope: !3386, file: !211, line: 91, baseType: !3389, size: 16)
!3389 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3386, file: !211, line: 91, size: 16, elements: !3390)
!3390 = !{!3391, !3392}
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3389, file: !211, line: 96, baseType: !261, size: 8)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3389, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3386, file: !211, line: 100, baseType: !265, size: 16)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3350, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3350, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3350, file: !211, line: 131, baseType: !3397, size: 192, offset: 192)
!3397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !3398)
!3398 = !{!3399, !3400, !3406}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3397, file: !247, line: 245, baseType: !3356, size: 64)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3397, file: !247, line: 246, baseType: !3401, size: 32, offset: 64)
!3401 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !3402)
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 32)
!3403 = !DISubroutineType(types: !3404)
!3404 = !{null, !3405}
!3405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3397, size: 32)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3397, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3347, file: !211, line: 250, baseType: !3408, size: 288, offset: 384)
!3408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !3409)
!3409 = !{!3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418}
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3408, file: !284, line: 26, baseType: !121, size: 32)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3408, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3408, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3408, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3408, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3408, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3408, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3408, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3408, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3347, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3347, file: !211, line: 256, baseType: !3378, size: 64, offset: 704)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3347, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3347, file: !211, line: 300, baseType: !3423, size: 96, offset: 800)
!3423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !3424)
!3424 = !{!3425, !3426, !3427}
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3423, file: !211, line: 153, baseType: !22, size: 32)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3423, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3423, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3347, file: !211, line: 325, baseType: !3429, size: 32, offset: 896)
!3429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3430, size: 32)
!3430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !3431)
!3431 = !{!3432, !3438, !3439}
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3430, file: !307, line: 5074, baseType: !3433, size: 96)
!3433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !3434)
!3434 = !{!3435, !3436, !3437}
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3433, file: !311, line: 57, baseType: !314, size: 32)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3433, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3433, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3430, file: !307, line: 5075, baseType: !3378, size: 64, offset: 96)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3430, file: !307, line: 5076, baseType: !3440, offset: 160)
!3440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3347, file: !211, line: 343, baseType: !3442, size: 64, offset: 928)
!3442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !3443)
!3443 = !{!3444, !3445}
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3442, file: !284, line: 63, baseType: !121, size: 32)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3442, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!3446 = !DILocation(line: 535, column: 9, scope: !3342)
!3447 = !DILocation(line: 535, column: 2, scope: !3342)
!3448 = distinct !DISubprogram(name: "k_thread_abort", scope: !3104, file: !3104, line: 188, type: !3449, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !3451)
!3449 = !DISubroutineType(types: !3450)
!3450 = !{null, !3345}
!3451 = !{!3452}
!3452 = !DILocalVariable(name: "thread", arg: 1, scope: !3448, file: !3104, line: 188, type: !3345)
!3453 = !DILocation(line: 0, scope: !3448)
!3454 = !DILocation(line: 197, column: 2, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3448, file: !3104, line: 197, column: 2)
!3456 = !{i64 2154061197}
!3457 = !DILocation(line: 198, column: 2, scope: !3448)
!3458 = !DILocation(line: 199, column: 1, scope: !3448)
!3459 = distinct !DISubprogram(name: "z_current_get", scope: !3104, file: !3104, line: 173, type: !3343, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !322)
!3460 = !DILocation(line: 180, column: 2, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3459, file: !3104, line: 180, column: 2)
!3462 = !{i64 2154061129}
!3463 = !DILocation(line: 181, column: 9, scope: !3459)
!3464 = !DILocation(line: 181, column: 2, scope: !3459)
!3465 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2325, file: !2325, line: 1338, type: !3466, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2321, retainedNodes: !3474)
!3466 = !DISubroutineType(types: !3467)
!3467 = !{!103, !3197, !102, !144, !3468, !121}
!3468 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3161, line: 99, baseType: !3469)
!3469 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3161, line: 40, baseType: !3470)
!3470 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2325, baseType: !3471)
!3471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3472)
!3472 = !{!3473}
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3471, file: !2325, baseType: !102, size: 32)
!3474 = !{!3475, !3476, !3477, !3478, !3479, !3480, !3484, !3485, !3486, !3488, !3493, !3537, !3540, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3552, !3553, !3554, !3558, !3561, !3563, !3566, !3567, !3568, !3573, !3579, !3582, !3586, !3589, !3594, !3598, !3603, !3607, !3610, !3613, !3616, !3618, !3623, !3627, !3630, !3632, !3635}
!3475 = !DILocalVariable(name: "out", arg: 1, scope: !3465, file: !2325, line: 1338, type: !3197)
!3476 = !DILocalVariable(name: "ctx", arg: 2, scope: !3465, file: !2325, line: 1338, type: !102)
!3477 = !DILocalVariable(name: "fp", arg: 3, scope: !3465, file: !2325, line: 1338, type: !144)
!3478 = !DILocalVariable(name: "ap", arg: 4, scope: !3465, file: !2325, line: 1339, type: !3468)
!3479 = !DILocalVariable(name: "flags", arg: 5, scope: !3465, file: !2325, line: 1339, type: !121)
!3480 = !DILocalVariable(name: "buf", scope: !3465, file: !2325, line: 1341, type: !3481)
!3481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 200, elements: !3482)
!3482 = !{!3483}
!3483 = !DISubrange(count: 25)
!3484 = !DILocalVariable(name: "count", scope: !3465, file: !2325, line: 1342, type: !200)
!3485 = !DILocalVariable(name: "sint", scope: !3465, file: !2325, line: 1343, type: !2344)
!3486 = !DILocalVariable(name: "tagged_ap", scope: !3465, file: !2325, line: 1345, type: !3487)
!3487 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!3488 = !DILocalVariable(name: "rc", scope: !3489, file: !2325, line: 1377, type: !103)
!3489 = distinct !DILexicalBlock(scope: !3490, file: !2325, line: 1377, column: 4)
!3490 = distinct !DILexicalBlock(scope: !3491, file: !2325, line: 1376, column: 19)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !2325, line: 1376, column: 7)
!3492 = distinct !DILexicalBlock(scope: !3465, file: !2325, line: 1375, column: 19)
!3493 = !DILocalVariable(name: "state", scope: !3492, file: !2325, line: 1395, type: !3494)
!3494 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3465, file: !2325, line: 1392, size: 192, elements: !3495)
!3495 = !{!3496, !3505}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3494, file: !2325, line: 1393, baseType: !3497, size: 64)
!3497 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2325, line: 166, size: 64, elements: !3498)
!3498 = !{!3499, !3500, !3501, !3502, !3504}
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !3497, file: !2325, line: 168, baseType: !2344, size: 64)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !3497, file: !2325, line: 171, baseType: !2347, size: 64)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !3497, file: !2325, line: 174, baseType: !2318, size: 64)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !3497, file: !2325, line: 177, baseType: !3503, size: 64)
!3503 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3497, file: !2325, line: 180, baseType: !102, size: 32)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !3494, file: !2325, line: 1394, baseType: !3506, size: 96, offset: 64)
!3506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2325, line: 189, size: 96, elements: !3507)
!3507 = !{!3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3532}
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !3506, file: !2325, line: 191, baseType: !157, size: 1, flags: DIFlagBitField, extraData: i64 0)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !3506, file: !2325, line: 194, baseType: !157, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !3506, file: !2325, line: 197, baseType: !157, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !3506, file: !2325, line: 200, baseType: !157, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !3506, file: !2325, line: 203, baseType: !157, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !3506, file: !2325, line: 206, baseType: !157, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !3506, file: !2325, line: 209, baseType: !157, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !3506, file: !2325, line: 212, baseType: !157, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !3506, file: !2325, line: 219, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !3506, file: !2325, line: 222, baseType: !157, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !3506, file: !2325, line: 229, baseType: !157, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !3506, file: !2325, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !3506, file: !2325, line: 238, baseType: !157, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !3506, file: !2325, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !3506, file: !2325, line: 244, baseType: !157, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !3506, file: !2325, line: 247, baseType: !157, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !3506, file: !2325, line: 252, baseType: !157, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !3506, file: !2325, line: 257, baseType: !157, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !3506, file: !2325, line: 260, baseType: !155, size: 8, offset: 24)
!3527 = !DIDerivedType(tag: DW_TAG_member, scope: !3506, file: !2325, line: 262, baseType: !3528, size: 32, offset: 32)
!3528 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3506, file: !2325, line: 262, size: 32, elements: !3529)
!3529 = !{!3530, !3531}
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !3528, file: !2325, line: 267, baseType: !103, size: 32)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !3528, file: !2325, line: 289, baseType: !103, size: 32)
!3532 = !DIDerivedType(tag: DW_TAG_member, scope: !3506, file: !2325, line: 292, baseType: !3533, size: 32, offset: 64)
!3533 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3506, file: !2325, line: 292, size: 32, elements: !3534)
!3534 = !{!3535, !3536}
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !3533, file: !2325, line: 297, baseType: !103, size: 32)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !3533, file: !2325, line: 306, baseType: !103, size: 32)
!3537 = !DILocalVariable(name: "conv", scope: !3492, file: !2325, line: 1400, type: !3538)
!3538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3539)
!3539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3506, size: 32)
!3540 = !DILocalVariable(name: "value", scope: !3492, file: !2325, line: 1401, type: !3541)
!3541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3542)
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3497, size: 32)
!3543 = !DILocalVariable(name: "sp", scope: !3492, file: !2325, line: 1402, type: !144)
!3544 = !DILocalVariable(name: "width", scope: !3492, file: !2325, line: 1403, type: !103)
!3545 = !DILocalVariable(name: "precision", scope: !3492, file: !2325, line: 1404, type: !103)
!3546 = !DILocalVariable(name: "bps", scope: !3492, file: !2325, line: 1405, type: !144)
!3547 = !DILocalVariable(name: "bpe", scope: !3492, file: !2325, line: 1406, type: !144)
!3548 = !DILocalVariable(name: "sign", scope: !3492, file: !2325, line: 1407, type: !146)
!3549 = !DILocalVariable(name: "arg", scope: !3550, file: !2325, line: 1432, type: !103)
!3550 = distinct !DILexicalBlock(scope: !3551, file: !2325, line: 1431, column: 24)
!3551 = distinct !DILexicalBlock(scope: !3492, file: !2325, line: 1431, column: 7)
!3552 = !DILocalVariable(name: "specifier_cat", scope: !3492, file: !2325, line: 1468, type: !2324)
!3553 = !DILocalVariable(name: "length_mod", scope: !3492, file: !2325, line: 1470, type: !2332)
!3554 = !DILocalVariable(name: "rc", scope: !3555, file: !2325, line: 1575, type: !103)
!3555 = distinct !DILexicalBlock(scope: !3556, file: !2325, line: 1575, column: 4)
!3556 = distinct !DILexicalBlock(scope: !3557, file: !2325, line: 1574, column: 43)
!3557 = distinct !DILexicalBlock(scope: !3492, file: !2325, line: 1574, column: 7)
!3558 = !DILocalVariable(name: "rc", scope: !3559, file: !2325, line: 1584, type: !103)
!3559 = distinct !DILexicalBlock(scope: !3560, file: !2325, line: 1584, column: 4)
!3560 = distinct !DILexicalBlock(scope: !3492, file: !2325, line: 1582, column: 28)
!3561 = !DILocalVariable(name: "len", scope: !3562, file: !2325, line: 1589, type: !200)
!3562 = distinct !DILexicalBlock(scope: !3560, file: !2325, line: 1586, column: 13)
!3563 = !DILocalVariable(name: "len", scope: !3564, file: !2325, line: 1641, type: !200)
!3564 = distinct !DILexicalBlock(scope: !3565, file: !2325, line: 1640, column: 24)
!3565 = distinct !DILexicalBlock(scope: !3560, file: !2325, line: 1640, column: 8)
!3566 = !DILocalVariable(name: "nj_len", scope: !3492, file: !2325, line: 1722, type: !200)
!3567 = !DILocalVariable(name: "pad_len", scope: !3492, file: !2325, line: 1723, type: !103)
!3568 = !DILocalVariable(name: "pad", scope: !3569, file: !2325, line: 1751, type: !146)
!3569 = distinct !DILexicalBlock(scope: !3570, file: !2325, line: 1750, column: 26)
!3570 = distinct !DILexicalBlock(scope: !3571, file: !2325, line: 1750, column: 8)
!3571 = distinct !DILexicalBlock(scope: !3572, file: !2325, line: 1747, column: 18)
!3572 = distinct !DILexicalBlock(scope: !3492, file: !2325, line: 1747, column: 7)
!3573 = !DILocalVariable(name: "rc", scope: !3574, file: !2325, line: 1758, type: !103)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !2325, line: 1758, column: 7)
!3575 = distinct !DILexicalBlock(scope: !3576, file: !2325, line: 1757, column: 21)
!3576 = distinct !DILexicalBlock(scope: !3577, file: !2325, line: 1757, column: 10)
!3577 = distinct !DILexicalBlock(scope: !3578, file: !2325, line: 1756, column: 26)
!3578 = distinct !DILexicalBlock(scope: !3569, file: !2325, line: 1756, column: 9)
!3579 = !DILocalVariable(name: "rc", scope: !3580, file: !2325, line: 1765, type: !103)
!3580 = distinct !DILexicalBlock(scope: !3581, file: !2325, line: 1765, column: 6)
!3581 = distinct !DILexicalBlock(scope: !3569, file: !2325, line: 1764, column: 25)
!3582 = !DILocalVariable(name: "rc", scope: !3583, file: !2325, line: 1774, type: !103)
!3583 = distinct !DILexicalBlock(scope: !3584, file: !2325, line: 1774, column: 4)
!3584 = distinct !DILexicalBlock(scope: !3585, file: !2325, line: 1773, column: 18)
!3585 = distinct !DILexicalBlock(scope: !3492, file: !2325, line: 1773, column: 7)
!3586 = !DILocalVariable(name: "cp", scope: !3587, file: !2325, line: 1778, type: !144)
!3587 = distinct !DILexicalBlock(scope: !3588, file: !2325, line: 1777, column: 63)
!3588 = distinct !DILexicalBlock(scope: !3492, file: !2325, line: 1777, column: 7)
!3589 = !DILocalVariable(name: "rc", scope: !3590, file: !2325, line: 1783, type: !103)
!3590 = distinct !DILexicalBlock(scope: !3591, file: !2325, line: 1783, column: 6)
!3591 = distinct !DILexicalBlock(scope: !3592, file: !2325, line: 1782, column: 24)
!3592 = distinct !DILexicalBlock(scope: !3593, file: !2325, line: 1780, column: 27)
!3593 = distinct !DILexicalBlock(scope: !3587, file: !2325, line: 1780, column: 8)
!3594 = !DILocalVariable(name: "rc", scope: !3595, file: !2325, line: 1787, type: !103)
!3595 = distinct !DILexicalBlock(scope: !3596, file: !2325, line: 1787, column: 6)
!3596 = distinct !DILexicalBlock(scope: !3597, file: !2325, line: 1786, column: 41)
!3597 = distinct !DILexicalBlock(scope: !3593, file: !2325, line: 1785, column: 11)
!3598 = !DILocalVariable(name: "rc", scope: !3599, file: !2325, line: 1793, type: !103)
!3599 = distinct !DILexicalBlock(scope: !3600, file: !2325, line: 1793, column: 7)
!3600 = distinct !DILexicalBlock(scope: !3601, file: !2325, line: 1792, column: 28)
!3601 = distinct !DILexicalBlock(scope: !3602, file: !2325, line: 1791, column: 28)
!3602 = distinct !DILexicalBlock(scope: !3597, file: !2325, line: 1791, column: 9)
!3603 = !DILocalVariable(name: "rc", scope: !3604, file: !2325, line: 1798, type: !103)
!3604 = distinct !DILexicalBlock(scope: !3605, file: !2325, line: 1798, column: 6)
!3605 = distinct !DILexicalBlock(scope: !3606, file: !2325, line: 1797, column: 21)
!3606 = distinct !DILexicalBlock(scope: !3597, file: !2325, line: 1797, column: 9)
!3607 = !DILocalVariable(name: "rc", scope: !3608, file: !2325, line: 1803, type: !103)
!3608 = distinct !DILexicalBlock(scope: !3609, file: !2325, line: 1803, column: 7)
!3609 = distinct !DILexicalBlock(scope: !3605, file: !2325, line: 1802, column: 28)
!3610 = !DILocalVariable(name: "rc", scope: !3611, file: !2325, line: 1807, type: !103)
!3611 = distinct !DILexicalBlock(scope: !3612, file: !2325, line: 1807, column: 6)
!3612 = distinct !DILexicalBlock(scope: !3597, file: !2325, line: 1806, column: 41)
!3613 = !DILocalVariable(name: "rc", scope: !3614, file: !2325, line: 1813, type: !103)
!3614 = distinct !DILexicalBlock(scope: !3615, file: !2325, line: 1813, column: 5)
!3615 = distinct !DILexicalBlock(scope: !3587, file: !2325, line: 1812, column: 26)
!3616 = !DILocalVariable(name: "rc", scope: !3617, file: !2325, line: 1816, type: !103)
!3617 = distinct !DILexicalBlock(scope: !3587, file: !2325, line: 1816, column: 4)
!3618 = !DILocalVariable(name: "rc", scope: !3619, file: !2325, line: 1819, type: !103)
!3619 = distinct !DILexicalBlock(scope: !3620, file: !2325, line: 1819, column: 5)
!3620 = distinct !DILexicalBlock(scope: !3621, file: !2325, line: 1818, column: 44)
!3621 = distinct !DILexicalBlock(scope: !3622, file: !2325, line: 1818, column: 8)
!3622 = distinct !DILexicalBlock(scope: !3588, file: !2325, line: 1817, column: 10)
!3623 = !DILocalVariable(name: "rc", scope: !3624, file: !2325, line: 1823, type: !103)
!3624 = distinct !DILexicalBlock(scope: !3625, file: !2325, line: 1823, column: 5)
!3625 = distinct !DILexicalBlock(scope: !3626, file: !2325, line: 1822, column: 26)
!3626 = distinct !DILexicalBlock(scope: !3622, file: !2325, line: 1822, column: 8)
!3627 = !DILocalVariable(name: "rc", scope: !3628, file: !2325, line: 1828, type: !103)
!3628 = distinct !DILexicalBlock(scope: !3629, file: !2325, line: 1828, column: 5)
!3629 = distinct !DILexicalBlock(scope: !3622, file: !2325, line: 1827, column: 26)
!3630 = !DILocalVariable(name: "rc", scope: !3631, file: !2325, line: 1831, type: !103)
!3631 = distinct !DILexicalBlock(scope: !3622, file: !2325, line: 1831, column: 4)
!3632 = !DILocalVariable(name: "rc", scope: !3633, file: !2325, line: 1836, type: !103)
!3633 = distinct !DILexicalBlock(scope: !3634, file: !2325, line: 1836, column: 4)
!3634 = distinct !DILexicalBlock(scope: !3492, file: !2325, line: 1835, column: 21)
!3635 = !DILabel(scope: !3560, name: "prec_int_pad0", file: !2325, line: 1634)
!3636 = !DILocation(line: 0, scope: !3465)
!3637 = !DILocation(line: 1341, column: 2, scope: !3465)
!3638 = !DILocation(line: 1341, column: 7, scope: !3465)
!3639 = !DILocation(line: 1375, column: 2, scope: !3465)
!3640 = !DILocation(line: 1342, column: 9, scope: !3465)
!3641 = !DILocation(line: 1375, column: 9, scope: !3465)
!3642 = !DILocation(line: 1377, column: 4, scope: !3489)
!3643 = !DILocation(line: 0, scope: !3489)
!3644 = !DILocation(line: 1377, column: 4, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3489, file: !2325, line: 1377, column: 4)
!3646 = distinct !{!3646, !3639, !3647}
!3647 = !DILocation(line: 1839, column: 2, scope: !3465)
!3648 = !DILocation(line: 1392, column: 3, scope: !3492)
!3649 = !DILocation(line: 1395, column: 5, scope: !3492)
!3650 = !DILocation(line: 0, scope: !3492)
!3651 = !DILocation(line: 1406, column: 3, scope: !3492)
!3652 = !DILocation(line: 1406, column: 15, scope: !3492)
!3653 = !DILocation(line: 1407, column: 3, scope: !3492)
!3654 = !DILocation(line: 1407, column: 8, scope: !3492)
!3655 = !DILocation(line: 1409, column: 8, scope: !3492)
!3656 = !DILocation(line: 1414, column: 13, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3492, file: !2325, line: 1414, column: 7)
!3658 = !DILocation(line: 1414, column: 7, scope: !3492)
!3659 = !DILocation(line: 1415, column: 12, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3657, file: !2325, line: 1414, column: 25)
!3661 = !DILocation(line: 1417, column: 14, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3660, file: !2325, line: 1417, column: 8)
!3663 = !DILocation(line: 1417, column: 8, scope: !3660)
!3664 = !DILocation(line: 1418, column: 21, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3662, file: !2325, line: 1417, column: 19)
!3666 = !DILocation(line: 1419, column: 13, scope: !3665)
!3667 = !DILocation(line: 1420, column: 4, scope: !3665)
!3668 = !DILocation(line: 1421, column: 20, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3657, file: !2325, line: 1421, column: 14)
!3670 = !DILocation(line: 1421, column: 14, scope: !3657)
!3671 = !DILocation(line: 1431, column: 13, scope: !3551)
!3672 = !DILocation(line: 1431, column: 7, scope: !3492)
!3673 = !DILocation(line: 1432, column: 14, scope: !3550)
!3674 = !DILocation(line: 0, scope: !3550)
!3675 = !DILocation(line: 1434, column: 12, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3550, file: !2325, line: 1434, column: 8)
!3677 = !DILocation(line: 1434, column: 8, scope: !3550)
!3678 = !DILocation(line: 1435, column: 24, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3676, file: !2325, line: 1434, column: 17)
!3680 = !DILocation(line: 1436, column: 4, scope: !3679)
!3681 = !DILocation(line: 1439, column: 20, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3551, file: !2325, line: 1439, column: 14)
!3683 = !DILocation(line: 1439, column: 14, scope: !3551)
!3684 = !DILocation(line: 1453, column: 17, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3492, file: !2325, line: 1452, column: 7)
!3686 = !DILocation(line: 1448, column: 20, scope: !3492)
!3687 = !DILocation(line: 1449, column: 22, scope: !3492)
!3688 = !DILocation(line: 1454, column: 7, scope: !3685)
!3689 = !DILocation(line: 1469, column: 37, scope: !3492)
!3690 = !DILocation(line: 1471, column: 34, scope: !3492)
!3691 = !DILocation(line: 1478, column: 7, scope: !3492)
!3692 = !DILocation(line: 1479, column: 4, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3694, file: !2325, line: 1478, column: 40)
!3694 = distinct !DILexicalBlock(scope: !3492, file: !2325, line: 1478, column: 7)
!3695 = !DILocation(line: 1484, column: 19, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3693, file: !2325, line: 1479, column: 24)
!3697 = !DILocation(line: 1484, column: 17, scope: !3696)
!3698 = !DILocation(line: 1485, column: 5, scope: !3696)
!3699 = !DILocation(line: 1492, column: 20, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3701, file: !2325, line: 1491, column: 12)
!3701 = distinct !DILexicalBlock(scope: !3696, file: !2325, line: 1487, column: 9)
!3702 = !DILocation(line: 1492, column: 18, scope: !3700)
!3703 = !DILocation(line: 1494, column: 5, scope: !3696)
!3704 = !DILocation(line: 1497, column: 23, scope: !3696)
!3705 = !DILocation(line: 1496, column: 17, scope: !3696)
!3706 = !DILocation(line: 1498, column: 5, scope: !3696)
!3707 = !DILocation(line: 1501, column: 23, scope: !3696)
!3708 = !DILocation(line: 1500, column: 17, scope: !3696)
!3709 = !DILocation(line: 1502, column: 5, scope: !3696)
!3710 = !DILocation(line: 1513, column: 23, scope: !3696)
!3711 = !DILocation(line: 1513, column: 6, scope: !3696)
!3712 = !DILocation(line: 1512, column: 17, scope: !3696)
!3713 = !DILocation(line: 1514, column: 5, scope: !3696)
!3714 = !DILocation(line: 0, scope: !3696)
!3715 = !DILocation(line: 1516, column: 8, scope: !3693)
!3716 = !DILocation(line: 1517, column: 19, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3718, file: !2325, line: 1516, column: 33)
!3718 = distinct !DILexicalBlock(scope: !3693, file: !2325, line: 1516, column: 8)
!3719 = !DILocation(line: 1517, column: 17, scope: !3717)
!3720 = !DILocation(line: 1518, column: 4, scope: !3717)
!3721 = !DILocation(line: 1519, column: 19, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3723, file: !2325, line: 1518, column: 39)
!3723 = distinct !DILexicalBlock(scope: !3718, file: !2325, line: 1518, column: 15)
!3724 = !DILocation(line: 1519, column: 17, scope: !3722)
!3725 = !DILocation(line: 1520, column: 4, scope: !3722)
!3726 = !DILocation(line: 1522, column: 4, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3728, file: !2325, line: 1521, column: 47)
!3728 = distinct !DILexicalBlock(scope: !3694, file: !2325, line: 1521, column: 14)
!3729 = !DILocation(line: 1527, column: 19, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3727, file: !2325, line: 1522, column: 24)
!3731 = !DILocation(line: 1527, column: 17, scope: !3730)
!3732 = !DILocation(line: 1528, column: 5, scope: !3730)
!3733 = !DILocation(line: 0, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3730, file: !2325, line: 1530, column: 9)
!3735 = !DILocation(line: 1540, column: 23, scope: !3730)
!3736 = !DILocation(line: 1539, column: 17, scope: !3730)
!3737 = !DILocation(line: 1542, column: 5, scope: !3730)
!3738 = !DILocation(line: 1545, column: 23, scope: !3730)
!3739 = !DILocation(line: 1544, column: 17, scope: !3730)
!3740 = !DILocation(line: 1547, column: 5, scope: !3730)
!3741 = !DILocation(line: 1551, column: 23, scope: !3730)
!3742 = !DILocation(line: 1551, column: 6, scope: !3730)
!3743 = !DILocation(line: 1550, column: 17, scope: !3730)
!3744 = !DILocation(line: 1552, column: 5, scope: !3730)
!3745 = !DILocation(line: 0, scope: !3730)
!3746 = !DILocation(line: 1554, column: 8, scope: !3727)
!3747 = !DILocation(line: 1555, column: 19, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3749, file: !2325, line: 1554, column: 33)
!3749 = distinct !DILexicalBlock(scope: !3727, file: !2325, line: 1554, column: 8)
!3750 = !DILocation(line: 1555, column: 17, scope: !3748)
!3751 = !DILocation(line: 1556, column: 4, scope: !3748)
!3752 = !DILocation(line: 1557, column: 19, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3754, file: !2325, line: 1556, column: 39)
!3754 = distinct !DILexicalBlock(scope: !3749, file: !2325, line: 1556, column: 15)
!3755 = !DILocation(line: 1557, column: 17, scope: !3753)
!3756 = !DILocation(line: 1558, column: 4, scope: !3753)
!3757 = !DILocation(line: 0, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3759, file: !2325, line: 1560, column: 8)
!3759 = distinct !DILexicalBlock(scope: !3760, file: !2325, line: 1559, column: 45)
!3760 = distinct !DILexicalBlock(scope: !3728, file: !2325, line: 1559, column: 14)
!3761 = !DILocation(line: 1566, column: 17, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3763, file: !2325, line: 1565, column: 46)
!3763 = distinct !DILexicalBlock(scope: !3760, file: !2325, line: 1565, column: 14)
!3764 = !DILocation(line: 1566, column: 15, scope: !3762)
!3765 = !DILocation(line: 1567, column: 3, scope: !3762)
!3766 = !DILocation(line: 1574, column: 21, scope: !3557)
!3767 = !DILocation(line: 1575, column: 4, scope: !3555)
!3768 = !DILocation(line: 0, scope: !3555)
!3769 = !DILocation(line: 1575, column: 4, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3555, file: !2325, line: 1575, column: 4)
!3771 = !DILocation(line: 1582, column: 17, scope: !3492)
!3772 = !DILocation(line: 1582, column: 3, scope: !3492)
!3773 = !DILocation(line: 1584, column: 4, scope: !3559)
!3774 = !DILocation(line: 0, scope: !3559)
!3775 = !DILocation(line: 1584, column: 4, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3559, file: !2325, line: 1584, column: 4)
!3777 = !DILocation(line: 1587, column: 31, scope: !3562)
!3778 = !DILocation(line: 1591, column: 18, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3562, file: !2325, line: 1591, column: 8)
!3780 = !DILocation(line: 1591, column: 8, scope: !3562)
!3781 = !DILocation(line: 1592, column: 11, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3779, file: !2325, line: 1591, column: 24)
!3783 = !DILocation(line: 0, scope: !3562)
!3784 = !DILocation(line: 1593, column: 4, scope: !3782)
!3785 = !DILocation(line: 1594, column: 11, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3779, file: !2325, line: 1593, column: 11)
!3787 = !DILocation(line: 1604, column: 51, scope: !3560)
!3788 = !DILocation(line: 1604, column: 13, scope: !3560)
!3789 = !DILocation(line: 1604, column: 11, scope: !3560)
!3790 = !DILocation(line: 1605, column: 8, scope: !3560)
!3791 = !DILocation(line: 1606, column: 4, scope: !3560)
!3792 = !DILocation(line: 1609, column: 14, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3560, file: !2325, line: 1609, column: 8)
!3794 = !DILocation(line: 1609, column: 8, scope: !3560)
!3795 = !DILocation(line: 1610, column: 10, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3793, file: !2325, line: 1609, column: 25)
!3797 = !DILocation(line: 1611, column: 4, scope: !3796)
!3798 = !DILocation(line: 1611, column: 21, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3793, file: !2325, line: 1611, column: 15)
!3800 = !DILocation(line: 1611, column: 15, scope: !3793)
!3801 = !DILocation(line: 1612, column: 10, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3799, file: !2325, line: 1611, column: 33)
!3803 = !DILocation(line: 1613, column: 4, scope: !3802)
!3804 = !DILocation(line: 1619, column: 18, scope: !3560)
!3805 = !DILocation(line: 1620, column: 13, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3560, file: !2325, line: 1620, column: 8)
!3807 = !DILocation(line: 1620, column: 8, scope: !3560)
!3808 = !DILocation(line: 1621, column: 10, scope: !3809)
!3809 = distinct !DILexicalBlock(scope: !3806, file: !2325, line: 1620, column: 18)
!3810 = !DILocation(line: 1622, column: 36, scope: !3809)
!3811 = !DILocation(line: 1622, column: 17, scope: !3809)
!3812 = !DILocation(line: 1623, column: 4, scope: !3809)
!3813 = !DILocation(line: 1632, column: 29, scope: !3560)
!3814 = !DILocation(line: 1632, column: 10, scope: !3560)
!3815 = !DILocation(line: 1632, column: 4, scope: !3560)
!3816 = !DILocation(line: 0, scope: !3560)
!3817 = !DILocation(line: 1634, column: 3, scope: !3560)
!3818 = !DILocation(line: 1640, column: 18, scope: !3565)
!3819 = !DILocation(line: 1640, column: 8, scope: !3560)
!3820 = !DILocation(line: 1641, column: 22, scope: !3564)
!3821 = !DILocation(line: 0, scope: !3564)
!3822 = !DILocation(line: 1646, column: 21, scope: !3564)
!3823 = !DILocation(line: 1649, column: 13, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3564, file: !2325, line: 1649, column: 9)
!3825 = !DILocation(line: 1649, column: 9, scope: !3564)
!3826 = !DILocation(line: 1650, column: 35, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3824, file: !2325, line: 1649, column: 34)
!3828 = !DILocation(line: 1650, column: 23, scope: !3827)
!3829 = !DILocation(line: 1651, column: 5, scope: !3827)
!3830 = !DILocation(line: 1660, column: 15, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3560, file: !2325, line: 1660, column: 8)
!3832 = !DILocation(line: 1660, column: 19, scope: !3831)
!3833 = !DILocation(line: 1660, column: 8, scope: !3560)
!3834 = !DILocation(line: 1661, column: 23, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3831, file: !2325, line: 1660, column: 28)
!3836 = !DILocation(line: 1661, column: 11, scope: !3835)
!3837 = !DILocation(line: 1665, column: 22, scope: !3835)
!3838 = !DILocation(line: 1666, column: 21, scope: !3835)
!3839 = !DILocation(line: 1668, column: 5, scope: !3835)
!3840 = !DILocation(line: 1672, column: 8, scope: !3560)
!3841 = !DILocation(line: 1674, column: 4, scope: !3560)
!3842 = !DILocation(line: 1677, column: 30, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3844, file: !2325, line: 1676, column: 49)
!3844 = distinct !DILexicalBlock(scope: !3560, file: !2325, line: 1676, column: 8)
!3845 = !DILocation(line: 1677, column: 5, scope: !3843)
!3846 = !DILocation(line: 1680, column: 4, scope: !3560)
!3847 = !DILocation(line: 1684, column: 31, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !2325, line: 1683, column: 48)
!3849 = distinct !DILexicalBlock(scope: !3560, file: !2325, line: 1683, column: 8)
!3850 = !DILocation(line: 1684, column: 11, scope: !3848)
!3851 = !DILocation(line: 1722, column: 20, scope: !3492)
!3852 = !DILocation(line: 1725, column: 7, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3492, file: !2325, line: 1725, column: 7)
!3854 = !DILocation(line: 1687, column: 4, scope: !3560)
!3855 = !DILocation(line: 0, scope: !3779)
!3856 = !DILocation(line: 1597, column: 14, scope: !3562)
!3857 = !DILocation(line: 1597, column: 8, scope: !3562)
!3858 = !DILocation(line: 1699, column: 11, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3492, file: !2325, line: 1699, column: 7)
!3860 = !DILocation(line: 1699, column: 7, scope: !3492)
!3861 = !DILocation(line: 1725, column: 12, scope: !3853)
!3862 = !DILocation(line: 1729, column: 13, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3492, file: !2325, line: 1729, column: 7)
!3864 = !DILocation(line: 1747, column: 13, scope: !3572)
!3865 = !DILocation(line: 1747, column: 7, scope: !3492)
!3866 = !DILocation(line: 1722, column: 24, scope: !3492)
!3867 = !DILocation(line: 1725, column: 7, scope: !3492)
!3868 = !DILocation(line: 1729, column: 7, scope: !3492)
!3869 = !DILocation(line: 1736, column: 13, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3492, file: !2325, line: 1736, column: 7)
!3871 = !DILocation(line: 1735, column: 19, scope: !3492)
!3872 = !DILocation(line: 1736, column: 7, scope: !3492)
!3873 = !DILocation(line: 1748, column: 10, scope: !3571)
!3874 = !DILocation(line: 1750, column: 15, scope: !3570)
!3875 = !DILocation(line: 1750, column: 8, scope: !3571)
!3876 = !DILocation(line: 0, scope: !3569)
!3877 = !DILocation(line: 1756, column: 15, scope: !3578)
!3878 = !DILocation(line: 1756, column: 9, scope: !3569)
!3879 = !DILocation(line: 1757, column: 10, scope: !3576)
!3880 = !DILocation(line: 1758, column: 7, scope: !3574)
!3881 = !DILocation(line: 0, scope: !3574)
!3882 = !DILocation(line: 1758, column: 7, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3574, file: !2325, line: 1758, column: 7)
!3884 = !DILocation(line: 1759, column: 12, scope: !3575)
!3885 = !DILocation(line: 1760, column: 6, scope: !3575)
!3886 = !DILocation(line: 1764, column: 5, scope: !3569)
!3887 = !DILocation(line: 0, scope: !3571)
!3888 = !DILocation(line: 1764, column: 20, scope: !3569)
!3889 = !DILocation(line: 1764, column: 17, scope: !3569)
!3890 = !DILocation(line: 1765, column: 6, scope: !3580)
!3891 = !DILocation(line: 0, scope: !3580)
!3892 = !DILocation(line: 1765, column: 6, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3580, file: !2325, line: 1765, column: 6)
!3894 = distinct !{!3894, !3886, !3895}
!3895 = !DILocation(line: 1766, column: 5, scope: !3569)
!3896 = !DILocation(line: 1773, column: 7, scope: !3585)
!3897 = !DILocation(line: 1773, column: 12, scope: !3585)
!3898 = !DILocation(line: 1773, column: 7, scope: !3492)
!3899 = !DILocation(line: 1774, column: 4, scope: !3583)
!3900 = !DILocation(line: 0, scope: !3583)
!3901 = !DILocation(line: 1774, column: 4, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3583, file: !2325, line: 1774, column: 4)
!3903 = !DILocation(line: 1777, column: 55, scope: !3588)
!3904 = !DILocation(line: 1777, column: 7, scope: !3492)
!3905 = !DILocation(line: 0, scope: !3587)
!3906 = !DILocation(line: 1780, column: 14, scope: !3593)
!3907 = !DILocation(line: 1780, column: 8, scope: !3587)
!3908 = !DILocation(line: 1782, column: 12, scope: !3592)
!3909 = !DILocation(line: 1782, column: 16, scope: !3592)
!3910 = !DILocation(line: 1782, column: 5, scope: !3592)
!3911 = !DILocation(line: 1783, column: 6, scope: !3590)
!3912 = !DILocation(line: 0, scope: !3590)
!3913 = !DILocation(line: 1783, column: 6, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3590, file: !2325, line: 1783, column: 6)
!3915 = distinct !{!3915, !3910, !3916}
!3916 = !DILocation(line: 1784, column: 5, scope: !3592)
!3917 = !DILocation(line: 1786, column: 35, scope: !3597)
!3918 = !DILocation(line: 1786, column: 20, scope: !3597)
!3919 = !DILocation(line: 1786, column: 12, scope: !3597)
!3920 = !DILocation(line: 1786, column: 5, scope: !3597)
!3921 = !DILocation(line: 1787, column: 6, scope: !3595)
!3922 = !DILocation(line: 0, scope: !3595)
!3923 = !DILocation(line: 1787, column: 6, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3595, file: !2325, line: 1787, column: 6)
!3925 = distinct !{!3925, !3920, !3926}
!3926 = !DILocation(line: 1788, column: 5, scope: !3597)
!3927 = !DILocation(line: 1790, column: 21, scope: !3597)
!3928 = !DILocation(line: 1791, column: 16, scope: !3602)
!3929 = !DILocation(line: 1791, column: 9, scope: !3597)
!3930 = !DILocation(line: 1792, column: 6, scope: !3601)
!3931 = !DILocation(line: 0, scope: !3597)
!3932 = !DILocation(line: 1792, column: 23, scope: !3601)
!3933 = !DILocation(line: 1792, column: 20, scope: !3601)
!3934 = !DILocation(line: 1793, column: 7, scope: !3599)
!3935 = !DILocation(line: 0, scope: !3599)
!3936 = !DILocation(line: 1793, column: 7, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3599, file: !2325, line: 1793, column: 7)
!3938 = distinct !{!3938, !3930, !3939}
!3939 = !DILocation(line: 1794, column: 6, scope: !3601)
!3940 = !DILocation(line: 1797, column: 9, scope: !3606)
!3941 = !DILocation(line: 1797, column: 13, scope: !3606)
!3942 = !DILocation(line: 1797, column: 9, scope: !3597)
!3943 = !DILocation(line: 1806, column: 5, scope: !3597)
!3944 = !DILocation(line: 1798, column: 6, scope: !3604)
!3945 = !DILocation(line: 0, scope: !3604)
!3946 = !DILocation(line: 1798, column: 6, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3604, file: !2325, line: 1798, column: 6)
!3948 = !DILocation(line: 1802, column: 23, scope: !3605)
!3949 = !DILocation(line: 1802, column: 6, scope: !3605)
!3950 = !DILocation(line: 1802, column: 20, scope: !3605)
!3951 = !DILocation(line: 1803, column: 7, scope: !3608)
!3952 = !DILocation(line: 0, scope: !3608)
!3953 = !DILocation(line: 1803, column: 7, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3608, file: !2325, line: 1803, column: 7)
!3955 = distinct !{!3955, !3949, !3956}
!3956 = !DILocation(line: 1804, column: 6, scope: !3605)
!3957 = !DILocation(line: 1806, column: 35, scope: !3597)
!3958 = !DILocation(line: 1806, column: 20, scope: !3597)
!3959 = !DILocation(line: 1806, column: 12, scope: !3597)
!3960 = !DILocation(line: 1807, column: 6, scope: !3611)
!3961 = !DILocation(line: 0, scope: !3611)
!3962 = !DILocation(line: 1807, column: 6, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3611, file: !2325, line: 1807, column: 6)
!3964 = distinct !{!3964, !3943, !3965}
!3965 = !DILocation(line: 1808, column: 5, scope: !3597)
!3966 = !DILocation(line: 1811, column: 20, scope: !3587)
!3967 = !DILocation(line: 1812, column: 4, scope: !3587)
!3968 = !DILocation(line: 1812, column: 21, scope: !3587)
!3969 = !DILocation(line: 1812, column: 18, scope: !3587)
!3970 = !DILocation(line: 1813, column: 5, scope: !3614)
!3971 = !DILocation(line: 0, scope: !3614)
!3972 = !DILocation(line: 1813, column: 5, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3614, file: !2325, line: 1813, column: 5)
!3974 = distinct !{!3974, !3967, !3975}
!3975 = !DILocation(line: 1814, column: 4, scope: !3587)
!3976 = !DILocation(line: 1816, column: 4, scope: !3617)
!3977 = !DILocation(line: 0, scope: !3617)
!3978 = !DILocation(line: 1816, column: 4, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3617, file: !2325, line: 1816, column: 4)
!3980 = !DILocation(line: 1818, column: 8, scope: !3621)
!3981 = !DILocation(line: 1818, column: 27, scope: !3621)
!3982 = !DILocation(line: 1818, column: 25, scope: !3621)
!3983 = !DILocation(line: 1818, column: 8, scope: !3622)
!3984 = !DILocation(line: 1819, column: 5, scope: !3619)
!3985 = !DILocation(line: 0, scope: !3619)
!3986 = !DILocation(line: 1819, column: 5, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3619, file: !2325, line: 1819, column: 5)
!3988 = !DILocation(line: 1822, column: 14, scope: !3626)
!3989 = !DILocation(line: 1822, column: 8, scope: !3622)
!3990 = !DILocation(line: 1823, column: 5, scope: !3624)
!3991 = !DILocation(line: 0, scope: !3624)
!3992 = !DILocation(line: 1823, column: 5, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3624, file: !2325, line: 1823, column: 5)
!3994 = !DILocation(line: 1826, column: 20, scope: !3622)
!3995 = !DILocation(line: 1827, column: 4, scope: !3622)
!3996 = !DILocation(line: 0, scope: !3622)
!3997 = !DILocation(line: 1827, column: 21, scope: !3622)
!3998 = !DILocation(line: 1827, column: 18, scope: !3622)
!3999 = !DILocation(line: 1828, column: 5, scope: !3628)
!4000 = !DILocation(line: 0, scope: !3628)
!4001 = !DILocation(line: 1828, column: 5, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3628, file: !2325, line: 1828, column: 5)
!4003 = distinct !{!4003, !3995, !4004}
!4004 = !DILocation(line: 1829, column: 4, scope: !3622)
!4005 = !DILocation(line: 1831, column: 4, scope: !3631)
!4006 = !DILocation(line: 0, scope: !3631)
!4007 = !DILocation(line: 1831, column: 4, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !3631, file: !2325, line: 1831, column: 4)
!4009 = !DILocation(line: 1835, column: 16, scope: !3492)
!4010 = !DILocation(line: 1835, column: 3, scope: !3492)
!4011 = !DILocation(line: 1836, column: 4, scope: !3633)
!4012 = !DILocation(line: 0, scope: !3633)
!4013 = !DILocation(line: 1836, column: 4, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !3633, file: !2325, line: 1836, column: 4)
!4015 = !DILocation(line: 1837, column: 4, scope: !3634)
!4016 = distinct !{!4016, !4010, !4017}
!4017 = !DILocation(line: 1838, column: 3, scope: !3492)
!4018 = !DILocation(line: 1844, column: 1, scope: !3465)
!4019 = distinct !DISubprogram(name: "extract_conversion", scope: !2325, file: !2325, line: 642, type: !4020, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2321, retainedNodes: !4022)
!4020 = !DISubroutineType(types: !4021)
!4021 = !{!144, !3539, !144}
!4022 = !{!4023, !4024}
!4023 = !DILocalVariable(name: "conv", arg: 1, scope: !4019, file: !2325, line: 642, type: !3539)
!4024 = !DILocalVariable(name: "sp", arg: 2, scope: !4019, file: !2325, line: 643, type: !144)
!4025 = !DILocation(line: 0, scope: !4019)
!4026 = !DILocation(line: 645, column: 10, scope: !4019)
!4027 = !DILocation(line: 653, column: 2, scope: !4019)
!4028 = !DILocation(line: 654, column: 6, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !4019, file: !2325, line: 654, column: 6)
!4030 = !DILocation(line: 654, column: 10, scope: !4029)
!4031 = !DILocation(line: 654, column: 6, scope: !4019)
!4032 = !DILocation(line: 655, column: 24, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4029, file: !2325, line: 654, column: 18)
!4034 = !DILocation(line: 655, column: 19, scope: !4033)
!4035 = !DILocation(line: 656, column: 3, scope: !4033)
!4036 = !DILocation(line: 659, column: 7, scope: !4019)
!4037 = !DILocation(line: 660, column: 7, scope: !4019)
!4038 = !DILocation(line: 661, column: 7, scope: !4019)
!4039 = !DILocation(line: 662, column: 7, scope: !4019)
!4040 = !DILocation(line: 663, column: 7, scope: !4019)
!4041 = !DILocation(line: 665, column: 2, scope: !4019)
!4042 = !DILocation(line: 666, column: 1, scope: !4019)
!4043 = distinct !DISubprogram(name: "outs", scope: !2325, file: !2325, line: 1319, type: !4044, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2321, retainedNodes: !4046)
!4044 = !DISubroutineType(types: !4045)
!4045 = !{!103, !3197, !102, !144, !144}
!4046 = !{!4047, !4048, !4049, !4050, !4051, !4052}
!4047 = !DILocalVariable(name: "out", arg: 1, scope: !4043, file: !2325, line: 1319, type: !3197)
!4048 = !DILocalVariable(name: "ctx", arg: 2, scope: !4043, file: !2325, line: 1320, type: !102)
!4049 = !DILocalVariable(name: "sp", arg: 3, scope: !4043, file: !2325, line: 1321, type: !144)
!4050 = !DILocalVariable(name: "ep", arg: 4, scope: !4043, file: !2325, line: 1322, type: !144)
!4051 = !DILocalVariable(name: "count", scope: !4043, file: !2325, line: 1324, type: !200)
!4052 = !DILocalVariable(name: "rc", scope: !4053, file: !2325, line: 1327, type: !103)
!4053 = distinct !DILexicalBlock(scope: !4043, file: !2325, line: 1326, column: 45)
!4054 = !DILocation(line: 0, scope: !4043)
!4055 = !DILocation(line: 1326, column: 2, scope: !4043)
!4056 = !DILocation(line: 1324, column: 9, scope: !4043)
!4057 = !DILocation(line: 1326, column: 13, scope: !4043)
!4058 = !DILocation(line: 1326, column: 19, scope: !4043)
!4059 = !DILocation(line: 1327, column: 21, scope: !4053)
!4060 = !DILocation(line: 1326, column: 36, scope: !4043)
!4061 = !DILocation(line: 1326, column: 39, scope: !4043)
!4062 = !DILocation(line: 1327, column: 24, scope: !4053)
!4063 = !DILocation(line: 1327, column: 16, scope: !4053)
!4064 = !DILocation(line: 1327, column: 12, scope: !4053)
!4065 = !DILocation(line: 0, scope: !4053)
!4066 = !DILocation(line: 1329, column: 10, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4053, file: !2325, line: 1329, column: 7)
!4068 = !DILocation(line: 1329, column: 7, scope: !4053)
!4069 = distinct !{!4069, !4055, !4070}
!4070 = !DILocation(line: 1333, column: 2, scope: !4043)
!4071 = !DILocation(line: 1336, column: 1, scope: !4043)
!4072 = distinct !DISubprogram(name: "encode_uint", scope: !2325, file: !2325, line: 788, type: !4073, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2321, retainedNodes: !4075)
!4073 = !DISubroutineType(types: !4074)
!4074 = !{!957, !2347, !3539, !957, !144}
!4075 = !{!4076, !4077, !4078, !4079, !4080, !4081, !4083, !4084}
!4076 = !DILocalVariable(name: "value", arg: 1, scope: !4072, file: !2325, line: 788, type: !2347)
!4077 = !DILocalVariable(name: "conv", arg: 2, scope: !4072, file: !2325, line: 789, type: !3539)
!4078 = !DILocalVariable(name: "bps", arg: 3, scope: !4072, file: !2325, line: 790, type: !957)
!4079 = !DILocalVariable(name: "bpe", arg: 4, scope: !4072, file: !2325, line: 791, type: !144)
!4080 = !DILocalVariable(name: "upcase", scope: !4072, file: !2325, line: 793, type: !157)
!4081 = !DILocalVariable(name: "radix", scope: !4072, file: !2325, line: 794, type: !4082)
!4082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4083 = !DILocalVariable(name: "bp", scope: !4072, file: !2325, line: 795, type: !957)
!4084 = !DILocalVariable(name: "lsv", scope: !4085, file: !2325, line: 798, type: !32)
!4085 = distinct !DILexicalBlock(scope: !4072, file: !2325, line: 797, column: 5)
!4086 = !DILocation(line: 0, scope: !4072)
!4087 = !DILocation(line: 793, column: 35, scope: !4072)
!4088 = !DILocation(line: 793, column: 24, scope: !4072)
!4089 = !DILocation(line: 793, column: 16, scope: !4072)
!4090 = !DILocation(line: 794, column: 29, scope: !4072)
!4091 = !DILocation(line: 795, column: 24, scope: !4072)
!4092 = !DILocation(line: 795, column: 17, scope: !4072)
!4093 = !DILocation(line: 797, column: 2, scope: !4072)
!4094 = !DILocation(line: 802, column: 9, scope: !4085)
!4095 = !DILocation(line: 798, column: 22, scope: !4085)
!4096 = !DILocation(line: 0, scope: !4085)
!4097 = !DILocation(line: 800, column: 16, scope: !4085)
!4098 = !DILocation(line: 800, column: 11, scope: !4085)
!4099 = !DILocation(line: 800, column: 4, scope: !4085)
!4100 = !DILocation(line: 800, column: 9, scope: !4085)
!4101 = !DILocation(line: 803, column: 18, scope: !4072)
!4102 = !DILocation(line: 803, column: 24, scope: !4072)
!4103 = !DILocation(line: 803, column: 2, scope: !4085)
!4104 = distinct !{!4104, !4093, !4105}
!4105 = !DILocation(line: 803, column: 37, scope: !4072)
!4106 = !DILocation(line: 808, column: 12, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4072, file: !2325, line: 808, column: 6)
!4108 = !DILocation(line: 808, column: 6, scope: !4072)
!4109 = !DILocation(line: 809, column: 7, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4107, file: !2325, line: 808, column: 23)
!4111 = !DILocation(line: 813, column: 3, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4113, file: !2325, line: 811, column: 27)
!4113 = distinct !DILexicalBlock(scope: !4114, file: !2325, line: 811, column: 14)
!4114 = distinct !DILexicalBlock(scope: !4110, file: !2325, line: 809, column: 7)
!4115 = !DILocation(line: 0, scope: !4114)
!4116 = !DILocation(line: 818, column: 2, scope: !4072)
!4117 = distinct !DISubprogram(name: "store_count", scope: !2325, file: !2325, line: 1280, type: !4118, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2321, retainedNodes: !4122)
!4118 = !DISubroutineType(types: !4119)
!4119 = !{null, !4120, !102, !103}
!4120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4121, size: 32)
!4121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3506)
!4122 = !{!4123, !4124, !4125}
!4123 = !DILocalVariable(name: "conv", arg: 1, scope: !4117, file: !2325, line: 1280, type: !4120)
!4124 = !DILocalVariable(name: "dp", arg: 2, scope: !4117, file: !2325, line: 1281, type: !102)
!4125 = !DILocalVariable(name: "count", arg: 3, scope: !4117, file: !2325, line: 1282, type: !103)
!4126 = !DILocation(line: 0, scope: !4117)
!4127 = !DILocation(line: 1284, column: 38, scope: !4117)
!4128 = !DILocation(line: 1284, column: 2, scope: !4117)
!4129 = !DILocation(line: 1286, column: 4, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4117, file: !2325, line: 1284, column: 50)
!4131 = !DILocation(line: 1286, column: 14, scope: !4130)
!4132 = !DILocation(line: 1287, column: 3, scope: !4130)
!4133 = !DILocation(line: 1289, column: 24, scope: !4130)
!4134 = !DILocation(line: 1289, column: 22, scope: !4130)
!4135 = !DILocation(line: 1290, column: 3, scope: !4130)
!4136 = !DILocation(line: 1292, column: 18, scope: !4130)
!4137 = !DILocation(line: 1292, column: 4, scope: !4130)
!4138 = !DILocation(line: 1292, column: 16, scope: !4130)
!4139 = !DILocation(line: 1293, column: 3, scope: !4130)
!4140 = !DILocation(line: 1295, column: 4, scope: !4130)
!4141 = !DILocation(line: 1295, column: 15, scope: !4130)
!4142 = !DILocation(line: 1296, column: 3, scope: !4130)
!4143 = !DILocation(line: 1298, column: 22, scope: !4130)
!4144 = !DILocation(line: 1298, column: 4, scope: !4130)
!4145 = !DILocation(line: 1298, column: 20, scope: !4130)
!4146 = !DILocation(line: 1299, column: 3, scope: !4130)
!4147 = !DILocation(line: 1301, column: 21, scope: !4130)
!4148 = !DILocation(line: 1301, column: 4, scope: !4130)
!4149 = !DILocation(line: 1301, column: 19, scope: !4130)
!4150 = !DILocation(line: 1302, column: 3, scope: !4130)
!4151 = !DILocation(line: 1304, column: 4, scope: !4130)
!4152 = !DILocation(line: 1304, column: 17, scope: !4130)
!4153 = !DILocation(line: 1305, column: 3, scope: !4130)
!4154 = !DILocation(line: 1307, column: 4, scope: !4130)
!4155 = !DILocation(line: 1307, column: 20, scope: !4130)
!4156 = !DILocation(line: 1308, column: 3, scope: !4130)
!4157 = !DILocation(line: 1316, column: 1, scope: !4117)
!4158 = distinct !DISubprogram(name: "encode_float", scope: !2325, file: !2325, line: 866, type: !4159, scopeLine: 872, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2321, retainedNodes: !4162)
!4159 = !DISubroutineType(types: !4160)
!4160 = !{!957, !2318, !3539, !103, !957, !957, !4161}
!4161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!4162 = !{!4163, !4164, !4165, !4166, !4167, !4168, !4169, !4174, !4175, !4176, !4177, !4178, !4179, !4180, !4181, !4182, !4183}
!4163 = !DILocalVariable(name: "value", arg: 1, scope: !4158, file: !2325, line: 866, type: !2318)
!4164 = !DILocalVariable(name: "conv", arg: 2, scope: !4158, file: !2325, line: 867, type: !3539)
!4165 = !DILocalVariable(name: "precision", arg: 3, scope: !4158, file: !2325, line: 868, type: !103)
!4166 = !DILocalVariable(name: "sign", arg: 4, scope: !4158, file: !2325, line: 869, type: !957)
!4167 = !DILocalVariable(name: "bps", arg: 5, scope: !4158, file: !2325, line: 870, type: !957)
!4168 = !DILocalVariable(name: "bpe", arg: 6, scope: !4158, file: !2325, line: 871, type: !4161)
!4169 = !DILocalVariable(name: "u", scope: !4158, file: !2325, line: 876, type: !4170)
!4170 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4158, file: !2325, line: 873, size: 64, elements: !4171)
!4171 = !{!4172, !4173}
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "u64", scope: !4170, file: !2325, line: 874, baseType: !1270, size: 64)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4170, file: !2325, line: 875, baseType: !2318, size: 64)
!4174 = !DILocalVariable(name: "prune_zero", scope: !4158, file: !2325, line: 879, type: !157)
!4175 = !DILocalVariable(name: "buf", scope: !4158, file: !2325, line: 880, type: !957)
!4176 = !DILocalVariable(name: "c", scope: !4158, file: !2325, line: 898, type: !146)
!4177 = !DILocalVariable(name: "expo", scope: !4158, file: !2325, line: 899, type: !103)
!4178 = !DILocalVariable(name: "fract", scope: !4158, file: !2325, line: 900, type: !1270)
!4179 = !DILocalVariable(name: "is_subnormal", scope: !4158, file: !2325, line: 901, type: !157)
!4180 = !DILocalVariable(name: "decexp", scope: !4158, file: !2325, line: 1083, type: !103)
!4181 = !DILocalVariable(name: "decimals", scope: !4158, file: !2325, line: 1145, type: !103)
!4182 = !DILocalVariable(name: "digit_count", scope: !4158, file: !2325, line: 1155, type: !103)
!4183 = !DILocalVariable(name: "round", scope: !4158, file: !2325, line: 1162, type: !1270)
!4184 = !DILocation(line: 0, scope: !4158)
!4185 = !DILocation(line: 876, column: 8, scope: !4158)
!4186 = !DILocation(line: 885, column: 26, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4158, file: !2325, line: 885, column: 6)
!4188 = !DILocation(line: 885, column: 6, scope: !4158)
!4189 = !DILocation(line: 887, column: 19, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4187, file: !2325, line: 887, column: 13)
!4191 = !DILocation(line: 887, column: 13, scope: !4187)
!4192 = !DILocation(line: 889, column: 19, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4190, file: !2325, line: 889, column: 13)
!4194 = !DILocation(line: 889, column: 13, scope: !4190)
!4195 = !DILocation(line: 0, scope: !4187)
!4196 = !DILocation(line: 898, column: 17, scope: !4158)
!4197 = !DILocation(line: 899, column: 20, scope: !4158)
!4198 = !DILocation(line: 899, column: 13, scope: !4158)
!4199 = !DILocation(line: 900, column: 2, scope: !4158)
!4200 = !DILocation(line: 900, column: 25, scope: !4158)
!4201 = !DILocation(line: 901, column: 28, scope: !4158)
!4202 = !DILocation(line: 901, column: 34, scope: !4158)
!4203 = !DILocation(line: 906, column: 11, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4158, file: !2325, line: 906, column: 6)
!4205 = !DILocation(line: 906, column: 6, scope: !4158)
!4206 = !DILocation(line: 907, column: 13, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4208, file: !2325, line: 907, column: 7)
!4208 = distinct !DILexicalBlock(scope: !4204, file: !2325, line: 906, column: 39)
!4209 = !DILocation(line: 0, scope: !4207)
!4210 = !DILocation(line: 907, column: 7, scope: !4208)
!4211 = !DILocation(line: 930, column: 9, scope: !4208)
!4212 = !DILocation(line: 930, column: 19, scope: !4208)
!4213 = !DILocation(line: 932, column: 8, scope: !4208)
!4214 = !DILocation(line: 933, column: 3, scope: !4208)
!4215 = !DILocation(line: 937, column: 8, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4158, file: !2325, line: 937, column: 6)
!4217 = !DILocation(line: 937, column: 6, scope: !4158)
!4218 = !DILocation(line: 1054, column: 8, scope: !4158)
!4219 = !DILocation(line: 1058, column: 7, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4158, file: !2325, line: 1058, column: 6)
!4221 = !DILocation(line: 1058, column: 12, scope: !4220)
!4222 = !DILocation(line: 1058, column: 21, scope: !4220)
!4223 = !DILocation(line: 1058, column: 6, scope: !4158)
!4224 = !DILocation(line: 1059, column: 7, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4220, file: !2325, line: 1058, column: 27)
!4226 = !DILocation(line: 1063, column: 19, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4228, file: !2325, line: 1059, column: 21)
!4228 = distinct !DILexicalBlock(scope: !4225, file: !2325, line: 1059, column: 7)
!4229 = !DILocation(line: 1063, column: 36, scope: !4227)
!4230 = !DILocation(line: 1064, column: 9, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4227, file: !2325, line: 1063, column: 42)
!4232 = !DILocation(line: 1063, column: 4, scope: !4227)
!4233 = distinct !{!4233, !4232, !4234}
!4234 = !DILocation(line: 1065, column: 4, scope: !4227)
!4235 = !DILocation(line: 1072, column: 9, scope: !4225)
!4236 = !DILocation(line: 899, column: 6, scope: !4158)
!4237 = !DILocation(line: 1071, column: 8, scope: !4225)
!4238 = !DILocation(line: 1085, column: 14, scope: !4158)
!4239 = !DILocation(line: 1085, column: 2, scope: !4158)
!4240 = !DILocation(line: 1090, column: 3, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4158, file: !2325, line: 1085, column: 20)
!4242 = !DILocation(line: 1101, column: 14, scope: !4158)
!4243 = !DILocation(line: 1101, column: 2, scope: !4158)
!4244 = !DILocation(line: 1091, column: 10, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4241, file: !2325, line: 1090, column: 6)
!4246 = !DILocation(line: 1092, column: 8, scope: !4245)
!4247 = !DILocation(line: 1093, column: 29, scope: !4241)
!4248 = !DILocation(line: 1093, column: 12, scope: !4241)
!4249 = !DILocation(line: 1093, column: 36, scope: !4241)
!4250 = !DILocation(line: 1093, column: 3, scope: !4245)
!4251 = distinct !{!4251, !4240, !4252}
!4252 = !DILocation(line: 1093, column: 56, scope: !4241)
!4253 = !DILocation(line: 1096, column: 9, scope: !4241)
!4254 = !DILocation(line: 1097, column: 7, scope: !4241)
!4255 = !DILocation(line: 1098, column: 9, scope: !4241)
!4256 = distinct !{!4256, !4239, !4257}
!4257 = !DILocation(line: 1099, column: 2, scope: !4158)
!4258 = !DILocation(line: 1110, column: 9, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4158, file: !2325, line: 1101, column: 19)
!4260 = !DILocation(line: 1114, column: 10, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4259, file: !2325, line: 1113, column: 6)
!4262 = distinct !{!4262, !4243, !4263}
!4263 = !DILocation(line: 1117, column: 2, scope: !4158)
!4264 = !DILocation(line: 1107, column: 9, scope: !4259)
!4265 = !DILocation(line: 1108, column: 3, scope: !4259)
!4266 = !DILocation(line: 1109, column: 7, scope: !4259)
!4267 = !DILocation(line: 1113, column: 3, scope: !4259)
!4268 = !DILocation(line: 0, scope: !4259)
!4269 = !DILocation(line: 1115, column: 8, scope: !4261)
!4270 = !DILocation(line: 1116, column: 12, scope: !4259)
!4271 = !DILocation(line: 1116, column: 3, scope: !4261)
!4272 = !DILocation(line: 1124, column: 8, scope: !4158)
!4273 = !DILocation(line: 1124, column: 15, scope: !4158)
!4274 = !DILocation(line: 1126, column: 17, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4158, file: !2325, line: 1126, column: 6)
!4276 = !DILocation(line: 1131, column: 14, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4278, file: !2325, line: 1131, column: 7)
!4278 = distinct !DILexicalBlock(scope: !4275, file: !2325, line: 1126, column: 32)
!4279 = !DILocation(line: 1131, column: 25, scope: !4277)
!4280 = !DILocation(line: 1132, column: 6, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4277, file: !2325, line: 1131, column: 48)
!4282 = !DILocation(line: 1133, column: 18, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4281, file: !2325, line: 1133, column: 8)
!4284 = !DILocation(line: 1133, column: 8, scope: !4281)
!4285 = !DILocation(line: 1138, column: 14, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4277, file: !2325, line: 1136, column: 10)
!4287 = !DILocation(line: 0, scope: !4277)
!4288 = !DILocation(line: 1140, column: 14, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4278, file: !2325, line: 1140, column: 7)
!4290 = !DILocation(line: 1140, column: 24, scope: !4289)
!4291 = !DILocation(line: 1146, column: 8, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4158, file: !2325, line: 1146, column: 6)
!4293 = !DILocation(line: 1146, column: 6, scope: !4158)
!4294 = !DILocation(line: 1155, column: 2, scope: !4158)
!4295 = !DILocation(line: 1155, column: 6, scope: !4158)
!4296 = !DILocation(line: 1157, column: 6, scope: !4158)
!4297 = !DILocation(line: 1162, column: 2, scope: !4158)
!4298 = !DILocation(line: 1162, column: 11, scope: !4158)
!4299 = !DILocation(line: 1163, column: 2, scope: !4158)
!4300 = !DILocation(line: 1163, column: 17, scope: !4158)
!4301 = !DILocation(line: 1164, column: 3, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4158, file: !2325, line: 1163, column: 21)
!4303 = distinct !{!4303, !4299, !4304}
!4304 = !DILocation(line: 1165, column: 2, scope: !4158)
!4305 = !DILocation(line: 1166, column: 11, scope: !4158)
!4306 = !DILocation(line: 1166, column: 8, scope: !4158)
!4307 = !DILocation(line: 1168, column: 12, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4158, file: !2325, line: 1168, column: 6)
!4309 = !DILocation(line: 1168, column: 6, scope: !4158)
!4310 = !DILocation(line: 1169, column: 3, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4308, file: !2325, line: 1168, column: 26)
!4312 = !DILocation(line: 1170, column: 9, scope: !4311)
!4313 = !DILocation(line: 1171, column: 2, scope: !4311)
!4314 = !DILocation(line: 1173, column: 6, scope: !4158)
!4315 = !DILocation(line: 1174, column: 14, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4317, file: !2325, line: 1174, column: 7)
!4317 = distinct !DILexicalBlock(scope: !4318, file: !2325, line: 1173, column: 16)
!4318 = distinct !DILexicalBlock(scope: !4158, file: !2325, line: 1173, column: 6)
!4319 = !DILocation(line: 1174, column: 7, scope: !4317)
!4320 = !DILocation(line: 1177, column: 14, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4322, file: !2325, line: 1176, column: 42)
!4322 = distinct !DILexicalBlock(scope: !4316, file: !2325, line: 1174, column: 19)
!4323 = !DILocation(line: 1177, column: 9, scope: !4321)
!4324 = !DILocation(line: 1177, column: 12, scope: !4321)
!4325 = !DILocation(line: 1178, column: 11, scope: !4321)
!4326 = !DILocation(line: 1176, column: 18, scope: !4322)
!4327 = !DILocation(line: 1176, column: 22, scope: !4322)
!4328 = !DILocation(line: 1176, column: 4, scope: !4322)
!4329 = distinct !{!4329, !4328, !4330}
!4330 = !DILocation(line: 1179, column: 4, scope: !4322)
!4331 = !DILocation(line: 1181, column: 10, scope: !4322)
!4332 = !DILocation(line: 1181, column: 21, scope: !4322)
!4333 = !DILocation(line: 1184, column: 3, scope: !4322)
!4334 = !DILocation(line: 1185, column: 8, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4316, file: !2325, line: 1184, column: 10)
!4336 = !DILocation(line: 1185, column: 11, scope: !4335)
!4337 = !DILocation(line: 1191, column: 13, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4317, file: !2325, line: 1191, column: 7)
!4339 = !DILocation(line: 1191, column: 23, scope: !4338)
!4340 = !DILocation(line: 1192, column: 8, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4338, file: !2325, line: 1191, column: 43)
!4342 = !DILocation(line: 1192, column: 11, scope: !4341)
!4343 = !DILocation(line: 1193, column: 3, scope: !4341)
!4344 = !DILocation(line: 1195, column: 14, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4317, file: !2325, line: 1195, column: 7)
!4346 = !DILocation(line: 1195, column: 18, scope: !4345)
!4347 = !DILocation(line: 1196, column: 23, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4345, file: !2325, line: 1195, column: 36)
!4349 = !DILocation(line: 1196, column: 10, scope: !4348)
!4350 = !DILocation(line: 1197, column: 25, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4348, file: !2325, line: 1197, column: 8)
!4352 = !DILocation(line: 1197, column: 8, scope: !4348)
!4353 = !DILocation(line: 0, scope: !4348)
!4354 = !DILocation(line: 1201, column: 14, scope: !4348)
!4355 = !DILocation(line: 1202, column: 21, scope: !4348)
!4356 = !DILocation(line: 1203, column: 3, scope: !4348)
!4357 = !DILocation(line: 1208, column: 10, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4318, file: !2325, line: 1204, column: 9)
!4359 = !DILocation(line: 1208, column: 8, scope: !4358)
!4360 = !DILocation(line: 1209, column: 11, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4358, file: !2325, line: 1209, column: 7)
!4362 = !DILocation(line: 1209, column: 14, scope: !4361)
!4363 = !DILocation(line: 1209, column: 7, scope: !4358)
!4364 = !DILocation(line: 1216, column: 13, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4358, file: !2325, line: 1216, column: 7)
!4366 = !DILocation(line: 1216, column: 23, scope: !4365)
!4367 = !DILocation(line: 1217, column: 8, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4365, file: !2325, line: 1216, column: 43)
!4369 = !DILocation(line: 1217, column: 11, scope: !4368)
!4370 = !DILocation(line: 1218, column: 3, scope: !4368)
!4371 = !DILocation(line: 0, scope: !4318)
!4372 = !DILocation(line: 1221, column: 19, scope: !4158)
!4373 = !DILocation(line: 1221, column: 23, scope: !4158)
!4374 = !DILocation(line: 1221, column: 2, scope: !4158)
!4375 = !DILocation(line: 1222, column: 12, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4158, file: !2325, line: 1221, column: 43)
!4377 = !DILocation(line: 1222, column: 7, scope: !4376)
!4378 = !DILocation(line: 1222, column: 10, scope: !4376)
!4379 = !DILocation(line: 1223, column: 12, scope: !4376)
!4380 = distinct !{!4380, !4374, !4381}
!4381 = !DILocation(line: 1224, column: 2, scope: !4158)
!4382 = !DILocation(line: 1226, column: 8, scope: !4158)
!4383 = !DILocation(line: 1226, column: 21, scope: !4158)
!4384 = !DILocation(line: 1228, column: 6, scope: !4158)
!4385 = !DILocation(line: 1229, column: 22, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4387, file: !2325, line: 1228, column: 18)
!4387 = distinct !DILexicalBlock(scope: !4158, file: !2325, line: 1228, column: 6)
!4388 = !DILocation(line: 1230, column: 3, scope: !4386)
!4389 = !DILocation(line: 1230, column: 11, scope: !4386)
!4390 = !DILocation(line: 1230, column: 10, scope: !4386)
!4391 = !DILocation(line: 1239, column: 17, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4158, file: !2325, line: 1239, column: 6)
!4393 = !DILocation(line: 1240, column: 7, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4392, file: !2325, line: 1239, column: 32)
!4395 = !DILocation(line: 1240, column: 10, scope: !4394)
!4396 = !DILocation(line: 1241, column: 14, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4394, file: !2325, line: 1241, column: 7)
!4398 = !DILocation(line: 1241, column: 7, scope: !4394)
!4399 = !DILocation(line: 0, scope: !4397)
!4400 = !DILocation(line: 1249, column: 14, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4394, file: !2325, line: 1249, column: 7)
!4402 = !DILocation(line: 1249, column: 7, scope: !4394)
!4403 = !DILocation(line: 1250, column: 21, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4401, file: !2325, line: 1249, column: 22)
!4405 = !DILocation(line: 1250, column: 13, scope: !4404)
!4406 = !DILocation(line: 1250, column: 8, scope: !4404)
!4407 = !DILocation(line: 1250, column: 11, scope: !4404)
!4408 = !DILocation(line: 1252, column: 3, scope: !4404)
!4409 = !DILocation(line: 0, scope: !4394)
!4410 = !DILocation(line: 1254, column: 20, scope: !4394)
!4411 = !DILocation(line: 1254, column: 12, scope: !4394)
!4412 = !DILocation(line: 1254, column: 7, scope: !4394)
!4413 = !DILocation(line: 1254, column: 10, scope: !4394)
!4414 = !DILocation(line: 1255, column: 12, scope: !4394)
!4415 = !DILocation(line: 1255, column: 7, scope: !4394)
!4416 = !DILocation(line: 1255, column: 10, scope: !4394)
!4417 = !DILocation(line: 1256, column: 2, scope: !4394)
!4418 = !DILocation(line: 1259, column: 24, scope: !4158)
!4419 = !DILocation(line: 1259, column: 35, scope: !4158)
!4420 = !DILocation(line: 1260, column: 3, scope: !4158)
!4421 = !DILocation(line: 1260, column: 13, scope: !4158)
!4422 = !DILocation(line: 1260, column: 26, scope: !4158)
!4423 = !DILocation(line: 1259, column: 8, scope: !4158)
!4424 = !DILocation(line: 1259, column: 15, scope: !4158)
!4425 = !DILocation(line: 1266, column: 7, scope: !4158)
!4426 = !DILocation(line: 1267, column: 7, scope: !4158)
!4427 = !DILocation(line: 1269, column: 1, scope: !4158)
!4428 = distinct !DISubprogram(name: "isdigit", scope: !4429, file: !4429, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2321, retainedNodes: !4430)
!4429 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4430 = !{!4431}
!4431 = !DILocalVariable(name: "a", arg: 1, scope: !4428, file: !4429, line: 43, type: !103)
!4432 = !DILocation(line: 0, scope: !4428)
!4433 = !DILocation(line: 45, column: 29, scope: !4428)
!4434 = !DILocation(line: 45, column: 45, scope: !4428)
!4435 = !DILocation(line: 45, column: 2, scope: !4428)
!4436 = distinct !DISubprogram(name: "isupper", scope: !4429, file: !4429, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2321, retainedNodes: !4437)
!4437 = !{!4438}
!4438 = !DILocalVariable(name: "a", arg: 1, scope: !4436, file: !4429, line: 16, type: !103)
!4439 = !DILocation(line: 0, scope: !4436)
!4440 = !DILocation(line: 18, column: 29, scope: !4436)
!4441 = !DILocation(line: 18, column: 45, scope: !4436)
!4442 = !DILocation(line: 18, column: 2, scope: !4436)
!4443 = distinct !DISubprogram(name: "_ldiv5", scope: !2325, file: !2325, line: 702, type: !4444, scopeLine: 703, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2321, retainedNodes: !4447)
!4444 = !DISubroutineType(types: !4445)
!4445 = !{null, !4446}
!4446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 32)
!4447 = !{!4448, !4449, !4450, !4451, !4452}
!4448 = !DILocalVariable(name: "v", arg: 1, scope: !4443, file: !2325, line: 702, type: !4446)
!4449 = !DILocalVariable(name: "v_lo", scope: !4443, file: !2325, line: 704, type: !121)
!4450 = !DILocalVariable(name: "v_hi", scope: !4443, file: !2325, line: 705, type: !121)
!4451 = !DILocalVariable(name: "m", scope: !4443, file: !2325, line: 706, type: !121)
!4452 = !DILocalVariable(name: "result", scope: !4443, file: !2325, line: 707, type: !1270)
!4453 = !DILocation(line: 0, scope: !4443)
!4454 = !DILocation(line: 704, column: 18, scope: !4443)
!4455 = !DILocation(line: 705, column: 21, scope: !4443)
!4456 = !DILocation(line: 714, column: 2, scope: !4443)
!4457 = !{i64 17322}
!4458 = !DILocation(line: 720, column: 12, scope: !4443)
!4459 = !DILocation(line: 720, column: 31, scope: !4443)
!4460 = !DILocation(line: 723, column: 12, scope: !4443)
!4461 = !DILocation(line: 723, column: 27, scope: !4443)
!4462 = !DILocation(line: 723, column: 9, scope: !4443)
!4463 = !DILocation(line: 724, column: 9, scope: !4443)
!4464 = !DILocation(line: 726, column: 27, scope: !4443)
!4465 = !DILocation(line: 725, column: 9, scope: !4443)
!4466 = !DILocation(line: 726, column: 9, scope: !4443)
!4467 = !DILocation(line: 727, column: 9, scope: !4443)
!4468 = !DILocation(line: 728, column: 9, scope: !4443)
!4469 = !DILocation(line: 730, column: 5, scope: !4443)
!4470 = !DILocation(line: 731, column: 1, scope: !4443)
!4471 = distinct !DISubprogram(name: "_ldiv10", scope: !2325, file: !2325, line: 736, type: !4444, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2321, retainedNodes: !4472)
!4472 = !{!4473}
!4473 = !DILocalVariable(name: "v", arg: 1, scope: !4471, file: !2325, line: 736, type: !4446)
!4474 = !DILocation(line: 0, scope: !4471)
!4475 = !DILocation(line: 738, column: 5, scope: !4471)
!4476 = !DILocation(line: 739, column: 2, scope: !4471)
!4477 = !DILocation(line: 740, column: 1, scope: !4471)
!4478 = distinct !DISubprogram(name: "_get_digit", scope: !2325, file: !2325, line: 745, type: !4479, scopeLine: 746, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2321, retainedNodes: !4481)
!4479 = !DISubroutineType(types: !4480)
!4480 = !{!146, !4446, !2349}
!4481 = !{!4482, !4483, !4484}
!4482 = !DILocalVariable(name: "fr", arg: 1, scope: !4478, file: !2325, line: 745, type: !4446)
!4483 = !DILocalVariable(name: "digit_count", arg: 2, scope: !4478, file: !2325, line: 745, type: !2349)
!4484 = !DILocalVariable(name: "rval", scope: !4478, file: !2325, line: 747, type: !146)
!4485 = !DILocation(line: 0, scope: !4478)
!4486 = !DILocation(line: 749, column: 6, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4478, file: !2325, line: 749, column: 6)
!4488 = !DILocation(line: 749, column: 19, scope: !4487)
!4489 = !DILocation(line: 749, column: 6, scope: !4478)
!4490 = !DILocation(line: 750, column: 3, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !4487, file: !2325, line: 749, column: 24)
!4492 = !DILocation(line: 751, column: 7, scope: !4491)
!4493 = !DILocation(line: 752, column: 16, scope: !4491)
!4494 = !DILocation(line: 752, column: 10, scope: !4491)
!4495 = !DILocation(line: 753, column: 7, scope: !4491)
!4496 = !DILocation(line: 754, column: 2, scope: !4491)
!4497 = !DILocation(line: 0, scope: !4487)
!4498 = !DILocation(line: 758, column: 2, scope: !4478)
!4499 = distinct !DISubprogram(name: "conversion_radix", scope: !2325, file: !2325, line: 761, type: !4500, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2321, retainedNodes: !4502)
!4500 = !DISubroutineType(types: !4501)
!4501 = !{!200, !146}
!4502 = !{!4503}
!4503 = !DILocalVariable(name: "specifier", arg: 1, scope: !4499, file: !2325, line: 761, type: !146)
!4504 = !DILocation(line: 0, scope: !4499)
!4505 = !DILocation(line: 763, column: 2, scope: !4499)
!4506 = !DILocation(line: 770, column: 3, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4499, file: !2325, line: 763, column: 21)
!4508 = !DILocation(line: 774, column: 3, scope: !4507)
!4509 = !DILocation(line: 0, scope: !4507)
!4510 = !DILocation(line: 776, column: 1, scope: !4499)
!4511 = distinct !DISubprogram(name: "extract_flags", scope: !2325, file: !2325, line: 339, type: !4020, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2321, retainedNodes: !4512)
!4512 = !{!4513, !4514, !4515}
!4513 = !DILocalVariable(name: "conv", arg: 1, scope: !4511, file: !2325, line: 339, type: !3539)
!4514 = !DILocalVariable(name: "sp", arg: 2, scope: !4511, file: !2325, line: 340, type: !144)
!4515 = !DILocalVariable(name: "loop", scope: !4511, file: !2325, line: 342, type: !157)
!4516 = !DILocation(line: 0, scope: !4511)
!4517 = !DILocation(line: 344, column: 2, scope: !4511)
!4518 = !DILocation(line: 345, column: 11, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4511, file: !2325, line: 344, column: 5)
!4520 = !DILocation(line: 345, column: 3, scope: !4519)
!4521 = !DILocation(line: 351, column: 4, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4519, file: !2325, line: 345, column: 16)
!4523 = !DILocation(line: 354, column: 4, scope: !4522)
!4524 = !DILocation(line: 357, column: 4, scope: !4522)
!4525 = !DILocation(line: 360, column: 4, scope: !4522)
!4526 = !DILocation(line: 0, scope: !4522)
!4527 = !DILocation(line: 370, column: 12, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4511, file: !2325, line: 370, column: 6)
!4529 = !DILocation(line: 370, column: 22, scope: !4528)
!4530 = !DILocation(line: 371, column: 19, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4528, file: !2325, line: 370, column: 42)
!4532 = !DILocation(line: 372, column: 2, scope: !4531)
!4533 = !DILocation(line: 376, column: 2, scope: !4511)
!4534 = distinct !DISubprogram(name: "extract_width", scope: !2325, file: !2325, line: 388, type: !4020, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2321, retainedNodes: !4535)
!4535 = !{!4536, !4537, !4538, !4539}
!4536 = !DILocalVariable(name: "conv", arg: 1, scope: !4534, file: !2325, line: 388, type: !3539)
!4537 = !DILocalVariable(name: "sp", arg: 2, scope: !4534, file: !2325, line: 389, type: !144)
!4538 = !DILocalVariable(name: "wp", scope: !4534, file: !2325, line: 398, type: !144)
!4539 = !DILocalVariable(name: "width", scope: !4534, file: !2325, line: 399, type: !200)
!4540 = !DILocation(line: 0, scope: !4534)
!4541 = !DILocation(line: 391, column: 8, scope: !4534)
!4542 = !DILocation(line: 391, column: 22, scope: !4534)
!4543 = !DILocation(line: 393, column: 6, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4534, file: !2325, line: 393, column: 6)
!4545 = !DILocation(line: 393, column: 10, scope: !4544)
!4546 = !DILocation(line: 393, column: 6, scope: !4534)
!4547 = !DILocation(line: 394, column: 20, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4544, file: !2325, line: 393, column: 18)
!4549 = !DILocation(line: 395, column: 10, scope: !4548)
!4550 = !DILocation(line: 395, column: 3, scope: !4548)
!4551 = !DILocation(line: 399, column: 17, scope: !4534)
!4552 = !DILocation(line: 401, column: 6, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4534, file: !2325, line: 401, column: 6)
!4554 = !DILocation(line: 401, column: 9, scope: !4553)
!4555 = !DILocation(line: 401, column: 6, scope: !4534)
!4556 = !DILocation(line: 402, column: 23, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4553, file: !2325, line: 401, column: 16)
!4558 = !DILocation(line: 403, column: 9, scope: !4557)
!4559 = !DILocation(line: 403, column: 21, scope: !4557)
!4560 = !DILocation(line: 405, column: 11, scope: !4557)
!4561 = !DILocation(line: 404, column: 21, scope: !4557)
!4562 = !DILocation(line: 406, column: 2, scope: !4557)
!4563 = !DILocation(line: 409, column: 1, scope: !4534)
!4564 = distinct !DISubprogram(name: "extract_prec", scope: !2325, file: !2325, line: 420, type: !4020, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2321, retainedNodes: !4565)
!4565 = !{!4566, !4567, !4568}
!4566 = !DILocalVariable(name: "conv", arg: 1, scope: !4564, file: !2325, line: 420, type: !3539)
!4567 = !DILocalVariable(name: "sp", arg: 2, scope: !4564, file: !2325, line: 421, type: !144)
!4568 = !DILocalVariable(name: "prec", scope: !4564, file: !2325, line: 435, type: !200)
!4569 = !DILocation(line: 0, scope: !4564)
!4570 = !DILocation(line: 423, column: 24, scope: !4564)
!4571 = !DILocation(line: 423, column: 28, scope: !4564)
!4572 = !DILocation(line: 423, column: 8, scope: !4564)
!4573 = !DILocation(line: 423, column: 21, scope: !4564)
!4574 = !DILocation(line: 425, column: 6, scope: !4564)
!4575 = !DILocation(line: 428, column: 2, scope: !4564)
!4576 = !DILocation(line: 430, column: 6, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4564, file: !2325, line: 430, column: 6)
!4578 = !DILocation(line: 430, column: 10, scope: !4577)
!4579 = !DILocation(line: 430, column: 6, scope: !4564)
!4580 = !DILocation(line: 431, column: 19, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4577, file: !2325, line: 430, column: 18)
!4582 = !DILocation(line: 432, column: 10, scope: !4581)
!4583 = !DILocation(line: 432, column: 3, scope: !4581)
!4584 = !DILocation(line: 435, column: 16, scope: !4564)
!4585 = !DILocation(line: 437, column: 8, scope: !4564)
!4586 = !DILocation(line: 437, column: 19, scope: !4564)
!4587 = !DILocation(line: 439, column: 10, scope: !4564)
!4588 = !DILocation(line: 438, column: 20, scope: !4564)
!4589 = !DILocation(line: 441, column: 9, scope: !4564)
!4590 = !DILocation(line: 442, column: 1, scope: !4564)
!4591 = distinct !DISubprogram(name: "extract_length", scope: !2325, file: !2325, line: 453, type: !4020, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2321, retainedNodes: !4592)
!4592 = !{!4593, !4594}
!4593 = !DILocalVariable(name: "conv", arg: 1, scope: !4591, file: !2325, line: 453, type: !3539)
!4594 = !DILocalVariable(name: "sp", arg: 2, scope: !4591, file: !2325, line: 454, type: !144)
!4595 = !DILocation(line: 0, scope: !4591)
!4596 = !DILocation(line: 456, column: 10, scope: !4591)
!4597 = !DILocation(line: 456, column: 2, scope: !4591)
!4598 = !DILocation(line: 458, column: 8, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4600, file: !2325, line: 458, column: 7)
!4600 = distinct !DILexicalBlock(scope: !4591, file: !2325, line: 456, column: 15)
!4601 = !DILocation(line: 458, column: 7, scope: !4599)
!4602 = !DILocation(line: 458, column: 13, scope: !4599)
!4603 = !DILocation(line: 0, scope: !4599)
!4604 = !DILocation(line: 458, column: 7, scope: !4600)
!4605 = !DILocation(line: 459, column: 21, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4599, file: !2325, line: 458, column: 21)
!4607 = !DILocation(line: 460, column: 4, scope: !4606)
!4608 = !DILocation(line: 461, column: 3, scope: !4606)
!4609 = !DILocation(line: 462, column: 21, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4599, file: !2325, line: 461, column: 10)
!4611 = !DILocation(line: 466, column: 8, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4600, file: !2325, line: 466, column: 7)
!4613 = !DILocation(line: 466, column: 7, scope: !4612)
!4614 = !DILocation(line: 466, column: 13, scope: !4612)
!4615 = !DILocation(line: 0, scope: !4612)
!4616 = !DILocation(line: 466, column: 7, scope: !4600)
!4617 = !DILocation(line: 467, column: 21, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4612, file: !2325, line: 466, column: 21)
!4619 = !DILocation(line: 468, column: 4, scope: !4618)
!4620 = !DILocation(line: 469, column: 3, scope: !4618)
!4621 = !DILocation(line: 470, column: 21, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4612, file: !2325, line: 469, column: 10)
!4623 = !DILocation(line: 474, column: 9, scope: !4600)
!4624 = !DILocation(line: 474, column: 20, scope: !4600)
!4625 = !DILocation(line: 475, column: 3, scope: !4600)
!4626 = !DILocation(line: 476, column: 3, scope: !4600)
!4627 = !DILocation(line: 478, column: 9, scope: !4600)
!4628 = !DILocation(line: 478, column: 20, scope: !4600)
!4629 = !DILocation(line: 479, column: 3, scope: !4600)
!4630 = !DILocation(line: 480, column: 3, scope: !4600)
!4631 = !DILocation(line: 482, column: 9, scope: !4600)
!4632 = !DILocation(line: 482, column: 20, scope: !4600)
!4633 = !DILocation(line: 483, column: 3, scope: !4600)
!4634 = !DILocation(line: 484, column: 3, scope: !4600)
!4635 = !DILocation(line: 486, column: 9, scope: !4600)
!4636 = !DILocation(line: 486, column: 20, scope: !4600)
!4637 = !DILocation(line: 487, column: 3, scope: !4600)
!4638 = !DILocation(line: 492, column: 21, scope: !4600)
!4639 = !DILocation(line: 493, column: 3, scope: !4600)
!4640 = !DILocation(line: 495, column: 9, scope: !4600)
!4641 = !DILocation(line: 495, column: 20, scope: !4600)
!4642 = !DILocation(line: 496, column: 3, scope: !4600)
!4643 = !DILocation(line: 498, column: 2, scope: !4591)
!4644 = distinct !DISubprogram(name: "extract_specifier", scope: !2325, file: !2325, line: 513, type: !4020, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2321, retainedNodes: !4645)
!4645 = !{!4646, !4647, !4648, !4649}
!4646 = !DILocalVariable(name: "conv", arg: 1, scope: !4644, file: !2325, line: 513, type: !3539)
!4647 = !DILocalVariable(name: "sp", arg: 2, scope: !4644, file: !2325, line: 514, type: !144)
!4648 = !DILocalVariable(name: "unsupported", scope: !4644, file: !2325, line: 516, type: !157)
!4649 = !DILabel(scope: !4650, name: "int_conv", file: !2325, line: 526)
!4650 = distinct !DILexicalBlock(scope: !4644, file: !2325, line: 520, column: 27)
!4651 = !DILocation(line: 0, scope: !4644)
!4652 = !DILocation(line: 518, column: 20, scope: !4644)
!4653 = !DILocation(line: 518, column: 8, scope: !4644)
!4654 = !DILocation(line: 518, column: 18, scope: !4644)
!4655 = !DILocation(line: 520, column: 2, scope: !4644)
!4656 = !DILocation(line: 525, column: 3, scope: !4650)
!4657 = !DILocation(line: 0, scope: !4650)
!4658 = !DILocation(line: 526, column: 1, scope: !4650)
!4659 = !DILocation(line: 528, column: 24, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4650, file: !2325, line: 528, column: 7)
!4661 = !DILocation(line: 528, column: 7, scope: !4650)
!4662 = !DILocation(line: 535, column: 23, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4650, file: !2325, line: 535, column: 7)
!4664 = !DILocation(line: 535, column: 7, scope: !4650)
!4665 = !DILocation(line: 536, column: 36, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4663, file: !2325, line: 535, column: 31)
!4667 = !DILocation(line: 537, column: 3, scope: !4666)
!4668 = !DILocation(line: 570, column: 9, scope: !4650)
!4669 = !DILocation(line: 570, column: 23, scope: !4650)
!4670 = !DILocation(line: 580, column: 4, scope: !4650)
!4671 = !DILocation(line: 579, column: 21, scope: !4650)
!4672 = !DILocation(line: 581, column: 7, scope: !4650)
!4673 = !DILocation(line: 590, column: 13, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4650, file: !2325, line: 590, column: 7)
!4675 = !DILocation(line: 590, column: 7, scope: !4650)
!4676 = !DILocation(line: 591, column: 21, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4674, file: !2325, line: 590, column: 37)
!4678 = !DILocation(line: 592, column: 3, scope: !4677)
!4679 = !DILocation(line: 594, column: 18, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4681, file: !2325, line: 593, column: 48)
!4681 = distinct !DILexicalBlock(scope: !4674, file: !2325, line: 592, column: 14)
!4682 = !DILocation(line: 595, column: 3, scope: !4680)
!4683 = !DILocation(line: 603, column: 9, scope: !4650)
!4684 = !DILocation(line: 603, column: 23, scope: !4650)
!4685 = !DILocation(line: 605, column: 24, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4650, file: !2325, line: 605, column: 7)
!4687 = !DILocation(line: 605, column: 7, scope: !4650)
!4688 = !DILocation(line: 612, column: 9, scope: !4650)
!4689 = !DILocation(line: 612, column: 23, scope: !4650)
!4690 = !DILocation(line: 619, column: 24, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4650, file: !2325, line: 619, column: 7)
!4692 = !DILocation(line: 619, column: 7, scope: !4650)
!4693 = !DILocation(line: 625, column: 9, scope: !4650)
!4694 = !DILocation(line: 625, column: 17, scope: !4650)
!4695 = !DILocation(line: 626, column: 3, scope: !4650)
!4696 = !DILocation(line: 629, column: 20, scope: !4644)
!4697 = !DILocation(line: 629, column: 8, scope: !4644)
!4698 = !DILocation(line: 518, column: 23, scope: !4644)
!4699 = !DILocation(line: 631, column: 2, scope: !4644)
!4700 = distinct !DISubprogram(name: "extract_decimal", scope: !2325, file: !2325, line: 318, type: !4701, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2321, retainedNodes: !4703)
!4701 = !DISubroutineType(types: !4702)
!4702 = !{!200, !4161}
!4703 = !{!4704, !4705, !4706}
!4704 = !DILocalVariable(name: "str", arg: 1, scope: !4700, file: !2325, line: 318, type: !4161)
!4705 = !DILocalVariable(name: "sp", scope: !4700, file: !2325, line: 320, type: !144)
!4706 = !DILocalVariable(name: "val", scope: !4700, file: !2325, line: 321, type: !200)
!4707 = !DILocation(line: 0, scope: !4700)
!4708 = !DILocation(line: 320, column: 19, scope: !4700)
!4709 = !DILocation(line: 323, column: 37, scope: !4700)
!4710 = !DILocation(line: 323, column: 17, scope: !4700)
!4711 = !DILocation(line: 323, column: 9, scope: !4700)
!4712 = !DILocation(line: 323, column: 2, scope: !4700)
!4713 = !DILocation(line: 324, column: 13, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4700, file: !2325, line: 323, column: 43)
!4715 = !DILocation(line: 324, column: 24, scope: !4714)
!4716 = !DILocation(line: 324, column: 19, scope: !4714)
!4717 = !DILocation(line: 324, column: 27, scope: !4714)
!4718 = distinct !{!4718, !4712, !4719}
!4719 = !DILocation(line: 325, column: 2, scope: !4700)
!4720 = !DILocation(line: 326, column: 7, scope: !4700)
!4721 = !DILocation(line: 327, column: 2, scope: !4700)
!4722 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !4723, file: !4723, line: 9, type: !2904, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !322)
!4723 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!4724 = !DILocation(line: 11, column: 1, scope: !4722)
!4725 = !{i64 2147561115, i64 2147561158, i64 2147561198}
!4726 = !DILocation(line: 12, column: 1, scope: !4722)
!4727 = !{i64 2147565342, i64 2147565385, i64 2147565425}
!4728 = !DILocation(line: 13, column: 1, scope: !4722)
!4729 = !{i64 2147565551, i64 2147565594, i64 2147565634}
!4730 = !DILocation(line: 14, column: 1, scope: !4722)
!4731 = !{i64 2147565723, i64 2147565766, i64 2147565806}
!4732 = !DILocation(line: 15, column: 1, scope: !4722)
!4733 = !{i64 2147565892, i64 2147565935, i64 2147565975}
!4734 = !DILocation(line: 16, column: 1, scope: !4722)
!4735 = !{i64 2147566055, i64 2147566098, i64 2147566138}
!4736 = !DILocation(line: 17, column: 1, scope: !4722)
!4737 = !{i64 2147566239, i64 2147566282, i64 2147566322}
!4738 = !DILocation(line: 18, column: 1, scope: !4722)
!4739 = !{i64 2147566418, i64 2147566461, i64 2147566501}
!4740 = !DILocation(line: 19, column: 1, scope: !4722)
!4741 = !{i64 2147566660, i64 2147566703, i64 2147566743}
!4742 = !DILocation(line: 20, column: 1, scope: !4722)
!4743 = !{i64 2147566895, i64 2147566938, i64 2147566978}
!4744 = !DILocation(line: 21, column: 1, scope: !4722)
!4745 = !{i64 2147567081, i64 2147567124, i64 2147567164}
!4746 = !DILocation(line: 22, column: 1, scope: !4722)
!4747 = !{i64 2147567297, i64 2147567340, i64 2147567380}
!4748 = !DILocation(line: 23, column: 1, scope: !4722)
!4749 = !{i64 2147567500, i64 2147567543, i64 2147567583}
!4750 = !DILocation(line: 24, column: 1, scope: !4722)
!4751 = !{i64 2147567703, i64 2147567746, i64 2147567786}
!4752 = !DILocation(line: 25, column: 1, scope: !4722)
!4753 = !{i64 2147567878, i64 2147567921, i64 2147567961}
!4754 = !DILocation(line: 26, column: 1, scope: !4722)
!4755 = !{i64 2147568086, i64 2147568129, i64 2147568169}
!4756 = !DILocation(line: 27, column: 1, scope: !4722)
!4757 = !{i64 2147568290, i64 2147568333, i64 2147568373}
!4758 = !DILocation(line: 28, column: 1, scope: !4722)
!4759 = !{i64 2147568483, i64 2147568526, i64 2147568566}
!4760 = !DILocation(line: 29, column: 1, scope: !4722)
!4761 = !{i64 2147568685, i64 2147568728, i64 2147568768}
!4762 = !DILocation(line: 30, column: 1, scope: !4722)
!4763 = !{i64 2147568912, i64 2147568955, i64 2147568995}
!4764 = !DILocation(line: 31, column: 1, scope: !4722)
!4765 = !{i64 2147569114, i64 2147569157, i64 2147569197}
!4766 = !DILocation(line: 32, column: 1, scope: !4722)
!4767 = !{i64 2147569329, i64 2147569372, i64 2147569412}
!4768 = !DILocation(line: 33, column: 1, scope: !4722)
!4769 = !{i64 2147569501, i64 2147569544, i64 2147569584}
!4770 = !DILocation(line: 34, column: 1, scope: !4722)
!4771 = !{i64 2147569703, i64 2147569746, i64 2147569786}
!4772 = !DILocation(line: 35, column: 1, scope: !4722)
!4773 = !{i64 2147569929, i64 2147569972, i64 2147570012}
!4774 = !DILocation(line: 36, column: 1, scope: !4722)
!4775 = !{i64 2147570128, i64 2147570171, i64 2147570211}
!4776 = !DILocation(line: 37, column: 1, scope: !4722)
!4777 = !{i64 2147570303, i64 2147570346, i64 2147570386}
!4778 = !DILocation(line: 38, column: 1, scope: !4722)
!4779 = !{i64 2147570556, i64 2147570599, i64 2147570639}
!4780 = !DILocation(line: 39, column: 1, scope: !4722)
!4781 = !{i64 2147570797, i64 2147570840, i64 2147570880}
!4782 = !DILocation(line: 40, column: 1, scope: !4722)
!4783 = !{i64 2147571032, i64 2147571075, i64 2147571115}
!4784 = !DILocation(line: 41, column: 1, scope: !4722)
!4785 = !{i64 2147571264, i64 2147571307, i64 2147571347}
!4786 = !DILocation(line: 42, column: 1, scope: !4722)
!4787 = !{i64 2147571490, i64 2147571533, i64 2147571573}
!4788 = !DILocation(line: 43, column: 1, scope: !4722)
!4789 = !{i64 2147571716, i64 2147571759, i64 2147571799}
!4790 = !DILocation(line: 44, column: 1, scope: !4722)
!4791 = !{i64 2147571942, i64 2147571985, i64 2147572025}
!4792 = !DILocation(line: 45, column: 1, scope: !4722)
!4793 = !{i64 2147572177, i64 2147572220, i64 2147572260}
!4794 = !DILocation(line: 46, column: 1, scope: !4722)
!4795 = !{i64 2147572415, i64 2147572458, i64 2147572498}
!4796 = !DILocation(line: 47, column: 1, scope: !4722)
!4797 = !{i64 2147572689, i64 2147572732, i64 2147572772}
!4798 = !DILocation(line: 48, column: 1, scope: !4722)
!4799 = !{i64 2147572927, i64 2147572970, i64 2147573010}
!4800 = !DILocation(line: 49, column: 1, scope: !4722)
!4801 = !{i64 2147573171, i64 2147573214, i64 2147573254}
!4802 = !DILocation(line: 50, column: 1, scope: !4722)
!4803 = !{i64 2147573421, i64 2147573464, i64 2147573504}
!4804 = !DILocation(line: 51, column: 1, scope: !4722)
!4805 = !{i64 2147573668, i64 2147573711, i64 2147573751}
!4806 = !DILocation(line: 52, column: 1, scope: !4722)
!4807 = !{i64 2147573903, i64 2147573946, i64 2147573986}
!4808 = !DILocation(line: 53, column: 1, scope: !4722)
!4809 = !{i64 2147578199, i64 2147578242, i64 2147578282}
!4810 = !DILocation(line: 54, column: 1, scope: !4722)
!4811 = !{i64 2147578434, i64 2147578477, i64 2147578517}
!4812 = !DILocation(line: 55, column: 1, scope: !4722)
!4813 = !{i64 2147578672, i64 2147578715, i64 2147578755}
!4814 = !DILocation(line: 56, column: 1, scope: !4722)
!4815 = !{i64 2147578913, i64 2147578956, i64 2147578996}
!4816 = !DILocation(line: 57, column: 1, scope: !4722)
!4817 = !{i64 2147579193, i64 2147579236, i64 2147579276}
!4818 = !DILocation(line: 58, column: 1, scope: !4722)
!4819 = !{i64 2147579452, i64 2147579495, i64 2147579535}
!4820 = !DILocation(line: 59, column: 1, scope: !4722)
!4821 = !{i64 2147579678, i64 2147579721, i64 2147579761}
!4822 = !DILocation(line: 60, column: 1, scope: !4722)
!4823 = !{i64 2147579916, i64 2147579959, i64 2147579999}
!4824 = !DILocation(line: 61, column: 1, scope: !4722)
!4825 = !{i64 2147580145, i64 2147580188, i64 2147580228}
!4826 = !DILocation(line: 62, column: 1, scope: !4722)
!4827 = !{i64 2147580353, i64 2147580396, i64 2147580436}
!4828 = !DILocation(line: 63, column: 1, scope: !4722)
!4829 = !{i64 2147580564, i64 2147580607, i64 2147580647}
!4830 = !DILocation(line: 64, column: 1, scope: !4722)
!4831 = !{i64 2147580799, i64 2147580842, i64 2147580882}
!4832 = !DILocation(line: 65, column: 1, scope: !4722)
!4833 = !{i64 2147581028, i64 2147581071, i64 2147581111}
!4834 = !DILocation(line: 66, column: 1, scope: !4722)
!4835 = !{i64 2147581266, i64 2147581309, i64 2147581349}
!4836 = !DILocation(line: 67, column: 1, scope: !4722)
!4837 = !{i64 2147581498, i64 2147581541, i64 2147581581}
!4838 = !DILocation(line: 68, column: 1, scope: !4722)
!4839 = !{i64 2147581724, i64 2147581767, i64 2147581807}
!4840 = !DILocation(line: 69, column: 1, scope: !4722)
!4841 = !{i64 2147581941, i64 2147581984, i64 2147582024}
!4842 = !DILocation(line: 70, column: 1, scope: !4722)
!4843 = !{i64 2147582173, i64 2147582216, i64 2147582256}
!4844 = !DILocation(line: 71, column: 1, scope: !4722)
!4845 = !{i64 2147582399, i64 2147582442, i64 2147582482}
!4846 = !DILocation(line: 72, column: 1, scope: !4722)
!4847 = !{i64 2147582613, i64 2147582656, i64 2147582696}
!4848 = !DILocation(line: 73, column: 1, scope: !4722)
!4849 = !{i64 2147582833, i64 2147582876, i64 2147582916}
!4850 = !DILocation(line: 74, column: 1, scope: !4722)
!4851 = !{i64 2147583065, i64 2147583108, i64 2147583148}
!4852 = !DILocation(line: 75, column: 1, scope: !4722)
!4853 = !{i64 2147583273, i64 2147583316, i64 2147583356}
!4854 = !DILocation(line: 76, column: 1, scope: !4722)
!4855 = !{i64 2147583478, i64 2147583521, i64 2147583561}
!4856 = !DILocation(line: 77, column: 1, scope: !4722)
!4857 = !{i64 2147583695, i64 2147583738, i64 2147583778}
!4858 = !DILocation(line: 78, column: 1, scope: !4722)
!4859 = !{i64 2147583909, i64 2147583952, i64 2147583992}
!4860 = !DILocation(line: 79, column: 1, scope: !4722)
!4861 = !{i64 2147584135, i64 2147584178, i64 2147584218}
!4862 = !DILocation(line: 80, column: 1, scope: !4722)
!4863 = !{i64 2147584355, i64 2147584398, i64 2147584438}
!4864 = !DILocation(line: 81, column: 1, scope: !4722)
!4865 = !{i64 2147584560, i64 2147584603, i64 2147584643}
!4866 = !DILocation(line: 82, column: 1, scope: !4722)
!4867 = !{i64 2147584792, i64 2147584835, i64 2147584875}
!4868 = !DILocation(line: 83, column: 1, scope: !4722)
!4869 = !{i64 2147585027, i64 2147585070, i64 2147585110}
!4870 = !DILocation(line: 84, column: 1, scope: !4722)
!4871 = !{i64 2147585277, i64 2147585320, i64 2147585360}
!4872 = !DILocation(line: 85, column: 1, scope: !4722)
!4873 = !{i64 2147585527, i64 2147585570, i64 2147585610}
!4874 = !DILocation(line: 86, column: 1, scope: !4722)
!4875 = !{i64 2147585765, i64 2147585808, i64 2147585848}
!4876 = !DILocation(line: 87, column: 1, scope: !4722)
!4877 = !{i64 2147585976, i64 2147586019, i64 2147586059}
!4878 = !DILocation(line: 88, column: 1, scope: !4722)
!4879 = !{i64 2147586193, i64 2147586236, i64 2147586276}
!4880 = !DILocation(line: 89, column: 1, scope: !4722)
!4881 = !{i64 2147586389, i64 2147586432, i64 2147586472}
!4882 = !DILocation(line: 90, column: 1, scope: !4722)
!4883 = !{i64 2147590652, i64 2147590695, i64 2147590735}
!4884 = !DILocation(line: 91, column: 1, scope: !4722)
!4885 = !{i64 2147590845, i64 2147590888, i64 2147590928}
!4886 = !DILocation(line: 92, column: 1, scope: !4722)
!4887 = !{i64 2147591053, i64 2147591096, i64 2147591136}
!4888 = !DILocation(line: 93, column: 1, scope: !4722)
!4889 = !{i64 2147591249, i64 2147591292, i64 2147591332}
!4890 = !DILocation(line: 94, column: 1, scope: !4722)
!4891 = !{i64 2147591454, i64 2147591497, i64 2147591537}
!4892 = !DILocation(line: 95, column: 1, scope: !4722)
!4893 = !{i64 2147591665, i64 2147591708, i64 2147591748}
!4894 = !DILocation(line: 96, column: 1, scope: !4722)
!4895 = !{i64 2147591864, i64 2147591907, i64 2147591947}
!4896 = !DILocation(line: 97, column: 1, scope: !4722)
!4897 = !{i64 2147592039, i64 2147592082, i64 2147592122}
!4898 = !DILocation(line: 98, column: 1, scope: !4722)
!4899 = !{i64 2147592223, i64 2147592266, i64 2147592306}
!4900 = !DILocation(line: 99, column: 1, scope: !4722)
!4901 = !{i64 2147592425, i64 2147592468, i64 2147592508}
!4902 = !DILocation(line: 100, column: 1, scope: !4722)
!4903 = !{i64 2147592624, i64 2147592667, i64 2147592707}
!4904 = !DILocation(line: 101, column: 1, scope: !4722)
!4905 = !{i64 2147592790, i64 2147592833, i64 2147592873}
!4906 = !DILocation(line: 102, column: 1, scope: !4722)
!4907 = !{i64 2147592974, i64 2147593017, i64 2147593057}
!4908 = !DILocation(line: 103, column: 1, scope: !4722)
!4909 = !{i64 2147593164, i64 2147593207, i64 2147593247}
!4910 = !DILocation(line: 104, column: 1, scope: !4722)
!4911 = !{i64 2147593348, i64 2147593391, i64 2147593431}
!4912 = !DILocation(line: 105, column: 1, scope: !4722)
!4913 = !{i64 2147593562, i64 2147593605, i64 2147593645}
!4914 = !DILocation(line: 106, column: 1, scope: !4722)
!4915 = !{i64 2147593773, i64 2147593816, i64 2147593856}
!4916 = !DILocation(line: 107, column: 1, scope: !4722)
!4917 = !{i64 2147593996, i64 2147594039, i64 2147594079}
!4918 = !DILocation(line: 108, column: 1, scope: !4722)
!4919 = !{i64 2147594180, i64 2147594223, i64 2147594263}
!4920 = !DILocation(line: 109, column: 1, scope: !4722)
!4921 = !{i64 2147594394, i64 2147594437, i64 2147594477}
!4922 = !DILocation(line: 110, column: 1, scope: !4722)
!4923 = !{i64 2147594560, i64 2147594603, i64 2147594643}
!4924 = !DILocation(line: 111, column: 1, scope: !4722)
!4925 = !{i64 2147594741, i64 2147594784, i64 2147594824}
!4926 = !DILocation(line: 112, column: 1, scope: !4722)
!4927 = !{i64 2147594934, i64 2147594977, i64 2147595017}
!4928 = !DILocation(line: 113, column: 1, scope: !4722)
!4929 = !{i64 2147595160, i64 2147595203, i64 2147595243}
!4930 = !DILocation(line: 114, column: 1, scope: !4722)
!4931 = !{i64 2147595374, i64 2147595417, i64 2147595457}
!4932 = !DILocation(line: 115, column: 1, scope: !4722)
!4933 = !{i64 2147595600, i64 2147595643, i64 2147595683}
!4934 = !DILocation(line: 116, column: 1, scope: !4722)
!4935 = !{i64 2147595817, i64 2147595860, i64 2147595900}
!4936 = !DILocation(line: 117, column: 1, scope: !4722)
!4937 = !{i64 2147596094, i64 2147596137, i64 2147596177}
!4938 = !DILocation(line: 118, column: 1, scope: !4722)
!4939 = !{i64 2147596320, i64 2147596363, i64 2147596403}
!4940 = !DILocation(line: 119, column: 1, scope: !4722)
!4941 = !{i64 2147596528, i64 2147596571, i64 2147596611}
!4942 = !DILocation(line: 120, column: 1, scope: !4722)
!4943 = !{i64 2147596724, i64 2147596767, i64 2147596807}
!4944 = !DILocation(line: 121, column: 1, scope: !4722)
!4945 = !{i64 2147596989, i64 2147597032, i64 2147597072}
!4946 = !DILocation(line: 122, column: 1, scope: !4722)
!4947 = !{i64 2147597203, i64 2147597246, i64 2147597286}
!4948 = !DILocation(line: 123, column: 1, scope: !4722)
!4949 = !{i64 2147597378, i64 2147597421, i64 2147597461}
!4950 = !DILocation(line: 124, column: 1, scope: !4722)
!4951 = !{i64 2147597632, i64 2147597675, i64 2147597715}
!4952 = !DILocation(line: 125, column: 1, scope: !4722)
!4953 = !{i64 2147597831, i64 2147597874, i64 2147597914}
!4954 = !DILocation(line: 126, column: 1, scope: !4722)
!4955 = !{i64 2147598073, i64 2147598116, i64 2147598156}
!4956 = !DILocation(line: 127, column: 1, scope: !4722)
!4957 = !{i64 2147598236, i64 2147598279, i64 2147598319}
!4958 = !DILocation(line: 128, column: 1, scope: !4722)
!4959 = !{i64 2147598423, i64 2147598466, i64 2147598506}
!4960 = !DILocation(line: 129, column: 1, scope: !4722)
!4961 = !{i64 2147598616, i64 2147598659, i64 2147598699}
!4962 = !DILocation(line: 130, column: 1, scope: !4722)
!4963 = !{i64 2147598799, i64 2147598842, i64 2147598882}
!4964 = !DILocation(line: 131, column: 1, scope: !4722)
!4965 = !{i64 2147599013, i64 2147599056, i64 2147599096}
!4966 = !DILocation(line: 132, column: 1, scope: !4722)
!4967 = !{i64 2147599224, i64 2147599267, i64 2147599307}
!4968 = !DILocation(line: 133, column: 1, scope: !4722)
!4969 = !{i64 2147599444, i64 2147599487, i64 2147599527}
!4970 = !DILocation(line: 134, column: 1, scope: !4722)
!4971 = !{i64 2147599651, i64 2147599694, i64 2147599734}
!4972 = !DILocation(line: 135, column: 1, scope: !4722)
!4973 = !{i64 2147603985, i64 2147604028, i64 2147604068}
!4974 = !DILocation(line: 136, column: 1, scope: !4722)
!4975 = !{i64 2147604233, i64 2147604276, i64 2147604316}
!4976 = !DILocation(line: 137, column: 1, scope: !4722)
!4977 = !{i64 2147604432, i64 2147604475, i64 2147604515}
!4978 = !DILocation(line: 138, column: 1, scope: !4722)
!4979 = !{i64 2147604667, i64 2147604710, i64 2147604750}
!4980 = !DILocation(line: 139, column: 1, scope: !4722)
!4981 = !{i64 2147604917, i64 2147604960, i64 2147605000}
!4982 = !DILocation(line: 140, column: 1, scope: !4722)
!4983 = !{i64 2147605119, i64 2147605162, i64 2147605202}
!4984 = !DILocation(line: 141, column: 1, scope: !4722)
!4985 = !{i64 2147605342, i64 2147605385, i64 2147605425}
!4986 = !DILocation(line: 142, column: 1, scope: !4722)
!4987 = !{i64 2147605556, i64 2147605599, i64 2147605639}
!4988 = !DILocation(line: 143, column: 1, scope: !4722)
!4989 = !{i64 2147605800, i64 2147605843, i64 2147605883}
!4990 = !DILocation(line: 144, column: 1, scope: !4722)
!4991 = !{i64 2147606029, i64 2147606072, i64 2147606112}
!4992 = !DILocation(line: 145, column: 1, scope: !4722)
!4993 = !{i64 2147606258, i64 2147606301, i64 2147606341}
!4994 = !DILocation(line: 146, column: 1, scope: !4722)
!4995 = !{i64 2147606466, i64 2147606509, i64 2147606549}
!4996 = !DILocation(line: 147, column: 1, scope: !4722)
!4997 = !{i64 2147606704, i64 2147606747, i64 2147606787}
!4998 = !DILocation(line: 148, column: 1, scope: !4722)
!4999 = !{i64 2147606930, i64 2147606973, i64 2147607013}
!5000 = !DILocation(line: 149, column: 1, scope: !4722)
!5001 = !{i64 2147607189, i64 2147607232, i64 2147607272}
!5002 = !DILocation(line: 150, column: 1, scope: !4722)
!5003 = !{i64 2147607409, i64 2147607452, i64 2147607492}
!5004 = !DILocation(line: 151, column: 1, scope: !4722)
!5005 = !{i64 2147607641, i64 2147607684, i64 2147607724}
!5006 = !DILocation(line: 152, column: 1, scope: !4722)
!5007 = !{i64 2147607882, i64 2147607925, i64 2147607965}
!5008 = !DILocation(line: 153, column: 1, scope: !4722)
!5009 = !{i64 2147608123, i64 2147608166, i64 2147608206}
!5010 = !DILocation(line: 154, column: 1, scope: !4722)
!5011 = !{i64 2147608346, i64 2147608389, i64 2147608429}
!5012 = !DILocation(line: 155, column: 1, scope: !4722)
!5013 = !{i64 2147608563, i64 2147608606, i64 2147608646}
!5014 = !DILocation(line: 156, column: 1, scope: !4722)
!5015 = !{i64 2147608804, i64 2147608847, i64 2147608887}
!5016 = !DILocation(line: 157, column: 1, scope: !4722)
!5017 = !{i64 2147608991, i64 2147609034, i64 2147609074}
!5018 = !DILocation(line: 158, column: 1, scope: !4722)
!5019 = !{i64 2147609178, i64 2147609221, i64 2147609261}
!5020 = !DILocation(line: 159, column: 1, scope: !4722)
!5021 = !{i64 2147609341, i64 2147609384, i64 2147609424}
!5022 = !DILocation(line: 160, column: 1, scope: !4722)
!5023 = !{i64 2147609600, i64 2147609643, i64 2147609683}
!5024 = !DILocation(line: 161, column: 1, scope: !4722)
!5025 = !{i64 2147609823, i64 2147609866, i64 2147609906}
!5026 = !DILocation(line: 162, column: 1, scope: !4722)
!5027 = !{i64 2147610052, i64 2147610095, i64 2147610135}
!5028 = !DILocation(line: 163, column: 1, scope: !4722)
!5029 = !{i64 2147610248, i64 2147610291, i64 2147610331}
!5030 = !DILocation(line: 164, column: 1, scope: !4722)
!5031 = !{i64 2147610460, i64 2147610503, i64 2147610543}
!5032 = !DILocation(line: 165, column: 1, scope: !4722)
!5033 = !{i64 2147610681, i64 2147610724, i64 2147610764}
!5034 = !DILocation(line: 166, column: 1, scope: !4722)
!5035 = !{i64 2147610895, i64 2147610938, i64 2147610978}
!5036 = !DILocation(line: 167, column: 1, scope: !4722)
!5037 = !{i64 2147611085, i64 2147611128, i64 2147611168}
!5038 = !DILocation(line: 168, column: 1, scope: !4722)
!5039 = !{i64 2147611284, i64 2147611327, i64 2147611367}
!5040 = !DILocation(line: 169, column: 1, scope: !4722)
!5041 = !{i64 2147611489, i64 2147611532, i64 2147611572}
!5042 = !DILocation(line: 170, column: 1, scope: !4722)
!5043 = !{i64 2147611709, i64 2147611752, i64 2147611792}
!5044 = !DILocation(line: 171, column: 1, scope: !4722)
!5045 = !{i64 2147611910, i64 2147611953, i64 2147611993}
!5046 = !DILocation(line: 172, column: 1, scope: !4722)
!5047 = !{i64 2147612109, i64 2147612152, i64 2147612192}
!5048 = !DILocation(line: 173, column: 1, scope: !4722)
!5049 = !{i64 2147612314, i64 2147612357, i64 2147612397}
!5050 = !DILocation(line: 174, column: 1, scope: !4722)
!5051 = !{i64 2147616544, i64 2147616587, i64 2147616627}
!5052 = !DILocation(line: 175, column: 1, scope: !4722)
!5053 = !{i64 2147616728, i64 2147616771, i64 2147616811}
!5054 = !DILocation(line: 176, column: 1, scope: !4722)
!5055 = !{i64 2147616912, i64 2147616955, i64 2147616995}
!5056 = !DILocation(line: 177, column: 1, scope: !4722)
!5057 = !{i64 2147617099, i64 2147617142, i64 2147617182}
!5058 = !DILocation(line: 178, column: 1, scope: !4722)
!5059 = !{i64 2147617283, i64 2147617326, i64 2147617366}
!5060 = !DILocation(line: 179, column: 1, scope: !4722)
!5061 = !{i64 2147617521, i64 2147617564, i64 2147617604}
!5062 = !DILocation(line: 180, column: 1, scope: !4722)
!5063 = !{i64 2147617751, i64 2147617794, i64 2147617834}
!5064 = !DILocation(line: 181, column: 1, scope: !4722)
!5065 = !{i64 2147617980, i64 2147618023, i64 2147618063}
!5066 = !DILocation(line: 182, column: 1, scope: !4722)
!5067 = !{i64 2147618167, i64 2147618210, i64 2147618250}
!5068 = !DILocation(line: 183, column: 1, scope: !4722)
!5069 = !{i64 2147618363, i64 2147618406, i64 2147618446}
!5070 = !DILocation(line: 184, column: 1, scope: !4722)
!5071 = !{i64 2147618571, i64 2147618614, i64 2147618654}
!5072 = !DILocation(line: 185, column: 1, scope: !4722)
!5073 = !{i64 2147618783, i64 2147618826, i64 2147618866}
!5074 = !DILocation(line: 186, column: 1, scope: !4722)
!5075 = !{i64 2147618982, i64 2147619025, i64 2147619065}
!5076 = !DILocation(line: 187, column: 1, scope: !4722)
!5077 = !{i64 2147619220, i64 2147619263, i64 2147619303}
!5078 = !DILocation(line: 188, column: 1, scope: !4722)
!5079 = !{i64 2147619416, i64 2147619459, i64 2147619499}
!5080 = !DILocation(line: 189, column: 1, scope: !4722)
!5081 = !{i64 2147619618, i64 2147619661, i64 2147619701}
!5082 = !DILocation(line: 190, column: 1, scope: !4722)
!5083 = !{i64 2147619811, i64 2147619854, i64 2147619894}
!5084 = !DILocation(line: 191, column: 1, scope: !4722)
!5085 = !{i64 2147620045, i64 2147620088, i64 2147620128}
!5086 = !DILocation(line: 192, column: 1, scope: !4722)
!5087 = !{i64 2147620208, i64 2147620251, i64 2147620291}
!5088 = !DILocation(line: 193, column: 1, scope: !4722)
!5089 = !{i64 2147620447, i64 2147620490, i64 2147620530}
!5090 = !DILocation(line: 194, column: 1, scope: !4722)
!5091 = !{i64 2147620686, i64 2147620729, i64 2147620769}
!5092 = !DILocation(line: 195, column: 1, scope: !4722)
!5093 = !{i64 2147620922, i64 2147620965, i64 2147621005}
!5094 = !DILocation(line: 196, column: 1, scope: !4722)
!5095 = !{i64 2147621152, i64 2147621195, i64 2147621235}
!5096 = !DILocation(line: 197, column: 1, scope: !4722)
!5097 = !{i64 2147621339, i64 2147621382, i64 2147621422}
!5098 = !DILocation(line: 198, column: 1, scope: !4722)
!5099 = !{i64 2147621538, i64 2147621581, i64 2147621621}
!5100 = !DILocation(line: 199, column: 1, scope: !4722)
!5101 = !{i64 2147621809, i64 2147621852, i64 2147621892}
!5102 = !DILocation(line: 200, column: 1, scope: !4722)
!5103 = !{i64 2147621984, i64 2147622027, i64 2147622067}
!5104 = !DILocation(line: 201, column: 1, scope: !4722)
!5105 = !{i64 2147622218, i64 2147622261, i64 2147622301}
!5106 = !DILocation(line: 202, column: 1, scope: !4722)
!5107 = !{i64 2147622426, i64 2147622469, i64 2147622509}
!5108 = !DILocation(line: 203, column: 1, scope: !4722)
!5109 = !{i64 2147622644, i64 2147622687, i64 2147622727}
!5110 = !DILocation(line: 204, column: 1, scope: !4722)
!5111 = !{i64 2147622834, i64 2147622877, i64 2147622917}
!5112 = !DILocation(line: 205, column: 1, scope: !4722)
!5113 = !{i64 2147623030, i64 2147623073, i64 2147623113}
!5114 = !DILocation(line: 206, column: 1, scope: !4722)
!5115 = !{i64 2147623236, i64 2147623279, i64 2147623319}
!5116 = !DILocation(line: 207, column: 1, scope: !4722)
!5117 = !{i64 2147623441, i64 2147623484, i64 2147623524}
!5118 = !DILocation(line: 208, column: 1, scope: !4722)
!5119 = !{i64 2147623667, i64 2147623710, i64 2147623750}
!5120 = !DILocation(line: 209, column: 1, scope: !4722)
!5121 = !{i64 2147623899, i64 2147623942, i64 2147623982}
!5122 = !DILocation(line: 210, column: 1, scope: !4722)
!5123 = !{i64 2147624083, i64 2147624126, i64 2147624166}
!5124 = !DILocation(line: 211, column: 1, scope: !4722)
!5125 = !{i64 2147624292, i64 2147624335, i64 2147624375}
!5126 = !DILocation(line: 212, column: 1, scope: !4722)
!5127 = !{i64 2147624476, i64 2147624519, i64 2147624559}
!5128 = !DILocation(line: 213, column: 1, scope: !4722)
!5129 = !{i64 2147624702, i64 2147624745, i64 2147624785}
!5130 = !DILocation(line: 214, column: 1, scope: !4722)
!5131 = !{i64 2147624928, i64 2147624971, i64 2147625011}
!5132 = !DILocation(line: 215, column: 1, scope: !4722)
!5133 = !{i64 2147625154, i64 2147625197, i64 2147625237}
!5134 = !DILocation(line: 216, column: 1, scope: !4722)
!5135 = !{i64 2147625380, i64 2147625423, i64 2147625463}
!5136 = !DILocation(line: 217, column: 1, scope: !4722)
!5137 = !{i64 2147629667, i64 2147629710, i64 2147629750}
!5138 = !DILocation(line: 218, column: 1, scope: !4722)
!5139 = !{i64 2147629899, i64 2147629942, i64 2147629982}
!5140 = !DILocation(line: 219, column: 1, scope: !4722)
!5141 = !{i64 2147630137, i64 2147630180, i64 2147630220}
!5142 = !DILocation(line: 220, column: 1, scope: !4722)
!5143 = !{i64 2147630357, i64 2147630400, i64 2147630440}
!5144 = !DILocation(line: 221, column: 1, scope: !4722)
!5145 = !{i64 2147630601, i64 2147630644, i64 2147630684}
!5146 = !DILocation(line: 222, column: 1, scope: !4722)
!5147 = !{i64 2147630842, i64 2147630885, i64 2147630925}
!5148 = !DILocation(line: 223, column: 1, scope: !4722)
!5149 = !{i64 2147631077, i64 2147631120, i64 2147631160}
!5150 = !DILocation(line: 224, column: 1, scope: !4722)
!5151 = !{i64 2147631309, i64 2147631352, i64 2147631392}
!5152 = !DILocation(line: 225, column: 1, scope: !4722)
!5153 = !{i64 2147631511, i64 2147631554, i64 2147631594}
!5154 = !DILocation(line: 226, column: 1, scope: !4722)
!5155 = !{i64 2147631761, i64 2147631804, i64 2147631844}
!5156 = !DILocation(line: 227, column: 1, scope: !4722)
!5157 = !{i64 2147631999, i64 2147632042, i64 2147632082}
!5158 = !DILocation(line: 228, column: 1, scope: !4722)
!5159 = !{i64 2147632183, i64 2147632226, i64 2147632266}
!5160 = !DILocation(line: 229, column: 1, scope: !4722)
!5161 = !{i64 2147632406, i64 2147632449, i64 2147632489}
!5162 = !DILocation(line: 230, column: 1, scope: !4722)
!5163 = !{i64 2147632644, i64 2147632687, i64 2147632727}
!5164 = !DILocation(line: 231, column: 1, scope: !4722)
!5165 = !{i64 2147632882, i64 2147632925, i64 2147632965}
!5166 = !DILocation(line: 232, column: 1, scope: !4722)
!5167 = !{i64 2147633097, i64 2147633140, i64 2147633180}
!5168 = !DILocation(line: 233, column: 1, scope: !4722)
!5169 = !{i64 2147633326, i64 2147633369, i64 2147633409}
!5170 = !DILocation(line: 234, column: 1, scope: !4722)
!5171 = !{i64 2147633579, i64 2147633622, i64 2147633662}
!5172 = !DILocation(line: 235, column: 1, scope: !4722)
!5173 = !{i64 2147633772, i64 2147633815, i64 2147633855}
!5174 = !DILocation(line: 236, column: 1, scope: !4722)
!5175 = !{i64 2147634025, i64 2147634068, i64 2147634108}
!5176 = !DILocation(line: 237, column: 1, scope: !4722)
!5177 = !{i64 2147634239, i64 2147634282, i64 2147634322}
!5178 = !DILocation(line: 238, column: 1, scope: !4722)
!5179 = !{i64 2147634447, i64 2147634490, i64 2147634530}
!5180 = !DILocation(line: 239, column: 1, scope: !4722)
!5181 = !{i64 2147634637, i64 2147634680, i64 2147634720}
!5182 = !DILocation(line: 240, column: 1, scope: !4722)
!5183 = !{i64 2147634851, i64 2147634894, i64 2147634934}
!5184 = !DILocation(line: 241, column: 1, scope: !4722)
!5185 = !{i64 2147635113, i64 2147635156, i64 2147635196}
!5186 = !DILocation(line: 242, column: 1, scope: !4722)
!5187 = !{i64 2147635324, i64 2147635367, i64 2147635407}
!5188 = !DILocation(line: 243, column: 1, scope: !4722)
!5189 = !{i64 2147635568, i64 2147635611, i64 2147635651}
!5190 = !DILocation(line: 244, column: 1, scope: !4722)
!5191 = !{i64 2147635779, i64 2147635822, i64 2147635862}
!5192 = !DILocation(line: 245, column: 1, scope: !4722)
!5193 = !{i64 2147636008, i64 2147636051, i64 2147636091}
!5194 = !DILocation(line: 246, column: 1, scope: !4722)
!5195 = !{i64 2147636273, i64 2147636316, i64 2147636356}
!5196 = !DILocation(line: 247, column: 1, scope: !4722)
!5197 = !{i64 2147636478, i64 2147636521, i64 2147636561}
!5198 = !DILocation(line: 248, column: 1, scope: !4722)
!5199 = !{i64 2147636674, i64 2147636717, i64 2147636757}
!5200 = !DILocation(line: 249, column: 1, scope: !4722)
!5201 = !{i64 2147636897, i64 2147636940, i64 2147636980}
!5202 = !DILocation(line: 250, column: 1, scope: !4722)
!5203 = !{i64 2147637060, i64 2147637103, i64 2147637143}
!5204 = !DILocation(line: 251, column: 1, scope: !4722)
!5205 = !{i64 2147637265, i64 2147637308, i64 2147637348}
!5206 = !DILocation(line: 252, column: 1, scope: !4722)
!5207 = !{i64 2147637485, i64 2147637528, i64 2147637568}
!5208 = !DILocation(line: 253, column: 1, scope: !4722)
!5209 = !{i64 2147637696, i64 2147637739, i64 2147637779}
!5210 = !DILocation(line: 254, column: 1, scope: !4722)
!5211 = !{i64 2147637910, i64 2147637953, i64 2147637993}
!5212 = !DILocation(line: 255, column: 1, scope: !4722)
!5213 = !{i64 2147642185, i64 2147642228, i64 2147642268}
!5214 = !DILocation(line: 256, column: 1, scope: !4722)
!5215 = !{i64 2147642396, i64 2147642439, i64 2147642479}
!5216 = !DILocation(line: 257, column: 1, scope: !4722)
!5217 = !{i64 2147642589, i64 2147642632, i64 2147642672}
!5218 = !DILocation(line: 258, column: 1, scope: !4722)
!5219 = !{i64 2147642788, i64 2147642831, i64 2147642871}
!5220 = !DILocation(line: 259, column: 1, scope: !4722)
!5221 = !{i64 2147642960, i64 2147643003, i64 2147643043}
!5222 = !DILocation(line: 260, column: 1, scope: !4722)
!5223 = !{i64 2147643153, i64 2147643196, i64 2147643236}
!5224 = !DILocation(line: 261, column: 1, scope: !4722)
!5225 = !{i64 2147643349, i64 2147643392, i64 2147643432}
!5226 = !DILocation(line: 262, column: 1, scope: !4722)
!5227 = !{i64 2147643576, i64 2147643619, i64 2147643659}
!5228 = !DILocation(line: 263, column: 1, scope: !4722)
!5229 = !{i64 2147643793, i64 2147643836, i64 2147643876}
!5230 = !DILocation(line: 264, column: 1, scope: !4722)
!5231 = !{i64 2147644085, i64 2147644128, i64 2147644168}
!5232 = !DILocation(line: 265, column: 1, scope: !4722)
!5233 = !{i64 2147644317, i64 2147644360, i64 2147644400}
!5234 = !DILocation(line: 266, column: 1, scope: !4722)
!5235 = !{i64 2147644534, i64 2147644577, i64 2147644617}
!5236 = !DILocation(line: 267, column: 1, scope: !4722)
!5237 = !{i64 2147644741, i64 2147644784, i64 2147644824}
!5238 = !DILocation(line: 268, column: 1, scope: !4722)
!5239 = !{i64 2147644942, i64 2147644985, i64 2147645025}
!5240 = !DILocation(line: 269, column: 1, scope: !4722)
!5241 = !{i64 2147645174, i64 2147645217, i64 2147645257}
!5242 = !DILocation(line: 270, column: 1, scope: !4722)
!5243 = !{i64 2147645382, i64 2147645425, i64 2147645465}
!5244 = !DILocation(line: 271, column: 1, scope: !4722)
!5245 = !{i64 2147645572, i64 2147645615, i64 2147645655}
!5246 = !DILocation(line: 272, column: 1, scope: !4722)
!5247 = !{i64 2147645798, i64 2147645841, i64 2147645881}
!5248 = !DILocation(line: 273, column: 1, scope: !4722)
!5249 = !{i64 2147645987, i64 2147646030, i64 2147646070}
!5250 = !DILocation(line: 274, column: 1, scope: !4722)
!5251 = !{i64 2147646258, i64 2147646301, i64 2147646341}
!5252 = !DILocation(line: 275, column: 1, scope: !4722)
!5253 = !{i64 2147646478, i64 2147646521, i64 2147646561}
!5254 = !DILocation(line: 276, column: 1, scope: !4722)
!5255 = !{i64 2147646731, i64 2147646774, i64 2147646814}
!5256 = !DILocation(line: 277, column: 1, scope: !4722)
!5257 = !{i64 2147646939, i64 2147646982, i64 2147647022}
!5258 = !DILocation(line: 278, column: 1, scope: !4722)
!5259 = !{i64 2147647171, i64 2147647214, i64 2147647254}
!5260 = !DILocation(line: 279, column: 1, scope: !4722)
!5261 = !{i64 2147647382, i64 2147647425, i64 2147647465}
!5262 = !DILocation(line: 280, column: 1, scope: !4722)
!5263 = !{i64 2147647572, i64 2147647615, i64 2147647655}
!5264 = !DILocation(line: 281, column: 1, scope: !4722)
!5265 = !{i64 2147647786, i64 2147647829, i64 2147647869}
!5266 = !DILocation(line: 282, column: 1, scope: !4722)
!5267 = !{i64 2147647985, i64 2147648028, i64 2147648068}
!5268 = !DILocation(line: 283, column: 1, scope: !4722)
!5269 = !{i64 2147648172, i64 2147648215, i64 2147648255}
!5270 = !DILocation(line: 284, column: 1, scope: !4722)
!5271 = !{i64 2147648380, i64 2147648423, i64 2147648463}
!5272 = !DILocation(line: 285, column: 1, scope: !4722)
!5273 = !{i64 2147648609, i64 2147648652, i64 2147648692}
!5274 = !DILocation(line: 286, column: 1, scope: !4722)
!5275 = !{i64 2147648811, i64 2147648854, i64 2147648894}
!5276 = !DILocation(line: 287, column: 1, scope: !4722)
!5277 = !{i64 2147649010, i64 2147649053, i64 2147649093}
!5278 = !DILocation(line: 288, column: 1, scope: !4722)
!5279 = !{i64 2147649227, i64 2147649270, i64 2147649310}
!5280 = !DILocation(line: 290, column: 1, scope: !4722)
!5281 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !129, file: !129, line: 30, type: !136, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5282)
!5282 = !{!5283, !5284}
!5283 = !DILocalVariable(name: "arg", arg: 1, scope: !5281, file: !129, line: 30, type: !138)
!5284 = !DILocalVariable(name: "key", scope: !5281, file: !129, line: 32, type: !121)
!5285 = !DILocation(line: 0, scope: !5281)
!5286 = !DILocation(line: 37, column: 2, scope: !5281)
!5287 = !DILocation(line: 38, column: 2, scope: !5281)
!5288 = !DILocation(line: 55, column: 2, scope: !5289, inlinedAt: !5296)
!5289 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5290, file: !5290, line: 42, type: !5291, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5293)
!5290 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5291 = !DISubroutineType(types: !5292)
!5292 = !{!32}
!5293 = !{!5294, !5295}
!5294 = !DILocalVariable(name: "key", scope: !5289, file: !5290, line: 44, type: !32)
!5295 = !DILocalVariable(name: "tmp", scope: !5289, file: !5290, line: 53, type: !32)
!5296 = distinct !DILocation(line: 40, column: 8, scope: !5281)
!5297 = !{i64 1826869}
!5298 = !DILocation(line: 0, scope: !5289, inlinedAt: !5296)
!5299 = !DILocalVariable(name: "key", arg: 1, scope: !5300, file: !5290, line: 84, type: !32)
!5300 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5290, file: !5290, line: 84, type: !5301, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5303)
!5301 = !DISubroutineType(types: !5302)
!5302 = !{null, !32}
!5303 = !{!5299}
!5304 = !DILocation(line: 0, scope: !5300, inlinedAt: !5305)
!5305 = distinct !DILocation(line: 47, column: 2, scope: !5281)
!5306 = !DILocation(line: 95, column: 2, scope: !5300, inlinedAt: !5305)
!5307 = !{i64 1827686}
!5308 = !DILocation(line: 51, column: 18, scope: !5281)
!5309 = !DILocation(line: 53, column: 2, scope: !5281)
!5310 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5311, file: !5311, line: 1609, type: !2904, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !322)
!5311 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5312 = !DILocation(line: 1611, column: 3, scope: !5310)
!5313 = !DILocation(line: 1612, column: 1, scope: !5310)
!5314 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5311, file: !5311, line: 1629, type: !2904, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !322)
!5315 = !DILocation(line: 1631, column: 3, scope: !5314)
!5316 = !DILocation(line: 1632, column: 1, scope: !5314)
!5317 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !171, file: !171, line: 26, type: !177, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !168, retainedNodes: !5318)
!5318 = !{!5319}
!5319 = !DILocalVariable(name: "dev", arg: 1, scope: !5317, file: !171, line: 26, type: !179)
!5320 = !DILocation(line: 0, scope: !5317)
!5321 = !DILocation(line: 68, column: 2, scope: !5317)
!5322 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5323, file: !5323, line: 57, type: !5324, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2361, retainedNodes: !5370)
!5323 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5324 = !DISubroutineType(types: !5325)
!5325 = !{null, !32, !5326}
!5326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5327, size: 32)
!5327 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5328)
!5328 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2481, line: 141, baseType: !5329)
!5329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2481, line: 97, size: 256, elements: !5330)
!5330 = !{!5331}
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5329, file: !2481, line: 107, baseType: !5332, size: 256)
!5332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2481, line: 98, size: 256, elements: !5333)
!5333 = !{!5334, !5339, !5344, !5349, !5354, !5359, !5364, !5369}
!5334 = !DIDerivedType(tag: DW_TAG_member, scope: !5332, file: !2481, line: 99, baseType: !5335, size: 32)
!5335 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5332, file: !2481, line: 99, size: 32, elements: !5336)
!5336 = !{!5337, !5338}
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5335, file: !2481, line: 99, baseType: !121, size: 32)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5335, file: !2481, line: 99, baseType: !121, size: 32)
!5339 = !DIDerivedType(tag: DW_TAG_member, scope: !5332, file: !2481, line: 100, baseType: !5340, size: 32, offset: 32)
!5340 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5332, file: !2481, line: 100, size: 32, elements: !5341)
!5341 = !{!5342, !5343}
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5340, file: !2481, line: 100, baseType: !121, size: 32)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5340, file: !2481, line: 100, baseType: !121, size: 32)
!5344 = !DIDerivedType(tag: DW_TAG_member, scope: !5332, file: !2481, line: 101, baseType: !5345, size: 32, offset: 64)
!5345 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5332, file: !2481, line: 101, size: 32, elements: !5346)
!5346 = !{!5347, !5348}
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5345, file: !2481, line: 101, baseType: !121, size: 32)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5345, file: !2481, line: 101, baseType: !121, size: 32)
!5349 = !DIDerivedType(tag: DW_TAG_member, scope: !5332, file: !2481, line: 102, baseType: !5350, size: 32, offset: 96)
!5350 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5332, file: !2481, line: 102, size: 32, elements: !5351)
!5351 = !{!5352, !5353}
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5350, file: !2481, line: 102, baseType: !121, size: 32)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5350, file: !2481, line: 102, baseType: !121, size: 32)
!5354 = !DIDerivedType(tag: DW_TAG_member, scope: !5332, file: !2481, line: 103, baseType: !5355, size: 32, offset: 128)
!5355 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5332, file: !2481, line: 103, size: 32, elements: !5356)
!5356 = !{!5357, !5358}
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5355, file: !2481, line: 103, baseType: !121, size: 32)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5355, file: !2481, line: 103, baseType: !121, size: 32)
!5359 = !DIDerivedType(tag: DW_TAG_member, scope: !5332, file: !2481, line: 104, baseType: !5360, size: 32, offset: 160)
!5360 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5332, file: !2481, line: 104, size: 32, elements: !5361)
!5361 = !{!5362, !5363}
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5360, file: !2481, line: 104, baseType: !121, size: 32)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5360, file: !2481, line: 104, baseType: !121, size: 32)
!5364 = !DIDerivedType(tag: DW_TAG_member, scope: !5332, file: !2481, line: 105, baseType: !5365, size: 32, offset: 192)
!5365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5332, file: !2481, line: 105, size: 32, elements: !5366)
!5366 = !{!5367, !5368}
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5365, file: !2481, line: 105, baseType: !121, size: 32)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5365, file: !2481, line: 105, baseType: !121, size: 32)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5332, file: !2481, line: 106, baseType: !121, size: 32, offset: 224)
!5370 = !{!5371, !5372}
!5371 = !DILocalVariable(name: "reason", arg: 1, scope: !5322, file: !5323, line: 57, type: !32)
!5372 = !DILocalVariable(name: "esf", arg: 2, scope: !5322, file: !5323, line: 57, type: !5326)
!5373 = !DILocation(line: 0, scope: !5322)
!5374 = !DILocation(line: 63, column: 2, scope: !5322)
!5375 = !DILocation(line: 64, column: 1, scope: !5322)
!5376 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5323, file: !5323, line: 82, type: !5377, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2361, retainedNodes: !5392)
!5377 = !DISubroutineType(types: !5378)
!5378 = !{null, !5326, !5379}
!5379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5380, size: 32)
!5380 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !284, line: 37, baseType: !5381)
!5381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !5382)
!5382 = !{!5383, !5384, !5385, !5386, !5387, !5388, !5389, !5390, !5391}
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5381, file: !284, line: 26, baseType: !121, size: 32)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5381, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5381, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5381, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5381, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5381, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5381, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5381, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5381, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!5392 = !{!5393, !5394, !5395}
!5393 = !DILocalVariable(name: "esf", arg: 1, scope: !5376, file: !5323, line: 82, type: !5326)
!5394 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !5376, file: !5323, line: 82, type: !5379)
!5395 = !DILocalVariable(name: "reason", scope: !5376, file: !5323, line: 88, type: !32)
!5396 = !DILocation(line: 0, scope: !5376)
!5397 = !DILocation(line: 88, column: 35, scope: !5376)
!5398 = !DILocation(line: 108, column: 2, scope: !5376)
!5399 = !DILocation(line: 131, column: 1, scope: !5376)
!5400 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5323, file: !5323, line: 133, type: !5401, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2361, retainedNodes: !5403)
!5401 = !DISubroutineType(types: !5402)
!5402 = !{null, !102}
!5403 = !{!5404, !5405, !5406}
!5404 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !5400, file: !5323, line: 133, type: !102)
!5405 = !DILocalVariable(name: "ssf_contents", scope: !5400, file: !5323, line: 135, type: !687)
!5406 = !DILocalVariable(name: "oops_esf", scope: !5400, file: !5323, line: 136, type: !5328)
!5407 = !DILocation(line: 0, scope: !5400)
!5408 = !DILocation(line: 136, column: 2, scope: !5400)
!5409 = !DILocation(line: 136, column: 15, scope: !5400)
!5410 = !DILocation(line: 139, column: 22, scope: !5400)
!5411 = !DILocation(line: 139, column: 17, scope: !5400)
!5412 = !DILocation(line: 139, column: 20, scope: !5400)
!5413 = !DILocation(line: 141, column: 2, scope: !5400)
!5414 = !DILocation(line: 142, column: 2, scope: !5400)
!5415 = distinct !DISubprogram(name: "arch_irq_enable", scope: !5416, file: !5416, line: 40, type: !5301, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !5417)
!5416 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5417 = !{!5418}
!5418 = !DILocalVariable(name: "irq", arg: 1, scope: !5415, file: !5416, line: 40, type: !32)
!5419 = !DILocation(line: 0, scope: !5415)
!5420 = !DILocation(line: 42, column: 2, scope: !5415)
!5421 = !DILocation(line: 43, column: 1, scope: !5415)
!5422 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !356, file: !356, line: 1684, type: !5423, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !5425)
!5423 = !DISubroutineType(types: !5424)
!5424 = !{null, !592}
!5425 = !{!5426}
!5426 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5422, file: !356, line: 1684, type: !592)
!5427 = !DILocation(line: 0, scope: !5422)
!5428 = !DILocation(line: 1686, column: 23, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5422, file: !356, line: 1686, column: 7)
!5430 = !DILocation(line: 1686, column: 7, scope: !5422)
!5431 = !DILocation(line: 1688, column: 5, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5429, file: !356, line: 1687, column: 3)
!5433 = !{i64 2150355451}
!5434 = !DILocation(line: 1689, column: 81, scope: !5432)
!5435 = !DILocation(line: 1689, column: 60, scope: !5432)
!5436 = !DILocation(line: 1689, column: 34, scope: !5432)
!5437 = !DILocation(line: 1689, column: 5, scope: !5432)
!5438 = !DILocation(line: 1689, column: 43, scope: !5432)
!5439 = !DILocation(line: 1690, column: 5, scope: !5432)
!5440 = !{i64 2150355565}
!5441 = !DILocation(line: 1691, column: 3, scope: !5432)
!5442 = !DILocation(line: 1692, column: 1, scope: !5422)
!5443 = distinct !DISubprogram(name: "arch_irq_disable", scope: !5416, file: !5416, line: 45, type: !5301, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !5444)
!5444 = !{!5445}
!5445 = !DILocalVariable(name: "irq", arg: 1, scope: !5443, file: !5416, line: 45, type: !32)
!5446 = !DILocation(line: 0, scope: !5443)
!5447 = !DILocation(line: 47, column: 2, scope: !5443)
!5448 = !DILocation(line: 48, column: 1, scope: !5443)
!5449 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !356, file: !356, line: 1722, type: !5423, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !5450)
!5450 = !{!5451}
!5451 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5449, file: !356, line: 1722, type: !592)
!5452 = !DILocation(line: 0, scope: !5449)
!5453 = !DILocation(line: 1724, column: 23, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5449, file: !356, line: 1724, column: 7)
!5455 = !DILocation(line: 1724, column: 7, scope: !5449)
!5456 = !DILocation(line: 1726, column: 81, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5454, file: !356, line: 1725, column: 3)
!5458 = !DILocation(line: 1726, column: 60, scope: !5457)
!5459 = !DILocation(line: 1726, column: 34, scope: !5457)
!5460 = !DILocation(line: 1726, column: 5, scope: !5457)
!5461 = !DILocation(line: 1726, column: 43, scope: !5457)
!5462 = !DILocation(line: 271, column: 3, scope: !5463, inlinedAt: !5465)
!5463 = distinct !DISubprogram(name: "__DSB", scope: !5464, file: !5464, line: 269, type: !2904, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !322)
!5464 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5465 = distinct !DILocation(line: 1727, column: 5, scope: !5457)
!5466 = !{i64 2809834}
!5467 = !DILocation(line: 260, column: 3, scope: !5468, inlinedAt: !5469)
!5468 = distinct !DISubprogram(name: "__ISB", scope: !5464, file: !5464, line: 258, type: !2904, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !322)
!5469 = distinct !DILocation(line: 1728, column: 5, scope: !5457)
!5470 = !{i64 2809551}
!5471 = !DILocation(line: 1729, column: 3, scope: !5457)
!5472 = !DILocation(line: 1730, column: 1, scope: !5449)
!5473 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !5416, file: !5416, line: 50, type: !5474, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !5476)
!5474 = !DISubroutineType(types: !5475)
!5475 = !{!103, !32}
!5476 = !{!5477}
!5477 = !DILocalVariable(name: "irq", arg: 1, scope: !5473, file: !5416, line: 50, type: !32)
!5478 = !DILocation(line: 0, scope: !5473)
!5479 = !DILocation(line: 52, column: 20, scope: !5473)
!5480 = !DILocation(line: 52, column: 9, scope: !5473)
!5481 = !DILocation(line: 52, column: 41, scope: !5473)
!5482 = !DILocation(line: 52, column: 39, scope: !5473)
!5483 = !DILocation(line: 52, column: 2, scope: !5473)
!5484 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !5416, file: !5416, line: 64, type: !5485, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !5487)
!5485 = !DISubroutineType(types: !5486)
!5486 = !{null, !32, !32, !121}
!5487 = !{!5488, !5489, !5490}
!5488 = !DILocalVariable(name: "irq", arg: 1, scope: !5484, file: !5416, line: 64, type: !32)
!5489 = !DILocalVariable(name: "prio", arg: 2, scope: !5484, file: !5416, line: 64, type: !32)
!5490 = !DILocalVariable(name: "flags", arg: 3, scope: !5484, file: !5416, line: 64, type: !121)
!5491 = !DILocation(line: 0, scope: !5484)
!5492 = !DILocation(line: 83, column: 8, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5494, file: !5416, line: 82, column: 9)
!5494 = distinct !DILexicalBlock(scope: !5484, file: !5416, line: 76, column: 6)
!5495 = !DILocation(line: 95, column: 2, scope: !5484)
!5496 = !DILocation(line: 96, column: 1, scope: !5484)
!5497 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !5498, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !5500)
!5498 = !DISubroutineType(types: !5499)
!5499 = !{null, !592, !121}
!5500 = !{!5501, !5502}
!5501 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5497, file: !356, line: 1814, type: !592)
!5502 = !DILocalVariable(name: "priority", arg: 2, scope: !5497, file: !356, line: 1814, type: !121)
!5503 = !DILocation(line: 0, scope: !5497)
!5504 = !DILocation(line: 0, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5497, file: !356, line: 1816, column: 7)
!5506 = !DILocation(line: 1816, column: 7, scope: !5497)
!5507 = !DILocation(line: 1824, column: 1, scope: !5497)
!5508 = distinct !DISubprogram(name: "z_irq_spurious", scope: !5416, file: !5416, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2372, retainedNodes: !5509)
!5509 = !{!5510}
!5510 = !DILocalVariable(name: "unused", arg: 1, scope: !5508, file: !5416, line: 155, type: !13)
!5511 = !DILocation(line: 0, scope: !5508)
!5512 = !DILocation(line: 159, column: 2, scope: !5508)
!5513 = !DILocation(line: 160, column: 1, scope: !5508)
!5514 = distinct !DISubprogram(name: "z_arm_nmi", scope: !5515, file: !5515, line: 87, type: !2904, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !322)
!5515 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5516 = !DILocation(line: 89, column: 2, scope: !5514)
!5517 = !DILocation(line: 90, column: 2, scope: !5514)
!5518 = !DILocation(line: 91, column: 1, scope: !5514)
!5519 = !DISubprogram(name: "z_SysNmiOnReset", scope: !5515, file: !5515, line: 23, type: !2904, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!5520 = !DISubprogram(name: "z_arm_int_exit", scope: !5521, file: !5521, line: 153, type: !2904, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!5521 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5522 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !5523, file: !5523, line: 256, type: !2904, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2420, retainedNodes: !322)
!5523 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5524 = !DILocation(line: 258, column: 2, scope: !5522)
!5525 = !DILocation(line: 260, column: 2, scope: !5522)
!5526 = !DILocation(line: 262, column: 2, scope: !5522)
!5527 = !DILocation(line: 263, column: 2, scope: !5522)
!5528 = !DILocation(line: 267, column: 2, scope: !5522)
!5529 = !DILocation(line: 268, column: 2, scope: !5522)
!5530 = distinct !DISubprogram(name: "relocate_vector_table", scope: !5523, file: !5523, line: 53, type: !2904, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2420, retainedNodes: !322)
!5531 = !DILocation(line: 55, column: 12, scope: !5530)
!5532 = !DILocation(line: 271, column: 3, scope: !5533, inlinedAt: !5534)
!5533 = distinct !DISubprogram(name: "__DSB", scope: !5464, file: !5464, line: 269, type: !2904, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2420, retainedNodes: !322)
!5534 = distinct !DILocation(line: 56, column: 2, scope: !5530)
!5535 = !{i64 2808505}
!5536 = !DILocation(line: 260, column: 3, scope: !5537, inlinedAt: !5538)
!5537 = distinct !DISubprogram(name: "__ISB", scope: !5464, file: !5464, line: 258, type: !2904, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2420, retainedNodes: !322)
!5538 = distinct !DILocation(line: 57, column: 2, scope: !5530)
!5539 = !{i64 2808222}
!5540 = !DILocation(line: 58, column: 1, scope: !5530)
!5541 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !5523, file: !5523, line: 96, type: !2904, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2420, retainedNodes: !322)
!5542 = !DILocation(line: 103, column: 13, scope: !5541)
!5543 = !DILocation(line: 975, column: 3, scope: !5544, inlinedAt: !5549)
!5544 = distinct !DISubprogram(name: "__get_CONTROL", scope: !5464, file: !5464, line: 971, type: !5545, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2420, retainedNodes: !5547)
!5545 = !DISubroutineType(types: !5546)
!5546 = !{!121}
!5547 = !{!5548}
!5548 = !DILocalVariable(name: "result", scope: !5544, file: !5464, line: 973, type: !121)
!5549 = distinct !DILocation(line: 189, column: 16, scope: !5541)
!5550 = !{i64 2829335}
!5551 = !DILocation(line: 0, scope: !5544, inlinedAt: !5549)
!5552 = !DILocation(line: 189, column: 32, scope: !5541)
!5553 = !DILocalVariable(name: "control", arg: 1, scope: !5554, file: !5464, line: 1001, type: !121)
!5554 = distinct !DISubprogram(name: "__set_CONTROL", scope: !5464, file: !5464, line: 1001, type: !5555, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2420, retainedNodes: !5557)
!5555 = !DISubroutineType(types: !5556)
!5556 = !{null, !121}
!5557 = !{!5553}
!5558 = !DILocation(line: 0, scope: !5554, inlinedAt: !5559)
!5559 = distinct !DILocation(line: 189, column: 2, scope: !5541)
!5560 = !DILocation(line: 1003, column: 3, scope: !5554, inlinedAt: !5559)
!5561 = !{i64 2830055}
!5562 = !DILocation(line: 260, column: 3, scope: !5537, inlinedAt: !5563)
!5563 = distinct !DILocation(line: 1004, column: 3, scope: !5554, inlinedAt: !5559)
!5564 = !DILocation(line: 191, column: 1, scope: !5541)
!5565 = distinct !DISubprogram(name: "arch_swap", scope: !5566, file: !5566, line: 33, type: !5474, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !5567)
!5566 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5567 = !{!5568}
!5568 = !DILocalVariable(name: "key", arg: 1, scope: !5565, file: !5566, line: 33, type: !32)
!5569 = !DILocation(line: 0, scope: !5565)
!5570 = !DILocation(line: 36, column: 2, scope: !5565)
!5571 = !DILocation(line: 36, column: 17, scope: !5565)
!5572 = !DILocation(line: 36, column: 25, scope: !5565)
!5573 = !DILocation(line: 37, column: 37, scope: !5565)
!5574 = !DILocation(line: 37, column: 17, scope: !5565)
!5575 = !DILocation(line: 37, column: 35, scope: !5565)
!5576 = !DILocation(line: 41, column: 12, scope: !5565)
!5577 = !DILocalVariable(name: "key", arg: 1, scope: !5578, file: !5290, line: 84, type: !32)
!5578 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5290, file: !5290, line: 84, type: !5301, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !5579)
!5579 = !{!5577}
!5580 = !DILocation(line: 0, scope: !5578, inlinedAt: !5581)
!5581 = distinct !DILocation(line: 44, column: 2, scope: !5565)
!5582 = !DILocation(line: 95, column: 2, scope: !5578, inlinedAt: !5581)
!5583 = !{i64 1947701}
!5584 = !DILocation(line: 53, column: 9, scope: !5565)
!5585 = !DILocation(line: 53, column: 24, scope: !5565)
!5586 = !DILocation(line: 53, column: 2, scope: !5565)
!5587 = distinct !DISubprogram(name: "arch_new_thread", scope: !5588, file: !5588, line: 56, type: !5589, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !5696)
!5588 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5589 = !DISubroutineType(types: !5590)
!5590 = !{null, !5591, !5691, !957, !3327, !102, !102, !102}
!5591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5592, size: 32)
!5592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !5593)
!5593 = !{!5594, !5652, !5664, !5665, !5666, !5667, !5673, !5686}
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5592, file: !211, line: 247, baseType: !5595, size: 384)
!5595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !5596)
!5596 = !{!5597, !5621, !5628, !5629, !5630, !5639, !5640, !5641}
!5597 = !DIDerivedType(tag: DW_TAG_member, scope: !5595, file: !211, line: 60, baseType: !5598, size: 64)
!5598 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5595, file: !211, line: 60, size: 64, elements: !5599)
!5599 = !{!5600, !5615}
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5598, file: !211, line: 61, baseType: !5601, size: 64)
!5601 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !5602)
!5602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !5603)
!5603 = !{!5604, !5610}
!5604 = !DIDerivedType(tag: DW_TAG_member, scope: !5602, file: !221, line: 38, baseType: !5605, size: 32)
!5605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5602, file: !221, line: 38, size: 32, elements: !5606)
!5606 = !{!5607, !5609}
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5605, file: !221, line: 39, baseType: !5608, size: 32)
!5608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5602, size: 32)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5605, file: !221, line: 40, baseType: !5608, size: 32)
!5610 = !DIDerivedType(tag: DW_TAG_member, scope: !5602, file: !221, line: 42, baseType: !5611, size: 32, offset: 32)
!5611 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5602, file: !221, line: 42, size: 32, elements: !5612)
!5612 = !{!5613, !5614}
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5611, file: !221, line: 43, baseType: !5608, size: 32)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5611, file: !221, line: 44, baseType: !5608, size: 32)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5598, file: !211, line: 62, baseType: !5616, size: 64)
!5616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !5617)
!5617 = !{!5618}
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5616, file: !237, line: 50, baseType: !5619, size: 64)
!5619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5620, size: 64, elements: !242)
!5620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5616, size: 32)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5595, file: !211, line: 68, baseType: !5622, size: 32, offset: 64)
!5622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5623, size: 32)
!5623 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !5624)
!5624 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !5625)
!5625 = !{!5626}
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5624, file: !247, line: 232, baseType: !5627, size: 64)
!5627 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !5602)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5595, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5595, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!5630 = !DIDerivedType(tag: DW_TAG_member, scope: !5595, file: !211, line: 90, baseType: !5631, size: 16, offset: 112)
!5631 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5595, file: !211, line: 90, size: 16, elements: !5632)
!5632 = !{!5633, !5638}
!5633 = !DIDerivedType(tag: DW_TAG_member, scope: !5631, file: !211, line: 91, baseType: !5634, size: 16)
!5634 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5631, file: !211, line: 91, size: 16, elements: !5635)
!5635 = !{!5636, !5637}
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5634, file: !211, line: 96, baseType: !261, size: 8)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5634, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5631, file: !211, line: 100, baseType: !265, size: 16)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5595, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5595, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5595, file: !211, line: 131, baseType: !5642, size: 192, offset: 192)
!5642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !5643)
!5643 = !{!5644, !5645, !5651}
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5642, file: !247, line: 245, baseType: !5601, size: 64)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5642, file: !247, line: 246, baseType: !5646, size: 32, offset: 64)
!5646 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !5647)
!5647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5648, size: 32)
!5648 = !DISubroutineType(types: !5649)
!5649 = !{null, !5650}
!5650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5642, size: 32)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5642, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5592, file: !211, line: 250, baseType: !5653, size: 288, offset: 384)
!5653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !5654)
!5654 = !{!5655, !5656, !5657, !5658, !5659, !5660, !5661, !5662, !5663}
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5653, file: !284, line: 26, baseType: !121, size: 32)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5653, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5653, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5653, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5653, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5653, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5653, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5653, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5653, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5592, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5592, file: !211, line: 256, baseType: !5623, size: 64, offset: 704)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5592, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5592, file: !211, line: 300, baseType: !5668, size: 96, offset: 800)
!5668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !5669)
!5669 = !{!5670, !5671, !5672}
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5668, file: !211, line: 153, baseType: !22, size: 32)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5668, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5668, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5592, file: !211, line: 325, baseType: !5674, size: 32, offset: 896)
!5674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5675, size: 32)
!5675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !5676)
!5676 = !{!5677, !5683, !5684}
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5675, file: !307, line: 5074, baseType: !5678, size: 96)
!5678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !5679)
!5679 = !{!5680, !5681, !5682}
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5678, file: !311, line: 57, baseType: !314, size: 32)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5678, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5678, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5675, file: !307, line: 5075, baseType: !5623, size: 64, offset: 96)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5675, file: !307, line: 5076, baseType: !5685, offset: 160)
!5685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5592, file: !211, line: 343, baseType: !5687, size: 64, offset: 928)
!5687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !5688)
!5688 = !{!5689, !5690}
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5687, file: !284, line: 63, baseType: !121, size: 32)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5687, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!5691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5692, size: 32)
!5692 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3328, line: 44, baseType: !5693)
!5693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1828, line: 47, size: 8, elements: !5694)
!5694 = !{!5695}
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5693, file: !1828, line: 48, baseType: !146, size: 8)
!5696 = !{!5697, !5698, !5699, !5700, !5701, !5702, !5703, !5704}
!5697 = !DILocalVariable(name: "thread", arg: 1, scope: !5587, file: !5588, line: 56, type: !5591)
!5698 = !DILocalVariable(name: "stack", arg: 2, scope: !5587, file: !5588, line: 56, type: !5691)
!5699 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !5587, file: !5588, line: 57, type: !957)
!5700 = !DILocalVariable(name: "entry", arg: 4, scope: !5587, file: !5588, line: 57, type: !3327)
!5701 = !DILocalVariable(name: "p1", arg: 5, scope: !5587, file: !5588, line: 58, type: !102)
!5702 = !DILocalVariable(name: "p2", arg: 6, scope: !5587, file: !5588, line: 58, type: !102)
!5703 = !DILocalVariable(name: "p3", arg: 7, scope: !5587, file: !5588, line: 58, type: !102)
!5704 = !DILocalVariable(name: "iframe", scope: !5587, file: !5588, line: 60, type: !2479)
!5705 = !DILocation(line: 0, scope: !5587)
!5706 = !DILocation(line: 85, column: 11, scope: !5587)
!5707 = !DILocation(line: 93, column: 10, scope: !5587)
!5708 = !DILocation(line: 98, column: 13, scope: !5587)
!5709 = !DILocation(line: 100, column: 15, scope: !5587)
!5710 = !DILocation(line: 100, column: 10, scope: !5587)
!5711 = !DILocation(line: 100, column: 13, scope: !5587)
!5712 = !DILocation(line: 101, column: 15, scope: !5587)
!5713 = !DILocation(line: 101, column: 10, scope: !5587)
!5714 = !DILocation(line: 101, column: 13, scope: !5587)
!5715 = !DILocation(line: 102, column: 15, scope: !5587)
!5716 = !DILocation(line: 102, column: 10, scope: !5587)
!5717 = !DILocation(line: 102, column: 13, scope: !5587)
!5718 = !DILocation(line: 103, column: 15, scope: !5587)
!5719 = !DILocation(line: 103, column: 10, scope: !5587)
!5720 = !DILocation(line: 103, column: 13, scope: !5587)
!5721 = !DILocation(line: 106, column: 10, scope: !5587)
!5722 = !DILocation(line: 106, column: 15, scope: !5587)
!5723 = !DILocation(line: 122, column: 29, scope: !5587)
!5724 = !DILocation(line: 122, column: 23, scope: !5587)
!5725 = !DILocation(line: 122, column: 27, scope: !5587)
!5726 = !DILocation(line: 123, column: 15, scope: !5587)
!5727 = !DILocation(line: 123, column: 23, scope: !5587)
!5728 = !DILocation(line: 143, column: 1, scope: !5587)
!5729 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !5588, file: !5588, line: 385, type: !5730, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !5733)
!5730 = !DISubroutineType(types: !5731)
!5731 = !{!121, !5732, !5732}
!5732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!5733 = !{!5734, !5735, !5736, !5739}
!5734 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !5729, file: !5588, line: 385, type: !5732)
!5735 = !DILocalVariable(name: "psp", arg: 2, scope: !5729, file: !5588, line: 385, type: !5732)
!5736 = !DILocalVariable(name: "thread", scope: !5729, file: !5588, line: 388, type: !5737)
!5737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5738, size: 32)
!5738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5592)
!5739 = !DILocalVariable(name: "guard_len", scope: !5729, file: !5588, line: 405, type: !121)
!5740 = !DILocation(line: 0, scope: !5729)
!5741 = !DILocation(line: 388, column: 34, scope: !5729)
!5742 = !DILocation(line: 390, column: 13, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5729, file: !5588, line: 390, column: 6)
!5744 = !DILocation(line: 390, column: 6, scope: !5729)
!5745 = !DILocation(line: 438, column: 6, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5729, file: !5588, line: 438, column: 6)
!5747 = !DILocation(line: 438, column: 6, scope: !5729)
!5748 = !DILocation(line: 442, column: 3, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5746, file: !5588, line: 440, column: 22)
!5750 = !DILocation(line: 455, column: 1, scope: !5729)
!5751 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !5588, file: !5588, line: 530, type: !5752, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2476, retainedNodes: !5754)
!5752 = !DISubroutineType(types: !5753)
!5753 = !{null, !5591, !957, !3327}
!5754 = !{!5755, !5756, !5757}
!5755 = !DILocalVariable(name: "main_thread", arg: 1, scope: !5751, file: !5588, line: 530, type: !5591)
!5756 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !5751, file: !5588, line: 530, type: !957)
!5757 = !DILocalVariable(name: "_main", arg: 3, scope: !5751, file: !5588, line: 531, type: !3327)
!5758 = !DILocation(line: 0, scope: !5751)
!5759 = !DILocation(line: 535, column: 11, scope: !5751)
!5760 = !DILocation(line: 560, column: 2, scope: !5751)
!5761 = !DILocation(line: 576, column: 2, scope: !5751)
!5762 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!5763 = !DILocation(line: 603, column: 2, scope: !5751)
!5764 = distinct !DISubprogram(name: "z_arm_fault", scope: !5765, file: !5765, line: 1036, type: !5766, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !5781)
!5765 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5766 = !DISubroutineType(types: !5767)
!5767 = !{null, !121, !121, !121, !5768}
!5768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5769, size: 32)
!5769 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !284, line: 37, baseType: !5770)
!5770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !5771)
!5771 = !{!5772, !5773, !5774, !5775, !5776, !5777, !5778, !5779, !5780}
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5770, file: !284, line: 26, baseType: !121, size: 32)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5770, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5770, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5770, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5770, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5770, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5770, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5770, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5770, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!5781 = !{!5782, !5783, !5784, !5785, !5786, !5787, !5788, !5789, !5790, !5791}
!5782 = !DILocalVariable(name: "msp", arg: 1, scope: !5764, file: !5765, line: 1036, type: !121)
!5783 = !DILocalVariable(name: "psp", arg: 2, scope: !5764, file: !5765, line: 1036, type: !121)
!5784 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5764, file: !5765, line: 1036, type: !121)
!5785 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !5764, file: !5765, line: 1037, type: !5768)
!5786 = !DILocalVariable(name: "reason", scope: !5764, file: !5765, line: 1039, type: !121)
!5787 = !DILocalVariable(name: "fault", scope: !5764, file: !5765, line: 1040, type: !103)
!5788 = !DILocalVariable(name: "recoverable", scope: !5764, file: !5765, line: 1041, type: !157)
!5789 = !DILocalVariable(name: "nested_exc", scope: !5764, file: !5765, line: 1041, type: !157)
!5790 = !DILocalVariable(name: "esf", scope: !5764, file: !5765, line: 1042, type: !2547)
!5791 = !DILocalVariable(name: "esf_copy", scope: !5764, file: !5765, line: 1047, type: !2548)
!5792 = !DILocation(line: 0, scope: !5764)
!5793 = !DILocation(line: 1040, column: 19, scope: !5764)
!5794 = !DILocation(line: 1040, column: 24, scope: !5764)
!5795 = !DILocation(line: 1041, column: 2, scope: !5764)
!5796 = !DILocation(line: 1047, column: 2, scope: !5764)
!5797 = !DILocation(line: 1047, column: 15, scope: !5764)
!5798 = !DILocalVariable(name: "key", arg: 1, scope: !5799, file: !5290, line: 84, type: !32)
!5799 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5290, file: !5290, line: 84, type: !5301, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !5800)
!5800 = !{!5798}
!5801 = !DILocation(line: 0, scope: !5799, inlinedAt: !5802)
!5802 = distinct !DILocation(line: 1050, column: 2, scope: !5764)
!5803 = !DILocation(line: 95, column: 2, scope: !5799, inlinedAt: !5802)
!5804 = !{i64 1980945}
!5805 = !DILocation(line: 1055, column: 9, scope: !5764)
!5806 = !DILocation(line: 1063, column: 11, scope: !5764)
!5807 = !DILocation(line: 1064, column: 6, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5764, file: !5765, line: 1064, column: 6)
!5809 = !{i8 0, i8 2}
!5810 = !DILocation(line: 1064, column: 6, scope: !5764)
!5811 = !DILocation(line: 1070, column: 20, scope: !5764)
!5812 = !DILocation(line: 1070, column: 2, scope: !5764)
!5813 = !DILocation(line: 1089, column: 6, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5764, file: !5765, line: 1089, column: 6)
!5815 = !DILocation(line: 0, scope: !5814)
!5816 = !DILocation(line: 1089, column: 6, scope: !5764)
!5817 = !DILocation(line: 1090, column: 28, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5819, file: !5765, line: 1090, column: 7)
!5819 = distinct !DILexicalBlock(scope: !5814, file: !5765, line: 1089, column: 18)
!5820 = !DILocation(line: 1090, column: 44, scope: !5818)
!5821 = !DILocation(line: 1090, column: 7, scope: !5819)
!5822 = !DILocation(line: 1091, column: 24, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5818, file: !5765, line: 1090, column: 50)
!5824 = !DILocation(line: 1092, column: 3, scope: !5823)
!5825 = !DILocation(line: 1094, column: 23, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5814, file: !5765, line: 1093, column: 9)
!5827 = !DILocation(line: 1097, column: 2, scope: !5764)
!5828 = !DILocation(line: 1098, column: 1, scope: !5764)
!5829 = distinct !DISubprogram(name: "get_esf", scope: !5765, file: !5765, line: 894, type: !5830, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !5833)
!5830 = !DISubroutineType(types: !5831)
!5831 = !{!2547, !121, !121, !121, !5832}
!5832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!5833 = !{!5834, !5835, !5836, !5837, !5838, !5839}
!5834 = !DILocalVariable(name: "msp", arg: 1, scope: !5829, file: !5765, line: 894, type: !121)
!5835 = !DILocalVariable(name: "psp", arg: 2, scope: !5829, file: !5765, line: 894, type: !121)
!5836 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5829, file: !5765, line: 894, type: !121)
!5837 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !5829, file: !5765, line: 895, type: !5832)
!5838 = !DILocalVariable(name: "alternative_state_exc", scope: !5829, file: !5765, line: 897, type: !157)
!5839 = !DILocalVariable(name: "ptr_esf", scope: !5829, file: !5765, line: 898, type: !2547)
!5840 = !DILocation(line: 0, scope: !5829)
!5841 = !DILocation(line: 900, column: 14, scope: !5829)
!5842 = !DILocation(line: 902, column: 49, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5829, file: !5765, line: 902, column: 6)
!5844 = !DILocation(line: 902, column: 6, scope: !5829)
!5845 = !DILocation(line: 983, column: 18, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5829, file: !5765, line: 983, column: 6)
!5847 = !DILocation(line: 991, column: 7, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5849, file: !5765, line: 990, column: 30)
!5849 = distinct !DILexicalBlock(scope: !5829, file: !5765, line: 990, column: 6)
!5850 = !DILocation(line: 998, column: 16, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5852, file: !5765, line: 995, column: 10)
!5852 = distinct !DILexicalBlock(scope: !5848, file: !5765, line: 991, column: 7)
!5853 = !DILocation(line: 1002, column: 2, scope: !5829)
!5854 = !DILocation(line: 1003, column: 1, scope: !5829)
!5855 = distinct !DISubprogram(name: "fault_handle", scope: !5765, file: !5765, line: 786, type: !5856, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !5858)
!5856 = !DISubroutineType(types: !5857)
!5857 = !{!121, !2547, !103, !5832}
!5858 = !{!5859, !5860, !5861, !5862}
!5859 = !DILocalVariable(name: "esf", arg: 1, scope: !5855, file: !5765, line: 786, type: !2547)
!5860 = !DILocalVariable(name: "fault", arg: 2, scope: !5855, file: !5765, line: 786, type: !103)
!5861 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5855, file: !5765, line: 786, type: !5832)
!5862 = !DILocalVariable(name: "reason", scope: !5855, file: !5765, line: 788, type: !121)
!5863 = !DILocation(line: 0, scope: !5855)
!5864 = !DILocation(line: 790, column: 15, scope: !5855)
!5865 = !DILocation(line: 792, column: 2, scope: !5855)
!5866 = !DILocation(line: 794, column: 12, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5855, file: !5765, line: 792, column: 17)
!5868 = !DILocation(line: 795, column: 3, scope: !5867)
!5869 = !DILocation(line: 800, column: 12, scope: !5867)
!5870 = !DILocation(line: 801, column: 3, scope: !5867)
!5871 = !DILocation(line: 803, column: 12, scope: !5867)
!5872 = !DILocation(line: 804, column: 3, scope: !5867)
!5873 = !DILocation(line: 806, column: 12, scope: !5867)
!5874 = !DILocation(line: 807, column: 3, scope: !5867)
!5875 = !DILocation(line: 814, column: 3, scope: !5867)
!5876 = !DILocation(line: 815, column: 3, scope: !5867)
!5877 = !DILocation(line: 829, column: 2, scope: !5855)
!5878 = distinct !DISubprogram(name: "hard_fault", scope: !5765, file: !5765, line: 709, type: !5879, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !5881)
!5879 = !DISubroutineType(types: !5880)
!5880 = !{!121, !2547, !5832}
!5881 = !{!5882, !5883, !5884}
!5882 = !DILocalVariable(name: "esf", arg: 1, scope: !5878, file: !5765, line: 709, type: !2547)
!5883 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5878, file: !5765, line: 709, type: !5832)
!5884 = !DILocalVariable(name: "reason", scope: !5878, file: !5765, line: 711, type: !121)
!5885 = !DILocation(line: 0, scope: !5878)
!5886 = !DILocation(line: 732, column: 15, scope: !5878)
!5887 = !DILocation(line: 734, column: 12, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5878, file: !5765, line: 734, column: 6)
!5889 = !DILocation(line: 734, column: 17, scope: !5888)
!5890 = !DILocation(line: 734, column: 41, scope: !5888)
!5891 = !DILocation(line: 734, column: 6, scope: !5878)
!5892 = !DILocation(line: 736, column: 19, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5888, file: !5765, line: 736, column: 13)
!5894 = !DILocation(line: 736, column: 49, scope: !5893)
!5895 = !DILocation(line: 736, column: 13, scope: !5888)
!5896 = !DILocation(line: 738, column: 19, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5893, file: !5765, line: 738, column: 13)
!5898 = !DILocation(line: 738, column: 24, scope: !5897)
!5899 = !DILocation(line: 738, column: 47, scope: !5897)
!5900 = !DILocation(line: 738, column: 13, scope: !5893)
!5901 = !DILocation(line: 740, column: 7, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5903, file: !5765, line: 740, column: 7)
!5903 = distinct !DILexicalBlock(scope: !5897, file: !5765, line: 738, column: 53)
!5904 = !DILocation(line: 740, column: 7, scope: !5903)
!5905 = !DILocation(line: 742, column: 24, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5902, file: !5765, line: 740, column: 38)
!5907 = !DILocation(line: 743, column: 3, scope: !5906)
!5908 = !DILocation(line: 743, column: 20, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5902, file: !5765, line: 743, column: 14)
!5910 = !DILocation(line: 743, column: 25, scope: !5909)
!5911 = !DILocation(line: 743, column: 52, scope: !5909)
!5912 = !DILocation(line: 743, column: 14, scope: !5902)
!5913 = !DILocation(line: 744, column: 13, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5909, file: !5765, line: 743, column: 58)
!5915 = !DILocation(line: 745, column: 3, scope: !5914)
!5916 = !DILocation(line: 745, column: 20, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5909, file: !5765, line: 745, column: 14)
!5918 = !DILocation(line: 745, column: 25, scope: !5917)
!5919 = !DILocation(line: 745, column: 52, scope: !5917)
!5920 = !DILocation(line: 745, column: 14, scope: !5909)
!5921 = !DILocation(line: 746, column: 13, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5917, file: !5765, line: 745, column: 58)
!5923 = !DILocation(line: 747, column: 3, scope: !5922)
!5924 = !DILocation(line: 747, column: 20, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5917, file: !5765, line: 747, column: 14)
!5926 = !DILocation(line: 747, column: 52, scope: !5925)
!5927 = !DILocation(line: 747, column: 14, scope: !5917)
!5928 = !DILocation(line: 748, column: 13, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5925, file: !5765, line: 747, column: 58)
!5930 = !DILocation(line: 753, column: 3, scope: !5929)
!5931 = !DILocation(line: 766, column: 2, scope: !5878)
!5932 = distinct !DISubprogram(name: "mem_manage_fault", scope: !5765, file: !5765, line: 229, type: !5856, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !5933)
!5933 = !{!5934, !5935, !5936, !5937, !5938, !5939, !5942}
!5934 = !DILocalVariable(name: "esf", arg: 1, scope: !5932, file: !5765, line: 229, type: !2547)
!5935 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5932, file: !5765, line: 229, type: !103)
!5936 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5932, file: !5765, line: 230, type: !5832)
!5937 = !DILocalVariable(name: "reason", scope: !5932, file: !5765, line: 232, type: !121)
!5938 = !DILocalVariable(name: "mmfar", scope: !5932, file: !5765, line: 233, type: !121)
!5939 = !DILocalVariable(name: "temp", scope: !5940, file: !5765, line: 254, type: !121)
!5940 = distinct !DILexicalBlock(scope: !5941, file: !5765, line: 244, column: 48)
!5941 = distinct !DILexicalBlock(scope: !5932, file: !5765, line: 244, column: 6)
!5942 = !DILocalVariable(name: "min_stack_ptr", scope: !5943, file: !5765, line: 309, type: !121)
!5943 = distinct !DILexicalBlock(scope: !5944, file: !5765, line: 308, column: 43)
!5944 = distinct !DILexicalBlock(scope: !5945, file: !5765, line: 308, column: 7)
!5945 = distinct !DILexicalBlock(scope: !5946, file: !5765, line: 289, column: 40)
!5946 = distinct !DILexicalBlock(scope: !5932, file: !5765, line: 288, column: 6)
!5947 = !DILocation(line: 0, scope: !5932)
!5948 = !DILocation(line: 237, column: 12, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5932, file: !5765, line: 237, column: 6)
!5950 = !DILocation(line: 241, column: 12, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5932, file: !5765, line: 241, column: 6)
!5952 = !DILocation(line: 244, column: 12, scope: !5941)
!5953 = !DILocation(line: 244, column: 17, scope: !5941)
!5954 = !DILocation(line: 244, column: 42, scope: !5941)
!5955 = !DILocation(line: 244, column: 6, scope: !5932)
!5956 = !DILocation(line: 254, column: 24, scope: !5940)
!5957 = !DILocation(line: 0, scope: !5940)
!5958 = !DILocation(line: 256, column: 13, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5940, file: !5765, line: 256, column: 7)
!5960 = !DILocation(line: 256, column: 18, scope: !5959)
!5961 = !DILocation(line: 256, column: 44, scope: !5959)
!5962 = !DILocation(line: 256, column: 7, scope: !5940)
!5963 = !DILocation(line: 259, column: 24, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5965, file: !5765, line: 259, column: 8)
!5965 = distinct !DILexicalBlock(scope: !5959, file: !5765, line: 256, column: 50)
!5966 = !DILocation(line: 259, column: 8, scope: !5965)
!5967 = !DILocation(line: 261, column: 15, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5964, file: !5765, line: 259, column: 30)
!5969 = !DILocation(line: 262, column: 4, scope: !5968)
!5970 = !DILocation(line: 265, column: 12, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5932, file: !5765, line: 265, column: 6)
!5972 = !DILocation(line: 269, column: 12, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5932, file: !5765, line: 269, column: 6)
!5974 = !DILocation(line: 288, column: 12, scope: !5946)
!5975 = !DILocation(line: 288, column: 17, scope: !5946)
!5976 = !DILocation(line: 288, column: 41, scope: !5946)
!5977 = !DILocation(line: 289, column: 9, scope: !5946)
!5978 = !DILocation(line: 289, column: 14, scope: !5946)
!5979 = !DILocation(line: 288, column: 6, scope: !5932)
!5980 = !DILocation(line: 308, column: 12, scope: !5944)
!5981 = !DILocation(line: 308, column: 17, scope: !5944)
!5982 = !DILocation(line: 308, column: 7, scope: !5945)
!5983 = !DILocation(line: 310, column: 6, scope: !5943)
!5984 = !DILocation(line: 309, column: 29, scope: !5943)
!5985 = !DILocation(line: 0, scope: !5943)
!5986 = !DILocation(line: 312, column: 8, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5943, file: !5765, line: 312, column: 8)
!5988 = !DILocation(line: 312, column: 8, scope: !5943)
!5989 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !5990, file: !5464, line: 1099, type: !121)
!5990 = distinct !DISubprogram(name: "__set_PSP", scope: !5464, file: !5464, line: 1099, type: !5555, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !5991)
!5991 = !{!5989}
!5992 = !DILocation(line: 0, scope: !5990, inlinedAt: !5993)
!5993 = distinct !DILocation(line: 338, column: 5, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5987, file: !5765, line: 312, column: 23)
!5995 = !DILocation(line: 1101, column: 3, scope: !5990, inlinedAt: !5993)
!5996 = !{i64 2859474}
!5997 = !DILocation(line: 341, column: 4, scope: !5994)
!5998 = !DILocation(line: 360, column: 12, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5932, file: !5765, line: 360, column: 6)
!6000 = !DILocation(line: 360, column: 17, scope: !5999)
!6001 = !DILocation(line: 360, column: 41, scope: !5999)
!6002 = !DILocation(line: 360, column: 6, scope: !5932)
!6003 = !DILocation(line: 361, column: 14, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !5999, file: !5765, line: 360, column: 47)
!6005 = !DILocation(line: 362, column: 2, scope: !6004)
!6006 = !DILocation(line: 366, column: 12, scope: !5932)
!6007 = !DILocation(line: 369, column: 15, scope: !5932)
!6008 = !DILocation(line: 371, column: 2, scope: !5932)
!6009 = distinct !DISubprogram(name: "bus_fault", scope: !5765, file: !5765, line: 383, type: !6010, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !6012)
!6010 = !DISubroutineType(types: !6011)
!6011 = !{!103, !2547, !103, !5832}
!6012 = !{!6013, !6014, !6015, !6016, !6017}
!6013 = !DILocalVariable(name: "esf", arg: 1, scope: !6009, file: !5765, line: 383, type: !2547)
!6014 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6009, file: !5765, line: 383, type: !103)
!6015 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6009, file: !5765, line: 383, type: !5832)
!6016 = !DILocalVariable(name: "reason", scope: !6009, file: !5765, line: 385, type: !121)
!6017 = !DILocalVariable(name: "bfar", scope: !6018, file: !5765, line: 405, type: !121)
!6018 = distinct !DILexicalBlock(scope: !6019, file: !5765, line: 395, column: 42)
!6019 = distinct !DILexicalBlock(scope: !6009, file: !5765, line: 395, column: 6)
!6020 = !DILocation(line: 0, scope: !6009)
!6021 = !DILocation(line: 389, column: 11, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !6009, file: !5765, line: 389, column: 6)
!6023 = !DILocation(line: 392, column: 11, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6009, file: !5765, line: 392, column: 6)
!6025 = !DILocation(line: 395, column: 11, scope: !6019)
!6026 = !DILocation(line: 395, column: 16, scope: !6019)
!6027 = !DILocation(line: 395, column: 6, scope: !6009)
!6028 = !DILocation(line: 405, column: 3, scope: !6018)
!6029 = !DILocation(line: 0, scope: !6018)
!6030 = !DILocation(line: 407, column: 13, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6018, file: !5765, line: 407, column: 7)
!6032 = !DILocation(line: 407, column: 18, scope: !6031)
!6033 = !DILocation(line: 407, column: 44, scope: !6031)
!6034 = !DILocation(line: 407, column: 7, scope: !6018)
!6035 = !DILocation(line: 411, column: 15, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6037, file: !5765, line: 409, column: 30)
!6037 = distinct !DILexicalBlock(scope: !6038, file: !5765, line: 409, column: 8)
!6038 = distinct !DILexicalBlock(scope: !6031, file: !5765, line: 407, column: 50)
!6039 = !DILocation(line: 412, column: 4, scope: !6036)
!6040 = !DILocation(line: 415, column: 11, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6009, file: !5765, line: 415, column: 6)
!6042 = !DILocation(line: 418, column: 12, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6009, file: !5765, line: 418, column: 6)
!6044 = !DILocation(line: 418, column: 17, scope: !6043)
!6045 = !DILocation(line: 418, column: 41, scope: !6043)
!6046 = !DILocation(line: 418, column: 6, scope: !6009)
!6047 = !DILocation(line: 423, column: 18, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6043, file: !5765, line: 423, column: 13)
!6049 = !DILocation(line: 524, column: 12, scope: !6009)
!6050 = !DILocation(line: 526, column: 15, scope: !6009)
!6051 = !DILocation(line: 528, column: 2, scope: !6009)
!6052 = distinct !DISubprogram(name: "usage_fault", scope: !5765, file: !5765, line: 539, type: !6053, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !6057)
!6053 = !DISubroutineType(types: !6054)
!6054 = !{!121, !6055}
!6055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6056, size: 32)
!6056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2548)
!6057 = !{!6058, !6059}
!6058 = !DILocalVariable(name: "esf", arg: 1, scope: !6052, file: !5765, line: 539, type: !6055)
!6059 = !DILocalVariable(name: "reason", scope: !6052, file: !5765, line: 541, type: !121)
!6060 = !DILocation(line: 0, scope: !6052)
!6061 = !DILocation(line: 546, column: 12, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6052, file: !5765, line: 546, column: 6)
!6063 = !DILocation(line: 549, column: 12, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6052, file: !5765, line: 549, column: 6)
!6065 = !DILocation(line: 567, column: 12, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6052, file: !5765, line: 567, column: 6)
!6067 = !DILocation(line: 570, column: 12, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6052, file: !5765, line: 570, column: 6)
!6069 = !DILocation(line: 573, column: 12, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6052, file: !5765, line: 573, column: 6)
!6071 = !DILocation(line: 576, column: 12, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6052, file: !5765, line: 576, column: 6)
!6073 = !DILocation(line: 581, column: 12, scope: !6052)
!6074 = !DILocation(line: 583, column: 2, scope: !6052)
!6075 = distinct !DISubprogram(name: "debug_monitor", scope: !5765, file: !5765, line: 632, type: !6076, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !6078)
!6076 = !DISubroutineType(types: !6077)
!6077 = !{null, !2547, !5832}
!6078 = !{!6079, !6080}
!6079 = !DILocalVariable(name: "esf", arg: 1, scope: !6075, file: !5765, line: 632, type: !2547)
!6080 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6075, file: !5765, line: 632, type: !5832)
!6081 = !DILocation(line: 0, scope: !6075)
!6082 = !DILocation(line: 634, column: 15, scope: !6075)
!6083 = !DILocation(line: 652, column: 1, scope: !6075)
!6084 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !5765, file: !5765, line: 658, type: !6085, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !6087)
!6085 = !DISubroutineType(types: !6086)
!6086 = !{!157, !2547}
!6087 = !{!6088, !6089, !6090}
!6088 = !DILocalVariable(name: "esf", arg: 1, scope: !6084, file: !5765, line: 658, type: !2547)
!6089 = !DILocalVariable(name: "ret_addr", scope: !6084, file: !5765, line: 660, type: !2590)
!6090 = !DILocalVariable(name: "fault_insn", scope: !6084, file: !5765, line: 686, type: !265)
!6091 = !DILocation(line: 0, scope: !6084)
!6092 = !DILocation(line: 660, column: 46, scope: !6084)
!6093 = !DILocation(line: 660, column: 23, scope: !6084)
!6094 = !DILocation(line: 682, column: 11, scope: !6084)
!6095 = !DILocation(line: 271, column: 3, scope: !6096, inlinedAt: !6097)
!6096 = distinct !DISubprogram(name: "__DSB", scope: !5464, file: !5464, line: 269, type: !2904, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !322)
!6097 = distinct !DILocation(line: 683, column: 2, scope: !6084)
!6098 = !{i64 2835609}
!6099 = !DILocation(line: 260, column: 3, scope: !6100, inlinedAt: !6101)
!6100 = distinct !DISubprogram(name: "__ISB", scope: !5464, file: !5464, line: 258, type: !2904, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !322)
!6101 = distinct !DILocation(line: 684, column: 2, scope: !6084)
!6102 = !{i64 2835326}
!6103 = !DILocation(line: 686, column: 35, scope: !6084)
!6104 = !DILocation(line: 686, column: 24, scope: !6084)
!6105 = !DILocation(line: 688, column: 11, scope: !6084)
!6106 = !DILocation(line: 271, column: 3, scope: !6096, inlinedAt: !6107)
!6107 = distinct !DILocation(line: 689, column: 2, scope: !6084)
!6108 = !DILocation(line: 260, column: 3, scope: !6100, inlinedAt: !6109)
!6109 = distinct !DILocation(line: 690, column: 2, scope: !6084)
!6110 = !DILocation(line: 693, column: 45, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6084, file: !5765, line: 693, column: 6)
!6112 = !DILocation(line: 699, column: 1, scope: !6084)
!6113 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !5765, file: !5765, line: 1107, type: !2904, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !322)
!6114 = !DILocation(line: 1111, column: 11, scope: !6113)
!6115 = !DILocation(line: 1136, column: 1, scope: !6113)
!6116 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6117, file: !6117, line: 26, type: !2904, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !6118)
!6117 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6118 = !{!6119}
!6119 = !DILocalVariable(name: "irq", scope: !6116, file: !6117, line: 28, type: !103)
!6120 = !DILocation(line: 0, scope: !6116)
!6121 = !DILocation(line: 30, column: 2, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6116, file: !6117, line: 30, column: 2)
!6123 = !DILocation(line: 31, column: 3, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6125, file: !6117, line: 30, column: 39)
!6125 = distinct !DILexicalBlock(scope: !6122, file: !6117, line: 30, column: 2)
!6126 = !DILocation(line: 30, column: 35, scope: !6125)
!6127 = !DILocation(line: 30, column: 13, scope: !6125)
!6128 = distinct !{!6128, !6121, !6129}
!6129 = !DILocation(line: 32, column: 2, scope: !6122)
!6130 = !DILocation(line: 33, column: 1, scope: !6116)
!6131 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !5498, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !6132)
!6132 = !{!6133, !6134}
!6133 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6131, file: !356, line: 1814, type: !592)
!6134 = !DILocalVariable(name: "priority", arg: 2, scope: !6131, file: !356, line: 1814, type: !121)
!6135 = !DILocation(line: 0, scope: !6131)
!6136 = !DILocation(line: 1816, column: 7, scope: !6131)
!6137 = !DILocation(line: 0, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6131, file: !356, line: 1816, column: 7)
!6139 = !DILocation(line: 1824, column: 1, scope: !6131)
!6140 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6141, file: !6141, line: 27, type: !6142, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2636, retainedNodes: !6245)
!6141 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6142 = !DISubroutineType(types: !6143)
!6143 = !{null, !6144}
!6144 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !6145)
!6145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6146, size: 32)
!6146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !6147)
!6147 = !{!6148, !6206, !6218, !6219, !6220, !6221, !6227, !6240}
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6146, file: !211, line: 247, baseType: !6149, size: 384)
!6149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !6150)
!6150 = !{!6151, !6175, !6182, !6183, !6184, !6193, !6194, !6195}
!6151 = !DIDerivedType(tag: DW_TAG_member, scope: !6149, file: !211, line: 60, baseType: !6152, size: 64)
!6152 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6149, file: !211, line: 60, size: 64, elements: !6153)
!6153 = !{!6154, !6169}
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6152, file: !211, line: 61, baseType: !6155, size: 64)
!6155 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !6156)
!6156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !6157)
!6157 = !{!6158, !6164}
!6158 = !DIDerivedType(tag: DW_TAG_member, scope: !6156, file: !221, line: 38, baseType: !6159, size: 32)
!6159 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6156, file: !221, line: 38, size: 32, elements: !6160)
!6160 = !{!6161, !6163}
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6159, file: !221, line: 39, baseType: !6162, size: 32)
!6162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6156, size: 32)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6159, file: !221, line: 40, baseType: !6162, size: 32)
!6164 = !DIDerivedType(tag: DW_TAG_member, scope: !6156, file: !221, line: 42, baseType: !6165, size: 32, offset: 32)
!6165 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6156, file: !221, line: 42, size: 32, elements: !6166)
!6166 = !{!6167, !6168}
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6165, file: !221, line: 43, baseType: !6162, size: 32)
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6165, file: !221, line: 44, baseType: !6162, size: 32)
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6152, file: !211, line: 62, baseType: !6170, size: 64)
!6170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !6171)
!6171 = !{!6172}
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6170, file: !237, line: 50, baseType: !6173, size: 64)
!6173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6174, size: 64, elements: !242)
!6174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6170, size: 32)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6149, file: !211, line: 68, baseType: !6176, size: 32, offset: 64)
!6176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6177, size: 32)
!6177 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !6178)
!6178 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !6179)
!6179 = !{!6180}
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6178, file: !247, line: 232, baseType: !6181, size: 64)
!6181 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !6156)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6149, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6149, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!6184 = !DIDerivedType(tag: DW_TAG_member, scope: !6149, file: !211, line: 90, baseType: !6185, size: 16, offset: 112)
!6185 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6149, file: !211, line: 90, size: 16, elements: !6186)
!6186 = !{!6187, !6192}
!6187 = !DIDerivedType(tag: DW_TAG_member, scope: !6185, file: !211, line: 91, baseType: !6188, size: 16)
!6188 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6185, file: !211, line: 91, size: 16, elements: !6189)
!6189 = !{!6190, !6191}
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6188, file: !211, line: 96, baseType: !261, size: 8)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6188, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6185, file: !211, line: 100, baseType: !265, size: 16)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6149, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6149, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6149, file: !211, line: 131, baseType: !6196, size: 192, offset: 192)
!6196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !6197)
!6197 = !{!6198, !6199, !6205}
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6196, file: !247, line: 245, baseType: !6155, size: 64)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6196, file: !247, line: 246, baseType: !6200, size: 32, offset: 64)
!6200 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !6201)
!6201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6202, size: 32)
!6202 = !DISubroutineType(types: !6203)
!6203 = !{null, !6204}
!6204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6196, size: 32)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6196, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6146, file: !211, line: 250, baseType: !6207, size: 288, offset: 384)
!6207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !6208)
!6208 = !{!6209, !6210, !6211, !6212, !6213, !6214, !6215, !6216, !6217}
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6207, file: !284, line: 26, baseType: !121, size: 32)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6207, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6207, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6207, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6207, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6207, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6207, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6207, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6207, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6146, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6146, file: !211, line: 256, baseType: !6177, size: 64, offset: 704)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6146, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6146, file: !211, line: 300, baseType: !6222, size: 96, offset: 800)
!6222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !6223)
!6223 = !{!6224, !6225, !6226}
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6222, file: !211, line: 153, baseType: !22, size: 32)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6222, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6222, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6146, file: !211, line: 325, baseType: !6228, size: 32, offset: 896)
!6228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6229, size: 32)
!6229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !6230)
!6230 = !{!6231, !6237, !6238}
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6229, file: !307, line: 5074, baseType: !6232, size: 96)
!6232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !6233)
!6233 = !{!6234, !6235, !6236}
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6232, file: !311, line: 57, baseType: !314, size: 32)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6232, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6232, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6229, file: !307, line: 5075, baseType: !6177, size: 64, offset: 96)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6229, file: !307, line: 5076, baseType: !6239, offset: 160)
!6239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6146, file: !211, line: 343, baseType: !6241, size: 64, offset: 928)
!6241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !6242)
!6242 = !{!6243, !6244}
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6241, file: !284, line: 63, baseType: !121, size: 32)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6241, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!6245 = !{!6246}
!6246 = !DILocalVariable(name: "thread", arg: 1, scope: !6140, file: !6141, line: 27, type: !6144)
!6247 = !DILocation(line: 0, scope: !6140)
!6248 = !DILocation(line: 29, column: 6, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6140, file: !6141, line: 29, column: 6)
!6250 = !DILocation(line: 29, column: 15, scope: !6249)
!6251 = !DILocation(line: 29, column: 6, scope: !6140)
!6252 = !DILocation(line: 1031, column: 3, scope: !6253, inlinedAt: !6256)
!6253 = distinct !DISubprogram(name: "__get_IPSR", scope: !5464, file: !5464, line: 1027, type: !5545, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2636, retainedNodes: !6254)
!6254 = !{!6255}
!6255 = !DILocalVariable(name: "result", scope: !6253, file: !5464, line: 1029, type: !121)
!6256 = distinct !DILocation(line: 48, column: 10, scope: !6257, inlinedAt: !6261)
!6257 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6258, file: !6258, line: 46, type: !6259, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2636, retainedNodes: !322)
!6258 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6259 = !DISubroutineType(types: !6260)
!6260 = !{!157}
!6261 = distinct !DILocation(line: 30, column: 7, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6263, file: !6141, line: 30, column: 7)
!6263 = distinct !DILexicalBlock(scope: !6249, file: !6141, line: 29, column: 26)
!6264 = !{i64 2824457}
!6265 = !DILocation(line: 0, scope: !6253, inlinedAt: !6256)
!6266 = !DILocation(line: 48, column: 9, scope: !6257, inlinedAt: !6261)
!6267 = !DILocation(line: 30, column: 7, scope: !6263)
!6268 = !DILocation(line: 42, column: 14, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6262, file: !6141, line: 30, column: 25)
!6270 = !DILocation(line: 48, column: 15, scope: !6269)
!6271 = !DILocation(line: 49, column: 3, scope: !6269)
!6272 = !DILocation(line: 52, column: 2, scope: !6140)
!6273 = !DILocation(line: 53, column: 1, scope: !6140)
!6274 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !206, file: !206, line: 127, type: !2904, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !322)
!6275 = !DILocation(line: 134, column: 2, scope: !6274)
!6276 = !DILocation(line: 156, column: 1, scope: !6274)
!6277 = !DILocation(line: 0, scope: !205)
!6278 = !DILocation(line: 289, column: 36, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !205, file: !206, line: 285, column: 2)
!6280 = !DILocation(line: 289, column: 42, scope: !6279)
!6281 = !DILocation(line: 300, column: 36, scope: !205)
!6282 = !DILocation(line: 301, column: 35, scope: !205)
!6283 = !DILocation(line: 302, column: 37, scope: !205)
!6284 = !DILocation(line: 311, column: 2, scope: !205)
!6285 = !DILocation(line: 316, column: 1, scope: !205)
!6286 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !384, file: !384, line: 180, type: !2904, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!6287 = !DILocation(line: 188, column: 12, scope: !6286)
!6288 = !DILocation(line: 271, column: 3, scope: !6289, inlinedAt: !6290)
!6289 = distinct !DISubprogram(name: "__DSB", scope: !5464, file: !5464, line: 269, type: !2904, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!6290 = distinct !DILocation(line: 192, column: 2, scope: !6286)
!6291 = !{i64 2984604}
!6292 = !DILocation(line: 260, column: 3, scope: !6293, inlinedAt: !6294)
!6293 = distinct !DISubprogram(name: "__ISB", scope: !5464, file: !5464, line: 258, type: !2904, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!6294 = distinct !DILocation(line: 193, column: 2, scope: !6286)
!6295 = !{i64 2984321}
!6296 = !DILocation(line: 194, column: 1, scope: !6286)
!6297 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !384, file: !384, line: 199, type: !2904, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!6298 = !DILocation(line: 282, column: 3, scope: !6299, inlinedAt: !6300)
!6299 = distinct !DISubprogram(name: "__DMB", scope: !5464, file: !5464, line: 280, type: !2904, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!6300 = distinct !DILocation(line: 202, column: 2, scope: !6297)
!6301 = !{i64 2984880}
!6302 = !DILocation(line: 205, column: 12, scope: !6297)
!6303 = !DILocation(line: 206, column: 1, scope: !6297)
!6304 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !384, file: !384, line: 275, type: !6305, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6318)
!6305 = !DISubroutineType(types: !6306)
!6306 = !{null, !6307, !1603, !5732, !5732}
!6307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6308, size: 32)
!6308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6309)
!6309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !335, line: 52, size: 96, elements: !6310)
!6310 = !{!6311, !6312, !6313}
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6309, file: !335, line: 53, baseType: !22, size: 32)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6309, file: !335, line: 54, baseType: !200, size: 32, offset: 32)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6309, file: !335, line: 55, baseType: !6314, size: 32, offset: 64)
!6314 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !341, line: 151, baseType: !6315)
!6315 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !341, line: 149, size: 32, elements: !6316)
!6316 = !{!6317}
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !6315, file: !341, line: 150, baseType: !121, size: 32)
!6318 = !{!6319, !6320, !6321, !6322}
!6319 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6304, file: !384, line: 276, type: !6307)
!6320 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6304, file: !384, line: 276, type: !1603)
!6321 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !6304, file: !384, line: 277, type: !5732)
!6322 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6304, file: !384, line: 277, type: !5732)
!6323 = !DILocation(line: 0, scope: !6304)
!6324 = !DILocation(line: 279, column: 6, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6304, file: !384, line: 279, column: 6)
!6326 = !DILocation(line: 285, column: 1, scope: !6304)
!6327 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !6328, file: !6328, line: 220, type: !6329, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6331)
!6328 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6329 = !DISubroutineType(types: !6330)
!6330 = !{!103, !6307, !1603, !5732, !5732}
!6331 = !{!6332, !6333, !6334, !6335, !6336}
!6332 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6327, file: !6328, line: 221, type: !6307)
!6333 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6327, file: !6328, line: 221, type: !1603)
!6334 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !6327, file: !6328, line: 222, type: !5732)
!6335 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6327, file: !6328, line: 223, type: !5732)
!6336 = !DILocalVariable(name: "mpu_reg_index", scope: !6327, file: !6328, line: 225, type: !103)
!6337 = !DILocation(line: 0, scope: !6327)
!6338 = !DILocation(line: 225, column: 22, scope: !6327)
!6339 = !DILocation(line: 233, column: 18, scope: !6327)
!6340 = !DILocation(line: 236, column: 23, scope: !6327)
!6341 = !DILocation(line: 236, column: 21, scope: !6327)
!6342 = !DILocation(line: 238, column: 2, scope: !6327)
!6343 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !384, file: !384, line: 105, type: !6344, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6346)
!6344 = !DISubroutineType(types: !6345)
!6345 = !{!103, !6307, !154, !154, !157}
!6346 = !{!6347, !6348, !6349, !6350, !6351, !6352}
!6347 = !DILocalVariable(name: "regions", arg: 1, scope: !6343, file: !384, line: 106, type: !6307)
!6348 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6343, file: !384, line: 106, type: !154)
!6349 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !6343, file: !384, line: 106, type: !154)
!6350 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !6343, file: !384, line: 107, type: !157)
!6351 = !DILocalVariable(name: "i", scope: !6343, file: !384, line: 109, type: !103)
!6352 = !DILocalVariable(name: "reg_index", scope: !6343, file: !384, line: 110, type: !103)
!6353 = !DILocation(line: 0, scope: !6343)
!6354 = !DILocation(line: 110, column: 18, scope: !6343)
!6355 = !DILocation(line: 112, column: 16, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6357, file: !384, line: 112, column: 2)
!6357 = distinct !DILexicalBlock(scope: !6343, file: !384, line: 112, column: 2)
!6358 = !DILocation(line: 112, column: 2, scope: !6357)
!6359 = !DILocation(line: 113, column: 7, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6361, file: !384, line: 113, column: 7)
!6361 = distinct !DILexicalBlock(scope: !6356, file: !384, line: 112, column: 36)
!6362 = !DILocation(line: 113, column: 18, scope: !6360)
!6363 = !DILocation(line: 113, column: 23, scope: !6360)
!6364 = !DILocation(line: 113, column: 7, scope: !6361)
!6365 = !DILocation(line: 118, column: 23, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6361, file: !384, line: 118, column: 7)
!6367 = !DILocation(line: 119, column: 7, scope: !6366)
!6368 = !DILocation(line: 118, column: 7, scope: !6361)
!6369 = !DILocation(line: 124, column: 36, scope: !6361)
!6370 = !DILocation(line: 124, column: 15, scope: !6361)
!6371 = !DILocation(line: 126, column: 17, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6361, file: !384, line: 126, column: 7)
!6373 = !DILocation(line: 126, column: 7, scope: !6361)
!6374 = !DILocation(line: 131, column: 12, scope: !6361)
!6375 = !DILocation(line: 132, column: 2, scope: !6361)
!6376 = !DILocation(line: 112, column: 32, scope: !6356)
!6377 = distinct !{!6377, !6358, !6378}
!6378 = !DILocation(line: 132, column: 2, scope: !6357)
!6379 = !DILocation(line: 135, column: 1, scope: !6343)
!6380 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !6328, file: !6328, line: 63, type: !6381, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6383)
!6381 = !DISubroutineType(types: !6382)
!6382 = !{!103, !6307}
!6383 = !{!6384, !6385}
!6384 = !DILocalVariable(name: "part", arg: 1, scope: !6380, file: !6328, line: 63, type: !6307)
!6385 = !DILocalVariable(name: "partition_is_valid", scope: !6380, file: !6328, line: 70, type: !103)
!6386 = !DILocation(line: 0, scope: !6380)
!6387 = !DILocation(line: 71, column: 11, scope: !6380)
!6388 = !DILocation(line: 71, column: 37, scope: !6380)
!6389 = !{i32 0, i32 33}
!6390 = !DILocation(line: 72, column: 3, scope: !6380)
!6391 = !DILocation(line: 71, column: 30, scope: !6380)
!6392 = !DILocation(line: 75, column: 11, scope: !6380)
!6393 = !DILocation(line: 75, column: 17, scope: !6380)
!6394 = !DILocation(line: 75, column: 38, scope: !6380)
!6395 = !DILocation(line: 77, column: 2, scope: !6380)
!6396 = distinct !DISubprogram(name: "mpu_configure_region", scope: !384, file: !384, line: 79, type: !6397, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6399)
!6397 = !DISubroutineType(types: !6398)
!6398 = !{!103, !1603, !6307}
!6399 = !{!6400, !6401, !6402}
!6400 = !DILocalVariable(name: "index", arg: 1, scope: !6396, file: !384, line: 79, type: !1603)
!6401 = !DILocalVariable(name: "new_region", arg: 2, scope: !6396, file: !384, line: 80, type: !6307)
!6402 = !DILocalVariable(name: "region_conf", scope: !6396, file: !384, line: 82, type: !373)
!6403 = !DILocation(line: 0, scope: !6396)
!6404 = !DILocation(line: 82, column: 2, scope: !6396)
!6405 = !DILocation(line: 82, column: 24, scope: !6396)
!6406 = !DILocation(line: 87, column: 33, scope: !6396)
!6407 = !DILocation(line: 87, column: 14, scope: !6396)
!6408 = !DILocation(line: 87, column: 19, scope: !6396)
!6409 = !DILocation(line: 91, column: 55, scope: !6396)
!6410 = !DILocation(line: 92, column: 16, scope: !6396)
!6411 = !DILocation(line: 92, column: 53, scope: !6396)
!6412 = !DILocation(line: 91, column: 2, scope: !6396)
!6413 = !DILocation(line: 95, column: 9, scope: !6396)
!6414 = !DILocation(line: 97, column: 1, scope: !6396)
!6415 = !DILocation(line: 95, column: 2, scope: !6396)
!6416 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !6328, file: !6328, line: 113, type: !6417, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6422)
!6417 = !DISubroutineType(types: !6418)
!6418 = !{null, !6419, !6420, !121, !121}
!6419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 32)
!6420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6421, size: 32)
!6421 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6314)
!6422 = !{!6423, !6424, !6425, !6426}
!6423 = !DILocalVariable(name: "p_attr", arg: 1, scope: !6416, file: !6328, line: 114, type: !6419)
!6424 = !DILocalVariable(name: "attr", arg: 2, scope: !6416, file: !6328, line: 115, type: !6420)
!6425 = !DILocalVariable(name: "base", arg: 3, scope: !6416, file: !6328, line: 115, type: !121)
!6426 = !DILocalVariable(name: "size", arg: 4, scope: !6416, file: !6328, line: 115, type: !121)
!6427 = !DILocation(line: 0, scope: !6416)
!6428 = !DILocation(line: 127, column: 23, scope: !6416)
!6429 = !DILocation(line: 127, column: 35, scope: !6416)
!6430 = !DILocation(line: 127, column: 33, scope: !6416)
!6431 = !DILocation(line: 127, column: 10, scope: !6416)
!6432 = !DILocation(line: 127, column: 15, scope: !6416)
!6433 = !DILocation(line: 129, column: 1, scope: !6416)
!6434 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !384, file: !384, line: 57, type: !6435, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6437)
!6435 = !DISubroutineType(types: !6436)
!6436 = !{!103, !1603, !371}
!6437 = !{!6438, !6439}
!6438 = !DILocalVariable(name: "index", arg: 1, scope: !6434, file: !384, line: 57, type: !1603)
!6439 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6434, file: !384, line: 58, type: !371)
!6440 = !DILocation(line: 0, scope: !6434)
!6441 = !DILocation(line: 61, column: 6, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6434, file: !384, line: 61, column: 6)
!6443 = !DILocation(line: 61, column: 12, scope: !6442)
!6444 = !DILocation(line: 61, column: 6, scope: !6434)
!6445 = !DILocation(line: 71, column: 2, scope: !6434)
!6446 = !DILocation(line: 73, column: 2, scope: !6434)
!6447 = !DILocation(line: 74, column: 1, scope: !6434)
!6448 = distinct !DISubprogram(name: "region_init", scope: !6328, file: !6328, line: 29, type: !6449, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6451)
!6449 = !DISubroutineType(types: !6450)
!6450 = !{null, !5732, !371}
!6451 = !{!6452, !6453}
!6452 = !DILocalVariable(name: "index", arg: 1, scope: !6448, file: !6328, line: 29, type: !5732)
!6453 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6448, file: !6328, line: 30, type: !371)
!6454 = !DILocation(line: 0, scope: !6448)
!6455 = !DILocation(line: 33, column: 2, scope: !6448)
!6456 = !DILocation(line: 47, column: 28, scope: !6448)
!6457 = !DILocation(line: 47, column: 33, scope: !6448)
!6458 = !DILocation(line: 48, column: 26, scope: !6448)
!6459 = !DILocation(line: 47, column: 12, scope: !6448)
!6460 = !DILocation(line: 49, column: 32, scope: !6448)
!6461 = !DILocation(line: 49, column: 37, scope: !6448)
!6462 = !DILocation(line: 49, column: 12, scope: !6448)
!6463 = !DILocation(line: 53, column: 1, scope: !6448)
!6464 = distinct !DISubprogram(name: "set_region_number", scope: !6465, file: !6465, line: 32, type: !5555, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6466)
!6465 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6466 = !{!6467}
!6467 = !DILocalVariable(name: "index", arg: 1, scope: !6464, file: !6465, line: 32, type: !121)
!6468 = !DILocation(line: 0, scope: !6464)
!6469 = !DILocation(line: 34, column: 11, scope: !6464)
!6470 = !DILocation(line: 35, column: 1, scope: !6464)
!6471 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !6328, file: !6328, line: 88, type: !6472, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6474)
!6472 = !DISubroutineType(types: !6473)
!6473 = !{!121, !121}
!6474 = !{!6475}
!6475 = !DILocalVariable(name: "size", arg: 1, scope: !6471, file: !6328, line: 88, type: !121)
!6476 = !DILocation(line: 0, scope: !6471)
!6477 = !DILocation(line: 91, column: 11, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6471, file: !6328, line: 91, column: 6)
!6479 = !DILocation(line: 91, column: 6, scope: !6471)
!6480 = !DILocation(line: 100, column: 11, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6471, file: !6328, line: 100, column: 6)
!6482 = !DILocation(line: 100, column: 6, scope: !6471)
!6483 = !DILocation(line: 104, column: 35, scope: !6471)
!6484 = !DILocation(line: 104, column: 16, scope: !6471)
!6485 = !DILocation(line: 104, column: 50, scope: !6471)
!6486 = !DILocation(line: 104, column: 72, scope: !6471)
!6487 = !DILocation(line: 104, column: 2, scope: !6471)
!6488 = !DILocation(line: 106, column: 1, scope: !6471)
!6489 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !384, file: !384, line: 307, type: !6490, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6492)
!6490 = !DISubroutineType(types: !6491)
!6491 = !{null, !6307, !154}
!6492 = !{!6493, !6494}
!6493 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6489, file: !384, line: 308, type: !6307)
!6494 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6489, file: !384, line: 308, type: !154)
!6495 = !DILocation(line: 0, scope: !6489)
!6496 = !DILocation(line: 310, column: 6, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6489, file: !384, line: 310, column: 6)
!6498 = !DILocation(line: 316, column: 1, scope: !6489)
!6499 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !6328, file: !6328, line: 249, type: !6500, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6502)
!6500 = !DISubroutineType(types: !6501)
!6501 = !{!103, !6307, !154}
!6502 = !{!6503, !6504, !6505, !6506}
!6503 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6499, file: !6328, line: 250, type: !6307)
!6504 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6499, file: !6328, line: 250, type: !154)
!6505 = !DILocalVariable(name: "mpu_reg_index", scope: !6499, file: !6328, line: 252, type: !103)
!6506 = !DILocalVariable(name: "i", scope: !6507, file: !6328, line: 264, type: !103)
!6507 = distinct !DILexicalBlock(scope: !6508, file: !6328, line: 264, column: 3)
!6508 = distinct !DILexicalBlock(scope: !6509, file: !6328, line: 261, column: 32)
!6509 = distinct !DILexicalBlock(scope: !6499, file: !6328, line: 261, column: 6)
!6510 = !DILocation(line: 0, scope: !6499)
!6511 = !DILocation(line: 252, column: 22, scope: !6499)
!6512 = !DILocation(line: 258, column: 18, scope: !6499)
!6513 = !DILocation(line: 261, column: 20, scope: !6509)
!6514 = !DILocation(line: 261, column: 6, scope: !6499)
!6515 = !DILocation(line: 0, scope: !6507)
!6516 = !DILocation(line: 265, column: 4, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6518, file: !6328, line: 264, column: 59)
!6518 = distinct !DILexicalBlock(scope: !6507, file: !6328, line: 264, column: 3)
!6519 = !DILocation(line: 264, column: 55, scope: !6518)
!6520 = !DILocation(line: 264, column: 33, scope: !6518)
!6521 = !DILocation(line: 264, column: 3, scope: !6507)
!6522 = distinct !{!6522, !6521, !6523}
!6523 = !DILocation(line: 266, column: 3, scope: !6507)
!6524 = !DILocation(line: 269, column: 2, scope: !6499)
!6525 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !6526, file: !6526, line: 218, type: !5555, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6527)
!6526 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6527 = !{!6528}
!6528 = !DILocalVariable(name: "rnr", arg: 1, scope: !6525, file: !6526, line: 218, type: !121)
!6529 = !DILocation(line: 0, scope: !6525)
!6530 = !DILocation(line: 220, column: 12, scope: !6525)
!6531 = !DILocation(line: 221, column: 13, scope: !6525)
!6532 = !DILocation(line: 222, column: 1, scope: !6525)
!6533 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !384, file: !384, line: 326, type: !6534, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6536)
!6534 = !DISubroutineType(types: !6535)
!6535 = !{!103}
!6536 = !{!6537}
!6537 = !DILocalVariable(name: "r_index", scope: !6533, file: !384, line: 328, type: !121)
!6538 = !DILocation(line: 330, column: 17, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6533, file: !384, line: 330, column: 6)
!6540 = !DILocation(line: 330, column: 29, scope: !6539)
!6541 = !DILocation(line: 330, column: 6, scope: !6533)
!6542 = !DILocation(line: 347, column: 2, scope: !6533)
!6543 = !DILocation(line: 0, scope: !6533)
!6544 = !DILocation(line: 364, column: 29, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6546, file: !384, line: 364, column: 2)
!6546 = distinct !DILexicalBlock(scope: !6533, file: !384, line: 364, column: 2)
!6547 = !DILocation(line: 364, column: 2, scope: !6546)
!6548 = !DILocation(line: 365, column: 25, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6545, file: !384, line: 364, column: 66)
!6550 = !DILocation(line: 365, column: 3, scope: !6549)
!6551 = !DILocation(line: 364, column: 62, scope: !6545)
!6552 = distinct !{!6552, !6547, !6553}
!6553 = !DILocation(line: 366, column: 2, scope: !6546)
!6554 = !DILocation(line: 369, column: 23, scope: !6533)
!6555 = !DILocation(line: 369, column: 21, scope: !6533)
!6556 = !DILocation(line: 372, column: 2, scope: !6533)
!6557 = !DILocation(line: 443, column: 2, scope: !6533)
!6558 = !DILocation(line: 444, column: 1, scope: !6533)
!6559 = distinct !DISubprogram(name: "strcpy", scope: !6560, file: !6560, line: 20, type: !6561, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !6565)
!6560 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6561 = !DISubroutineType(types: !6562)
!6562 = !{!957, !6563, !6564}
!6563 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !957)
!6564 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !144)
!6565 = !{!6566, !6567, !6568}
!6566 = !DILocalVariable(name: "d", arg: 1, scope: !6559, file: !6560, line: 20, type: !6563)
!6567 = !DILocalVariable(name: "s", arg: 2, scope: !6559, file: !6560, line: 20, type: !6564)
!6568 = !DILocalVariable(name: "dest", scope: !6559, file: !6560, line: 22, type: !957)
!6569 = !DILocation(line: 0, scope: !6559)
!6570 = !DILocation(line: 24, column: 9, scope: !6559)
!6571 = !DILocation(line: 24, column: 12, scope: !6559)
!6572 = !DILocation(line: 24, column: 2, scope: !6559)
!6573 = !DILocation(line: 25, column: 6, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6559, file: !6560, line: 24, column: 21)
!6575 = !DILocation(line: 26, column: 4, scope: !6574)
!6576 = !DILocation(line: 27, column: 4, scope: !6574)
!6577 = distinct !{!6577, !6572, !6578}
!6578 = !DILocation(line: 28, column: 2, scope: !6559)
!6579 = !DILocation(line: 30, column: 5, scope: !6559)
!6580 = !DILocation(line: 32, column: 2, scope: !6559)
!6581 = distinct !DISubprogram(name: "strncpy", scope: !6560, file: !6560, line: 42, type: !6582, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !6584)
!6582 = !DISubroutineType(types: !6583)
!6583 = !{!957, !6563, !6564, !200}
!6584 = !{!6585, !6586, !6587, !6588}
!6585 = !DILocalVariable(name: "d", arg: 1, scope: !6581, file: !6560, line: 42, type: !6563)
!6586 = !DILocalVariable(name: "s", arg: 2, scope: !6581, file: !6560, line: 42, type: !6564)
!6587 = !DILocalVariable(name: "n", arg: 3, scope: !6581, file: !6560, line: 42, type: !200)
!6588 = !DILocalVariable(name: "dest", scope: !6581, file: !6560, line: 44, type: !957)
!6589 = !DILocation(line: 0, scope: !6581)
!6590 = !DILocation(line: 46, column: 12, scope: !6581)
!6591 = !DILocation(line: 46, column: 17, scope: !6581)
!6592 = !DILocation(line: 46, column: 20, scope: !6581)
!6593 = !DILocation(line: 46, column: 23, scope: !6581)
!6594 = !DILocation(line: 46, column: 2, scope: !6581)
!6595 = !DILocation(line: 47, column: 6, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6581, file: !6560, line: 46, column: 32)
!6597 = !DILocation(line: 48, column: 4, scope: !6596)
!6598 = !DILocation(line: 49, column: 4, scope: !6596)
!6599 = !DILocation(line: 50, column: 4, scope: !6596)
!6600 = distinct !{!6600, !6594, !6601}
!6601 = !DILocation(line: 51, column: 2, scope: !6581)
!6602 = !DILocation(line: 54, column: 6, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6581, file: !6560, line: 53, column: 16)
!6604 = !DILocation(line: 55, column: 4, scope: !6603)
!6605 = !DILocation(line: 56, column: 4, scope: !6603)
!6606 = !DILocation(line: 53, column: 11, scope: !6581)
!6607 = !DILocation(line: 53, column: 2, scope: !6581)
!6608 = distinct !{!6608, !6607, !6609}
!6609 = !DILocation(line: 57, column: 2, scope: !6581)
!6610 = !DILocation(line: 59, column: 2, scope: !6581)
!6611 = distinct !DISubprogram(name: "strchr", scope: !6560, file: !6560, line: 69, type: !6612, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !6614)
!6612 = !DISubroutineType(types: !6613)
!6613 = !{!957, !144, !103}
!6614 = !{!6615, !6616, !6617}
!6615 = !DILocalVariable(name: "s", arg: 1, scope: !6611, file: !6560, line: 69, type: !144)
!6616 = !DILocalVariable(name: "c", arg: 2, scope: !6611, file: !6560, line: 69, type: !103)
!6617 = !DILocalVariable(name: "tmp", scope: !6611, file: !6560, line: 71, type: !146)
!6618 = !DILocation(line: 0, scope: !6611)
!6619 = !DILocation(line: 73, column: 2, scope: !6611)
!6620 = !DILocation(line: 73, column: 10, scope: !6611)
!6621 = !DILocation(line: 73, column: 13, scope: !6611)
!6622 = !DILocation(line: 73, column: 21, scope: !6611)
!6623 = !DILocation(line: 74, column: 4, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6611, file: !6560, line: 73, column: 38)
!6625 = distinct !{!6625, !6619, !6626}
!6626 = !DILocation(line: 75, column: 2, scope: !6611)
!6627 = !DILocation(line: 77, column: 9, scope: !6611)
!6628 = !DILocation(line: 77, column: 2, scope: !6611)
!6629 = distinct !DISubprogram(name: "strrchr", scope: !6560, file: !6560, line: 87, type: !6612, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !6630)
!6630 = !{!6631, !6632, !6633}
!6631 = !DILocalVariable(name: "s", arg: 1, scope: !6629, file: !6560, line: 87, type: !144)
!6632 = !DILocalVariable(name: "c", arg: 2, scope: !6629, file: !6560, line: 87, type: !103)
!6633 = !DILocalVariable(name: "match", scope: !6629, file: !6560, line: 89, type: !957)
!6634 = !DILocation(line: 0, scope: !6629)
!6635 = !DILocation(line: 91, column: 2, scope: !6629)
!6636 = !DILocation(line: 92, column: 7, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6638, file: !6560, line: 92, column: 7)
!6638 = distinct !DILexicalBlock(scope: !6629, file: !6560, line: 91, column: 5)
!6639 = !DILocation(line: 92, column: 10, scope: !6637)
!6640 = !DILocation(line: 92, column: 7, scope: !6638)
!6641 = !DILocation(line: 95, column: 13, scope: !6629)
!6642 = !DILocation(line: 95, column: 2, scope: !6638)
!6643 = distinct !{!6643, !6635, !6644}
!6644 = !DILocation(line: 95, column: 15, scope: !6629)
!6645 = !DILocation(line: 97, column: 2, scope: !6629)
!6646 = distinct !DISubprogram(name: "strlen", scope: !6560, file: !6560, line: 107, type: !6647, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !6649)
!6647 = !DISubroutineType(types: !6648)
!6648 = !{!200, !144}
!6649 = !{!6650, !6651}
!6650 = !DILocalVariable(name: "s", arg: 1, scope: !6646, file: !6560, line: 107, type: !144)
!6651 = !DILocalVariable(name: "n", scope: !6646, file: !6560, line: 109, type: !200)
!6652 = !DILocation(line: 0, scope: !6646)
!6653 = !DILocation(line: 111, column: 9, scope: !6646)
!6654 = !DILocation(line: 111, column: 12, scope: !6646)
!6655 = !DILocation(line: 111, column: 2, scope: !6646)
!6656 = !DILocation(line: 112, column: 4, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6646, file: !6560, line: 111, column: 21)
!6658 = !DILocation(line: 113, column: 4, scope: !6657)
!6659 = distinct !{!6659, !6655, !6660}
!6660 = !DILocation(line: 114, column: 2, scope: !6646)
!6661 = !DILocation(line: 116, column: 2, scope: !6646)
!6662 = distinct !DISubprogram(name: "strnlen", scope: !6560, file: !6560, line: 126, type: !6663, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !6665)
!6663 = !DISubroutineType(types: !6664)
!6664 = !{!200, !144, !200}
!6665 = !{!6666, !6667, !6668}
!6666 = !DILocalVariable(name: "s", arg: 1, scope: !6662, file: !6560, line: 126, type: !144)
!6667 = !DILocalVariable(name: "maxlen", arg: 2, scope: !6662, file: !6560, line: 126, type: !200)
!6668 = !DILocalVariable(name: "n", scope: !6662, file: !6560, line: 128, type: !200)
!6669 = !DILocation(line: 0, scope: !6662)
!6670 = !DILocation(line: 130, column: 9, scope: !6662)
!6671 = !DILocation(line: 130, column: 12, scope: !6662)
!6672 = !DILocation(line: 130, column: 20, scope: !6662)
!6673 = !DILocation(line: 130, column: 2, scope: !6662)
!6674 = !DILocation(line: 131, column: 4, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6662, file: !6560, line: 130, column: 35)
!6676 = !DILocation(line: 132, column: 4, scope: !6675)
!6677 = distinct !{!6677, !6673, !6678}
!6678 = !DILocation(line: 133, column: 2, scope: !6662)
!6679 = !DILocation(line: 135, column: 2, scope: !6662)
!6680 = distinct !DISubprogram(name: "strcmp", scope: !6560, file: !6560, line: 145, type: !6681, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !6683)
!6681 = !DISubroutineType(types: !6682)
!6682 = !{!103, !144, !144}
!6683 = !{!6684, !6685}
!6684 = !DILocalVariable(name: "s1", arg: 1, scope: !6680, file: !6560, line: 145, type: !144)
!6685 = !DILocalVariable(name: "s2", arg: 2, scope: !6680, file: !6560, line: 145, type: !144)
!6686 = !DILocation(line: 0, scope: !6680)
!6687 = !DILocation(line: 147, column: 10, scope: !6680)
!6688 = !DILocation(line: 147, column: 17, scope: !6680)
!6689 = !DILocation(line: 147, column: 14, scope: !6680)
!6690 = !DILocation(line: 147, column: 22, scope: !6680)
!6691 = !DILocation(line: 148, column: 5, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6680, file: !6560, line: 147, column: 40)
!6693 = !DILocation(line: 149, column: 5, scope: !6692)
!6694 = distinct !{!6694, !6695, !6696}
!6695 = !DILocation(line: 147, column: 2, scope: !6680)
!6696 = !DILocation(line: 150, column: 2, scope: !6680)
!6697 = !DILocation(line: 152, column: 9, scope: !6680)
!6698 = !DILocation(line: 152, column: 15, scope: !6680)
!6699 = !DILocation(line: 152, column: 13, scope: !6680)
!6700 = !DILocation(line: 152, column: 2, scope: !6680)
!6701 = distinct !DISubprogram(name: "strncmp", scope: !6560, file: !6560, line: 162, type: !6702, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !6704)
!6702 = !DISubroutineType(types: !6703)
!6703 = !{!103, !144, !144, !200}
!6704 = !{!6705, !6706, !6707}
!6705 = !DILocalVariable(name: "s1", arg: 1, scope: !6701, file: !6560, line: 162, type: !144)
!6706 = !DILocalVariable(name: "s2", arg: 2, scope: !6701, file: !6560, line: 162, type: !144)
!6707 = !DILocalVariable(name: "n", arg: 3, scope: !6701, file: !6560, line: 162, type: !200)
!6708 = !DILocation(line: 0, scope: !6701)
!6709 = !DILocation(line: 164, column: 17, scope: !6701)
!6710 = !DILocation(line: 164, column: 21, scope: !6701)
!6711 = !DILocation(line: 164, column: 28, scope: !6701)
!6712 = !DILocation(line: 164, column: 25, scope: !6701)
!6713 = !DILocation(line: 164, column: 33, scope: !6701)
!6714 = !DILocation(line: 165, column: 5, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6701, file: !6560, line: 164, column: 51)
!6716 = !DILocation(line: 166, column: 5, scope: !6715)
!6717 = !DILocation(line: 167, column: 4, scope: !6715)
!6718 = distinct !{!6718, !6719, !6720}
!6719 = !DILocation(line: 164, column: 2, scope: !6701)
!6720 = !DILocation(line: 168, column: 2, scope: !6701)
!6721 = !DILocation(line: 170, column: 25, scope: !6701)
!6722 = !DILocation(line: 170, column: 31, scope: !6701)
!6723 = !DILocation(line: 170, column: 29, scope: !6701)
!6724 = !DILocation(line: 170, column: 9, scope: !6701)
!6725 = !DILocation(line: 170, column: 2, scope: !6701)
!6726 = distinct !DISubprogram(name: "strtok_r", scope: !6560, file: !6560, line: 180, type: !6727, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !6730)
!6727 = !DISubroutineType(types: !6728)
!6728 = !{!957, !957, !144, !6729}
!6729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 32)
!6730 = !{!6731, !6732, !6733, !6734, !6735}
!6731 = !DILocalVariable(name: "str", arg: 1, scope: !6726, file: !6560, line: 180, type: !957)
!6732 = !DILocalVariable(name: "sep", arg: 2, scope: !6726, file: !6560, line: 180, type: !144)
!6733 = !DILocalVariable(name: "state", arg: 3, scope: !6726, file: !6560, line: 180, type: !6729)
!6734 = !DILocalVariable(name: "start", scope: !6726, file: !6560, line: 182, type: !957)
!6735 = !DILocalVariable(name: "end", scope: !6726, file: !6560, line: 182, type: !957)
!6736 = !DILocation(line: 0, scope: !6726)
!6737 = !DILocation(line: 184, column: 10, scope: !6726)
!6738 = !DILocation(line: 184, column: 22, scope: !6726)
!6739 = !DILocation(line: 187, column: 9, scope: !6726)
!6740 = !DILocation(line: 187, column: 16, scope: !6726)
!6741 = !DILocation(line: 187, column: 19, scope: !6726)
!6742 = !DILocation(line: 187, column: 2, scope: !6726)
!6743 = !DILocation(line: 188, column: 8, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6726, file: !6560, line: 187, column: 40)
!6745 = distinct !{!6745, !6742, !6746}
!6746 = !DILocation(line: 189, column: 2, scope: !6726)
!6747 = !DILocation(line: 198, column: 9, scope: !6726)
!6748 = !DILocation(line: 198, column: 18, scope: !6726)
!6749 = !DILocation(line: 198, column: 17, scope: !6726)
!6750 = !DILocation(line: 198, column: 2, scope: !6726)
!6751 = !DILocation(line: 199, column: 6, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6726, file: !6560, line: 198, column: 37)
!6753 = !DILocation(line: 198, column: 14, scope: !6726)
!6754 = distinct !{!6754, !6750, !6755}
!6755 = !DILocation(line: 200, column: 2, scope: !6726)
!6756 = !DILocation(line: 203, column: 8, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6758, file: !6560, line: 202, column: 20)
!6758 = distinct !DILexicalBlock(scope: !6726, file: !6560, line: 202, column: 6)
!6759 = !DILocation(line: 204, column: 16, scope: !6757)
!6760 = !DILocation(line: 205, column: 2, scope: !6757)
!6761 = !DILocation(line: 210, column: 1, scope: !6726)
!6762 = distinct !DISubprogram(name: "strcat", scope: !6560, file: !6560, line: 212, type: !6561, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !6763)
!6763 = !{!6764, !6765}
!6764 = !DILocalVariable(name: "dest", arg: 1, scope: !6762, file: !6560, line: 212, type: !6563)
!6765 = !DILocalVariable(name: "src", arg: 2, scope: !6762, file: !6560, line: 212, type: !6564)
!6766 = !DILocation(line: 0, scope: !6762)
!6767 = !DILocation(line: 214, column: 16, scope: !6762)
!6768 = !DILocation(line: 214, column: 14, scope: !6762)
!6769 = !DILocation(line: 214, column: 2, scope: !6762)
!6770 = !DILocation(line: 215, column: 2, scope: !6762)
!6771 = distinct !DISubprogram(name: "strncat", scope: !6560, file: !6560, line: 218, type: !6582, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !6772)
!6772 = !{!6773, !6774, !6775, !6776, !6777}
!6773 = !DILocalVariable(name: "dest", arg: 1, scope: !6771, file: !6560, line: 218, type: !6563)
!6774 = !DILocalVariable(name: "src", arg: 2, scope: !6771, file: !6560, line: 218, type: !6564)
!6775 = !DILocalVariable(name: "n", arg: 3, scope: !6771, file: !6560, line: 219, type: !200)
!6776 = !DILocalVariable(name: "orig_dest", scope: !6771, file: !6560, line: 221, type: !957)
!6777 = !DILocalVariable(name: "len", scope: !6771, file: !6560, line: 222, type: !200)
!6778 = !DILocation(line: 0, scope: !6771)
!6779 = !DILocation(line: 222, column: 15, scope: !6771)
!6780 = !DILocation(line: 224, column: 7, scope: !6771)
!6781 = !DILocation(line: 225, column: 14, scope: !6771)
!6782 = !DILocation(line: 225, column: 19, scope: !6771)
!6783 = !DILocation(line: 225, column: 11, scope: !6771)
!6784 = !DILocation(line: 225, column: 23, scope: !6771)
!6785 = !DILocation(line: 225, column: 28, scope: !6771)
!6786 = !DILocation(line: 225, column: 2, scope: !6771)
!6787 = !DILocation(line: 226, column: 17, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6771, file: !6560, line: 225, column: 38)
!6789 = !DILocation(line: 226, column: 8, scope: !6788)
!6790 = !DILocation(line: 226, column: 11, scope: !6788)
!6791 = distinct !{!6791, !6786, !6792}
!6792 = !DILocation(line: 227, column: 2, scope: !6771)
!6793 = !DILocation(line: 228, column: 8, scope: !6771)
!6794 = !DILocation(line: 230, column: 2, scope: !6771)
!6795 = distinct !DISubprogram(name: "memcmp", scope: !6560, file: !6560, line: 239, type: !6796, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !6798)
!6796 = !DISubroutineType(types: !6797)
!6797 = !{!103, !13, !13, !200}
!6798 = !{!6799, !6800, !6801, !6802, !6803}
!6799 = !DILocalVariable(name: "m1", arg: 1, scope: !6795, file: !6560, line: 239, type: !13)
!6800 = !DILocalVariable(name: "m2", arg: 2, scope: !6795, file: !6560, line: 239, type: !13)
!6801 = !DILocalVariable(name: "n", arg: 3, scope: !6795, file: !6560, line: 239, type: !200)
!6802 = !DILocalVariable(name: "c1", scope: !6795, file: !6560, line: 241, type: !144)
!6803 = !DILocalVariable(name: "c2", scope: !6795, file: !6560, line: 242, type: !144)
!6804 = !DILocation(line: 0, scope: !6795)
!6805 = !DILocation(line: 244, column: 7, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6795, file: !6560, line: 244, column: 6)
!6807 = !DILocation(line: 244, column: 6, scope: !6795)
!6808 = !DILocation(line: 248, column: 10, scope: !6795)
!6809 = !DILocation(line: 248, column: 14, scope: !6795)
!6810 = !DILocation(line: 248, column: 19, scope: !6795)
!6811 = !DILocation(line: 248, column: 2, scope: !6795)
!6812 = !DILocation(line: 248, column: 23, scope: !6795)
!6813 = !DILocation(line: 248, column: 30, scope: !6795)
!6814 = !DILocation(line: 248, column: 27, scope: !6795)
!6815 = !DILocation(line: 249, column: 5, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6795, file: !6560, line: 248, column: 36)
!6817 = !DILocation(line: 250, column: 5, scope: !6816)
!6818 = distinct !{!6818, !6811, !6819}
!6819 = !DILocation(line: 251, column: 2, scope: !6795)
!6820 = !DILocation(line: 253, column: 9, scope: !6795)
!6821 = !DILocation(line: 253, column: 15, scope: !6795)
!6822 = !DILocation(line: 253, column: 13, scope: !6795)
!6823 = !DILocation(line: 253, column: 2, scope: !6795)
!6824 = !DILocation(line: 254, column: 1, scope: !6795)
!6825 = distinct !DISubprogram(name: "memmove", scope: !6560, file: !6560, line: 263, type: !6826, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !6828)
!6826 = !DISubroutineType(types: !6827)
!6827 = !{!102, !102, !13, !200}
!6828 = !{!6829, !6830, !6831, !6832, !6833}
!6829 = !DILocalVariable(name: "d", arg: 1, scope: !6825, file: !6560, line: 263, type: !102)
!6830 = !DILocalVariable(name: "s", arg: 2, scope: !6825, file: !6560, line: 263, type: !13)
!6831 = !DILocalVariable(name: "n", arg: 3, scope: !6825, file: !6560, line: 263, type: !200)
!6832 = !DILocalVariable(name: "dest", scope: !6825, file: !6560, line: 265, type: !957)
!6833 = !DILocalVariable(name: "src", scope: !6825, file: !6560, line: 266, type: !144)
!6834 = !DILocation(line: 0, scope: !6825)
!6835 = !DILocation(line: 268, column: 21, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6825, file: !6560, line: 268, column: 6)
!6837 = !DILocation(line: 268, column: 28, scope: !6836)
!6838 = !DILocation(line: 268, column: 6, scope: !6825)
!6839 = !DILocation(line: 280, column: 12, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6836, file: !6560, line: 278, column: 9)
!6841 = !DILocation(line: 280, column: 3, scope: !6840)
!6842 = !DILocation(line: 275, column: 5, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6844, file: !6560, line: 274, column: 17)
!6844 = distinct !DILexicalBlock(scope: !6836, file: !6560, line: 268, column: 33)
!6845 = !DILocation(line: 276, column: 14, scope: !6843)
!6846 = !DILocation(line: 276, column: 4, scope: !6843)
!6847 = !DILocation(line: 276, column: 12, scope: !6843)
!6848 = !DILocation(line: 274, column: 12, scope: !6844)
!6849 = !DILocation(line: 274, column: 3, scope: !6844)
!6850 = distinct !{!6850, !6849, !6851}
!6851 = !DILocation(line: 277, column: 3, scope: !6844)
!6852 = !DILocation(line: 281, column: 12, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6840, file: !6560, line: 280, column: 17)
!6854 = !DILocation(line: 281, column: 10, scope: !6853)
!6855 = !DILocation(line: 282, column: 8, scope: !6853)
!6856 = !DILocation(line: 283, column: 7, scope: !6853)
!6857 = !DILocation(line: 284, column: 5, scope: !6853)
!6858 = distinct !{!6858, !6841, !6859}
!6859 = !DILocation(line: 285, column: 3, scope: !6840)
!6860 = !DILocation(line: 288, column: 2, scope: !6825)
!6861 = distinct !DISubprogram(name: "memcpy", scope: !6560, file: !6560, line: 298, type: !6862, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !6866)
!6862 = !DISubroutineType(types: !6863)
!6863 = !{!102, !6864, !6865, !200}
!6864 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!6865 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!6866 = !{!6867, !6868, !6869, !6870, !6871}
!6867 = !DILocalVariable(name: "d", arg: 1, scope: !6861, file: !6560, line: 298, type: !6864)
!6868 = !DILocalVariable(name: "s", arg: 2, scope: !6861, file: !6560, line: 298, type: !6865)
!6869 = !DILocalVariable(name: "n", arg: 3, scope: !6861, file: !6560, line: 298, type: !200)
!6870 = !DILocalVariable(name: "d_byte", scope: !6861, file: !6560, line: 302, type: !792)
!6871 = !DILocalVariable(name: "s_byte", scope: !6861, file: !6560, line: 303, type: !2667)
!6872 = !DILocation(line: 0, scope: !6861)
!6873 = !DILocation(line: 337, column: 11, scope: !6861)
!6874 = !DILocation(line: 337, column: 2, scope: !6861)
!6875 = !DILocation(line: 338, column: 25, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6861, file: !6560, line: 337, column: 16)
!6877 = !DILocation(line: 338, column: 17, scope: !6876)
!6878 = !DILocation(line: 338, column: 11, scope: !6876)
!6879 = !DILocation(line: 338, column: 15, scope: !6876)
!6880 = !DILocation(line: 339, column: 4, scope: !6876)
!6881 = distinct !{!6881, !6874, !6882}
!6882 = !DILocation(line: 340, column: 2, scope: !6861)
!6883 = !DILocation(line: 342, column: 2, scope: !6861)
!6884 = distinct !DISubprogram(name: "memset", scope: !6560, file: !6560, line: 352, type: !6885, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !6887)
!6885 = !DISubroutineType(types: !6886)
!6886 = !{!102, !102, !103, !200}
!6887 = !{!6888, !6889, !6890, !6891, !6892}
!6888 = !DILocalVariable(name: "buf", arg: 1, scope: !6884, file: !6560, line: 352, type: !102)
!6889 = !DILocalVariable(name: "c", arg: 2, scope: !6884, file: !6560, line: 352, type: !103)
!6890 = !DILocalVariable(name: "n", arg: 3, scope: !6884, file: !6560, line: 352, type: !200)
!6891 = !DILocalVariable(name: "d_byte", scope: !6884, file: !6560, line: 356, type: !792)
!6892 = !DILocalVariable(name: "c_byte", scope: !6884, file: !6560, line: 357, type: !155)
!6893 = !DILocation(line: 0, scope: !6884)
!6894 = !DILocation(line: 357, column: 25, scope: !6884)
!6895 = !DILocation(line: 389, column: 11, scope: !6884)
!6896 = !DILocation(line: 389, column: 2, scope: !6884)
!6897 = !DILocation(line: 390, column: 11, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6884, file: !6560, line: 389, column: 16)
!6899 = !DILocation(line: 390, column: 15, scope: !6898)
!6900 = !DILocation(line: 391, column: 4, scope: !6898)
!6901 = distinct !{!6901, !6896, !6902}
!6902 = !DILocation(line: 392, column: 2, scope: !6884)
!6903 = !DILocation(line: 394, column: 2, scope: !6884)
!6904 = distinct !DISubprogram(name: "memchr", scope: !6560, file: !6560, line: 404, type: !6905, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2664, retainedNodes: !6907)
!6905 = !DISubroutineType(types: !6906)
!6906 = !{!102, !13, !103, !200}
!6907 = !{!6908, !6909, !6910, !6911}
!6908 = !DILocalVariable(name: "s", arg: 1, scope: !6904, file: !6560, line: 404, type: !13)
!6909 = !DILocalVariable(name: "c", arg: 2, scope: !6904, file: !6560, line: 404, type: !103)
!6910 = !DILocalVariable(name: "n", arg: 3, scope: !6904, file: !6560, line: 404, type: !200)
!6911 = !DILocalVariable(name: "p", scope: !6912, file: !6560, line: 407, type: !2667)
!6912 = distinct !DILexicalBlock(scope: !6913, file: !6560, line: 406, column: 14)
!6913 = distinct !DILexicalBlock(scope: !6904, file: !6560, line: 406, column: 6)
!6914 = !DILocation(line: 0, scope: !6904)
!6915 = !DILocation(line: 406, column: 8, scope: !6913)
!6916 = !DILocation(line: 406, column: 6, scope: !6904)
!6917 = !DILocation(line: 409, column: 3, scope: !6912)
!6918 = !DILocation(line: 0, scope: !6912)
!6919 = !DILocation(line: 410, column: 8, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6921, file: !6560, line: 410, column: 8)
!6921 = distinct !DILexicalBlock(scope: !6912, file: !6560, line: 409, column: 6)
!6922 = !DILocation(line: 410, column: 13, scope: !6920)
!6923 = !DILocation(line: 410, column: 8, scope: !6921)
!6924 = distinct !{!6924, !6917, !6925}
!6925 = !DILocation(line: 414, column: 20, scope: !6912)
!6926 = !DILocation(line: 417, column: 2, scope: !6904)
!6927 = !DILocation(line: 418, column: 1, scope: !6904)
!6928 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !394, file: !394, line: 23, type: !3145, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6929)
!6929 = !{!6930}
!6930 = !DILocalVariable(name: "hook", arg: 1, scope: !6928, file: !394, line: 23, type: !106)
!6931 = !DILocation(line: 0, scope: !6928)
!6932 = !DILocation(line: 25, column: 15, scope: !6928)
!6933 = !DILocation(line: 26, column: 1, scope: !6928)
!6934 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !394, file: !394, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6935)
!6935 = !{!6936}
!6936 = !DILocalVariable(name: "c", arg: 1, scope: !6934, file: !394, line: 14, type: !103)
!6937 = !DILocation(line: 0, scope: !6934)
!6938 = !DILocation(line: 18, column: 2, scope: !6934)
!6939 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !394, file: !394, line: 28, type: !6940, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6942)
!6940 = !DISubroutineType(types: !6941)
!6941 = !{!103, !103, !390}
!6942 = !{!6943, !6944}
!6943 = !DILocalVariable(name: "c", arg: 1, scope: !6939, file: !394, line: 28, type: !103)
!6944 = !DILocalVariable(name: "stream", arg: 2, scope: !6939, file: !394, line: 28, type: !390)
!6945 = !DILocation(line: 0, scope: !6939)
!6946 = !DILocation(line: 30, column: 27, scope: !6939)
!6947 = !DILocation(line: 30, column: 50, scope: !6939)
!6948 = !DILocation(line: 30, column: 9, scope: !6939)
!6949 = !DILocation(line: 30, column: 2, scope: !6939)
!6950 = distinct !DISubprogram(name: "fputc", scope: !394, file: !394, line: 41, type: !6940, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6951)
!6951 = !{!6952, !6953}
!6952 = !DILocalVariable(name: "c", arg: 1, scope: !6950, file: !394, line: 41, type: !103)
!6953 = !DILocalVariable(name: "stream", arg: 2, scope: !6950, file: !394, line: 41, type: !390)
!6954 = !DILocation(line: 0, scope: !6950)
!6955 = !DILocation(line: 43, column: 9, scope: !6950)
!6956 = !DILocation(line: 43, column: 2, scope: !6950)
!6957 = distinct !DISubprogram(name: "zephyr_fputc", scope: !6958, file: !6958, line: 72, type: !6940, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6959)
!6958 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!6959 = !{!6960, !6961}
!6960 = !DILocalVariable(name: "c", arg: 1, scope: !6957, file: !6958, line: 72, type: !103)
!6961 = !DILocalVariable(name: "stream", arg: 2, scope: !6957, file: !6958, line: 72, type: !390)
!6962 = !DILocation(line: 0, scope: !6957)
!6963 = !DILocation(line: 81, column: 2, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6957, file: !6958, line: 81, column: 2)
!6965 = !{i64 2154126746}
!6966 = !DILocation(line: 82, column: 9, scope: !6957)
!6967 = !DILocation(line: 82, column: 2, scope: !6957)
!6968 = distinct !DISubprogram(name: "fputs", scope: !394, file: !394, line: 46, type: !6969, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6972)
!6969 = !DISubroutineType(types: !6970)
!6970 = !{!103, !6564, !6971}
!6971 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !390)
!6972 = !{!6973, !6974, !6975, !6976}
!6973 = !DILocalVariable(name: "s", arg: 1, scope: !6968, file: !394, line: 46, type: !6564)
!6974 = !DILocalVariable(name: "stream", arg: 2, scope: !6968, file: !394, line: 46, type: !6971)
!6975 = !DILocalVariable(name: "len", scope: !6968, file: !394, line: 48, type: !103)
!6976 = !DILocalVariable(name: "ret", scope: !6968, file: !394, line: 49, type: !103)
!6977 = !DILocation(line: 0, scope: !6968)
!6978 = !DILocation(line: 48, column: 12, scope: !6968)
!6979 = !DILocation(line: 51, column: 8, scope: !6968)
!6980 = !DILocation(line: 53, column: 13, scope: !6968)
!6981 = !DILocation(line: 53, column: 9, scope: !6968)
!6982 = !DILocation(line: 53, column: 2, scope: !6968)
!6983 = distinct !DISubprogram(name: "fwrite", scope: !394, file: !394, line: 99, type: !6984, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6986)
!6984 = !DISubroutineType(types: !6985)
!6985 = !{!200, !6865, !200, !200, !6971}
!6986 = !{!6987, !6988, !6989, !6990}
!6987 = !DILocalVariable(name: "ptr", arg: 1, scope: !6983, file: !394, line: 99, type: !6865)
!6988 = !DILocalVariable(name: "size", arg: 2, scope: !6983, file: !394, line: 99, type: !200)
!6989 = !DILocalVariable(name: "nitems", arg: 3, scope: !6983, file: !394, line: 99, type: !200)
!6990 = !DILocalVariable(name: "stream", arg: 4, scope: !6983, file: !394, line: 100, type: !6971)
!6991 = !DILocation(line: 0, scope: !6983)
!6992 = !DILocation(line: 102, column: 9, scope: !6983)
!6993 = !DILocation(line: 102, column: 2, scope: !6983)
!6994 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !6958, file: !6958, line: 96, type: !6984, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6995)
!6995 = !{!6996, !6997, !6998, !6999}
!6996 = !DILocalVariable(name: "ptr", arg: 1, scope: !6994, file: !6958, line: 96, type: !6865)
!6997 = !DILocalVariable(name: "size", arg: 2, scope: !6994, file: !6958, line: 96, type: !200)
!6998 = !DILocalVariable(name: "nitems", arg: 3, scope: !6994, file: !6958, line: 96, type: !200)
!6999 = !DILocalVariable(name: "stream", arg: 4, scope: !6994, file: !6958, line: 96, type: !6971)
!7000 = !DILocation(line: 0, scope: !6994)
!7001 = !DILocation(line: 107, column: 2, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6994, file: !6958, line: 107, column: 2)
!7003 = !{i64 2154126850}
!7004 = !DILocation(line: 108, column: 9, scope: !6994)
!7005 = !DILocation(line: 108, column: 2, scope: !6994)
!7006 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !394, file: !394, line: 56, type: !6984, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !7007)
!7007 = !{!7008, !7009, !7010, !7011, !7012, !7013, !7014, !7015}
!7008 = !DILocalVariable(name: "ptr", arg: 1, scope: !7006, file: !394, line: 56, type: !6865)
!7009 = !DILocalVariable(name: "size", arg: 2, scope: !7006, file: !394, line: 56, type: !200)
!7010 = !DILocalVariable(name: "nitems", arg: 3, scope: !7006, file: !394, line: 57, type: !200)
!7011 = !DILocalVariable(name: "stream", arg: 4, scope: !7006, file: !394, line: 57, type: !6971)
!7012 = !DILocalVariable(name: "i", scope: !7006, file: !394, line: 59, type: !200)
!7013 = !DILocalVariable(name: "j", scope: !7006, file: !394, line: 60, type: !200)
!7014 = !DILocalVariable(name: "p", scope: !7006, file: !394, line: 61, type: !2667)
!7015 = !DILabel(scope: !7006, name: "done", file: !394, line: 82)
!7016 = !DILocation(line: 0, scope: !7006)
!7017 = !DILocation(line: 63, column: 14, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !7006, file: !394, line: 63, column: 6)
!7019 = !DILocation(line: 63, column: 24, scope: !7018)
!7020 = !DILocation(line: 72, column: 3, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !7006, file: !394, line: 70, column: 5)
!7022 = !DILocation(line: 0, scope: !7021)
!7023 = !DILocation(line: 73, column: 8, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7025, file: !394, line: 73, column: 8)
!7025 = distinct !DILexicalBlock(scope: !7021, file: !394, line: 72, column: 6)
!7026 = !DILocation(line: 73, column: 29, scope: !7024)
!7027 = !DILocation(line: 73, column: 27, scope: !7024)
!7028 = !DILocation(line: 73, column: 21, scope: !7024)
!7029 = !DILocation(line: 73, column: 33, scope: !7024)
!7030 = !DILocation(line: 73, column: 8, scope: !7025)
!7031 = !DILocation(line: 76, column: 5, scope: !7025)
!7032 = !DILocation(line: 77, column: 14, scope: !7021)
!7033 = !DILocation(line: 77, column: 3, scope: !7025)
!7034 = distinct !{!7034, !7020, !7035}
!7035 = !DILocation(line: 77, column: 17, scope: !7021)
!7036 = !DILocation(line: 79, column: 4, scope: !7021)
!7037 = !DILocation(line: 80, column: 13, scope: !7006)
!7038 = !DILocation(line: 80, column: 2, scope: !7021)
!7039 = distinct !{!7039, !7040, !7041}
!7040 = !DILocation(line: 70, column: 2, scope: !7006)
!7041 = !DILocation(line: 80, column: 16, scope: !7006)
!7042 = !DILocation(line: 82, column: 1, scope: !7006)
!7043 = !DILocation(line: 83, column: 17, scope: !7006)
!7044 = !DILocation(line: 83, column: 2, scope: !7006)
!7045 = !DILocation(line: 84, column: 1, scope: !7006)
!7046 = distinct !DISubprogram(name: "puts", scope: !394, file: !394, line: 106, type: !7047, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !7049)
!7047 = !DISubroutineType(types: !7048)
!7048 = !{!103, !144}
!7049 = !{!7050}
!7050 = !DILocalVariable(name: "s", arg: 1, scope: !7046, file: !394, line: 106, type: !144)
!7051 = !DILocation(line: 0, scope: !7046)
!7052 = !DILocation(line: 108, column: 6, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7046, file: !394, line: 108, column: 6)
!7054 = !DILocation(line: 108, column: 23, scope: !7053)
!7055 = !DILocation(line: 108, column: 6, scope: !7046)
!7056 = !DILocation(line: 112, column: 9, scope: !7046)
!7057 = !DILocation(line: 112, column: 29, scope: !7046)
!7058 = !DILocation(line: 112, column: 2, scope: !7046)
!7059 = !DILocation(line: 113, column: 1, scope: !7046)
!7060 = distinct !DISubprogram(name: "fprintf", scope: !7061, file: !7061, line: 15, type: !7062, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !7064)
!7061 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/fprintf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7062 = !DISubroutineType(types: !7063)
!7063 = !{!103, !6971, !6564, null}
!7064 = !{!7065, !7066, !7067, !7074}
!7065 = !DILocalVariable(name: "stream", arg: 1, scope: !7060, file: !7061, line: 15, type: !6971)
!7066 = !DILocalVariable(name: "format", arg: 2, scope: !7060, file: !7061, line: 15, type: !6564)
!7067 = !DILocalVariable(name: "vargs", scope: !7060, file: !7061, line: 17, type: !7068)
!7068 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3161, line: 99, baseType: !7069)
!7069 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3161, line: 40, baseType: !7070)
!7070 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7061, baseType: !7071)
!7071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7072)
!7072 = !{!7073}
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7071, file: !7061, line: 17, baseType: !102, size: 32)
!7074 = !DILocalVariable(name: "r", scope: !7060, file: !7061, line: 18, type: !103)
!7075 = !DILocation(line: 0, scope: !7060)
!7076 = !DILocation(line: 17, column: 2, scope: !7060)
!7077 = !DILocation(line: 17, column: 10, scope: !7060)
!7078 = !DILocation(line: 20, column: 2, scope: !7060)
!7079 = !DILocation(line: 21, column: 23, scope: !7060)
!7080 = !DILocation(line: 21, column: 6, scope: !7060)
!7081 = !DILocation(line: 22, column: 2, scope: !7060)
!7082 = !DILocation(line: 25, column: 1, scope: !7060)
!7083 = !DILocation(line: 24, column: 2, scope: !7060)
!7084 = distinct !DISubprogram(name: "cbvprintf", scope: !3194, file: !3194, line: 739, type: !7085, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !7087)
!7085 = !DISubroutineType(types: !7086)
!7086 = !{!103, !3197, !102, !144, !7068}
!7087 = !{!7088, !7089, !7090, !7091}
!7088 = !DILocalVariable(name: "out", arg: 1, scope: !7084, file: !3194, line: 739, type: !3197)
!7089 = !DILocalVariable(name: "ctx", arg: 2, scope: !7084, file: !3194, line: 739, type: !102)
!7090 = !DILocalVariable(name: "format", arg: 3, scope: !7084, file: !3194, line: 739, type: !144)
!7091 = !DILocalVariable(name: "ap", arg: 4, scope: !7084, file: !3194, line: 739, type: !7068)
!7092 = !DILocation(line: 0, scope: !7084)
!7093 = !DILocation(line: 741, column: 9, scope: !7084)
!7094 = !DILocation(line: 741, column: 2, scope: !7084)
!7095 = distinct !DISubprogram(name: "vfprintf", scope: !7061, file: !7061, line: 27, type: !7096, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !7098)
!7096 = !DISubroutineType(types: !7097)
!7097 = !{!103, !6971, !6564, !7068}
!7098 = !{!7099, !7100, !7101, !7102}
!7099 = !DILocalVariable(name: "stream", arg: 1, scope: !7095, file: !7061, line: 27, type: !6971)
!7100 = !DILocalVariable(name: "format", arg: 2, scope: !7095, file: !7061, line: 27, type: !6564)
!7101 = !DILocalVariable(name: "vargs", arg: 3, scope: !7095, file: !7061, line: 28, type: !7068)
!7102 = !DILocalVariable(name: "r", scope: !7095, file: !7061, line: 30, type: !103)
!7103 = !DILocation(line: 0, scope: !7095)
!7104 = !DILocation(line: 32, column: 23, scope: !7095)
!7105 = !DILocation(line: 32, column: 6, scope: !7095)
!7106 = !DILocation(line: 34, column: 2, scope: !7095)
!7107 = distinct !DISubprogram(name: "printf", scope: !7061, file: !7061, line: 37, type: !7108, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !7110)
!7108 = !DISubroutineType(types: !7109)
!7109 = !{!103, !6564, null}
!7110 = !{!7111, !7112, !7113}
!7111 = !DILocalVariable(name: "format", arg: 1, scope: !7107, file: !7061, line: 37, type: !6564)
!7112 = !DILocalVariable(name: "vargs", scope: !7107, file: !7061, line: 39, type: !7068)
!7113 = !DILocalVariable(name: "r", scope: !7107, file: !7061, line: 40, type: !103)
!7114 = !DILocation(line: 0, scope: !7107)
!7115 = !DILocation(line: 39, column: 2, scope: !7107)
!7116 = !DILocation(line: 39, column: 10, scope: !7107)
!7117 = !DILocation(line: 42, column: 2, scope: !7107)
!7118 = !DILocation(line: 43, column: 6, scope: !7107)
!7119 = !DILocation(line: 44, column: 2, scope: !7107)
!7120 = !DILocation(line: 47, column: 1, scope: !7107)
!7121 = !DILocation(line: 46, column: 2, scope: !7107)
!7122 = distinct !DISubprogram(name: "vprintf", scope: !7061, file: !7061, line: 49, type: !7123, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !7125)
!7123 = !DISubroutineType(types: !7124)
!7124 = !{!103, !6564, !7068}
!7125 = !{!7126, !7127, !7128}
!7126 = !DILocalVariable(name: "format", arg: 1, scope: !7122, file: !7061, line: 49, type: !6564)
!7127 = !DILocalVariable(name: "vargs", arg: 2, scope: !7122, file: !7061, line: 49, type: !7068)
!7128 = !DILocalVariable(name: "r", scope: !7122, file: !7061, line: 51, type: !103)
!7129 = !DILocation(line: 0, scope: !7122)
!7130 = !DILocation(line: 53, column: 6, scope: !7122)
!7131 = !DILocation(line: 55, column: 2, scope: !7122)
!7132 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !506, file: !506, line: 368, type: !559, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7133)
!7133 = !{!7134}
!7134 = !DILocalVariable(name: "dev", arg: 1, scope: !7132, file: !506, line: 368, type: !535)
!7135 = !DILocation(line: 0, scope: !7132)
!7136 = !DILocation(line: 370, column: 2, scope: !7132)
!7137 = !DILocation(line: 371, column: 1, scope: !7132)
!7138 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !506, file: !506, line: 243, type: !7139, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7141)
!7139 = !DISubroutineType(types: !7140)
!7140 = !{null, !103, !103, !535}
!7141 = !{!7142, !7143, !7144, !7145, !7147}
!7142 = !DILocalVariable(name: "min", arg: 1, scope: !7138, file: !506, line: 243, type: !103)
!7143 = !DILocalVariable(name: "max", arg: 2, scope: !7138, file: !506, line: 243, type: !103)
!7144 = !DILocalVariable(name: "dev", arg: 3, scope: !7138, file: !506, line: 243, type: !535)
!7145 = !DILocalVariable(name: "data", scope: !7138, file: !506, line: 245, type: !7146)
!7146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 32)
!7147 = !DILocalVariable(name: "line", scope: !7138, file: !506, line: 246, type: !103)
!7148 = !DILocation(line: 0, scope: !7138)
!7149 = !DILocation(line: 245, column: 38, scope: !7138)
!7150 = !DILocation(line: 249, column: 24, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7152, file: !506, line: 249, column: 2)
!7152 = distinct !DILexicalBlock(scope: !7138, file: !506, line: 249, column: 2)
!7153 = !DILocation(line: 249, column: 2, scope: !7152)
!7154 = !DILocation(line: 251, column: 7, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7156, file: !506, line: 251, column: 7)
!7156 = distinct !DILexicalBlock(scope: !7151, file: !506, line: 249, column: 39)
!7157 = !DILocation(line: 251, column: 7, scope: !7156)
!7158 = !DILocation(line: 253, column: 4, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7155, file: !506, line: 251, column: 36)
!7160 = !DILocation(line: 256, column: 24, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7159, file: !506, line: 256, column: 8)
!7162 = !DILocation(line: 256, column: 9, scope: !7161)
!7163 = !DILocation(line: 256, column: 8, scope: !7159)
!7164 = !DILocation(line: 260, column: 43, scope: !7159)
!7165 = !DILocation(line: 260, column: 4, scope: !7159)
!7166 = !DILocation(line: 261, column: 3, scope: !7159)
!7167 = !DILocation(line: 249, column: 35, scope: !7151)
!7168 = distinct !{!7168, !7153, !7169}
!7169 = !DILocation(line: 262, column: 2, scope: !7152)
!7170 = !DILocation(line: 263, column: 1, scope: !7138)
!7171 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !506, file: !506, line: 158, type: !107, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7172)
!7172 = !{!7173}
!7173 = !DILocalVariable(name: "line", arg: 1, scope: !7171, file: !506, line: 158, type: !103)
!7174 = !DILocation(line: 0, scope: !7171)
!7175 = !DILocation(line: 170, column: 38, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7177, file: !506, line: 160, column: 17)
!7177 = distinct !DILexicalBlock(scope: !7171, file: !506, line: 160, column: 6)
!7178 = !DILocation(line: 170, column: 10, scope: !7176)
!7179 = !DILocation(line: 176, column: 1, scope: !7171)
!7180 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !506, file: !506, line: 183, type: !7181, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7183)
!7181 = !DISubroutineType(types: !7182)
!7182 = !{null, !103}
!7183 = !{!7184}
!7184 = !DILocalVariable(name: "line", arg: 1, scope: !7180, file: !506, line: 183, type: !103)
!7185 = !DILocation(line: 0, scope: !7180)
!7186 = !DILocation(line: 195, column: 28, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7188, file: !506, line: 185, column: 17)
!7188 = distinct !DILexicalBlock(scope: !7180, file: !506, line: 185, column: 6)
!7189 = !DILocation(line: 195, column: 3, scope: !7187)
!7190 = !DILocation(line: 200, column: 1, scope: !7180)
!7191 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7192, file: !7192, line: 910, type: !5555, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7193)
!7192 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7193 = !{!7194}
!7194 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7191, file: !7192, line: 910, type: !121)
!7195 = !DILocation(line: 0, scope: !7191)
!7196 = !DILocation(line: 912, column: 3, scope: !7191)
!7197 = !DILocation(line: 913, column: 1, scope: !7191)
!7198 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7192, file: !7192, line: 834, type: !6472, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7199)
!7199 = !{!7200}
!7200 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7198, file: !7192, line: 834, type: !121)
!7201 = !DILocation(line: 0, scope: !7198)
!7202 = !DILocation(line: 836, column: 11, scope: !7198)
!7203 = !DILocation(line: 836, column: 40, scope: !7198)
!7204 = !DILocation(line: 836, column: 3, scope: !7198)
!7205 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !506, file: !506, line: 304, type: !559, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7206)
!7206 = !{!7207}
!7207 = !DILocalVariable(name: "dev", arg: 1, scope: !7205, file: !506, line: 304, type: !535)
!7208 = !DILocation(line: 0, scope: !7205)
!7209 = !DILocation(line: 306, column: 2, scope: !7205)
!7210 = !DILocation(line: 307, column: 1, scope: !7205)
!7211 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !506, file: !506, line: 299, type: !559, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7212)
!7212 = !{!7213}
!7213 = !DILocalVariable(name: "dev", arg: 1, scope: !7211, file: !506, line: 299, type: !535)
!7214 = !DILocation(line: 0, scope: !7211)
!7215 = !DILocation(line: 301, column: 2, scope: !7211)
!7216 = !DILocation(line: 302, column: 1, scope: !7211)
!7217 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !506, file: !506, line: 294, type: !559, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7218)
!7218 = !{!7219}
!7219 = !DILocalVariable(name: "dev", arg: 1, scope: !7217, file: !506, line: 294, type: !535)
!7220 = !DILocation(line: 0, scope: !7217)
!7221 = !DILocation(line: 296, column: 2, scope: !7217)
!7222 = !DILocation(line: 297, column: 1, scope: !7217)
!7223 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !506, file: !506, line: 397, type: !559, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7224)
!7224 = !{!7225}
!7225 = !DILocalVariable(name: "dev", arg: 1, scope: !7223, file: !506, line: 397, type: !535)
!7226 = !DILocation(line: 0, scope: !7223)
!7227 = !DILocation(line: 399, column: 2, scope: !7223)
!7228 = !DILocation(line: 400, column: 1, scope: !7223)
!7229 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !506, file: !506, line: 392, type: !559, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7230)
!7230 = !{!7231}
!7231 = !DILocalVariable(name: "dev", arg: 1, scope: !7229, file: !506, line: 392, type: !535)
!7232 = !DILocation(line: 0, scope: !7229)
!7233 = !DILocation(line: 394, column: 2, scope: !7229)
!7234 = !DILocation(line: 395, column: 1, scope: !7229)
!7235 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !506, file: !506, line: 289, type: !559, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7236)
!7236 = !{!7237}
!7237 = !DILocalVariable(name: "dev", arg: 1, scope: !7235, file: !506, line: 289, type: !535)
!7238 = !DILocation(line: 0, scope: !7235)
!7239 = !DILocation(line: 291, column: 2, scope: !7235)
!7240 = !DILocation(line: 292, column: 1, scope: !7235)
!7241 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !506, file: !506, line: 387, type: !559, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7242)
!7242 = !{!7243}
!7243 = !DILocalVariable(name: "dev", arg: 1, scope: !7241, file: !506, line: 387, type: !535)
!7244 = !DILocation(line: 0, scope: !7241)
!7245 = !DILocation(line: 389, column: 2, scope: !7241)
!7246 = !DILocation(line: 390, column: 1, scope: !7241)
!7247 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !506, file: !506, line: 382, type: !559, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7248)
!7248 = !{!7249}
!7249 = !DILocalVariable(name: "dev", arg: 1, scope: !7247, file: !506, line: 382, type: !535)
!7250 = !DILocation(line: 0, scope: !7247)
!7251 = !DILocation(line: 384, column: 2, scope: !7247)
!7252 = !DILocation(line: 385, column: 1, scope: !7247)
!7253 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !506, file: !506, line: 373, type: !559, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7254)
!7254 = !{!7255}
!7255 = !DILocalVariable(name: "dev", arg: 1, scope: !7253, file: !506, line: 373, type: !535)
!7256 = !DILocation(line: 0, scope: !7253)
!7257 = !DILocation(line: 375, column: 2, scope: !7253)
!7258 = !DILocation(line: 376, column: 1, scope: !7253)
!7259 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !506, file: !506, line: 284, type: !559, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7260)
!7260 = !{!7261}
!7261 = !DILocalVariable(name: "dev", arg: 1, scope: !7259, file: !506, line: 284, type: !535)
!7262 = !DILocation(line: 0, scope: !7259)
!7263 = !DILocation(line: 286, column: 2, scope: !7259)
!7264 = !DILocation(line: 287, column: 1, scope: !7259)
!7265 = distinct !DISubprogram(name: "stm32_exti_init", scope: !506, file: !506, line: 416, type: !533, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7266)
!7266 = !{!7267}
!7267 = !DILocalVariable(name: "dev", arg: 1, scope: !7265, file: !506, line: 416, type: !535)
!7268 = !DILocation(line: 0, scope: !7265)
!7269 = !DILocation(line: 418, column: 2, scope: !7265)
!7270 = !DILocation(line: 420, column: 2, scope: !7265)
!7271 = !DILocation(line: 0, scope: !558)
!7272 = !DILocation(line: 493, column: 2, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !558, file: !506, line: 493, column: 2)
!7274 = !DILocation(line: 497, column: 2, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !558, file: !506, line: 497, column: 2)
!7276 = !DILocation(line: 507, column: 2, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !558, file: !506, line: 507, column: 2)
!7278 = !DILocation(line: 512, column: 2, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !558, file: !506, line: 512, column: 2)
!7280 = !DILocation(line: 516, column: 2, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !558, file: !506, line: 516, column: 2)
!7282 = !DILocation(line: 523, column: 2, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !558, file: !506, line: 523, column: 2)
!7284 = !DILocation(line: 527, column: 2, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !558, file: !506, line: 527, column: 2)
!7286 = !DILocation(line: 581, column: 2, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !558, file: !506, line: 581, column: 2)
!7288 = !DILocation(line: 586, column: 2, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !558, file: !506, line: 586, column: 2)
!7290 = !DILocation(line: 591, column: 2, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !558, file: !506, line: 591, column: 2)
!7292 = !DILocation(line: 595, column: 2, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !558, file: !506, line: 595, column: 2)
!7294 = !DILocation(line: 607, column: 1, scope: !558)
!7295 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !506, file: !506, line: 112, type: !7181, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7296)
!7296 = !{!7297, !7298}
!7297 = !DILocalVariable(name: "line", arg: 1, scope: !7295, file: !506, line: 112, type: !103)
!7298 = !DILocalVariable(name: "irqnum", scope: !7295, file: !506, line: 114, type: !103)
!7299 = !DILocation(line: 0, scope: !7295)
!7300 = !DILocation(line: 121, column: 11, scope: !7295)
!7301 = !DILocation(line: 130, column: 26, scope: !7295)
!7302 = !DILocation(line: 130, column: 2, scope: !7295)
!7303 = !DILocation(line: 134, column: 2, scope: !7295)
!7304 = !DILocation(line: 135, column: 1, scope: !7295)
!7305 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7192, file: !7192, line: 268, type: !5555, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7306)
!7306 = !{!7307}
!7307 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7305, file: !7192, line: 268, type: !121)
!7308 = !DILocation(line: 0, scope: !7305)
!7309 = !DILocation(line: 270, column: 3, scope: !7305)
!7310 = !DILocation(line: 271, column: 1, scope: !7305)
!7311 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !506, file: !506, line: 137, type: !7181, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7312)
!7312 = !{!7313}
!7313 = !DILocalVariable(name: "line", arg: 1, scope: !7311, file: !506, line: 137, type: !103)
!7314 = !DILocation(line: 0, scope: !7311)
!7315 = !DILocation(line: 141, column: 11, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7311, file: !506, line: 141, column: 6)
!7317 = !DILocation(line: 141, column: 6, scope: !7311)
!7318 = !DILocation(line: 145, column: 28, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7316, file: !506, line: 141, column: 17)
!7320 = !DILocation(line: 145, column: 3, scope: !7319)
!7321 = !DILocation(line: 147, column: 2, scope: !7319)
!7322 = !DILocation(line: 151, column: 1, scope: !7311)
!7323 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7192, file: !7192, line: 309, type: !5555, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7324)
!7324 = !{!7325}
!7325 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7323, file: !7192, line: 309, type: !121)
!7326 = !DILocation(line: 0, scope: !7323)
!7327 = !DILocation(line: 311, column: 3, scope: !7323)
!7328 = !DILocation(line: 312, column: 1, scope: !7323)
!7329 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !506, file: !506, line: 202, type: !7330, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7332)
!7330 = !DISubroutineType(types: !7331)
!7331 = !{null, !103, !103}
!7332 = !{!7333, !7334}
!7333 = !DILocalVariable(name: "line", arg: 1, scope: !7329, file: !506, line: 202, type: !103)
!7334 = !DILocalVariable(name: "trigger", arg: 2, scope: !7329, file: !506, line: 202, type: !103)
!7335 = !DILocation(line: 0, scope: !7329)
!7336 = !DILocation(line: 211, column: 2, scope: !7329)
!7337 = !DILocation(line: 213, column: 36, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7329, file: !506, line: 211, column: 19)
!7339 = !DILocation(line: 213, column: 3, scope: !7338)
!7340 = !DILocation(line: 214, column: 3, scope: !7338)
!7341 = !DILocation(line: 215, column: 3, scope: !7338)
!7342 = !DILocation(line: 217, column: 35, scope: !7338)
!7343 = !DILocation(line: 217, column: 3, scope: !7338)
!7344 = !DILocation(line: 218, column: 3, scope: !7338)
!7345 = !DILocation(line: 219, column: 3, scope: !7338)
!7346 = !DILocation(line: 221, column: 36, scope: !7338)
!7347 = !DILocation(line: 221, column: 3, scope: !7338)
!7348 = !DILocation(line: 222, column: 3, scope: !7338)
!7349 = !DILocation(line: 223, column: 3, scope: !7338)
!7350 = !DILocation(line: 225, column: 35, scope: !7338)
!7351 = !DILocation(line: 225, column: 3, scope: !7338)
!7352 = !DILocation(line: 226, column: 3, scope: !7338)
!7353 = !DILocation(line: 227, column: 3, scope: !7338)
!7354 = !DILocation(line: 232, column: 1, scope: !7329)
!7355 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7192, file: !7192, line: 573, type: !5555, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7356)
!7356 = !{!7357}
!7357 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7355, file: !7192, line: 573, type: !121)
!7358 = !DILocation(line: 0, scope: !7355)
!7359 = !DILocation(line: 575, column: 3, scope: !7355)
!7360 = !DILocation(line: 577, column: 1, scope: !7355)
!7361 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7192, file: !7192, line: 703, type: !5555, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7362)
!7362 = !{!7363}
!7363 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7361, file: !7192, line: 703, type: !121)
!7364 = !DILocation(line: 0, scope: !7361)
!7365 = !DILocation(line: 705, column: 3, scope: !7361)
!7366 = !DILocation(line: 706, column: 1, scope: !7361)
!7367 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7192, file: !7192, line: 529, type: !5555, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7368)
!7368 = !{!7369}
!7369 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7367, file: !7192, line: 529, type: !121)
!7370 = !DILocation(line: 0, scope: !7367)
!7371 = !DILocation(line: 531, column: 3, scope: !7367)
!7372 = !DILocation(line: 533, column: 1, scope: !7367)
!7373 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7192, file: !7192, line: 661, type: !5555, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7374)
!7374 = !{!7375}
!7375 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7373, file: !7192, line: 661, type: !121)
!7376 = !DILocation(line: 0, scope: !7373)
!7377 = !DILocation(line: 663, column: 3, scope: !7373)
!7378 = !DILocation(line: 664, column: 1, scope: !7373)
!7379 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !506, file: !506, line: 433, type: !7380, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7382)
!7380 = !DISubroutineType(types: !7381)
!7381 = !{!103, !103, !546, !102}
!7382 = !{!7383, !7384, !7385, !7386, !7388}
!7383 = !DILocalVariable(name: "line", arg: 1, scope: !7379, file: !506, line: 433, type: !103)
!7384 = !DILocalVariable(name: "cb", arg: 2, scope: !7379, file: !506, line: 433, type: !546)
!7385 = !DILocalVariable(name: "arg", arg: 3, scope: !7379, file: !506, line: 433, type: !102)
!7386 = !DILocalVariable(name: "dev", scope: !7379, file: !506, line: 435, type: !7387)
!7387 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !535)
!7388 = !DILocalVariable(name: "data", scope: !7379, file: !506, line: 436, type: !7146)
!7389 = !DILocation(line: 0, scope: !7379)
!7390 = !DILocation(line: 438, column: 21, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7379, file: !506, line: 438, column: 6)
!7392 = !DILocation(line: 438, column: 6, scope: !7391)
!7393 = !DILocation(line: 438, column: 6, scope: !7379)
!7394 = !DILocation(line: 442, column: 20, scope: !7379)
!7395 = !DILocation(line: 443, column: 17, scope: !7379)
!7396 = !DILocation(line: 443, column: 22, scope: !7379)
!7397 = !DILocation(line: 445, column: 2, scope: !7379)
!7398 = !DILocation(line: 446, column: 1, scope: !7379)
!7399 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !506, file: !506, line: 448, type: !7181, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7400)
!7400 = !{!7401, !7402, !7403}
!7401 = !DILocalVariable(name: "line", arg: 1, scope: !7399, file: !506, line: 448, type: !103)
!7402 = !DILocalVariable(name: "dev", scope: !7399, file: !506, line: 450, type: !7387)
!7403 = !DILocalVariable(name: "data", scope: !7399, file: !506, line: 451, type: !7146)
!7404 = !DILocation(line: 0, scope: !7399)
!7405 = !DILocation(line: 453, column: 17, scope: !7399)
!7406 = !DILocation(line: 453, column: 20, scope: !7399)
!7407 = !DILocation(line: 454, column: 17, scope: !7399)
!7408 = !DILocation(line: 454, column: 22, scope: !7399)
!7409 = !DILocation(line: 455, column: 1, scope: !7399)
!7410 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !691, file: !691, line: 183, type: !729, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7411)
!7411 = !{!7412, !7413, !7414, !7415, !7416}
!7412 = !DILocalVariable(name: "dev", arg: 1, scope: !7410, file: !691, line: 183, type: !720)
!7413 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7410, file: !691, line: 184, type: !731)
!7414 = !DILocalVariable(name: "pclken", scope: !7410, file: !691, line: 186, type: !681)
!7415 = !DILocalVariable(name: "reg", scope: !7410, file: !691, line: 187, type: !1272)
!7416 = !DILocalVariable(name: "reg_val", scope: !7410, file: !691, line: 188, type: !121)
!7417 = !DILocation(line: 0, scope: !7410)
!7418 = !DILocation(line: 192, column: 6, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7410, file: !691, line: 192, column: 6)
!7420 = !DILocation(line: 192, column: 6, scope: !7410)
!7421 = !DILocation(line: 197, column: 52, scope: !7410)
!7422 = !DILocation(line: 197, column: 8, scope: !7410)
!7423 = !DILocation(line: 198, column: 12, scope: !7410)
!7424 = !DILocation(line: 199, column: 21, scope: !7410)
!7425 = !DILocation(line: 199, column: 10, scope: !7410)
!7426 = !DILocation(line: 200, column: 7, scope: !7410)
!7427 = !DILocation(line: 202, column: 2, scope: !7410)
!7428 = !DILocation(line: 203, column: 1, scope: !7410)
!7429 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !691, file: !691, line: 205, type: !729, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7430)
!7430 = !{!7431, !7432, !7433, !7434, !7435}
!7431 = !DILocalVariable(name: "dev", arg: 1, scope: !7429, file: !691, line: 205, type: !720)
!7432 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7429, file: !691, line: 206, type: !731)
!7433 = !DILocalVariable(name: "pclken", scope: !7429, file: !691, line: 208, type: !681)
!7434 = !DILocalVariable(name: "reg", scope: !7429, file: !691, line: 209, type: !1272)
!7435 = !DILocalVariable(name: "reg_val", scope: !7429, file: !691, line: 210, type: !121)
!7436 = !DILocation(line: 0, scope: !7429)
!7437 = !DILocation(line: 214, column: 6, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7429, file: !691, line: 214, column: 6)
!7439 = !DILocation(line: 214, column: 6, scope: !7429)
!7440 = !DILocation(line: 219, column: 52, scope: !7429)
!7441 = !DILocation(line: 219, column: 8, scope: !7429)
!7442 = !DILocation(line: 220, column: 12, scope: !7429)
!7443 = !DILocation(line: 221, column: 22, scope: !7429)
!7444 = !DILocation(line: 221, column: 13, scope: !7429)
!7445 = !DILocation(line: 221, column: 10, scope: !7429)
!7446 = !DILocation(line: 222, column: 7, scope: !7429)
!7447 = !DILocation(line: 224, column: 2, scope: !7429)
!7448 = !DILocation(line: 225, column: 1, scope: !7429)
!7449 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !691, file: !691, line: 262, type: !745, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7450)
!7450 = !{!7451, !7452, !7453, !7454, !7455, !7456, !7457, !7458}
!7451 = !DILocalVariable(name: "clock", arg: 1, scope: !7449, file: !691, line: 262, type: !720)
!7452 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7449, file: !691, line: 263, type: !731)
!7453 = !DILocalVariable(name: "rate", arg: 3, scope: !7449, file: !691, line: 264, type: !687)
!7454 = !DILocalVariable(name: "pclken", scope: !7449, file: !691, line: 266, type: !681)
!7455 = !DILocalVariable(name: "ahb_clock", scope: !7449, file: !691, line: 273, type: !121)
!7456 = !DILocalVariable(name: "apb1_clock", scope: !7449, file: !691, line: 274, type: !121)
!7457 = !DILocalVariable(name: "apb2_clock", scope: !7449, file: !691, line: 276, type: !121)
!7458 = !DILocalVariable(name: "ahb3_clock", scope: !7449, file: !691, line: 286, type: !121)
!7459 = !DILocation(line: 0, scope: !7449)
!7460 = !DILocation(line: 273, column: 23, scope: !7449)
!7461 = !DILocation(line: 299, column: 18, scope: !7449)
!7462 = !DILocation(line: 299, column: 2, scope: !7449)
!7463 = !DILocation(line: 274, column: 24, scope: !7449)
!7464 = !DILocation(line: 319, column: 3, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7449, file: !691, line: 299, column: 23)
!7466 = !DILocation(line: 276, column: 24, scope: !7449)
!7467 = !DILocation(line: 323, column: 3, scope: !7465)
!7468 = !DILocation(line: 346, column: 33, scope: !7465)
!7469 = !DILocation(line: 346, column: 11, scope: !7465)
!7470 = !DILocation(line: 350, column: 3, scope: !7465)
!7471 = !DILocation(line: 374, column: 3, scope: !7465)
!7472 = !DILocation(line: 379, column: 3, scope: !7465)
!7473 = !DILocation(line: 0, scope: !7465)
!7474 = !DILocation(line: 396, column: 1, scope: !7449)
!7475 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !691, file: !691, line: 227, type: !761, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7476)
!7476 = !{!7477, !7478, !7479, !7480, !7481, !7482, !7483, !7484}
!7477 = !DILocalVariable(name: "dev", arg: 1, scope: !7475, file: !691, line: 227, type: !720)
!7478 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7475, file: !691, line: 228, type: !731)
!7479 = !DILocalVariable(name: "data", arg: 3, scope: !7475, file: !691, line: 229, type: !102)
!7480 = !DILocalVariable(name: "pclken", scope: !7475, file: !691, line: 233, type: !681)
!7481 = !DILocalVariable(name: "reg", scope: !7475, file: !691, line: 234, type: !1272)
!7482 = !DILocalVariable(name: "reg_val", scope: !7475, file: !691, line: 235, type: !121)
!7483 = !DILocalVariable(name: "dt_val", scope: !7475, file: !691, line: 235, type: !121)
!7484 = !DILocalVariable(name: "err", scope: !7475, file: !691, line: 236, type: !103)
!7485 = !DILocation(line: 0, scope: !7475)
!7486 = !DILocation(line: 241, column: 30, scope: !7475)
!7487 = !DILocation(line: 241, column: 8, scope: !7475)
!7488 = !DILocation(line: 242, column: 10, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7475, file: !691, line: 242, column: 6)
!7490 = !DILocation(line: 242, column: 6, scope: !7475)
!7491 = !DILocation(line: 247, column: 11, scope: !7475)
!7492 = !DILocation(line: 248, column: 6, scope: !7475)
!7493 = !DILocation(line: 247, column: 44, scope: !7475)
!7494 = !DILocation(line: 250, column: 6, scope: !7475)
!7495 = !DILocation(line: 249, column: 52, scope: !7475)
!7496 = !DILocation(line: 249, column: 8, scope: !7475)
!7497 = !DILocation(line: 251, column: 12, scope: !7475)
!7498 = !DILocation(line: 252, column: 10, scope: !7475)
!7499 = !DILocation(line: 253, column: 7, scope: !7475)
!7500 = !DILocation(line: 255, column: 2, scope: !7475)
!7501 = !DILocation(line: 260, column: 1, scope: !7475)
!7502 = distinct !DISubprogram(name: "enabled_clock", scope: !691, file: !691, line: 100, type: !7503, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7505)
!7503 = !DISubroutineType(types: !7504)
!7504 = !{!103, !121}
!7505 = !{!7506, !7507}
!7506 = !DILocalVariable(name: "src_clk", arg: 1, scope: !7502, file: !691, line: 100, type: !121)
!7507 = !DILocalVariable(name: "r", scope: !7502, file: !691, line: 102, type: !103)
!7508 = !DILocation(line: 0, scope: !7502)
!7509 = !DILocation(line: 104, column: 2, scope: !7502)
!7510 = !DILocation(line: 180, column: 2, scope: !7502)
!7511 = !DILocation(line: 181, column: 1, scope: !7502)
!7512 = distinct !DISubprogram(name: "get_bus_clock", scope: !691, file: !691, line: 79, type: !7513, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7515)
!7513 = !DISubroutineType(types: !7514)
!7514 = !{!121, !121, !121}
!7515 = !{!7516, !7517}
!7516 = !DILocalVariable(name: "clock", arg: 1, scope: !7512, file: !691, line: 79, type: !121)
!7517 = !DILocalVariable(name: "prescaler", arg: 2, scope: !7512, file: !691, line: 79, type: !121)
!7518 = !DILocation(line: 0, scope: !7512)
!7519 = !DILocation(line: 81, column: 15, scope: !7512)
!7520 = !DILocation(line: 81, column: 2, scope: !7512)
!7521 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !691, file: !691, line: 68, type: !7522, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7524)
!7522 = !DISubroutineType(types: !7523)
!7523 = !{!121, !121, !103, !103, !103}
!7524 = !{!7525, !7526, !7527, !7528}
!7525 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !7521, file: !691, line: 68, type: !121)
!7526 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !7521, file: !691, line: 69, type: !103)
!7527 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !7521, file: !691, line: 70, type: !103)
!7528 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !7521, file: !691, line: 71, type: !103)
!7529 = !DILocation(line: 0, scope: !7521)
!7530 = !DILocation(line: 75, column: 22, scope: !7521)
!7531 = !DILocation(line: 75, column: 34, scope: !7521)
!7532 = !DILocation(line: 75, column: 2, scope: !7521)
!7533 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !691, file: !691, line: 641, type: !718, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7534)
!7534 = !{!7535, !7536, !7537}
!7535 = !DILocalVariable(name: "dev", arg: 1, scope: !7533, file: !691, line: 641, type: !720)
!7536 = !DILocalVariable(name: "old_flash_freq", scope: !7533, file: !691, line: 664, type: !121)
!7537 = !DILocalVariable(name: "new_flash_freq", scope: !7533, file: !691, line: 665, type: !121)
!7538 = !DILocation(line: 0, scope: !7533)
!7539 = !DILocation(line: 646, column: 2, scope: !7533)
!7540 = !DILocation(line: 667, column: 19, scope: !7533)
!7541 = !DILocation(line: 674, column: 21, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7533, file: !691, line: 674, column: 6)
!7543 = !DILocation(line: 674, column: 6, scope: !7533)
!7544 = !DILocation(line: 675, column: 3, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7542, file: !691, line: 674, column: 59)
!7546 = !DILocation(line: 676, column: 2, scope: !7545)
!7547 = !DILocation(line: 680, column: 2, scope: !7533)
!7548 = !DILocation(line: 683, column: 2, scope: !7533)
!7549 = !DILocation(line: 690, column: 3, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7551, file: !691, line: 689, column: 9)
!7551 = distinct !DILexicalBlock(scope: !7533, file: !691, line: 685, column: 6)
!7552 = !DILocation(line: 695, column: 2, scope: !7533)
!7553 = !DILocation(line: 696, column: 2, scope: !7533)
!7554 = !DILocation(line: 696, column: 9, scope: !7533)
!7555 = !DILocation(line: 696, column: 34, scope: !7533)
!7556 = distinct !{!7556, !7553, !7557}
!7557 = !DILocation(line: 697, column: 2, scope: !7533)
!7558 = !DILocation(line: 720, column: 21, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7533, file: !691, line: 720, column: 6)
!7560 = !DILocation(line: 720, column: 6, scope: !7533)
!7561 = !DILocation(line: 721, column: 3, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7559, file: !691, line: 720, column: 60)
!7563 = !DILocation(line: 722, column: 2, scope: !7562)
!7564 = !DILocation(line: 725, column: 18, scope: !7533)
!7565 = !DILocation(line: 728, column: 2, scope: !7533)
!7566 = !DILocation(line: 730, column: 2, scope: !7533)
!7567 = !DILocation(line: 745, column: 2, scope: !7533)
!7568 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !7569, file: !7569, line: 3275, type: !5545, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7569 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7570 = !DILocation(line: 3277, column: 21, scope: !7568)
!7571 = !DILocation(line: 3277, column: 3, scope: !7568)
!7572 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !691, file: !691, line: 507, type: !2904, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7573 = !DILocation(line: 534, column: 7, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !691, line: 534, column: 7)
!7575 = distinct !DILexicalBlock(scope: !7576, file: !691, line: 532, column: 37)
!7576 = distinct !DILexicalBlock(scope: !7572, file: !691, line: 532, column: 6)
!7577 = !DILocation(line: 534, column: 28, scope: !7574)
!7578 = !DILocation(line: 534, column: 7, scope: !7575)
!7579 = !DILocation(line: 536, column: 4, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7574, file: !691, line: 534, column: 34)
!7581 = !DILocation(line: 537, column: 4, scope: !7580)
!7582 = !DILocation(line: 537, column: 11, scope: !7580)
!7583 = !DILocation(line: 537, column: 32, scope: !7580)
!7584 = distinct !{!7584, !7581, !7585}
!7585 = !DILocation(line: 539, column: 4, scope: !7580)
!7586 = !DILocation(line: 583, column: 3, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7588, file: !691, line: 577, column: 37)
!7588 = distinct !DILexicalBlock(scope: !7572, file: !691, line: 577, column: 6)
!7589 = !DILocation(line: 584, column: 3, scope: !7587)
!7590 = !DILocation(line: 584, column: 10, scope: !7587)
!7591 = !DILocation(line: 584, column: 31, scope: !7587)
!7592 = distinct !{!7592, !7589, !7593}
!7593 = !DILocation(line: 585, column: 3, scope: !7587)
!7594 = !DILocation(line: 627, column: 1, scope: !7572)
!7595 = distinct !DISubprogram(name: "set_up_plls", scope: !691, file: !691, line: 448, type: !2904, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7596 = !DILocation(line: 460, column: 6, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7595, file: !691, line: 460, column: 6)
!7598 = !DILocation(line: 460, column: 31, scope: !7597)
!7599 = !DILocation(line: 460, column: 6, scope: !7595)
!7600 = !DILocation(line: 461, column: 3, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7597, file: !691, line: 460, column: 67)
!7602 = !DILocation(line: 462, column: 3, scope: !7601)
!7603 = !DILocation(line: 463, column: 2, scope: !7601)
!7604 = !DILocation(line: 464, column: 2, scope: !7595)
!7605 = !DILocation(line: 488, column: 2, scope: !7595)
!7606 = !DILocation(line: 496, column: 2, scope: !7595)
!7607 = !DILocation(line: 499, column: 2, scope: !7595)
!7608 = !DILocation(line: 500, column: 2, scope: !7595)
!7609 = !DILocation(line: 500, column: 9, scope: !7595)
!7610 = !DILocation(line: 500, column: 30, scope: !7595)
!7611 = distinct !{!7611, !7608, !7612}
!7612 = !DILocation(line: 502, column: 2, scope: !7595)
!7613 = !DILocation(line: 505, column: 1, scope: !7595)
!7614 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !7569, file: !7569, line: 3224, type: !5555, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7615)
!7615 = !{!7616}
!7616 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7614, file: !7569, line: 3224, type: !121)
!7617 = !DILocation(line: 0, scope: !7614)
!7618 = !DILocation(line: 3226, column: 3, scope: !7614)
!7619 = !DILocation(line: 3227, column: 1, scope: !7614)
!7620 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !7569, file: !7569, line: 3188, type: !5555, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7621)
!7621 = !{!7622}
!7622 = !DILocalVariable(name: "Source", arg: 1, scope: !7620, file: !7569, line: 3188, type: !121)
!7623 = !DILocation(line: 0, scope: !7620)
!7624 = !DILocation(line: 3190, column: 3, scope: !7620)
!7625 = !DILocation(line: 3191, column: 1, scope: !7620)
!7626 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !7569, file: !7569, line: 3204, type: !5545, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7627 = !DILocation(line: 3206, column: 21, scope: !7626)
!7628 = !DILocation(line: 3206, column: 3, scope: !7626)
!7629 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !7569, file: !7569, line: 3240, type: !5555, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7630)
!7630 = !{!7631}
!7631 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7629, file: !7569, line: 3240, type: !121)
!7632 = !DILocation(line: 0, scope: !7629)
!7633 = !DILocation(line: 3242, column: 3, scope: !7629)
!7634 = !DILocation(line: 3243, column: 1, scope: !7629)
!7635 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !7569, file: !7569, line: 3256, type: !5555, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7636)
!7636 = !{!7637}
!7637 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7635, file: !7569, line: 3256, type: !121)
!7638 = !DILocation(line: 0, scope: !7635)
!7639 = !DILocation(line: 3258, column: 3, scope: !7635)
!7640 = !DILocation(line: 3259, column: 1, scope: !7635)
!7641 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !691, file: !691, line: 409, type: !2904, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7642 = !DILocation(line: 412, column: 6, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7641, file: !691, line: 412, column: 6)
!7644 = !DILocation(line: 412, column: 27, scope: !7643)
!7645 = !DILocation(line: 412, column: 6, scope: !7641)
!7646 = !DILocation(line: 414, column: 3, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7643, file: !691, line: 412, column: 33)
!7648 = !DILocation(line: 415, column: 3, scope: !7647)
!7649 = !DILocation(line: 415, column: 10, scope: !7647)
!7650 = !DILocation(line: 415, column: 31, scope: !7647)
!7651 = distinct !{!7651, !7648, !7652}
!7652 = !DILocation(line: 417, column: 3, scope: !7647)
!7653 = !DILocation(line: 421, column: 2, scope: !7641)
!7654 = !DILocation(line: 422, column: 2, scope: !7641)
!7655 = !DILocation(line: 422, column: 9, scope: !7641)
!7656 = !DILocation(line: 422, column: 34, scope: !7641)
!7657 = distinct !{!7657, !7654, !7658}
!7658 = !DILocation(line: 423, column: 2, scope: !7641)
!7659 = !DILocation(line: 424, column: 1, scope: !7641)
!7660 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !7569, file: !7569, line: 4195, type: !2904, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7661 = !DILocation(line: 4197, column: 3, scope: !7660)
!7662 = !DILocation(line: 4198, column: 1, scope: !7660)
!7663 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !7569, file: !7569, line: 4184, type: !2904, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7664 = !DILocation(line: 4186, column: 3, scope: !7663)
!7665 = !DILocation(line: 4187, column: 1, scope: !7663)
!7666 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !7569, file: !7569, line: 4205, type: !5545, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7667 = !DILocation(line: 4207, column: 11, scope: !7666)
!7668 = !DILocation(line: 4207, column: 44, scope: !7666)
!7669 = !DILocation(line: 4207, column: 3, scope: !7666)
!7670 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !7569, file: !7569, line: 3007, type: !5545, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7671 = !DILocation(line: 3009, column: 11, scope: !7670)
!7672 = !DILocation(line: 3009, column: 44, scope: !7670)
!7673 = !DILocation(line: 3009, column: 3, scope: !7670)
!7674 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !7569, file: !7569, line: 2987, type: !2904, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7675 = !DILocation(line: 2989, column: 3, scope: !7674)
!7676 = !DILocation(line: 2990, column: 1, scope: !7674)
!7677 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !7569, file: !7569, line: 3143, type: !2904, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7678 = !DILocation(line: 3145, column: 3, scope: !7677)
!7679 = !DILocation(line: 3146, column: 1, scope: !7677)
!7680 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !7569, file: !7569, line: 3163, type: !5545, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7681 = !DILocation(line: 3165, column: 11, scope: !7680)
!7682 = !DILocation(line: 3165, column: 46, scope: !7680)
!7683 = !DILocation(line: 3165, column: 3, scope: !7680)
!7684 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !7685, file: !7685, line: 40, type: !5545, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !322)
!7685 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7686 = !DILocation(line: 43, column: 3, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7688, file: !7685, line: 42, column: 37)
!7688 = distinct !DILexicalBlock(scope: !7684, file: !7685, line: 42, column: 6)
!7689 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !7685, file: !7685, line: 56, type: !2904, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !322)
!7690 = !DILocation(line: 58, column: 2, scope: !7689)
!7691 = !DILocation(line: 62, column: 1, scope: !7689)
!7692 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !7569, file: !7569, line: 4304, type: !7693, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !7695)
!7693 = !DISubroutineType(types: !7694)
!7694 = !{null, !121, !121, !121, !121}
!7695 = !{!7696, !7697, !7698, !7699}
!7696 = !DILocalVariable(name: "Source", arg: 1, scope: !7692, file: !7569, line: 4304, type: !121)
!7697 = !DILocalVariable(name: "PLLM", arg: 2, scope: !7692, file: !7569, line: 4304, type: !121)
!7698 = !DILocalVariable(name: "PLLN", arg: 3, scope: !7692, file: !7569, line: 4304, type: !121)
!7699 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !7692, file: !7569, line: 4304, type: !121)
!7700 = !DILocation(line: 0, scope: !7692)
!7701 = !DILocation(line: 4306, column: 3, scope: !7692)
!7702 = !DILocation(line: 4308, column: 3, scope: !7692)
!7703 = !DILocation(line: 4312, column: 1, scope: !7692)
!7704 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !7685, file: !7685, line: 69, type: !2904, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !322)
!7705 = !DILocation(line: 72, column: 2, scope: !7704)
!7706 = !DILocation(line: 73, column: 1, scope: !7704)
!7707 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !7708, file: !7708, line: 1185, type: !5555, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !7709)
!7708 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7709 = !{!7710, !7711}
!7710 = !DILocalVariable(name: "Periphs", arg: 1, scope: !7707, file: !7708, line: 1185, type: !121)
!7711 = !DILocalVariable(name: "tmpreg", scope: !7707, file: !7708, line: 1187, type: !120)
!7712 = !DILocation(line: 0, scope: !7707)
!7713 = !DILocation(line: 1187, column: 3, scope: !7707)
!7714 = !DILocation(line: 1187, column: 17, scope: !7707)
!7715 = !DILocation(line: 1188, column: 3, scope: !7707)
!7716 = !DILocation(line: 1190, column: 12, scope: !7707)
!7717 = !DILocation(line: 1190, column: 10, scope: !7707)
!7718 = !DILocation(line: 1191, column: 9, scope: !7707)
!7719 = !DILocation(line: 1192, column: 1, scope: !7707)
!7720 = distinct !DISubprogram(name: "uart_console_init", scope: !822, file: !822, line: 588, type: !799, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !7721)
!7721 = !{!7722}
!7722 = !DILocalVariable(name: "arg", arg: 1, scope: !7720, file: !822, line: 588, type: !777)
!7723 = !DILocation(line: 0, scope: !7720)
!7724 = !DILocation(line: 593, column: 7, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7720, file: !822, line: 593, column: 6)
!7726 = !DILocation(line: 593, column: 6, scope: !7720)
!7727 = !DILocation(line: 597, column: 2, scope: !7720)
!7728 = !DILocation(line: 599, column: 2, scope: !7720)
!7729 = !DILocation(line: 600, column: 1, scope: !7720)
!7730 = distinct !DISubprogram(name: "device_is_ready", scope: !3056, file: !3056, line: 47, type: !7731, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !7733)
!7731 = !DISubroutineType(types: !7732)
!7732 = !{!157, !777}
!7733 = !{!7734}
!7734 = !DILocalVariable(name: "dev", arg: 1, scope: !7730, file: !3056, line: 47, type: !777)
!7735 = !DILocation(line: 0, scope: !7730)
!7736 = !DILocation(line: 55, column: 2, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7730, file: !3056, line: 55, column: 2)
!7738 = !{i64 2154266145}
!7739 = !DILocation(line: 56, column: 9, scope: !7730)
!7740 = !DILocation(line: 56, column: 2, scope: !7730)
!7741 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !822, file: !822, line: 573, type: !2904, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !322)
!7742 = !DILocation(line: 576, column: 2, scope: !7741)
!7743 = !DILocation(line: 579, column: 2, scope: !7741)
!7744 = !DILocation(line: 581, column: 1, scope: !7741)
!7745 = distinct !DISubprogram(name: "console_out", scope: !822, file: !822, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !7746)
!7746 = !{!7747}
!7747 = !DILocalVariable(name: "c", arg: 1, scope: !7745, file: !822, line: 77, type: !103)
!7748 = !DILocation(line: 0, scope: !7745)
!7749 = !DILocation(line: 89, column: 11, scope: !7750)
!7750 = distinct !DILexicalBlock(scope: !7745, file: !822, line: 89, column: 6)
!7751 = !DILocation(line: 89, column: 6, scope: !7745)
!7752 = !DILocation(line: 90, column: 3, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7750, file: !822, line: 89, column: 17)
!7754 = !DILocation(line: 91, column: 2, scope: !7753)
!7755 = !DILocation(line: 92, column: 34, scope: !7745)
!7756 = !DILocation(line: 92, column: 2, scope: !7745)
!7757 = !DILocation(line: 94, column: 2, scope: !7745)
!7758 = distinct !DISubprogram(name: "uart_poll_out", scope: !7759, file: !7759, line: 95, type: !795, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !7760)
!7759 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/thermometer")
!7760 = !{!7761, !7762}
!7761 = !DILocalVariable(name: "dev", arg: 1, scope: !7758, file: !7759, line: 95, type: !777)
!7762 = !DILocalVariable(name: "out_char", arg: 2, scope: !7758, file: !7759, line: 95, type: !155)
!7763 = !DILocation(line: 0, scope: !7758)
!7764 = !DILocation(line: 105, column: 2, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7758, file: !7759, line: 105, column: 2)
!7766 = !{i64 2154349536}
!7767 = !DILocation(line: 106, column: 2, scope: !7758)
!7768 = !DILocation(line: 107, column: 1, scope: !7758)
!7769 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !771, file: !771, line: 574, type: !795, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !7770)
!7770 = !{!7771, !7772, !7773}
!7771 = !DILocalVariable(name: "dev", arg: 1, scope: !7769, file: !771, line: 574, type: !777)
!7772 = !DILocalVariable(name: "out_char", arg: 2, scope: !7769, file: !771, line: 575, type: !155)
!7773 = !DILocalVariable(name: "api", scope: !7769, file: !771, line: 577, type: !768)
!7774 = !DILocation(line: 0, scope: !7769)
!7775 = !DILocation(line: 578, column: 40, scope: !7769)
!7776 = !DILocation(line: 580, column: 7, scope: !7769)
!7777 = !DILocation(line: 580, column: 2, scope: !7769)
!7778 = !DILocation(line: 581, column: 1, scope: !7769)
!7779 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !7731, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !7780)
!7780 = !{!7781}
!7781 = !DILocalVariable(name: "dev", arg: 1, scope: !7779, file: !141, line: 730, type: !777)
!7782 = !DILocation(line: 0, scope: !7779)
!7783 = !DILocation(line: 732, column: 9, scope: !7779)
!7784 = !DILocation(line: 732, column: 2, scope: !7779)
!7785 = distinct !DISubprogram(name: "uart_register_input", scope: !822, file: !822, line: 560, type: !7786, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !7831)
!7786 = !DISubroutineType(types: !7787)
!7787 = !{null, !7788, !7788, !7828}
!7788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7789, size: 32)
!7789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !307, line: 2208, size: 128, elements: !7790)
!7790 = !{!7791}
!7791 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !7789, file: !307, line: 2209, baseType: !7792, size: 128)
!7792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !307, line: 1709, size: 128, elements: !7793)
!7793 = !{!7794, !7807, !7809}
!7794 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !7792, file: !307, line: 1710, baseType: !7795, size: 64)
!7795 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !7796, line: 46, baseType: !7797)
!7796 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !7796, line: 41, size: 64, elements: !7798)
!7798 = !{!7799, !7806}
!7799 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7797, file: !7796, line: 42, baseType: !7800, size: 32)
!7800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7801, size: 32)
!7801 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !7796, line: 39, baseType: !7802)
!7802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !7796, line: 35, size: 32, elements: !7803)
!7803 = !{!7804}
!7804 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !7802, file: !7796, line: 36, baseType: !7805, size: 32)
!7805 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !7796, line: 32, baseType: !121)
!7806 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7797, file: !7796, line: 43, baseType: !7800, size: 32, offset: 32)
!7807 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7792, file: !307, line: 1711, baseType: !7808, offset: 64)
!7808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!7809 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7792, file: !307, line: 1712, baseType: !7810, size: 64, offset: 64)
!7810 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !7811)
!7811 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !7812)
!7812 = !{!7813}
!7813 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7811, file: !247, line: 232, baseType: !7814, size: 64)
!7814 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !7815)
!7815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !7816)
!7816 = !{!7817, !7823}
!7817 = !DIDerivedType(tag: DW_TAG_member, scope: !7815, file: !221, line: 38, baseType: !7818, size: 32)
!7818 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7815, file: !221, line: 38, size: 32, elements: !7819)
!7819 = !{!7820, !7822}
!7820 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7818, file: !221, line: 39, baseType: !7821, size: 32)
!7821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7815, size: 32)
!7822 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7818, file: !221, line: 40, baseType: !7821, size: 32)
!7823 = !DIDerivedType(tag: DW_TAG_member, scope: !7815, file: !221, line: 42, baseType: !7824, size: 32, offset: 32)
!7824 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7815, file: !221, line: 42, size: 32, elements: !7825)
!7825 = !{!7826, !7827}
!7826 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7824, file: !221, line: 43, baseType: !7821, size: 32)
!7827 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7824, file: !221, line: 44, baseType: !7821, size: 32)
!7828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7829, size: 32)
!7829 = !DISubroutineType(types: !7830)
!7830 = !{!154, !957, !154}
!7831 = !{!7832, !7833, !7834}
!7832 = !DILocalVariable(name: "avail", arg: 1, scope: !7785, file: !822, line: 560, type: !7788)
!7833 = !DILocalVariable(name: "lines", arg: 2, scope: !7785, file: !822, line: 560, type: !7788)
!7834 = !DILocalVariable(name: "completion", arg: 3, scope: !7785, file: !822, line: 561, type: !7828)
!7835 = !DILocation(line: 0, scope: !7785)
!7836 = !DILocation(line: 566, column: 1, scope: !7785)
!7837 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1001, file: !1001, line: 523, type: !858, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7838)
!7838 = !{!7839, !7840, !7841, !7842, !7843}
!7839 = !DILocalVariable(name: "dev", arg: 1, scope: !7837, file: !1001, line: 523, type: !860)
!7840 = !DILocalVariable(name: "pin", arg: 2, scope: !7837, file: !1001, line: 524, type: !875)
!7841 = !DILocalVariable(name: "flags", arg: 3, scope: !7837, file: !1001, line: 524, type: !876)
!7842 = !DILocalVariable(name: "err", scope: !7837, file: !1001, line: 526, type: !103)
!7843 = !DILocalVariable(name: "pincfg", scope: !7837, file: !1001, line: 527, type: !103)
!7844 = !DILocation(line: 0, scope: !7837)
!7845 = !DILocation(line: 527, column: 2, scope: !7837)
!7846 = !DILocation(line: 532, column: 8, scope: !7837)
!7847 = !DILocation(line: 533, column: 10, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7837, file: !1001, line: 533, column: 6)
!7849 = !DILocation(line: 533, column: 6, scope: !7837)
!7850 = !DILocation(line: 543, column: 13, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7837, file: !1001, line: 543, column: 6)
!7852 = !DILocation(line: 543, column: 28, scope: !7851)
!7853 = !DILocation(line: 543, column: 6, scope: !7837)
!7854 = !DILocation(line: 544, column: 14, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7856, file: !1001, line: 544, column: 7)
!7856 = distinct !DILexicalBlock(scope: !7851, file: !1001, line: 543, column: 34)
!7857 = !DILocation(line: 544, column: 39, scope: !7855)
!7858 = !DILocation(line: 544, column: 7, scope: !7856)
!7859 = !DILocation(line: 545, column: 38, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7855, file: !1001, line: 544, column: 45)
!7861 = !DILocation(line: 545, column: 4, scope: !7860)
!7862 = !DILocation(line: 546, column: 3, scope: !7860)
!7863 = !DILocation(line: 546, column: 21, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7855, file: !1001, line: 546, column: 14)
!7865 = !DILocation(line: 546, column: 45, scope: !7864)
!7866 = !DILocation(line: 546, column: 14, scope: !7855)
!7867 = !DILocation(line: 547, column: 40, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7864, file: !1001, line: 546, column: 51)
!7869 = !DILocation(line: 547, column: 4, scope: !7868)
!7870 = !DILocation(line: 548, column: 3, scope: !7868)
!7871 = !DILocation(line: 551, column: 32, scope: !7837)
!7872 = !DILocation(line: 551, column: 37, scope: !7837)
!7873 = !DILocation(line: 551, column: 2, scope: !7837)
!7874 = !DILocation(line: 554, column: 6, scope: !7837)
!7875 = !DILocation(line: 562, column: 1, scope: !7837)
!7876 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1001, file: !1001, line: 410, type: !7877, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7879)
!7877 = !DISubroutineType(types: !7878)
!7878 = !{!103, !860, !687}
!7879 = !{!7880, !7881, !7882, !7884}
!7880 = !DILocalVariable(name: "dev", arg: 1, scope: !7876, file: !1001, line: 410, type: !860)
!7881 = !DILocalVariable(name: "value", arg: 2, scope: !7876, file: !1001, line: 410, type: !687)
!7882 = !DILocalVariable(name: "cfg", scope: !7876, file: !1001, line: 412, type: !7883)
!7883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 32)
!7884 = !DILocalVariable(name: "gpio", scope: !7876, file: !1001, line: 413, type: !933)
!7885 = !DILocation(line: 0, scope: !7876)
!7886 = !DILocation(line: 412, column: 45, scope: !7876)
!7887 = !DILocation(line: 413, column: 44, scope: !7876)
!7888 = !DILocation(line: 415, column: 11, scope: !7876)
!7889 = !DILocation(line: 415, column: 9, scope: !7876)
!7890 = !DILocation(line: 417, column: 2, scope: !7876)
!7891 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1001, file: !1001, line: 420, type: !885, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7892)
!7892 = !{!7893, !7894, !7895, !7896, !7897, !7898}
!7893 = !DILocalVariable(name: "dev", arg: 1, scope: !7891, file: !1001, line: 420, type: !860)
!7894 = !DILocalVariable(name: "mask", arg: 2, scope: !7891, file: !1001, line: 421, type: !887)
!7895 = !DILocalVariable(name: "value", arg: 3, scope: !7891, file: !1001, line: 422, type: !882)
!7896 = !DILocalVariable(name: "cfg", scope: !7891, file: !1001, line: 424, type: !7883)
!7897 = !DILocalVariable(name: "gpio", scope: !7891, file: !1001, line: 425, type: !933)
!7898 = !DILocalVariable(name: "port_value", scope: !7891, file: !1001, line: 426, type: !121)
!7899 = !DILocation(line: 0, scope: !7891)
!7900 = !DILocation(line: 424, column: 45, scope: !7891)
!7901 = !DILocation(line: 425, column: 44, scope: !7891)
!7902 = !DILocation(line: 430, column: 15, scope: !7891)
!7903 = !DILocation(line: 431, column: 46, scope: !7891)
!7904 = !DILocation(line: 431, column: 44, scope: !7891)
!7905 = !DILocation(line: 431, column: 61, scope: !7891)
!7906 = !DILocation(line: 431, column: 53, scope: !7891)
!7907 = !DILocation(line: 431, column: 2, scope: !7891)
!7908 = !DILocation(line: 435, column: 2, scope: !7891)
!7909 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1001, file: !1001, line: 438, type: !890, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7910)
!7910 = !{!7911, !7912, !7913, !7914}
!7911 = !DILocalVariable(name: "dev", arg: 1, scope: !7909, file: !1001, line: 438, type: !860)
!7912 = !DILocalVariable(name: "pins", arg: 2, scope: !7909, file: !1001, line: 439, type: !887)
!7913 = !DILocalVariable(name: "cfg", scope: !7909, file: !1001, line: 441, type: !7883)
!7914 = !DILocalVariable(name: "gpio", scope: !7909, file: !1001, line: 442, type: !933)
!7915 = !DILocation(line: 0, scope: !7909)
!7916 = !DILocation(line: 441, column: 45, scope: !7909)
!7917 = !DILocation(line: 442, column: 44, scope: !7909)
!7918 = !DILocation(line: 448, column: 2, scope: !7909)
!7919 = !DILocation(line: 450, column: 2, scope: !7909)
!7920 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1001, file: !1001, line: 453, type: !890, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7921)
!7921 = !{!7922, !7923, !7924, !7925}
!7922 = !DILocalVariable(name: "dev", arg: 1, scope: !7920, file: !1001, line: 453, type: !860)
!7923 = !DILocalVariable(name: "pins", arg: 2, scope: !7920, file: !1001, line: 454, type: !887)
!7924 = !DILocalVariable(name: "cfg", scope: !7920, file: !1001, line: 456, type: !7883)
!7925 = !DILocalVariable(name: "gpio", scope: !7920, file: !1001, line: 457, type: !933)
!7926 = !DILocation(line: 0, scope: !7920)
!7927 = !DILocation(line: 456, column: 45, scope: !7920)
!7928 = !DILocation(line: 457, column: 44, scope: !7920)
!7929 = !DILocation(line: 467, column: 2, scope: !7920)
!7930 = !DILocation(line: 470, column: 2, scope: !7920)
!7931 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1001, file: !1001, line: 473, type: !890, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7932)
!7932 = !{!7933, !7934, !7935, !7936}
!7933 = !DILocalVariable(name: "dev", arg: 1, scope: !7931, file: !1001, line: 473, type: !860)
!7934 = !DILocalVariable(name: "pins", arg: 2, scope: !7931, file: !1001, line: 474, type: !887)
!7935 = !DILocalVariable(name: "cfg", scope: !7931, file: !1001, line: 476, type: !7883)
!7936 = !DILocalVariable(name: "gpio", scope: !7931, file: !1001, line: 477, type: !933)
!7937 = !DILocation(line: 0, scope: !7931)
!7938 = !DILocation(line: 476, column: 45, scope: !7931)
!7939 = !DILocation(line: 477, column: 44, scope: !7931)
!7940 = !DILocation(line: 484, column: 2, scope: !7931)
!7941 = !DILocation(line: 487, column: 2, scope: !7931)
!7942 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1001, file: !1001, line: 594, type: !896, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7943)
!7943 = !{!7944, !7945, !7946, !7947, !7948, !7949, !7951, !7952, !7953}
!7944 = !DILocalVariable(name: "dev", arg: 1, scope: !7942, file: !1001, line: 594, type: !860)
!7945 = !DILocalVariable(name: "pin", arg: 2, scope: !7942, file: !1001, line: 595, type: !875)
!7946 = !DILocalVariable(name: "mode", arg: 3, scope: !7942, file: !1001, line: 596, type: !834)
!7947 = !DILocalVariable(name: "trig", arg: 4, scope: !7942, file: !1001, line: 597, type: !840)
!7948 = !DILocalVariable(name: "cfg", scope: !7942, file: !1001, line: 599, type: !7883)
!7949 = !DILocalVariable(name: "data", scope: !7942, file: !1001, line: 600, type: !7950)
!7950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 32)
!7951 = !DILocalVariable(name: "edge", scope: !7942, file: !1001, line: 601, type: !103)
!7952 = !DILocalVariable(name: "err", scope: !7942, file: !1001, line: 602, type: !103)
!7953 = !DILabel(scope: !7942, name: "exit", file: !1001, line: 643)
!7954 = !DILocation(line: 0, scope: !7942)
!7955 = !DILocation(line: 599, column: 45, scope: !7942)
!7956 = !DILocation(line: 604, column: 6, scope: !7942)
!7957 = !DILocation(line: 605, column: 34, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7959, file: !1001, line: 605, column: 7)
!7959 = distinct !DILexicalBlock(scope: !7960, file: !1001, line: 604, column: 38)
!7960 = distinct !DILexicalBlock(scope: !7942, file: !1001, line: 604, column: 6)
!7961 = !DILocation(line: 605, column: 7, scope: !7958)
!7962 = !DILocation(line: 605, column: 47, scope: !7958)
!7963 = !DILocation(line: 605, column: 39, scope: !7958)
!7964 = !DILocation(line: 605, column: 7, scope: !7959)
!7965 = !DILocation(line: 606, column: 4, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7958, file: !1001, line: 605, column: 53)
!7967 = !DILocation(line: 607, column: 4, scope: !7966)
!7968 = !DILocation(line: 608, column: 4, scope: !7966)
!7969 = !DILocation(line: 609, column: 3, scope: !7966)
!7970 = !DILocation(line: 600, column: 38, scope: !7942)
!7971 = !DILocation(line: 620, column: 30, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7942, file: !1001, line: 620, column: 6)
!7973 = !DILocation(line: 620, column: 6, scope: !7972)
!7974 = !DILocation(line: 620, column: 57, scope: !7972)
!7975 = !DILocation(line: 620, column: 6, scope: !7942)
!7976 = !DILocation(line: 625, column: 29, scope: !7942)
!7977 = !DILocation(line: 625, column: 2, scope: !7942)
!7978 = !DILocation(line: 627, column: 2, scope: !7942)
!7979 = !DILocation(line: 630, column: 3, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7942, file: !1001, line: 627, column: 16)
!7981 = !DILocation(line: 633, column: 3, scope: !7980)
!7982 = !DILocation(line: 636, column: 3, scope: !7980)
!7983 = !DILocation(line: 639, column: 2, scope: !7942)
!7984 = !DILocation(line: 641, column: 2, scope: !7942)
!7985 = !DILocation(line: 643, column: 1, scope: !7942)
!7986 = !DILocation(line: 644, column: 2, scope: !7942)
!7987 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1001, file: !1001, line: 647, type: !900, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7988)
!7988 = !{!7989, !7990, !7991, !7992}
!7989 = !DILocalVariable(name: "dev", arg: 1, scope: !7987, file: !1001, line: 647, type: !860)
!7990 = !DILocalVariable(name: "callback", arg: 2, scope: !7987, file: !1001, line: 648, type: !902)
!7991 = !DILocalVariable(name: "set", arg: 3, scope: !7987, file: !1001, line: 649, type: !157)
!7992 = !DILocalVariable(name: "data", scope: !7987, file: !1001, line: 651, type: !7950)
!7993 = !DILocation(line: 0, scope: !7987)
!7994 = !DILocation(line: 651, column: 38, scope: !7987)
!7995 = !DILocation(line: 653, column: 37, scope: !7987)
!7996 = !DILocation(line: 653, column: 9, scope: !7987)
!7997 = !DILocation(line: 653, column: 2, scope: !7987)
!7998 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !7999, file: !7999, line: 38, type: !8000, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8003)
!7999 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8000 = !DISubroutineType(types: !8001)
!8001 = !{!103, !8002, !902, !157}
!8002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!8003 = !{!8004, !8005, !8006}
!8004 = !DILocalVariable(name: "callbacks", arg: 1, scope: !7998, file: !7999, line: 38, type: !8002)
!8005 = !DILocalVariable(name: "callback", arg: 2, scope: !7998, file: !7999, line: 39, type: !902)
!8006 = !DILocalVariable(name: "set", arg: 3, scope: !7998, file: !7999, line: 40, type: !157)
!8007 = !DILocation(line: 0, scope: !7998)
!8008 = !DILocation(line: 45, column: 7, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !7998, file: !7999, line: 45, column: 6)
!8010 = !DILocation(line: 45, column: 6, scope: !7998)
!8011 = !DILocation(line: 46, column: 56, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8013, file: !7999, line: 46, column: 7)
!8013 = distinct !DILexicalBlock(scope: !8009, file: !7999, line: 45, column: 38)
!8014 = !DILocation(line: 46, column: 8, scope: !8012)
!8015 = !DILocation(line: 46, column: 7, scope: !8013)
!8016 = !DILocation(line: 51, column: 13, scope: !8009)
!8017 = !DILocation(line: 56, column: 43, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8019, file: !7999, line: 55, column: 11)
!8019 = distinct !DILexicalBlock(scope: !7998, file: !7999, line: 55, column: 6)
!8020 = !DILocation(line: 56, column: 3, scope: !8018)
!8021 = !DILocation(line: 57, column: 2, scope: !8018)
!8022 = !DILocation(line: 60, column: 1, scope: !7998)
!8023 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !907, file: !907, line: 261, type: !8024, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8026)
!8024 = !DISubroutineType(types: !8025)
!8025 = !{!157, !8002}
!8026 = !{!8027}
!8027 = !DILocalVariable(name: "list", arg: 1, scope: !8023, file: !907, line: 261, type: !8002)
!8028 = !DILocation(line: 0, scope: !8023)
!8029 = !DILocation(line: 261, column: 1, scope: !8023)
!8030 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !907, file: !907, line: 417, type: !8031, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8033)
!8031 = !DISubroutineType(types: !8032)
!8032 = !{!157, !8002, !1074}
!8033 = !{!8034, !8035, !8036, !8037}
!8034 = !DILocalVariable(name: "list", arg: 1, scope: !8030, file: !907, line: 417, type: !8002)
!8035 = !DILocalVariable(name: "node", arg: 2, scope: !8030, file: !907, line: 417, type: !1074)
!8036 = !DILocalVariable(name: "prev", scope: !8030, file: !907, line: 417, type: !1074)
!8037 = !DILocalVariable(name: "test", scope: !8030, file: !907, line: 417, type: !1074)
!8038 = !DILocation(line: 0, scope: !8030)
!8039 = !DILocation(line: 417, column: 1, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8030, file: !907, line: 417, column: 1)
!8041 = !DILocation(line: 417, column: 1, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8040, file: !907, line: 417, column: 1)
!8043 = !DILocation(line: 417, column: 1, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8045, file: !907, line: 417, column: 1)
!8045 = distinct !DILexicalBlock(scope: !8042, file: !907, line: 417, column: 1)
!8046 = !DILocation(line: 417, column: 1, scope: !8045)
!8047 = distinct !{!8047, !8039, !8039}
!8048 = !DILocation(line: 417, column: 1, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !8044, file: !907, line: 417, column: 1)
!8050 = !DILocation(line: 417, column: 1, scope: !8030)
!8051 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !907, file: !907, line: 298, type: !8052, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8054)
!8052 = !DISubroutineType(types: !8053)
!8053 = !{null, !8002, !1074}
!8054 = !{!8055, !8056}
!8055 = !DILocalVariable(name: "list", arg: 1, scope: !8051, file: !907, line: 298, type: !8002)
!8056 = !DILocalVariable(name: "node", arg: 2, scope: !8051, file: !907, line: 298, type: !1074)
!8057 = !DILocation(line: 0, scope: !8051)
!8058 = !DILocation(line: 298, column: 1, scope: !8051)
!8059 = !DILocation(line: 298, column: 1, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8051, file: !907, line: 298, column: 1)
!8061 = !DILocation(line: 298, column: 1, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8060, file: !907, line: 298, column: 1)
!8063 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !907, file: !907, line: 231, type: !8064, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8066)
!8064 = !DISubroutineType(types: !8065)
!8065 = !{!1074, !8002}
!8066 = !{!8067}
!8067 = !DILocalVariable(name: "list", arg: 1, scope: !8063, file: !907, line: 231, type: !8002)
!8068 = !DILocation(line: 0, scope: !8063)
!8069 = !DILocation(line: 233, column: 15, scope: !8063)
!8070 = !DILocation(line: 233, column: 2, scope: !8063)
!8071 = distinct !DISubprogram(name: "z_snode_next_set", scope: !907, file: !907, line: 209, type: !8072, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8074)
!8072 = !DISubroutineType(types: !8073)
!8073 = !{null, !1074, !1074}
!8074 = !{!8075, !8076}
!8075 = !DILocalVariable(name: "parent", arg: 1, scope: !8071, file: !907, line: 209, type: !1074)
!8076 = !DILocalVariable(name: "child", arg: 2, scope: !8071, file: !907, line: 209, type: !1074)
!8077 = !DILocation(line: 0, scope: !8071)
!8078 = !DILocation(line: 211, column: 10, scope: !8071)
!8079 = !DILocation(line: 211, column: 15, scope: !8071)
!8080 = !DILocation(line: 212, column: 1, scope: !8071)
!8081 = distinct !DISubprogram(name: "z_slist_head_set", scope: !907, file: !907, line: 214, type: !8052, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8082)
!8082 = !{!8083, !8084}
!8083 = !DILocalVariable(name: "list", arg: 1, scope: !8081, file: !907, line: 214, type: !8002)
!8084 = !DILocalVariable(name: "node", arg: 2, scope: !8081, file: !907, line: 214, type: !1074)
!8085 = !DILocation(line: 0, scope: !8081)
!8086 = !DILocation(line: 216, column: 8, scope: !8081)
!8087 = !DILocation(line: 216, column: 13, scope: !8081)
!8088 = !DILocation(line: 217, column: 1, scope: !8081)
!8089 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !907, file: !907, line: 243, type: !8064, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8090)
!8090 = !{!8091}
!8091 = !DILocalVariable(name: "list", arg: 1, scope: !8089, file: !907, line: 243, type: !8002)
!8092 = !DILocation(line: 0, scope: !8089)
!8093 = !DILocation(line: 245, column: 15, scope: !8089)
!8094 = !DILocation(line: 245, column: 2, scope: !8089)
!8095 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !907, file: !907, line: 219, type: !8052, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8096)
!8096 = !{!8097, !8098}
!8097 = !DILocalVariable(name: "list", arg: 1, scope: !8095, file: !907, line: 219, type: !8002)
!8098 = !DILocalVariable(name: "node", arg: 2, scope: !8095, file: !907, line: 219, type: !1074)
!8099 = !DILocation(line: 0, scope: !8095)
!8100 = !DILocation(line: 221, column: 8, scope: !8095)
!8101 = !DILocation(line: 221, column: 13, scope: !8095)
!8102 = !DILocation(line: 222, column: 1, scope: !8095)
!8103 = distinct !DISubprogram(name: "sys_slist_remove", scope: !907, file: !907, line: 401, type: !8104, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8106)
!8104 = !DISubroutineType(types: !8105)
!8105 = !{null, !8002, !1074, !1074}
!8106 = !{!8107, !8108, !8109}
!8107 = !DILocalVariable(name: "list", arg: 1, scope: !8103, file: !907, line: 401, type: !8002)
!8108 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8103, file: !907, line: 401, type: !1074)
!8109 = !DILocalVariable(name: "node", arg: 3, scope: !8103, file: !907, line: 401, type: !1074)
!8110 = !DILocation(line: 0, scope: !8103)
!8111 = !DILocation(line: 401, column: 1, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8103, file: !907, line: 401, column: 1)
!8113 = !DILocation(line: 0, scope: !8112)
!8114 = !DILocation(line: 401, column: 1, scope: !8103)
!8115 = !DILocation(line: 401, column: 1, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8112, file: !907, line: 401, column: 1)
!8117 = !DILocation(line: 401, column: 1, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8116, file: !907, line: 401, column: 1)
!8119 = !DILocation(line: 401, column: 1, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8118, file: !907, line: 401, column: 1)
!8121 = !DILocation(line: 401, column: 1, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8112, file: !907, line: 401, column: 1)
!8123 = !DILocation(line: 401, column: 1, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8122, file: !907, line: 401, column: 1)
!8125 = !DILocation(line: 401, column: 1, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8124, file: !907, line: 401, column: 1)
!8127 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !907, file: !907, line: 285, type: !8128, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8130)
!8128 = !DISubroutineType(types: !8129)
!8129 = !{!1074, !1074}
!8130 = !{!8131}
!8131 = !DILocalVariable(name: "node", arg: 1, scope: !8127, file: !907, line: 285, type: !1074)
!8132 = !DILocation(line: 0, scope: !8127)
!8133 = !DILocation(line: 285, column: 1, scope: !8127)
!8134 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !907, file: !907, line: 274, type: !8128, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8135)
!8135 = !{!8136}
!8136 = !DILocalVariable(name: "node", arg: 1, scope: !8134, file: !907, line: 274, type: !1074)
!8137 = !DILocation(line: 0, scope: !8134)
!8138 = !DILocation(line: 274, column: 1, scope: !8134)
!8139 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !907, file: !907, line: 204, type: !8128, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8140)
!8140 = !{!8141}
!8141 = !DILocalVariable(name: "node", arg: 1, scope: !8139, file: !907, line: 204, type: !1074)
!8142 = !DILocation(line: 0, scope: !8139)
!8143 = !DILocation(line: 206, column: 15, scope: !8139)
!8144 = !DILocation(line: 206, column: 2, scope: !8139)
!8145 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1001, file: !1001, line: 342, type: !107, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8146)
!8146 = !{!8147, !8148, !8149}
!8147 = !DILocalVariable(name: "pin", arg: 1, scope: !8145, file: !1001, line: 342, type: !103)
!8148 = !DILocalVariable(name: "line", scope: !8145, file: !1001, line: 344, type: !121)
!8149 = !DILocalVariable(name: "port", scope: !8145, file: !1001, line: 345, type: !103)
!8150 = !DILocation(line: 0, scope: !8145)
!8151 = !DILocation(line: 344, column: 18, scope: !8145)
!8152 = !{i32 983040, i32 0}
!8153 = !DILocation(line: 356, column: 9, scope: !8145)
!8154 = !DILocation(line: 370, column: 2, scope: !8145)
!8155 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1001, file: !1001, line: 37, type: !549, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8156)
!8156 = !{!8157, !8158, !8159}
!8157 = !DILocalVariable(name: "line", arg: 1, scope: !8155, file: !1001, line: 37, type: !103)
!8158 = !DILocalVariable(name: "arg", arg: 2, scope: !8155, file: !1001, line: 37, type: !102)
!8159 = !DILocalVariable(name: "data", scope: !8155, file: !1001, line: 39, type: !7950)
!8160 = !DILocation(line: 0, scope: !8155)
!8161 = !DILocation(line: 41, column: 29, scope: !8155)
!8162 = !DILocation(line: 41, column: 39, scope: !8155)
!8163 = !DILocation(line: 41, column: 44, scope: !8155)
!8164 = !DILocation(line: 41, column: 2, scope: !8155)
!8165 = !DILocation(line: 42, column: 1, scope: !8155)
!8166 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1001, file: !1001, line: 376, type: !8167, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8169)
!8167 = !DISubroutineType(types: !8168)
!8168 = !{!103, !103, !103}
!8169 = !{!8170, !8171, !8172, !8174, !8175}
!8170 = !DILocalVariable(name: "port", arg: 1, scope: !8166, file: !1001, line: 376, type: !103)
!8171 = !DILocalVariable(name: "pin", arg: 2, scope: !8166, file: !1001, line: 376, type: !103)
!8172 = !DILocalVariable(name: "clk", scope: !8166, file: !1001, line: 386, type: !8173)
!8173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !860)
!8174 = !DILocalVariable(name: "pclken", scope: !8166, file: !1001, line: 387, type: !1117)
!8175 = !DILocalVariable(name: "ret", scope: !8166, file: !1001, line: 396, type: !103)
!8176 = !DILocation(line: 0, scope: !8166)
!8177 = !DILocation(line: 387, column: 2, scope: !8166)
!8178 = !DILocation(line: 387, column: 22, scope: !8166)
!8179 = !DILocation(line: 399, column: 8, scope: !8166)
!8180 = !DILocation(line: 400, column: 10, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8166, file: !1001, line: 400, column: 6)
!8182 = !DILocation(line: 400, column: 6, scope: !8166)
!8183 = !DILocation(line: 405, column: 2, scope: !8166)
!8184 = !DILocation(line: 407, column: 2, scope: !8166)
!8185 = !DILocation(line: 408, column: 1, scope: !8166)
!8186 = distinct !DISubprogram(name: "clock_control_on", scope: !636, file: !636, line: 123, type: !966, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8187)
!8187 = !{!8188, !8189, !8190}
!8188 = !DILocalVariable(name: "dev", arg: 1, scope: !8186, file: !636, line: 123, type: !860)
!8189 = !DILocalVariable(name: "sys", arg: 2, scope: !8186, file: !636, line: 124, type: !731)
!8190 = !DILocalVariable(name: "api", scope: !8186, file: !636, line: 126, type: !959)
!8191 = !DILocation(line: 0, scope: !8186)
!8192 = !DILocation(line: 127, column: 49, scope: !8186)
!8193 = !DILocation(line: 129, column: 14, scope: !8186)
!8194 = !DILocation(line: 129, column: 9, scope: !8186)
!8195 = !DILocation(line: 129, column: 2, scope: !8186)
!8196 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1001, file: !1001, line: 311, type: !7330, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8197)
!8197 = !{!8198, !8199, !8200}
!8198 = !DILocalVariable(name: "port", arg: 1, scope: !8196, file: !1001, line: 311, type: !103)
!8199 = !DILocalVariable(name: "pin", arg: 2, scope: !8196, file: !1001, line: 311, type: !103)
!8200 = !DILocalVariable(name: "line", scope: !8196, file: !1001, line: 313, type: !121)
!8201 = !DILocation(line: 0, scope: !8196)
!8202 = !DILocation(line: 313, column: 18, scope: !8196)
!8203 = !DILocation(line: 337, column: 2, scope: !8196)
!8204 = !DILocation(line: 340, column: 1, scope: !8196)
!8205 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1001, file: !1001, line: 295, type: !8206, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8208)
!8206 = !DISubroutineType(types: !8207)
!8207 = !{!121, !103}
!8208 = !{!8209}
!8209 = !DILocalVariable(name: "pin", arg: 1, scope: !8205, file: !1001, line: 295, type: !103)
!8210 = !DILocation(line: 0, scope: !8205)
!8211 = !DILocation(line: 307, column: 46, scope: !8205)
!8212 = !DILocation(line: 307, column: 27, scope: !8205)
!8213 = !DILocation(line: 307, column: 32, scope: !8205)
!8214 = !DILocation(line: 307, column: 14, scope: !8205)
!8215 = !DILocation(line: 307, column: 39, scope: !8205)
!8216 = !DILocation(line: 307, column: 2, scope: !8205)
!8217 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5311, file: !5311, line: 671, type: !8218, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8220)
!8218 = !DISubroutineType(types: !8219)
!8219 = !{null, !121, !121}
!8220 = !{!8221, !8222}
!8221 = !DILocalVariable(name: "Port", arg: 1, scope: !8217, file: !5311, line: 671, type: !121)
!8222 = !DILocalVariable(name: "Line", arg: 2, scope: !8217, file: !5311, line: 671, type: !121)
!8223 = !DILocation(line: 0, scope: !8217)
!8224 = !DILocation(line: 673, column: 3, scope: !8217)
!8225 = !DILocalVariable(name: "value", arg: 1, scope: !8226, file: !5464, line: 373, type: !121)
!8226 = distinct !DISubprogram(name: "__RBIT", scope: !5464, file: !5464, line: 373, type: !6472, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8227)
!8227 = !{!8225, !8228}
!8228 = !DILocalVariable(name: "result", scope: !8226, file: !5464, line: 375, type: !121)
!8229 = !DILocation(line: 0, scope: !8226, inlinedAt: !8230)
!8230 = distinct !DILocation(line: 673, column: 3, scope: !8217)
!8231 = !DILocation(line: 380, column: 4, scope: !8226, inlinedAt: !8230)
!8232 = !{i64 2831757}
!8233 = !DILocalVariable(name: "value", arg: 1, scope: !8234, file: !5464, line: 403, type: !121)
!8234 = distinct !DISubprogram(name: "__CLZ", scope: !5464, file: !5464, line: 403, type: !8235, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8237)
!8235 = !DISubroutineType(types: !8236)
!8236 = !{!154, !121}
!8237 = !{!8233}
!8238 = !DILocation(line: 0, scope: !8234, inlinedAt: !8239)
!8239 = distinct !DILocation(line: 673, column: 3, scope: !8217)
!8240 = !DILocation(line: 414, column: 7, scope: !8234, inlinedAt: !8239)
!8241 = !DILocation(line: 674, column: 1, scope: !8217)
!8242 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !7999, file: !7999, line: 69, type: !8243, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8245)
!8243 = !DISubroutineType(types: !8244)
!8244 = !{null, !8002, !860, !121}
!8245 = !{!8246, !8247, !8248, !8249, !8250}
!8246 = !DILocalVariable(name: "list", arg: 1, scope: !8242, file: !7999, line: 69, type: !8002)
!8247 = !DILocalVariable(name: "port", arg: 2, scope: !8242, file: !7999, line: 70, type: !860)
!8248 = !DILocalVariable(name: "pins", arg: 3, scope: !8242, file: !7999, line: 71, type: !121)
!8249 = !DILocalVariable(name: "cb", scope: !8242, file: !7999, line: 73, type: !902)
!8250 = !DILocalVariable(name: "tmp", scope: !8242, file: !7999, line: 73, type: !902)
!8251 = !DILocation(line: 0, scope: !8242)
!8252 = !DILocation(line: 75, column: 2, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8242, file: !7999, line: 75, column: 2)
!8254 = !DILocation(line: 0, scope: !8253)
!8255 = !DILocation(line: 76, column: 11, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8257, file: !7999, line: 76, column: 7)
!8257 = distinct !DILexicalBlock(scope: !8258, file: !7999, line: 75, column: 57)
!8258 = distinct !DILexicalBlock(scope: !8253, file: !7999, line: 75, column: 2)
!8259 = !DILocation(line: 76, column: 20, scope: !8256)
!8260 = !DILocation(line: 76, column: 7, scope: !8257)
!8261 = !DILocation(line: 78, column: 8, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8256, file: !7999, line: 76, column: 28)
!8263 = !DILocation(line: 78, column: 4, scope: !8262)
!8264 = !DILocation(line: 79, column: 3, scope: !8262)
!8265 = !DILocation(line: 75, column: 2, scope: !8258)
!8266 = !DILocation(line: 81, column: 1, scope: !8242)
!8267 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5311, file: !5311, line: 710, type: !6472, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8268)
!8268 = !{!8269}
!8269 = !DILocalVariable(name: "Line", arg: 1, scope: !8267, file: !5311, line: 710, type: !121)
!8270 = !DILocation(line: 0, scope: !8267)
!8271 = !DILocation(line: 712, column: 21, scope: !8267)
!8272 = !DILocation(line: 0, scope: !8226, inlinedAt: !8273)
!8273 = distinct !DILocation(line: 712, column: 76, scope: !8267)
!8274 = !DILocation(line: 380, column: 4, scope: !8226, inlinedAt: !8273)
!8275 = !DILocation(line: 0, scope: !8234, inlinedAt: !8276)
!8276 = distinct !DILocation(line: 712, column: 76, scope: !8267)
!8277 = !DILocation(line: 414, column: 7, scope: !8234, inlinedAt: !8276)
!8278 = !DILocation(line: 712, column: 73, scope: !8267)
!8279 = !DILocation(line: 712, column: 3, scope: !8267)
!8280 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !8281, file: !8281, line: 910, type: !8282, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8284)
!8281 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8282 = !DISubroutineType(types: !8283)
!8283 = !{null, !933, !121}
!8284 = !{!8285, !8286}
!8285 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8280, file: !8281, line: 910, type: !933)
!8286 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8280, file: !8281, line: 910, type: !121)
!8287 = !DILocation(line: 0, scope: !8280)
!8288 = !DILocation(line: 912, column: 3, scope: !8280)
!8289 = !DILocation(line: 913, column: 1, scope: !8280)
!8290 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !8281, file: !8281, line: 823, type: !8291, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8293)
!8291 = !DISubroutineType(types: !8292)
!8292 = !{!121, !933}
!8293 = !{!8294}
!8294 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8290, file: !8281, line: 823, type: !933)
!8295 = !DILocation(line: 0, scope: !8290)
!8296 = !DILocation(line: 825, column: 21, scope: !8290)
!8297 = !DILocation(line: 825, column: 3, scope: !8290)
!8298 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !8281, file: !8281, line: 812, type: !8282, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8299)
!8299 = !{!8300, !8301}
!8300 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8298, file: !8281, line: 812, type: !933)
!8301 = !DILocalVariable(name: "PortValue", arg: 2, scope: !8298, file: !8281, line: 812, type: !121)
!8302 = !DILocation(line: 0, scope: !8298)
!8303 = !DILocation(line: 814, column: 3, scope: !8298)
!8304 = !DILocation(line: 815, column: 1, scope: !8298)
!8305 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !8281, file: !8281, line: 771, type: !8291, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8306)
!8306 = !{!8307}
!8307 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8305, file: !8281, line: 771, type: !933)
!8308 = !DILocation(line: 0, scope: !8305)
!8309 = !DILocation(line: 773, column: 21, scope: !8305)
!8310 = !DILocation(line: 773, column: 3, scope: !8305)
!8311 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1001, file: !1001, line: 47, type: !8312, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8314)
!8312 = !DISubroutineType(types: !8313)
!8313 = !{!103, !876, !2349}
!8314 = !{!8315, !8316}
!8315 = !DILocalVariable(name: "flags", arg: 1, scope: !8311, file: !1001, line: 47, type: !876)
!8316 = !DILocalVariable(name: "pincfg", arg: 2, scope: !8311, file: !1001, line: 47, type: !2349)
!8317 = !DILocation(line: 0, scope: !8311)
!8318 = !DILocation(line: 50, column: 13, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8311, file: !1001, line: 50, column: 6)
!8320 = !DILocation(line: 50, column: 28, scope: !8319)
!8321 = !DILocation(line: 50, column: 6, scope: !8311)
!8322 = !DILocation(line: 53, column: 11, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8319, file: !1001, line: 50, column: 34)
!8324 = !DILocation(line: 55, column: 14, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8323, file: !1001, line: 55, column: 7)
!8326 = !DILocation(line: 55, column: 35, scope: !8325)
!8327 = !DILocation(line: 55, column: 7, scope: !8323)
!8328 = !DILocation(line: 56, column: 14, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8330, file: !1001, line: 56, column: 8)
!8330 = distinct !DILexicalBlock(scope: !8325, file: !1001, line: 55, column: 41)
!8331 = !DILocation(line: 56, column: 8, scope: !8330)
!8332 = !DILocation(line: 0, scope: !8325)
!8333 = !DILocation(line: 66, column: 14, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8323, file: !1001, line: 66, column: 7)
!8335 = !DILocation(line: 66, column: 30, scope: !8334)
!8336 = !DILocation(line: 66, column: 7, scope: !8323)
!8337 = !DILocation(line: 67, column: 12, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8334, file: !1001, line: 66, column: 36)
!8339 = !DILocation(line: 68, column: 3, scope: !8338)
!8340 = !DILocation(line: 68, column: 21, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8334, file: !1001, line: 68, column: 14)
!8342 = !DILocation(line: 68, column: 39, scope: !8341)
!8343 = !DILocation(line: 68, column: 14, scope: !8334)
!8344 = !DILocation(line: 69, column: 12, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !8341, file: !1001, line: 68, column: 45)
!8346 = !DILocation(line: 70, column: 3, scope: !8345)
!8347 = !DILocation(line: 72, column: 21, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8319, file: !1001, line: 72, column: 14)
!8349 = !DILocation(line: 72, column: 35, scope: !8348)
!8350 = !DILocation(line: 72, column: 14, scope: !8319)
!8351 = !DILocation(line: 77, column: 14, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8353, file: !1001, line: 77, column: 7)
!8353 = distinct !DILexicalBlock(scope: !8348, file: !1001, line: 72, column: 41)
!8354 = !DILocation(line: 77, column: 30, scope: !8352)
!8355 = !DILocation(line: 77, column: 7, scope: !8353)
!8356 = !DILocation(line: 0, scope: !8319)
!8357 = !DILocation(line: 90, column: 1, scope: !8311)
!8358 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1001, file: !1001, line: 157, type: !8359, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8361)
!8359 = !DISubroutineType(types: !8360)
!8360 = !{null, !860, !103, !103, !103}
!8361 = !{!8362, !8363, !8364, !8365, !8366, !8367, !8368, !8369, !8370, !8371, !8372}
!8362 = !DILocalVariable(name: "dev", arg: 1, scope: !8358, file: !1001, line: 157, type: !860)
!8363 = !DILocalVariable(name: "pin", arg: 2, scope: !8358, file: !1001, line: 157, type: !103)
!8364 = !DILocalVariable(name: "conf", arg: 3, scope: !8358, file: !1001, line: 158, type: !103)
!8365 = !DILocalVariable(name: "func", arg: 4, scope: !8358, file: !1001, line: 158, type: !103)
!8366 = !DILocalVariable(name: "cfg", scope: !8358, file: !1001, line: 160, type: !7883)
!8367 = !DILocalVariable(name: "gpio", scope: !8358, file: !1001, line: 161, type: !933)
!8368 = !DILocalVariable(name: "pin_ll", scope: !8358, file: !1001, line: 163, type: !103)
!8369 = !DILocalVariable(name: "mode", scope: !8358, file: !1001, line: 227, type: !32)
!8370 = !DILocalVariable(name: "otype", scope: !8358, file: !1001, line: 227, type: !32)
!8371 = !DILocalVariable(name: "ospeed", scope: !8358, file: !1001, line: 227, type: !32)
!8372 = !DILocalVariable(name: "pupd", scope: !8358, file: !1001, line: 227, type: !32)
!8373 = !DILocation(line: 0, scope: !8358)
!8374 = !DILocation(line: 160, column: 45, scope: !8358)
!8375 = !DILocation(line: 161, column: 44, scope: !8358)
!8376 = !DILocation(line: 163, column: 15, scope: !8358)
!8377 = !DILocation(line: 229, column: 14, scope: !8358)
!8378 = !DILocation(line: 246, column: 47, scope: !8358)
!8379 = !DILocation(line: 246, column: 2, scope: !8358)
!8380 = !DILocation(line: 248, column: 43, scope: !8358)
!8381 = !DILocation(line: 248, column: 2, scope: !8358)
!8382 = !DILocation(line: 250, column: 40, scope: !8358)
!8383 = !DILocation(line: 250, column: 2, scope: !8358)
!8384 = !DILocation(line: 252, column: 11, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8358, file: !1001, line: 252, column: 6)
!8386 = !DILocation(line: 252, column: 6, scope: !8358)
!8387 = !DILocation(line: 253, column: 11, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8389, file: !1001, line: 253, column: 7)
!8389 = distinct !DILexicalBlock(scope: !8385, file: !1001, line: 252, column: 36)
!8390 = !DILocation(line: 253, column: 7, scope: !8389)
!8391 = !DILocation(line: 254, column: 4, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8388, file: !1001, line: 253, column: 16)
!8393 = !DILocation(line: 255, column: 3, scope: !8392)
!8394 = !DILocation(line: 256, column: 4, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8388, file: !1001, line: 255, column: 10)
!8396 = !DILocation(line: 260, column: 40, scope: !8358)
!8397 = !DILocation(line: 260, column: 2, scope: !8358)
!8398 = !DILocation(line: 265, column: 1, scope: !8358)
!8399 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1001, file: !1001, line: 137, type: !8206, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8400)
!8400 = !{!8401, !8402}
!8401 = !DILocalVariable(name: "pin", arg: 1, scope: !8399, file: !1001, line: 137, type: !103)
!8402 = !DILocalVariable(name: "pinval", scope: !8399, file: !1001, line: 139, type: !121)
!8403 = !DILocation(line: 0, scope: !8399)
!8404 = !DILocation(line: 149, column: 13, scope: !8399)
!8405 = !DILocation(line: 151, column: 2, scope: !8399)
!8406 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !8281, file: !8281, line: 342, type: !8407, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8409)
!8407 = !DISubroutineType(types: !8408)
!8408 = !{null, !933, !121, !121}
!8409 = !{!8410, !8411, !8412}
!8410 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8406, file: !8281, line: 342, type: !933)
!8411 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8406, file: !8281, line: 342, type: !121)
!8412 = !DILocalVariable(name: "OutputType", arg: 3, scope: !8406, file: !8281, line: 342, type: !121)
!8413 = !DILocation(line: 0, scope: !8406)
!8414 = !DILocation(line: 344, column: 3, scope: !8406)
!8415 = !DILocation(line: 345, column: 1, scope: !8406)
!8416 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !8281, file: !8281, line: 413, type: !8407, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8417)
!8417 = !{!8418, !8419, !8420}
!8418 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8416, file: !8281, line: 413, type: !933)
!8419 = !DILocalVariable(name: "Pin", arg: 2, scope: !8416, file: !8281, line: 413, type: !121)
!8420 = !DILocalVariable(name: "Speed", arg: 3, scope: !8416, file: !8281, line: 413, type: !121)
!8421 = !DILocation(line: 0, scope: !8416)
!8422 = !DILocation(line: 415, column: 3, scope: !8416)
!8423 = !DILocation(line: 0, scope: !8226, inlinedAt: !8424)
!8424 = distinct !DILocation(line: 415, column: 3, scope: !8416)
!8425 = !DILocation(line: 380, column: 4, scope: !8226, inlinedAt: !8424)
!8426 = !DILocation(line: 0, scope: !8234, inlinedAt: !8427)
!8427 = distinct !DILocation(line: 415, column: 3, scope: !8416)
!8428 = !DILocation(line: 414, column: 7, scope: !8234, inlinedAt: !8427)
!8429 = !DILocation(line: 0, scope: !8226, inlinedAt: !8430)
!8430 = distinct !DILocation(line: 415, column: 3, scope: !8416)
!8431 = !DILocation(line: 0, scope: !8234, inlinedAt: !8432)
!8432 = distinct !DILocation(line: 415, column: 3, scope: !8416)
!8433 = !DILocation(line: 417, column: 1, scope: !8416)
!8434 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !8281, file: !8281, line: 484, type: !8407, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8435)
!8435 = !{!8436, !8437, !8438}
!8436 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8434, file: !8281, line: 484, type: !933)
!8437 = !DILocalVariable(name: "Pin", arg: 2, scope: !8434, file: !8281, line: 484, type: !121)
!8438 = !DILocalVariable(name: "Pull", arg: 3, scope: !8434, file: !8281, line: 484, type: !121)
!8439 = !DILocation(line: 0, scope: !8434)
!8440 = !DILocation(line: 486, column: 3, scope: !8434)
!8441 = !DILocation(line: 0, scope: !8226, inlinedAt: !8442)
!8442 = distinct !DILocation(line: 486, column: 3, scope: !8434)
!8443 = !DILocation(line: 380, column: 4, scope: !8226, inlinedAt: !8442)
!8444 = !DILocation(line: 0, scope: !8234, inlinedAt: !8445)
!8445 = distinct !DILocation(line: 486, column: 3, scope: !8434)
!8446 = !DILocation(line: 414, column: 7, scope: !8234, inlinedAt: !8445)
!8447 = !DILocation(line: 0, scope: !8226, inlinedAt: !8448)
!8448 = distinct !DILocation(line: 486, column: 3, scope: !8434)
!8449 = !DILocation(line: 0, scope: !8234, inlinedAt: !8450)
!8450 = distinct !DILocation(line: 486, column: 3, scope: !8434)
!8451 = !DILocation(line: 487, column: 1, scope: !8434)
!8452 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !8281, file: !8281, line: 556, type: !8407, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8453)
!8453 = !{!8454, !8455, !8456}
!8454 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8452, file: !8281, line: 556, type: !933)
!8455 = !DILocalVariable(name: "Pin", arg: 2, scope: !8452, file: !8281, line: 556, type: !121)
!8456 = !DILocalVariable(name: "Alternate", arg: 3, scope: !8452, file: !8281, line: 556, type: !121)
!8457 = !DILocation(line: 0, scope: !8452)
!8458 = !DILocation(line: 558, column: 3, scope: !8452)
!8459 = !DILocation(line: 0, scope: !8226, inlinedAt: !8460)
!8460 = distinct !DILocation(line: 558, column: 3, scope: !8452)
!8461 = !DILocation(line: 380, column: 4, scope: !8226, inlinedAt: !8460)
!8462 = !DILocation(line: 0, scope: !8234, inlinedAt: !8463)
!8463 = distinct !DILocation(line: 558, column: 3, scope: !8452)
!8464 = !DILocation(line: 414, column: 7, scope: !8234, inlinedAt: !8463)
!8465 = !DILocation(line: 0, scope: !8226, inlinedAt: !8466)
!8466 = distinct !DILocation(line: 558, column: 3, scope: !8452)
!8467 = !DILocation(line: 0, scope: !8234, inlinedAt: !8468)
!8468 = distinct !DILocation(line: 558, column: 3, scope: !8452)
!8469 = !DILocation(line: 560, column: 1, scope: !8452)
!8470 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !8281, file: !8281, line: 633, type: !8407, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8471)
!8471 = !{!8472, !8473, !8474}
!8472 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8470, file: !8281, line: 633, type: !933)
!8473 = !DILocalVariable(name: "Pin", arg: 2, scope: !8470, file: !8281, line: 633, type: !121)
!8474 = !DILocalVariable(name: "Alternate", arg: 3, scope: !8470, file: !8281, line: 633, type: !121)
!8475 = !DILocation(line: 0, scope: !8470)
!8476 = !DILocation(line: 635, column: 3, scope: !8470)
!8477 = !DILocation(line: 0, scope: !8226, inlinedAt: !8478)
!8478 = distinct !DILocation(line: 635, column: 3, scope: !8470)
!8479 = !DILocation(line: 380, column: 4, scope: !8226, inlinedAt: !8478)
!8480 = !DILocation(line: 0, scope: !8234, inlinedAt: !8481)
!8481 = distinct !DILocation(line: 635, column: 3, scope: !8470)
!8482 = !DILocation(line: 414, column: 7, scope: !8234, inlinedAt: !8481)
!8483 = !DILocation(line: 0, scope: !8226, inlinedAt: !8484)
!8484 = distinct !DILocation(line: 635, column: 3, scope: !8470)
!8485 = !DILocation(line: 0, scope: !8234, inlinedAt: !8486)
!8486 = distinct !DILocation(line: 635, column: 3, scope: !8470)
!8487 = !DILocation(line: 637, column: 1, scope: !8470)
!8488 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !8281, file: !8281, line: 273, type: !8407, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8489)
!8489 = !{!8490, !8491, !8492}
!8490 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8488, file: !8281, line: 273, type: !933)
!8491 = !DILocalVariable(name: "Pin", arg: 2, scope: !8488, file: !8281, line: 273, type: !121)
!8492 = !DILocalVariable(name: "Mode", arg: 3, scope: !8488, file: !8281, line: 273, type: !121)
!8493 = !DILocation(line: 0, scope: !8488)
!8494 = !DILocation(line: 275, column: 3, scope: !8488)
!8495 = !DILocation(line: 0, scope: !8226, inlinedAt: !8496)
!8496 = distinct !DILocation(line: 275, column: 3, scope: !8488)
!8497 = !DILocation(line: 380, column: 4, scope: !8226, inlinedAt: !8496)
!8498 = !DILocation(line: 0, scope: !8234, inlinedAt: !8499)
!8499 = distinct !DILocation(line: 275, column: 3, scope: !8488)
!8500 = !DILocation(line: 414, column: 7, scope: !8234, inlinedAt: !8499)
!8501 = !DILocation(line: 0, scope: !8226, inlinedAt: !8502)
!8502 = distinct !DILocation(line: 275, column: 3, scope: !8488)
!8503 = !DILocation(line: 0, scope: !8234, inlinedAt: !8504)
!8504 = distinct !DILocation(line: 275, column: 3, scope: !8488)
!8505 = !DILocation(line: 276, column: 1, scope: !8488)
!8506 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1001, file: !1001, line: 698, type: !1014, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8507)
!8507 = !{!8508, !8509, !8510}
!8508 = !DILocalVariable(name: "dev", arg: 1, scope: !8506, file: !1001, line: 698, type: !860)
!8509 = !DILocalVariable(name: "data", scope: !8506, file: !1001, line: 700, type: !7950)
!8510 = !DILocalVariable(name: "ret", scope: !8506, file: !1001, line: 701, type: !103)
!8511 = !DILocation(line: 0, scope: !8506)
!8512 = !DILocation(line: 700, column: 38, scope: !8506)
!8513 = !DILocation(line: 703, column: 8, scope: !8506)
!8514 = !DILocation(line: 703, column: 12, scope: !8506)
!8515 = !DILocation(line: 705, column: 7, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8506, file: !1001, line: 705, column: 6)
!8517 = !DILocation(line: 705, column: 6, scope: !8506)
!8518 = !DILocation(line: 722, column: 8, scope: !8506)
!8519 = !DILocation(line: 723, column: 10, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8506, file: !1001, line: 723, column: 6)
!8521 = !DILocation(line: 723, column: 6, scope: !8506)
!8522 = !DILocation(line: 731, column: 1, scope: !8506)
!8523 = distinct !DISubprogram(name: "device_is_ready", scope: !3056, file: !3056, line: 47, type: !8524, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8526)
!8524 = !DISubroutineType(types: !8525)
!8525 = !{!157, !860}
!8526 = !{!8527}
!8527 = !DILocalVariable(name: "dev", arg: 1, scope: !8523, file: !3056, line: 47, type: !860)
!8528 = !DILocation(line: 0, scope: !8523)
!8529 = !DILocation(line: 55, column: 2, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8523, file: !3056, line: 55, column: 2)
!8531 = !{i64 2154257352}
!8532 = !DILocation(line: 56, column: 9, scope: !8523)
!8533 = !DILocation(line: 56, column: 2, scope: !8523)
!8534 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1001, file: !1001, line: 270, type: !8535, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8537)
!8535 = !DISubroutineType(types: !8536)
!8536 = !{!103, !860, !157}
!8537 = !{!8538, !8539, !8540, !8541, !8542}
!8538 = !DILocalVariable(name: "dev", arg: 1, scope: !8534, file: !1001, line: 270, type: !860)
!8539 = !DILocalVariable(name: "on", arg: 2, scope: !8534, file: !1001, line: 270, type: !157)
!8540 = !DILocalVariable(name: "cfg", scope: !8534, file: !1001, line: 272, type: !7883)
!8541 = !DILocalVariable(name: "ret", scope: !8534, file: !1001, line: 273, type: !103)
!8542 = !DILocalVariable(name: "clk", scope: !8534, file: !1001, line: 278, type: !8173)
!8543 = !DILocation(line: 0, scope: !8534)
!8544 = !DILocation(line: 272, column: 45, scope: !8534)
!8545 = !DILocation(line: 282, column: 38, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8547, file: !1001, line: 280, column: 10)
!8547 = distinct !DILexicalBlock(scope: !8534, file: !1001, line: 280, column: 6)
!8548 = !DILocation(line: 282, column: 6, scope: !8546)
!8549 = !DILocation(line: 281, column: 9, scope: !8546)
!8550 = !DILocation(line: 293, column: 1, scope: !8534)
!8551 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !8524, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8552)
!8552 = !{!8553}
!8553 = !DILocalVariable(name: "dev", arg: 1, scope: !8551, file: !141, line: 730, type: !860)
!8554 = !DILocation(line: 0, scope: !8551)
!8555 = !DILocation(line: 732, column: 9, scope: !8551)
!8556 = !DILocation(line: 732, column: 2, scope: !8551)
!8557 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1001, file: !1001, line: 496, type: !8558, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8560)
!8558 = !DISubroutineType(types: !8559)
!8559 = !{!103, !860, !103, !103, !103}
!8560 = !{!8561, !8562, !8563, !8564, !8565, !8566}
!8561 = !DILocalVariable(name: "dev", arg: 1, scope: !8557, file: !1001, line: 496, type: !860)
!8562 = !DILocalVariable(name: "pin", arg: 2, scope: !8557, file: !1001, line: 496, type: !103)
!8563 = !DILocalVariable(name: "conf", arg: 3, scope: !8557, file: !1001, line: 496, type: !103)
!8564 = !DILocalVariable(name: "func", arg: 4, scope: !8557, file: !1001, line: 496, type: !103)
!8565 = !DILocalVariable(name: "ret", scope: !8557, file: !1001, line: 498, type: !103)
!8566 = !DILocalVariable(name: "gpio_out", scope: !8567, file: !1001, line: 508, type: !121)
!8567 = distinct !DILexicalBlock(scope: !8568, file: !1001, line: 507, column: 27)
!8568 = distinct !DILexicalBlock(scope: !8557, file: !1001, line: 507, column: 6)
!8569 = !DILocation(line: 0, scope: !8557)
!8570 = !DILocation(line: 505, column: 2, scope: !8557)
!8571 = !DILocation(line: 507, column: 11, scope: !8568)
!8572 = !DILocation(line: 507, column: 6, scope: !8557)
!8573 = !DILocation(line: 508, column: 28, scope: !8567)
!8574 = !DILocation(line: 0, scope: !8567)
!8575 = !DILocation(line: 510, column: 16, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8567, file: !1001, line: 510, column: 7)
!8577 = !DILocation(line: 0, scope: !8576)
!8578 = !DILocation(line: 510, column: 7, scope: !8567)
!8579 = !DILocation(line: 511, column: 4, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8576, file: !1001, line: 510, column: 32)
!8581 = !DILocation(line: 512, column: 3, scope: !8580)
!8582 = !DILocation(line: 513, column: 4, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8584, file: !1001, line: 512, column: 39)
!8584 = distinct !DILexicalBlock(scope: !8576, file: !1001, line: 512, column: 14)
!8585 = !DILocation(line: 514, column: 3, scope: !8583)
!8586 = !DILocation(line: 518, column: 1, scope: !8557)
!8587 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1276, file: !1276, line: 526, type: !1177, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8588)
!8588 = !{!8589, !8590, !8591}
!8589 = !DILocalVariable(name: "dev", arg: 1, scope: !8587, file: !1276, line: 526, type: !1179)
!8590 = !DILocalVariable(name: "c", arg: 2, scope: !8587, file: !1276, line: 526, type: !792)
!8591 = !DILocalVariable(name: "config", scope: !8587, file: !1276, line: 528, type: !8592)
!8592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 32)
!8593 = !DILocation(line: 0, scope: !8587)
!8594 = !DILocation(line: 528, column: 48, scope: !8587)
!8595 = !DILocation(line: 531, column: 40, scope: !8596)
!8596 = distinct !DILexicalBlock(scope: !8587, file: !1276, line: 531, column: 6)
!8597 = !DILocation(line: 531, column: 6, scope: !8596)
!8598 = !DILocation(line: 531, column: 6, scope: !8587)
!8599 = !DILocation(line: 532, column: 34, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8596, file: !1276, line: 531, column: 48)
!8601 = !DILocation(line: 532, column: 3, scope: !8600)
!8602 = !DILocation(line: 533, column: 2, scope: !8600)
!8603 = !DILocation(line: 539, column: 42, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8587, file: !1276, line: 539, column: 6)
!8605 = !DILocation(line: 539, column: 7, scope: !8604)
!8606 = !DILocation(line: 539, column: 6, scope: !8587)
!8607 = !DILocation(line: 543, column: 52, scope: !8587)
!8608 = !DILocation(line: 543, column: 22, scope: !8587)
!8609 = !DILocation(line: 543, column: 5, scope: !8587)
!8610 = !DILocation(line: 545, column: 2, scope: !8587)
!8611 = !DILocation(line: 546, column: 1, scope: !8587)
!8612 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1276, file: !1276, line: 548, type: !1196, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8613)
!8613 = !{!8614, !8615, !8616, !8617}
!8614 = !DILocalVariable(name: "dev", arg: 1, scope: !8612, file: !1276, line: 548, type: !1179)
!8615 = !DILocalVariable(name: "c", arg: 2, scope: !8612, file: !1276, line: 549, type: !155)
!8616 = !DILocalVariable(name: "config", scope: !8612, file: !1276, line: 551, type: !8592)
!8617 = !DILocalVariable(name: "key", scope: !8612, file: !1276, line: 555, type: !32)
!8618 = !DILocation(line: 0, scope: !8612)
!8619 = !DILocation(line: 551, column: 48, scope: !8612)
!8620 = !DILocation(line: 562, column: 2, scope: !8612)
!8621 = !DILocation(line: 563, column: 41, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8623, file: !1276, line: 563, column: 7)
!8623 = distinct !DILexicalBlock(scope: !8612, file: !1276, line: 562, column: 12)
!8624 = !DILocation(line: 563, column: 7, scope: !8622)
!8625 = !DILocation(line: 563, column: 7, scope: !8623)
!8626 = !DILocation(line: 55, column: 2, scope: !8627, inlinedAt: !8631)
!8627 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5290, file: !5290, line: 42, type: !5291, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8628)
!8628 = !{!8629, !8630}
!8629 = !DILocalVariable(name: "key", scope: !8627, file: !5290, line: 44, type: !32)
!8630 = !DILocalVariable(name: "tmp", scope: !8627, file: !5290, line: 53, type: !32)
!8631 = distinct !DILocation(line: 564, column: 10, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8622, file: !1276, line: 563, column: 49)
!8633 = !{i64 1997302}
!8634 = !DILocation(line: 0, scope: !8627, inlinedAt: !8631)
!8635 = !DILocation(line: 565, column: 42, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8632, file: !1276, line: 565, column: 8)
!8637 = !DILocation(line: 565, column: 8, scope: !8636)
!8638 = !DILocation(line: 565, column: 8, scope: !8632)
!8639 = !DILocalVariable(name: "key", arg: 1, scope: !8640, file: !5290, line: 84, type: !32)
!8640 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5290, file: !5290, line: 84, type: !5301, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8641)
!8641 = !{!8639}
!8642 = !DILocation(line: 0, scope: !8640, inlinedAt: !8643)
!8643 = distinct !DILocation(line: 568, column: 4, scope: !8632)
!8644 = !DILocation(line: 95, column: 2, scope: !8640, inlinedAt: !8643)
!8645 = !{i64 1998119}
!8646 = !DILocation(line: 569, column: 3, scope: !8632)
!8647 = distinct !{!8647, !8620, !8648}
!8648 = !DILocation(line: 570, column: 2, scope: !8612)
!8649 = !DILocation(line: 592, column: 33, scope: !8612)
!8650 = !DILocation(line: 592, column: 2, scope: !8612)
!8651 = !DILocation(line: 0, scope: !8640, inlinedAt: !8652)
!8652 = distinct !DILocation(line: 593, column: 2, scope: !8612)
!8653 = !DILocation(line: 95, column: 2, scope: !8640, inlinedAt: !8652)
!8654 = !DILocation(line: 594, column: 1, scope: !8612)
!8655 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1276, file: !1276, line: 596, type: !1200, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8656)
!8656 = !{!8657, !8658, !8659}
!8657 = !DILocalVariable(name: "dev", arg: 1, scope: !8655, file: !1276, line: 596, type: !1179)
!8658 = !DILocalVariable(name: "config", scope: !8655, file: !1276, line: 598, type: !8592)
!8659 = !DILocalVariable(name: "err", scope: !8655, file: !1276, line: 599, type: !121)
!8660 = !DILocation(line: 0, scope: !8655)
!8661 = !DILocation(line: 598, column: 48, scope: !8655)
!8662 = !DILocation(line: 606, column: 40, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8655, file: !1276, line: 606, column: 6)
!8664 = !DILocation(line: 606, column: 6, scope: !8663)
!8665 = !DILocation(line: 606, column: 6, scope: !8655)
!8666 = !DILocation(line: 610, column: 39, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8655, file: !1276, line: 610, column: 6)
!8668 = !DILocation(line: 610, column: 6, scope: !8667)
!8669 = !DILocation(line: 610, column: 6, scope: !8655)
!8670 = !DILocation(line: 614, column: 39, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !8655, file: !1276, line: 614, column: 6)
!8672 = !DILocation(line: 614, column: 6, scope: !8671)
!8673 = !DILocation(line: 614, column: 6, scope: !8655)
!8674 = !DILocation(line: 619, column: 40, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8655, file: !1276, line: 619, column: 6)
!8676 = !DILocation(line: 619, column: 6, scope: !8675)
!8677 = !DILocation(line: 619, column: 6, scope: !8655)
!8678 = !DILocation(line: 623, column: 10, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8655, file: !1276, line: 623, column: 6)
!8680 = !DILocation(line: 623, column: 6, scope: !8655)
!8681 = !DILocation(line: 624, column: 34, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8679, file: !1276, line: 623, column: 24)
!8683 = !DILocation(line: 624, column: 3, scope: !8682)
!8684 = !DILocation(line: 625, column: 2, scope: !8682)
!8685 = !DILocation(line: 632, column: 10, scope: !8686)
!8686 = distinct !DILexicalBlock(scope: !8655, file: !1276, line: 632, column: 6)
!8687 = !DILocation(line: 632, column: 6, scope: !8655)
!8688 = !DILocation(line: 633, column: 34, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8686, file: !1276, line: 632, column: 32)
!8690 = !DILocation(line: 633, column: 3, scope: !8689)
!8691 = !DILocation(line: 634, column: 2, scope: !8689)
!8692 = !DILocation(line: 636, column: 10, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8655, file: !1276, line: 636, column: 6)
!8694 = !DILocation(line: 636, column: 6, scope: !8655)
!8695 = !DILocation(line: 637, column: 33, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8693, file: !1276, line: 636, column: 31)
!8697 = !DILocation(line: 637, column: 3, scope: !8696)
!8698 = !DILocation(line: 638, column: 2, scope: !8696)
!8699 = !DILocation(line: 640, column: 10, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8655, file: !1276, line: 640, column: 6)
!8701 = !DILocation(line: 640, column: 6, scope: !8655)
!8702 = !DILocation(line: 641, column: 33, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8700, file: !1276, line: 640, column: 32)
!8704 = !DILocation(line: 641, column: 3, scope: !8703)
!8705 = !DILocation(line: 642, column: 2, scope: !8703)
!8706 = !DILocation(line: 646, column: 32, scope: !8655)
!8707 = !DILocation(line: 646, column: 2, scope: !8655)
!8708 = !DILocation(line: 648, column: 2, scope: !8655)
!8709 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1276, file: !1276, line: 419, type: !1204, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8710)
!8710 = !{!8711, !8712, !8713, !8714, !8716, !8717, !8718, !8719}
!8711 = !DILocalVariable(name: "dev", arg: 1, scope: !8709, file: !1276, line: 419, type: !1179)
!8712 = !DILocalVariable(name: "cfg", arg: 2, scope: !8709, file: !1276, line: 420, type: !1206)
!8713 = !DILocalVariable(name: "config", scope: !8709, file: !1276, line: 422, type: !8592)
!8714 = !DILocalVariable(name: "data", scope: !8709, file: !1276, line: 423, type: !8715)
!8715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 32)
!8716 = !DILocalVariable(name: "parity", scope: !8709, file: !1276, line: 424, type: !5732)
!8717 = !DILocalVariable(name: "stopbits", scope: !8709, file: !1276, line: 425, type: !5732)
!8718 = !DILocalVariable(name: "databits", scope: !8709, file: !1276, line: 426, type: !5732)
!8719 = !DILocalVariable(name: "flowctrl", scope: !8709, file: !1276, line: 428, type: !5732)
!8720 = !DILocation(line: 0, scope: !8709)
!8721 = !DILocation(line: 422, column: 48, scope: !8709)
!8722 = !DILocation(line: 423, column: 38, scope: !8709)
!8723 = !DILocation(line: 424, column: 56, scope: !8709)
!8724 = !DILocation(line: 424, column: 51, scope: !8709)
!8725 = !DILocation(line: 424, column: 26, scope: !8709)
!8726 = !DILocation(line: 425, column: 60, scope: !8709)
!8727 = !DILocation(line: 425, column: 55, scope: !8709)
!8728 = !DILocation(line: 425, column: 28, scope: !8709)
!8729 = !DILocation(line: 426, column: 60, scope: !8709)
!8730 = !DILocation(line: 426, column: 55, scope: !8709)
!8731 = !DILocation(line: 426, column: 28, scope: !8709)
!8732 = !DILocation(line: 428, column: 58, scope: !8709)
!8733 = !DILocation(line: 428, column: 53, scope: !8709)
!8734 = !DILocation(line: 428, column: 28, scope: !8709)
!8735 = !DILocation(line: 431, column: 44, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !8709, file: !1276, line: 431, column: 6)
!8737 = !DILocation(line: 438, column: 22, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8709, file: !1276, line: 437, column: 6)
!8739 = !DILocation(line: 437, column: 6, scope: !8709)
!8740 = !DILocation(line: 448, column: 6, scope: !8709)
!8741 = !DILocation(line: 465, column: 47, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8709, file: !1276, line: 465, column: 6)
!8743 = !DILocation(line: 475, column: 21, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8709, file: !1276, line: 475, column: 6)
!8745 = !DILocation(line: 475, column: 6, scope: !8709)
!8746 = !DILocation(line: 476, column: 8, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8748, file: !1276, line: 476, column: 7)
!8748 = distinct !DILexicalBlock(scope: !8744, file: !1276, line: 475, column: 49)
!8749 = !DILocation(line: 477, column: 34, scope: !8747)
!8750 = !DILocation(line: 476, column: 7, scope: !8748)
!8751 = !DILocation(line: 482, column: 27, scope: !8709)
!8752 = !DILocation(line: 482, column: 2, scope: !8709)
!8753 = !DILocation(line: 484, column: 16, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8709, file: !1276, line: 484, column: 6)
!8755 = !DILocation(line: 484, column: 13, scope: !8754)
!8756 = !DILocation(line: 484, column: 6, scope: !8709)
!8757 = !DILocation(line: 485, column: 3, scope: !8758)
!8758 = distinct !DILexicalBlock(scope: !8754, file: !1276, line: 484, column: 44)
!8759 = !DILocation(line: 486, column: 2, scope: !8758)
!8760 = !DILocation(line: 488, column: 18, scope: !8761)
!8761 = distinct !DILexicalBlock(scope: !8709, file: !1276, line: 488, column: 6)
!8762 = !DILocation(line: 488, column: 15, scope: !8761)
!8763 = !DILocation(line: 488, column: 6, scope: !8709)
!8764 = !DILocation(line: 489, column: 3, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8761, file: !1276, line: 488, column: 48)
!8766 = !DILocation(line: 490, column: 2, scope: !8765)
!8767 = !DILocation(line: 492, column: 18, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8709, file: !1276, line: 492, column: 6)
!8769 = !DILocation(line: 492, column: 15, scope: !8768)
!8770 = !DILocation(line: 492, column: 6, scope: !8709)
!8771 = !DILocation(line: 493, column: 3, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8768, file: !1276, line: 492, column: 48)
!8773 = !DILocation(line: 494, column: 2, scope: !8772)
!8774 = !DILocation(line: 496, column: 18, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8709, file: !1276, line: 496, column: 6)
!8776 = !DILocation(line: 496, column: 15, scope: !8775)
!8777 = !DILocation(line: 496, column: 6, scope: !8709)
!8778 = !DILocation(line: 497, column: 3, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8775, file: !1276, line: 496, column: 46)
!8780 = !DILocation(line: 498, column: 2, scope: !8779)
!8781 = !DILocation(line: 500, column: 11, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8709, file: !1276, line: 500, column: 6)
!8783 = !DILocation(line: 500, column: 29, scope: !8782)
!8784 = !DILocation(line: 500, column: 20, scope: !8782)
!8785 = !DILocation(line: 500, column: 6, scope: !8709)
!8786 = !DILocation(line: 501, column: 3, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8782, file: !1276, line: 500, column: 40)
!8788 = !DILocation(line: 502, column: 26, scope: !8787)
!8789 = !DILocation(line: 502, column: 19, scope: !8787)
!8790 = !DILocation(line: 503, column: 2, scope: !8787)
!8791 = !DILocation(line: 505, column: 26, scope: !8709)
!8792 = !DILocation(line: 505, column: 2, scope: !8709)
!8793 = !DILocation(line: 506, column: 2, scope: !8709)
!8794 = !DILocation(line: 507, column: 1, scope: !8709)
!8795 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1276, file: !1276, line: 509, type: !1217, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8796)
!8796 = !{!8797, !8798, !8799}
!8797 = !DILocalVariable(name: "dev", arg: 1, scope: !8795, file: !1276, line: 509, type: !1179)
!8798 = !DILocalVariable(name: "cfg", arg: 2, scope: !8795, file: !1276, line: 510, type: !1219)
!8799 = !DILocalVariable(name: "data", scope: !8795, file: !1276, line: 512, type: !8715)
!8800 = !DILocation(line: 0, scope: !8795)
!8801 = !DILocation(line: 512, column: 38, scope: !8795)
!8802 = !DILocation(line: 514, column: 24, scope: !8795)
!8803 = !DILocation(line: 514, column: 7, scope: !8795)
!8804 = !DILocation(line: 514, column: 16, scope: !8795)
!8805 = !DILocation(line: 515, column: 41, scope: !8795)
!8806 = !{i32 0, i32 1537}
!8807 = !DILocation(line: 515, column: 16, scope: !8795)
!8808 = !DILocation(line: 515, column: 7, scope: !8795)
!8809 = !DILocation(line: 515, column: 14, scope: !8795)
!8810 = !DILocation(line: 517, column: 3, scope: !8795)
!8811 = !{i32 0, i32 12289}
!8812 = !DILocation(line: 516, column: 19, scope: !8795)
!8813 = !DILocation(line: 516, column: 7, scope: !8795)
!8814 = !DILocation(line: 516, column: 17, scope: !8795)
!8815 = !DILocation(line: 519, column: 3, scope: !8795)
!8816 = !DILocation(line: 519, column: 33, scope: !8795)
!8817 = !DILocation(line: 518, column: 19, scope: !8795)
!8818 = !DILocation(line: 518, column: 7, scope: !8795)
!8819 = !DILocation(line: 518, column: 17, scope: !8795)
!8820 = !DILocation(line: 521, column: 3, scope: !8795)
!8821 = !{i32 0, i32 769}
!8822 = !DILocation(line: 520, column: 19, scope: !8795)
!8823 = !DILocation(line: 520, column: 7, scope: !8795)
!8824 = !DILocation(line: 520, column: 17, scope: !8795)
!8825 = !DILocation(line: 522, column: 2, scope: !8795)
!8826 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1276, file: !1276, line: 205, type: !8827, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8829)
!8827 = !DISubroutineType(types: !8828)
!8828 = !{!121, !1179}
!8829 = !{!8830, !8831}
!8830 = !DILocalVariable(name: "dev", arg: 1, scope: !8826, file: !1276, line: 205, type: !1179)
!8831 = !DILocalVariable(name: "config", scope: !8826, file: !1276, line: 207, type: !8592)
!8832 = !DILocation(line: 0, scope: !8826)
!8833 = !DILocation(line: 207, column: 48, scope: !8826)
!8834 = !DILocation(line: 209, column: 36, scope: !8826)
!8835 = !DILocation(line: 209, column: 9, scope: !8826)
!8836 = !DILocation(line: 209, column: 2, scope: !8826)
!8837 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1276, file: !1276, line: 270, type: !8838, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8840)
!8838 = !DISubroutineType(types: !8839)
!8839 = !{!1145, !121}
!8840 = !{!8841}
!8841 = !DILocalVariable(name: "parity", arg: 1, scope: !8837, file: !1276, line: 270, type: !121)
!8842 = !DILocation(line: 0, scope: !8837)
!8843 = !DILocation(line: 272, column: 2, scope: !8837)
!8844 = !DILocation(line: 281, column: 1, scope: !8837)
!8845 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1276, file: !1276, line: 220, type: !8827, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8846)
!8846 = !{!8847, !8848}
!8847 = !DILocalVariable(name: "dev", arg: 1, scope: !8845, file: !1276, line: 220, type: !1179)
!8848 = !DILocalVariable(name: "config", scope: !8845, file: !1276, line: 222, type: !8592)
!8849 = !DILocation(line: 0, scope: !8845)
!8850 = !DILocation(line: 222, column: 48, scope: !8845)
!8851 = !DILocation(line: 224, column: 44, scope: !8845)
!8852 = !DILocation(line: 224, column: 9, scope: !8845)
!8853 = !DILocation(line: 224, column: 2, scope: !8845)
!8854 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1276, file: !1276, line: 304, type: !8855, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8857)
!8855 = !DISubroutineType(types: !8856)
!8856 = !{!1159, !121}
!8857 = !{!8858}
!8858 = !DILocalVariable(name: "sb", arg: 1, scope: !8854, file: !1276, line: 304, type: !121)
!8859 = !DILocation(line: 0, scope: !8854)
!8860 = !DILocation(line: 306, column: 2, scope: !8854)
!8861 = !DILocation(line: 0, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8854, file: !1276, line: 306, column: 14)
!8863 = !DILocation(line: 323, column: 1, scope: !8854)
!8864 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1276, file: !1276, line: 235, type: !8827, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8865)
!8865 = !{!8866, !8867}
!8866 = !DILocalVariable(name: "dev", arg: 1, scope: !8864, file: !1276, line: 235, type: !1179)
!8867 = !DILocalVariable(name: "config", scope: !8864, file: !1276, line: 237, type: !8592)
!8868 = !DILocation(line: 0, scope: !8864)
!8869 = !DILocation(line: 237, column: 48, scope: !8864)
!8870 = !DILocation(line: 239, column: 39, scope: !8864)
!8871 = !DILocation(line: 239, column: 9, scope: !8864)
!8872 = !DILocation(line: 239, column: 2, scope: !8864)
!8873 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1276, file: !1276, line: 355, type: !8874, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8876)
!8874 = !DISubroutineType(types: !8875)
!8875 = !{!1152, !121, !121}
!8876 = !{!8877, !8878}
!8877 = !DILocalVariable(name: "db", arg: 1, scope: !8873, file: !1276, line: 355, type: !121)
!8878 = !DILocalVariable(name: "p", arg: 2, scope: !8873, file: !1276, line: 356, type: !121)
!8879 = !DILocation(line: 0, scope: !8873)
!8880 = !DILocation(line: 358, column: 2, scope: !8873)
!8881 = !DILocation(line: 384, column: 1, scope: !8873)
!8882 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1276, file: !1276, line: 250, type: !8827, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8883)
!8883 = !{!8884, !8885}
!8884 = !DILocalVariable(name: "dev", arg: 1, scope: !8882, file: !1276, line: 250, type: !1179)
!8885 = !DILocalVariable(name: "config", scope: !8882, file: !1276, line: 252, type: !8592)
!8886 = !DILocation(line: 0, scope: !8882)
!8887 = !DILocation(line: 252, column: 48, scope: !8882)
!8888 = !DILocation(line: 254, column: 40, scope: !8882)
!8889 = !DILocation(line: 254, column: 9, scope: !8882)
!8890 = !DILocation(line: 254, column: 2, scope: !8882)
!8891 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1276, file: !1276, line: 409, type: !8892, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8894)
!8892 = !DISubroutineType(types: !8893)
!8893 = !{!1165, !121}
!8894 = !{!8895}
!8895 = !DILocalVariable(name: "fc", arg: 1, scope: !8891, file: !1276, line: 409, type: !121)
!8896 = !DILocation(line: 0, scope: !8891)
!8897 = !DILocation(line: 411, column: 9, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8891, file: !1276, line: 411, column: 6)
!8899 = !DILocation(line: 416, column: 1, scope: !8891)
!8900 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !8901, file: !8901, line: 967, type: !8902, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8904)
!8901 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8902 = !DISubroutineType(types: !8903)
!8903 = !{!121, !1220}
!8904 = !{!8905}
!8905 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8900, file: !8901, line: 967, type: !1220)
!8906 = !DILocation(line: 0, scope: !8900)
!8907 = !DILocation(line: 969, column: 21, scope: !8900)
!8908 = !DILocation(line: 969, column: 3, scope: !8900)
!8909 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !8901, file: !8901, line: 601, type: !8902, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8910)
!8910 = !{!8911}
!8911 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8909, file: !8901, line: 601, type: !1220)
!8912 = !DILocation(line: 0, scope: !8909)
!8913 = !DILocation(line: 603, column: 21, scope: !8909)
!8914 = !DILocation(line: 603, column: 3, scope: !8909)
!8915 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !8901, file: !8901, line: 820, type: !8902, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8916)
!8916 = !{!8917}
!8917 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8915, file: !8901, line: 820, type: !1220)
!8918 = !DILocation(line: 0, scope: !8915)
!8919 = !DILocation(line: 822, column: 21, scope: !8915)
!8920 = !DILocation(line: 822, column: 3, scope: !8915)
!8921 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !8901, file: !8901, line: 547, type: !8902, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8922)
!8922 = !{!8923}
!8923 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8921, file: !8901, line: 547, type: !1220)
!8924 = !DILocation(line: 0, scope: !8921)
!8925 = !DILocation(line: 549, column: 21, scope: !8921)
!8926 = !DILocation(line: 549, column: 3, scope: !8921)
!8927 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1276, file: !1276, line: 257, type: !8928, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8930)
!8928 = !DISubroutineType(types: !8929)
!8929 = !{!121, !1145}
!8930 = !{!8931}
!8931 = !DILocalVariable(name: "parity", arg: 1, scope: !8927, file: !1276, line: 257, type: !1145)
!8932 = !DILocation(line: 0, scope: !8927)
!8933 = !DILocation(line: 259, column: 2, scope: !8927)
!8934 = !DILocation(line: 268, column: 1, scope: !8927)
!8935 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1276, file: !1276, line: 283, type: !8936, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8938)
!8936 = !DISubroutineType(types: !8937)
!8937 = !{!121, !1159}
!8938 = !{!8939}
!8939 = !DILocalVariable(name: "sb", arg: 1, scope: !8935, file: !1276, line: 283, type: !1159)
!8940 = !DILocation(line: 0, scope: !8935)
!8941 = !DILocation(line: 285, column: 2, scope: !8935)
!8942 = !DILocation(line: 0, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8935, file: !1276, line: 285, column: 14)
!8944 = !DILocation(line: 302, column: 1, scope: !8935)
!8945 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1276, file: !1276, line: 325, type: !8946, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8948)
!8946 = !DISubroutineType(types: !8947)
!8947 = !{!121, !1152, !1145}
!8948 = !{!8949, !8950}
!8949 = !DILocalVariable(name: "db", arg: 1, scope: !8945, file: !1276, line: 325, type: !1152)
!8950 = !DILocalVariable(name: "p", arg: 2, scope: !8945, file: !1276, line: 326, type: !1145)
!8951 = !DILocation(line: 0, scope: !8945)
!8952 = !DILocation(line: 328, column: 2, scope: !8945)
!8953 = !DILocation(line: 353, column: 1, scope: !8945)
!8954 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1276, file: !1276, line: 393, type: !8955, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8957)
!8955 = !DISubroutineType(types: !8956)
!8956 = !{!121, !1165}
!8957 = !{!8958}
!8958 = !DILocalVariable(name: "fc", arg: 1, scope: !8954, file: !1276, line: 393, type: !1165)
!8959 = !DILocation(line: 0, scope: !8954)
!8960 = !DILocation(line: 395, column: 9, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8954, file: !1276, line: 395, column: 6)
!8962 = !DILocation(line: 400, column: 1, scope: !8954)
!8963 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !8901, file: !8901, line: 424, type: !8964, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8966)
!8964 = !DISubroutineType(types: !8965)
!8965 = !{null, !1220}
!8966 = !{!8967}
!8967 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8963, file: !8901, line: 424, type: !1220)
!8968 = !DILocation(line: 0, scope: !8963)
!8969 = !DILocation(line: 426, column: 3, scope: !8963)
!8970 = !DILocation(line: 427, column: 1, scope: !8963)
!8971 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1276, file: !1276, line: 197, type: !8972, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8974)
!8972 = !DISubroutineType(types: !8973)
!8973 = !{null, !1179, !121}
!8974 = !{!8975, !8976, !8977}
!8975 = !DILocalVariable(name: "dev", arg: 1, scope: !8971, file: !1276, line: 197, type: !1179)
!8976 = !DILocalVariable(name: "parity", arg: 2, scope: !8971, file: !1276, line: 198, type: !121)
!8977 = !DILocalVariable(name: "config", scope: !8971, file: !1276, line: 200, type: !8592)
!8978 = !DILocation(line: 0, scope: !8971)
!8979 = !DILocation(line: 200, column: 48, scope: !8971)
!8980 = !DILocation(line: 202, column: 29, scope: !8971)
!8981 = !DILocation(line: 202, column: 2, scope: !8971)
!8982 = !DILocation(line: 203, column: 1, scope: !8971)
!8983 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1276, file: !1276, line: 212, type: !8972, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8984)
!8984 = !{!8985, !8986, !8987}
!8985 = !DILocalVariable(name: "dev", arg: 1, scope: !8983, file: !1276, line: 212, type: !1179)
!8986 = !DILocalVariable(name: "stopbits", arg: 2, scope: !8983, file: !1276, line: 213, type: !121)
!8987 = !DILocalVariable(name: "config", scope: !8983, file: !1276, line: 215, type: !8592)
!8988 = !DILocation(line: 0, scope: !8983)
!8989 = !DILocation(line: 215, column: 48, scope: !8983)
!8990 = !DILocation(line: 217, column: 37, scope: !8983)
!8991 = !DILocation(line: 217, column: 2, scope: !8983)
!8992 = !DILocation(line: 218, column: 1, scope: !8983)
!8993 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1276, file: !1276, line: 227, type: !8972, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8994)
!8994 = !{!8995, !8996, !8997}
!8995 = !DILocalVariable(name: "dev", arg: 1, scope: !8993, file: !1276, line: 227, type: !1179)
!8996 = !DILocalVariable(name: "databits", arg: 2, scope: !8993, file: !1276, line: 228, type: !121)
!8997 = !DILocalVariable(name: "config", scope: !8993, file: !1276, line: 230, type: !8592)
!8998 = !DILocation(line: 0, scope: !8993)
!8999 = !DILocation(line: 230, column: 48, scope: !8993)
!9000 = !DILocation(line: 232, column: 32, scope: !8993)
!9001 = !DILocation(line: 232, column: 2, scope: !8993)
!9002 = !DILocation(line: 233, column: 1, scope: !8993)
!9003 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1276, file: !1276, line: 242, type: !8972, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9004)
!9004 = !{!9005, !9006, !9007}
!9005 = !DILocalVariable(name: "dev", arg: 1, scope: !9003, file: !1276, line: 242, type: !1179)
!9006 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !9003, file: !1276, line: 243, type: !121)
!9007 = !DILocalVariable(name: "config", scope: !9003, file: !1276, line: 245, type: !8592)
!9008 = !DILocation(line: 0, scope: !9003)
!9009 = !DILocation(line: 245, column: 48, scope: !9003)
!9010 = !DILocation(line: 247, column: 33, scope: !9003)
!9011 = !DILocation(line: 247, column: 2, scope: !9003)
!9012 = !DILocation(line: 248, column: 1, scope: !9003)
!9013 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1276, file: !1276, line: 107, type: !8972, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9014)
!9014 = !{!9015, !9016, !9017, !9018, !9019}
!9015 = !DILocalVariable(name: "dev", arg: 1, scope: !9013, file: !1276, line: 107, type: !1179)
!9016 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !9013, file: !1276, line: 107, type: !121)
!9017 = !DILocalVariable(name: "config", scope: !9013, file: !1276, line: 109, type: !8592)
!9018 = !DILocalVariable(name: "data", scope: !9013, file: !1276, line: 110, type: !8715)
!9019 = !DILocalVariable(name: "clock_rate", scope: !9013, file: !1276, line: 112, type: !121)
!9020 = !DILocation(line: 0, scope: !9013)
!9021 = !DILocation(line: 109, column: 48, scope: !9013)
!9022 = !DILocation(line: 110, column: 38, scope: !9013)
!9023 = !DILocation(line: 112, column: 2, scope: !9013)
!9024 = !DILocation(line: 123, column: 36, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !9026, file: !1276, line: 123, column: 7)
!9026 = distinct !DILexicalBlock(scope: !9027, file: !1276, line: 122, column: 9)
!9027 = distinct !DILexicalBlock(scope: !9013, file: !1276, line: 115, column: 6)
!9028 = !DILocation(line: 124, column: 42, scope: !9025)
!9029 = !DILocation(line: 123, column: 7, scope: !9025)
!9030 = !DILocation(line: 125, column: 22, scope: !9025)
!9031 = !DILocation(line: 123, column: 7, scope: !9026)
!9032 = !DILocation(line: 176, column: 36, scope: !9013)
!9033 = !DILocation(line: 176, column: 3, scope: !9013)
!9034 = !DILocation(line: 179, column: 32, scope: !9013)
!9035 = !DILocation(line: 180, column: 10, scope: !9013)
!9036 = !DILocation(line: 179, column: 3, scope: !9013)
!9037 = !DILocation(line: 195, column: 1, scope: !9013)
!9038 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !8901, file: !8901, line: 410, type: !8964, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9039)
!9039 = !{!9040}
!9040 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9038, file: !8901, line: 410, type: !1220)
!9041 = !DILocation(line: 0, scope: !9038)
!9042 = !DILocation(line: 412, column: 3, scope: !9038)
!9043 = !DILocation(line: 413, column: 1, scope: !9038)
!9044 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !636, file: !636, line: 216, type: !1253, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9045)
!9045 = !{!9046, !9047, !9048, !9049}
!9046 = !DILocalVariable(name: "dev", arg: 1, scope: !9044, file: !636, line: 216, type: !1179)
!9047 = !DILocalVariable(name: "sys", arg: 2, scope: !9044, file: !636, line: 217, type: !731)
!9048 = !DILocalVariable(name: "rate", arg: 3, scope: !9044, file: !636, line: 218, type: !687)
!9049 = !DILocalVariable(name: "api", scope: !9044, file: !636, line: 220, type: !1231)
!9050 = !DILocation(line: 0, scope: !9044)
!9051 = !DILocation(line: 221, column: 49, scope: !9044)
!9052 = !DILocation(line: 223, column: 11, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9044, file: !636, line: 223, column: 6)
!9054 = !DILocation(line: 223, column: 20, scope: !9053)
!9055 = !DILocation(line: 223, column: 6, scope: !9044)
!9056 = !DILocation(line: 227, column: 9, scope: !9044)
!9057 = !DILocation(line: 227, column: 2, scope: !9044)
!9058 = !DILocation(line: 228, column: 1, scope: !9044)
!9059 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !8901, file: !8901, line: 615, type: !9060, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9062)
!9060 = !DISubroutineType(types: !9061)
!9061 = !{null, !1220, !121}
!9062 = !{!9063, !9064}
!9063 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9059, file: !8901, line: 615, type: !1220)
!9064 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !9059, file: !8901, line: 615, type: !121)
!9065 = !DILocation(line: 0, scope: !9059)
!9066 = !DILocation(line: 617, column: 3, scope: !9059)
!9067 = !DILocation(line: 618, column: 1, scope: !9059)
!9068 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !8901, file: !8901, line: 1020, type: !9069, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9071)
!9069 = !DISubroutineType(types: !9070)
!9070 = !{null, !1220, !121, !121, !121}
!9071 = !{!9072, !9073, !9074, !9075}
!9072 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9068, file: !8901, line: 1020, type: !1220)
!9073 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !9068, file: !8901, line: 1020, type: !121)
!9074 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !9068, file: !8901, line: 1020, type: !121)
!9075 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !9068, file: !8901, line: 1021, type: !121)
!9076 = !DILocation(line: 0, scope: !9068)
!9077 = !DILocation(line: 1029, column: 30, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9079, file: !8901, line: 1028, column: 3)
!9079 = distinct !DILexicalBlock(scope: !9068, file: !8901, line: 1023, column: 7)
!9080 = !DILocation(line: 1029, column: 19, scope: !9078)
!9081 = !DILocation(line: 1029, column: 13, scope: !9078)
!9082 = !DILocation(line: 1029, column: 17, scope: !9078)
!9083 = !DILocation(line: 1031, column: 1, scope: !9068)
!9084 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !8901, file: !8901, line: 949, type: !9060, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9085)
!9085 = !{!9086, !9087}
!9086 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9084, file: !8901, line: 949, type: !1220)
!9087 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !9084, file: !8901, line: 949, type: !121)
!9088 = !DILocation(line: 0, scope: !9084)
!9089 = !DILocation(line: 951, column: 3, scope: !9084)
!9090 = !DILocation(line: 952, column: 1, scope: !9084)
!9091 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !8901, file: !8901, line: 588, type: !9060, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9092)
!9092 = !{!9093, !9094}
!9093 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9091, file: !8901, line: 588, type: !1220)
!9094 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !9091, file: !8901, line: 588, type: !121)
!9095 = !DILocation(line: 0, scope: !9091)
!9096 = !DILocation(line: 590, column: 3, scope: !9091)
!9097 = !DILocation(line: 591, column: 1, scope: !9091)
!9098 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !8901, file: !8901, line: 805, type: !9060, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9099)
!9099 = !{!9100, !9101}
!9100 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9098, file: !8901, line: 805, type: !1220)
!9101 = !DILocalVariable(name: "StopBits", arg: 2, scope: !9098, file: !8901, line: 805, type: !121)
!9102 = !DILocation(line: 0, scope: !9098)
!9103 = !DILocation(line: 807, column: 3, scope: !9098)
!9104 = !DILocation(line: 808, column: 1, scope: !9098)
!9105 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !8901, file: !8901, line: 532, type: !9060, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9106)
!9106 = !{!9107, !9108}
!9107 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9105, file: !8901, line: 532, type: !1220)
!9108 = !DILocalVariable(name: "Parity", arg: 2, scope: !9105, file: !8901, line: 532, type: !121)
!9109 = !DILocation(line: 0, scope: !9105)
!9110 = !DILocation(line: 534, column: 3, scope: !9105)
!9111 = !DILocation(line: 535, column: 1, scope: !9105)
!9112 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !8901, file: !8901, line: 1770, type: !8902, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9113)
!9113 = !{!9114}
!9114 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9112, file: !8901, line: 1770, type: !1220)
!9115 = !DILocation(line: 0, scope: !9112)
!9116 = !DILocation(line: 1772, column: 11, scope: !9112)
!9117 = !DILocation(line: 1772, column: 46, scope: !9112)
!9118 = !DILocation(line: 1772, column: 3, scope: !9112)
!9119 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !8901, file: !8901, line: 1737, type: !8902, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9120)
!9120 = !{!9121}
!9121 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9119, file: !8901, line: 1737, type: !1220)
!9122 = !DILocation(line: 0, scope: !9119)
!9123 = !DILocation(line: 1739, column: 11, scope: !9119)
!9124 = !DILocation(line: 1739, column: 3, scope: !9119)
!9125 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !8901, file: !8901, line: 1748, type: !8902, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9126)
!9126 = !{!9127}
!9127 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9125, file: !8901, line: 1748, type: !1220)
!9128 = !DILocation(line: 0, scope: !9125)
!9129 = !DILocation(line: 1750, column: 11, scope: !9125)
!9130 = !DILocation(line: 1750, column: 45, scope: !9125)
!9131 = !DILocation(line: 1750, column: 3, scope: !9125)
!9132 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !8901, file: !8901, line: 1827, type: !8902, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9133)
!9133 = !{!9134}
!9134 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9132, file: !8901, line: 1827, type: !1220)
!9135 = !DILocation(line: 0, scope: !9132)
!9136 = !DILocation(line: 1829, column: 11, scope: !9132)
!9137 = !DILocation(line: 1829, column: 46, scope: !9132)
!9138 = !DILocation(line: 1829, column: 3, scope: !9132)
!9139 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !8901, file: !8901, line: 1992, type: !8964, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9140)
!9140 = !{!9141}
!9141 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9139, file: !8901, line: 1992, type: !1220)
!9142 = !DILocation(line: 0, scope: !9139)
!9143 = !DILocation(line: 1994, column: 3, scope: !9139)
!9144 = !DILocation(line: 1995, column: 1, scope: !9139)
!9145 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !8901, file: !8901, line: 1934, type: !8964, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9146)
!9146 = !{!9147, !9148}
!9147 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9145, file: !8901, line: 1934, type: !1220)
!9148 = !DILocalVariable(name: "tmpreg", scope: !9145, file: !8901, line: 1936, type: !120)
!9149 = !DILocation(line: 0, scope: !9145)
!9150 = !DILocation(line: 1936, column: 3, scope: !9145)
!9151 = !DILocation(line: 1936, column: 17, scope: !9145)
!9152 = !DILocation(line: 1937, column: 20, scope: !9145)
!9153 = !DILocation(line: 1937, column: 10, scope: !9145)
!9154 = !DILocation(line: 1938, column: 10, scope: !9145)
!9155 = !DILocation(line: 1939, column: 20, scope: !9145)
!9156 = !DILocation(line: 1939, column: 10, scope: !9145)
!9157 = !DILocation(line: 1940, column: 10, scope: !9145)
!9158 = !DILocation(line: 1941, column: 1, scope: !9145)
!9159 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !8901, file: !8901, line: 1877, type: !8964, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9160)
!9160 = !{!9161, !9162}
!9161 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9159, file: !8901, line: 1877, type: !1220)
!9162 = !DILocalVariable(name: "tmpreg", scope: !9159, file: !8901, line: 1879, type: !120)
!9163 = !DILocation(line: 0, scope: !9159)
!9164 = !DILocation(line: 1879, column: 3, scope: !9159)
!9165 = !DILocation(line: 1879, column: 17, scope: !9159)
!9166 = !DILocation(line: 1880, column: 20, scope: !9159)
!9167 = !DILocation(line: 1880, column: 10, scope: !9159)
!9168 = !DILocation(line: 1881, column: 10, scope: !9159)
!9169 = !DILocation(line: 1882, column: 20, scope: !9159)
!9170 = !DILocation(line: 1882, column: 10, scope: !9159)
!9171 = !DILocation(line: 1883, column: 10, scope: !9159)
!9172 = !DILocation(line: 1884, column: 1, scope: !9159)
!9173 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !8901, file: !8901, line: 1896, type: !8964, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9174)
!9174 = !{!9175, !9176}
!9175 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9173, file: !8901, line: 1896, type: !1220)
!9176 = !DILocalVariable(name: "tmpreg", scope: !9173, file: !8901, line: 1898, type: !120)
!9177 = !DILocation(line: 0, scope: !9173)
!9178 = !DILocation(line: 1898, column: 3, scope: !9173)
!9179 = !DILocation(line: 1898, column: 17, scope: !9173)
!9180 = !DILocation(line: 1899, column: 20, scope: !9173)
!9181 = !DILocation(line: 1899, column: 10, scope: !9173)
!9182 = !DILocation(line: 1900, column: 10, scope: !9173)
!9183 = !DILocation(line: 1901, column: 20, scope: !9173)
!9184 = !DILocation(line: 1901, column: 10, scope: !9173)
!9185 = !DILocation(line: 1902, column: 10, scope: !9173)
!9186 = !DILocation(line: 1903, column: 1, scope: !9173)
!9187 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !8901, file: !8901, line: 1915, type: !8964, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9188)
!9188 = !{!9189, !9190}
!9189 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9187, file: !8901, line: 1915, type: !1220)
!9190 = !DILocalVariable(name: "tmpreg", scope: !9187, file: !8901, line: 1917, type: !120)
!9191 = !DILocation(line: 0, scope: !9187)
!9192 = !DILocation(line: 1917, column: 3, scope: !9187)
!9193 = !DILocation(line: 1917, column: 17, scope: !9187)
!9194 = !DILocation(line: 1918, column: 20, scope: !9187)
!9195 = !DILocation(line: 1918, column: 10, scope: !9187)
!9196 = !DILocation(line: 1919, column: 10, scope: !9187)
!9197 = !DILocation(line: 1920, column: 20, scope: !9187)
!9198 = !DILocation(line: 1920, column: 10, scope: !9187)
!9199 = !DILocation(line: 1921, column: 10, scope: !9187)
!9200 = !DILocation(line: 1922, column: 1, scope: !9187)
!9201 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !8901, file: !8901, line: 1814, type: !8902, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9202)
!9202 = !{!9203}
!9203 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9201, file: !8901, line: 1814, type: !1220)
!9204 = !DILocation(line: 0, scope: !9201)
!9205 = !DILocation(line: 1816, column: 11, scope: !9201)
!9206 = !DILocation(line: 1816, column: 46, scope: !9201)
!9207 = !DILocation(line: 1816, column: 3, scope: !9201)
!9208 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !8901, file: !8901, line: 2426, type: !9209, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9211)
!9209 = !DISubroutineType(types: !9210)
!9210 = !{null, !1220, !154}
!9211 = !{!9212, !9213}
!9212 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9208, file: !8901, line: 2426, type: !1220)
!9213 = !DILocalVariable(name: "Value", arg: 2, scope: !9208, file: !8901, line: 2426, type: !154)
!9214 = !DILocation(line: 0, scope: !9208)
!9215 = !DILocation(line: 2428, column: 16, scope: !9208)
!9216 = !DILocation(line: 2428, column: 11, scope: !9208)
!9217 = !DILocation(line: 2428, column: 14, scope: !9208)
!9218 = !DILocation(line: 2429, column: 1, scope: !9208)
!9219 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !8901, file: !8901, line: 1792, type: !8902, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9220)
!9220 = !{!9221}
!9221 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9219, file: !8901, line: 1792, type: !1220)
!9222 = !DILocation(line: 0, scope: !9219)
!9223 = !DILocation(line: 1794, column: 11, scope: !9219)
!9224 = !DILocation(line: 1794, column: 47, scope: !9219)
!9225 = !DILocation(line: 1794, column: 3, scope: !9219)
!9226 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !8901, file: !8901, line: 2403, type: !9227, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9229)
!9227 = !DISubroutineType(types: !9228)
!9228 = !{!154, !1220}
!9229 = !{!9230}
!9230 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9226, file: !8901, line: 2403, type: !1220)
!9231 = !DILocation(line: 0, scope: !9226)
!9232 = !DILocation(line: 2405, column: 20, scope: !9226)
!9233 = !DILocation(line: 2405, column: 10, scope: !9226)
!9234 = !DILocation(line: 2405, column: 3, scope: !9226)
!9235 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1276, file: !1276, line: 1583, type: !1200, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9236)
!9236 = !{!9237, !9238, !9239, !9240, !9241, !9242}
!9237 = !DILocalVariable(name: "dev", arg: 1, scope: !9235, file: !1276, line: 1583, type: !1179)
!9238 = !DILocalVariable(name: "config", scope: !9235, file: !1276, line: 1585, type: !8592)
!9239 = !DILocalVariable(name: "data", scope: !9235, file: !1276, line: 1586, type: !8715)
!9240 = !DILocalVariable(name: "ll_parity", scope: !9235, file: !1276, line: 1587, type: !121)
!9241 = !DILocalVariable(name: "ll_datawidth", scope: !9235, file: !1276, line: 1588, type: !121)
!9242 = !DILocalVariable(name: "err", scope: !9235, file: !1276, line: 1589, type: !103)
!9243 = !DILocation(line: 0, scope: !9235)
!9244 = !DILocation(line: 1585, column: 48, scope: !9235)
!9245 = !DILocation(line: 1586, column: 38, scope: !9235)
!9246 = !DILocation(line: 1591, column: 2, scope: !9235)
!9247 = !DILocation(line: 1593, column: 29, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9235, file: !1276, line: 1593, column: 6)
!9249 = !DILocation(line: 1593, column: 7, scope: !9248)
!9250 = !DILocation(line: 1593, column: 6, scope: !9235)
!9251 = !DILocation(line: 1599, column: 31, scope: !9235)
!9252 = !DILocation(line: 1599, column: 71, scope: !9235)
!9253 = !DILocation(line: 1599, column: 8, scope: !9235)
!9254 = !DILocation(line: 1600, column: 10, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9235, file: !1276, line: 1600, column: 6)
!9256 = !DILocation(line: 1600, column: 6, scope: !9235)
!9257 = !DILocation(line: 1616, column: 36, scope: !9235)
!9258 = !DILocation(line: 1616, column: 8, scope: !9235)
!9259 = !DILocation(line: 1617, column: 10, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9235, file: !1276, line: 1617, column: 6)
!9261 = !DILocation(line: 1617, column: 6, scope: !9235)
!9262 = !DILocation(line: 1621, column: 27, scope: !9235)
!9263 = !DILocation(line: 1621, column: 2, scope: !9235)
!9264 = !DILocation(line: 1624, column: 40, scope: !9235)
!9265 = !DILocation(line: 1624, column: 2, scope: !9235)
!9266 = !DILocation(line: 1630, column: 14, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !9235, file: !1276, line: 1630, column: 6)
!9268 = !DILocation(line: 1630, column: 6, scope: !9235)
!9269 = !DILocation(line: 1638, column: 2, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9271, file: !1276, line: 1634, column: 34)
!9271 = distinct !DILexicalBlock(scope: !9267, file: !1276, line: 1634, column: 13)
!9272 = !DILocation(line: 0, scope: !9267)
!9273 = !DILocation(line: 1649, column: 35, scope: !9235)
!9274 = !DILocation(line: 1649, column: 2, scope: !9235)
!9275 = !DILocation(line: 1654, column: 14, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9235, file: !1276, line: 1654, column: 6)
!9277 = !DILocation(line: 1654, column: 6, scope: !9235)
!9278 = !DILocation(line: 1655, column: 3, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9276, file: !1276, line: 1654, column: 31)
!9280 = !DILocation(line: 1656, column: 2, scope: !9279)
!9281 = !DILocation(line: 1659, column: 37, scope: !9235)
!9282 = !DILocation(line: 1659, column: 2, scope: !9235)
!9283 = !DILocation(line: 1662, column: 14, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9235, file: !1276, line: 1662, column: 6)
!9285 = !DILocation(line: 1662, column: 6, scope: !9235)
!9286 = !DILocation(line: 1663, column: 37, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9284, file: !1276, line: 1662, column: 27)
!9288 = !DILocation(line: 1663, column: 3, scope: !9287)
!9289 = !DILocation(line: 1664, column: 2, scope: !9287)
!9290 = !DILocation(line: 1684, column: 26, scope: !9235)
!9291 = !DILocation(line: 1684, column: 2, scope: !9235)
!9292 = !DILocation(line: 1722, column: 2, scope: !9235)
!9293 = !DILocation(line: 1724, column: 1, scope: !9235)
!9294 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1276, file: !1276, line: 651, type: !9295, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9297)
!9295 = !DISubroutineType(types: !9296)
!9296 = !{null, !1179}
!9297 = !{!9298, !9299, !9300}
!9298 = !DILocalVariable(name: "dev", arg: 1, scope: !9294, file: !1276, line: 651, type: !1179)
!9299 = !DILocalVariable(name: "data", scope: !9294, file: !1276, line: 653, type: !8715)
!9300 = !DILocalVariable(name: "clk", scope: !9294, file: !1276, line: 654, type: !9301)
!9301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1179)
!9302 = !DILocation(line: 0, scope: !9294)
!9303 = !DILocation(line: 653, column: 38, scope: !9294)
!9304 = !DILocation(line: 656, column: 8, scope: !9294)
!9305 = !DILocation(line: 656, column: 14, scope: !9294)
!9306 = !DILocation(line: 657, column: 1, scope: !9294)
!9307 = distinct !DISubprogram(name: "device_is_ready", scope: !3056, file: !3056, line: 47, type: !9308, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9310)
!9308 = !DISubroutineType(types: !9309)
!9309 = !{!157, !1179}
!9310 = !{!9311}
!9311 = !DILocalVariable(name: "dev", arg: 1, scope: !9307, file: !3056, line: 47, type: !1179)
!9312 = !DILocation(line: 0, scope: !9307)
!9313 = !DILocation(line: 55, column: 2, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9307, file: !3056, line: 55, column: 2)
!9315 = !{i64 2154348515}
!9316 = !DILocation(line: 56, column: 9, scope: !9307)
!9317 = !DILocation(line: 56, column: 2, scope: !9307)
!9318 = distinct !DISubprogram(name: "clock_control_on", scope: !636, file: !636, line: 123, type: !1238, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9319)
!9319 = !{!9320, !9321, !9322}
!9320 = !DILocalVariable(name: "dev", arg: 1, scope: !9318, file: !636, line: 123, type: !1179)
!9321 = !DILocalVariable(name: "sys", arg: 2, scope: !9318, file: !636, line: 124, type: !731)
!9322 = !DILocalVariable(name: "api", scope: !9318, file: !636, line: 126, type: !1231)
!9323 = !DILocation(line: 0, scope: !9318)
!9324 = !DILocation(line: 127, column: 49, scope: !9318)
!9325 = !DILocation(line: 129, column: 14, scope: !9318)
!9326 = !DILocation(line: 129, column: 9, scope: !9318)
!9327 = !DILocation(line: 129, column: 2, scope: !9318)
!9328 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1303, file: !1303, line: 342, type: !9329, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9331)
!9329 = !DISubroutineType(types: !9330)
!9330 = !{!103, !1351, !154}
!9331 = !{!9332, !9333, !9334, !9335}
!9332 = !DILocalVariable(name: "config", arg: 1, scope: !9328, file: !1303, line: 342, type: !1351)
!9333 = !DILocalVariable(name: "id", arg: 2, scope: !9328, file: !1303, line: 343, type: !154)
!9334 = !DILocalVariable(name: "ret", scope: !9328, file: !1303, line: 345, type: !103)
!9335 = !DILocalVariable(name: "state", scope: !9328, file: !1303, line: 346, type: !1306)
!9336 = !DILocation(line: 0, scope: !9328)
!9337 = !DILocation(line: 346, column: 2, scope: !9328)
!9338 = !DILocation(line: 348, column: 8, scope: !9328)
!9339 = !DILocation(line: 349, column: 10, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9328, file: !1303, line: 349, column: 6)
!9341 = !DILocation(line: 349, column: 6, scope: !9328)
!9342 = !DILocation(line: 353, column: 44, scope: !9328)
!9343 = !DILocation(line: 353, column: 9, scope: !9328)
!9344 = !DILocation(line: 353, column: 2, scope: !9328)
!9345 = !DILocation(line: 354, column: 1, scope: !9328)
!9346 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !8901, file: !8901, line: 497, type: !9060, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9347)
!9347 = !{!9348, !9349, !9350}
!9348 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9346, file: !8901, line: 497, type: !1220)
!9349 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !9346, file: !8901, line: 497, type: !121)
!9350 = !DILocalVariable(name: "val", scope: !9351, file: !8901, line: 499, type: !121)
!9351 = distinct !DILexicalBlock(scope: !9346, file: !8901, line: 499, column: 3)
!9352 = !DILocation(line: 0, scope: !9346)
!9353 = !DILocation(line: 499, column: 3, scope: !9351)
!9354 = !DILocalVariable(name: "addr", arg: 1, scope: !9355, file: !5464, line: 476, type: !1272)
!9355 = distinct !DISubprogram(name: "__LDREXW", scope: !5464, file: !5464, line: 476, type: !9356, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9358)
!9356 = !DISubroutineType(types: !9357)
!9357 = !{!121, !1272}
!9358 = !{!9354, !9359}
!9359 = !DILocalVariable(name: "result", scope: !9355, file: !5464, line: 478, type: !121)
!9360 = !DILocation(line: 0, scope: !9355, inlinedAt: !9361)
!9361 = distinct !DILocation(line: 499, column: 3, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9351, file: !8901, line: 499, column: 3)
!9363 = !DILocation(line: 480, column: 4, scope: !9355, inlinedAt: !9361)
!9364 = !{i64 2859364}
!9365 = !DILocation(line: 499, column: 3, scope: !9362)
!9366 = !DILocation(line: 0, scope: !9351)
!9367 = !DILocalVariable(name: "value", arg: 1, scope: !9368, file: !5464, line: 527, type: !121)
!9368 = distinct !DISubprogram(name: "__STREXW", scope: !5464, file: !5464, line: 527, type: !9369, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9371)
!9369 = !DISubroutineType(types: !9370)
!9370 = !{!121, !121, !1272}
!9371 = !{!9367, !9372, !9373}
!9372 = !DILocalVariable(name: "addr", arg: 2, scope: !9368, file: !5464, line: 527, type: !1272)
!9373 = !DILocalVariable(name: "result", scope: !9368, file: !5464, line: 529, type: !121)
!9374 = !DILocation(line: 0, scope: !9368, inlinedAt: !9375)
!9375 = distinct !DILocation(line: 499, column: 3, scope: !9351)
!9376 = !DILocation(line: 531, column: 4, scope: !9368, inlinedAt: !9375)
!9377 = !{i64 2860800}
!9378 = distinct !{!9378, !9353, !9353}
!9379 = !DILocation(line: 500, column: 1, scope: !9346)
!9380 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !8901, file: !8901, line: 850, type: !9069, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9381)
!9381 = !{!9382, !9383, !9384, !9385}
!9382 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9380, file: !8901, line: 850, type: !1220)
!9383 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !9380, file: !8901, line: 850, type: !121)
!9384 = !DILocalVariable(name: "Parity", arg: 3, scope: !9380, file: !8901, line: 850, type: !121)
!9385 = !DILocalVariable(name: "StopBits", arg: 4, scope: !9380, file: !8901, line: 851, type: !121)
!9386 = !DILocation(line: 0, scope: !9380)
!9387 = !DILocation(line: 853, column: 3, scope: !9380)
!9388 = !DILocation(line: 854, column: 3, scope: !9380)
!9389 = !DILocation(line: 855, column: 1, scope: !9380)
!9390 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !8901, file: !8901, line: 1337, type: !8964, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9391)
!9391 = !{!9392}
!9392 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9390, file: !8901, line: 1337, type: !1220)
!9393 = !DILocation(line: 0, scope: !9390)
!9394 = !DILocation(line: 1339, column: 3, scope: !9390)
!9395 = !DILocation(line: 1340, column: 1, scope: !9390)
!9396 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1303, file: !1303, line: 316, type: !9397, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9399)
!9397 = !DISubroutineType(types: !9398)
!9398 = !{!103, !1351, !1306}
!9399 = !{!9400, !9401, !9402}
!9400 = !DILocalVariable(name: "config", arg: 1, scope: !9396, file: !1303, line: 317, type: !1351)
!9401 = !DILocalVariable(name: "state", arg: 2, scope: !9396, file: !1303, line: 318, type: !1306)
!9402 = !DILocalVariable(name: "reg", scope: !9396, file: !1303, line: 320, type: !22)
!9403 = !DILocation(line: 0, scope: !9396)
!9404 = !DILocation(line: 329, column: 39, scope: !9396)
!9405 = !DILocation(line: 329, column: 52, scope: !9396)
!9406 = !DILocation(line: 329, column: 9, scope: !9396)
!9407 = !DILocation(line: 329, column: 2, scope: !9396)
!9408 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !9308, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9409)
!9409 = !{!9410}
!9410 = !DILocalVariable(name: "dev", arg: 1, scope: !9408, file: !141, line: 730, type: !1179)
!9411 = !DILocation(line: 0, scope: !9408)
!9412 = !DILocation(line: 732, column: 9, scope: !9408)
!9413 = !DILocation(line: 732, column: 2, scope: !9408)
!9414 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1432, file: !1432, line: 270, type: !1438, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9415)
!9415 = !{!9416}
!9416 = !DILocalVariable(name: "dev", arg: 1, scope: !9414, file: !1432, line: 270, type: !1440)
!9417 = !DILocation(line: 0, scope: !9414)
!9418 = !DILocation(line: 274, column: 2, scope: !9414)
!9419 = !DILocation(line: 275, column: 12, scope: !9414)
!9420 = !DILocation(line: 276, column: 15, scope: !9414)
!9421 = !DILocation(line: 277, column: 16, scope: !9414)
!9422 = !DILocation(line: 278, column: 15, scope: !9414)
!9423 = !DILocation(line: 279, column: 16, scope: !9414)
!9424 = !DILocation(line: 282, column: 2, scope: !9414)
!9425 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !5498, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9426)
!9426 = !{!9427, !9428}
!9427 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9425, file: !356, line: 1814, type: !592)
!9428 = !DILocalVariable(name: "priority", arg: 2, scope: !9425, file: !356, line: 1814, type: !121)
!9429 = !DILocation(line: 0, scope: !9425)
!9430 = !DILocation(line: 1822, column: 46, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9432, file: !356, line: 1821, column: 3)
!9432 = distinct !DILexicalBlock(scope: !9425, file: !356, line: 1816, column: 7)
!9433 = !DILocation(line: 1824, column: 1, scope: !9425)
!9434 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1432, file: !1432, line: 118, type: !5401, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9435)
!9435 = !{!9436, !9437}
!9436 = !DILocalVariable(name: "arg", arg: 1, scope: !9434, file: !1432, line: 118, type: !102)
!9437 = !DILocalVariable(name: "dticks", scope: !9434, file: !1432, line: 121, type: !121)
!9438 = !DILocation(line: 0, scope: !9434)
!9439 = !DILocation(line: 124, column: 2, scope: !9434)
!9440 = !DILocation(line: 129, column: 17, scope: !9434)
!9441 = !DILocation(line: 129, column: 14, scope: !9434)
!9442 = !DILocation(line: 130, column: 15, scope: !9434)
!9443 = !DILocation(line: 145, column: 27, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9445, file: !1432, line: 132, column: 16)
!9445 = distinct !DILexicalBlock(scope: !9434, file: !1432, line: 132, column: 6)
!9446 = !DILocation(line: 145, column: 25, scope: !9444)
!9447 = !DILocation(line: 145, column: 45, scope: !9444)
!9448 = !DILocation(line: 146, column: 30, scope: !9444)
!9449 = !DILocation(line: 146, column: 20, scope: !9444)
!9450 = !DILocation(line: 147, column: 3, scope: !9444)
!9451 = !DILocation(line: 151, column: 2, scope: !9434)
!9452 = !DILocation(line: 152, column: 1, scope: !9434)
!9453 = distinct !DISubprogram(name: "elapsed", scope: !1432, file: !1432, line: 85, type: !5545, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9454)
!9454 = !{!9455, !9456, !9457}
!9455 = !DILocalVariable(name: "val1", scope: !9453, file: !1432, line: 87, type: !121)
!9456 = !DILocalVariable(name: "ctrl", scope: !9453, file: !1432, line: 88, type: !121)
!9457 = !DILocalVariable(name: "val2", scope: !9453, file: !1432, line: 89, type: !121)
!9458 = !DILocation(line: 87, column: 27, scope: !9453)
!9459 = !DILocation(line: 0, scope: !9453)
!9460 = !DILocation(line: 88, column: 27, scope: !9453)
!9461 = !DILocation(line: 89, column: 27, scope: !9453)
!9462 = !DILocation(line: 105, column: 12, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9453, file: !1432, line: 105, column: 6)
!9464 = !DILocation(line: 106, column: 6, scope: !9463)
!9465 = !DILocation(line: 107, column: 16, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9463, file: !1432, line: 106, column: 24)
!9467 = !DILocation(line: 111, column: 18, scope: !9466)
!9468 = !DILocation(line: 112, column: 2, scope: !9466)
!9469 = !DILocation(line: 114, column: 20, scope: !9453)
!9470 = !DILocation(line: 114, column: 30, scope: !9453)
!9471 = !DILocation(line: 114, column: 28, scope: !9453)
!9472 = !DILocation(line: 114, column: 2, scope: !9453)
!9473 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1432, file: !1432, line: 154, type: !9474, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9476)
!9474 = !DISubroutineType(types: !9475)
!9475 = !{null, !566, !157}
!9476 = !{!9477, !9478, !9479, !9480, !9481, !9482, !9483, !9488, !9489}
!9477 = !DILocalVariable(name: "ticks", arg: 1, scope: !9473, file: !1432, line: 154, type: !566)
!9478 = !DILocalVariable(name: "idle", arg: 2, scope: !9473, file: !1432, line: 154, type: !157)
!9479 = !DILocalVariable(name: "delay", scope: !9473, file: !1432, line: 169, type: !121)
!9480 = !DILocalVariable(name: "val1", scope: !9473, file: !1432, line: 170, type: !121)
!9481 = !DILocalVariable(name: "val2", scope: !9473, file: !1432, line: 170, type: !121)
!9482 = !DILocalVariable(name: "last_load_", scope: !9473, file: !1432, line: 171, type: !121)
!9483 = !DILocalVariable(name: "key", scope: !9473, file: !1432, line: 176, type: !9484)
!9484 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !9485)
!9485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !9486)
!9486 = !{!9487}
!9487 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9485, file: !321, line: 33, baseType: !103, size: 32)
!9488 = !DILocalVariable(name: "pending", scope: !9473, file: !1432, line: 178, type: !121)
!9489 = !DILocalVariable(name: "unannounced", scope: !9473, file: !1432, line: 185, type: !121)
!9490 = !DILocation(line: 0, scope: !9473)
!9491 = !DILocation(line: 162, column: 49, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !9473, file: !1432, line: 162, column: 6)
!9493 = !DILocation(line: 163, column: 17, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9492, file: !1432, line: 162, column: 78)
!9495 = !DILocation(line: 164, column: 13, scope: !9494)
!9496 = !DILocation(line: 165, column: 3, scope: !9494)
!9497 = !DILocation(line: 171, column: 24, scope: !9473)
!9498 = !DILocation(line: 173, column: 10, scope: !9473)
!9499 = !DILocation(line: 174, column: 10, scope: !9473)
!9500 = !DILocalVariable(name: "l", arg: 1, scope: !9501, file: !321, line: 136, type: !9504)
!9501 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !9502, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9505)
!9502 = !DISubroutineType(types: !9503)
!9503 = !{!9484, !9504}
!9504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 32)
!9505 = !{!9500, !9506}
!9506 = !DILocalVariable(name: "k", scope: !9501, file: !321, line: 139, type: !9484)
!9507 = !DILocation(line: 0, scope: !9501, inlinedAt: !9508)
!9508 = distinct !DILocation(line: 176, column: 25, scope: !9473)
!9509 = !DILocation(line: 55, column: 2, scope: !9510, inlinedAt: !9514)
!9510 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5290, file: !5290, line: 42, type: !5291, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9511)
!9511 = !{!9512, !9513}
!9512 = !DILocalVariable(name: "key", scope: !9510, file: !5290, line: 44, type: !32)
!9513 = !DILocalVariable(name: "tmp", scope: !9510, file: !5290, line: 53, type: !32)
!9514 = distinct !DILocation(line: 145, column: 10, scope: !9501, inlinedAt: !9508)
!9515 = !{i64 1921156}
!9516 = !DILocation(line: 0, scope: !9510, inlinedAt: !9514)
!9517 = !DILocation(line: 178, column: 21, scope: !9473)
!9518 = !DILocation(line: 180, column: 18, scope: !9473)
!9519 = !DILocation(line: 182, column: 14, scope: !9473)
!9520 = !DILocation(line: 183, column: 15, scope: !9473)
!9521 = !DILocation(line: 185, column: 39, scope: !9473)
!9522 = !DILocation(line: 185, column: 37, scope: !9473)
!9523 = !DILocation(line: 187, column: 27, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9473, file: !1432, line: 187, column: 6)
!9525 = !DILocation(line: 187, column: 6, scope: !9473)
!9526 = !DILocation(line: 202, column: 27, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9524, file: !1432, line: 195, column: 9)
!9528 = !DILocation(line: 202, column: 48, scope: !9527)
!9529 = !DILocation(line: 203, column: 9, scope: !9527)
!9530 = !DILocation(line: 204, column: 11, scope: !9527)
!9531 = !DILocation(line: 205, column: 13, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9527, file: !1432, line: 205, column: 7)
!9533 = !DILocation(line: 205, column: 7, scope: !9527)
!9534 = !DILocation(line: 0, scope: !9524)
!9535 = !DILocation(line: 212, column: 18, scope: !9473)
!9536 = !DILocation(line: 214, column: 28, scope: !9473)
!9537 = !DILocation(line: 214, column: 16, scope: !9473)
!9538 = !DILocation(line: 215, column: 15, scope: !9473)
!9539 = !DILocation(line: 227, column: 11, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9473, file: !1432, line: 227, column: 6)
!9541 = !DILocation(line: 227, column: 6, scope: !9473)
!9542 = !DILocation(line: 228, column: 15, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9540, file: !1432, line: 227, column: 19)
!9544 = !DILocation(line: 228, column: 38, scope: !9543)
!9545 = !DILocation(line: 228, column: 24, scope: !9543)
!9546 = !DILocation(line: 229, column: 2, scope: !9543)
!9547 = !DILocation(line: 230, column: 24, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9540, file: !1432, line: 229, column: 9)
!9549 = !DILocation(line: 230, column: 15, scope: !9548)
!9550 = !DILocation(line: 0, scope: !9540)
!9551 = !DILocalVariable(name: "key", arg: 2, scope: !9552, file: !321, line: 190, type: !9484)
!9552 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !9553, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9555)
!9553 = !DISubroutineType(types: !9554)
!9554 = !{null, !9504, !9484}
!9555 = !{!9556, !9551}
!9556 = !DILocalVariable(name: "l", arg: 1, scope: !9552, file: !321, line: 189, type: !9504)
!9557 = !DILocation(line: 0, scope: !9552, inlinedAt: !9558)
!9558 = distinct !DILocation(line: 232, column: 2, scope: !9473)
!9559 = !DILocalVariable(name: "key", arg: 1, scope: !9560, file: !5290, line: 84, type: !32)
!9560 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5290, file: !5290, line: 84, type: !5301, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9561)
!9561 = !{!9559}
!9562 = !DILocation(line: 0, scope: !9560, inlinedAt: !9563)
!9563 = distinct !DILocation(line: 215, column: 2, scope: !9552, inlinedAt: !9558)
!9564 = !DILocation(line: 95, column: 2, scope: !9560, inlinedAt: !9563)
!9565 = !{i64 1921973}
!9566 = !DILocation(line: 234, column: 1, scope: !9473)
!9567 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1432, file: !1432, line: 236, type: !5545, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9568)
!9568 = !{!9569, !9570}
!9569 = !DILocalVariable(name: "key", scope: !9567, file: !1432, line: 242, type: !9484)
!9570 = !DILocalVariable(name: "cyc", scope: !9567, file: !1432, line: 243, type: !121)
!9571 = !DILocation(line: 0, scope: !9501, inlinedAt: !9572)
!9572 = distinct !DILocation(line: 242, column: 25, scope: !9567)
!9573 = !DILocation(line: 55, column: 2, scope: !9510, inlinedAt: !9574)
!9574 = distinct !DILocation(line: 145, column: 10, scope: !9501, inlinedAt: !9572)
!9575 = !DILocation(line: 0, scope: !9510, inlinedAt: !9574)
!9576 = !DILocation(line: 0, scope: !9567)
!9577 = !DILocation(line: 243, column: 17, scope: !9567)
!9578 = !DILocation(line: 243, column: 29, scope: !9567)
!9579 = !DILocation(line: 243, column: 27, scope: !9567)
!9580 = !DILocation(line: 243, column: 43, scope: !9567)
!9581 = !DILocation(line: 243, column: 41, scope: !9567)
!9582 = !DILocation(line: 0, scope: !9552, inlinedAt: !9583)
!9583 = distinct !DILocation(line: 245, column: 2, scope: !9567)
!9584 = !DILocation(line: 0, scope: !9560, inlinedAt: !9585)
!9585 = distinct !DILocation(line: 215, column: 2, scope: !9552, inlinedAt: !9583)
!9586 = !DILocation(line: 95, column: 2, scope: !9560, inlinedAt: !9585)
!9587 = !DILocation(line: 246, column: 13, scope: !9567)
!9588 = !DILocation(line: 246, column: 2, scope: !9567)
!9589 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1432, file: !1432, line: 249, type: !5545, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9590)
!9590 = !{!9591, !9592}
!9591 = !DILocalVariable(name: "key", scope: !9589, file: !1432, line: 251, type: !9484)
!9592 = !DILocalVariable(name: "ret", scope: !9589, file: !1432, line: 252, type: !121)
!9593 = !DILocation(line: 0, scope: !9501, inlinedAt: !9594)
!9594 = distinct !DILocation(line: 251, column: 25, scope: !9589)
!9595 = !DILocation(line: 55, column: 2, scope: !9510, inlinedAt: !9596)
!9596 = distinct !DILocation(line: 145, column: 10, scope: !9501, inlinedAt: !9594)
!9597 = !DILocation(line: 0, scope: !9510, inlinedAt: !9596)
!9598 = !DILocation(line: 0, scope: !9589)
!9599 = !DILocation(line: 252, column: 17, scope: !9589)
!9600 = !DILocation(line: 252, column: 29, scope: !9589)
!9601 = !DILocation(line: 252, column: 27, scope: !9589)
!9602 = !DILocation(line: 0, scope: !9552, inlinedAt: !9603)
!9603 = distinct !DILocation(line: 254, column: 2, scope: !9589)
!9604 = !DILocation(line: 0, scope: !9560, inlinedAt: !9605)
!9605 = distinct !DILocation(line: 215, column: 2, scope: !9552, inlinedAt: !9603)
!9606 = !DILocation(line: 95, column: 2, scope: !9560, inlinedAt: !9605)
!9607 = !DILocation(line: 255, column: 2, scope: !9589)
!9608 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1432, file: !1432, line: 258, type: !2904, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !322)
!9609 = !DILocation(line: 260, column: 6, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9608, file: !1432, line: 260, column: 6)
!9611 = !DILocation(line: 260, column: 16, scope: !9610)
!9612 = !DILocation(line: 260, column: 6, scope: !9608)
!9613 = !DILocation(line: 261, column: 17, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9610, file: !1432, line: 260, column: 34)
!9615 = !DILocation(line: 262, column: 2, scope: !9614)
!9616 = !DILocation(line: 263, column: 1, scope: !9608)
!9617 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1432, file: !1432, line: 265, type: !2904, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !322)
!9618 = !DILocation(line: 267, column: 16, scope: !9617)
!9619 = !DILocation(line: 268, column: 1, scope: !9617)
!9620 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !9621, file: !9621, line: 9, type: !9622, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2711, retainedNodes: !9645)
!9621 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9622 = !DISubroutineType(types: !9623)
!9623 = !{!103, !9624, !154, !9644}
!9624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9625, size: 32)
!9625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9626)
!9626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1303, line: 60, size: 64, elements: !9627)
!9627 = !{!9628, !9643}
!9628 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !9626, file: !1303, line: 69, baseType: !9629, size: 32)
!9629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9630, size: 32)
!9630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9631)
!9631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1303, line: 50, size: 64, elements: !9632)
!9632 = !{!9633, !9641, !9642}
!9633 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !9631, file: !1303, line: 52, baseType: !9634, size: 32)
!9634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9635, size: 32)
!9635 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9636)
!9636 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1314, line: 37, baseType: !9637)
!9637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1314, line: 32, size: 64, elements: !9638)
!9638 = !{!9639, !9640}
!9639 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9637, file: !1314, line: 34, baseType: !121, size: 32)
!9640 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !9637, file: !1314, line: 36, baseType: !121, size: 32, offset: 32)
!9641 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !9631, file: !1303, line: 54, baseType: !154, size: 8, offset: 32)
!9642 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9631, file: !1303, line: 56, baseType: !154, size: 8, offset: 40)
!9643 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !9626, file: !1303, line: 71, baseType: !154, size: 8, offset: 32)
!9644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9629, size: 32)
!9645 = !{!9646, !9647, !9648}
!9646 = !DILocalVariable(name: "config", arg: 1, scope: !9620, file: !9621, line: 9, type: !9624)
!9647 = !DILocalVariable(name: "id", arg: 2, scope: !9620, file: !9621, line: 9, type: !154)
!9648 = !DILocalVariable(name: "state", arg: 3, scope: !9620, file: !9621, line: 10, type: !9644)
!9649 = !DILocation(line: 0, scope: !9620)
!9650 = !DILocation(line: 12, column: 20, scope: !9620)
!9651 = !DILocation(line: 13, column: 27, scope: !9620)
!9652 = !DILocation(line: 13, column: 42, scope: !9620)
!9653 = !DILocation(line: 13, column: 19, scope: !9620)
!9654 = !DILocation(line: 13, column: 16, scope: !9620)
!9655 = !DILocation(line: 13, column: 2, scope: !9620)
!9656 = distinct !{!9656, !9655, !9657}
!9657 = !DILocation(line: 19, column: 2, scope: !9620)
!9658 = !DILocation(line: 14, column: 23, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9660, file: !9621, line: 14, column: 7)
!9660 = distinct !DILexicalBlock(scope: !9620, file: !9621, line: 13, column: 54)
!9661 = !DILocation(line: 14, column: 10, scope: !9659)
!9662 = !DILocation(line: 18, column: 11, scope: !9660)
!9663 = !DILocation(line: 14, column: 7, scope: !9660)
!9664 = !DILocation(line: 22, column: 1, scope: !9620)
!9665 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1549, file: !1549, line: 193, type: !9666, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1467, retainedNodes: !9675)
!9666 = !DISubroutineType(types: !9667)
!9667 = !{!103, !9668, !154, !22}
!9668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9669, size: 32)
!9669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9670)
!9670 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1314, line: 37, baseType: !9671)
!9671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1314, line: 32, size: 64, elements: !9672)
!9672 = !{!9673, !9674}
!9673 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9671, file: !1314, line: 34, baseType: !121, size: 32)
!9674 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !9671, file: !1314, line: 36, baseType: !121, size: 32, offset: 32)
!9675 = !{!9676, !9677, !9678, !9679, !9680, !9681, !9682, !9683, !9685}
!9676 = !DILocalVariable(name: "pins", arg: 1, scope: !9665, file: !1549, line: 193, type: !9668)
!9677 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !9665, file: !1549, line: 193, type: !154)
!9678 = !DILocalVariable(name: "reg", arg: 3, scope: !9665, file: !1549, line: 194, type: !22)
!9679 = !DILocalVariable(name: "pin", scope: !9665, file: !1549, line: 196, type: !121)
!9680 = !DILocalVariable(name: "mux", scope: !9665, file: !1549, line: 196, type: !121)
!9681 = !DILocalVariable(name: "pin_cgf", scope: !9665, file: !1549, line: 197, type: !121)
!9682 = !DILocalVariable(name: "ret", scope: !9665, file: !1549, line: 198, type: !103)
!9683 = !DILocalVariable(name: "i", scope: !9684, file: !1549, line: 209, type: !154)
!9684 = distinct !DILexicalBlock(scope: !9665, file: !1549, line: 209, column: 2)
!9685 = !DILocalVariable(name: "gpio_out", scope: !9686, file: !1549, line: 239, type: !121)
!9686 = distinct !DILexicalBlock(scope: !9687, file: !1549, line: 238, column: 55)
!9687 = distinct !DILexicalBlock(scope: !9688, file: !1549, line: 238, column: 14)
!9688 = distinct !DILexicalBlock(scope: !9689, file: !1549, line: 236, column: 14)
!9689 = distinct !DILexicalBlock(scope: !9690, file: !1549, line: 234, column: 7)
!9690 = distinct !DILexicalBlock(scope: !9691, file: !1549, line: 209, column: 41)
!9691 = distinct !DILexicalBlock(scope: !9684, file: !1549, line: 209, column: 2)
!9692 = !DILocation(line: 0, scope: !9665)
!9693 = !DILocation(line: 0, scope: !9684)
!9694 = !DILocation(line: 209, column: 25, scope: !9691)
!9695 = !DILocation(line: 209, column: 2, scope: !9684)
!9696 = distinct !{!9696, !9695, !9697}
!9697 = !DILocation(line: 259, column: 2, scope: !9684)
!9698 = !DILocation(line: 210, column: 17, scope: !9690)
!9699 = !DILocation(line: 234, column: 7, scope: !9689)
!9700 = !DILocation(line: 234, column: 33, scope: !9689)
!9701 = !DILocation(line: 234, column: 7, scope: !9690)
!9702 = !DILocation(line: 235, column: 22, scope: !9703)
!9703 = distinct !DILexicalBlock(scope: !9689, file: !1549, line: 234, column: 49)
!9704 = !DILocation(line: 235, column: 29, scope: !9703)
!9705 = !DILocation(line: 236, column: 3, scope: !9703)
!9706 = !DILocation(line: 236, column: 14, scope: !9689)
!9707 = !DILocation(line: 239, column: 32, scope: !9686)
!9708 = !DILocation(line: 0, scope: !9686)
!9709 = !DILocation(line: 241, column: 8, scope: !9686)
!9710 = !DILocation(line: 246, column: 3, scope: !9686)
!9711 = !DILocation(line: 252, column: 9, scope: !9690)
!9712 = !DILocation(line: 255, column: 9, scope: !9690)
!9713 = !DILocation(line: 256, column: 11, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9690, file: !1549, line: 256, column: 7)
!9715 = !DILocation(line: 209, column: 37, scope: !9691)
!9716 = !DILocation(line: 256, column: 7, scope: !9690)
!9717 = !DILocation(line: 262, column: 1, scope: !9665)
!9718 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1549, file: !1549, line: 176, type: !9719, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1467, retainedNodes: !9721)
!9719 = !DISubroutineType(types: !9720)
!9720 = !{!103, !121, !121, !121}
!9721 = !{!9722, !9723, !9724, !9725}
!9722 = !DILocalVariable(name: "pin", arg: 1, scope: !9718, file: !1549, line: 176, type: !121)
!9723 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !9718, file: !1549, line: 176, type: !121)
!9724 = !DILocalVariable(name: "pin_func", arg: 3, scope: !9718, file: !1549, line: 176, type: !121)
!9725 = !DILocalVariable(name: "port_device", scope: !9718, file: !1549, line: 178, type: !1479)
!9726 = !DILocation(line: 0, scope: !9718)
!9727 = !DILocation(line: 180, column: 22, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9718, file: !1549, line: 180, column: 6)
!9729 = !DILocation(line: 180, column: 6, scope: !9718)
!9730 = !DILocation(line: 180, column: 6, scope: !9728)
!9731 = !DILocation(line: 184, column: 16, scope: !9718)
!9732 = !DILocation(line: 186, column: 19, scope: !9733)
!9733 = distinct !DILexicalBlock(scope: !9718, file: !1549, line: 186, column: 6)
!9734 = !DILocation(line: 186, column: 28, scope: !9733)
!9735 = !DILocation(line: 186, column: 33, scope: !9733)
!9736 = !DILocation(line: 186, column: 6, scope: !9718)
!9737 = !DILocation(line: 190, column: 43, scope: !9718)
!9738 = !DILocation(line: 190, column: 9, scope: !9718)
!9739 = !DILocation(line: 190, column: 2, scope: !9718)
!9740 = !DILocation(line: 191, column: 1, scope: !9718)
!9741 = distinct !DISubprogram(name: "device_is_ready", scope: !3056, file: !3056, line: 47, type: !9742, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1467, retainedNodes: !9744)
!9742 = !DISubroutineType(types: !9743)
!9743 = !{!157, !1479}
!9744 = !{!9745}
!9745 = !DILocalVariable(name: "dev", arg: 1, scope: !9741, file: !3056, line: 47, type: !1479)
!9746 = !DILocation(line: 0, scope: !9741)
!9747 = !DILocation(line: 55, column: 2, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9741, file: !3056, line: 55, column: 2)
!9749 = !{i64 2149155165}
!9750 = !DILocation(line: 56, column: 9, scope: !9741)
!9751 = !DILocation(line: 56, column: 2, scope: !9741)
!9752 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !9742, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1467, retainedNodes: !9753)
!9753 = !{!9754}
!9754 = !DILocalVariable(name: "dev", arg: 1, scope: !9752, file: !141, line: 730, type: !1479)
!9755 = !DILocation(line: 0, scope: !9752)
!9756 = !DILocation(line: 732, column: 9, scope: !9752)
!9757 = !DILocation(line: 732, column: 2, scope: !9752)
!9758 = distinct !DISubprogram(name: "SystemInit", scope: !1599, file: !1599, line: 167, type: !2904, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1557, retainedNodes: !322)
!9759 = !DILocation(line: 182, column: 1, scope: !9758)
!9760 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1599, file: !1599, line: 220, type: !2904, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1557, retainedNodes: !9761)
!9761 = !{!9762, !9763, !9764, !9765, !9766}
!9762 = !DILocalVariable(name: "tmp", scope: !9760, file: !1599, line: 222, type: !121)
!9763 = !DILocalVariable(name: "pllvco", scope: !9760, file: !1599, line: 222, type: !121)
!9764 = !DILocalVariable(name: "pllp", scope: !9760, file: !1599, line: 222, type: !121)
!9765 = !DILocalVariable(name: "pllsource", scope: !9760, file: !1599, line: 222, type: !121)
!9766 = !DILocalVariable(name: "pllm", scope: !9760, file: !1599, line: 222, type: !121)
!9767 = !DILocation(line: 0, scope: !9760)
!9768 = !DILocation(line: 225, column: 14, scope: !9760)
!9769 = !DILocation(line: 225, column: 19, scope: !9760)
!9770 = !DILocation(line: 227, column: 3, scope: !9760)
!9771 = !DILocation(line: 234, column: 7, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9760, file: !1599, line: 228, column: 3)
!9773 = !DILocation(line: 240, column: 25, scope: !9772)
!9774 = !DILocation(line: 241, column: 19, scope: !9772)
!9775 = !DILocation(line: 241, column: 27, scope: !9772)
!9776 = !DILocation(line: 243, column: 21, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9772, file: !1599, line: 243, column: 11)
!9778 = !DILocation(line: 0, scope: !9777)
!9779 = !DILocation(line: 254, column: 22, scope: !9772)
!9780 = !DILocation(line: 254, column: 62, scope: !9772)
!9781 = !DILocation(line: 255, column: 31, scope: !9772)
!9782 = !DILocation(line: 256, column: 7, scope: !9772)
!9783 = !DILocation(line: 0, scope: !9772)
!9784 = !DILocation(line: 263, column: 30, scope: !9760)
!9785 = !DILocation(line: 263, column: 52, scope: !9760)
!9786 = !DILocation(line: 263, column: 9, scope: !9760)
!9787 = !DILocation(line: 265, column: 19, scope: !9760)
!9788 = !DILocation(line: 266, column: 1, scope: !9760)
!9789 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !9790, file: !9790, line: 200, type: !9791, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !322)
!9790 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9791 = !DISubroutineType(types: !9792)
!9792 = !{!9793}
!9793 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2717, line: 44, baseType: !2716)
!9794 = !DILocation(line: 202, column: 3, scope: !9789)
!9795 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !9790, file: !9790, line: 219, type: !9796, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !9820)
!9796 = !DISubroutineType(types: !9797)
!9797 = !{!9793, !9798}
!9798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9799, size: 32)
!9799 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !9800, line: 70, baseType: !9801)
!9800 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9801 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9800, line: 49, size: 384, elements: !9802)
!9802 = !{!9803, !9804, !9805, !9806, !9807, !9808, !9809}
!9803 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !9801, file: !9800, line: 51, baseType: !121, size: 32)
!9804 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !9801, file: !9800, line: 54, baseType: !121, size: 32, offset: 32)
!9805 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !9801, file: !9800, line: 57, baseType: !121, size: 32, offset: 64)
!9806 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !9801, file: !9800, line: 60, baseType: !121, size: 32, offset: 96)
!9807 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !9801, file: !9800, line: 63, baseType: !121, size: 32, offset: 128)
!9808 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !9801, file: !9800, line: 66, baseType: !121, size: 32, offset: 160)
!9809 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !9801, file: !9800, line: 69, baseType: !9810, size: 192, offset: 192)
!9810 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !9811, line: 73, baseType: !9812)
!9811 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9812 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9811, line: 45, size: 192, elements: !9813)
!9813 = !{!9814, !9815, !9816, !9817, !9818, !9819}
!9814 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !9812, file: !9811, line: 47, baseType: !121, size: 32)
!9815 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !9812, file: !9811, line: 50, baseType: !121, size: 32, offset: 32)
!9816 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !9812, file: !9811, line: 53, baseType: !121, size: 32, offset: 64)
!9817 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !9812, file: !9811, line: 56, baseType: !121, size: 32, offset: 96)
!9818 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !9812, file: !9811, line: 60, baseType: !121, size: 32, offset: 128)
!9819 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !9812, file: !9811, line: 63, baseType: !121, size: 32, offset: 160)
!9820 = !{!9821, !9822, !9823, !9824, !9828}
!9821 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !9795, file: !9790, line: 219, type: !9798)
!9822 = !DILocalVariable(name: "tickstart", scope: !9795, file: !9790, line: 221, type: !121)
!9823 = !DILocalVariable(name: "pll_config", scope: !9795, file: !9790, line: 221, type: !121)
!9824 = !DILocalVariable(name: "pwrclkchanged", scope: !9825, file: !9790, line: 391, type: !9827)
!9825 = distinct !DILexicalBlock(scope: !9826, file: !9790, line: 390, column: 3)
!9826 = distinct !DILexicalBlock(scope: !9795, file: !9790, line: 389, column: 6)
!9827 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !631, line: 188, baseType: !2723)
!9828 = !DILocalVariable(name: "tmpreg", scope: !9829, file: !9790, line: 400, type: !120)
!9829 = distinct !DILexicalBlock(scope: !9830, file: !9790, line: 400, column: 7)
!9830 = distinct !DILexicalBlock(scope: !9831, file: !9790, line: 399, column: 5)
!9831 = distinct !DILexicalBlock(scope: !9825, file: !9790, line: 398, column: 8)
!9832 = !DILocation(line: 0, scope: !9795)
!9833 = !DILocation(line: 224, column: 24, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9795, file: !9790, line: 224, column: 6)
!9835 = !DILocation(line: 224, column: 6, scope: !9795)
!9836 = !DILocation(line: 232, column: 27, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9795, file: !9790, line: 232, column: 6)
!9838 = !DILocation(line: 232, column: 43, scope: !9837)
!9839 = !DILocation(line: 232, column: 69, scope: !9837)
!9840 = !DILocation(line: 232, column: 6, scope: !9795)
!9841 = !DILocation(line: 237, column: 9, scope: !9842)
!9842 = distinct !DILexicalBlock(scope: !9843, file: !9790, line: 237, column: 8)
!9843 = distinct !DILexicalBlock(scope: !9837, file: !9790, line: 233, column: 3)
!9844 = !DILocation(line: 237, column: 39, scope: !9842)
!9845 = !DILocation(line: 237, column: 60, scope: !9842)
!9846 = !DILocation(line: 238, column: 9, scope: !9842)
!9847 = !DILocation(line: 238, column: 39, scope: !9842)
!9848 = !DILocation(line: 238, column: 60, scope: !9842)
!9849 = !DILocation(line: 238, column: 70, scope: !9842)
!9850 = !DILocation(line: 238, column: 78, scope: !9842)
!9851 = !DILocation(line: 238, column: 100, scope: !9842)
!9852 = !DILocation(line: 237, column: 8, scope: !9843)
!9853 = !DILocation(line: 240, column: 11, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9855, file: !9790, line: 240, column: 10)
!9855 = distinct !DILexicalBlock(scope: !9842, file: !9790, line: 239, column: 5)
!9856 = !DILocation(line: 240, column: 57, scope: !9854)
!9857 = !DILocation(line: 240, column: 80, scope: !9854)
!9858 = !DILocation(line: 240, column: 89, scope: !9854)
!9859 = !DILocation(line: 240, column: 10, scope: !9855)
!9860 = !DILocation(line: 248, column: 7, scope: !9861)
!9861 = distinct !DILexicalBlock(scope: !9862, file: !9790, line: 248, column: 7)
!9862 = distinct !DILexicalBlock(scope: !9863, file: !9790, line: 248, column: 7)
!9863 = distinct !DILexicalBlock(scope: !9842, file: !9790, line: 246, column: 5)
!9864 = !DILocation(line: 248, column: 7, scope: !9862)
!9865 = !DILocation(line: 248, column: 7, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9861, file: !9790, line: 248, column: 7)
!9867 = !DILocation(line: 248, column: 7, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9869, file: !9790, line: 248, column: 7)
!9869 = distinct !DILexicalBlock(scope: !9861, file: !9790, line: 248, column: 7)
!9870 = !DILocation(line: 248, column: 7, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9869, file: !9790, line: 248, column: 7)
!9872 = !DILocation(line: 0, scope: !9861)
!9873 = !DILocation(line: 251, column: 30, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9863, file: !9790, line: 251, column: 10)
!9875 = !DILocation(line: 251, column: 40, scope: !9874)
!9876 = !DILocation(line: 0, scope: !9874)
!9877 = !DILocation(line: 251, column: 10, scope: !9863)
!9878 = !DILocation(line: 257, column: 15, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9874, file: !9790, line: 252, column: 7)
!9880 = !DILocation(line: 257, column: 51, scope: !9879)
!9881 = !DILocation(line: 257, column: 9, scope: !9879)
!9882 = !DILocation(line: 259, column: 15, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9884, file: !9790, line: 259, column: 14)
!9884 = distinct !DILexicalBlock(scope: !9879, file: !9790, line: 258, column: 9)
!9885 = !DILocation(line: 259, column: 29, scope: !9883)
!9886 = !DILocation(line: 259, column: 43, scope: !9883)
!9887 = !DILocation(line: 259, column: 14, scope: !9884)
!9888 = distinct !{!9888, !9881, !9889}
!9889 = !DILocation(line: 263, column: 9, scope: !9879)
!9890 = !DILocation(line: 271, column: 15, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9874, file: !9790, line: 266, column: 7)
!9892 = !DILocation(line: 271, column: 9, scope: !9891)
!9893 = !DILocation(line: 273, column: 15, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9895, file: !9790, line: 273, column: 14)
!9895 = distinct !DILexicalBlock(scope: !9891, file: !9790, line: 272, column: 9)
!9896 = !DILocation(line: 273, column: 29, scope: !9894)
!9897 = !DILocation(line: 273, column: 43, scope: !9894)
!9898 = !DILocation(line: 273, column: 14, scope: !9895)
!9899 = distinct !{!9899, !9892, !9900}
!9900 = !DILocation(line: 277, column: 9, scope: !9891)
!9901 = !DILocation(line: 282, column: 27, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9795, file: !9790, line: 282, column: 6)
!9903 = !DILocation(line: 282, column: 43, scope: !9902)
!9904 = !DILocation(line: 282, column: 69, scope: !9902)
!9905 = !DILocation(line: 282, column: 6, scope: !9795)
!9906 = !DILocation(line: 289, column: 9, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9908, file: !9790, line: 289, column: 8)
!9908 = distinct !DILexicalBlock(scope: !9902, file: !9790, line: 283, column: 3)
!9909 = !DILocation(line: 289, column: 39, scope: !9907)
!9910 = !DILocation(line: 289, column: 60, scope: !9907)
!9911 = !DILocation(line: 290, column: 9, scope: !9907)
!9912 = !DILocation(line: 290, column: 39, scope: !9907)
!9913 = !DILocation(line: 290, column: 60, scope: !9907)
!9914 = !DILocation(line: 290, column: 70, scope: !9907)
!9915 = !DILocation(line: 290, column: 78, scope: !9907)
!9916 = !DILocation(line: 290, column: 100, scope: !9907)
!9917 = !DILocation(line: 289, column: 8, scope: !9908)
!9918 = !DILocation(line: 293, column: 11, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9920, file: !9790, line: 293, column: 10)
!9920 = distinct !DILexicalBlock(scope: !9907, file: !9790, line: 291, column: 5)
!9921 = !DILocation(line: 293, column: 57, scope: !9919)
!9922 = !DILocation(line: 293, column: 80, scope: !9919)
!9923 = !DILocation(line: 293, column: 89, scope: !9919)
!9924 = !DILocation(line: 293, column: 10, scope: !9920)
!9925 = !DILocation(line: 307, column: 30, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9927, file: !9790, line: 307, column: 10)
!9927 = distinct !DILexicalBlock(scope: !9907, file: !9790, line: 305, column: 5)
!9928 = !DILocation(line: 307, column: 39, scope: !9926)
!9929 = !DILocation(line: 307, column: 10, scope: !9927)
!9930 = !DILocation(line: 310, column: 9, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9926, file: !9790, line: 308, column: 7)
!9932 = !DILocation(line: 313, column: 21, scope: !9931)
!9933 = !DILocation(line: 316, column: 9, scope: !9931)
!9934 = !DILocation(line: 316, column: 15, scope: !9931)
!9935 = !DILocation(line: 316, column: 51, scope: !9931)
!9936 = !DILocation(line: 318, column: 15, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9938, file: !9790, line: 318, column: 14)
!9938 = distinct !DILexicalBlock(scope: !9931, file: !9790, line: 317, column: 9)
!9939 = !DILocation(line: 318, column: 29, scope: !9937)
!9940 = !DILocation(line: 318, column: 43, scope: !9937)
!9941 = !DILocation(line: 318, column: 14, scope: !9938)
!9942 = distinct !{!9942, !9933, !9943}
!9943 = !DILocation(line: 322, column: 9, scope: !9931)
!9944 = !DILocation(line: 330, column: 9, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9926, file: !9790, line: 328, column: 7)
!9946 = !DILocation(line: 333, column: 21, scope: !9945)
!9947 = !DILocation(line: 336, column: 9, scope: !9945)
!9948 = !DILocation(line: 336, column: 15, scope: !9945)
!9949 = !DILocation(line: 338, column: 15, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9951, file: !9790, line: 338, column: 14)
!9951 = distinct !DILexicalBlock(scope: !9945, file: !9790, line: 337, column: 9)
!9952 = !DILocation(line: 338, column: 29, scope: !9950)
!9953 = !DILocation(line: 338, column: 43, scope: !9950)
!9954 = !DILocation(line: 338, column: 14, scope: !9951)
!9955 = distinct !{!9955, !9947, !9956}
!9956 = !DILocation(line: 342, column: 9, scope: !9945)
!9957 = !DILocation(line: 0, scope: !9907)
!9958 = !DILocation(line: 347, column: 27, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9795, file: !9790, line: 347, column: 6)
!9960 = !DILocation(line: 347, column: 43, scope: !9959)
!9961 = !DILocation(line: 347, column: 69, scope: !9959)
!9962 = !DILocation(line: 347, column: 6, scope: !9795)
!9963 = !DILocation(line: 353, column: 28, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9965, file: !9790, line: 353, column: 8)
!9965 = distinct !DILexicalBlock(scope: !9959, file: !9790, line: 348, column: 3)
!9966 = !DILocation(line: 353, column: 37, scope: !9964)
!9967 = !DILocation(line: 353, column: 8, scope: !9965)
!9968 = !DILocation(line: 356, column: 7, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9964, file: !9790, line: 354, column: 5)
!9970 = !DILocation(line: 359, column: 19, scope: !9969)
!9971 = !DILocation(line: 362, column: 7, scope: !9969)
!9972 = !DILocation(line: 362, column: 13, scope: !9969)
!9973 = !DILocation(line: 362, column: 49, scope: !9969)
!9974 = !DILocation(line: 364, column: 13, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9976, file: !9790, line: 364, column: 12)
!9976 = distinct !DILexicalBlock(scope: !9969, file: !9790, line: 363, column: 7)
!9977 = !DILocation(line: 364, column: 27, scope: !9975)
!9978 = !DILocation(line: 364, column: 41, scope: !9975)
!9979 = !DILocation(line: 364, column: 12, scope: !9976)
!9980 = distinct !{!9980, !9971, !9981}
!9981 = !DILocation(line: 368, column: 7, scope: !9969)
!9982 = !DILocation(line: 373, column: 7, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9964, file: !9790, line: 371, column: 5)
!9984 = !DILocation(line: 376, column: 19, scope: !9983)
!9985 = !DILocation(line: 379, column: 7, scope: !9983)
!9986 = !DILocation(line: 379, column: 13, scope: !9983)
!9987 = !DILocation(line: 381, column: 13, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9989, file: !9790, line: 381, column: 12)
!9989 = distinct !DILexicalBlock(scope: !9983, file: !9790, line: 380, column: 7)
!9990 = !DILocation(line: 381, column: 27, scope: !9988)
!9991 = !DILocation(line: 381, column: 41, scope: !9988)
!9992 = !DILocation(line: 381, column: 12, scope: !9989)
!9993 = distinct !{!9993, !9985, !9994}
!9994 = !DILocation(line: 385, column: 7, scope: !9983)
!9995 = !DILocation(line: 389, column: 27, scope: !9826)
!9996 = !DILocation(line: 389, column: 43, scope: !9826)
!9997 = !DILocation(line: 389, column: 69, scope: !9826)
!9998 = !DILocation(line: 389, column: 6, scope: !9795)
!9999 = !DILocation(line: 0, scope: !9825)
!10000 = !DILocation(line: 398, column: 8, scope: !9831)
!10001 = !DILocation(line: 398, column: 8, scope: !9825)
!10002 = !DILocation(line: 400, column: 7, scope: !9829)
!10003 = !DILocation(line: 400, column: 7, scope: !9830)
!10004 = !DILocation(line: 402, column: 5, scope: !9830)
!10005 = !DILocation(line: 404, column: 8, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !9825, file: !9790, line: 404, column: 8)
!10007 = !DILocation(line: 404, column: 8, scope: !9825)
!10008 = !DILocation(line: 407, column: 7, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10006, file: !9790, line: 405, column: 5)
!10010 = !DILocation(line: 410, column: 19, scope: !10009)
!10011 = !DILocation(line: 412, column: 7, scope: !10009)
!10012 = !DILocation(line: 412, column: 13, scope: !10009)
!10013 = !DILocation(line: 414, column: 13, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10015, file: !9790, line: 414, column: 12)
!10015 = distinct !DILexicalBlock(scope: !10009, file: !9790, line: 413, column: 7)
!10016 = !DILocation(line: 414, column: 27, scope: !10014)
!10017 = !DILocation(line: 414, column: 40, scope: !10014)
!10018 = !DILocation(line: 414, column: 12, scope: !10015)
!10019 = distinct !{!10019, !10011, !10020}
!10020 = !DILocation(line: 418, column: 7, scope: !10009)
!10021 = !DILocation(line: 422, column: 5, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !10023, file: !9790, line: 422, column: 5)
!10023 = distinct !DILexicalBlock(scope: !9825, file: !9790, line: 422, column: 5)
!10024 = !DILocation(line: 422, column: 5, scope: !10023)
!10025 = !DILocation(line: 422, column: 5, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10022, file: !9790, line: 422, column: 5)
!10027 = !DILocation(line: 422, column: 5, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10029, file: !9790, line: 422, column: 5)
!10029 = distinct !DILexicalBlock(scope: !10022, file: !9790, line: 422, column: 5)
!10030 = !DILocation(line: 422, column: 5, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10029, file: !9790, line: 422, column: 5)
!10032 = !DILocation(line: 0, scope: !10022)
!10033 = !DILocation(line: 424, column: 28, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !9825, file: !9790, line: 424, column: 8)
!10035 = !DILocation(line: 424, column: 38, scope: !10034)
!10036 = !DILocation(line: 0, scope: !10034)
!10037 = !DILocation(line: 424, column: 8, scope: !9825)
!10038 = !DILocation(line: 430, column: 13, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !10034, file: !9790, line: 425, column: 5)
!10040 = !DILocation(line: 430, column: 49, scope: !10039)
!10041 = !DILocation(line: 430, column: 7, scope: !10039)
!10042 = !DILocation(line: 432, column: 13, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10044, file: !9790, line: 432, column: 12)
!10044 = distinct !DILexicalBlock(scope: !10039, file: !9790, line: 431, column: 7)
!10045 = !DILocation(line: 432, column: 27, scope: !10043)
!10046 = !DILocation(line: 432, column: 41, scope: !10043)
!10047 = !DILocation(line: 432, column: 12, scope: !10044)
!10048 = distinct !{!10048, !10041, !10049}
!10049 = !DILocation(line: 436, column: 7, scope: !10039)
!10050 = !DILocation(line: 444, column: 13, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10034, file: !9790, line: 439, column: 5)
!10052 = !DILocation(line: 444, column: 7, scope: !10051)
!10053 = !DILocation(line: 446, column: 13, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10055, file: !9790, line: 446, column: 12)
!10055 = distinct !DILexicalBlock(scope: !10051, file: !9790, line: 445, column: 7)
!10056 = !DILocation(line: 446, column: 27, scope: !10054)
!10057 = !DILocation(line: 446, column: 41, scope: !10054)
!10058 = !DILocation(line: 446, column: 12, scope: !10055)
!10059 = distinct !{!10059, !10052, !10060}
!10060 = !DILocation(line: 450, column: 7, scope: !10051)
!10061 = !DILocation(line: 454, column: 8, scope: !9825)
!10062 = !DILocation(line: 456, column: 7, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !10064, file: !9790, line: 455, column: 5)
!10064 = distinct !DILexicalBlock(scope: !9825, file: !9790, line: 454, column: 8)
!10065 = !DILocation(line: 457, column: 5, scope: !10063)
!10066 = !DILocation(line: 462, column: 31, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !9795, file: !9790, line: 462, column: 7)
!10068 = !DILocation(line: 462, column: 41, scope: !10067)
!10069 = !DILocation(line: 462, column: 7, scope: !9795)
!10070 = !DILocation(line: 465, column: 8, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10072, file: !9790, line: 465, column: 8)
!10072 = distinct !DILexicalBlock(scope: !10067, file: !9790, line: 463, column: 3)
!10073 = !DILocation(line: 465, column: 38, scope: !10071)
!10074 = !DILocation(line: 465, column: 8, scope: !10072)
!10075 = !DILocation(line: 467, column: 44, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10077, file: !9790, line: 467, column: 10)
!10077 = distinct !DILexicalBlock(scope: !10071, file: !9790, line: 466, column: 5)
!10078 = !DILocation(line: 0, scope: !10076)
!10079 = !DILocation(line: 467, column: 10, scope: !10077)
!10080 = !DILocation(line: 483, column: 15, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !10076, file: !9790, line: 468, column: 7)
!10082 = !DILocation(line: 483, column: 9, scope: !10081)
!10083 = !DILocation(line: 485, column: 15, scope: !10084)
!10084 = distinct !DILexicalBlock(scope: !10085, file: !9790, line: 485, column: 14)
!10085 = distinct !DILexicalBlock(scope: !10081, file: !9790, line: 484, column: 9)
!10086 = !DILocation(line: 485, column: 29, scope: !10084)
!10087 = !DILocation(line: 485, column: 43, scope: !10084)
!10088 = !DILocation(line: 485, column: 14, scope: !10085)
!10089 = distinct !{!10089, !10082, !10090}
!10090 = !DILocation(line: 489, column: 9, scope: !10081)
!10091 = !DILocation(line: 492, column: 9, scope: !10081)
!10092 = !DILocation(line: 498, column: 9, scope: !10081)
!10093 = !DILocation(line: 501, column: 21, scope: !10081)
!10094 = !DILocation(line: 504, column: 9, scope: !10081)
!10095 = !DILocation(line: 504, column: 15, scope: !10081)
!10096 = !DILocation(line: 504, column: 51, scope: !10081)
!10097 = !DILocation(line: 506, column: 15, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10099, file: !9790, line: 506, column: 14)
!10099 = distinct !DILexicalBlock(scope: !10081, file: !9790, line: 505, column: 9)
!10100 = !DILocation(line: 506, column: 29, scope: !10098)
!10101 = !DILocation(line: 506, column: 43, scope: !10098)
!10102 = !DILocation(line: 506, column: 14, scope: !10099)
!10103 = distinct !{!10103, !10094, !10104}
!10104 = !DILocation(line: 510, column: 9, scope: !10081)
!10105 = !DILocation(line: 521, column: 15, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !10076, file: !9790, line: 513, column: 7)
!10107 = !DILocation(line: 521, column: 9, scope: !10106)
!10108 = !DILocation(line: 523, column: 15, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10110, file: !9790, line: 523, column: 14)
!10110 = distinct !DILexicalBlock(scope: !10106, file: !9790, line: 522, column: 9)
!10111 = !DILocation(line: 523, column: 29, scope: !10109)
!10112 = !DILocation(line: 523, column: 43, scope: !10109)
!10113 = !DILocation(line: 523, column: 14, scope: !10110)
!10114 = distinct !{!10114, !10107, !10115}
!10115 = !DILocation(line: 527, column: 9, scope: !10106)
!10116 = !DILocation(line: 533, column: 44, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10118, file: !9790, line: 533, column: 10)
!10118 = distinct !DILexicalBlock(scope: !10071, file: !9790, line: 531, column: 5)
!10119 = !DILocation(line: 533, column: 10, scope: !10118)
!10120 = !DILocation(line: 540, column: 27, scope: !10121)
!10121 = distinct !DILexicalBlock(scope: !10117, file: !9790, line: 538, column: 7)
!10122 = !DILocation(line: 551, column: 14, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10121, file: !9790, line: 550, column: 13)
!10124 = !DILocation(line: 551, column: 81, scope: !10123)
!10125 = !DILocation(line: 551, column: 55, scope: !10123)
!10126 = !DILocation(line: 551, column: 92, scope: !10123)
!10127 = !DILocation(line: 552, column: 14, scope: !10123)
!10128 = !DILocation(line: 552, column: 80, scope: !10123)
!10129 = !DILocation(line: 552, column: 53, scope: !10123)
!10130 = !DILocation(line: 552, column: 111, scope: !10123)
!10131 = !DILocation(line: 553, column: 14, scope: !10123)
!10132 = !DILocation(line: 553, column: 80, scope: !10123)
!10133 = !DILocation(line: 553, column: 86, scope: !10123)
!10134 = !DILocation(line: 553, column: 53, scope: !10123)
!10135 = !DILocation(line: 553, column: 111, scope: !10123)
!10136 = !DILocation(line: 554, column: 14, scope: !10123)
!10137 = !DILocation(line: 554, column: 82, scope: !10123)
!10138 = !DILocation(line: 554, column: 101, scope: !10123)
!10139 = !DILocation(line: 554, column: 53, scope: !10123)
!10140 = !DILocation(line: 554, column: 126, scope: !10123)
!10141 = !DILocation(line: 555, column: 14, scope: !10123)
!10142 = !DILocation(line: 555, column: 80, scope: !10123)
!10143 = !DILocation(line: 555, column: 85, scope: !10123)
!10144 = !DILocation(line: 555, column: 53, scope: !10123)
!10145 = !DILocation(line: 550, column: 13, scope: !10121)
!10146 = !DILocation(line: 563, column: 3, scope: !9795)
!10147 = !DILocation(line: 564, column: 1, scope: !9795)
!10148 = !DISubprogram(name: "HAL_GetTick", scope: !10149, file: !10149, line: 234, type: !5545, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!10149 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10150 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !9790, file: !9790, line: 591, type: !10151, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !10162)
!10151 = !DISubroutineType(types: !10152)
!10152 = !{!9793, !10153, !121}
!10153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10154, size: 32)
!10154 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !9800, line: 92, baseType: !10155)
!10155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9800, line: 75, size: 160, elements: !10156)
!10156 = !{!10157, !10158, !10159, !10160, !10161}
!10157 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !10155, file: !9800, line: 77, baseType: !121, size: 32)
!10158 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !10155, file: !9800, line: 80, baseType: !121, size: 32, offset: 32)
!10159 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10155, file: !9800, line: 83, baseType: !121, size: 32, offset: 64)
!10160 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10155, file: !9800, line: 86, baseType: !121, size: 32, offset: 96)
!10161 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10155, file: !9800, line: 89, baseType: !121, size: 32, offset: 128)
!10162 = !{!10163, !10164, !10165}
!10163 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !10150, file: !9790, line: 591, type: !10153)
!10164 = !DILocalVariable(name: "FLatency", arg: 2, scope: !10150, file: !9790, line: 591, type: !121)
!10165 = !DILocalVariable(name: "tickstart", scope: !10150, file: !9790, line: 593, type: !121)
!10166 = !DILocation(line: 0, scope: !10150)
!10167 = !DILocation(line: 596, column: 24, scope: !10168)
!10168 = distinct !DILexicalBlock(scope: !10150, file: !9790, line: 596, column: 6)
!10169 = !DILocation(line: 596, column: 6, scope: !10150)
!10170 = !DILocation(line: 610, column: 17, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10150, file: !9790, line: 610, column: 6)
!10172 = !DILocation(line: 610, column: 15, scope: !10171)
!10173 = !DILocation(line: 610, column: 6, scope: !10150)
!10174 = !DILocation(line: 613, column: 5, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10171, file: !9790, line: 611, column: 3)
!10176 = !DILocation(line: 617, column: 8, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10175, file: !9790, line: 617, column: 8)
!10178 = !DILocation(line: 617, column: 34, scope: !10177)
!10179 = !DILocation(line: 617, column: 8, scope: !10175)
!10180 = !DILocation(line: 624, column: 27, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10150, file: !9790, line: 624, column: 6)
!10182 = !DILocation(line: 624, column: 38, scope: !10181)
!10183 = !DILocation(line: 624, column: 60, scope: !10181)
!10184 = !DILocation(line: 624, column: 6, scope: !10150)
!10185 = !DILocation(line: 628, column: 40, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10187, file: !9790, line: 628, column: 8)
!10187 = distinct !DILexicalBlock(scope: !10181, file: !9790, line: 625, column: 3)
!10188 = !DILocation(line: 628, column: 63, scope: !10186)
!10189 = !DILocation(line: 628, column: 8, scope: !10187)
!10190 = !DILocation(line: 630, column: 7, scope: !10191)
!10191 = distinct !DILexicalBlock(scope: !10186, file: !9790, line: 629, column: 5)
!10192 = !DILocation(line: 633, column: 29, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10187, file: !9790, line: 633, column: 8)
!10194 = !DILocation(line: 631, column: 5, scope: !10191)
!10195 = !DILocation(line: 633, column: 40, scope: !10193)
!10196 = !DILocation(line: 633, column: 63, scope: !10193)
!10197 = !DILocation(line: 633, column: 8, scope: !10187)
!10198 = !DILocation(line: 635, column: 7, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10193, file: !9790, line: 634, column: 5)
!10200 = !DILocation(line: 636, column: 5, scope: !10199)
!10201 = !DILocation(line: 639, column: 5, scope: !10187)
!10202 = !DILocation(line: 643, column: 27, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10150, file: !9790, line: 643, column: 6)
!10204 = !DILocation(line: 640, column: 3, scope: !10187)
!10205 = !DILocation(line: 643, column: 38, scope: !10203)
!10206 = !DILocation(line: 643, column: 62, scope: !10203)
!10207 = !DILocation(line: 643, column: 6, scope: !10150)
!10208 = !DILocation(line: 648, column: 27, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10210, file: !9790, line: 648, column: 8)
!10210 = distinct !DILexicalBlock(scope: !10203, file: !9790, line: 644, column: 3)
!10211 = !DILocation(line: 648, column: 8, scope: !10210)
!10212 = !DILocation(line: 651, column: 10, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10214, file: !9790, line: 651, column: 10)
!10214 = distinct !DILexicalBlock(scope: !10209, file: !9790, line: 649, column: 5)
!10215 = !DILocation(line: 651, column: 46, scope: !10213)
!10216 = !DILocation(line: 651, column: 10, scope: !10214)
!10217 = !DILocation(line: 661, column: 10, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10219, file: !9790, line: 661, column: 10)
!10219 = distinct !DILexicalBlock(scope: !10220, file: !9790, line: 659, column: 5)
!10220 = distinct !DILexicalBlock(scope: !10209, file: !9790, line: 657, column: 13)
!10221 = !DILocation(line: 661, column: 46, scope: !10218)
!10222 = !DILocation(line: 661, column: 10, scope: !10219)
!10223 = !DILocation(line: 670, column: 10, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10225, file: !9790, line: 670, column: 10)
!10225 = distinct !DILexicalBlock(scope: !10220, file: !9790, line: 668, column: 5)
!10226 = !DILocation(line: 670, column: 46, scope: !10224)
!10227 = !DILocation(line: 670, column: 10, scope: !10225)
!10228 = !DILocation(line: 676, column: 5, scope: !10210)
!10229 = !DILocation(line: 679, column: 17, scope: !10210)
!10230 = !DILocation(line: 681, column: 5, scope: !10210)
!10231 = !DILocation(line: 681, column: 12, scope: !10210)
!10232 = !DILocation(line: 681, column: 65, scope: !10210)
!10233 = !DILocation(line: 681, column: 78, scope: !10210)
!10234 = !DILocation(line: 681, column: 42, scope: !10210)
!10235 = !DILocation(line: 683, column: 12, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10237, file: !9790, line: 683, column: 11)
!10237 = distinct !DILexicalBlock(scope: !10210, file: !9790, line: 682, column: 5)
!10238 = !DILocation(line: 683, column: 26, scope: !10236)
!10239 = !DILocation(line: 683, column: 39, scope: !10236)
!10240 = !DILocation(line: 683, column: 11, scope: !10237)
!10241 = distinct !{!10241, !10230, !10242}
!10242 = !DILocation(line: 687, column: 5, scope: !10210)
!10243 = !DILocation(line: 691, column: 17, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10150, file: !9790, line: 691, column: 6)
!10245 = !DILocation(line: 691, column: 15, scope: !10244)
!10246 = !DILocation(line: 691, column: 6, scope: !10150)
!10247 = !DILocation(line: 694, column: 5, scope: !10248)
!10248 = distinct !DILexicalBlock(scope: !10244, file: !9790, line: 692, column: 3)
!10249 = !DILocation(line: 698, column: 8, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10248, file: !9790, line: 698, column: 8)
!10251 = !DILocation(line: 698, column: 34, scope: !10250)
!10252 = !DILocation(line: 698, column: 8, scope: !10248)
!10253 = !DILocation(line: 705, column: 27, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10150, file: !9790, line: 705, column: 6)
!10255 = !DILocation(line: 705, column: 38, scope: !10254)
!10256 = !DILocation(line: 705, column: 61, scope: !10254)
!10257 = !DILocation(line: 705, column: 6, scope: !10150)
!10258 = !DILocation(line: 708, column: 5, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10254, file: !9790, line: 706, column: 3)
!10260 = !DILocation(line: 712, column: 27, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10150, file: !9790, line: 712, column: 6)
!10262 = !DILocation(line: 709, column: 3, scope: !10259)
!10263 = !DILocation(line: 712, column: 38, scope: !10261)
!10264 = !DILocation(line: 712, column: 61, scope: !10261)
!10265 = !DILocation(line: 712, column: 6, scope: !10150)
!10266 = !DILocation(line: 715, column: 5, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10261, file: !9790, line: 713, column: 3)
!10268 = !DILocation(line: 716, column: 3, scope: !10267)
!10269 = !DILocation(line: 719, column: 21, scope: !10150)
!10270 = !DILocation(line: 719, column: 70, scope: !10150)
!10271 = !DILocation(line: 719, column: 91, scope: !10150)
!10272 = !DILocation(line: 719, column: 50, scope: !10150)
!10273 = !DILocation(line: 719, column: 47, scope: !10150)
!10274 = !DILocation(line: 719, column: 19, scope: !10150)
!10275 = !DILocation(line: 722, column: 17, scope: !10150)
!10276 = !DILocation(line: 722, column: 3, scope: !10150)
!10277 = !DILocation(line: 724, column: 3, scope: !10150)
!10278 = !DILocation(line: 725, column: 1, scope: !10150)
!10279 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !9790, file: !9790, line: 885, type: !5545, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !10280)
!10280 = !{!10281, !10282, !10283, !10284}
!10281 = !DILocalVariable(name: "pllm", scope: !10279, file: !9790, line: 887, type: !121)
!10282 = !DILocalVariable(name: "pllvco", scope: !10279, file: !9790, line: 887, type: !121)
!10283 = !DILocalVariable(name: "pllp", scope: !10279, file: !9790, line: 887, type: !121)
!10284 = !DILocalVariable(name: "sysclockfreq", scope: !10279, file: !9790, line: 888, type: !121)
!10285 = !DILocation(line: 0, scope: !10279)
!10286 = !DILocation(line: 891, column: 16, scope: !10279)
!10287 = !DILocation(line: 891, column: 21, scope: !10279)
!10288 = !DILocation(line: 891, column: 3, scope: !10279)
!10289 = !DILocation(line: 901, column: 7, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10291, file: !9790, line: 899, column: 5)
!10291 = distinct !DILexicalBlock(scope: !10279, file: !9790, line: 892, column: 3)
!10292 = !DILocation(line: 907, column: 19, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10291, file: !9790, line: 904, column: 5)
!10294 = !DILocation(line: 907, column: 27, scope: !10293)
!10295 = !DILocation(line: 908, column: 10, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !10293, file: !9790, line: 908, column: 10)
!10297 = !DILocation(line: 908, column: 40, scope: !10296)
!10298 = !DILocation(line: 0, scope: !10296)
!10299 = !DILocation(line: 908, column: 10, scope: !10293)
!10300 = !DILocation(line: 911, column: 53, scope: !10301)
!10301 = distinct !DILexicalBlock(scope: !10296, file: !9790, line: 909, column: 7)
!10302 = !DILocation(line: 911, column: 130, scope: !10301)
!10303 = !DILocation(line: 912, column: 7, scope: !10301)
!10304 = !DILocation(line: 916, column: 56, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10296, file: !9790, line: 914, column: 7)
!10306 = !DILocation(line: 916, column: 53, scope: !10305)
!10307 = !DILocation(line: 916, column: 132, scope: !10305)
!10308 = !DILocation(line: 916, column: 130, scope: !10305)
!10309 = !DILocation(line: 916, column: 18, scope: !10305)
!10310 = !DILocation(line: 918, column: 23, scope: !10293)
!10311 = !DILocation(line: 918, column: 82, scope: !10293)
!10312 = !DILocation(line: 920, column: 28, scope: !10293)
!10313 = !DILocation(line: 921, column: 7, scope: !10293)
!10314 = !DILocation(line: 0, scope: !10291)
!10315 = !DILocation(line: 929, column: 3, scope: !10279)
!10316 = !DISubprogram(name: "HAL_InitTick", scope: !10149, file: !10149, line: 223, type: !10317, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!10317 = !DISubroutineType(types: !10318)
!10318 = !{!9793, !121}
!10319 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !9790, file: !9790, line: 775, type: !10320, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !10322)
!10320 = !DISubroutineType(types: !10321)
!10321 = !{null, !121, !121, !121}
!10322 = !{!10323, !10324, !10325, !10326, !10336, !10340}
!10323 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !10319, file: !9790, line: 775, type: !121)
!10324 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !10319, file: !9790, line: 775, type: !121)
!10325 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !10319, file: !9790, line: 775, type: !121)
!10326 = !DILocalVariable(name: "GPIO_InitStruct", scope: !10319, file: !9790, line: 777, type: !10327)
!10327 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !10328, line: 62, baseType: !10329)
!10328 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10329 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10328, line: 46, size: 160, elements: !10330)
!10330 = !{!10331, !10332, !10333, !10334, !10335}
!10331 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !10329, file: !10328, line: 48, baseType: !121, size: 32)
!10332 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !10329, file: !10328, line: 51, baseType: !121, size: 32, offset: 32)
!10333 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !10329, file: !10328, line: 54, baseType: !121, size: 32, offset: 64)
!10334 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !10329, file: !10328, line: 57, baseType: !121, size: 32, offset: 96)
!10335 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !10329, file: !10328, line: 60, baseType: !121, size: 32, offset: 128)
!10336 = !DILocalVariable(name: "tmpreg", scope: !10337, file: !9790, line: 787, type: !120)
!10337 = distinct !DILexicalBlock(scope: !10338, file: !9790, line: 787, column: 5)
!10338 = distinct !DILexicalBlock(scope: !10339, file: !9790, line: 783, column: 3)
!10339 = distinct !DILexicalBlock(scope: !10319, file: !9790, line: 782, column: 6)
!10340 = !DILocalVariable(name: "tmpreg", scope: !10341, file: !9790, line: 811, type: !120)
!10341 = distinct !DILexicalBlock(scope: !10342, file: !9790, line: 811, column: 5)
!10342 = distinct !DILexicalBlock(scope: !10339, file: !9790, line: 807, column: 3)
!10343 = !DILocation(line: 0, scope: !10319)
!10344 = !DILocation(line: 777, column: 3, scope: !10319)
!10345 = !DILocation(line: 777, column: 20, scope: !10319)
!10346 = !DILocation(line: 782, column: 15, scope: !10339)
!10347 = !DILocation(line: 782, column: 6, scope: !10319)
!10348 = !DILocation(line: 787, column: 5, scope: !10337)
!10349 = !DILocation(line: 787, column: 5, scope: !10338)
!10350 = !DILocation(line: 790, column: 21, scope: !10338)
!10351 = !DILocation(line: 790, column: 25, scope: !10338)
!10352 = !DILocation(line: 791, column: 21, scope: !10338)
!10353 = !DILocation(line: 791, column: 26, scope: !10338)
!10354 = !DILocation(line: 792, column: 21, scope: !10338)
!10355 = !DILocation(line: 792, column: 27, scope: !10338)
!10356 = !DILocation(line: 793, column: 21, scope: !10338)
!10357 = !DILocation(line: 793, column: 26, scope: !10338)
!10358 = !DILocation(line: 794, column: 21, scope: !10338)
!10359 = !DILocation(line: 794, column: 31, scope: !10338)
!10360 = !DILocation(line: 795, column: 5, scope: !10338)
!10361 = !DILocation(line: 798, column: 5, scope: !10338)
!10362 = !DILocation(line: 804, column: 3, scope: !10338)
!10363 = !DILocation(line: 811, column: 5, scope: !10341)
!10364 = !DILocation(line: 811, column: 5, scope: !10342)
!10365 = !DILocation(line: 814, column: 21, scope: !10342)
!10366 = !DILocation(line: 814, column: 25, scope: !10342)
!10367 = !DILocation(line: 815, column: 21, scope: !10342)
!10368 = !DILocation(line: 815, column: 26, scope: !10342)
!10369 = !DILocation(line: 816, column: 21, scope: !10342)
!10370 = !DILocation(line: 816, column: 27, scope: !10342)
!10371 = !DILocation(line: 817, column: 21, scope: !10342)
!10372 = !DILocation(line: 817, column: 26, scope: !10342)
!10373 = !DILocation(line: 818, column: 21, scope: !10342)
!10374 = !DILocation(line: 818, column: 31, scope: !10342)
!10375 = !DILocation(line: 819, column: 5, scope: !10342)
!10376 = !DILocation(line: 822, column: 5, scope: !10342)
!10377 = !DILocation(line: 0, scope: !10339)
!10378 = !DILocation(line: 830, column: 1, scope: !10319)
!10379 = !DISubprogram(name: "HAL_GPIO_Init", scope: !10328, file: !10328, line: 224, type: !10380, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!10380 = !DISubroutineType(types: !10381)
!10381 = !{null, !2786, !10382}
!10382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10327, size: 32)
!10383 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !9790, file: !9790, line: 841, type: !2904, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !322)
!10384 = !DILocation(line: 843, column: 38, scope: !10383)
!10385 = !DILocation(line: 844, column: 1, scope: !10383)
!10386 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !9790, file: !9790, line: 850, type: !2904, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !322)
!10387 = !DILocation(line: 852, column: 38, scope: !10386)
!10388 = !DILocation(line: 853, column: 1, scope: !10386)
!10389 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !9790, file: !9790, line: 941, type: !5545, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !322)
!10390 = !DILocation(line: 943, column: 10, scope: !10389)
!10391 = !DILocation(line: 943, column: 3, scope: !10389)
!10392 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !9790, file: !9790, line: 952, type: !5545, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !322)
!10393 = !DILocation(line: 955, column: 11, scope: !10392)
!10394 = !DILocation(line: 955, column: 56, scope: !10392)
!10395 = !DILocation(line: 955, column: 78, scope: !10392)
!10396 = !DILocation(line: 955, column: 36, scope: !10392)
!10397 = !DILocation(line: 955, column: 33, scope: !10392)
!10398 = !DILocation(line: 955, column: 3, scope: !10392)
!10399 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !9790, file: !9790, line: 964, type: !5545, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !322)
!10400 = !DILocation(line: 967, column: 11, scope: !10399)
!10401 = !DILocation(line: 967, column: 55, scope: !10399)
!10402 = !DILocation(line: 967, column: 77, scope: !10399)
!10403 = !DILocation(line: 967, column: 35, scope: !10399)
!10404 = !DILocation(line: 967, column: 32, scope: !10399)
!10405 = !DILocation(line: 967, column: 3, scope: !10399)
!10406 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !9790, file: !9790, line: 977, type: !10407, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !10409)
!10407 = !DISubroutineType(types: !10408)
!10408 = !{null, !9798}
!10409 = !{!10410}
!10410 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10406, file: !9790, line: 977, type: !9798)
!10411 = !DILocation(line: 0, scope: !10406)
!10412 = !DILocation(line: 980, column: 22, scope: !10406)
!10413 = !DILocation(line: 980, column: 37, scope: !10406)
!10414 = !DILocation(line: 983, column: 12, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !10406, file: !9790, line: 983, column: 6)
!10416 = !DILocation(line: 983, column: 15, scope: !10415)
!10417 = !DILocation(line: 983, column: 31, scope: !10415)
!10418 = !DILocation(line: 983, column: 6, scope: !10406)
!10419 = !DILocation(line: 985, column: 24, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10415, file: !9790, line: 984, column: 3)
!10421 = !DILocation(line: 985, column: 33, scope: !10420)
!10422 = !DILocation(line: 986, column: 3, scope: !10420)
!10423 = !DILocation(line: 987, column: 17, scope: !10424)
!10424 = distinct !DILexicalBlock(scope: !10415, file: !9790, line: 987, column: 11)
!10425 = !DILocation(line: 987, column: 20, scope: !10424)
!10426 = !DILocation(line: 987, column: 35, scope: !10424)
!10427 = !DILocation(line: 0, scope: !10424)
!10428 = !DILocation(line: 987, column: 11, scope: !10415)
!10429 = !DILocation(line: 989, column: 33, scope: !10430)
!10430 = distinct !DILexicalBlock(scope: !10424, file: !9790, line: 988, column: 3)
!10431 = !DILocation(line: 990, column: 3, scope: !10430)
!10432 = !DILocation(line: 993, column: 33, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10424, file: !9790, line: 992, column: 3)
!10434 = !DILocation(line: 997, column: 12, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10406, file: !9790, line: 997, column: 6)
!10436 = !DILocation(line: 997, column: 15, scope: !10435)
!10437 = !DILocation(line: 1003, column: 24, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10435, file: !9790, line: 1002, column: 3)
!10439 = !DILocation(line: 1003, column: 33, scope: !10438)
!10440 = !DILocation(line: 1006, column: 61, scope: !10406)
!10441 = !DILocation(line: 1006, column: 81, scope: !10406)
!10442 = !DILocation(line: 1006, column: 22, scope: !10406)
!10443 = !DILocation(line: 1006, column: 42, scope: !10406)
!10444 = !DILocation(line: 1009, column: 12, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10406, file: !9790, line: 1009, column: 6)
!10446 = !DILocation(line: 1009, column: 17, scope: !10445)
!10447 = !DILocation(line: 1009, column: 35, scope: !10445)
!10448 = !DILocation(line: 1009, column: 6, scope: !10406)
!10449 = !DILocation(line: 1011, column: 24, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !10445, file: !9790, line: 1010, column: 3)
!10451 = !DILocation(line: 1011, column: 33, scope: !10450)
!10452 = !DILocation(line: 1012, column: 3, scope: !10450)
!10453 = !DILocation(line: 1013, column: 17, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10445, file: !9790, line: 1013, column: 11)
!10455 = !DILocation(line: 1013, column: 22, scope: !10454)
!10456 = !DILocation(line: 1013, column: 39, scope: !10454)
!10457 = !DILocation(line: 0, scope: !10454)
!10458 = !DILocation(line: 1013, column: 11, scope: !10445)
!10459 = !DILocation(line: 1015, column: 33, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10454, file: !9790, line: 1014, column: 3)
!10461 = !DILocation(line: 1016, column: 3, scope: !10460)
!10462 = !DILocation(line: 1019, column: 33, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10454, file: !9790, line: 1018, column: 3)
!10464 = !DILocation(line: 1023, column: 12, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10406, file: !9790, line: 1023, column: 6)
!10466 = !DILocation(line: 1023, column: 16, scope: !10465)
!10467 = !DILocation(line: 1029, column: 24, scope: !10468)
!10468 = distinct !DILexicalBlock(scope: !10465, file: !9790, line: 1028, column: 3)
!10469 = !DILocation(line: 1029, column: 33, scope: !10468)
!10470 = !DILocation(line: 1033, column: 12, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10406, file: !9790, line: 1033, column: 6)
!10472 = !DILocation(line: 1033, column: 15, scope: !10471)
!10473 = !DILocation(line: 1033, column: 30, scope: !10471)
!10474 = !DILocation(line: 1033, column: 6, scope: !10406)
!10475 = !DILocation(line: 1039, column: 28, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10471, file: !9790, line: 1038, column: 3)
!10477 = !DILocation(line: 1039, column: 37, scope: !10476)
!10478 = !DILocation(line: 1041, column: 54, scope: !10406)
!10479 = !DILocation(line: 1041, column: 62, scope: !10406)
!10480 = !DILocation(line: 1041, column: 26, scope: !10406)
!10481 = !DILocation(line: 1041, column: 36, scope: !10406)
!10482 = !DILocation(line: 1042, column: 49, scope: !10406)
!10483 = !DILocation(line: 1042, column: 57, scope: !10406)
!10484 = !DILocation(line: 1042, column: 26, scope: !10406)
!10485 = !DILocation(line: 1042, column: 31, scope: !10406)
!10486 = !DILocation(line: 1043, column: 50, scope: !10406)
!10487 = !DILocation(line: 1043, column: 78, scope: !10406)
!10488 = !DILocation(line: 1043, column: 26, scope: !10406)
!10489 = !DILocation(line: 1043, column: 31, scope: !10406)
!10490 = !DILocation(line: 1044, column: 52, scope: !10406)
!10491 = !DILocation(line: 1044, column: 102, scope: !10406)
!10492 = !DILocation(line: 1044, column: 109, scope: !10406)
!10493 = !DILocation(line: 1044, column: 26, scope: !10406)
!10494 = !DILocation(line: 1044, column: 31, scope: !10406)
!10495 = !DILocation(line: 1045, column: 50, scope: !10406)
!10496 = !DILocation(line: 1045, column: 78, scope: !10406)
!10497 = !DILocation(line: 1045, column: 26, scope: !10406)
!10498 = !DILocation(line: 1045, column: 31, scope: !10406)
!10499 = !DILocation(line: 1046, column: 1, scope: !10406)
!10500 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !9790, file: !9790, line: 1056, type: !10501, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !10503)
!10501 = !DISubroutineType(types: !10502)
!10502 = !{null, !10153, !687}
!10503 = !{!10504, !10505}
!10504 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !10500, file: !9790, line: 1056, type: !10153)
!10505 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !10500, file: !9790, line: 1056, type: !687)
!10506 = !DILocation(line: 0, scope: !10500)
!10507 = !DILocation(line: 1059, column: 22, scope: !10500)
!10508 = !DILocation(line: 1059, column: 32, scope: !10500)
!10509 = !DILocation(line: 1062, column: 53, scope: !10500)
!10510 = !DILocation(line: 1062, column: 58, scope: !10500)
!10511 = !DILocation(line: 1062, column: 22, scope: !10500)
!10512 = !DILocation(line: 1062, column: 35, scope: !10500)
!10513 = !DILocation(line: 1065, column: 54, scope: !10500)
!10514 = !DILocation(line: 1065, column: 59, scope: !10500)
!10515 = !DILocation(line: 1065, column: 22, scope: !10500)
!10516 = !DILocation(line: 1065, column: 36, scope: !10500)
!10517 = !DILocation(line: 1068, column: 55, scope: !10500)
!10518 = !DILocation(line: 1068, column: 60, scope: !10500)
!10519 = !DILocation(line: 1068, column: 22, scope: !10500)
!10520 = !DILocation(line: 1068, column: 37, scope: !10500)
!10521 = !DILocation(line: 1071, column: 56, scope: !10500)
!10522 = !DILocation(line: 1071, column: 79, scope: !10500)
!10523 = !DILocation(line: 1071, column: 22, scope: !10500)
!10524 = !DILocation(line: 1071, column: 37, scope: !10500)
!10525 = !DILocation(line: 1074, column: 34, scope: !10500)
!10526 = !DILocation(line: 1074, column: 38, scope: !10500)
!10527 = !DILocation(line: 1074, column: 14, scope: !10500)
!10528 = !DILocation(line: 1075, column: 1, scope: !10500)
!10529 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !9790, file: !9790, line: 1082, type: !2904, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !322)
!10530 = !DILocation(line: 1085, column: 6, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10529, file: !9790, line: 1085, column: 6)
!10532 = !DILocation(line: 1085, column: 6, scope: !10529)
!10533 = !DILocation(line: 1088, column: 5, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10531, file: !9790, line: 1086, column: 3)
!10535 = !DILocation(line: 1091, column: 5, scope: !10534)
!10536 = !DILocation(line: 1092, column: 3, scope: !10534)
!10537 = !DILocation(line: 1093, column: 1, scope: !10529)
!10538 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !9790, file: !9790, line: 1099, type: !2904, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !322)
!10539 = !DILocation(line: 1104, column: 1, scope: !10538)
!10540 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !10541, file: !10541, line: 257, type: !5555, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10542)
!10541 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10542 = !{!10543}
!10543 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10540, file: !10541, line: 257, type: !121)
!10544 = !DILocation(line: 0, scope: !10540)
!10545 = !DILocation(line: 260, column: 3, scope: !10540)
!10546 = !DILocation(line: 261, column: 1, scope: !10540)
!10547 = distinct !DISubprogram(name: "LL_InitTick", scope: !10548, file: !10548, line: 260, type: !8218, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10549)
!10548 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10549 = !{!10550, !10551}
!10550 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10547, file: !10548, line: 260, type: !121)
!10551 = !DILocalVariable(name: "Ticks", arg: 2, scope: !10547, file: !10548, line: 260, type: !121)
!10552 = !DILocation(line: 0, scope: !10547)
!10553 = !DILocation(line: 263, column: 46, scope: !10547)
!10554 = !DILocation(line: 263, column: 55, scope: !10547)
!10555 = !DILocation(line: 263, column: 18, scope: !10547)
!10556 = !DILocation(line: 264, column: 18, scope: !10547)
!10557 = !DILocation(line: 265, column: 18, scope: !10547)
!10558 = !DILocation(line: 267, column: 1, scope: !10547)
!10559 = distinct !DISubprogram(name: "LL_mDelay", scope: !10541, file: !10541, line: 273, type: !5555, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10560)
!10560 = !{!10561, !10562}
!10561 = !DILocalVariable(name: "Delay", arg: 1, scope: !10559, file: !10541, line: 273, type: !121)
!10562 = !DILocalVariable(name: "tmp", scope: !10559, file: !10541, line: 275, type: !120)
!10563 = !DILocation(line: 0, scope: !10559)
!10564 = !DILocation(line: 275, column: 3, scope: !10559)
!10565 = !DILocation(line: 275, column: 18, scope: !10559)
!10566 = !DILocation(line: 275, column: 33, scope: !10559)
!10567 = !DILocation(line: 277, column: 10, scope: !10559)
!10568 = !DILocation(line: 280, column: 12, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10559, file: !10541, line: 280, column: 6)
!10570 = !DILocation(line: 285, column: 3, scope: !10559)
!10571 = !DILocation(line: 287, column: 18, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10573, file: !10541, line: 287, column: 8)
!10573 = distinct !DILexicalBlock(scope: !10559, file: !10541, line: 286, column: 3)
!10574 = !DILocation(line: 292, column: 1, scope: !10559)
!10575 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !10541, file: !10541, line: 323, type: !5555, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10576)
!10576 = !{!10577}
!10577 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10575, file: !10541, line: 323, type: !121)
!10578 = !DILocation(line: 0, scope: !10575)
!10579 = !DILocation(line: 326, column: 19, scope: !10575)
!10580 = !DILocation(line: 327, column: 1, scope: !10575)
!10581 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !10541, file: !10541, line: 338, type: !10582, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10585)
!10582 = !DISubroutineType(types: !10583)
!10583 = !{!10584, !121}
!10584 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !631, line: 201, baseType: !630)
!10585 = !{!10586, !10587, !10588, !10589, !10590}
!10586 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !10581, file: !10541, line: 338, type: !121)
!10587 = !DILocalVariable(name: "timeout", scope: !10581, file: !10541, line: 340, type: !121)
!10588 = !DILocalVariable(name: "getlatency", scope: !10581, file: !10541, line: 341, type: !121)
!10589 = !DILocalVariable(name: "latency", scope: !10581, file: !10541, line: 342, type: !121)
!10590 = !DILocalVariable(name: "status", scope: !10581, file: !10541, line: 343, type: !10584)
!10591 = !DILocation(line: 0, scope: !10581)
!10592 = !DILocation(line: 347, column: 21, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10581, file: !10541, line: 347, column: 6)
!10594 = !DILocation(line: 347, column: 6, scope: !10581)
!10595 = !DILocation(line: 353, column: 8, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10597, file: !10541, line: 353, column: 8)
!10597 = distinct !DILexicalBlock(scope: !10593, file: !10541, line: 352, column: 3)
!10598 = !DILocation(line: 353, column: 40, scope: !10596)
!10599 = !DILocation(line: 353, column: 8, scope: !10597)
!10600 = !DILocation(line: 374, column: 55, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10602, file: !10541, line: 374, column: 10)
!10602 = distinct !DILexicalBlock(scope: !10596, file: !10541, line: 354, column: 5)
!10603 = !DILocation(line: 368, column: 26, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10602, file: !10541, line: 368, column: 10)
!10605 = !DILocation(line: 368, column: 55, scope: !10604)
!10606 = !DILocation(line: 380, column: 57, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10608, file: !10541, line: 380, column: 12)
!10608 = distinct !DILexicalBlock(scope: !10601, file: !10541, line: 379, column: 7)
!10609 = !DILocation(line: 387, column: 8, scope: !10610)
!10610 = distinct !DILexicalBlock(scope: !10597, file: !10541, line: 387, column: 8)
!10611 = !DILocation(line: 387, column: 40, scope: !10610)
!10612 = !DILocation(line: 387, column: 8, scope: !10597)
!10613 = !DILocation(line: 407, column: 26, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10615, file: !10541, line: 407, column: 10)
!10615 = distinct !DILexicalBlock(scope: !10610, file: !10541, line: 388, column: 5)
!10616 = !DILocation(line: 407, column: 55, scope: !10614)
!10617 = !DILocation(line: 413, column: 28, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10619, file: !10541, line: 413, column: 12)
!10619 = distinct !DILexicalBlock(scope: !10614, file: !10541, line: 412, column: 7)
!10620 = !DILocation(line: 413, column: 57, scope: !10618)
!10621 = !DILocation(line: 0, scope: !10597)
!10622 = !DILocation(line: 420, column: 8, scope: !10623)
!10623 = distinct !DILexicalBlock(scope: !10597, file: !10541, line: 420, column: 8)
!10624 = !DILocation(line: 420, column: 40, scope: !10623)
!10625 = !DILocation(line: 420, column: 8, scope: !10597)
!10626 = !DILocation(line: 429, column: 26, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10628, file: !10541, line: 429, column: 10)
!10628 = distinct !DILexicalBlock(scope: !10623, file: !10541, line: 421, column: 5)
!10629 = !DILocation(line: 429, column: 55, scope: !10627)
!10630 = !DILocation(line: 435, column: 28, scope: !10631)
!10631 = distinct !DILexicalBlock(scope: !10632, file: !10541, line: 435, column: 12)
!10632 = distinct !DILexicalBlock(scope: !10627, file: !10541, line: 434, column: 7)
!10633 = !DILocation(line: 435, column: 57, scope: !10631)
!10634 = !DILocation(line: 444, column: 5, scope: !10597)
!10635 = !DILocation(line: 448, column: 5, scope: !10597)
!10636 = !DILocation(line: 451, column: 18, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10597, file: !10541, line: 449, column: 5)
!10638 = !DILocation(line: 452, column: 12, scope: !10637)
!10639 = !DILocation(line: 453, column: 26, scope: !10597)
!10640 = !DILocation(line: 453, column: 38, scope: !10597)
!10641 = !DILocation(line: 453, column: 5, scope: !10637)
!10642 = distinct !{!10642, !10635, !10643}
!10643 = !DILocation(line: 453, column: 54, scope: !10597)
!10644 = !DILocation(line: 0, scope: !10593)
!10645 = !DILocation(line: 464, column: 3, scope: !10581)
!10646 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !10647, file: !10647, line: 519, type: !5545, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !322)
!10647 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10648 = !DILocation(line: 521, column: 21, scope: !10646)
!10649 = !DILocation(line: 521, column: 3, scope: !10646)
!10650 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5311, file: !5311, line: 1543, type: !5555, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10651)
!10651 = !{!10652}
!10652 = !DILocalVariable(name: "Latency", arg: 1, scope: !10650, file: !5311, line: 1543, type: !121)
!10653 = !DILocation(line: 0, scope: !10650)
!10654 = !DILocation(line: 1545, column: 3, scope: !10650)
!10655 = !DILocation(line: 1546, column: 1, scope: !10650)
!10656 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5311, file: !5311, line: 1569, type: !5545, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !322)
!10657 = !DILocation(line: 1571, column: 21, scope: !10656)
!10658 = !DILocation(line: 1571, column: 3, scope: !10656)
!10659 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !10541, file: !10541, line: 483, type: !10660, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10676)
!10660 = !DISubroutineType(types: !10661)
!10661 = !{!10584, !10662, !10669}
!10662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10663, size: 32)
!10663 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !10548, line: 114, baseType: !10664)
!10664 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10548, line: 94, size: 96, elements: !10665)
!10665 = !{!10666, !10667, !10668}
!10666 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10664, file: !10548, line: 96, baseType: !121, size: 32)
!10667 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10664, file: !10548, line: 102, baseType: !121, size: 32, offset: 32)
!10668 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10664, file: !10548, line: 109, baseType: !121, size: 32, offset: 64)
!10669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10670, size: 32)
!10670 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !10548, line: 139, baseType: !10671)
!10671 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10548, line: 119, size: 96, elements: !10672)
!10672 = !{!10673, !10674, !10675}
!10673 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10671, file: !10548, line: 121, baseType: !121, size: 32)
!10674 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10671, file: !10548, line: 127, baseType: !121, size: 32, offset: 32)
!10675 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10671, file: !10548, line: 133, baseType: !121, size: 32, offset: 64)
!10676 = !{!10677, !10678, !10679, !10680}
!10677 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !10659, file: !10541, line: 483, type: !10662)
!10678 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10659, file: !10541, line: 484, type: !10669)
!10679 = !DILocalVariable(name: "status", scope: !10659, file: !10541, line: 486, type: !10584)
!10680 = !DILocalVariable(name: "pllfreq", scope: !10659, file: !10541, line: 487, type: !121)
!10681 = !DILocation(line: 0, scope: !10659)
!10682 = !DILocation(line: 490, column: 6, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10659, file: !10541, line: 490, column: 6)
!10684 = !DILocation(line: 490, column: 25, scope: !10683)
!10685 = !DILocation(line: 490, column: 6, scope: !10659)
!10686 = !DILocation(line: 493, column: 15, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10683, file: !10541, line: 491, column: 3)
!10688 = !DILocation(line: 496, column: 8, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10687, file: !10541, line: 496, column: 8)
!10690 = !DILocation(line: 496, column: 29, scope: !10689)
!10691 = !DILocation(line: 496, column: 8, scope: !10687)
!10692 = !DILocation(line: 498, column: 7, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10689, file: !10541, line: 497, column: 5)
!10694 = !DILocation(line: 499, column: 7, scope: !10693)
!10695 = !DILocation(line: 499, column: 14, scope: !10693)
!10696 = !DILocation(line: 499, column: 35, scope: !10693)
!10697 = distinct !{!10697, !10694, !10698}
!10698 = !DILocation(line: 502, column: 7, scope: !10693)
!10699 = !DILocation(line: 506, column: 76, scope: !10687)
!10700 = !DILocation(line: 506, column: 103, scope: !10687)
!10701 = !DILocation(line: 507, column: 54, scope: !10687)
!10702 = !DILocation(line: 506, column: 5, scope: !10687)
!10703 = !DILocation(line: 510, column: 14, scope: !10687)
!10704 = !DILocation(line: 511, column: 3, scope: !10687)
!10705 = !DILocation(line: 0, scope: !10683)
!10706 = !DILocation(line: 518, column: 3, scope: !10659)
!10707 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !10541, file: !10541, line: 642, type: !10708, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10710)
!10708 = !DISubroutineType(types: !10709)
!10709 = !{!10584}
!10710 = !{!10711}
!10711 = !DILocalVariable(name: "status", scope: !10707, file: !10541, line: 644, type: !10584)
!10712 = !DILocation(line: 0, scope: !10707)
!10713 = !DILocation(line: 647, column: 6, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10707, file: !10541, line: 647, column: 6)
!10715 = !DILocation(line: 647, column: 27, scope: !10714)
!10716 = !DILocation(line: 663, column: 6, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10707, file: !10541, line: 663, column: 6)
!10718 = !DILocation(line: 663, column: 30, scope: !10717)
!10719 = !DILocation(line: 663, column: 6, scope: !10707)
!10720 = !DILocation(line: 669, column: 3, scope: !10707)
!10721 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !10541, file: !10541, line: 611, type: !10722, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10724)
!10722 = !DISubroutineType(types: !10723)
!10723 = !{!121, !121, !10662}
!10724 = !{!10725, !10726, !10727}
!10725 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !10721, file: !10541, line: 611, type: !121)
!10726 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !10721, file: !10541, line: 611, type: !10662)
!10727 = !DILocalVariable(name: "pllfreq", scope: !10721, file: !10541, line: 613, type: !121)
!10728 = !DILocation(line: 0, scope: !10721)
!10729 = !DILocation(line: 622, column: 56, scope: !10721)
!10730 = !DILocation(line: 622, column: 61, scope: !10721)
!10731 = !DILocation(line: 622, column: 32, scope: !10721)
!10732 = !DILocation(line: 626, column: 45, scope: !10721)
!10733 = !DILocation(line: 626, column: 50, scope: !10721)
!10734 = !DILocation(line: 626, column: 21, scope: !10721)
!10735 = !DILocation(line: 630, column: 47, scope: !10721)
!10736 = !DILocation(line: 630, column: 82, scope: !10721)
!10737 = !DILocation(line: 630, column: 21, scope: !10721)
!10738 = !DILocation(line: 633, column: 3, scope: !10721)
!10739 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !7569, file: !7569, line: 3007, type: !5545, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !322)
!10740 = !DILocation(line: 3009, column: 11, scope: !10739)
!10741 = !DILocation(line: 3009, column: 44, scope: !10739)
!10742 = !DILocation(line: 3009, column: 3, scope: !10739)
!10743 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !7569, file: !7569, line: 2987, type: !2904, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !322)
!10744 = !DILocation(line: 2989, column: 3, scope: !10743)
!10745 = !DILocation(line: 2990, column: 1, scope: !10743)
!10746 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !7569, file: !7569, line: 4304, type: !7693, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10747)
!10747 = !{!10748, !10749, !10750, !10751}
!10748 = !DILocalVariable(name: "Source", arg: 1, scope: !10746, file: !7569, line: 4304, type: !121)
!10749 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10746, file: !7569, line: 4304, type: !121)
!10750 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10746, file: !7569, line: 4304, type: !121)
!10751 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10746, file: !7569, line: 4304, type: !121)
!10752 = !DILocation(line: 0, scope: !10746)
!10753 = !DILocation(line: 4306, column: 3, scope: !10746)
!10754 = !DILocation(line: 4308, column: 3, scope: !10746)
!10755 = !DILocation(line: 4312, column: 1, scope: !10746)
!10756 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !10541, file: !10541, line: 681, type: !10757, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10759)
!10757 = !DISubroutineType(types: !10758)
!10758 = !{!10584, !121, !10669}
!10759 = !{!10760, !10761, !10762, !10763}
!10760 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !10756, file: !10541, line: 681, type: !121)
!10761 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10756, file: !10541, line: 681, type: !10669)
!10762 = !DILocalVariable(name: "status", scope: !10756, file: !10541, line: 683, type: !10584)
!10763 = !DILocalVariable(name: "hclk_frequency", scope: !10756, file: !10541, line: 684, type: !121)
!10764 = !DILocation(line: 0, scope: !10756)
!10765 = !DILocation(line: 691, column: 20, scope: !10756)
!10766 = !DILocation(line: 694, column: 6, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10756, file: !10541, line: 694, column: 6)
!10768 = !DILocation(line: 694, column: 22, scope: !10767)
!10769 = !DILocation(line: 694, column: 6, scope: !10756)
!10770 = !DILocation(line: 697, column: 14, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10767, file: !10541, line: 695, column: 3)
!10772 = !DILocation(line: 701, column: 13, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10756, file: !10541, line: 701, column: 6)
!10774 = !DILocation(line: 701, column: 6, scope: !10756)
!10775 = !DILocation(line: 704, column: 5, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10773, file: !10541, line: 702, column: 3)
!10777 = !DILocation(line: 705, column: 5, scope: !10776)
!10778 = !DILocation(line: 705, column: 12, scope: !10776)
!10779 = !DILocation(line: 705, column: 33, scope: !10776)
!10780 = distinct !{!10780, !10777, !10781}
!10781 = !DILocation(line: 708, column: 5, scope: !10776)
!10782 = !DILocation(line: 711, column: 49, scope: !10776)
!10783 = !DILocation(line: 711, column: 5, scope: !10776)
!10784 = !DILocation(line: 712, column: 5, scope: !10776)
!10785 = !DILocation(line: 713, column: 5, scope: !10776)
!10786 = !DILocation(line: 713, column: 12, scope: !10776)
!10787 = !DILocation(line: 713, column: 37, scope: !10776)
!10788 = distinct !{!10788, !10785, !10789}
!10789 = !DILocation(line: 716, column: 5, scope: !10776)
!10790 = !DILocation(line: 719, column: 50, scope: !10776)
!10791 = !DILocation(line: 719, column: 5, scope: !10776)
!10792 = !DILocation(line: 720, column: 50, scope: !10776)
!10793 = !DILocation(line: 720, column: 5, scope: !10776)
!10794 = !DILocation(line: 721, column: 3, scope: !10776)
!10795 = !DILocation(line: 724, column: 6, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10756, file: !10541, line: 724, column: 6)
!10797 = !DILocation(line: 724, column: 22, scope: !10796)
!10798 = !DILocation(line: 724, column: 6, scope: !10756)
!10799 = !DILocation(line: 727, column: 14, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10796, file: !10541, line: 725, column: 3)
!10801 = !DILocation(line: 728, column: 3, scope: !10800)
!10802 = !DILocation(line: 731, column: 13, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10756, file: !10541, line: 731, column: 6)
!10804 = !DILocation(line: 731, column: 6, scope: !10756)
!10805 = !DILocation(line: 733, column: 5, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10803, file: !10541, line: 732, column: 3)
!10807 = !DILocation(line: 734, column: 3, scope: !10806)
!10808 = !DILocation(line: 736, column: 3, scope: !10756)
!10809 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !7569, file: !7569, line: 4184, type: !2904, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !322)
!10810 = !DILocation(line: 4186, column: 3, scope: !10809)
!10811 = !DILocation(line: 4187, column: 1, scope: !10809)
!10812 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !7569, file: !7569, line: 4205, type: !5545, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !322)
!10813 = !DILocation(line: 4207, column: 11, scope: !10812)
!10814 = !DILocation(line: 4207, column: 44, scope: !10812)
!10815 = !DILocation(line: 4207, column: 3, scope: !10812)
!10816 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !7569, file: !7569, line: 3224, type: !5555, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10817)
!10817 = !{!10818}
!10818 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10816, file: !7569, line: 3224, type: !121)
!10819 = !DILocation(line: 0, scope: !10816)
!10820 = !DILocation(line: 3226, column: 3, scope: !10816)
!10821 = !DILocation(line: 3227, column: 1, scope: !10816)
!10822 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !7569, file: !7569, line: 3188, type: !5555, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10823)
!10823 = !{!10824}
!10824 = !DILocalVariable(name: "Source", arg: 1, scope: !10822, file: !7569, line: 3188, type: !121)
!10825 = !DILocation(line: 0, scope: !10822)
!10826 = !DILocation(line: 3190, column: 3, scope: !10822)
!10827 = !DILocation(line: 3191, column: 1, scope: !10822)
!10828 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !7569, file: !7569, line: 3204, type: !5545, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !322)
!10829 = !DILocation(line: 3206, column: 21, scope: !10828)
!10830 = !DILocation(line: 3206, column: 3, scope: !10828)
!10831 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !7569, file: !7569, line: 3240, type: !5555, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10832)
!10832 = !{!10833}
!10833 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10831, file: !7569, line: 3240, type: !121)
!10834 = !DILocation(line: 0, scope: !10831)
!10835 = !DILocation(line: 3242, column: 3, scope: !10831)
!10836 = !DILocation(line: 3243, column: 1, scope: !10831)
!10837 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !7569, file: !7569, line: 3256, type: !5555, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10838)
!10838 = !{!10839}
!10839 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10837, file: !7569, line: 3256, type: !121)
!10840 = !DILocation(line: 0, scope: !10837)
!10841 = !DILocation(line: 3258, column: 3, scope: !10837)
!10842 = !DILocation(line: 3259, column: 1, scope: !10837)
!10843 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !7569, file: !7569, line: 5153, type: !5545, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !322)
!10844 = !DILocation(line: 5155, column: 11, scope: !10843)
!10845 = !DILocation(line: 5155, column: 47, scope: !10843)
!10846 = !DILocation(line: 5155, column: 3, scope: !10843)
!10847 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !10541, file: !10541, line: 540, type: !10848, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !10850)
!10848 = !DISubroutineType(types: !10849)
!10849 = !{!10584, !121, !121, !10662, !10669}
!10850 = !{!10851, !10852, !10853, !10854, !10855, !10856}
!10851 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !10847, file: !10541, line: 540, type: !121)
!10852 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !10847, file: !10541, line: 540, type: !121)
!10853 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !10847, file: !10541, line: 541, type: !10662)
!10854 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !10847, file: !10541, line: 541, type: !10669)
!10855 = !DILocalVariable(name: "status", scope: !10847, file: !10541, line: 543, type: !10584)
!10856 = !DILocalVariable(name: "pllfreq", scope: !10847, file: !10541, line: 544, type: !121)
!10857 = !DILocation(line: 0, scope: !10847)
!10858 = !DILocation(line: 551, column: 6, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10847, file: !10541, line: 551, column: 6)
!10860 = !DILocation(line: 551, column: 25, scope: !10859)
!10861 = !DILocation(line: 551, column: 6, scope: !10847)
!10862 = !DILocation(line: 554, column: 15, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10859, file: !10541, line: 552, column: 3)
!10864 = !DILocation(line: 557, column: 8, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10863, file: !10541, line: 557, column: 8)
!10866 = !DILocation(line: 557, column: 29, scope: !10865)
!10867 = !DILocation(line: 557, column: 8, scope: !10863)
!10868 = !DILocation(line: 560, column: 20, scope: !10869)
!10869 = distinct !DILexicalBlock(scope: !10870, file: !10541, line: 560, column: 10)
!10870 = distinct !DILexicalBlock(scope: !10865, file: !10541, line: 558, column: 5)
!10871 = !DILocation(line: 560, column: 10, scope: !10870)
!10872 = !DILocation(line: 562, column: 9, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10869, file: !10541, line: 561, column: 7)
!10874 = !DILocation(line: 563, column: 7, scope: !10873)
!10875 = !DILocation(line: 566, column: 9, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10869, file: !10541, line: 565, column: 7)
!10877 = !DILocation(line: 570, column: 7, scope: !10870)
!10878 = !DILocation(line: 571, column: 7, scope: !10870)
!10879 = !DILocation(line: 571, column: 14, scope: !10870)
!10880 = !DILocation(line: 571, column: 35, scope: !10870)
!10881 = distinct !{!10881, !10878, !10882}
!10882 = !DILocation(line: 574, column: 7, scope: !10870)
!10883 = !DILocation(line: 578, column: 76, scope: !10863)
!10884 = !DILocation(line: 578, column: 103, scope: !10863)
!10885 = !DILocation(line: 579, column: 54, scope: !10863)
!10886 = !DILocation(line: 578, column: 5, scope: !10863)
!10887 = !DILocation(line: 582, column: 14, scope: !10863)
!10888 = !DILocation(line: 583, column: 3, scope: !10863)
!10889 = !DILocation(line: 0, scope: !10859)
!10890 = !DILocation(line: 590, column: 3, scope: !10847)
!10891 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !7569, file: !7569, line: 2969, type: !5545, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !322)
!10892 = !DILocation(line: 2971, column: 11, scope: !10891)
!10893 = !DILocation(line: 2971, column: 44, scope: !10891)
!10894 = !DILocation(line: 2971, column: 3, scope: !10891)
!10895 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !7569, file: !7569, line: 2929, type: !2904, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !322)
!10896 = !DILocation(line: 2931, column: 3, scope: !10895)
!10897 = !DILocation(line: 2932, column: 1, scope: !10895)
!10898 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !7569, file: !7569, line: 2939, type: !2904, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !322)
!10899 = !DILocation(line: 2941, column: 3, scope: !10898)
!10900 = !DILocation(line: 2942, column: 1, scope: !10898)
!10901 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !7569, file: !7569, line: 2949, type: !2904, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !322)
!10902 = !DILocation(line: 2951, column: 3, scope: !10901)
!10903 = !DILocation(line: 2952, column: 1, scope: !10901)
!10904 = distinct !DISubprogram(name: "z_device_state_init", scope: !10905, file: !10905, line: 23, type: !2904, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !10906)
!10905 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10906 = !{!10907}
!10907 = !DILocalVariable(name: "dev", scope: !10904, file: !10905, line: 25, type: !10908)
!10908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10909, size: 32)
!10909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10910)
!10910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !10911)
!10911 = !{!10912, !10913, !10914, !10915, !10921, !10922}
!10912 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10910, file: !141, line: 380, baseType: !144, size: 32)
!10913 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !10910, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!10914 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !10910, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!10915 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10910, file: !141, line: 386, baseType: !10916, size: 32, offset: 96)
!10916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10917, size: 32)
!10917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !10918)
!10918 = !{!10919, !10920}
!10919 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !10917, file: !141, line: 359, baseType: !154, size: 8)
!10920 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !10917, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!10921 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10910, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!10922 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !10910, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!10923 = !DILocation(line: 0, scope: !10904)
!10924 = !DILocation(line: 31, column: 1, scope: !10904)
!10925 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !10905, file: !10905, line: 33, type: !10926, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !10928)
!10926 = !DISubroutineType(types: !10927)
!10927 = !{!10908, !144}
!10928 = !{!10929, !10930}
!10929 = !DILocalVariable(name: "name", arg: 1, scope: !10925, file: !10905, line: 33, type: !144)
!10930 = !DILocalVariable(name: "dev", scope: !10925, file: !10905, line: 35, type: !10908)
!10931 = !DILocation(line: 0, scope: !10925)
!10932 = !DILocation(line: 40, column: 12, scope: !10933)
!10933 = distinct !DILexicalBlock(scope: !10925, file: !10905, line: 40, column: 6)
!10934 = !DILocation(line: 40, column: 21, scope: !10933)
!10935 = !DILocation(line: 40, column: 25, scope: !10933)
!10936 = !DILocation(line: 40, column: 33, scope: !10933)
!10937 = !DILocation(line: 40, column: 6, scope: !10925)
!10938 = !DILocation(line: 55, column: 2, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10925, file: !10905, line: 55, column: 2)
!10940 = !DILocation(line: 50, column: 7, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10942, file: !10905, line: 50, column: 7)
!10942 = distinct !DILexicalBlock(scope: !10943, file: !10905, line: 49, column: 57)
!10943 = distinct !DILexicalBlock(scope: !10944, file: !10905, line: 49, column: 2)
!10944 = distinct !DILexicalBlock(scope: !10925, file: !10905, line: 49, column: 2)
!10945 = !DILocation(line: 50, column: 30, scope: !10941)
!10946 = !DILocation(line: 50, column: 39, scope: !10941)
!10947 = !DILocation(line: 50, column: 44, scope: !10941)
!10948 = !DILocation(line: 50, column: 7, scope: !10942)
!10949 = !DILocation(line: 49, column: 53, scope: !10943)
!10950 = !DILocation(line: 49, column: 33, scope: !10943)
!10951 = !DILocation(line: 49, column: 2, scope: !10944)
!10952 = distinct !{!10952, !10951, !10953}
!10953 = !DILocation(line: 53, column: 2, scope: !10944)
!10954 = !DILocation(line: 56, column: 7, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10956, file: !10905, line: 56, column: 7)
!10956 = distinct !DILexicalBlock(scope: !10957, file: !10905, line: 55, column: 57)
!10957 = distinct !DILexicalBlock(scope: !10939, file: !10905, line: 55, column: 2)
!10958 = !DILocation(line: 56, column: 30, scope: !10955)
!10959 = !DILocation(line: 56, column: 52, scope: !10955)
!10960 = !DILocation(line: 56, column: 34, scope: !10955)
!10961 = !DILocation(line: 56, column: 58, scope: !10955)
!10962 = !DILocation(line: 56, column: 7, scope: !10956)
!10963 = !DILocation(line: 55, column: 53, scope: !10957)
!10964 = !DILocation(line: 55, column: 33, scope: !10957)
!10965 = distinct !{!10965, !10938, !10966}
!10966 = !DILocation(line: 59, column: 2, scope: !10939)
!10967 = !DILocation(line: 62, column: 1, scope: !10925)
!10968 = distinct !DISubprogram(name: "z_device_is_ready", scope: !10905, file: !10905, line: 93, type: !10969, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !10971)
!10969 = !DISubroutineType(types: !10970)
!10970 = !{!157, !10908}
!10971 = !{!10972}
!10972 = !DILocalVariable(name: "dev", arg: 1, scope: !10968, file: !10905, line: 93, type: !10908)
!10973 = !DILocation(line: 0, scope: !10968)
!10974 = !DILocation(line: 99, column: 10, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10968, file: !10905, line: 99, column: 6)
!10976 = !DILocation(line: 99, column: 6, scope: !10968)
!10977 = !DILocation(line: 103, column: 14, scope: !10968)
!10978 = !DILocation(line: 103, column: 21, scope: !10968)
!10979 = !DILocation(line: 103, column: 33, scope: !10968)
!10980 = !DILocation(line: 103, column: 49, scope: !10968)
!10981 = !DILocation(line: 103, column: 58, scope: !10968)
!10982 = !DILocation(line: 104, column: 1, scope: !10968)
!10983 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !10905, file: !10905, line: 87, type: !10984, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !10987)
!10984 = !DISubroutineType(types: !10985)
!10985 = !{!200, !10986}
!10986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10908, size: 32)
!10987 = !{!10988}
!10988 = !DILocalVariable(name: "devices", arg: 1, scope: !10983, file: !10905, line: 87, type: !10986)
!10989 = !DILocation(line: 0, scope: !10983)
!10990 = !DILocation(line: 89, column: 11, scope: !10983)
!10991 = !DILocation(line: 90, column: 2, scope: !10983)
!10992 = distinct !DISubprogram(name: "device_required_foreach", scope: !10905, file: !10905, line: 125, type: !10993, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !10999)
!10993 = !DISubroutineType(types: !10994)
!10994 = !{!103, !10908, !10995, !102}
!10995 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !141, line: 471, baseType: !10996)
!10996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10997, size: 32)
!10997 = !DISubroutineType(types: !10998)
!10998 = !{!103, !10908, !102}
!10999 = !{!11000, !11001, !11002, !11003, !11004}
!11000 = !DILocalVariable(name: "dev", arg: 1, scope: !10992, file: !10905, line: 125, type: !10908)
!11001 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10992, file: !10905, line: 126, type: !10995)
!11002 = !DILocalVariable(name: "context", arg: 3, scope: !10992, file: !10905, line: 127, type: !102)
!11003 = !DILocalVariable(name: "handle_count", scope: !10992, file: !10905, line: 129, type: !200)
!11004 = !DILocalVariable(name: "handles", scope: !10992, file: !10905, line: 130, type: !160)
!11005 = !DILocation(line: 0, scope: !10992)
!11006 = !DILocation(line: 129, column: 2, scope: !10992)
!11007 = !DILocation(line: 129, column: 9, scope: !10992)
!11008 = !DILocation(line: 130, column: 35, scope: !10992)
!11009 = !DILocation(line: 132, column: 33, scope: !10992)
!11010 = !DILocation(line: 132, column: 9, scope: !10992)
!11011 = !DILocation(line: 133, column: 1, scope: !10992)
!11012 = !DILocation(line: 132, column: 2, scope: !10992)
!11013 = distinct !DISubprogram(name: "device_required_handles_get", scope: !141, file: !141, line: 493, type: !11014, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !11016)
!11014 = !DISubroutineType(types: !11015)
!11015 = !{!160, !10908, !2356}
!11016 = !{!11017, !11018, !11019, !11020}
!11017 = !DILocalVariable(name: "dev", arg: 1, scope: !11013, file: !141, line: 493, type: !10908)
!11018 = !DILocalVariable(name: "count", arg: 2, scope: !11013, file: !141, line: 493, type: !2356)
!11019 = !DILocalVariable(name: "rv", scope: !11013, file: !141, line: 495, type: !160)
!11020 = !DILocalVariable(name: "i", scope: !11021, file: !141, line: 498, type: !200)
!11021 = distinct !DILexicalBlock(scope: !11022, file: !141, line: 497, column: 18)
!11022 = distinct !DILexicalBlock(scope: !11013, file: !141, line: 497, column: 6)
!11023 = !DILocation(line: 0, scope: !11013)
!11024 = !DILocation(line: 495, column: 35, scope: !11013)
!11025 = !DILocation(line: 497, column: 9, scope: !11022)
!11026 = !DILocation(line: 497, column: 6, scope: !11013)
!11027 = !DILocation(line: 0, scope: !11021)
!11028 = !DILocation(line: 500, column: 11, scope: !11021)
!11029 = !DILocation(line: 500, column: 40, scope: !11021)
!11030 = !DILocation(line: 502, column: 4, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !11021, file: !141, line: 501, column: 40)
!11032 = distinct !{!11032, !11033, !11034}
!11033 = !DILocation(line: 500, column: 3, scope: !11021)
!11034 = !DILocation(line: 503, column: 3, scope: !11021)
!11035 = !DILocation(line: 504, column: 10, scope: !11021)
!11036 = !DILocation(line: 505, column: 2, scope: !11021)
!11037 = !DILocation(line: 507, column: 2, scope: !11013)
!11038 = distinct !DISubprogram(name: "device_visitor", scope: !10905, file: !10905, line: 106, type: !11039, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !11041)
!11039 = !DISubroutineType(types: !11040)
!11040 = !{!103, !160, !200, !10995, !102}
!11041 = !{!11042, !11043, !11044, !11045, !11046, !11048, !11051, !11052}
!11042 = !DILocalVariable(name: "handles", arg: 1, scope: !11038, file: !10905, line: 106, type: !160)
!11043 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11038, file: !10905, line: 107, type: !200)
!11044 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11038, file: !10905, line: 108, type: !10995)
!11045 = !DILocalVariable(name: "context", arg: 4, scope: !11038, file: !10905, line: 109, type: !102)
!11046 = !DILocalVariable(name: "i", scope: !11047, file: !10905, line: 112, type: !200)
!11047 = distinct !DILexicalBlock(scope: !11038, file: !10905, line: 112, column: 2)
!11048 = !DILocalVariable(name: "dh", scope: !11049, file: !10905, line: 113, type: !162)
!11049 = distinct !DILexicalBlock(scope: !11050, file: !10905, line: 112, column: 44)
!11050 = distinct !DILexicalBlock(scope: !11047, file: !10905, line: 112, column: 2)
!11051 = !DILocalVariable(name: "rdev", scope: !11049, file: !10905, line: 114, type: !10908)
!11052 = !DILocalVariable(name: "rc", scope: !11049, file: !10905, line: 115, type: !103)
!11053 = !DILocation(line: 0, scope: !11038)
!11054 = !DILocation(line: 0, scope: !11047)
!11055 = !DILocation(line: 112, column: 23, scope: !11050)
!11056 = !DILocation(line: 112, column: 2, scope: !11047)
!11057 = distinct !{!11057, !11056, !11058}
!11058 = !DILocation(line: 120, column: 2, scope: !11047)
!11059 = !DILocation(line: 113, column: 24, scope: !11049)
!11060 = !DILocation(line: 0, scope: !11049)
!11061 = !DILocation(line: 114, column: 31, scope: !11049)
!11062 = !DILocation(line: 115, column: 12, scope: !11049)
!11063 = !DILocation(line: 117, column: 10, scope: !11064)
!11064 = distinct !DILexicalBlock(scope: !11049, file: !10905, line: 117, column: 7)
!11065 = !DILocation(line: 112, column: 39, scope: !11050)
!11066 = !DILocation(line: 123, column: 1, scope: !11038)
!11067 = distinct !DISubprogram(name: "device_from_handle", scope: !141, file: !141, line: 439, type: !11068, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !11070)
!11068 = !DISubroutineType(types: !11069)
!11069 = !{!10908, !162}
!11070 = !{!11071, !11072, !11073}
!11071 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11067, file: !141, line: 439, type: !162)
!11072 = !DILocalVariable(name: "dev", scope: !11067, file: !141, line: 443, type: !10908)
!11073 = !DILocalVariable(name: "numdev", scope: !11067, file: !141, line: 444, type: !200)
!11074 = !DILocation(line: 0, scope: !11067)
!11075 = !DILocation(line: 446, column: 7, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11067, file: !141, line: 446, column: 6)
!11077 = !DILocation(line: 446, column: 18, scope: !11076)
!11078 = !DILocation(line: 446, column: 23, scope: !11076)
!11079 = !DILocation(line: 450, column: 2, scope: !11067)
!11080 = distinct !DISubprogram(name: "device_supported_foreach", scope: !10905, file: !10905, line: 135, type: !10993, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !11081)
!11081 = !{!11082, !11083, !11084, !11085, !11086}
!11082 = !DILocalVariable(name: "dev", arg: 1, scope: !11080, file: !10905, line: 135, type: !10908)
!11083 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11080, file: !10905, line: 136, type: !10995)
!11084 = !DILocalVariable(name: "context", arg: 3, scope: !11080, file: !10905, line: 137, type: !102)
!11085 = !DILocalVariable(name: "handle_count", scope: !11080, file: !10905, line: 139, type: !200)
!11086 = !DILocalVariable(name: "handles", scope: !11080, file: !10905, line: 140, type: !160)
!11087 = !DILocation(line: 0, scope: !11080)
!11088 = !DILocation(line: 139, column: 2, scope: !11080)
!11089 = !DILocation(line: 139, column: 9, scope: !11080)
!11090 = !DILocation(line: 140, column: 35, scope: !11080)
!11091 = !DILocation(line: 142, column: 33, scope: !11080)
!11092 = !DILocation(line: 142, column: 9, scope: !11080)
!11093 = !DILocation(line: 143, column: 1, scope: !11080)
!11094 = !DILocation(line: 142, column: 2, scope: !11080)
!11095 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !141, file: !141, line: 573, type: !11014, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !11096)
!11096 = !{!11097, !11098, !11099, !11100, !11101}
!11097 = !DILocalVariable(name: "dev", arg: 1, scope: !11095, file: !141, line: 573, type: !10908)
!11098 = !DILocalVariable(name: "count", arg: 2, scope: !11095, file: !141, line: 573, type: !2356)
!11099 = !DILocalVariable(name: "rv", scope: !11095, file: !141, line: 575, type: !160)
!11100 = !DILocalVariable(name: "region", scope: !11095, file: !141, line: 576, type: !200)
!11101 = !DILocalVariable(name: "i", scope: !11095, file: !141, line: 577, type: !200)
!11102 = !DILocation(line: 0, scope: !11095)
!11103 = !DILocation(line: 575, column: 35, scope: !11095)
!11104 = !DILocation(line: 579, column: 9, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11095, file: !141, line: 579, column: 6)
!11106 = !DILocation(line: 579, column: 6, scope: !11095)
!11107 = !DILocation(line: 582, column: 8, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11109, file: !141, line: 582, column: 8)
!11109 = distinct !DILexicalBlock(scope: !11110, file: !141, line: 581, column: 23)
!11110 = distinct !DILexicalBlock(scope: !11105, file: !141, line: 579, column: 18)
!11111 = !DILocation(line: 582, column: 12, scope: !11108)
!11112 = !DILocation(line: 585, column: 6, scope: !11109)
!11113 = !DILocation(line: 0, scope: !11110)
!11114 = !DILocation(line: 581, column: 17, scope: !11110)
!11115 = !DILocation(line: 581, column: 3, scope: !11110)
!11116 = !DILocation(line: 588, column: 10, scope: !11110)
!11117 = !DILocation(line: 588, column: 16, scope: !11110)
!11118 = !DILocation(line: 589, column: 4, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11110, file: !141, line: 588, column: 39)
!11120 = !DILocation(line: 588, column: 3, scope: !11110)
!11121 = distinct !{!11121, !11120, !11122}
!11122 = !DILocation(line: 590, column: 3, scope: !11110)
!11123 = !DILocation(line: 591, column: 10, scope: !11110)
!11124 = !DILocation(line: 592, column: 2, scope: !11110)
!11125 = !DILocation(line: 575, column: 25, scope: !11095)
!11126 = !DILocation(line: 594, column: 2, scope: !11095)
!11127 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1612, file: !1612, line: 49, type: !11128, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1609, retainedNodes: !322)
!11128 = !DISubroutineType(types: !11129)
!11129 = !{!2349}
!11130 = !DILocation(line: 51, column: 10, scope: !11127)
!11131 = !DILocation(line: 51, column: 20, scope: !11127)
!11132 = !DILocation(line: 51, column: 2, scope: !11127)
!11133 = distinct !DISubprogram(name: "coredump", scope: !2871, file: !2871, line: 209, type: !11134, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !11280)
!11134 = !DISubroutineType(types: !11135)
!11135 = !{null, !32, !11136, !11180}
!11136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11137, size: 32)
!11137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11138)
!11138 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2481, line: 141, baseType: !11139)
!11139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2481, line: 97, size: 256, elements: !11140)
!11140 = !{!11141}
!11141 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !11139, file: !2481, line: 107, baseType: !11142, size: 256)
!11142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2481, line: 98, size: 256, elements: !11143)
!11143 = !{!11144, !11149, !11154, !11159, !11164, !11169, !11174, !11179}
!11144 = !DIDerivedType(tag: DW_TAG_member, scope: !11142, file: !2481, line: 99, baseType: !11145, size: 32)
!11145 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11142, file: !2481, line: 99, size: 32, elements: !11146)
!11146 = !{!11147, !11148}
!11147 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !11145, file: !2481, line: 99, baseType: !121, size: 32)
!11148 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !11145, file: !2481, line: 99, baseType: !121, size: 32)
!11149 = !DIDerivedType(tag: DW_TAG_member, scope: !11142, file: !2481, line: 100, baseType: !11150, size: 32, offset: 32)
!11150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11142, file: !2481, line: 100, size: 32, elements: !11151)
!11151 = !{!11152, !11153}
!11152 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !11150, file: !2481, line: 100, baseType: !121, size: 32)
!11153 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !11150, file: !2481, line: 100, baseType: !121, size: 32)
!11154 = !DIDerivedType(tag: DW_TAG_member, scope: !11142, file: !2481, line: 101, baseType: !11155, size: 32, offset: 64)
!11155 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11142, file: !2481, line: 101, size: 32, elements: !11156)
!11156 = !{!11157, !11158}
!11157 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11155, file: !2481, line: 101, baseType: !121, size: 32)
!11158 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11155, file: !2481, line: 101, baseType: !121, size: 32)
!11159 = !DIDerivedType(tag: DW_TAG_member, scope: !11142, file: !2481, line: 102, baseType: !11160, size: 32, offset: 96)
!11160 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11142, file: !2481, line: 102, size: 32, elements: !11161)
!11161 = !{!11162, !11163}
!11162 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11160, file: !2481, line: 102, baseType: !121, size: 32)
!11163 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11160, file: !2481, line: 102, baseType: !121, size: 32)
!11164 = !DIDerivedType(tag: DW_TAG_member, scope: !11142, file: !2481, line: 103, baseType: !11165, size: 32, offset: 128)
!11165 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11142, file: !2481, line: 103, size: 32, elements: !11166)
!11166 = !{!11167, !11168}
!11167 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11165, file: !2481, line: 103, baseType: !121, size: 32)
!11168 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11165, file: !2481, line: 103, baseType: !121, size: 32)
!11169 = !DIDerivedType(tag: DW_TAG_member, scope: !11142, file: !2481, line: 104, baseType: !11170, size: 32, offset: 160)
!11170 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11142, file: !2481, line: 104, size: 32, elements: !11171)
!11171 = !{!11172, !11173}
!11172 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11170, file: !2481, line: 104, baseType: !121, size: 32)
!11173 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11170, file: !2481, line: 104, baseType: !121, size: 32)
!11174 = !DIDerivedType(tag: DW_TAG_member, scope: !11142, file: !2481, line: 105, baseType: !11175, size: 32, offset: 192)
!11175 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11142, file: !2481, line: 105, size: 32, elements: !11176)
!11176 = !{!11177, !11178}
!11177 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11175, file: !2481, line: 105, baseType: !121, size: 32)
!11178 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11175, file: !2481, line: 105, baseType: !121, size: 32)
!11179 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !11142, file: !2481, line: 106, baseType: !121, size: 32, offset: 224)
!11180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11181, size: 32)
!11181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !11182)
!11182 = !{!11183, !11241, !11253, !11254, !11255, !11256, !11262, !11275}
!11183 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11181, file: !211, line: 247, baseType: !11184, size: 384)
!11184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !11185)
!11185 = !{!11186, !11210, !11217, !11218, !11219, !11228, !11229, !11230}
!11186 = !DIDerivedType(tag: DW_TAG_member, scope: !11184, file: !211, line: 60, baseType: !11187, size: 64)
!11187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11184, file: !211, line: 60, size: 64, elements: !11188)
!11188 = !{!11189, !11204}
!11189 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11187, file: !211, line: 61, baseType: !11190, size: 64)
!11190 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !11191)
!11191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !11192)
!11192 = !{!11193, !11199}
!11193 = !DIDerivedType(tag: DW_TAG_member, scope: !11191, file: !221, line: 38, baseType: !11194, size: 32)
!11194 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11191, file: !221, line: 38, size: 32, elements: !11195)
!11195 = !{!11196, !11198}
!11196 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11194, file: !221, line: 39, baseType: !11197, size: 32)
!11197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11191, size: 32)
!11198 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11194, file: !221, line: 40, baseType: !11197, size: 32)
!11199 = !DIDerivedType(tag: DW_TAG_member, scope: !11191, file: !221, line: 42, baseType: !11200, size: 32, offset: 32)
!11200 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11191, file: !221, line: 42, size: 32, elements: !11201)
!11201 = !{!11202, !11203}
!11202 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11200, file: !221, line: 43, baseType: !11197, size: 32)
!11203 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11200, file: !221, line: 44, baseType: !11197, size: 32)
!11204 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11187, file: !211, line: 62, baseType: !11205, size: 64)
!11205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !11206)
!11206 = !{!11207}
!11207 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11205, file: !237, line: 50, baseType: !11208, size: 64)
!11208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11209, size: 64, elements: !242)
!11209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11205, size: 32)
!11210 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11184, file: !211, line: 68, baseType: !11211, size: 32, offset: 64)
!11211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11212, size: 32)
!11212 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !11213)
!11213 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !11214)
!11214 = !{!11215}
!11215 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11213, file: !247, line: 232, baseType: !11216, size: 64)
!11216 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !11191)
!11217 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11184, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!11218 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11184, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!11219 = !DIDerivedType(tag: DW_TAG_member, scope: !11184, file: !211, line: 90, baseType: !11220, size: 16, offset: 112)
!11220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11184, file: !211, line: 90, size: 16, elements: !11221)
!11221 = !{!11222, !11227}
!11222 = !DIDerivedType(tag: DW_TAG_member, scope: !11220, file: !211, line: 91, baseType: !11223, size: 16)
!11223 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11220, file: !211, line: 91, size: 16, elements: !11224)
!11224 = !{!11225, !11226}
!11225 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11223, file: !211, line: 96, baseType: !261, size: 8)
!11226 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11223, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!11227 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11220, file: !211, line: 100, baseType: !265, size: 16)
!11228 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11184, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!11229 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11184, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!11230 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11184, file: !211, line: 131, baseType: !11231, size: 192, offset: 192)
!11231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !11232)
!11232 = !{!11233, !11234, !11240}
!11233 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11231, file: !247, line: 245, baseType: !11190, size: 64)
!11234 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11231, file: !247, line: 246, baseType: !11235, size: 32, offset: 64)
!11235 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !11236)
!11236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11237, size: 32)
!11237 = !DISubroutineType(types: !11238)
!11238 = !{null, !11239}
!11239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11231, size: 32)
!11240 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11231, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!11241 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11181, file: !211, line: 250, baseType: !11242, size: 288, offset: 384)
!11242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !11243)
!11243 = !{!11244, !11245, !11246, !11247, !11248, !11249, !11250, !11251, !11252}
!11244 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !11242, file: !284, line: 26, baseType: !121, size: 32)
!11245 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !11242, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!11246 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !11242, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!11247 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !11242, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!11248 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !11242, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!11249 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !11242, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!11250 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !11242, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!11251 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !11242, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!11252 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !11242, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!11253 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11181, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!11254 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11181, file: !211, line: 256, baseType: !11212, size: 64, offset: 704)
!11255 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11181, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!11256 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !11181, file: !211, line: 300, baseType: !11257, size: 96, offset: 800)
!11257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !11258)
!11258 = !{!11259, !11260, !11261}
!11259 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !11257, file: !211, line: 153, baseType: !22, size: 32)
!11260 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !11257, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!11261 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !11257, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!11262 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11181, file: !211, line: 325, baseType: !11263, size: 32, offset: 896)
!11263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11264, size: 32)
!11264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !11265)
!11265 = !{!11266, !11272, !11273}
!11266 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11264, file: !307, line: 5074, baseType: !11267, size: 96)
!11267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !11268)
!11268 = !{!11269, !11270, !11271}
!11269 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11267, file: !311, line: 57, baseType: !314, size: 32)
!11270 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !11267, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!11271 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !11267, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!11272 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11264, file: !307, line: 5075, baseType: !11212, size: 64, offset: 96)
!11273 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11264, file: !307, line: 5076, baseType: !11274, offset: 160)
!11274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!11275 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11181, file: !211, line: 343, baseType: !11276, size: 64, offset: 928)
!11276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !11277)
!11277 = !{!11278, !11279}
!11278 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !11276, file: !284, line: 63, baseType: !121, size: 32)
!11279 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !11276, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!11280 = !{!11281, !11282, !11283}
!11281 = !DILocalVariable(name: "reason", arg: 1, scope: !11133, file: !2871, line: 209, type: !32)
!11282 = !DILocalVariable(name: "esf", arg: 2, scope: !11133, file: !2871, line: 209, type: !11136)
!11283 = !DILocalVariable(name: "thread", arg: 3, scope: !11133, file: !2871, line: 210, type: !11180)
!11284 = !DILocation(line: 0, scope: !11133)
!11285 = !DILocation(line: 212, column: 1, scope: !11133)
!11286 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2871, file: !2871, line: 214, type: !11287, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !11289)
!11287 = !DISubroutineType(types: !11288)
!11288 = !{null, !22, !22}
!11289 = !{!11290, !11291}
!11290 = !DILocalVariable(name: "start_addr", arg: 1, scope: !11286, file: !2871, line: 214, type: !22)
!11291 = !DILocalVariable(name: "end_addr", arg: 2, scope: !11286, file: !2871, line: 214, type: !22)
!11292 = !DILocation(line: 0, scope: !11286)
!11293 = !DILocation(line: 216, column: 1, scope: !11286)
!11294 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2871, file: !2871, line: 218, type: !11295, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !11297)
!11295 = !DISubroutineType(types: !11296)
!11296 = !{null, !1653, !200}
!11297 = !{!11298, !11299}
!11298 = !DILocalVariable(name: "buf", arg: 1, scope: !11294, file: !2871, line: 218, type: !1653)
!11299 = !DILocalVariable(name: "buflen", arg: 2, scope: !11294, file: !2871, line: 218, type: !200)
!11300 = !DILocation(line: 0, scope: !11294)
!11301 = !DILocation(line: 220, column: 1, scope: !11294)
!11302 = distinct !DISubprogram(name: "coredump_query", scope: !2871, file: !2871, line: 222, type: !11303, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !11305)
!11303 = !DISubroutineType(types: !11304)
!11304 = !{!103, !2870, !102}
!11305 = !{!11306, !11307}
!11306 = !DILocalVariable(name: "query_id", arg: 1, scope: !11302, file: !2871, line: 222, type: !2870)
!11307 = !DILocalVariable(name: "arg", arg: 2, scope: !11302, file: !2871, line: 222, type: !102)
!11308 = !DILocation(line: 0, scope: !11302)
!11309 = !DILocation(line: 224, column: 2, scope: !11302)
!11310 = distinct !DISubprogram(name: "coredump_cmd", scope: !2871, file: !2871, line: 227, type: !11311, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !11313)
!11311 = !DISubroutineType(types: !11312)
!11312 = !{!103, !2877, !102}
!11313 = !{!11314, !11315}
!11314 = !DILocalVariable(name: "query_id", arg: 1, scope: !11310, file: !2871, line: 227, type: !2877)
!11315 = !DILocalVariable(name: "arg", arg: 2, scope: !11310, file: !2871, line: 227, type: !102)
!11316 = !DILocation(line: 0, scope: !11310)
!11317 = !DILocation(line: 229, column: 2, scope: !11310)
!11318 = distinct !DISubprogram(name: "arch_system_halt", scope: !11319, file: !11319, line: 23, type: !5301, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !11320)
!11319 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11320 = !{!11321}
!11321 = !DILocalVariable(name: "reason", arg: 1, scope: !11318, file: !11319, line: 23, type: !32)
!11322 = !DILocation(line: 0, scope: !11318)
!11323 = !DILocation(line: 55, column: 2, scope: !11324, inlinedAt: !11328)
!11324 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5290, file: !5290, line: 42, type: !5291, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !11325)
!11325 = !{!11326, !11327}
!11326 = !DILocalVariable(name: "key", scope: !11324, file: !5290, line: 44, type: !32)
!11327 = !DILocalVariable(name: "tmp", scope: !11324, file: !5290, line: 53, type: !32)
!11328 = distinct !DILocation(line: 31, column: 8, scope: !11318)
!11329 = !{i64 1949862}
!11330 = !DILocation(line: 0, scope: !11324, inlinedAt: !11328)
!11331 = !DILocation(line: 32, column: 2, scope: !11318)
!11332 = !DILocation(line: 32, column: 2, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11334, file: !11319, line: 32, column: 2)
!11334 = distinct !DILexicalBlock(scope: !11318, file: !11319, line: 32, column: 2)
!11335 = distinct !{!11335, !11336, !11337}
!11336 = !DILocation(line: 32, column: 2, scope: !11334)
!11337 = !DILocation(line: 34, column: 2, scope: !11334)
!11338 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !11319, file: !11319, line: 39, type: !11339, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !11341)
!11339 = !DISubroutineType(types: !11340)
!11340 = !{null, !32, !11136}
!11341 = !{!11342, !11343}
!11342 = !DILocalVariable(name: "reason", arg: 1, scope: !11338, file: !11319, line: 39, type: !32)
!11343 = !DILocalVariable(name: "esf", arg: 2, scope: !11338, file: !11319, line: 40, type: !11136)
!11344 = !DILocation(line: 0, scope: !11338)
!11345 = !DILocation(line: 46, column: 2, scope: !11338)
!11346 = distinct !DISubprogram(name: "k_fatal_halt", scope: !11319, file: !11319, line: 81, type: !5301, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !11347)
!11347 = !{!11348}
!11348 = !DILocalVariable(name: "reason", arg: 1, scope: !11346, file: !11319, line: 81, type: !32)
!11349 = !DILocation(line: 0, scope: !11346)
!11350 = !DILocation(line: 83, column: 2, scope: !11346)
!11351 = distinct !DISubprogram(name: "z_fatal_error", scope: !11319, file: !11319, line: 96, type: !11339, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !11352)
!11352 = !{!11353, !11354, !11355, !11356}
!11353 = !DILocalVariable(name: "reason", arg: 1, scope: !11351, file: !11319, line: 96, type: !32)
!11354 = !DILocalVariable(name: "esf", arg: 2, scope: !11351, file: !11319, line: 96, type: !11136)
!11355 = !DILocalVariable(name: "key", scope: !11351, file: !11319, line: 102, type: !32)
!11356 = !DILocalVariable(name: "thread", scope: !11351, file: !11319, line: 103, type: !11180)
!11357 = !DILocation(line: 0, scope: !11351)
!11358 = !DILocation(line: 55, column: 2, scope: !11324, inlinedAt: !11359)
!11359 = distinct !DILocation(line: 102, column: 21, scope: !11351)
!11360 = !DILocation(line: 0, scope: !11324, inlinedAt: !11359)
!11361 = !DILocation(line: 119, column: 11, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11351, file: !11319, line: 119, column: 6)
!11363 = !DILocation(line: 119, column: 20, scope: !11362)
!11364 = !DILocation(line: 131, column: 2, scope: !11351)
!11365 = !DILocation(line: 151, column: 7, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11367, file: !11319, line: 146, column: 32)
!11367 = distinct !DILexicalBlock(scope: !11351, file: !11319, line: 146, column: 6)
!11368 = !DILocation(line: 151, column: 21, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11366, file: !11319, line: 151, column: 7)
!11370 = !DILocation(line: 104, column: 4, scope: !11351)
!11371 = !DILocalVariable(name: "key", arg: 1, scope: !11372, file: !5290, line: 84, type: !32)
!11372 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5290, file: !5290, line: 84, type: !5301, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !11373)
!11373 = !{!11371}
!11374 = !DILocation(line: 0, scope: !11372, inlinedAt: !11375)
!11375 = distinct !DILocation(line: 186, column: 2, scope: !11351)
!11376 = !DILocation(line: 95, column: 2, scope: !11372, inlinedAt: !11375)
!11377 = !{i64 1950679}
!11378 = !DILocation(line: 189, column: 3, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11380, file: !11319, line: 188, column: 41)
!11380 = distinct !DILexicalBlock(scope: !11351, file: !11319, line: 188, column: 6)
!11381 = !DILocation(line: 191, column: 1, scope: !11351)
!11382 = distinct !DISubprogram(name: "k_current_get", scope: !307, file: !307, line: 530, type: !11383, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !322)
!11383 = !DISubroutineType(types: !11384)
!11384 = !{!11385}
!11385 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !11180)
!11386 = !DILocation(line: 535, column: 9, scope: !11382)
!11387 = !DILocation(line: 535, column: 2, scope: !11382)
!11388 = distinct !DISubprogram(name: "k_thread_abort", scope: !3104, file: !3104, line: 188, type: !11389, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !11391)
!11389 = !DISubroutineType(types: !11390)
!11390 = !{null, !11385}
!11391 = !{!11392}
!11392 = !DILocalVariable(name: "thread", arg: 1, scope: !11388, file: !3104, line: 188, type: !11385)
!11393 = !DILocation(line: 0, scope: !11388)
!11394 = !DILocation(line: 197, column: 2, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !11388, file: !3104, line: 197, column: 2)
!11396 = !{i64 2154064902}
!11397 = !DILocation(line: 198, column: 2, scope: !11388)
!11398 = !DILocation(line: 199, column: 1, scope: !11388)
!11399 = distinct !DISubprogram(name: "z_current_get", scope: !3104, file: !3104, line: 173, type: !11383, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !322)
!11400 = !DILocation(line: 180, column: 2, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11399, file: !3104, line: 180, column: 2)
!11402 = !{i64 2154064834}
!11403 = !DILocation(line: 181, column: 9, scope: !11399)
!11404 = !DILocation(line: 181, column: 2, scope: !11399)
!11405 = distinct !DISubprogram(name: "z_early_memset", scope: !1620, file: !1620, line: 108, type: !11406, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11408)
!11406 = !DISubroutineType(types: !11407)
!11407 = !{null, !102, !103, !200}
!11408 = !{!11409, !11410, !11411}
!11409 = !DILocalVariable(name: "dst", arg: 1, scope: !11405, file: !1620, line: 108, type: !102)
!11410 = !DILocalVariable(name: "c", arg: 2, scope: !11405, file: !1620, line: 108, type: !103)
!11411 = !DILocalVariable(name: "n", arg: 3, scope: !11405, file: !1620, line: 108, type: !200)
!11412 = !DILocation(line: 0, scope: !11405)
!11413 = !DILocation(line: 110, column: 9, scope: !11405)
!11414 = !DILocation(line: 111, column: 1, scope: !11405)
!11415 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1620, file: !1620, line: 121, type: !11416, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11418)
!11416 = !DISubroutineType(types: !11417)
!11417 = !{null, !102, !13, !200}
!11418 = !{!11419, !11420, !11421}
!11419 = !DILocalVariable(name: "dst", arg: 1, scope: !11415, file: !1620, line: 121, type: !102)
!11420 = !DILocalVariable(name: "src", arg: 2, scope: !11415, file: !1620, line: 121, type: !13)
!11421 = !DILocalVariable(name: "n", arg: 3, scope: !11415, file: !1620, line: 121, type: !200)
!11422 = !DILocation(line: 0, scope: !11415)
!11423 = !DILocation(line: 123, column: 9, scope: !11415)
!11424 = !DILocation(line: 124, column: 1, scope: !11415)
!11425 = distinct !DISubprogram(name: "z_bss_zero", scope: !1620, file: !1620, line: 132, type: !2904, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !322)
!11426 = !DILocation(line: 143, column: 2, scope: !11425)
!11427 = !DILocation(line: 168, column: 1, scope: !11425)
!11428 = distinct !DISubprogram(name: "z_init_cpu", scope: !1620, file: !1620, line: 372, type: !7181, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11429)
!11429 = !{!11430}
!11430 = !DILocalVariable(name: "id", arg: 1, scope: !11428, file: !1620, line: 372, type: !103)
!11431 = !DILocation(line: 0, scope: !11428)
!11432 = !DILocation(line: 374, column: 2, scope: !11428)
!11433 = !DILocation(line: 375, column: 34, scope: !11428)
!11434 = !DILocation(line: 375, column: 19, scope: !11428)
!11435 = !DILocation(line: 375, column: 31, scope: !11428)
!11436 = !DILocation(line: 376, column: 24, scope: !11428)
!11437 = !DILocation(line: 376, column: 19, scope: !11428)
!11438 = !DILocation(line: 376, column: 22, scope: !11428)
!11439 = !DILocation(line: 378, column: 26, scope: !11428)
!11440 = !DILocation(line: 378, column: 4, scope: !11428)
!11441 = !DILocation(line: 378, column: 50, scope: !11428)
!11442 = !DILocation(line: 377, column: 19, scope: !11428)
!11443 = !DILocation(line: 377, column: 29, scope: !11428)
!11444 = !DILocation(line: 384, column: 1, scope: !11428)
!11445 = distinct !DISubprogram(name: "init_idle_thread", scope: !1620, file: !1620, line: 343, type: !7181, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11446)
!11446 = !{!11447, !11448, !11449, !11452}
!11447 = !DILocalVariable(name: "i", arg: 1, scope: !11445, file: !1620, line: 343, type: !103)
!11448 = !DILocalVariable(name: "thread", scope: !11445, file: !1620, line: 345, type: !1713)
!11449 = !DILocalVariable(name: "stack", scope: !11445, file: !1620, line: 346, type: !11450)
!11450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11451, size: 32)
!11451 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3328, line: 44, baseType: !1827)
!11452 = !DILocalVariable(name: "tname", scope: !11445, file: !1620, line: 358, type: !957)
!11453 = !DILocation(line: 0, scope: !11445)
!11454 = !DILocation(line: 345, column: 29, scope: !11445)
!11455 = !DILocation(line: 346, column: 28, scope: !11445)
!11456 = !DILocation(line: 362, column: 37, scope: !11445)
!11457 = !DILocation(line: 362, column: 36, scope: !11445)
!11458 = !DILocation(line: 361, column: 2, scope: !11445)
!11459 = !DILocation(line: 365, column: 2, scope: !11445)
!11460 = !DILocation(line: 370, column: 1, scope: !11445)
!11461 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1828, file: !1828, line: 331, type: !11462, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11464)
!11462 = !DISubroutineType(types: !11463)
!11463 = !{!957, !11450}
!11464 = !{!11465}
!11465 = !DILocalVariable(name: "sym", arg: 1, scope: !11461, file: !1828, line: 331, type: !11450)
!11466 = !DILocation(line: 0, scope: !11461)
!11467 = !DILocation(line: 333, column: 21, scope: !11461)
!11468 = !DILocation(line: 333, column: 2, scope: !11461)
!11469 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11470, file: !11470, line: 155, type: !11471, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11473)
!11470 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11471 = !DISubroutineType(types: !11472)
!11472 = !{null, !1713}
!11473 = !{!11474}
!11474 = !DILocalVariable(name: "thread", arg: 1, scope: !11469, file: !11470, line: 155, type: !1713)
!11475 = !DILocation(line: 0, scope: !11469)
!11476 = !DILocation(line: 157, column: 15, scope: !11469)
!11477 = !DILocation(line: 157, column: 28, scope: !11469)
!11478 = !DILocation(line: 158, column: 1, scope: !11469)
!11479 = distinct !DISubprogram(name: "z_cstart", scope: !1620, file: !1620, line: 501, type: !2904, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11480)
!11480 = !{!11481}
!11481 = !DILocalVariable(name: "dummy_thread", scope: !11479, file: !1620, line: 518, type: !1714)
!11482 = !DILocation(line: 507, column: 2, scope: !11479)
!11483 = !DILocation(line: 43, column: 14, scope: !11484, inlinedAt: !11488)
!11484 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !11485, file: !11485, line: 40, type: !2904, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11486)
!11485 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11486 = !{!11487}
!11487 = !DILocalVariable(name: "msp", scope: !11484, file: !11485, line: 42, type: !121)
!11488 = distinct !DILocation(line: 44, column: 2, scope: !11489, inlinedAt: !11491)
!11489 = distinct !DISubprogram(name: "arch_kernel_init", scope: !11490, file: !11490, line: 42, type: !2904, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !322)
!11490 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11491 = distinct !DILocation(line: 510, column: 2, scope: !11479)
!11492 = !DILocation(line: 43, column: 3, scope: !11484, inlinedAt: !11488)
!11493 = !DILocation(line: 43, column: 60, scope: !11484, inlinedAt: !11488)
!11494 = !DILocation(line: 0, scope: !11484, inlinedAt: !11488)
!11495 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !11496, file: !5464, line: 1153, type: !121)
!11496 = distinct !DISubprogram(name: "__set_MSP", scope: !5464, file: !5464, line: 1153, type: !5555, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11497)
!11497 = !{!11495}
!11498 = !DILocation(line: 0, scope: !11496, inlinedAt: !11499)
!11499 = distinct !DILocation(line: 46, column: 2, scope: !11484, inlinedAt: !11488)
!11500 = !DILocation(line: 1155, column: 3, scope: !11496, inlinedAt: !11499)
!11501 = !{i64 2847106}
!11502 = !DILocation(line: 62, column: 11, scope: !11484, inlinedAt: !11488)
!11503 = !DILocation(line: 102, column: 2, scope: !11504, inlinedAt: !11505)
!11504 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6258, file: !6258, line: 97, type: !2904, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !322)
!11505 = distinct !DILocation(line: 45, column: 2, scope: !11489, inlinedAt: !11491)
!11506 = !DILocation(line: 108, column: 2, scope: !11504, inlinedAt: !11505)
!11507 = !DILocation(line: 112, column: 2, scope: !11504, inlinedAt: !11505)
!11508 = !DILocation(line: 113, column: 2, scope: !11504, inlinedAt: !11505)
!11509 = !DILocation(line: 114, column: 2, scope: !11504, inlinedAt: !11505)
!11510 = !DILocation(line: 116, column: 2, scope: !11504, inlinedAt: !11505)
!11511 = !DILocation(line: 123, column: 13, scope: !11504, inlinedAt: !11505)
!11512 = !DILocation(line: 46, column: 2, scope: !11489, inlinedAt: !11491)
!11513 = !DILocation(line: 47, column: 2, scope: !11489, inlinedAt: !11491)
!11514 = !DILocation(line: 174, column: 12, scope: !11515, inlinedAt: !11516)
!11515 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6258, file: !6258, line: 169, type: !2904, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !322)
!11516 = distinct !DILocation(line: 48, column: 2, scope: !11489, inlinedAt: !11491)
!11517 = !DILocation(line: 179, column: 12, scope: !11515, inlinedAt: !11516)
!11518 = !DILocation(line: 50, column: 2, scope: !11489, inlinedAt: !11491)
!11519 = !DILocation(line: 57, column: 2, scope: !11489, inlinedAt: !11491)
!11520 = !DILocation(line: 518, column: 2, scope: !11479)
!11521 = !DILocation(line: 518, column: 18, scope: !11479)
!11522 = !DILocation(line: 520, column: 2, scope: !11479)
!11523 = !DILocation(line: 523, column: 2, scope: !11479)
!11524 = !DILocation(line: 526, column: 2, scope: !11479)
!11525 = !DILocation(line: 527, column: 2, scope: !11479)
!11526 = !DILocation(line: 543, column: 24, scope: !11479)
!11527 = !DILocation(line: 543, column: 2, scope: !11479)
!11528 = !DILocation(line: 0, scope: !1847)
!11529 = !DILocation(line: 246, column: 15, scope: !1865)
!11530 = !DILocation(line: 246, column: 36, scope: !1864)
!11531 = !DILocation(line: 246, column: 2, scope: !1865)
!11532 = !DILocation(line: 247, column: 37, scope: !1863)
!11533 = !DILocation(line: 0, scope: !1863)
!11534 = !DILocation(line: 248, column: 19, scope: !1863)
!11535 = !DILocation(line: 248, column: 12, scope: !1863)
!11536 = !DILocation(line: 250, column: 11, scope: !11537)
!11537 = distinct !DILexicalBlock(scope: !1863, file: !1620, line: 250, column: 7)
!11538 = !DILocation(line: 250, column: 7, scope: !1863)
!11539 = !DILocation(line: 254, column: 11, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11541, file: !1620, line: 254, column: 8)
!11541 = distinct !DILexicalBlock(scope: !11537, file: !1620, line: 250, column: 20)
!11542 = !DILocation(line: 254, column: 8, scope: !11541)
!11543 = !DILocation(line: 255, column: 9, scope: !11544)
!11544 = distinct !DILexicalBlock(scope: !11540, file: !1620, line: 254, column: 17)
!11545 = !DILocation(line: 258, column: 9, scope: !11544)
!11546 = !DILocation(line: 261, column: 28, scope: !11544)
!11547 = !DILocation(line: 261, column: 10, scope: !11544)
!11548 = !DILocation(line: 261, column: 17, scope: !11544)
!11549 = !DILocation(line: 261, column: 26, scope: !11544)
!11550 = !DILocation(line: 262, column: 4, scope: !11544)
!11551 = !DILocation(line: 263, column: 9, scope: !11541)
!11552 = !DILocation(line: 263, column: 16, scope: !11541)
!11553 = !DILocation(line: 263, column: 28, scope: !11541)
!11554 = !DILocation(line: 264, column: 3, scope: !11541)
!11555 = !DILocation(line: 246, column: 60, scope: !1864)
!11556 = distinct !{!11556, !11531, !11557}
!11557 = !DILocation(line: 265, column: 2, scope: !1865)
!11558 = !DILocation(line: 266, column: 1, scope: !1847)
!11559 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !5498, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11560)
!11560 = !{!11561, !11562}
!11561 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11559, file: !356, line: 1814, type: !592)
!11562 = !DILocalVariable(name: "priority", arg: 2, scope: !11559, file: !356, line: 1814, type: !121)
!11563 = !DILocation(line: 0, scope: !11559)
!11564 = !DILocation(line: 1822, column: 48, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11566, file: !356, line: 1821, column: 3)
!11566 = distinct !DILexicalBlock(scope: !11559, file: !356, line: 1816, column: 7)
!11567 = !DILocation(line: 1822, column: 32, scope: !11565)
!11568 = !DILocation(line: 1822, column: 40, scope: !11565)
!11569 = !DILocation(line: 1822, column: 5, scope: !11565)
!11570 = !DILocation(line: 1822, column: 46, scope: !11565)
!11571 = !DILocation(line: 1824, column: 1, scope: !11559)
!11572 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !11490, file: !11490, line: 32, type: !2904, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!11573 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !11574, file: !11574, line: 215, type: !11471, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11575)
!11574 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11575 = !{!11576}
!11576 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !11573, file: !11574, line: 215, type: !1713)
!11577 = !DILocation(line: 0, scope: !11573)
!11578 = !DILocation(line: 217, column: 21, scope: !11573)
!11579 = !DILocation(line: 217, column: 34, scope: !11573)
!11580 = !DILocation(line: 221, column: 21, scope: !11573)
!11581 = !DILocation(line: 221, column: 34, scope: !11573)
!11582 = !DILocation(line: 223, column: 27, scope: !11573)
!11583 = !DILocation(line: 223, column: 33, scope: !11573)
!11584 = !DILocation(line: 224, column: 27, scope: !11573)
!11585 = !DILocation(line: 224, column: 32, scope: !11573)
!11586 = !DILocation(line: 232, column: 16, scope: !11573)
!11587 = !DILocation(line: 232, column: 30, scope: !11573)
!11588 = !DILocation(line: 239, column: 24, scope: !11573)
!11589 = !DILocation(line: 240, column: 1, scope: !11573)
!11590 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1620, file: !1620, line: 399, type: !11591, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11593)
!11591 = !DISubroutineType(types: !11592)
!11592 = !{!957}
!11593 = !{!11594}
!11594 = !DILocalVariable(name: "stack_ptr", scope: !11590, file: !1620, line: 401, type: !957)
!11595 = !DILocation(line: 404, column: 2, scope: !11590)
!11596 = !DILocation(line: 416, column: 24, scope: !11590)
!11597 = !DILocation(line: 418, column: 14, scope: !11590)
!11598 = !DILocation(line: 0, scope: !11590)
!11599 = !DILocation(line: 423, column: 2, scope: !11590)
!11600 = !DILocation(line: 424, column: 2, scope: !11590)
!11601 = !DILocation(line: 426, column: 2, scope: !11590)
!11602 = !DILocation(line: 428, column: 2, scope: !11590)
!11603 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1620, file: !1620, line: 432, type: !11604, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11606)
!11604 = !DISubroutineType(types: !11605)
!11605 = !{null, !957}
!11606 = !{!11607}
!11607 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !11603, file: !1620, line: 432, type: !957)
!11608 = !DILocation(line: 0, scope: !11603)
!11609 = !DILocation(line: 435, column: 2, scope: !11603)
!11610 = !DILocation(line: 445, column: 2, scope: !11603)
!11611 = distinct !DISubprogram(name: "bg_thread_main", scope: !1620, file: !1620, line: 277, type: !3330, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11612)
!11612 = !{!11613, !11614, !11615}
!11613 = !DILocalVariable(name: "unused1", arg: 1, scope: !11611, file: !1620, line: 277, type: !102)
!11614 = !DILocalVariable(name: "unused2", arg: 2, scope: !11611, file: !1620, line: 277, type: !102)
!11615 = !DILocalVariable(name: "unused3", arg: 3, scope: !11611, file: !1620, line: 277, type: !102)
!11616 = !DILocation(line: 0, scope: !11611)
!11617 = !DILocation(line: 291, column: 20, scope: !11611)
!11618 = !DILocation(line: 293, column: 2, scope: !11611)
!11619 = !DILocation(line: 297, column: 2, scope: !11611)
!11620 = !DILocation(line: 305, column: 2, scope: !11611)
!11621 = !DILocation(line: 307, column: 2, scope: !11611)
!11622 = !DILocation(line: 330, column: 8, scope: !11611)
!11623 = !DILocation(line: 333, column: 34, scope: !11611)
!11624 = !DILocation(line: 339, column: 1, scope: !11611)
!11625 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1876, file: !1876, line: 45, type: !11626, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11634)
!11626 = !DISubroutineType(types: !11627)
!11627 = !{null, !11628, !102}
!11628 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !307, line: 103, baseType: !11629)
!11629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11630, size: 32)
!11630 = !DISubroutineType(types: !11631)
!11631 = !{null, !11632, !102}
!11632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11633, size: 32)
!11633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1881)
!11634 = !{!11635, !11636}
!11635 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11625, file: !1876, line: 45, type: !11628)
!11636 = !DILocalVariable(name: "user_data", arg: 2, scope: !11625, file: !1876, line: 45, type: !102)
!11637 = !DILocation(line: 0, scope: !11625)
!11638 = !DILocation(line: 71, column: 1, scope: !11625)
!11639 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1876, file: !1876, line: 73, type: !11626, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11640)
!11640 = !{!11641, !11642}
!11641 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11639, file: !1876, line: 73, type: !11628)
!11642 = !DILocalVariable(name: "user_data", arg: 2, scope: !11639, file: !1876, line: 73, type: !102)
!11643 = !DILocation(line: 0, scope: !11639)
!11644 = !DILocation(line: 95, column: 1, scope: !11639)
!11645 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1876, file: !1876, line: 97, type: !6259, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !322)
!11646 = !DILocation(line: 1031, column: 3, scope: !11647, inlinedAt: !11650)
!11647 = distinct !DISubprogram(name: "__get_IPSR", scope: !5464, file: !5464, line: 1027, type: !5545, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11648)
!11648 = !{!11649}
!11649 = !DILocalVariable(name: "result", scope: !11647, file: !5464, line: 1029, type: !121)
!11650 = distinct !DILocation(line: 48, column: 10, scope: !11651, inlinedAt: !11652)
!11651 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6258, file: !6258, line: 46, type: !6259, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !322)
!11652 = distinct !DILocation(line: 99, column: 9, scope: !11645)
!11653 = !{i64 2852757}
!11654 = !DILocation(line: 0, scope: !11647, inlinedAt: !11650)
!11655 = !DILocation(line: 48, column: 9, scope: !11651, inlinedAt: !11652)
!11656 = !DILocation(line: 99, column: 2, scope: !11645)
!11657 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1876, file: !1876, line: 106, type: !2904, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !322)
!11658 = !DILocation(line: 108, column: 2, scope: !11657)
!11659 = !DILocation(line: 108, column: 17, scope: !11657)
!11660 = !DILocation(line: 108, column: 30, scope: !11657)
!11661 = !DILocation(line: 109, column: 1, scope: !11657)
!11662 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1876, file: !1876, line: 116, type: !2904, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !322)
!11663 = !DILocation(line: 118, column: 2, scope: !11662)
!11664 = !DILocation(line: 118, column: 17, scope: !11662)
!11665 = !DILocation(line: 118, column: 30, scope: !11662)
!11666 = !DILocation(line: 119, column: 1, scope: !11662)
!11667 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1876, file: !1876, line: 126, type: !6259, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !322)
!11668 = !DILocation(line: 128, column: 10, scope: !11667)
!11669 = !DILocation(line: 128, column: 25, scope: !11667)
!11670 = !DILocation(line: 128, column: 38, scope: !11667)
!11671 = !DILocation(line: 128, column: 53, scope: !11667)
!11672 = !DILocation(line: 128, column: 2, scope: !11667)
!11673 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1876, file: !1876, line: 187, type: !11674, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11676)
!11674 = !DISubroutineType(types: !11675)
!11675 = !{!103, !1880, !144}
!11676 = !{!11677, !11678}
!11677 = !DILocalVariable(name: "thread", arg: 1, scope: !11673, file: !1876, line: 187, type: !1880)
!11678 = !DILocalVariable(name: "value", arg: 2, scope: !11673, file: !1876, line: 187, type: !144)
!11679 = !DILocation(line: 0, scope: !11673)
!11680 = !DILocation(line: 206, column: 2, scope: !11673)
!11681 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1876, file: !1876, line: 238, type: !11682, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11684)
!11682 = !DISubroutineType(types: !11683)
!11683 = !{!144, !1880}
!11684 = !{!11685}
!11685 = !DILocalVariable(name: "thread", arg: 1, scope: !11681, file: !1876, line: 238, type: !1880)
!11686 = !DILocation(line: 0, scope: !11681)
!11687 = !DILocation(line: 244, column: 2, scope: !11681)
!11688 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1876, file: !1876, line: 248, type: !11689, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11691)
!11689 = !DISubroutineType(types: !11690)
!11690 = !{!103, !1879, !957, !200}
!11691 = !{!11692, !11693, !11694}
!11692 = !DILocalVariable(name: "thread", arg: 1, scope: !11688, file: !1876, line: 248, type: !1879)
!11693 = !DILocalVariable(name: "buf", arg: 2, scope: !11688, file: !1876, line: 248, type: !957)
!11694 = !DILocalVariable(name: "size", arg: 3, scope: !11688, file: !1876, line: 248, type: !200)
!11695 = !DILocation(line: 0, scope: !11688)
!11696 = !DILocation(line: 257, column: 2, scope: !11688)
!11697 = !DILocation(line: 0, scope: !1875)
!11698 = !DILocation(line: 281, column: 11, scope: !11699)
!11699 = distinct !DILexicalBlock(scope: !1875, file: !1876, line: 281, column: 6)
!11700 = !DILocation(line: 281, column: 20, scope: !11699)
!11701 = !DILocation(line: 275, column: 45, scope: !1875)
!11702 = !DILocation(line: 285, column: 10, scope: !1875)
!11703 = !DILocation(line: 0, scope: !1996)
!11704 = !DILocation(line: 293, column: 39, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !1996, file: !1876, line: 293, column: 2)
!11706 = !DILocation(line: 293, column: 2, scope: !1996)
!11707 = !DILocation(line: 273, column: 14, scope: !1875)
!11708 = !DILocation(line: 309, column: 2, scope: !1875)
!11709 = !DILocation(line: 309, column: 11, scope: !1875)
!11710 = !DILocation(line: 311, column: 2, scope: !1875)
!11711 = !DILocation(line: 293, column: 26, scope: !11705)
!11712 = !DILocation(line: 294, column: 9, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11705, file: !1876, line: 293, column: 54)
!11714 = !DILocation(line: 295, column: 21, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11713, file: !1876, line: 295, column: 7)
!11716 = !DILocation(line: 295, column: 28, scope: !11715)
!11717 = !DILocation(line: 295, column: 7, scope: !11713)
!11718 = !DILocation(line: 299, column: 25, scope: !11713)
!11719 = !DILocation(line: 299, column: 41, scope: !11713)
!11720 = !DILocation(line: 300, column: 7, scope: !11713)
!11721 = !DILocation(line: 300, column: 26, scope: !11713)
!11722 = !DILocation(line: 299, column: 10, scope: !11713)
!11723 = !DILocation(line: 299, column: 7, scope: !11713)
!11724 = !DILocation(line: 302, column: 16, scope: !11713)
!11725 = !DILocation(line: 304, column: 20, scope: !11726)
!11726 = distinct !DILexicalBlock(scope: !11713, file: !1876, line: 304, column: 7)
!11727 = !DILocation(line: 304, column: 7, scope: !11713)
!11728 = !DILocation(line: 305, column: 26, scope: !11729)
!11729 = distinct !DILexicalBlock(scope: !11726, file: !1876, line: 304, column: 26)
!11730 = !DILocation(line: 305, column: 42, scope: !11729)
!11731 = !DILocation(line: 305, column: 11, scope: !11729)
!11732 = !DILocation(line: 305, column: 8, scope: !11729)
!11733 = !DILocation(line: 306, column: 3, scope: !11729)
!11734 = !DILocation(line: 293, column: 50, scope: !11705)
!11735 = !DILocation(line: 312, column: 1, scope: !1875)
!11736 = distinct !DISubprogram(name: "copy_bytes", scope: !1876, file: !1876, line: 261, type: !11737, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11739)
!11737 = !DISubroutineType(types: !11738)
!11738 = !{!200, !957, !200, !144, !200}
!11739 = !{!11740, !11741, !11742, !11743, !11744}
!11740 = !DILocalVariable(name: "dest", arg: 1, scope: !11736, file: !1876, line: 261, type: !957)
!11741 = !DILocalVariable(name: "dest_size", arg: 2, scope: !11736, file: !1876, line: 261, type: !200)
!11742 = !DILocalVariable(name: "src", arg: 3, scope: !11736, file: !1876, line: 261, type: !144)
!11743 = !DILocalVariable(name: "src_size", arg: 4, scope: !11736, file: !1876, line: 261, type: !200)
!11744 = !DILocalVariable(name: "bytes_to_copy", scope: !11736, file: !1876, line: 263, type: !200)
!11745 = !DILocation(line: 0, scope: !11736)
!11746 = !DILocation(line: 265, column: 18, scope: !11736)
!11747 = !DILocation(line: 266, column: 2, scope: !11736)
!11748 = !DILocation(line: 268, column: 2, scope: !11736)
!11749 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1876, file: !1876, line: 383, type: !11750, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11752)
!11750 = !DISubroutineType(types: !11751)
!11751 = !{null, !1880}
!11752 = !{!11753}
!11753 = !DILocalVariable(name: "thread", arg: 1, scope: !11749, file: !1876, line: 383, type: !1880)
!11754 = !DILocation(line: 0, scope: !11749)
!11755 = !DILocation(line: 387, column: 2, scope: !11749)
!11756 = !DILocation(line: 388, column: 1, scope: !11749)
!11757 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1876, file: !1876, line: 528, type: !11758, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11765)
!11758 = !DISubroutineType(types: !11759)
!11759 = !{!957, !1880, !11760, !200, !3327, !102, !102, !102, !103, !121, !144}
!11760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11761, size: 32)
!11761 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3328, line: 44, baseType: !11762)
!11762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1828, line: 47, size: 8, elements: !11763)
!11763 = !{!11764}
!11764 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11762, file: !1828, line: 48, baseType: !146, size: 8)
!11765 = !{!11766, !11767, !11768, !11769, !11770, !11771, !11772, !11773, !11774, !11775, !11776}
!11766 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11757, file: !1876, line: 528, type: !1880)
!11767 = !DILocalVariable(name: "stack", arg: 2, scope: !11757, file: !1876, line: 529, type: !11760)
!11768 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11757, file: !1876, line: 529, type: !200)
!11769 = !DILocalVariable(name: "entry", arg: 4, scope: !11757, file: !1876, line: 530, type: !3327)
!11770 = !DILocalVariable(name: "p1", arg: 5, scope: !11757, file: !1876, line: 531, type: !102)
!11771 = !DILocalVariable(name: "p2", arg: 6, scope: !11757, file: !1876, line: 531, type: !102)
!11772 = !DILocalVariable(name: "p3", arg: 7, scope: !11757, file: !1876, line: 531, type: !102)
!11773 = !DILocalVariable(name: "prio", arg: 8, scope: !11757, file: !1876, line: 532, type: !103)
!11774 = !DILocalVariable(name: "options", arg: 9, scope: !11757, file: !1876, line: 532, type: !121)
!11775 = !DILocalVariable(name: "name", arg: 10, scope: !11757, file: !1876, line: 532, type: !144)
!11776 = !DILocalVariable(name: "stack_ptr", scope: !11757, file: !1876, line: 534, type: !957)
!11777 = !DILocation(line: 0, scope: !11757)
!11778 = !DILocation(line: 550, column: 28, scope: !11757)
!11779 = !DILocation(line: 550, column: 2, scope: !11757)
!11780 = !DILocation(line: 553, column: 34, scope: !11757)
!11781 = !DILocation(line: 553, column: 2, scope: !11757)
!11782 = !DILocation(line: 554, column: 14, scope: !11757)
!11783 = !DILocation(line: 564, column: 2, scope: !11757)
!11784 = !DILocation(line: 567, column: 14, scope: !11757)
!11785 = !DILocation(line: 567, column: 24, scope: !11757)
!11786 = !DILocation(line: 612, column: 7, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !11757, file: !1876, line: 612, column: 6)
!11788 = !DILocation(line: 612, column: 6, scope: !11757)
!11789 = !DILocation(line: 627, column: 40, scope: !11757)
!11790 = !DILocation(line: 637, column: 2, scope: !11757)
!11791 = !DILocation(line: 613, column: 15, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11787, file: !1876, line: 612, column: 17)
!11793 = !DILocation(line: 613, column: 29, scope: !11792)
!11794 = !DILocation(line: 638, column: 1, scope: !11757)
!11795 = distinct !DISubprogram(name: "z_waitq_init", scope: !11796, file: !11796, line: 47, type: !11797, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11799)
!11796 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11797 = !DISubroutineType(types: !11798)
!11798 = !{null, !1911}
!11799 = !{!11800}
!11800 = !DILocalVariable(name: "w", arg: 1, scope: !11795, file: !11796, line: 47, type: !1911)
!11801 = !DILocation(line: 0, scope: !11795)
!11802 = !DILocation(line: 49, column: 21, scope: !11795)
!11803 = !DILocation(line: 49, column: 2, scope: !11795)
!11804 = !DILocation(line: 50, column: 1, scope: !11795)
!11805 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1876, file: !1876, line: 791, type: !11806, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11809)
!11806 = !DISubroutineType(types: !11807)
!11807 = !{null, !11808, !103, !121, !32}
!11808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 32)
!11809 = !{!11810, !11811, !11812, !11813}
!11810 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11805, file: !1876, line: 791, type: !11808)
!11811 = !DILocalVariable(name: "priority", arg: 2, scope: !11805, file: !1876, line: 791, type: !103)
!11812 = !DILocalVariable(name: "initial_state", arg: 3, scope: !11805, file: !1876, line: 792, type: !121)
!11813 = !DILocalVariable(name: "options", arg: 4, scope: !11805, file: !1876, line: 792, type: !32)
!11814 = !DILocation(line: 0, scope: !11805)
!11815 = !DILocation(line: 795, column: 15, scope: !11805)
!11816 = !DILocation(line: 795, column: 25, scope: !11805)
!11817 = !DILocation(line: 796, column: 30, scope: !11805)
!11818 = !DILocation(line: 796, column: 15, scope: !11805)
!11819 = !DILocation(line: 796, column: 28, scope: !11805)
!11820 = !DILocation(line: 797, column: 30, scope: !11805)
!11821 = !DILocation(line: 797, column: 15, scope: !11805)
!11822 = !DILocation(line: 797, column: 28, scope: !11805)
!11823 = !DILocation(line: 799, column: 22, scope: !11805)
!11824 = !DILocation(line: 799, column: 15, scope: !11805)
!11825 = !DILocation(line: 799, column: 20, scope: !11805)
!11826 = !DILocation(line: 801, column: 15, scope: !11805)
!11827 = !DILocation(line: 801, column: 28, scope: !11805)
!11828 = !DILocation(line: 814, column: 2, scope: !11805)
!11829 = !DILocation(line: 815, column: 1, scope: !11805)
!11830 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1876, file: !1876, line: 449, type: !11831, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11833)
!11831 = !DISubroutineType(types: !11832)
!11832 = !{!957, !1880, !11760, !200}
!11833 = !{!11834, !11835, !11836, !11837, !11838, !11839, !11840, !11841}
!11834 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11830, file: !1876, line: 449, type: !1880)
!11835 = !DILocalVariable(name: "stack", arg: 2, scope: !11830, file: !1876, line: 450, type: !11760)
!11836 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11830, file: !1876, line: 450, type: !200)
!11837 = !DILocalVariable(name: "stack_obj_size", scope: !11830, file: !1876, line: 452, type: !200)
!11838 = !DILocalVariable(name: "stack_buf_size", scope: !11830, file: !1876, line: 452, type: !200)
!11839 = !DILocalVariable(name: "stack_ptr", scope: !11830, file: !1876, line: 453, type: !957)
!11840 = !DILocalVariable(name: "stack_buf_start", scope: !11830, file: !1876, line: 453, type: !957)
!11841 = !DILocalVariable(name: "delta", scope: !11830, file: !1876, line: 454, type: !200)
!11842 = !DILocation(line: 0, scope: !11830)
!11843 = !DILocation(line: 465, column: 20, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !11830, file: !1876, line: 463, column: 2)
!11845 = !DILocation(line: 466, column: 21, scope: !11844)
!11846 = !DILocation(line: 473, column: 28, scope: !11830)
!11847 = !DILocation(line: 514, column: 33, scope: !11830)
!11848 = !DILocation(line: 514, column: 25, scope: !11830)
!11849 = !DILocation(line: 514, column: 31, scope: !11830)
!11850 = !DILocation(line: 515, column: 25, scope: !11830)
!11851 = !DILocation(line: 515, column: 30, scope: !11830)
!11852 = !DILocation(line: 516, column: 25, scope: !11830)
!11853 = !DILocation(line: 516, column: 31, scope: !11830)
!11854 = !DILocation(line: 520, column: 2, scope: !11830)
!11855 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1828, file: !1828, line: 331, type: !11856, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11858)
!11856 = !DISubroutineType(types: !11857)
!11857 = !{!957, !11760}
!11858 = !{!11859}
!11859 = !DILocalVariable(name: "sym", arg: 1, scope: !11855, file: !1828, line: 331, type: !11760)
!11860 = !DILocation(line: 0, scope: !11855)
!11861 = !DILocation(line: 333, column: 21, scope: !11855)
!11862 = !DILocation(line: 333, column: 2, scope: !11855)
!11863 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !11864, file: !11864, line: 40, type: !11865, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11867)
!11864 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11865 = !DISubroutineType(types: !11866)
!11866 = !{null, !11808}
!11867 = !{!11868}
!11868 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11863, file: !11864, line: 40, type: !11808)
!11869 = !DILocation(line: 0, scope: !11863)
!11870 = !DILocation(line: 42, column: 31, scope: !11863)
!11871 = !DILocation(line: 42, column: 2, scope: !11863)
!11872 = !DILocation(line: 43, column: 1, scope: !11863)
!11873 = distinct !DISubprogram(name: "z_init_timeout", scope: !11864, file: !11864, line: 25, type: !1937, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11874)
!11874 = !{!11875}
!11875 = !DILocalVariable(name: "to", arg: 1, scope: !11873, file: !11864, line: 25, type: !1939)
!11876 = !DILocation(line: 0, scope: !11873)
!11877 = !DILocation(line: 27, column: 22, scope: !11873)
!11878 = !DILocation(line: 27, column: 2, scope: !11873)
!11879 = !DILocation(line: 28, column: 1, scope: !11873)
!11880 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !11881, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11883)
!11881 = !DISubroutineType(types: !11882)
!11882 = !{null, !1983}
!11883 = !{!11884}
!11884 = !DILocalVariable(name: "node", arg: 1, scope: !11880, file: !221, line: 211, type: !1983)
!11885 = !DILocation(line: 0, scope: !11880)
!11886 = !DILocation(line: 213, column: 8, scope: !11880)
!11887 = !DILocation(line: 213, column: 13, scope: !11880)
!11888 = !DILocation(line: 214, column: 8, scope: !11880)
!11889 = !DILocation(line: 214, column: 13, scope: !11880)
!11890 = !DILocation(line: 215, column: 1, scope: !11880)
!11891 = distinct !DISubprogram(name: "sys_dlist_init", scope: !221, file: !221, line: 197, type: !11892, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11895)
!11892 = !DISubroutineType(types: !11893)
!11893 = !{null, !11894}
!11894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 32)
!11895 = !{!11896}
!11896 = !DILocalVariable(name: "list", arg: 1, scope: !11891, file: !221, line: 197, type: !11894)
!11897 = !DILocation(line: 0, scope: !11891)
!11898 = !DILocation(line: 199, column: 8, scope: !11891)
!11899 = !DILocation(line: 199, column: 13, scope: !11891)
!11900 = !DILocation(line: 200, column: 8, scope: !11891)
!11901 = !DILocation(line: 200, column: 13, scope: !11891)
!11902 = !DILocation(line: 201, column: 1, scope: !11891)
!11903 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1876, file: !1876, line: 641, type: !11904, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11910)
!11904 = !DISubroutineType(types: !11905)
!11905 = !{!1879, !1880, !11760, !200, !3327, !102, !102, !102, !103, !121, !11906}
!11906 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1359, line: 67, baseType: !11907)
!11907 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1359, line: 65, size: 64, elements: !11908)
!11908 = !{!11909}
!11909 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11907, file: !1359, line: 66, baseType: !1358, size: 64)
!11910 = !{!11911, !11912, !11913, !11914, !11915, !11916, !11917, !11918, !11919, !11920}
!11911 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11903, file: !1876, line: 641, type: !1880)
!11912 = !DILocalVariable(name: "stack", arg: 2, scope: !11903, file: !1876, line: 642, type: !11760)
!11913 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11903, file: !1876, line: 643, type: !200)
!11914 = !DILocalVariable(name: "entry", arg: 4, scope: !11903, file: !1876, line: 643, type: !3327)
!11915 = !DILocalVariable(name: "p1", arg: 5, scope: !11903, file: !1876, line: 644, type: !102)
!11916 = !DILocalVariable(name: "p2", arg: 6, scope: !11903, file: !1876, line: 644, type: !102)
!11917 = !DILocalVariable(name: "p3", arg: 7, scope: !11903, file: !1876, line: 644, type: !102)
!11918 = !DILocalVariable(name: "prio", arg: 8, scope: !11903, file: !1876, line: 645, type: !103)
!11919 = !DILocalVariable(name: "options", arg: 9, scope: !11903, file: !1876, line: 645, type: !121)
!11920 = !DILocalVariable(name: "delay", arg: 10, scope: !11903, file: !1876, line: 645, type: !11906)
!11921 = !DILocation(line: 0, scope: !11903)
!11922 = !DILocation(line: 649, column: 2, scope: !11903)
!11923 = !DILocation(line: 652, column: 7, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11903, file: !1876, line: 652, column: 6)
!11925 = !DILocation(line: 652, column: 6, scope: !11903)
!11926 = !DILocation(line: 653, column: 3, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11924, file: !1876, line: 652, column: 39)
!11928 = !DILocation(line: 654, column: 2, scope: !11927)
!11929 = !DILocation(line: 656, column: 2, scope: !11903)
!11930 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1876, file: !1876, line: 401, type: !11931, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11933)
!11931 = !DISubroutineType(types: !11932)
!11932 = !{null, !1880, !11906}
!11933 = !{!11934, !11935}
!11934 = !DILocalVariable(name: "thread", arg: 1, scope: !11930, file: !1876, line: 401, type: !1880)
!11935 = !DILocalVariable(name: "delay", arg: 2, scope: !11930, file: !1876, line: 401, type: !11906)
!11936 = !DILocation(line: 0, scope: !11930)
!11937 = !DILocation(line: 404, column: 6, scope: !11938)
!11938 = distinct !DILexicalBlock(scope: !11930, file: !1876, line: 404, column: 6)
!11939 = !DILocation(line: 404, column: 6, scope: !11930)
!11940 = !DILocation(line: 405, column: 3, scope: !11941)
!11941 = distinct !DILexicalBlock(scope: !11938, file: !1876, line: 404, column: 38)
!11942 = !DILocation(line: 406, column: 2, scope: !11941)
!11943 = !DILocation(line: 407, column: 3, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11938, file: !1876, line: 406, column: 9)
!11945 = !DILocation(line: 413, column: 1, scope: !11930)
!11946 = distinct !DISubprogram(name: "k_thread_start", scope: !3104, file: !3104, line: 205, type: !11947, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11949)
!11947 = !DISubroutineType(types: !11948)
!11948 = !{null, !1879}
!11949 = !{!11950}
!11950 = !DILocalVariable(name: "thread", arg: 1, scope: !11946, file: !3104, line: 205, type: !1879)
!11951 = !DILocation(line: 0, scope: !11946)
!11952 = !DILocation(line: 214, column: 2, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11946, file: !3104, line: 214, column: 2)
!11954 = !{i64 2154090126}
!11955 = !DILocation(line: 215, column: 2, scope: !11946)
!11956 = !DILocation(line: 216, column: 1, scope: !11946)
!11957 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11864, file: !11864, line: 47, type: !11931, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11958)
!11958 = !{!11959, !11960}
!11959 = !DILocalVariable(name: "thread", arg: 1, scope: !11957, file: !11864, line: 47, type: !1880)
!11960 = !DILocalVariable(name: "ticks", arg: 2, scope: !11957, file: !11864, line: 47, type: !11906)
!11961 = !DILocation(line: 0, scope: !11957)
!11962 = !DILocation(line: 49, column: 30, scope: !11957)
!11963 = !DILocation(line: 49, column: 2, scope: !11957)
!11964 = !DILocation(line: 50, column: 1, scope: !11957)
!11965 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1876, file: !1876, line: 748, type: !2904, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11966)
!11966 = !{!11967, !11985}
!11967 = !DILocalVariable(name: "thread_data", scope: !11968, file: !1876, line: 750, type: !11969)
!11968 = distinct !DILexicalBlock(scope: !11965, file: !1876, line: 750, column: 2)
!11969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11970, size: 32)
!11970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !307, line: 620, size: 384, elements: !11971)
!11971 = !{!11972, !11973, !11974, !11975, !11976, !11977, !11978, !11979, !11980, !11981, !11982, !11984}
!11972 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !11970, file: !307, line: 621, baseType: !1880, size: 32)
!11973 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !11970, file: !307, line: 622, baseType: !11760, size: 32, offset: 32)
!11974 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !11970, file: !307, line: 623, baseType: !32, size: 32, offset: 64)
!11975 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !11970, file: !307, line: 624, baseType: !3327, size: 32, offset: 96)
!11976 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !11970, file: !307, line: 625, baseType: !102, size: 32, offset: 128)
!11977 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !11970, file: !307, line: 626, baseType: !102, size: 32, offset: 160)
!11978 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !11970, file: !307, line: 627, baseType: !102, size: 32, offset: 192)
!11979 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !11970, file: !307, line: 628, baseType: !103, size: 32, offset: 224)
!11980 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !11970, file: !307, line: 629, baseType: !121, size: 32, offset: 256)
!11981 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !11970, file: !307, line: 630, baseType: !566, size: 32, offset: 288)
!11982 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !11970, file: !307, line: 631, baseType: !11983, size: 32, offset: 320)
!11983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2904, size: 32)
!11984 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !11970, file: !307, line: 632, baseType: !144, size: 32, offset: 352)
!11985 = !DILocalVariable(name: "thread_data", scope: !11986, file: !1876, line: 781, type: !11969)
!11986 = distinct !DILexicalBlock(scope: !11965, file: !1876, line: 781, column: 2)
!11987 = !DILocation(line: 0, scope: !11968)
!11988 = !DILocation(line: 750, column: 2, scope: !11968)
!11989 = !DILocation(line: 780, column: 2, scope: !11965)
!11990 = !DILocation(line: 0, scope: !11986)
!11991 = !DILocation(line: 781, column: 2, scope: !11986)
!11992 = !DILocation(line: 752, column: 17, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11994, file: !1876, line: 750, column: 38)
!11994 = distinct !DILexicalBlock(scope: !11968, file: !1876, line: 750, column: 2)
!11995 = !DILocation(line: 753, column: 17, scope: !11993)
!11996 = !DILocation(line: 754, column: 17, scope: !11993)
!11997 = !DILocation(line: 755, column: 17, scope: !11993)
!11998 = !DILocation(line: 756, column: 17, scope: !11993)
!11999 = !DILocation(line: 757, column: 17, scope: !11993)
!12000 = !DILocation(line: 758, column: 17, scope: !11993)
!12001 = !DILocation(line: 759, column: 17, scope: !11993)
!12002 = !DILocation(line: 760, column: 17, scope: !11993)
!12003 = !DILocation(line: 751, column: 3, scope: !11993)
!12004 = !DILocation(line: 763, column: 16, scope: !11993)
!12005 = !DILocation(line: 763, column: 29, scope: !11993)
!12006 = !DILocation(line: 763, column: 39, scope: !11993)
!12007 = !DILocation(line: 750, column: 2, scope: !11994)
!12008 = !DILocation(line: 750, column: 2, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !11994, file: !1876, line: 750, column: 2)
!12010 = distinct !{!12010, !11988, !12011}
!12011 = !DILocation(line: 764, column: 2, scope: !11968)
!12012 = !DILocation(line: 787, column: 2, scope: !11965)
!12013 = !DILocation(line: 788, column: 1, scope: !11965)
!12014 = !DILocation(line: 782, column: 20, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !12016, file: !1876, line: 782, column: 7)
!12016 = distinct !DILexicalBlock(scope: !12017, file: !1876, line: 781, column: 38)
!12017 = distinct !DILexicalBlock(scope: !11986, file: !1876, line: 781, column: 2)
!12018 = !DILocation(line: 782, column: 31, scope: !12015)
!12019 = !DILocation(line: 782, column: 7, scope: !12016)
!12020 = !DILocation(line: 783, column: 37, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12015, file: !1876, line: 782, column: 51)
!12022 = !DILocation(line: 784, column: 10, scope: !12021)
!12023 = !DILocation(line: 783, column: 4, scope: !12021)
!12024 = !DILocation(line: 785, column: 3, scope: !12021)
!12025 = !DILocation(line: 781, column: 2, scope: !12017)
!12026 = !DILocation(line: 781, column: 2, scope: !12027)
!12027 = distinct !DILexicalBlock(scope: !12017, file: !1876, line: 781, column: 2)
!12028 = distinct !{!12028, !11991, !12029}
!12029 = !DILocation(line: 786, column: 2, scope: !11986)
!12030 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !12031, file: !12031, line: 403, type: !12032, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !12034)
!12031 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12032 = !DISubroutineType(types: !12033)
!12033 = !{!1270, !1270}
!12034 = !{!12035}
!12035 = !DILocalVariable(name: "t", arg: 1, scope: !12030, file: !12031, line: 403, type: !1270)
!12036 = !DILocation(line: 0, scope: !12030)
!12037 = !DILocalVariable(name: "t", arg: 1, scope: !12038, file: !12031, line: 102, type: !1270)
!12038 = distinct !DISubprogram(name: "z_tmcvt", scope: !12031, file: !12031, line: 102, type: !12039, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !12041)
!12039 = !DISubroutineType(types: !12040)
!12040 = !{!1270, !1270, !121, !121, !157, !157, !157, !157}
!12041 = !{!12037, !12042, !12043, !12044, !12045, !12046, !12047, !12048, !12049, !12050, !12051}
!12042 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12038, file: !12031, line: 102, type: !121)
!12043 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12038, file: !12031, line: 103, type: !121)
!12044 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12038, file: !12031, line: 103, type: !157)
!12045 = !DILocalVariable(name: "result32", arg: 5, scope: !12038, file: !12031, line: 104, type: !157)
!12046 = !DILocalVariable(name: "round_up", arg: 6, scope: !12038, file: !12031, line: 104, type: !157)
!12047 = !DILocalVariable(name: "round_off", arg: 7, scope: !12038, file: !12031, line: 105, type: !157)
!12048 = !DILocalVariable(name: "mul_ratio", scope: !12038, file: !12031, line: 107, type: !157)
!12049 = !DILocalVariable(name: "div_ratio", scope: !12038, file: !12031, line: 109, type: !157)
!12050 = !DILocalVariable(name: "off", scope: !12038, file: !12031, line: 116, type: !1270)
!12051 = !DILocalVariable(name: "rdivisor", scope: !12052, file: !12031, line: 119, type: !121)
!12052 = distinct !DILexicalBlock(scope: !12053, file: !12031, line: 118, column: 18)
!12053 = distinct !DILexicalBlock(scope: !12038, file: !12031, line: 118, column: 6)
!12054 = !DILocation(line: 0, scope: !12038, inlinedAt: !12055)
!12055 = distinct !DILocation(line: 406, column: 9, scope: !12030)
!12056 = !DILocation(line: 145, column: 13, scope: !12057, inlinedAt: !12055)
!12057 = distinct !DILexicalBlock(scope: !12058, file: !12031, line: 144, column: 10)
!12058 = distinct !DILexicalBlock(scope: !12059, file: !12031, line: 142, column: 7)
!12059 = distinct !DILexicalBlock(scope: !12060, file: !12031, line: 141, column: 24)
!12060 = distinct !DILexicalBlock(scope: !12061, file: !12031, line: 141, column: 13)
!12061 = distinct !DILexicalBlock(scope: !12038, file: !12031, line: 134, column: 6)
!12062 = !DILocation(line: 406, column: 2, scope: !12030)
!12063 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1876, file: !1876, line: 817, type: !3325, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !12064)
!12064 = !{!12065, !12066, !12067, !12068}
!12065 = !DILocalVariable(name: "entry", arg: 1, scope: !12063, file: !1876, line: 817, type: !3327)
!12066 = !DILocalVariable(name: "p1", arg: 2, scope: !12063, file: !1876, line: 818, type: !102)
!12067 = !DILocalVariable(name: "p2", arg: 3, scope: !12063, file: !1876, line: 818, type: !102)
!12068 = !DILocalVariable(name: "p3", arg: 4, scope: !12063, file: !1876, line: 818, type: !102)
!12069 = !DILocation(line: 0, scope: !12063)
!12070 = !DILocation(line: 822, column: 2, scope: !12063)
!12071 = !DILocation(line: 822, column: 17, scope: !12063)
!12072 = !DILocation(line: 822, column: 30, scope: !12063)
!12073 = !DILocation(line: 823, column: 2, scope: !12063)
!12074 = !DILocation(line: 845, column: 2, scope: !12063)
!12075 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1876, file: !1876, line: 888, type: !12076, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !12078)
!12076 = !DISubroutineType(types: !12077)
!12077 = !{!103, !1880}
!12078 = !{!12079}
!12079 = !DILocalVariable(name: "thread", arg: 1, scope: !12075, file: !1876, line: 888, type: !1880)
!12080 = !DILocation(line: 0, scope: !12075)
!12081 = !DILocation(line: 893, column: 2, scope: !12075)
!12082 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1876, file: !1876, line: 897, type: !12083, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !12085)
!12083 = !DISubroutineType(types: !12084)
!12084 = !{!103, !1880, !32}
!12085 = !{!12086, !12087}
!12086 = !DILocalVariable(name: "thread", arg: 1, scope: !12082, file: !1876, line: 897, type: !1880)
!12087 = !DILocalVariable(name: "options", arg: 2, scope: !12082, file: !1876, line: 897, type: !32)
!12088 = !DILocation(line: 0, scope: !12082)
!12089 = !DILocation(line: 902, column: 2, scope: !12082)
!12090 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1876, file: !1876, line: 1072, type: !12091, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !12096)
!12091 = !DISubroutineType(types: !12092)
!12092 = !{!103, !1879, !12093}
!12093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12094, size: 32)
!12094 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !211, line: 234, baseType: !12095)
!12095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !211, line: 192, elements: !322)
!12096 = !{!12097, !12098}
!12097 = !DILocalVariable(name: "thread", arg: 1, scope: !12090, file: !1876, line: 1072, type: !1879)
!12098 = !DILocalVariable(name: "stats", arg: 2, scope: !12090, file: !1876, line: 1073, type: !12093)
!12099 = !DILocation(line: 0, scope: !12090)
!12100 = !DILocation(line: 1075, column: 14, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12090, file: !1876, line: 1075, column: 6)
!12102 = !DILocation(line: 1075, column: 23, scope: !12101)
!12103 = !DILocation(line: 1086, column: 1, scope: !12090)
!12104 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1876, file: !1876, line: 1088, type: !12105, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !12107)
!12105 = !DISubroutineType(types: !12106)
!12106 = !{!103, !12093}
!12107 = !{!12108}
!12108 = !DILocalVariable(name: "stats", arg: 1, scope: !12104, file: !1876, line: 1088, type: !12093)
!12109 = !DILocation(line: 0, scope: !12104)
!12110 = !DILocation(line: 1094, column: 12, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12104, file: !1876, line: 1094, column: 6)
!12112 = !DILocation(line: 1120, column: 1, scope: !12104)
!12113 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !12114, file: !12114, line: 20, type: !2904, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2885, retainedNodes: !322)
!12114 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12115 = !DILocation(line: 30, column: 2, scope: !12113)
!12116 = !DILocation(line: 31, column: 1, scope: !12113)
!12117 = distinct !DISubprogram(name: "idle", scope: !12114, file: !12114, line: 33, type: !3330, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2885, retainedNodes: !12118)
!12118 = !{!12119, !12120, !12121}
!12119 = !DILocalVariable(name: "unused1", arg: 1, scope: !12117, file: !12114, line: 33, type: !102)
!12120 = !DILocalVariable(name: "unused2", arg: 2, scope: !12117, file: !12114, line: 33, type: !102)
!12121 = !DILocalVariable(name: "unused3", arg: 3, scope: !12117, file: !12114, line: 33, type: !102)
!12122 = !DILocation(line: 0, scope: !12117)
!12123 = !DILocation(line: 41, column: 2, scope: !12117)
!12124 = !DILocation(line: 55, column: 2, scope: !12125, inlinedAt: !12129)
!12125 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5290, file: !5290, line: 42, type: !5291, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2885, retainedNodes: !12126)
!12126 = !{!12127, !12128}
!12127 = !DILocalVariable(name: "key", scope: !12125, file: !5290, line: 44, type: !32)
!12128 = !DILocalVariable(name: "tmp", scope: !12125, file: !5290, line: 53, type: !32)
!12129 = distinct !DILocation(line: 62, column: 10, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !12117, file: !12114, line: 41, column: 15)
!12131 = !{i64 1948204}
!12132 = !DILocation(line: 0, scope: !12125, inlinedAt: !12129)
!12133 = !DILocation(line: 86, column: 3, scope: !12130)
!12134 = distinct !{!12134, !12123, !12135}
!12135 = !DILocation(line: 105, column: 2, scope: !12117)
!12136 = distinct !DISubprogram(name: "k_cpu_idle", scope: !307, file: !307, line: 5627, type: !2904, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2885, retainedNodes: !322)
!12137 = !DILocation(line: 5629, column: 2, scope: !12136)
!12138 = !DILocation(line: 5630, column: 1, scope: !12136)
!12139 = !DISubprogram(name: "arch_cpu_idle", scope: !3328, file: !3328, line: 167, type: !2904, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!12140 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2108, file: !2108, line: 93, type: !12141, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12143)
!12141 = !DISubroutineType(types: !12142)
!12142 = !{!566, !2003, !2003}
!12143 = !{!12144, !12145, !12146, !12147}
!12144 = !DILocalVariable(name: "thread_1", arg: 1, scope: !12140, file: !2108, line: 93, type: !2003)
!12145 = !DILocalVariable(name: "thread_2", arg: 2, scope: !12140, file: !2108, line: 94, type: !2003)
!12146 = !DILocalVariable(name: "b1", scope: !12140, file: !2108, line: 97, type: !566)
!12147 = !DILocalVariable(name: "b2", scope: !12140, file: !2108, line: 98, type: !566)
!12148 = !DILocation(line: 0, scope: !12140)
!12149 = !DILocation(line: 97, column: 30, scope: !12140)
!12150 = !DILocation(line: 98, column: 30, scope: !12140)
!12151 = !DILocation(line: 100, column: 9, scope: !12152)
!12152 = distinct !DILexicalBlock(scope: !12140, file: !2108, line: 100, column: 6)
!12153 = !DILocation(line: 100, column: 6, scope: !12140)
!12154 = !DILocation(line: 125, column: 1, scope: !12140)
!12155 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2108, file: !2108, line: 428, type: !12156, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12158)
!12156 = !DISubroutineType(types: !12157)
!12157 = !{null, !2003}
!12158 = !{!12159}
!12159 = !DILocalVariable(name: "curr", arg: 1, scope: !12155, file: !2108, line: 428, type: !2003)
!12160 = !DILocation(line: 0, scope: !12155)
!12161 = !DILocation(line: 434, column: 6, scope: !12162)
!12162 = distinct !DILexicalBlock(scope: !12155, file: !2108, line: 434, column: 6)
!12163 = !DILocation(line: 434, column: 23, scope: !12162)
!12164 = !DILocation(line: 434, column: 6, scope: !12155)
!12165 = !DILocation(line: 435, column: 50, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12162, file: !2108, line: 434, column: 29)
!12167 = !DILocation(line: 435, column: 48, scope: !12166)
!12168 = !DILocation(line: 435, column: 29, scope: !12166)
!12169 = !DILocation(line: 436, column: 24, scope: !12166)
!12170 = !DILocation(line: 436, column: 3, scope: !12166)
!12171 = !DILocation(line: 437, column: 2, scope: !12166)
!12172 = !DILocation(line: 438, column: 1, scope: !12155)
!12173 = distinct !DISubprogram(name: "slice_time", scope: !2108, file: !2108, line: 407, type: !12174, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12176)
!12174 = !DISubroutineType(types: !12175)
!12175 = !{!103, !2003}
!12176 = !{!12177, !12178}
!12177 = !DILocalVariable(name: "curr", arg: 1, scope: !12173, file: !2108, line: 407, type: !2003)
!12178 = !DILocalVariable(name: "ret", scope: !12173, file: !2108, line: 409, type: !103)
!12179 = !DILocation(line: 0, scope: !12173)
!12180 = !DILocation(line: 409, column: 12, scope: !12173)
!12181 = !DILocation(line: 416, column: 2, scope: !12173)
!12182 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2108, file: !2108, line: 440, type: !12183, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12185)
!12183 = !DISubroutineType(types: !12184)
!12184 = !{null, !566, !103}
!12185 = !{!12186, !12187, !12188, !12194}
!12186 = !DILocalVariable(name: "slice", arg: 1, scope: !12182, file: !2108, line: 440, type: !566)
!12187 = !DILocalVariable(name: "prio", arg: 2, scope: !12182, file: !2108, line: 440, type: !103)
!12188 = !DILocalVariable(name: "__i", scope: !12189, file: !2108, line: 442, type: !12190)
!12189 = distinct !DILexicalBlock(scope: !12182, file: !2108, line: 442, column: 2)
!12190 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !12191)
!12191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !12192)
!12192 = !{!12193}
!12193 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12191, file: !321, line: 33, baseType: !103, size: 32)
!12194 = !DILocalVariable(name: "__key", scope: !12189, file: !2108, line: 442, type: !12190)
!12195 = !DILocation(line: 0, scope: !12182)
!12196 = !DILocation(line: 0, scope: !12189)
!12197 = !DILocalVariable(name: "l", arg: 1, scope: !12198, file: !321, line: 136, type: !12201)
!12198 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !12199, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12202)
!12199 = !DISubroutineType(types: !12200)
!12200 = !{!12190, !12201}
!12201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 32)
!12202 = !{!12197, !12203}
!12203 = !DILocalVariable(name: "k", scope: !12198, file: !321, line: 139, type: !12190)
!12204 = !DILocation(line: 0, scope: !12198, inlinedAt: !12205)
!12205 = distinct !DILocation(line: 442, column: 2, scope: !12189)
!12206 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !12211)
!12207 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5290, file: !5290, line: 42, type: !5291, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12208)
!12208 = !{!12209, !12210}
!12209 = !DILocalVariable(name: "key", scope: !12207, file: !5290, line: 44, type: !32)
!12210 = !DILocalVariable(name: "tmp", scope: !12207, file: !5290, line: 53, type: !32)
!12211 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !12205)
!12212 = !{i64 1992175}
!12213 = !DILocation(line: 0, scope: !12207, inlinedAt: !12211)
!12214 = !DILocation(line: 443, column: 29, scope: !12215)
!12215 = distinct !DILexicalBlock(scope: !12216, file: !2108, line: 442, column: 26)
!12216 = distinct !DILexicalBlock(scope: !12189, file: !2108, line: 442, column: 2)
!12217 = !DILocation(line: 444, column: 17, scope: !12215)
!12218 = !DILocation(line: 445, column: 51, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12215, file: !2108, line: 445, column: 7)
!12220 = !DILocation(line: 445, column: 7, scope: !12215)
!12221 = !DILocation(line: 0, scope: !12215)
!12222 = !DILocation(line: 451, column: 18, scope: !12215)
!12223 = !DILocation(line: 452, column: 3, scope: !12215)
!12224 = !DILocalVariable(name: "key", arg: 2, scope: !12225, file: !321, line: 190, type: !12190)
!12225 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !12226, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12228)
!12226 = !DISubroutineType(types: !12227)
!12227 = !{null, !12201, !12190}
!12228 = !{!12229, !12224}
!12229 = !DILocalVariable(name: "l", arg: 1, scope: !12225, file: !321, line: 189, type: !12201)
!12230 = !DILocation(line: 0, scope: !12225, inlinedAt: !12231)
!12231 = distinct !DILocation(line: 442, column: 2, scope: !12216)
!12232 = !DILocalVariable(name: "key", arg: 1, scope: !12233, file: !5290, line: 84, type: !32)
!12233 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5290, file: !5290, line: 84, type: !5301, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12234)
!12234 = !{!12232}
!12235 = !DILocation(line: 0, scope: !12233, inlinedAt: !12236)
!12236 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !12231)
!12237 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !12236)
!12238 = !{i64 1992992}
!12239 = !DILocation(line: 454, column: 1, scope: !12182)
!12240 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !12031, file: !12031, line: 389, type: !6472, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12241)
!12241 = !{!12242}
!12242 = !DILocalVariable(name: "t", arg: 1, scope: !12240, file: !12031, line: 389, type: !121)
!12243 = !DILocation(line: 0, scope: !12240)
!12244 = !DILocalVariable(name: "t", arg: 1, scope: !12245, file: !12031, line: 102, type: !1270)
!12245 = distinct !DISubprogram(name: "z_tmcvt", scope: !12031, file: !12031, line: 102, type: !12039, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12246)
!12246 = !{!12244, !12247, !12248, !12249, !12250, !12251, !12252, !12253, !12254, !12255, !12256}
!12247 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12245, file: !12031, line: 102, type: !121)
!12248 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12245, file: !12031, line: 103, type: !121)
!12249 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12245, file: !12031, line: 103, type: !157)
!12250 = !DILocalVariable(name: "result32", arg: 5, scope: !12245, file: !12031, line: 104, type: !157)
!12251 = !DILocalVariable(name: "round_up", arg: 6, scope: !12245, file: !12031, line: 104, type: !157)
!12252 = !DILocalVariable(name: "round_off", arg: 7, scope: !12245, file: !12031, line: 105, type: !157)
!12253 = !DILocalVariable(name: "mul_ratio", scope: !12245, file: !12031, line: 107, type: !157)
!12254 = !DILocalVariable(name: "div_ratio", scope: !12245, file: !12031, line: 109, type: !157)
!12255 = !DILocalVariable(name: "off", scope: !12245, file: !12031, line: 116, type: !1270)
!12256 = !DILocalVariable(name: "rdivisor", scope: !12257, file: !12031, line: 119, type: !121)
!12257 = distinct !DILexicalBlock(scope: !12258, file: !12031, line: 118, column: 18)
!12258 = distinct !DILexicalBlock(scope: !12245, file: !12031, line: 118, column: 6)
!12259 = !DILocation(line: 0, scope: !12245, inlinedAt: !12260)
!12260 = distinct !DILocation(line: 392, column: 9, scope: !12240)
!12261 = !DILocation(line: 143, column: 25, scope: !12262, inlinedAt: !12260)
!12262 = distinct !DILexicalBlock(scope: !12263, file: !12031, line: 142, column: 17)
!12263 = distinct !DILexicalBlock(scope: !12264, file: !12031, line: 142, column: 7)
!12264 = distinct !DILexicalBlock(scope: !12265, file: !12031, line: 141, column: 24)
!12265 = distinct !DILexicalBlock(scope: !12266, file: !12031, line: 141, column: 13)
!12266 = distinct !DILexicalBlock(scope: !12245, file: !12031, line: 134, column: 6)
!12267 = !DILocation(line: 392, column: 2, scope: !12240)
!12268 = distinct !DISubprogram(name: "z_time_slice", scope: !2108, file: !2108, line: 502, type: !7181, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12269)
!12269 = !{!12270, !12271}
!12270 = !DILocalVariable(name: "ticks", arg: 1, scope: !12268, file: !2108, line: 502, type: !103)
!12271 = !DILocalVariable(name: "key", scope: !12268, file: !2108, line: 511, type: !12190)
!12272 = !DILocation(line: 0, scope: !12268)
!12273 = !DILocation(line: 0, scope: !12198, inlinedAt: !12274)
!12274 = distinct !DILocation(line: 511, column: 25, scope: !12268)
!12275 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !12276)
!12276 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !12274)
!12277 = !DILocation(line: 0, scope: !12207, inlinedAt: !12276)
!12278 = !DILocation(line: 514, column: 6, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12268, file: !2108, line: 514, column: 6)
!12280 = !DILocation(line: 514, column: 25, scope: !12279)
!12281 = !DILocation(line: 514, column: 22, scope: !12279)
!12282 = !DILocation(line: 514, column: 6, scope: !12268)
!12283 = !DILocation(line: 515, column: 3, scope: !12284)
!12284 = distinct !DILexicalBlock(scope: !12279, file: !2108, line: 514, column: 35)
!12285 = !DILocation(line: 0, scope: !12225, inlinedAt: !12286)
!12286 = distinct !DILocation(line: 516, column: 3, scope: !12284)
!12287 = !DILocation(line: 0, scope: !12233, inlinedAt: !12288)
!12288 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !12286)
!12289 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !12288)
!12290 = !DILocation(line: 517, column: 3, scope: !12284)
!12291 = !DILocation(line: 519, column: 18, scope: !12268)
!12292 = !DILocation(line: 522, column: 6, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12268, file: !2108, line: 522, column: 6)
!12294 = !DILocation(line: 522, column: 27, scope: !12293)
!12295 = !DILocation(line: 522, column: 30, scope: !12293)
!12296 = !DILocation(line: 522, column: 6, scope: !12268)
!12297 = !DILocation(line: 523, column: 30, scope: !12298)
!12298 = distinct !DILexicalBlock(scope: !12299, file: !2108, line: 523, column: 7)
!12299 = distinct !DILexicalBlock(scope: !12293, file: !2108, line: 522, column: 51)
!12300 = !DILocation(line: 523, column: 13, scope: !12298)
!12301 = !DILocation(line: 523, column: 7, scope: !12299)
!12302 = !DILocation(line: 530, column: 10, scope: !12303)
!12303 = distinct !DILexicalBlock(scope: !12298, file: !2108, line: 523, column: 43)
!12304 = !DILocation(line: 531, column: 3, scope: !12303)
!12305 = !DILocation(line: 532, column: 30, scope: !12306)
!12306 = distinct !DILexicalBlock(scope: !12298, file: !2108, line: 531, column: 10)
!12307 = !DILocation(line: 535, column: 29, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12293, file: !2108, line: 534, column: 9)
!12309 = !DILocation(line: 0, scope: !12225, inlinedAt: !12310)
!12310 = distinct !DILocation(line: 537, column: 2, scope: !12268)
!12311 = !DILocation(line: 0, scope: !12233, inlinedAt: !12312)
!12312 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !12310)
!12313 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !12312)
!12314 = !DILocation(line: 538, column: 1, scope: !12268)
!12315 = distinct !DISubprogram(name: "sliceable", scope: !2108, file: !2108, line: 468, type: !12316, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12318)
!12316 = !DISubroutineType(types: !12317)
!12317 = !{!157, !2003}
!12318 = !{!12319, !12320}
!12319 = !DILocalVariable(name: "thread", arg: 1, scope: !12315, file: !2108, line: 468, type: !2003)
!12320 = !DILocalVariable(name: "ret", scope: !12315, file: !2108, line: 470, type: !157)
!12321 = !DILocation(line: 0, scope: !12315)
!12322 = !DILocation(line: 470, column: 13, scope: !12315)
!12323 = !DILocation(line: 471, column: 3, scope: !12315)
!12324 = !DILocation(line: 471, column: 7, scope: !12315)
!12325 = !DILocation(line: 472, column: 3, scope: !12315)
!12326 = !DILocation(line: 472, column: 37, scope: !12315)
!12327 = !DILocation(line: 472, column: 24, scope: !12315)
!12328 = !DILocation(line: 472, column: 43, scope: !12315)
!12329 = !DILocation(line: 472, column: 7, scope: !12315)
!12330 = !DILocation(line: 473, column: 3, scope: !12315)
!12331 = !DILocation(line: 473, column: 7, scope: !12315)
!12332 = !DILocation(line: 473, column: 6, scope: !12315)
!12333 = !DILocation(line: 479, column: 2, scope: !12315)
!12334 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2108, file: !2108, line: 482, type: !12335, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12337)
!12335 = !DISubroutineType(types: !12336)
!12336 = !{!12190, !12190}
!12337 = !{!12338, !12339}
!12338 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !12334, file: !2108, line: 482, type: !12190)
!12339 = !DILocalVariable(name: "curr", scope: !12334, file: !2108, line: 484, type: !2003)
!12340 = !DILocation(line: 0, scope: !12334)
!12341 = !DILocation(line: 484, column: 26, scope: !12334)
!12342 = !DILocation(line: 493, column: 7, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12334, file: !2108, line: 493, column: 6)
!12344 = !DILocation(line: 493, column: 6, scope: !12334)
!12345 = !DILocation(line: 494, column: 3, scope: !12346)
!12346 = distinct !DILexicalBlock(scope: !12343, file: !2108, line: 493, column: 49)
!12347 = !DILocation(line: 495, column: 2, scope: !12346)
!12348 = !DILocation(line: 496, column: 2, scope: !12334)
!12349 = !DILocation(line: 499, column: 1, scope: !12334)
!12350 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !11470, file: !11470, line: 106, type: !12316, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12351)
!12351 = !{!12352, !12353}
!12352 = !DILocalVariable(name: "thread", arg: 1, scope: !12350, file: !11470, line: 106, type: !2003)
!12353 = !DILocalVariable(name: "state", scope: !12350, file: !11470, line: 108, type: !154)
!12354 = !DILocation(line: 0, scope: !12350)
!12355 = !DILocation(line: 108, column: 31, scope: !12350)
!12356 = !DILocation(line: 110, column: 16, scope: !12350)
!12357 = !DILocation(line: 111, column: 41, scope: !12350)
!12358 = !DILocation(line: 110, column: 2, scope: !12350)
!12359 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2108, file: !2108, line: 393, type: !12156, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12360)
!12360 = !{!12361}
!12361 = !DILocalVariable(name: "thread", arg: 1, scope: !12359, file: !2108, line: 393, type: !2003)
!12362 = !DILocation(line: 0, scope: !12359)
!12363 = !DILocation(line: 395, column: 6, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12359, file: !2108, line: 395, column: 6)
!12365 = !DILocation(line: 395, column: 6, scope: !12359)
!12366 = !DILocalVariable(name: "thread", arg: 1, scope: !12367, file: !2108, line: 264, type: !2003)
!12367 = distinct !DISubprogram(name: "dequeue_thread", scope: !2108, file: !2108, line: 264, type: !12156, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12368)
!12368 = !{!12366}
!12369 = !DILocation(line: 0, scope: !12367, inlinedAt: !12370)
!12370 = distinct !DILocation(line: 396, column: 3, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12364, file: !2108, line: 395, column: 34)
!12372 = !DILocation(line: 266, column: 15, scope: !12367, inlinedAt: !12370)
!12373 = !DILocation(line: 266, column: 28, scope: !12367, inlinedAt: !12370)
!12374 = !DILocalVariable(name: "thread", arg: 1, scope: !12375, file: !2108, line: 232, type: !2003)
!12375 = distinct !DISubprogram(name: "runq_remove", scope: !2108, file: !2108, line: 232, type: !12156, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12376)
!12376 = !{!12374}
!12377 = !DILocation(line: 0, scope: !12375, inlinedAt: !12378)
!12378 = distinct !DILocation(line: 268, column: 3, scope: !12379, inlinedAt: !12370)
!12379 = distinct !DILexicalBlock(scope: !12380, file: !2108, line: 267, column: 35)
!12380 = distinct !DILexicalBlock(scope: !12367, file: !2108, line: 267, column: 6)
!12381 = !DILocation(line: 234, column: 2, scope: !12375, inlinedAt: !12378)
!12382 = !DILocation(line: 397, column: 2, scope: !12371)
!12383 = !DILocalVariable(name: "thread", arg: 1, scope: !12384, file: !2108, line: 250, type: !2003)
!12384 = distinct !DISubprogram(name: "queue_thread", scope: !2108, file: !2108, line: 250, type: !12156, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12385)
!12385 = !{!12383}
!12386 = !DILocation(line: 0, scope: !12384, inlinedAt: !12387)
!12387 = distinct !DILocation(line: 398, column: 2, scope: !12359)
!12388 = !DILocation(line: 252, column: 15, scope: !12384, inlinedAt: !12387)
!12389 = !DILocation(line: 252, column: 28, scope: !12384, inlinedAt: !12387)
!12390 = !DILocalVariable(name: "thread", arg: 1, scope: !12391, file: !2108, line: 227, type: !2003)
!12391 = distinct !DISubprogram(name: "runq_add", scope: !2108, file: !2108, line: 227, type: !12156, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12392)
!12392 = !{!12390}
!12393 = !DILocation(line: 0, scope: !12391, inlinedAt: !12394)
!12394 = distinct !DILocation(line: 254, column: 3, scope: !12395, inlinedAt: !12387)
!12395 = distinct !DILexicalBlock(scope: !12396, file: !2108, line: 253, column: 35)
!12396 = distinct !DILexicalBlock(scope: !12384, file: !2108, line: 253, column: 6)
!12397 = !DILocalVariable(name: "pq", arg: 1, scope: !12398, file: !2108, line: 181, type: !12401)
!12398 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2108, file: !2108, line: 181, type: !12399, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12402)
!12399 = !DISubroutineType(types: !12400)
!12400 = !{null, !12401, !2003}
!12401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 32)
!12402 = !{!12397, !12403, !12404}
!12403 = !DILocalVariable(name: "thread", arg: 2, scope: !12398, file: !2108, line: 182, type: !2003)
!12404 = !DILocalVariable(name: "t", scope: !12398, file: !2108, line: 184, type: !2003)
!12405 = !DILocation(line: 0, scope: !12398, inlinedAt: !12406)
!12406 = distinct !DILocation(line: 229, column: 2, scope: !12391, inlinedAt: !12394)
!12407 = !DILocation(line: 188, column: 2, scope: !12408, inlinedAt: !12406)
!12408 = distinct !DILexicalBlock(scope: !12398, file: !2108, line: 188, column: 2)
!12409 = !DILocation(line: 188, column: 2, scope: !12410, inlinedAt: !12406)
!12410 = distinct !DILexicalBlock(scope: !12408, file: !2108, line: 188, column: 2)
!12411 = !DILocation(line: 0, scope: !12408, inlinedAt: !12406)
!12412 = !DILocation(line: 189, column: 7, scope: !12413, inlinedAt: !12406)
!12413 = distinct !DILexicalBlock(scope: !12414, file: !2108, line: 189, column: 7)
!12414 = distinct !DILexicalBlock(scope: !12410, file: !2108, line: 188, column: 56)
!12415 = !DILocation(line: 189, column: 35, scope: !12413, inlinedAt: !12406)
!12416 = !DILocation(line: 189, column: 7, scope: !12414, inlinedAt: !12406)
!12417 = !DILocation(line: 191, column: 21, scope: !12418, inlinedAt: !12406)
!12418 = distinct !DILexicalBlock(scope: !12413, file: !2108, line: 189, column: 40)
!12419 = !DILocation(line: 190, column: 4, scope: !12418, inlinedAt: !12406)
!12420 = !DILocation(line: 192, column: 4, scope: !12418, inlinedAt: !12406)
!12421 = distinct !{!12421, !12407, !12422}
!12422 = !DILocation(line: 194, column: 2, scope: !12408, inlinedAt: !12406)
!12423 = !DILocation(line: 196, column: 37, scope: !12398, inlinedAt: !12406)
!12424 = !DILocation(line: 196, column: 2, scope: !12398, inlinedAt: !12406)
!12425 = !DILocation(line: 197, column: 1, scope: !12398, inlinedAt: !12406)
!12426 = !DILocation(line: 399, column: 25, scope: !12359)
!12427 = !DILocation(line: 399, column: 22, scope: !12359)
!12428 = !DILocation(line: 399, column: 2, scope: !12359)
!12429 = !DILocation(line: 400, column: 1, scope: !12359)
!12430 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !11470, file: !11470, line: 136, type: !12316, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12431)
!12431 = !{!12432}
!12432 = !DILocalVariable(name: "thread", arg: 1, scope: !12430, file: !11470, line: 136, type: !2003)
!12433 = !DILocation(line: 0, scope: !12430)
!12434 = !DILocation(line: 138, column: 9, scope: !12430)
!12435 = !DILocation(line: 138, column: 2, scope: !12430)
!12436 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2108, file: !2108, line: 1137, type: !12399, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12437)
!12437 = !{!12438, !12439}
!12438 = !DILocalVariable(name: "pq", arg: 1, scope: !12436, file: !2108, line: 1137, type: !12401)
!12439 = !DILocalVariable(name: "thread", arg: 2, scope: !12436, file: !2108, line: 1137, type: !2003)
!12440 = !DILocation(line: 0, scope: !12436)
!12441 = !DILocation(line: 1141, column: 33, scope: !12436)
!12442 = !DILocation(line: 1141, column: 2, scope: !12436)
!12443 = !DILocation(line: 1142, column: 1, scope: !12436)
!12444 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !221, file: !221, line: 294, type: !12445, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12447)
!12445 = !DISubroutineType(types: !12446)
!12446 = !{!2104, !12401}
!12447 = !{!12448}
!12448 = !DILocalVariable(name: "list", arg: 1, scope: !12444, file: !221, line: 294, type: !12401)
!12449 = !DILocation(line: 0, scope: !12444)
!12450 = !DILocation(line: 296, column: 9, scope: !12444)
!12451 = !DILocation(line: 296, column: 49, scope: !12444)
!12452 = !DILocation(line: 296, column: 2, scope: !12444)
!12453 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !221, file: !221, line: 443, type: !12454, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12456)
!12454 = !DISubroutineType(types: !12455)
!12455 = !{null, !2104, !2104}
!12456 = !{!12457, !12458, !12459}
!12457 = !DILocalVariable(name: "successor", arg: 1, scope: !12453, file: !221, line: 443, type: !2104)
!12458 = !DILocalVariable(name: "node", arg: 2, scope: !12453, file: !221, line: 443, type: !2104)
!12459 = !DILocalVariable(name: "prev", scope: !12453, file: !221, line: 445, type: !12460)
!12460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2104)
!12461 = !DILocation(line: 0, scope: !12453)
!12462 = !DILocation(line: 445, column: 39, scope: !12453)
!12463 = !DILocation(line: 447, column: 8, scope: !12453)
!12464 = !DILocation(line: 447, column: 13, scope: !12453)
!12465 = !DILocation(line: 448, column: 8, scope: !12453)
!12466 = !DILocation(line: 448, column: 13, scope: !12453)
!12467 = !DILocation(line: 449, column: 8, scope: !12453)
!12468 = !DILocation(line: 449, column: 13, scope: !12453)
!12469 = !DILocation(line: 450, column: 18, scope: !12453)
!12470 = !DILocation(line: 451, column: 1, scope: !12453)
!12471 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !221, file: !221, line: 341, type: !12472, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12474)
!12472 = !DISubroutineType(types: !12473)
!12473 = !{!2104, !12401, !2104}
!12474 = !{!12475, !12476}
!12475 = !DILocalVariable(name: "list", arg: 1, scope: !12471, file: !221, line: 341, type: !12401)
!12476 = !DILocalVariable(name: "node", arg: 2, scope: !12471, file: !221, line: 342, type: !2104)
!12477 = !DILocation(line: 0, scope: !12471)
!12478 = !DILocation(line: 344, column: 15, scope: !12471)
!12479 = !DILocation(line: 344, column: 9, scope: !12471)
!12480 = !DILocation(line: 344, column: 26, scope: !12471)
!12481 = !DILocation(line: 344, column: 2, scope: !12471)
!12482 = distinct !DISubprogram(name: "sys_dlist_append", scope: !221, file: !221, line: 404, type: !12483, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12485)
!12483 = !DISubroutineType(types: !12484)
!12484 = !{null, !12401, !2104}
!12485 = !{!12486, !12487, !12488}
!12486 = !DILocalVariable(name: "list", arg: 1, scope: !12482, file: !221, line: 404, type: !12401)
!12487 = !DILocalVariable(name: "node", arg: 2, scope: !12482, file: !221, line: 404, type: !2104)
!12488 = !DILocalVariable(name: "tail", scope: !12482, file: !221, line: 406, type: !12460)
!12489 = !DILocation(line: 0, scope: !12482)
!12490 = !DILocation(line: 406, column: 34, scope: !12482)
!12491 = !DILocation(line: 408, column: 8, scope: !12482)
!12492 = !DILocation(line: 408, column: 13, scope: !12482)
!12493 = !DILocation(line: 409, column: 8, scope: !12482)
!12494 = !DILocation(line: 409, column: 13, scope: !12482)
!12495 = !DILocation(line: 411, column: 8, scope: !12482)
!12496 = !DILocation(line: 411, column: 13, scope: !12482)
!12497 = !DILocation(line: 412, column: 13, scope: !12482)
!12498 = !DILocation(line: 413, column: 1, scope: !12482)
!12499 = distinct !DISubprogram(name: "update_cache", scope: !2108, file: !2108, line: 559, type: !7181, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12500)
!12500 = !{!12501, !12502}
!12501 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !12499, file: !2108, line: 559, type: !103)
!12502 = !DILocalVariable(name: "thread", scope: !12499, file: !2108, line: 562, type: !2003)
!12503 = !DILocation(line: 0, scope: !12499)
!12504 = !DILocation(line: 239, column: 9, scope: !12505, inlinedAt: !12508)
!12505 = distinct !DISubprogram(name: "runq_best", scope: !2108, file: !2108, line: 237, type: !12506, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!12506 = !DISubroutineType(types: !12507)
!12507 = !{!2003}
!12508 = distinct !DILocation(line: 314, column: 28, scope: !12509, inlinedAt: !12512)
!12509 = distinct !DISubprogram(name: "next_up", scope: !2108, file: !2108, line: 312, type: !12506, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12510)
!12510 = !{!12511}
!12511 = !DILocalVariable(name: "thread", scope: !12509, file: !2108, line: 314, type: !2003)
!12512 = distinct !DILocation(line: 562, column: 28, scope: !12499)
!12513 = !DILocation(line: 0, scope: !12509, inlinedAt: !12512)
!12514 = !DILocation(line: 340, column: 17, scope: !12509, inlinedAt: !12512)
!12515 = !DILocation(line: 340, column: 9, scope: !12509, inlinedAt: !12512)
!12516 = !DILocalVariable(name: "thread", arg: 1, scope: !12517, file: !2108, line: 127, type: !2003)
!12517 = distinct !DISubprogram(name: "should_preempt", scope: !2108, file: !2108, line: 127, type: !12518, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12520)
!12518 = !DISubroutineType(types: !12519)
!12519 = !{!157, !2003, !103}
!12520 = !{!12516, !12521}
!12521 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !12517, file: !2108, line: 128, type: !103)
!12522 = !DILocation(line: 0, scope: !12517, inlinedAt: !12523)
!12523 = distinct !DILocation(line: 564, column: 6, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12499, file: !2108, line: 564, column: 6)
!12525 = !DILocation(line: 133, column: 17, scope: !12526, inlinedAt: !12523)
!12526 = distinct !DILexicalBlock(scope: !12517, file: !2108, line: 133, column: 6)
!12527 = !DILocation(line: 0, scope: !12524)
!12528 = !DILocation(line: 133, column: 6, scope: !12517, inlinedAt: !12523)
!12529 = !DILocation(line: 140, column: 6, scope: !12530, inlinedAt: !12523)
!12530 = distinct !DILexicalBlock(scope: !12517, file: !2108, line: 140, column: 6)
!12531 = !DILocation(line: 140, column: 6, scope: !12517, inlinedAt: !12523)
!12532 = !DILocation(line: 150, column: 9, scope: !12533, inlinedAt: !12523)
!12533 = distinct !DILexicalBlock(scope: !12517, file: !2108, line: 149, column: 6)
!12534 = !DILocation(line: 149, column: 6, scope: !12517, inlinedAt: !12523)
!12535 = !DILocation(line: 157, column: 6, scope: !12536, inlinedAt: !12523)
!12536 = distinct !DILexicalBlock(scope: !12517, file: !2108, line: 157, column: 6)
!12537 = !DILocation(line: 564, column: 6, scope: !12499)
!12538 = !DILocation(line: 566, column: 14, scope: !12539)
!12539 = distinct !DILexicalBlock(scope: !12540, file: !2108, line: 566, column: 7)
!12540 = distinct !DILexicalBlock(scope: !12524, file: !2108, line: 564, column: 42)
!12541 = !DILocation(line: 566, column: 7, scope: !12540)
!12542 = !DILocation(line: 567, column: 4, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12539, file: !2108, line: 566, column: 27)
!12544 = !DILocation(line: 568, column: 3, scope: !12543)
!12545 = !DILocation(line: 585, column: 1, scope: !12499)
!12546 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2108, file: !2108, line: 1144, type: !12547, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12549)
!12547 = !DISubroutineType(types: !12548)
!12548 = !{!2003, !12401}
!12549 = !{!12550, !12551, !12552}
!12550 = !DILocalVariable(name: "pq", arg: 1, scope: !12546, file: !2108, line: 1144, type: !12401)
!12551 = !DILocalVariable(name: "thread", scope: !12546, file: !2108, line: 1146, type: !2003)
!12552 = !DILocalVariable(name: "n", scope: !12546, file: !2108, line: 1147, type: !2104)
!12553 = !DILocation(line: 0, scope: !12546)
!12554 = !DILocation(line: 1147, column: 19, scope: !12546)
!12555 = !DILocation(line: 1152, column: 2, scope: !12546)
!12556 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !11470, file: !11470, line: 115, type: !12316, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12557)
!12557 = !{!12558}
!12558 = !DILocalVariable(name: "thread", arg: 1, scope: !12556, file: !11470, line: 115, type: !2003)
!12559 = !DILocation(line: 0, scope: !12556)
!12560 = !DILocation(line: 117, column: 46, scope: !12556)
!12561 = !DILocation(line: 117, column: 10, scope: !12556)
!12562 = !DILocation(line: 117, column: 9, scope: !12556)
!12563 = !DILocation(line: 117, column: 2, scope: !12556)
!12564 = distinct !DISubprogram(name: "is_preempt", scope: !2108, file: !2108, line: 62, type: !12174, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12565)
!12565 = !{!12566}
!12566 = !DILocalVariable(name: "thread", arg: 1, scope: !12564, file: !2108, line: 62, type: !2003)
!12567 = !DILocation(line: 0, scope: !12564)
!12568 = !DILocation(line: 65, column: 22, scope: !12564)
!12569 = !DILocation(line: 65, column: 30, scope: !12564)
!12570 = !DILocation(line: 65, column: 2, scope: !12564)
!12571 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11864, file: !11864, line: 35, type: !12572, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12576)
!12572 = !DISubroutineType(types: !12573)
!12573 = !{!157, !12574}
!12574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12575, size: 32)
!12575 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2054)
!12576 = !{!12577}
!12577 = !DILocalVariable(name: "to", arg: 1, scope: !12571, file: !11864, line: 35, type: !12574)
!12578 = !DILocation(line: 0, scope: !12571)
!12579 = !DILocation(line: 37, column: 35, scope: !12571)
!12580 = !DILocation(line: 37, column: 10, scope: !12571)
!12581 = !DILocation(line: 37, column: 9, scope: !12571)
!12582 = !DILocation(line: 37, column: 2, scope: !12571)
!12583 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !221, file: !221, line: 225, type: !12584, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12588)
!12584 = !DISubroutineType(types: !12585)
!12585 = !{!157, !12586}
!12586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12587, size: 32)
!12587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2013)
!12588 = !{!12589}
!12589 = !DILocalVariable(name: "node", arg: 1, scope: !12583, file: !221, line: 225, type: !12586)
!12590 = !DILocation(line: 0, scope: !12583)
!12591 = !DILocation(line: 227, column: 15, scope: !12583)
!12592 = !DILocation(line: 227, column: 20, scope: !12583)
!12593 = !DILocation(line: 227, column: 2, scope: !12583)
!12594 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !221, file: !221, line: 325, type: !12472, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12595)
!12595 = !{!12596, !12597}
!12596 = !DILocalVariable(name: "list", arg: 1, scope: !12594, file: !221, line: 325, type: !12401)
!12597 = !DILocalVariable(name: "node", arg: 2, scope: !12594, file: !221, line: 326, type: !2104)
!12598 = !DILocation(line: 0, scope: !12594)
!12599 = !DILocation(line: 328, column: 24, scope: !12594)
!12600 = !DILocation(line: 328, column: 15, scope: !12594)
!12601 = !DILocation(line: 328, column: 9, scope: !12594)
!12602 = !DILocation(line: 328, column: 45, scope: !12594)
!12603 = !DILocation(line: 328, column: 2, scope: !12594)
!12604 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !221, file: !221, line: 266, type: !12605, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12607)
!12605 = !DISubroutineType(types: !12606)
!12606 = !{!157, !12401}
!12607 = !{!12608}
!12608 = !DILocalVariable(name: "list", arg: 1, scope: !12604, file: !221, line: 266, type: !12401)
!12609 = !DILocation(line: 0, scope: !12604)
!12610 = !DILocation(line: 268, column: 15, scope: !12604)
!12611 = !DILocation(line: 268, column: 20, scope: !12604)
!12612 = !DILocation(line: 268, column: 2, scope: !12604)
!12613 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !221, file: !221, line: 496, type: !12614, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12616)
!12614 = !DISubroutineType(types: !12615)
!12615 = !{null, !2104}
!12616 = !{!12617, !12618, !12619}
!12617 = !DILocalVariable(name: "node", arg: 1, scope: !12613, file: !221, line: 496, type: !2104)
!12618 = !DILocalVariable(name: "prev", scope: !12613, file: !221, line: 498, type: !12460)
!12619 = !DILocalVariable(name: "next", scope: !12613, file: !221, line: 499, type: !12460)
!12620 = !DILocation(line: 0, scope: !12613)
!12621 = !DILocation(line: 498, column: 34, scope: !12613)
!12622 = !DILocation(line: 499, column: 34, scope: !12613)
!12623 = !DILocation(line: 501, column: 8, scope: !12613)
!12624 = !DILocation(line: 501, column: 13, scope: !12613)
!12625 = !DILocation(line: 502, column: 8, scope: !12613)
!12626 = !DILocation(line: 502, column: 13, scope: !12613)
!12627 = !DILocation(line: 503, column: 2, scope: !12613)
!12628 = !DILocation(line: 504, column: 1, scope: !12613)
!12629 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !12614, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12630)
!12630 = !{!12631}
!12631 = !DILocalVariable(name: "node", arg: 1, scope: !12629, file: !221, line: 211, type: !2104)
!12632 = !DILocation(line: 0, scope: !12629)
!12633 = !DILocation(line: 213, column: 8, scope: !12629)
!12634 = !DILocation(line: 213, column: 13, scope: !12629)
!12635 = !DILocation(line: 214, column: 8, scope: !12629)
!12636 = !DILocation(line: 214, column: 13, scope: !12629)
!12637 = !DILocation(line: 215, column: 1, scope: !12629)
!12638 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !11470, file: !11470, line: 131, type: !12639, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12641)
!12639 = !DISubroutineType(types: !12640)
!12640 = !{!157, !2003, !121}
!12641 = !{!12642, !12643}
!12642 = !DILocalVariable(name: "thread", arg: 1, scope: !12638, file: !11470, line: 131, type: !2003)
!12643 = !DILocalVariable(name: "state", arg: 2, scope: !12638, file: !11470, line: 131, type: !121)
!12644 = !DILocation(line: 0, scope: !12638)
!12645 = !DILocation(line: 133, column: 23, scope: !12638)
!12646 = !DILocation(line: 133, column: 45, scope: !12638)
!12647 = !DILocation(line: 133, column: 2, scope: !12638)
!12648 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !11470, file: !11470, line: 211, type: !12649, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12651)
!12649 = !DISubroutineType(types: !12650)
!12650 = !{!157, !103, !103}
!12651 = !{!12652, !12653}
!12652 = !DILocalVariable(name: "prio", arg: 1, scope: !12648, file: !11470, line: 211, type: !103)
!12653 = !DILocalVariable(name: "test_prio", arg: 2, scope: !12648, file: !11470, line: 211, type: !103)
!12654 = !DILocation(line: 0, scope: !12648)
!12655 = !DILocation(line: 213, column: 9, scope: !12648)
!12656 = !DILocation(line: 213, column: 2, scope: !12648)
!12657 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !11470, file: !11470, line: 83, type: !12316, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12658)
!12658 = !{!12659}
!12659 = !DILocalVariable(name: "thread", arg: 1, scope: !12657, file: !11470, line: 83, type: !2003)
!12660 = !DILocation(line: 0, scope: !12657)
!12661 = !DILocation(line: 89, column: 16, scope: !12657)
!12662 = !DILocation(line: 89, column: 2, scope: !12657)
!12663 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !11470, file: !11470, line: 206, type: !12649, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12664)
!12664 = !{!12665, !12666}
!12665 = !DILocalVariable(name: "prio1", arg: 1, scope: !12663, file: !11470, line: 206, type: !103)
!12666 = !DILocalVariable(name: "prio2", arg: 2, scope: !12663, file: !11470, line: 206, type: !103)
!12667 = !DILocation(line: 0, scope: !12663)
!12668 = !DILocation(line: 208, column: 15, scope: !12663)
!12669 = !DILocation(line: 208, column: 2, scope: !12663)
!12670 = distinct !DISubprogram(name: "z_ready_thread", scope: !2108, file: !2108, line: 635, type: !12156, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12671)
!12671 = !{!12672, !12673, !12675}
!12672 = !DILocalVariable(name: "thread", arg: 1, scope: !12670, file: !2108, line: 635, type: !2003)
!12673 = !DILocalVariable(name: "__i", scope: !12674, file: !2108, line: 637, type: !12190)
!12674 = distinct !DILexicalBlock(scope: !12670, file: !2108, line: 637, column: 2)
!12675 = !DILocalVariable(name: "__key", scope: !12674, file: !2108, line: 637, type: !12190)
!12676 = !DILocation(line: 0, scope: !12670)
!12677 = !DILocation(line: 0, scope: !12674)
!12678 = !DILocation(line: 0, scope: !12198, inlinedAt: !12679)
!12679 = distinct !DILocation(line: 637, column: 2, scope: !12674)
!12680 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !12681)
!12681 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !12679)
!12682 = !DILocation(line: 0, scope: !12207, inlinedAt: !12681)
!12683 = !DILocation(line: 639, column: 4, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12685, file: !2108, line: 638, column: 41)
!12685 = distinct !DILexicalBlock(scope: !12686, file: !2108, line: 638, column: 7)
!12686 = distinct !DILexicalBlock(scope: !12687, file: !2108, line: 637, column: 26)
!12687 = distinct !DILexicalBlock(scope: !12674, file: !2108, line: 637, column: 2)
!12688 = !DILocation(line: 0, scope: !12225, inlinedAt: !12689)
!12689 = distinct !DILocation(line: 637, column: 2, scope: !12687)
!12690 = !DILocation(line: 0, scope: !12233, inlinedAt: !12691)
!12691 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !12689)
!12692 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !12691)
!12693 = !DILocation(line: 642, column: 1, scope: !12670)
!12694 = distinct !DISubprogram(name: "ready_thread", scope: !2108, file: !2108, line: 617, type: !12156, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12695)
!12695 = !{!12696}
!12696 = !DILocalVariable(name: "thread", arg: 1, scope: !12694, file: !2108, line: 617, type: !2003)
!12697 = !DILocation(line: 0, scope: !12694)
!12698 = !DILocation(line: 626, column: 7, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12694, file: !2108, line: 626, column: 6)
!12700 = !DILocation(line: 626, column: 34, scope: !12699)
!12701 = !DILocation(line: 626, column: 37, scope: !12699)
!12702 = !DILocation(line: 626, column: 6, scope: !12694)
!12703 = !DILocation(line: 0, scope: !12384, inlinedAt: !12704)
!12704 = distinct !DILocation(line: 629, column: 3, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12699, file: !2108, line: 626, column: 64)
!12706 = !DILocation(line: 252, column: 15, scope: !12384, inlinedAt: !12704)
!12707 = !DILocation(line: 252, column: 28, scope: !12384, inlinedAt: !12704)
!12708 = !DILocation(line: 0, scope: !12391, inlinedAt: !12709)
!12709 = distinct !DILocation(line: 254, column: 3, scope: !12395, inlinedAt: !12704)
!12710 = !DILocation(line: 0, scope: !12398, inlinedAt: !12711)
!12711 = distinct !DILocation(line: 229, column: 2, scope: !12391, inlinedAt: !12709)
!12712 = !DILocation(line: 188, column: 2, scope: !12408, inlinedAt: !12711)
!12713 = !DILocation(line: 188, column: 2, scope: !12410, inlinedAt: !12711)
!12714 = !DILocation(line: 0, scope: !12408, inlinedAt: !12711)
!12715 = !DILocation(line: 189, column: 7, scope: !12413, inlinedAt: !12711)
!12716 = !DILocation(line: 189, column: 35, scope: !12413, inlinedAt: !12711)
!12717 = !DILocation(line: 189, column: 7, scope: !12414, inlinedAt: !12711)
!12718 = !DILocation(line: 191, column: 21, scope: !12418, inlinedAt: !12711)
!12719 = !DILocation(line: 190, column: 4, scope: !12418, inlinedAt: !12711)
!12720 = !DILocation(line: 192, column: 4, scope: !12418, inlinedAt: !12711)
!12721 = distinct !{!12721, !12712, !12722}
!12722 = !DILocation(line: 194, column: 2, scope: !12408, inlinedAt: !12711)
!12723 = !DILocation(line: 196, column: 37, scope: !12398, inlinedAt: !12711)
!12724 = !DILocation(line: 196, column: 2, scope: !12398, inlinedAt: !12711)
!12725 = !DILocation(line: 197, column: 1, scope: !12398, inlinedAt: !12711)
!12726 = !DILocation(line: 630, column: 3, scope: !12705)
!12727 = !DILocation(line: 632, column: 2, scope: !12705)
!12728 = !DILocation(line: 633, column: 1, scope: !12694)
!12729 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !11470, file: !11470, line: 120, type: !12316, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12730)
!12730 = !{!12731}
!12731 = !DILocalVariable(name: "thread", arg: 1, scope: !12729, file: !11470, line: 120, type: !2003)
!12732 = !DILocation(line: 0, scope: !12729)
!12733 = !DILocation(line: 122, column: 12, scope: !12729)
!12734 = !DILocation(line: 122, column: 62, scope: !12729)
!12735 = !DILocation(line: 123, column: 4, scope: !12729)
!12736 = !DILocation(line: 122, column: 2, scope: !12729)
!12737 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2108, file: !2108, line: 644, type: !12156, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12738)
!12738 = !{!12739, !12740, !12742}
!12739 = !DILocalVariable(name: "thread", arg: 1, scope: !12737, file: !2108, line: 644, type: !2003)
!12740 = !DILocalVariable(name: "__i", scope: !12741, file: !2108, line: 646, type: !12190)
!12741 = distinct !DILexicalBlock(scope: !12737, file: !2108, line: 646, column: 2)
!12742 = !DILocalVariable(name: "__key", scope: !12741, file: !2108, line: 646, type: !12190)
!12743 = !DILocation(line: 0, scope: !12737)
!12744 = !DILocation(line: 0, scope: !12741)
!12745 = !DILocation(line: 0, scope: !12198, inlinedAt: !12746)
!12746 = distinct !DILocation(line: 646, column: 2, scope: !12741)
!12747 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !12748)
!12748 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !12746)
!12749 = !DILocation(line: 0, scope: !12207, inlinedAt: !12748)
!12750 = !DILocation(line: 647, column: 3, scope: !12751)
!12751 = distinct !DILexicalBlock(scope: !12752, file: !2108, line: 646, column: 26)
!12752 = distinct !DILexicalBlock(scope: !12741, file: !2108, line: 646, column: 2)
!12753 = !DILocation(line: 0, scope: !12225, inlinedAt: !12754)
!12754 = distinct !DILocation(line: 646, column: 2, scope: !12752)
!12755 = !DILocation(line: 0, scope: !12233, inlinedAt: !12756)
!12756 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !12754)
!12757 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !12756)
!12758 = !DILocation(line: 649, column: 1, scope: !12737)
!12759 = distinct !DISubprogram(name: "z_sched_start", scope: !2108, file: !2108, line: 651, type: !12156, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12760)
!12760 = !{!12761, !12762}
!12761 = !DILocalVariable(name: "thread", arg: 1, scope: !12759, file: !2108, line: 651, type: !2003)
!12762 = !DILocalVariable(name: "key", scope: !12759, file: !2108, line: 653, type: !12190)
!12763 = !DILocation(line: 0, scope: !12759)
!12764 = !DILocation(line: 0, scope: !12198, inlinedAt: !12765)
!12765 = distinct !DILocation(line: 653, column: 25, scope: !12759)
!12766 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !12767)
!12767 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !12765)
!12768 = !DILocation(line: 0, scope: !12207, inlinedAt: !12767)
!12769 = !DILocation(line: 655, column: 6, scope: !12770)
!12770 = distinct !DILexicalBlock(scope: !12759, file: !2108, line: 655, column: 6)
!12771 = !DILocation(line: 655, column: 6, scope: !12759)
!12772 = !DILocation(line: 0, scope: !12225, inlinedAt: !12773)
!12773 = distinct !DILocation(line: 656, column: 3, scope: !12774)
!12774 = distinct !DILexicalBlock(scope: !12770, file: !2108, line: 655, column: 36)
!12775 = !DILocation(line: 0, scope: !12233, inlinedAt: !12776)
!12776 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !12773)
!12777 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !12776)
!12778 = !DILocation(line: 657, column: 3, scope: !12774)
!12779 = !DILocation(line: 660, column: 2, scope: !12759)
!12780 = !DILocation(line: 661, column: 2, scope: !12759)
!12781 = !DILocation(line: 662, column: 2, scope: !12759)
!12782 = !DILocation(line: 663, column: 1, scope: !12759)
!12783 = distinct !DISubprogram(name: "z_has_thread_started", scope: !11470, file: !11470, line: 126, type: !12316, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12784)
!12784 = !{!12785}
!12785 = !DILocalVariable(name: "thread", arg: 1, scope: !12783, file: !11470, line: 126, type: !2003)
!12786 = !DILocation(line: 0, scope: !12783)
!12787 = !DILocation(line: 128, column: 23, scope: !12783)
!12788 = !DILocation(line: 128, column: 36, scope: !12783)
!12789 = !DILocation(line: 128, column: 56, scope: !12783)
!12790 = !DILocation(line: 128, column: 2, scope: !12783)
!12791 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11470, file: !11470, line: 155, type: !12156, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12792)
!12792 = !{!12793}
!12793 = !DILocalVariable(name: "thread", arg: 1, scope: !12791, file: !11470, line: 155, type: !2003)
!12794 = !DILocation(line: 0, scope: !12791)
!12795 = !DILocation(line: 157, column: 15, scope: !12791)
!12796 = !DILocation(line: 157, column: 28, scope: !12791)
!12797 = !DILocation(line: 158, column: 1, scope: !12791)
!12798 = distinct !DISubprogram(name: "z_reschedule", scope: !2108, file: !2108, line: 967, type: !12226, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12799)
!12799 = !{!12800, !12801}
!12800 = !DILocalVariable(name: "lock", arg: 1, scope: !12798, file: !2108, line: 967, type: !12201)
!12801 = !DILocalVariable(name: "key", arg: 2, scope: !12798, file: !2108, line: 967, type: !12190)
!12802 = !DILocation(line: 0, scope: !12798)
!12803 = !DILocation(line: 969, column: 6, scope: !12804)
!12804 = distinct !DILexicalBlock(scope: !12798, file: !2108, line: 969, column: 6)
!12805 = !DILocation(line: 969, column: 23, scope: !12804)
!12806 = !DILocation(line: 969, column: 26, scope: !12804)
!12807 = !DILocation(line: 969, column: 6, scope: !12798)
!12808 = !DILocalVariable(name: "key", arg: 2, scope: !12809, file: !11574, line: 193, type: !12190)
!12809 = distinct !DISubprogram(name: "z_swap", scope: !11574, file: !11574, line: 193, type: !12810, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12812)
!12810 = !DISubroutineType(types: !12811)
!12811 = !{!103, !12201, !12190}
!12812 = !{!12813, !12808}
!12813 = !DILocalVariable(name: "lock", arg: 1, scope: !12809, file: !11574, line: 193, type: !12201)
!12814 = !DILocation(line: 0, scope: !12809, inlinedAt: !12815)
!12815 = distinct !DILocation(line: 970, column: 3, scope: !12816)
!12816 = distinct !DILexicalBlock(scope: !12804, file: !2108, line: 969, column: 39)
!12817 = !DILocation(line: 196, column: 9, scope: !12809, inlinedAt: !12815)
!12818 = !DILocation(line: 971, column: 2, scope: !12816)
!12819 = !DILocation(line: 0, scope: !12225, inlinedAt: !12820)
!12820 = distinct !DILocation(line: 972, column: 3, scope: !12821)
!12821 = distinct !DILexicalBlock(scope: !12804, file: !2108, line: 971, column: 9)
!12822 = !DILocation(line: 0, scope: !12233, inlinedAt: !12823)
!12823 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !12820)
!12824 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !12823)
!12825 = !DILocation(line: 975, column: 1, scope: !12798)
!12826 = distinct !DISubprogram(name: "resched", scope: !2108, file: !2108, line: 940, type: !12827, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12829)
!12827 = !DISubroutineType(types: !12828)
!12828 = !{!157, !121}
!12829 = !{!12830}
!12830 = !DILocalVariable(name: "key", arg: 1, scope: !12826, file: !2108, line: 940, type: !121)
!12831 = !DILocation(line: 0, scope: !12826)
!12832 = !DILocalVariable(name: "key", arg: 1, scope: !12833, file: !5290, line: 112, type: !32)
!12833 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5290, file: !5290, line: 112, type: !12834, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12836)
!12834 = !DISubroutineType(types: !12835)
!12835 = !{!157, !32}
!12836 = !{!12832}
!12837 = !DILocation(line: 0, scope: !12833, inlinedAt: !12838)
!12838 = distinct !DILocation(line: 946, column: 9, scope: !12826)
!12839 = !DILocation(line: 115, column: 13, scope: !12833, inlinedAt: !12838)
!12840 = !DILocation(line: 946, column: 32, scope: !12826)
!12841 = !DILocation(line: 1031, column: 3, scope: !12842, inlinedAt: !12845)
!12842 = distinct !DISubprogram(name: "__get_IPSR", scope: !5464, file: !5464, line: 1027, type: !5545, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12843)
!12843 = !{!12844}
!12844 = !DILocalVariable(name: "result", scope: !12842, file: !5464, line: 1029, type: !121)
!12845 = distinct !DILocation(line: 48, column: 10, scope: !12846, inlinedAt: !12847)
!12846 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6258, file: !6258, line: 46, type: !6259, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!12847 = distinct !DILocation(line: 946, column: 36, scope: !12826)
!12848 = !{i64 2869914}
!12849 = !DILocation(line: 0, scope: !12842, inlinedAt: !12845)
!12850 = !DILocation(line: 48, column: 9, scope: !12846, inlinedAt: !12847)
!12851 = !DILocation(line: 946, column: 2, scope: !12826)
!12852 = distinct !DISubprogram(name: "need_swap", scope: !2108, file: !2108, line: 953, type: !6259, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12853)
!12853 = !{!12854}
!12854 = !DILocalVariable(name: "new_thread", scope: !12852, file: !2108, line: 959, type: !2003)
!12855 = !DILocation(line: 962, column: 31, scope: !12852)
!12856 = !DILocation(line: 0, scope: !12852)
!12857 = !DILocation(line: 963, column: 23, scope: !12852)
!12858 = !DILocation(line: 963, column: 20, scope: !12852)
!12859 = !DILocation(line: 963, column: 2, scope: !12852)
!12860 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !11574, file: !11574, line: 181, type: !5474, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12861)
!12861 = !{!12862, !12863}
!12862 = !DILocalVariable(name: "key", arg: 1, scope: !12860, file: !11574, line: 181, type: !32)
!12863 = !DILocalVariable(name: "ret", scope: !12860, file: !11574, line: 183, type: !103)
!12864 = !DILocation(line: 0, scope: !12860)
!12865 = !DILocation(line: 185, column: 8, scope: !12860)
!12866 = !DILocation(line: 186, column: 2, scope: !12860)
!12867 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2108, file: !2108, line: 665, type: !12156, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12868)
!12868 = !{!12869, !12870, !12872}
!12869 = !DILocalVariable(name: "thread", arg: 1, scope: !12867, file: !2108, line: 665, type: !2003)
!12870 = !DILocalVariable(name: "__i", scope: !12871, file: !2108, line: 671, type: !12190)
!12871 = distinct !DILexicalBlock(scope: !12867, file: !2108, line: 671, column: 2)
!12872 = !DILocalVariable(name: "__key", scope: !12871, file: !2108, line: 671, type: !12190)
!12873 = !DILocation(line: 0, scope: !12867)
!12874 = !DILocation(line: 669, column: 8, scope: !12867)
!12875 = !DILocation(line: 0, scope: !12871)
!12876 = !DILocation(line: 0, scope: !12198, inlinedAt: !12877)
!12877 = distinct !DILocation(line: 671, column: 2, scope: !12871)
!12878 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !12879)
!12879 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !12877)
!12880 = !DILocation(line: 0, scope: !12207, inlinedAt: !12879)
!12881 = !DILocation(line: 672, column: 7, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12883, file: !2108, line: 672, column: 7)
!12883 = distinct !DILexicalBlock(scope: !12884, file: !2108, line: 671, column: 26)
!12884 = distinct !DILexicalBlock(scope: !12871, file: !2108, line: 671, column: 2)
!12885 = !DILocation(line: 672, column: 7, scope: !12883)
!12886 = !DILocation(line: 0, scope: !12367, inlinedAt: !12887)
!12887 = distinct !DILocation(line: 673, column: 4, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12882, file: !2108, line: 672, column: 35)
!12889 = !DILocation(line: 266, column: 15, scope: !12367, inlinedAt: !12887)
!12890 = !DILocation(line: 266, column: 28, scope: !12367, inlinedAt: !12887)
!12891 = !DILocation(line: 0, scope: !12375, inlinedAt: !12892)
!12892 = distinct !DILocation(line: 268, column: 3, scope: !12379, inlinedAt: !12887)
!12893 = !DILocation(line: 234, column: 2, scope: !12375, inlinedAt: !12892)
!12894 = !DILocation(line: 674, column: 3, scope: !12888)
!12895 = !DILocation(line: 675, column: 3, scope: !12883)
!12896 = !DILocation(line: 676, column: 26, scope: !12883)
!12897 = !DILocation(line: 676, column: 23, scope: !12883)
!12898 = !DILocation(line: 676, column: 3, scope: !12883)
!12899 = !DILocation(line: 0, scope: !12225, inlinedAt: !12900)
!12900 = distinct !DILocation(line: 671, column: 2, scope: !12884)
!12901 = !DILocation(line: 0, scope: !12233, inlinedAt: !12902)
!12902 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !12900)
!12903 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !12902)
!12904 = !DILocation(line: 679, column: 16, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12867, file: !2108, line: 679, column: 6)
!12906 = !DILocation(line: 679, column: 13, scope: !12905)
!12907 = !DILocation(line: 679, column: 6, scope: !12867)
!12908 = !DILocation(line: 680, column: 3, scope: !12909)
!12909 = distinct !DILexicalBlock(scope: !12905, file: !2108, line: 679, column: 26)
!12910 = !DILocation(line: 681, column: 2, scope: !12909)
!12911 = !DILocation(line: 684, column: 1, scope: !12867)
!12912 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !11864, file: !11864, line: 52, type: !12174, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12913)
!12913 = !{!12914}
!12914 = !DILocalVariable(name: "thread", arg: 1, scope: !12912, file: !11864, line: 52, type: !2003)
!12915 = !DILocation(line: 0, scope: !12912)
!12916 = !DILocation(line: 54, column: 39, scope: !12912)
!12917 = !DILocation(line: 54, column: 9, scope: !12912)
!12918 = !DILocation(line: 54, column: 2, scope: !12912)
!12919 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !11470, file: !11470, line: 141, type: !12156, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12920)
!12920 = !{!12921}
!12921 = !DILocalVariable(name: "thread", arg: 1, scope: !12919, file: !11470, line: 141, type: !2003)
!12922 = !DILocation(line: 0, scope: !12919)
!12923 = !DILocation(line: 143, column: 15, scope: !12919)
!12924 = !DILocation(line: 143, column: 28, scope: !12919)
!12925 = !DILocation(line: 146, column: 1, scope: !12919)
!12926 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !11470, file: !11470, line: 73, type: !2904, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!12927 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !12928)
!12928 = distinct !DILocation(line: 75, column: 30, scope: !12926)
!12929 = !DILocation(line: 0, scope: !12207, inlinedAt: !12928)
!12930 = !DILocation(line: 75, column: 9, scope: !12926)
!12931 = !DILocation(line: 76, column: 1, scope: !12926)
!12932 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2108, file: !2108, line: 977, type: !5555, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12933)
!12933 = !{!12934}
!12934 = !DILocalVariable(name: "key", arg: 1, scope: !12932, file: !2108, line: 977, type: !121)
!12935 = !DILocation(line: 0, scope: !12932)
!12936 = !DILocation(line: 979, column: 6, scope: !12937)
!12937 = distinct !DILexicalBlock(scope: !12932, file: !2108, line: 979, column: 6)
!12938 = !DILocation(line: 979, column: 6, scope: !12932)
!12939 = !DILocation(line: 980, column: 3, scope: !12940)
!12940 = distinct !DILexicalBlock(scope: !12937, file: !2108, line: 979, column: 20)
!12941 = !DILocation(line: 981, column: 2, scope: !12940)
!12942 = !DILocation(line: 0, scope: !12233, inlinedAt: !12943)
!12943 = distinct !DILocation(line: 982, column: 3, scope: !12944)
!12944 = distinct !DILexicalBlock(scope: !12937, file: !2108, line: 981, column: 9)
!12945 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !12943)
!12946 = !DILocation(line: 985, column: 1, scope: !12932)
!12947 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2108, file: !2108, line: 695, type: !12156, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12948)
!12948 = !{!12949, !12950}
!12949 = !DILocalVariable(name: "thread", arg: 1, scope: !12947, file: !2108, line: 695, type: !2003)
!12950 = !DILocalVariable(name: "key", scope: !12947, file: !2108, line: 699, type: !12190)
!12951 = !DILocation(line: 0, scope: !12947)
!12952 = !DILocation(line: 0, scope: !12198, inlinedAt: !12953)
!12953 = distinct !DILocation(line: 699, column: 25, scope: !12947)
!12954 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !12955)
!12955 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !12953)
!12956 = !DILocation(line: 0, scope: !12207, inlinedAt: !12955)
!12957 = !DILocation(line: 702, column: 7, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12947, file: !2108, line: 702, column: 6)
!12959 = !DILocation(line: 702, column: 6, scope: !12947)
!12960 = !DILocation(line: 0, scope: !12225, inlinedAt: !12961)
!12961 = distinct !DILocation(line: 703, column: 3, scope: !12962)
!12962 = distinct !DILexicalBlock(scope: !12958, file: !2108, line: 702, column: 38)
!12963 = !DILocation(line: 0, scope: !12233, inlinedAt: !12964)
!12964 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !12961)
!12965 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !12964)
!12966 = !DILocation(line: 704, column: 3, scope: !12962)
!12967 = !DILocation(line: 707, column: 2, scope: !12947)
!12968 = !DILocation(line: 708, column: 2, scope: !12947)
!12969 = !DILocation(line: 710, column: 2, scope: !12947)
!12970 = !DILocation(line: 713, column: 1, scope: !12947)
!12971 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !11470, file: !11470, line: 96, type: !12316, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12972)
!12972 = !{!12973}
!12973 = !DILocalVariable(name: "thread", arg: 1, scope: !12971, file: !11470, line: 96, type: !2003)
!12974 = !DILocation(line: 0, scope: !12971)
!12975 = !DILocation(line: 98, column: 23, scope: !12971)
!12976 = !DILocation(line: 98, column: 36, scope: !12971)
!12977 = !DILocation(line: 98, column: 57, scope: !12971)
!12978 = !DILocation(line: 98, column: 2, scope: !12971)
!12979 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !11470, file: !11470, line: 148, type: !12156, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12980)
!12980 = !{!12981}
!12981 = !DILocalVariable(name: "thread", arg: 1, scope: !12979, file: !11470, line: 148, type: !2003)
!12982 = !DILocation(line: 0, scope: !12979)
!12983 = !DILocation(line: 150, column: 15, scope: !12979)
!12984 = !DILocation(line: 150, column: 28, scope: !12979)
!12985 = !DILocation(line: 153, column: 1, scope: !12979)
!12986 = distinct !DISubprogram(name: "z_pend_thread", scope: !2108, file: !2108, line: 770, type: !12987, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12993)
!12987 = !DISubroutineType(types: !12988)
!12988 = !{null, !2003, !2034, !12989}
!12989 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1359, line: 67, baseType: !12990)
!12990 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1359, line: 65, size: 64, elements: !12991)
!12991 = !{!12992}
!12992 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12990, file: !1359, line: 66, baseType: !1358, size: 64)
!12993 = !{!12994, !12995, !12996, !12997, !12999}
!12994 = !DILocalVariable(name: "thread", arg: 1, scope: !12986, file: !2108, line: 770, type: !2003)
!12995 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12986, file: !2108, line: 770, type: !2034)
!12996 = !DILocalVariable(name: "timeout", arg: 3, scope: !12986, file: !2108, line: 771, type: !12989)
!12997 = !DILocalVariable(name: "__i", scope: !12998, file: !2108, line: 774, type: !12190)
!12998 = distinct !DILexicalBlock(scope: !12986, file: !2108, line: 774, column: 2)
!12999 = !DILocalVariable(name: "__key", scope: !12998, file: !2108, line: 774, type: !12190)
!13000 = !DILocation(line: 0, scope: !12986)
!13001 = !DILocation(line: 0, scope: !12998)
!13002 = !DILocation(line: 0, scope: !12198, inlinedAt: !13003)
!13003 = distinct !DILocation(line: 774, column: 2, scope: !12998)
!13004 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !13005)
!13005 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !13003)
!13006 = !DILocation(line: 0, scope: !12207, inlinedAt: !13005)
!13007 = !DILocation(line: 775, column: 3, scope: !13008)
!13008 = distinct !DILexicalBlock(scope: !13009, file: !2108, line: 774, column: 26)
!13009 = distinct !DILexicalBlock(scope: !12998, file: !2108, line: 774, column: 2)
!13010 = !DILocation(line: 0, scope: !12225, inlinedAt: !13011)
!13011 = distinct !DILocation(line: 774, column: 2, scope: !13009)
!13012 = !DILocation(line: 0, scope: !12233, inlinedAt: !13013)
!13013 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !13011)
!13014 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !13013)
!13015 = !DILocation(line: 777, column: 1, scope: !12986)
!13016 = distinct !DISubprogram(name: "pend_locked", scope: !2108, file: !2108, line: 760, type: !12987, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13017)
!13017 = !{!13018, !13019, !13020}
!13018 = !DILocalVariable(name: "thread", arg: 1, scope: !13016, file: !2108, line: 760, type: !2003)
!13019 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13016, file: !2108, line: 760, type: !2034)
!13020 = !DILocalVariable(name: "timeout", arg: 3, scope: !13016, file: !2108, line: 761, type: !12989)
!13021 = !DILocation(line: 0, scope: !13016)
!13022 = !DILocation(line: 766, column: 2, scope: !13016)
!13023 = !DILocation(line: 767, column: 2, scope: !13016)
!13024 = !DILocation(line: 768, column: 1, scope: !13016)
!13025 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2108, file: !2108, line: 740, type: !13026, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13028)
!13026 = !DISubroutineType(types: !13027)
!13027 = !{null, !2003, !2034}
!13028 = !{!13029, !13030}
!13029 = !DILocalVariable(name: "thread", arg: 1, scope: !13025, file: !2108, line: 740, type: !2003)
!13030 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13025, file: !2108, line: 740, type: !2034)
!13031 = !DILocation(line: 0, scope: !13025)
!13032 = !DILocation(line: 742, column: 2, scope: !13025)
!13033 = !DILocation(line: 743, column: 2, scope: !13025)
!13034 = !DILocation(line: 747, column: 13, scope: !13035)
!13035 = distinct !DILexicalBlock(scope: !13025, file: !2108, line: 747, column: 6)
!13036 = !DILocation(line: 747, column: 6, scope: !13025)
!13037 = !DILocation(line: 748, column: 16, scope: !13038)
!13038 = distinct !DILexicalBlock(scope: !13035, file: !2108, line: 747, column: 22)
!13039 = !DILocation(line: 748, column: 26, scope: !13038)
!13040 = !DILocation(line: 749, column: 28, scope: !13038)
!13041 = !DILocation(line: 0, scope: !12398, inlinedAt: !13042)
!13042 = distinct !DILocation(line: 749, column: 3, scope: !13038)
!13043 = !DILocation(line: 188, column: 2, scope: !12408, inlinedAt: !13042)
!13044 = !DILocation(line: 188, column: 2, scope: !12410, inlinedAt: !13042)
!13045 = !DILocation(line: 0, scope: !12408, inlinedAt: !13042)
!13046 = !DILocation(line: 189, column: 7, scope: !12413, inlinedAt: !13042)
!13047 = !DILocation(line: 189, column: 35, scope: !12413, inlinedAt: !13042)
!13048 = !DILocation(line: 189, column: 7, scope: !12414, inlinedAt: !13042)
!13049 = !DILocation(line: 191, column: 21, scope: !12418, inlinedAt: !13042)
!13050 = !DILocation(line: 190, column: 4, scope: !12418, inlinedAt: !13042)
!13051 = !DILocation(line: 192, column: 4, scope: !12418, inlinedAt: !13042)
!13052 = distinct !{!13052, !13043, !13053}
!13053 = !DILocation(line: 194, column: 2, scope: !12408, inlinedAt: !13042)
!13054 = !DILocation(line: 196, column: 37, scope: !12398, inlinedAt: !13042)
!13055 = !DILocation(line: 196, column: 2, scope: !12398, inlinedAt: !13042)
!13056 = !DILocation(line: 197, column: 1, scope: !12398, inlinedAt: !13042)
!13057 = !DILocation(line: 751, column: 1, scope: !13025)
!13058 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2108, file: !2108, line: 753, type: !13059, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13061)
!13059 = !DISubroutineType(types: !13060)
!13060 = !{null, !2003, !12989}
!13061 = !{!13062, !13063}
!13062 = !DILocalVariable(name: "thread", arg: 1, scope: !13058, file: !2108, line: 753, type: !2003)
!13063 = !DILocalVariable(name: "timeout", arg: 2, scope: !13058, file: !2108, line: 753, type: !12989)
!13064 = !DILocation(line: 0, scope: !13058)
!13065 = !DILocation(line: 755, column: 7, scope: !13066)
!13066 = distinct !DILexicalBlock(scope: !13058, file: !2108, line: 755, column: 6)
!13067 = !DILocation(line: 755, column: 6, scope: !13058)
!13068 = !DILocation(line: 756, column: 3, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13066, file: !2108, line: 755, column: 41)
!13070 = !DILocation(line: 757, column: 2, scope: !13069)
!13071 = !DILocation(line: 758, column: 1, scope: !13058)
!13072 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11864, file: !11864, line: 47, type: !13059, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13073)
!13073 = !{!13074, !13075}
!13074 = !DILocalVariable(name: "thread", arg: 1, scope: !13072, file: !11864, line: 47, type: !2003)
!13075 = !DILocalVariable(name: "ticks", arg: 2, scope: !13072, file: !11864, line: 47, type: !12989)
!13076 = !DILocation(line: 0, scope: !13072)
!13077 = !DILocation(line: 49, column: 30, scope: !13072)
!13078 = !DILocation(line: 49, column: 2, scope: !13072)
!13079 = !DILocation(line: 50, column: 1, scope: !13072)
!13080 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2108, file: !2108, line: 795, type: !2060, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13081)
!13081 = !{!13082, !13083, !13084, !13086, !13087}
!13082 = !DILocalVariable(name: "timeout", arg: 1, scope: !13080, file: !2108, line: 795, type: !2062)
!13083 = !DILocalVariable(name: "thread", scope: !13080, file: !2108, line: 797, type: !2003)
!13084 = !DILocalVariable(name: "__i", scope: !13085, file: !2108, line: 800, type: !12190)
!13085 = distinct !DILexicalBlock(scope: !13080, file: !2108, line: 800, column: 2)
!13086 = !DILocalVariable(name: "__key", scope: !13085, file: !2108, line: 800, type: !12190)
!13087 = !DILocalVariable(name: "killed", scope: !13088, file: !2108, line: 801, type: !157)
!13088 = distinct !DILexicalBlock(scope: !13089, file: !2108, line: 800, column: 26)
!13089 = distinct !DILexicalBlock(scope: !13085, file: !2108, line: 800, column: 2)
!13090 = !DILocation(line: 0, scope: !13080)
!13091 = !DILocation(line: 797, column: 28, scope: !13080)
!13092 = !DILocation(line: 0, scope: !13085)
!13093 = !DILocation(line: 0, scope: !12198, inlinedAt: !13094)
!13094 = distinct !DILocation(line: 800, column: 2, scope: !13085)
!13095 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !13096)
!13096 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !13094)
!13097 = !DILocation(line: 0, scope: !12207, inlinedAt: !13096)
!13098 = !DILocation(line: 801, column: 27, scope: !13088)
!13099 = !DILocation(line: 801, column: 32, scope: !13088)
!13100 = !DILocation(line: 801, column: 61, scope: !13088)
!13101 = !DILocation(line: 0, scope: !13088)
!13102 = !DILocation(line: 804, column: 7, scope: !13088)
!13103 = !DILocation(line: 805, column: 21, scope: !13104)
!13104 = distinct !DILexicalBlock(scope: !13105, file: !2108, line: 805, column: 8)
!13105 = distinct !DILexicalBlock(scope: !13106, file: !2108, line: 804, column: 16)
!13106 = distinct !DILexicalBlock(scope: !13088, file: !2108, line: 804, column: 7)
!13107 = !DILocation(line: 805, column: 31, scope: !13104)
!13108 = !DILocation(line: 805, column: 8, scope: !13105)
!13109 = !DILocation(line: 806, column: 5, scope: !13110)
!13110 = distinct !DILexicalBlock(scope: !13104, file: !2108, line: 805, column: 40)
!13111 = !DILocation(line: 807, column: 4, scope: !13110)
!13112 = !DILocation(line: 808, column: 4, scope: !13105)
!13113 = !DILocation(line: 809, column: 4, scope: !13105)
!13114 = !DILocation(line: 810, column: 4, scope: !13105)
!13115 = !DILocation(line: 811, column: 3, scope: !13105)
!13116 = !DILocation(line: 0, scope: !12225, inlinedAt: !13117)
!13117 = distinct !DILocation(line: 800, column: 2, scope: !13089)
!13118 = !DILocation(line: 0, scope: !12233, inlinedAt: !13119)
!13119 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !13117)
!13120 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !13119)
!13121 = !DILocation(line: 813, column: 1, scope: !13080)
!13122 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2108, file: !2108, line: 779, type: !12156, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13123)
!13123 = !{!13124}
!13124 = !DILocalVariable(name: "thread", arg: 1, scope: !13122, file: !2108, line: 779, type: !2003)
!13125 = !DILocation(line: 0, scope: !13122)
!13126 = !DILocation(line: 781, column: 2, scope: !13122)
!13127 = !DILocation(line: 782, column: 2, scope: !13122)
!13128 = !DILocation(line: 783, column: 15, scope: !13122)
!13129 = !DILocation(line: 783, column: 25, scope: !13122)
!13130 = !DILocation(line: 784, column: 1, scope: !13122)
!13131 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !11470, file: !11470, line: 165, type: !12156, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13132)
!13132 = !{!13133}
!13133 = !DILocalVariable(name: "thread", arg: 1, scope: !13131, file: !11470, line: 165, type: !2003)
!13134 = !DILocation(line: 0, scope: !13131)
!13135 = !DILocation(line: 167, column: 15, scope: !13131)
!13136 = !DILocation(line: 167, column: 28, scope: !13131)
!13137 = !DILocation(line: 168, column: 1, scope: !13131)
!13138 = distinct !DISubprogram(name: "unready_thread", scope: !2108, file: !2108, line: 731, type: !12156, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13139)
!13139 = !{!13140}
!13140 = !DILocalVariable(name: "thread", arg: 1, scope: !13138, file: !2108, line: 731, type: !2003)
!13141 = !DILocation(line: 0, scope: !13138)
!13142 = !DILocation(line: 733, column: 6, scope: !13143)
!13143 = distinct !DILexicalBlock(scope: !13138, file: !2108, line: 733, column: 6)
!13144 = !DILocation(line: 733, column: 6, scope: !13138)
!13145 = !DILocation(line: 0, scope: !12367, inlinedAt: !13146)
!13146 = distinct !DILocation(line: 734, column: 3, scope: !13147)
!13147 = distinct !DILexicalBlock(scope: !13143, file: !2108, line: 733, column: 34)
!13148 = !DILocation(line: 266, column: 15, scope: !12367, inlinedAt: !13146)
!13149 = !DILocation(line: 266, column: 28, scope: !12367, inlinedAt: !13146)
!13150 = !DILocation(line: 0, scope: !12375, inlinedAt: !13151)
!13151 = distinct !DILocation(line: 268, column: 3, scope: !12379, inlinedAt: !13146)
!13152 = !DILocation(line: 234, column: 2, scope: !12375, inlinedAt: !13151)
!13153 = !DILocation(line: 735, column: 2, scope: !13147)
!13154 = !DILocation(line: 736, column: 25, scope: !13138)
!13155 = !DILocation(line: 736, column: 22, scope: !13138)
!13156 = !DILocation(line: 736, column: 2, scope: !13138)
!13157 = !DILocation(line: 737, column: 1, scope: !13138)
!13158 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !11470, file: !11470, line: 160, type: !12156, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13159)
!13159 = !{!13160}
!13160 = !DILocalVariable(name: "thread", arg: 1, scope: !13158, file: !11470, line: 160, type: !2003)
!13161 = !DILocation(line: 0, scope: !13158)
!13162 = !DILocation(line: 162, column: 15, scope: !13158)
!13163 = !DILocation(line: 162, column: 28, scope: !13158)
!13164 = !DILocation(line: 163, column: 1, scope: !13158)
!13165 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2108, file: !2108, line: 786, type: !12156, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13166)
!13166 = !{!13167, !13168, !13170}
!13167 = !DILocalVariable(name: "thread", arg: 1, scope: !13165, file: !2108, line: 786, type: !2003)
!13168 = !DILocalVariable(name: "__i", scope: !13169, file: !2108, line: 788, type: !12190)
!13169 = distinct !DILexicalBlock(scope: !13165, file: !2108, line: 788, column: 2)
!13170 = !DILocalVariable(name: "__key", scope: !13169, file: !2108, line: 788, type: !12190)
!13171 = !DILocation(line: 0, scope: !13165)
!13172 = !DILocation(line: 0, scope: !13169)
!13173 = !DILocation(line: 0, scope: !12198, inlinedAt: !13174)
!13174 = distinct !DILocation(line: 788, column: 2, scope: !13169)
!13175 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !13176)
!13176 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !13174)
!13177 = !DILocation(line: 0, scope: !12207, inlinedAt: !13176)
!13178 = !DILocation(line: 789, column: 3, scope: !13179)
!13179 = distinct !DILexicalBlock(scope: !13180, file: !2108, line: 788, column: 26)
!13180 = distinct !DILexicalBlock(scope: !13169, file: !2108, line: 788, column: 2)
!13181 = !DILocation(line: 0, scope: !12225, inlinedAt: !13182)
!13182 = distinct !DILocation(line: 788, column: 2, scope: !13180)
!13183 = !DILocation(line: 0, scope: !12233, inlinedAt: !13184)
!13184 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !13182)
!13185 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !13184)
!13186 = !DILocation(line: 791, column: 1, scope: !13165)
!13187 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2108, file: !2108, line: 816, type: !13188, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13190)
!13188 = !DISubroutineType(types: !13189)
!13189 = !{!103, !121, !2034, !12989}
!13190 = !{!13191, !13192, !13193, !13194, !13195, !13197}
!13191 = !DILocalVariable(name: "key", arg: 1, scope: !13187, file: !2108, line: 816, type: !121)
!13192 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13187, file: !2108, line: 816, type: !2034)
!13193 = !DILocalVariable(name: "timeout", arg: 3, scope: !13187, file: !2108, line: 816, type: !12989)
!13194 = !DILocalVariable(name: "ret", scope: !13187, file: !2108, line: 828, type: !103)
!13195 = !DILocalVariable(name: "__i", scope: !13196, file: !2108, line: 829, type: !12190)
!13196 = distinct !DILexicalBlock(scope: !13187, file: !2108, line: 829, column: 2)
!13197 = !DILocalVariable(name: "__key", scope: !13196, file: !2108, line: 829, type: !12190)
!13198 = !DILocation(line: 0, scope: !13187)
!13199 = !DILocation(line: 823, column: 14, scope: !13187)
!13200 = !DILocation(line: 823, column: 2, scope: !13187)
!13201 = !DILocation(line: 826, column: 20, scope: !13187)
!13202 = !DILocation(line: 826, column: 18, scope: !13187)
!13203 = !DILocation(line: 828, column: 12, scope: !13187)
!13204 = !DILocation(line: 0, scope: !13196)
!13205 = !DILocation(line: 0, scope: !12198, inlinedAt: !13206)
!13206 = distinct !DILocation(line: 829, column: 2, scope: !13196)
!13207 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !13208)
!13208 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !13206)
!13209 = !DILocation(line: 0, scope: !12207, inlinedAt: !13208)
!13210 = !DILocation(line: 830, column: 7, scope: !13211)
!13211 = distinct !DILexicalBlock(scope: !13212, file: !2108, line: 830, column: 7)
!13212 = distinct !DILexicalBlock(scope: !13213, file: !2108, line: 829, column: 26)
!13213 = distinct !DILexicalBlock(scope: !13196, file: !2108, line: 829, column: 2)
!13214 = !DILocation(line: 830, column: 26, scope: !13211)
!13215 = !DILocation(line: 830, column: 23, scope: !13211)
!13216 = !DILocation(line: 830, column: 7, scope: !13212)
!13217 = !DILocation(line: 831, column: 20, scope: !13218)
!13218 = distinct !DILexicalBlock(scope: !13211, file: !2108, line: 830, column: 36)
!13219 = !DILocation(line: 832, column: 3, scope: !13218)
!13220 = !DILocation(line: 0, scope: !12225, inlinedAt: !13221)
!13221 = distinct !DILocation(line: 829, column: 2, scope: !13213)
!13222 = !DILocation(line: 0, scope: !12233, inlinedAt: !13223)
!13223 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !13221)
!13224 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !13223)
!13225 = !DILocation(line: 834, column: 2, scope: !13187)
!13226 = distinct !DISubprogram(name: "z_pend_curr", scope: !2108, file: !2108, line: 840, type: !13227, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13229)
!13227 = !DISubroutineType(types: !13228)
!13228 = !{!103, !12201, !12190, !2034, !12989}
!13229 = !{!13230, !13231, !13232, !13233}
!13230 = !DILocalVariable(name: "lock", arg: 1, scope: !13226, file: !2108, line: 840, type: !12201)
!13231 = !DILocalVariable(name: "key", arg: 2, scope: !13226, file: !2108, line: 840, type: !12190)
!13232 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13226, file: !2108, line: 841, type: !2034)
!13233 = !DILocalVariable(name: "timeout", arg: 4, scope: !13226, file: !2108, line: 841, type: !12989)
!13234 = !DILocation(line: 0, scope: !13226)
!13235 = !DILocation(line: 844, column: 20, scope: !13226)
!13236 = !DILocation(line: 844, column: 18, scope: !13226)
!13237 = !DILocation(line: 0, scope: !12198, inlinedAt: !13238)
!13238 = distinct !DILocation(line: 856, column: 9, scope: !13226)
!13239 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !13240)
!13240 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !13238)
!13241 = !DILocation(line: 0, scope: !12207, inlinedAt: !13240)
!13242 = !DILocation(line: 857, column: 14, scope: !13226)
!13243 = !DILocation(line: 857, column: 2, scope: !13226)
!13244 = !DILocation(line: 0, scope: !12809, inlinedAt: !13245)
!13245 = distinct !DILocation(line: 859, column: 9, scope: !13226)
!13246 = !DILocation(line: 196, column: 9, scope: !12809, inlinedAt: !13245)
!13247 = !DILocation(line: 859, column: 2, scope: !13226)
!13248 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2108, file: !2108, line: 862, type: !13249, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13251)
!13249 = !DISubroutineType(types: !13250)
!13250 = !{!2003, !2034}
!13251 = !{!13252, !13253, !13254, !13256}
!13252 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13248, file: !2108, line: 862, type: !2034)
!13253 = !DILocalVariable(name: "thread", scope: !13248, file: !2108, line: 864, type: !2003)
!13254 = !DILocalVariable(name: "__i", scope: !13255, file: !2108, line: 866, type: !12190)
!13255 = distinct !DILexicalBlock(scope: !13248, file: !2108, line: 866, column: 2)
!13256 = !DILocalVariable(name: "__key", scope: !13255, file: !2108, line: 866, type: !12190)
!13257 = !DILocation(line: 0, scope: !13248)
!13258 = !DILocation(line: 0, scope: !13255)
!13259 = !DILocation(line: 0, scope: !12198, inlinedAt: !13260)
!13260 = distinct !DILocation(line: 866, column: 2, scope: !13255)
!13261 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !13262)
!13262 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !13260)
!13263 = !DILocation(line: 0, scope: !12207, inlinedAt: !13262)
!13264 = !DILocation(line: 867, column: 12, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13266, file: !2108, line: 866, column: 26)
!13266 = distinct !DILexicalBlock(scope: !13255, file: !2108, line: 866, column: 2)
!13267 = !DILocation(line: 869, column: 14, scope: !13268)
!13268 = distinct !DILexicalBlock(scope: !13265, file: !2108, line: 869, column: 7)
!13269 = !DILocation(line: 869, column: 7, scope: !13265)
!13270 = !DILocation(line: 870, column: 4, scope: !13271)
!13271 = distinct !DILexicalBlock(scope: !13268, file: !2108, line: 869, column: 23)
!13272 = !DILocation(line: 871, column: 3, scope: !13271)
!13273 = !DILocation(line: 0, scope: !12225, inlinedAt: !13274)
!13274 = distinct !DILocation(line: 866, column: 2, scope: !13266)
!13275 = !DILocation(line: 0, scope: !12233, inlinedAt: !13276)
!13276 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !13274)
!13277 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !13276)
!13278 = !DILocation(line: 874, column: 2, scope: !13248)
!13279 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2108, file: !2108, line: 877, type: !13249, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13280)
!13280 = !{!13281, !13282, !13283, !13285}
!13281 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13279, file: !2108, line: 877, type: !2034)
!13282 = !DILocalVariable(name: "thread", scope: !13279, file: !2108, line: 879, type: !2003)
!13283 = !DILocalVariable(name: "__i", scope: !13284, file: !2108, line: 881, type: !12190)
!13284 = distinct !DILexicalBlock(scope: !13279, file: !2108, line: 881, column: 2)
!13285 = !DILocalVariable(name: "__key", scope: !13284, file: !2108, line: 881, type: !12190)
!13286 = !DILocation(line: 0, scope: !13279)
!13287 = !DILocation(line: 0, scope: !13284)
!13288 = !DILocation(line: 0, scope: !12198, inlinedAt: !13289)
!13289 = distinct !DILocation(line: 881, column: 2, scope: !13284)
!13290 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !13291)
!13291 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !13289)
!13292 = !DILocation(line: 0, scope: !12207, inlinedAt: !13291)
!13293 = !DILocation(line: 882, column: 12, scope: !13294)
!13294 = distinct !DILexicalBlock(scope: !13295, file: !2108, line: 881, column: 26)
!13295 = distinct !DILexicalBlock(scope: !13284, file: !2108, line: 881, column: 2)
!13296 = !DILocation(line: 884, column: 14, scope: !13297)
!13297 = distinct !DILexicalBlock(scope: !13294, file: !2108, line: 884, column: 7)
!13298 = !DILocation(line: 884, column: 7, scope: !13294)
!13299 = !DILocation(line: 885, column: 4, scope: !13300)
!13300 = distinct !DILexicalBlock(scope: !13297, file: !2108, line: 884, column: 23)
!13301 = !DILocation(line: 886, column: 10, scope: !13300)
!13302 = !DILocation(line: 887, column: 3, scope: !13300)
!13303 = !DILocation(line: 0, scope: !12225, inlinedAt: !13304)
!13304 = distinct !DILocation(line: 881, column: 2, scope: !13295)
!13305 = !DILocation(line: 0, scope: !12233, inlinedAt: !13306)
!13306 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !13304)
!13307 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !13306)
!13308 = !DILocation(line: 890, column: 2, scope: !13279)
!13309 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2108, file: !2108, line: 893, type: !12156, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13310)
!13310 = !{!13311}
!13311 = !DILocalVariable(name: "thread", arg: 1, scope: !13309, file: !2108, line: 893, type: !2003)
!13312 = !DILocation(line: 0, scope: !13309)
!13313 = !DILocation(line: 0, scope: !13165, inlinedAt: !13314)
!13314 = distinct !DILocation(line: 895, column: 2, scope: !13309)
!13315 = !DILocation(line: 0, scope: !13169, inlinedAt: !13314)
!13316 = !DILocation(line: 0, scope: !12198, inlinedAt: !13317)
!13317 = distinct !DILocation(line: 788, column: 2, scope: !13169, inlinedAt: !13314)
!13318 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !13319)
!13319 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !13317)
!13320 = !DILocation(line: 0, scope: !12207, inlinedAt: !13319)
!13321 = !DILocation(line: 789, column: 3, scope: !13179, inlinedAt: !13314)
!13322 = !DILocation(line: 0, scope: !12225, inlinedAt: !13323)
!13323 = distinct !DILocation(line: 788, column: 2, scope: !13180, inlinedAt: !13314)
!13324 = !DILocation(line: 0, scope: !12233, inlinedAt: !13325)
!13325 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !13323)
!13326 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !13325)
!13327 = !DILocation(line: 896, column: 8, scope: !13309)
!13328 = !DILocation(line: 897, column: 1, scope: !13309)
!13329 = distinct !DISubprogram(name: "z_set_prio", scope: !2108, file: !2108, line: 902, type: !12518, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13330)
!13330 = !{!13331, !13332, !13333, !13334, !13336}
!13331 = !DILocalVariable(name: "thread", arg: 1, scope: !13329, file: !2108, line: 902, type: !2003)
!13332 = !DILocalVariable(name: "prio", arg: 2, scope: !13329, file: !2108, line: 902, type: !103)
!13333 = !DILocalVariable(name: "need_sched", scope: !13329, file: !2108, line: 904, type: !157)
!13334 = !DILocalVariable(name: "__i", scope: !13335, file: !2108, line: 906, type: !12190)
!13335 = distinct !DILexicalBlock(scope: !13329, file: !2108, line: 906, column: 2)
!13336 = !DILocalVariable(name: "__key", scope: !13335, file: !2108, line: 906, type: !12190)
!13337 = !DILocation(line: 0, scope: !13329)
!13338 = !DILocation(line: 0, scope: !13335)
!13339 = !DILocation(line: 0, scope: !12198, inlinedAt: !13340)
!13340 = distinct !DILocation(line: 906, column: 2, scope: !13335)
!13341 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !13342)
!13342 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !13340)
!13343 = !DILocation(line: 0, scope: !12207, inlinedAt: !13342)
!13344 = !DILocation(line: 907, column: 16, scope: !13345)
!13345 = distinct !DILexicalBlock(scope: !13346, file: !2108, line: 906, column: 26)
!13346 = distinct !DILexicalBlock(scope: !13335, file: !2108, line: 906, column: 2)
!13347 = !DILocation(line: 909, column: 7, scope: !13345)
!13348 = !DILocation(line: 0, scope: !12367, inlinedAt: !13349)
!13349 = distinct !DILocation(line: 912, column: 5, scope: !13350)
!13350 = distinct !DILexicalBlock(scope: !13351, file: !2108, line: 911, column: 63)
!13351 = distinct !DILexicalBlock(scope: !13352, file: !2108, line: 911, column: 8)
!13352 = distinct !DILexicalBlock(scope: !13353, file: !2108, line: 909, column: 19)
!13353 = distinct !DILexicalBlock(scope: !13345, file: !2108, line: 909, column: 7)
!13354 = !DILocation(line: 266, column: 28, scope: !12367, inlinedAt: !13349)
!13355 = !DILocation(line: 0, scope: !12375, inlinedAt: !13356)
!13356 = distinct !DILocation(line: 268, column: 3, scope: !12379, inlinedAt: !13349)
!13357 = !DILocation(line: 234, column: 2, scope: !12375, inlinedAt: !13356)
!13358 = !DILocation(line: 913, column: 23, scope: !13350)
!13359 = !DILocation(line: 0, scope: !12384, inlinedAt: !13360)
!13360 = distinct !DILocation(line: 914, column: 5, scope: !13350)
!13361 = !DILocation(line: 252, column: 28, scope: !12384, inlinedAt: !13360)
!13362 = !DILocation(line: 0, scope: !12391, inlinedAt: !13363)
!13363 = distinct !DILocation(line: 254, column: 3, scope: !12395, inlinedAt: !13360)
!13364 = !DILocation(line: 0, scope: !12398, inlinedAt: !13365)
!13365 = distinct !DILocation(line: 229, column: 2, scope: !12391, inlinedAt: !13363)
!13366 = !DILocation(line: 188, column: 2, scope: !12408, inlinedAt: !13365)
!13367 = !DILocation(line: 188, column: 2, scope: !12410, inlinedAt: !13365)
!13368 = !DILocation(line: 0, scope: !12408, inlinedAt: !13365)
!13369 = !DILocation(line: 189, column: 7, scope: !12413, inlinedAt: !13365)
!13370 = !DILocation(line: 189, column: 35, scope: !12413, inlinedAt: !13365)
!13371 = !DILocation(line: 189, column: 7, scope: !12414, inlinedAt: !13365)
!13372 = !DILocation(line: 190, column: 4, scope: !12418, inlinedAt: !13365)
!13373 = !DILocation(line: 192, column: 4, scope: !12418, inlinedAt: !13365)
!13374 = distinct !{!13374, !13366, !13375}
!13375 = !DILocation(line: 194, column: 2, scope: !12408, inlinedAt: !13365)
!13376 = !DILocation(line: 196, column: 2, scope: !12398, inlinedAt: !13365)
!13377 = !DILocation(line: 197, column: 1, scope: !12398, inlinedAt: !13365)
!13378 = !DILocation(line: 918, column: 4, scope: !13352)
!13379 = !DILocation(line: 919, column: 3, scope: !13352)
!13380 = !DILocation(line: 920, column: 22, scope: !13381)
!13381 = distinct !DILexicalBlock(scope: !13353, file: !2108, line: 919, column: 10)
!13382 = !DILocation(line: 0, scope: !12225, inlinedAt: !13383)
!13383 = distinct !DILocation(line: 906, column: 2, scope: !13346)
!13384 = !DILocation(line: 0, scope: !12233, inlinedAt: !13385)
!13385 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !13383)
!13386 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !13385)
!13387 = !DILocation(line: 926, column: 2, scope: !13329)
!13388 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2108, file: !2108, line: 929, type: !13389, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13391)
!13389 = !DISubroutineType(types: !13390)
!13390 = !{null, !2003, !103}
!13391 = !{!13392, !13393, !13394}
!13392 = !DILocalVariable(name: "thread", arg: 1, scope: !13388, file: !2108, line: 929, type: !2003)
!13393 = !DILocalVariable(name: "prio", arg: 2, scope: !13388, file: !2108, line: 929, type: !103)
!13394 = !DILocalVariable(name: "need_sched", scope: !13388, file: !2108, line: 931, type: !157)
!13395 = !DILocation(line: 0, scope: !13388)
!13396 = !DILocation(line: 931, column: 20, scope: !13388)
!13397 = !DILocation(line: 935, column: 17, scope: !13398)
!13398 = distinct !DILexicalBlock(scope: !13388, file: !2108, line: 935, column: 6)
!13399 = !DILocation(line: 935, column: 20, scope: !13398)
!13400 = !DILocation(line: 935, column: 35, scope: !13398)
!13401 = !DILocation(line: 935, column: 48, scope: !13398)
!13402 = !DILocation(line: 935, column: 6, scope: !13388)
!13403 = !DILocation(line: 936, column: 3, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13398, file: !2108, line: 935, column: 55)
!13405 = !DILocation(line: 937, column: 2, scope: !13404)
!13406 = !DILocation(line: 938, column: 1, scope: !13388)
!13407 = distinct !DISubprogram(name: "k_sched_lock", scope: !2108, file: !2108, line: 987, type: !2904, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13408)
!13408 = !{!13409, !13411}
!13409 = !DILocalVariable(name: "__i", scope: !13410, file: !2108, line: 989, type: !12190)
!13410 = distinct !DILexicalBlock(scope: !13407, file: !2108, line: 989, column: 2)
!13411 = !DILocalVariable(name: "__key", scope: !13410, file: !2108, line: 989, type: !12190)
!13412 = !DILocation(line: 0, scope: !13410)
!13413 = !DILocation(line: 0, scope: !12198, inlinedAt: !13414)
!13414 = distinct !DILocation(line: 989, column: 2, scope: !13410)
!13415 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !13416)
!13416 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !13414)
!13417 = !DILocation(line: 0, scope: !12207, inlinedAt: !13416)
!13418 = !DILocation(line: 992, column: 3, scope: !13419)
!13419 = distinct !DILexicalBlock(scope: !13420, file: !2108, line: 989, column: 26)
!13420 = distinct !DILexicalBlock(scope: !13410, file: !2108, line: 989, column: 2)
!13421 = !DILocation(line: 0, scope: !12225, inlinedAt: !13422)
!13422 = distinct !DILocation(line: 989, column: 2, scope: !13420)
!13423 = !DILocation(line: 0, scope: !12233, inlinedAt: !13424)
!13424 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !13422)
!13425 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !13424)
!13426 = !DILocation(line: 994, column: 1, scope: !13407)
!13427 = distinct !DISubprogram(name: "z_sched_lock", scope: !11470, file: !11470, line: 251, type: !2904, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!13428 = !DILocation(line: 256, column: 4, scope: !13427)
!13429 = !DILocation(line: 256, column: 19, scope: !13427)
!13430 = !DILocation(line: 256, column: 2, scope: !13427)
!13431 = !DILocation(line: 258, column: 2, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13427, file: !11470, line: 258, column: 2)
!13433 = !{i64 2154189302}
!13434 = !DILocation(line: 259, column: 1, scope: !13427)
!13435 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2108, file: !2108, line: 996, type: !2904, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13436)
!13436 = !{!13437, !13439}
!13437 = !DILocalVariable(name: "__i", scope: !13438, file: !2108, line: 998, type: !12190)
!13438 = distinct !DILexicalBlock(scope: !13435, file: !2108, line: 998, column: 2)
!13439 = !DILocalVariable(name: "__key", scope: !13438, file: !2108, line: 998, type: !12190)
!13440 = !DILocation(line: 0, scope: !13438)
!13441 = !DILocation(line: 0, scope: !12198, inlinedAt: !13442)
!13442 = distinct !DILocation(line: 998, column: 2, scope: !13438)
!13443 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !13444)
!13444 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !13442)
!13445 = !DILocation(line: 0, scope: !12207, inlinedAt: !13444)
!13446 = !DILocation(line: 1002, column: 5, scope: !13447)
!13447 = distinct !DILexicalBlock(scope: !13448, file: !2108, line: 998, column: 26)
!13448 = distinct !DILexicalBlock(scope: !13438, file: !2108, line: 998, column: 2)
!13449 = !DILocation(line: 1002, column: 20, scope: !13447)
!13450 = !DILocation(line: 1002, column: 3, scope: !13447)
!13451 = !DILocation(line: 1003, column: 3, scope: !13447)
!13452 = !DILocation(line: 0, scope: !12225, inlinedAt: !13453)
!13453 = distinct !DILocation(line: 998, column: 2, scope: !13448)
!13454 = !DILocation(line: 0, scope: !12233, inlinedAt: !13455)
!13455 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !13453)
!13456 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !13455)
!13457 = !DILocation(line: 1011, column: 2, scope: !13435)
!13458 = !DILocation(line: 1012, column: 1, scope: !13435)
!13459 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2108, file: !2108, line: 1014, type: !12506, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!13460 = !DILocation(line: 1028, column: 25, scope: !13459)
!13461 = !DILocation(line: 1028, column: 2, scope: !13459)
!13462 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2108, file: !2108, line: 1155, type: !13463, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13465)
!13463 = !DISubroutineType(types: !13464)
!13464 = !{!157, !2032, !2032}
!13465 = !{!13466, !13467, !13468, !13469, !13470}
!13466 = !DILocalVariable(name: "a", arg: 1, scope: !13462, file: !2108, line: 1155, type: !2032)
!13467 = !DILocalVariable(name: "b", arg: 2, scope: !13462, file: !2108, line: 1155, type: !2032)
!13468 = !DILocalVariable(name: "thread_a", scope: !13462, file: !2108, line: 1157, type: !2003)
!13469 = !DILocalVariable(name: "thread_b", scope: !13462, file: !2108, line: 1157, type: !2003)
!13470 = !DILocalVariable(name: "cmp", scope: !13462, file: !2108, line: 1158, type: !566)
!13471 = !DILocation(line: 0, scope: !13462)
!13472 = !DILocation(line: 1160, column: 13, scope: !13462)
!13473 = !DILocation(line: 1161, column: 13, scope: !13462)
!13474 = !DILocation(line: 1163, column: 8, scope: !13462)
!13475 = !DILocation(line: 1165, column: 10, scope: !13476)
!13476 = distinct !DILexicalBlock(scope: !13462, file: !2108, line: 1165, column: 6)
!13477 = !DILocation(line: 1165, column: 6, scope: !13462)
!13478 = !DILocation(line: 1167, column: 17, scope: !13479)
!13479 = distinct !DILexicalBlock(scope: !13476, file: !2108, line: 1167, column: 13)
!13480 = !DILocation(line: 1167, column: 13, scope: !13476)
!13481 = !DILocation(line: 1170, column: 25, scope: !13482)
!13482 = distinct !DILexicalBlock(scope: !13479, file: !2108, line: 1169, column: 9)
!13483 = !DILocation(line: 1170, column: 52, scope: !13482)
!13484 = !DILocation(line: 1170, column: 35, scope: !13482)
!13485 = !DILocation(line: 1170, column: 3, scope: !13482)
!13486 = !DILocation(line: 0, scope: !13476)
!13487 = !DILocation(line: 1173, column: 1, scope: !13462)
!13488 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2108, file: !2108, line: 1175, type: !13489, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13504)
!13489 = !DISubroutineType(types: !13490)
!13490 = !{null, !13491, !2003}
!13491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13492, size: 32)
!13492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !13493, line: 37, size: 128, elements: !13494)
!13493 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13494 = !{!13495, !13503}
!13495 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !13492, file: !13493, line: 38, baseType: !13496, size: 96)
!13496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !237, line: 83, size: 96, elements: !13497)
!13497 = !{!13498, !13499, !13502}
!13498 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !13496, file: !237, line: 84, baseType: !2032, size: 32)
!13499 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !13496, file: !237, line: 85, baseType: !13500, size: 32, offset: 32)
!13500 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !237, line: 81, baseType: !13501)
!13501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13463, size: 32)
!13502 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !13496, file: !237, line: 86, baseType: !103, size: 32, offset: 64)
!13503 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !13492, file: !13493, line: 39, baseType: !103, size: 32, offset: 96)
!13504 = !{!13505, !13506, !13507, !13508, !13517}
!13505 = !DILocalVariable(name: "pq", arg: 1, scope: !13488, file: !2108, line: 1175, type: !13491)
!13506 = !DILocalVariable(name: "thread", arg: 2, scope: !13488, file: !2108, line: 1175, type: !2003)
!13507 = !DILocalVariable(name: "t", scope: !13488, file: !2108, line: 1177, type: !2003)
!13508 = !DILocalVariable(name: "__f", scope: !13509, file: !2108, line: 1190, type: !13512)
!13509 = distinct !DILexicalBlock(scope: !13510, file: !2108, line: 1190, column: 3)
!13510 = distinct !DILexicalBlock(scope: !13511, file: !2108, line: 1189, column: 27)
!13511 = distinct !DILexicalBlock(scope: !13488, file: !2108, line: 1189, column: 6)
!13512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !237, line: 155, size: 96, elements: !13513)
!13513 = !{!13514, !13515, !13516}
!13514 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !13512, file: !237, line: 156, baseType: !2103, size: 32)
!13515 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !13512, file: !237, line: 157, baseType: !1653, size: 32, offset: 32)
!13516 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !13512, file: !237, line: 158, baseType: !566, size: 32, offset: 64)
!13517 = !DILocalVariable(name: "n", scope: !13518, file: !2108, line: 1190, type: !2032)
!13518 = distinct !DILexicalBlock(scope: !13519, file: !2108, line: 1190, column: 3)
!13519 = distinct !DILexicalBlock(scope: !13509, file: !2108, line: 1190, column: 3)
!13520 = !DILocation(line: 0, scope: !13488)
!13521 = !DILocation(line: 1181, column: 31, scope: !13488)
!13522 = !DILocation(line: 1181, column: 45, scope: !13488)
!13523 = !DILocation(line: 1181, column: 15, scope: !13488)
!13524 = !DILocation(line: 1181, column: 25, scope: !13488)
!13525 = !DILocation(line: 1189, column: 11, scope: !13511)
!13526 = !DILocation(line: 1189, column: 7, scope: !13511)
!13527 = !DILocation(line: 1189, column: 6, scope: !13488)
!13528 = !DILocation(line: 1190, column: 3, scope: !13509)
!13529 = !DILocation(line: 1190, column: 3, scope: !13518)
!13530 = !DILocation(line: 0, scope: !13518)
!13531 = !DILocation(line: 1190, column: 3, scope: !13519)
!13532 = !DILocation(line: 1193, column: 2, scope: !13510)
!13533 = !DILocation(line: 1191, column: 42, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13519, file: !2108, line: 1190, column: 54)
!13535 = !DILocation(line: 1191, column: 12, scope: !13534)
!13536 = !DILocation(line: 1191, column: 22, scope: !13534)
!13537 = distinct !{!13537, !13528, !13538}
!13538 = !DILocation(line: 1192, column: 3, scope: !13509)
!13539 = !DILocation(line: 1195, column: 17, scope: !13488)
!13540 = !DILocation(line: 1195, column: 37, scope: !13488)
!13541 = !DILocation(line: 1195, column: 2, scope: !13488)
!13542 = !DILocation(line: 1196, column: 1, scope: !13488)
!13543 = !DISubprogram(name: "z_rb_foreach_next", scope: !237, file: !237, line: 176, type: !13544, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13544 = !DISubroutineType(types: !13545)
!13545 = !{!2032, !13546, !13547}
!13546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13496, size: 32)
!13547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13512, size: 32)
!13548 = !DISubprogram(name: "rb_insert", scope: !237, file: !237, line: 105, type: !13549, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13549 = !DISubroutineType(types: !13550)
!13550 = !{null, !13546, !2032}
!13551 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2108, file: !2108, line: 1198, type: !13489, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13552)
!13552 = !{!13553, !13554}
!13553 = !DILocalVariable(name: "pq", arg: 1, scope: !13551, file: !2108, line: 1198, type: !13491)
!13554 = !DILocalVariable(name: "thread", arg: 2, scope: !13551, file: !2108, line: 1198, type: !2003)
!13555 = !DILocation(line: 0, scope: !13551)
!13556 = !DILocation(line: 1202, column: 17, scope: !13551)
!13557 = !DILocation(line: 1202, column: 37, scope: !13551)
!13558 = !DILocation(line: 1202, column: 2, scope: !13551)
!13559 = !DILocation(line: 1204, column: 16, scope: !13560)
!13560 = distinct !DILexicalBlock(scope: !13551, file: !2108, line: 1204, column: 6)
!13561 = !DILocation(line: 1204, column: 7, scope: !13560)
!13562 = !DILocation(line: 1204, column: 6, scope: !13551)
!13563 = !DILocation(line: 1205, column: 7, scope: !13564)
!13564 = distinct !DILexicalBlock(scope: !13560, file: !2108, line: 1204, column: 22)
!13565 = !DILocation(line: 1205, column: 22, scope: !13564)
!13566 = !DILocation(line: 1206, column: 2, scope: !13564)
!13567 = !DILocation(line: 1207, column: 1, scope: !13551)
!13568 = !DISubprogram(name: "rb_remove", scope: !237, file: !237, line: 110, type: !13549, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13569 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2108, file: !2108, line: 1209, type: !13570, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13572)
!13570 = !DISubroutineType(types: !13571)
!13571 = !{!2003, !13491}
!13572 = !{!13573, !13574, !13575}
!13573 = !DILocalVariable(name: "pq", arg: 1, scope: !13569, file: !2108, line: 1209, type: !13491)
!13574 = !DILocalVariable(name: "thread", scope: !13569, file: !2108, line: 1211, type: !2003)
!13575 = !DILocalVariable(name: "n", scope: !13569, file: !2108, line: 1212, type: !2032)
!13576 = !DILocation(line: 0, scope: !13569)
!13577 = !DILocation(line: 1212, column: 37, scope: !13569)
!13578 = !DILocation(line: 1212, column: 21, scope: !13569)
!13579 = !DILocation(line: 1217, column: 2, scope: !13569)
!13580 = distinct !DISubprogram(name: "rb_get_min", scope: !237, file: !237, line: 115, type: !13581, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13583)
!13581 = !DISubroutineType(types: !13582)
!13582 = !{!2032, !13546}
!13583 = !{!13584}
!13584 = !DILocalVariable(name: "tree", arg: 1, scope: !13580, file: !237, line: 115, type: !13546)
!13585 = !DILocation(line: 0, scope: !13580)
!13586 = !DILocation(line: 117, column: 9, scope: !13580)
!13587 = !DILocation(line: 117, column: 2, scope: !13580)
!13588 = !DISubprogram(name: "z_rb_get_minmax", scope: !237, file: !237, line: 100, type: !13589, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13589 = !DISubroutineType(types: !13590)
!13590 = !{!2032, !13546, !154}
!13591 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2108, file: !2108, line: 1246, type: !13592, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13602)
!13592 = !DISubroutineType(types: !13593)
!13593 = !{!2003, !13594}
!13594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13595, size: 32)
!13595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !13493, line: 53, size: 2080, elements: !13596)
!13596 = !{!13597, !13601}
!13597 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !13595, file: !13493, line: 54, baseType: !13598, size: 2048)
!13598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2039, size: 2048, elements: !13599)
!13599 = !{!13600}
!13600 = !DISubrange(count: 32)
!13601 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !13595, file: !13493, line: 55, baseType: !32, size: 32, offset: 2048)
!13602 = !{!13603, !13604, !13605, !13606}
!13603 = !DILocalVariable(name: "pq", arg: 1, scope: !13591, file: !2108, line: 1246, type: !13594)
!13604 = !DILocalVariable(name: "thread", scope: !13591, file: !2108, line: 1252, type: !2003)
!13605 = !DILocalVariable(name: "l", scope: !13591, file: !2108, line: 1253, type: !12401)
!13606 = !DILocalVariable(name: "n", scope: !13591, file: !2108, line: 1254, type: !2104)
!13607 = !DILocation(line: 0, scope: !13591)
!13608 = !DILocation(line: 1248, column: 11, scope: !13609)
!13609 = distinct !DILexicalBlock(scope: !13591, file: !2108, line: 1248, column: 6)
!13610 = !DILocation(line: 1248, column: 7, scope: !13609)
!13611 = !DILocation(line: 1248, column: 6, scope: !13591)
!13612 = !DILocation(line: 1253, column: 31, scope: !13591)
!13613 = !DILocation(line: 1253, column: 20, scope: !13591)
!13614 = !DILocation(line: 1254, column: 19, scope: !13591)
!13615 = !DILocation(line: 1260, column: 1, scope: !13591)
!13616 = distinct !DISubprogram(name: "z_unpend_all", scope: !2108, file: !2108, line: 1262, type: !13617, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13619)
!13617 = !DISubroutineType(types: !13618)
!13618 = !{!103, !2034}
!13619 = !{!13620, !13621, !13622}
!13620 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13616, file: !2108, line: 1262, type: !2034)
!13621 = !DILocalVariable(name: "need_sched", scope: !13616, file: !2108, line: 1264, type: !103)
!13622 = !DILocalVariable(name: "thread", scope: !13616, file: !2108, line: 1265, type: !2003)
!13623 = !DILocation(line: 0, scope: !13616)
!13624 = !DILocation(line: 1267, column: 19, scope: !13616)
!13625 = !DILocation(line: 1267, column: 41, scope: !13616)
!13626 = !DILocation(line: 1267, column: 2, scope: !13616)
!13627 = !DILocation(line: 1268, column: 3, scope: !13628)
!13628 = distinct !DILexicalBlock(scope: !13616, file: !2108, line: 1267, column: 50)
!13629 = !DILocation(line: 1269, column: 3, scope: !13628)
!13630 = distinct !{!13630, !13626, !13631}
!13631 = !DILocation(line: 1271, column: 2, scope: !13616)
!13632 = !DILocation(line: 1273, column: 2, scope: !13616)
!13633 = distinct !DISubprogram(name: "z_waitq_head", scope: !11796, file: !11796, line: 52, type: !13249, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13634)
!13634 = !{!13635}
!13635 = !DILocalVariable(name: "w", arg: 1, scope: !13633, file: !11796, line: 52, type: !2034)
!13636 = !DILocation(line: 0, scope: !13633)
!13637 = !DILocation(line: 54, column: 52, scope: !13633)
!13638 = !DILocation(line: 54, column: 28, scope: !13633)
!13639 = !DILocation(line: 54, column: 9, scope: !13633)
!13640 = !DILocation(line: 54, column: 2, scope: !13633)
!13641 = distinct !DISubprogram(name: "init_ready_q", scope: !2108, file: !2108, line: 1276, type: !13642, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13649)
!13642 = !DISubroutineType(types: !13643)
!13643 = !{null, !13644}
!13644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13645, size: 32)
!13645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !247, line: 83, size: 96, elements: !13646)
!13646 = !{!13647, !13648}
!13647 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !13645, file: !247, line: 86, baseType: !2003, size: 32)
!13648 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !13645, file: !247, line: 90, baseType: !2039, size: 64, offset: 32)
!13649 = !{!13650}
!13650 = !DILocalVariable(name: "rq", arg: 1, scope: !13641, file: !2108, line: 1276, type: !13644)
!13651 = !DILocation(line: 0, scope: !13641)
!13652 = !DILocation(line: 1289, column: 22, scope: !13641)
!13653 = !DILocation(line: 1289, column: 2, scope: !13641)
!13654 = !DILocation(line: 1291, column: 1, scope: !13641)
!13655 = distinct !DISubprogram(name: "sys_dlist_init", scope: !221, file: !221, line: 197, type: !13656, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13658)
!13656 = !DISubroutineType(types: !13657)
!13657 = !{null, !12401}
!13658 = !{!13659}
!13659 = !DILocalVariable(name: "list", arg: 1, scope: !13655, file: !221, line: 197, type: !12401)
!13660 = !DILocation(line: 0, scope: !13655)
!13661 = !DILocation(line: 199, column: 8, scope: !13655)
!13662 = !DILocation(line: 199, column: 13, scope: !13655)
!13663 = !DILocation(line: 200, column: 8, scope: !13655)
!13664 = !DILocation(line: 200, column: 13, scope: !13655)
!13665 = !DILocation(line: 201, column: 1, scope: !13655)
!13666 = distinct !DISubprogram(name: "z_sched_init", scope: !2108, file: !2108, line: 1293, type: !2904, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!13667 = !DILocation(line: 1302, column: 2, scope: !13666)
!13668 = !DILocation(line: 1306, column: 2, scope: !13666)
!13669 = !DILocation(line: 1309, column: 1, scope: !13666)
!13670 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2108, file: !2108, line: 1311, type: !13671, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13674)
!13671 = !DISubroutineType(types: !13672)
!13672 = !{!103, !13673}
!13673 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !2003)
!13674 = !{!13675}
!13675 = !DILocalVariable(name: "thread", arg: 1, scope: !13670, file: !2108, line: 1311, type: !13673)
!13676 = !DILocation(line: 0, scope: !13670)
!13677 = !DILocation(line: 1313, column: 22, scope: !13670)
!13678 = !DILocation(line: 1313, column: 9, scope: !13670)
!13679 = !DILocation(line: 1313, column: 2, scope: !13670)
!13680 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2108, file: !2108, line: 1325, type: !13681, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13683)
!13681 = !DISubroutineType(types: !13682)
!13682 = !{null, !13673, !103}
!13683 = !{!13684, !13685, !13686}
!13684 = !DILocalVariable(name: "thread", arg: 1, scope: !13680, file: !2108, line: 1325, type: !13673)
!13685 = !DILocalVariable(name: "prio", arg: 2, scope: !13680, file: !2108, line: 1325, type: !103)
!13686 = !DILocalVariable(name: "th", scope: !13680, file: !2108, line: 1334, type: !2003)
!13687 = !DILocation(line: 0, scope: !13680)
!13688 = !DILocation(line: 1336, column: 2, scope: !13680)
!13689 = !DILocation(line: 1337, column: 1, scope: !13680)
!13690 = distinct !DISubprogram(name: "k_can_yield", scope: !2108, file: !2108, line: 1384, type: !6259, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!13691 = !DILocation(line: 1386, column: 11, scope: !13690)
!13692 = !DILocation(line: 1386, column: 29, scope: !13690)
!13693 = !DILocation(line: 1386, column: 32, scope: !13690)
!13694 = !DILocation(line: 1386, column: 46, scope: !13690)
!13695 = !DILocation(line: 1387, column: 28, scope: !13690)
!13696 = !DILocation(line: 1387, column: 4, scope: !13690)
!13697 = !DILocation(line: 1386, column: 2, scope: !13690)
!13698 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !307, file: !307, line: 989, type: !6259, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!13699 = !DILocation(line: 993, column: 10, scope: !13698)
!13700 = !DILocation(line: 993, column: 2, scope: !13698)
!13701 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2108, file: !2108, line: 1390, type: !2904, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13702)
!13702 = !{!13703}
!13703 = !DILocalVariable(name: "key", scope: !13701, file: !2108, line: 1396, type: !12190)
!13704 = !DILocation(line: 0, scope: !12198, inlinedAt: !13705)
!13705 = distinct !DILocation(line: 1396, column: 25, scope: !13701)
!13706 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !13707)
!13707 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !13705)
!13708 = !DILocation(line: 0, scope: !12207, inlinedAt: !13707)
!13709 = !DILocation(line: 0, scope: !13701)
!13710 = !DILocation(line: 1400, column: 18, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13712, file: !2108, line: 1399, column: 36)
!13712 = distinct !DILexicalBlock(scope: !13701, file: !2108, line: 1398, column: 6)
!13713 = !DILocation(line: 0, scope: !12367, inlinedAt: !13714)
!13714 = distinct !DILocation(line: 1400, column: 3, scope: !13711)
!13715 = !DILocation(line: 266, column: 15, scope: !12367, inlinedAt: !13714)
!13716 = !DILocation(line: 266, column: 28, scope: !12367, inlinedAt: !13714)
!13717 = !DILocation(line: 0, scope: !12375, inlinedAt: !13718)
!13718 = distinct !DILocation(line: 268, column: 3, scope: !12379, inlinedAt: !13714)
!13719 = !DILocation(line: 234, column: 2, scope: !12375, inlinedAt: !13718)
!13720 = !DILocation(line: 1402, column: 15, scope: !13701)
!13721 = !DILocation(line: 0, scope: !12384, inlinedAt: !13722)
!13722 = distinct !DILocation(line: 1402, column: 2, scope: !13701)
!13723 = !DILocation(line: 252, column: 15, scope: !12384, inlinedAt: !13722)
!13724 = !DILocation(line: 252, column: 28, scope: !12384, inlinedAt: !13722)
!13725 = !DILocation(line: 0, scope: !12391, inlinedAt: !13726)
!13726 = distinct !DILocation(line: 254, column: 3, scope: !12395, inlinedAt: !13722)
!13727 = !DILocation(line: 0, scope: !12398, inlinedAt: !13728)
!13728 = distinct !DILocation(line: 229, column: 2, scope: !12391, inlinedAt: !13726)
!13729 = !DILocation(line: 188, column: 2, scope: !12408, inlinedAt: !13728)
!13730 = !DILocation(line: 188, column: 2, scope: !12410, inlinedAt: !13728)
!13731 = !DILocation(line: 0, scope: !12408, inlinedAt: !13728)
!13732 = !DILocation(line: 189, column: 7, scope: !12413, inlinedAt: !13728)
!13733 = !DILocation(line: 189, column: 35, scope: !12413, inlinedAt: !13728)
!13734 = !DILocation(line: 189, column: 7, scope: !12414, inlinedAt: !13728)
!13735 = !DILocation(line: 191, column: 21, scope: !12418, inlinedAt: !13728)
!13736 = !DILocation(line: 190, column: 4, scope: !12418, inlinedAt: !13728)
!13737 = !DILocation(line: 192, column: 4, scope: !12418, inlinedAt: !13728)
!13738 = distinct !{!13738, !13729, !13739}
!13739 = !DILocation(line: 194, column: 2, scope: !12408, inlinedAt: !13728)
!13740 = !DILocation(line: 196, column: 37, scope: !12398, inlinedAt: !13728)
!13741 = !DILocation(line: 196, column: 2, scope: !12398, inlinedAt: !13728)
!13742 = !DILocation(line: 197, column: 1, scope: !12398, inlinedAt: !13728)
!13743 = !DILocation(line: 1403, column: 2, scope: !13701)
!13744 = !DILocation(line: 0, scope: !12809, inlinedAt: !13745)
!13745 = distinct !DILocation(line: 1404, column: 2, scope: !13701)
!13746 = !DILocation(line: 196, column: 9, scope: !12809, inlinedAt: !13745)
!13747 = !DILocation(line: 1405, column: 1, scope: !13701)
!13748 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2108, file: !2108, line: 1459, type: !13749, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13751)
!13749 = !DISubroutineType(types: !13750)
!13750 = !{!566, !12989}
!13751 = !{!13752, !13753, !13754}
!13752 = !DILocalVariable(name: "timeout", arg: 1, scope: !13748, file: !2108, line: 1459, type: !12989)
!13753 = !DILocalVariable(name: "ticks", scope: !13748, file: !2108, line: 1461, type: !1358)
!13754 = !DILocalVariable(name: "ret", scope: !13748, file: !2108, line: 1480, type: !566)
!13755 = !DILocation(line: 0, scope: !13748)
!13756 = !DILocation(line: 1468, column: 6, scope: !13757)
!13757 = distinct !DILexicalBlock(scope: !13748, file: !2108, line: 1468, column: 6)
!13758 = !DILocation(line: 1468, column: 6, scope: !13748)
!13759 = !DILocation(line: 1469, column: 20, scope: !13760)
!13760 = distinct !DILexicalBlock(scope: !13757, file: !2108, line: 1468, column: 40)
!13761 = !DILocation(line: 1469, column: 3, scope: !13760)
!13762 = !DILocation(line: 1473, column: 3, scope: !13760)
!13763 = !DILocation(line: 1478, column: 10, scope: !13748)
!13764 = !DILocation(line: 1480, column: 16, scope: !13748)
!13765 = !DILocation(line: 1485, column: 1, scope: !13748)
!13766 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3104, file: !3104, line: 310, type: !13767, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13769)
!13767 = !DISubroutineType(types: !13768)
!13768 = !{null, !13673}
!13769 = !{!13770}
!13770 = !DILocalVariable(name: "thread", arg: 1, scope: !13766, file: !3104, line: 310, type: !13673)
!13771 = !DILocation(line: 0, scope: !13766)
!13772 = !DILocation(line: 319, column: 2, scope: !13773)
!13773 = distinct !DILexicalBlock(scope: !13766, file: !3104, line: 319, column: 2)
!13774 = !{i64 2154107691}
!13775 = !DILocation(line: 320, column: 2, scope: !13766)
!13776 = !DILocation(line: 321, column: 1, scope: !13766)
!13777 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2108, file: !2108, line: 1415, type: !13778, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13780)
!13778 = !DISubroutineType(types: !13779)
!13779 = !{!566, !1358}
!13780 = !{!13781, !13782, !13783, !13784}
!13781 = !DILocalVariable(name: "ticks", arg: 1, scope: !13777, file: !2108, line: 1415, type: !1358)
!13782 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !13777, file: !2108, line: 1418, type: !121)
!13783 = !DILocalVariable(name: "timeout", scope: !13777, file: !2108, line: 1430, type: !12989)
!13784 = !DILocalVariable(name: "key", scope: !13777, file: !2108, line: 1437, type: !12190)
!13785 = !DILocation(line: 0, scope: !13777)
!13786 = !DILocation(line: 1425, column: 12, scope: !13787)
!13787 = distinct !DILexicalBlock(scope: !13777, file: !2108, line: 1425, column: 6)
!13788 = !DILocation(line: 1425, column: 6, scope: !13777)
!13789 = !DILocation(line: 1426, column: 3, scope: !13790)
!13790 = distinct !DILexicalBlock(scope: !13787, file: !2108, line: 1425, column: 18)
!13791 = !DILocation(line: 1427, column: 3, scope: !13790)
!13792 = !DILocation(line: 1431, column: 24, scope: !13793)
!13793 = distinct !DILexicalBlock(scope: !13777, file: !2108, line: 1431, column: 6)
!13794 = !DILocation(line: 1431, column: 6, scope: !13777)
!13795 = !DILocation(line: 1432, column: 35, scope: !13796)
!13796 = distinct !DILexicalBlock(scope: !13793, file: !2108, line: 1431, column: 30)
!13797 = !DILocation(line: 1432, column: 27, scope: !13796)
!13798 = !DILocation(line: 1433, column: 2, scope: !13796)
!13799 = !DILocation(line: 1434, column: 27, scope: !13800)
!13800 = distinct !DILexicalBlock(scope: !13793, file: !2108, line: 1433, column: 9)
!13801 = !DILocation(line: 0, scope: !13793)
!13802 = !DILocation(line: 0, scope: !12198, inlinedAt: !13803)
!13803 = distinct !DILocation(line: 1437, column: 25, scope: !13777)
!13804 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !13805)
!13805 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !13803)
!13806 = !DILocation(line: 0, scope: !12207, inlinedAt: !13805)
!13807 = !DILocation(line: 1440, column: 20, scope: !13777)
!13808 = !DILocation(line: 1440, column: 18, scope: !13777)
!13809 = !DILocation(line: 1442, column: 2, scope: !13777)
!13810 = !DILocation(line: 1443, column: 23, scope: !13777)
!13811 = !DILocation(line: 1443, column: 2, scope: !13777)
!13812 = !DILocation(line: 1444, column: 29, scope: !13777)
!13813 = !DILocation(line: 1444, column: 2, scope: !13777)
!13814 = !DILocation(line: 0, scope: !12809, inlinedAt: !13815)
!13815 = distinct !DILocation(line: 1446, column: 8, scope: !13777)
!13816 = !DILocation(line: 196, column: 9, scope: !12809, inlinedAt: !13815)
!13817 = !DILocation(line: 1450, column: 10, scope: !13777)
!13818 = !DILocation(line: 1450, column: 45, scope: !13777)
!13819 = !DILocation(line: 1450, column: 43, scope: !13777)
!13820 = !DILocation(line: 1451, column: 6, scope: !13777)
!13821 = !DILocation(line: 1457, column: 1, scope: !13777)
!13822 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !12031, file: !12031, line: 1103, type: !12032, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13823)
!13823 = !{!13824}
!13824 = !DILocalVariable(name: "t", arg: 1, scope: !13822, file: !12031, line: 1103, type: !1270)
!13825 = !DILocation(line: 0, scope: !13822)
!13826 = !DILocation(line: 0, scope: !12245, inlinedAt: !13827)
!13827 = distinct !DILocation(line: 1106, column: 9, scope: !13822)
!13828 = !DILocation(line: 139, column: 13, scope: !13829, inlinedAt: !13827)
!13829 = distinct !DILexicalBlock(scope: !13830, file: !12031, line: 138, column: 10)
!13830 = distinct !DILexicalBlock(scope: !13831, file: !12031, line: 136, column: 7)
!13831 = distinct !DILexicalBlock(scope: !12266, file: !12031, line: 134, column: 17)
!13832 = !DILocation(line: 1106, column: 2, scope: !13822)
!13833 = distinct !DISubprogram(name: "k_yield", scope: !3104, file: !3104, line: 140, type: !2904, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!13834 = !DILocation(line: 148, column: 2, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13833, file: !3104, line: 148, column: 2)
!13836 = !{i64 2154107011}
!13837 = !DILocation(line: 149, column: 2, scope: !13833)
!13838 = !DILocation(line: 150, column: 1, scope: !13833)
!13839 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2108, file: !2108, line: 1495, type: !13840, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13842)
!13840 = !DISubroutineType(types: !13841)
!13841 = !{!566, !103}
!13842 = !{!13843, !13844}
!13843 = !DILocalVariable(name: "us", arg: 1, scope: !13839, file: !2108, line: 1495, type: !103)
!13844 = !DILocalVariable(name: "ticks", scope: !13839, file: !2108, line: 1497, type: !566)
!13845 = !DILocation(line: 0, scope: !13839)
!13846 = !DILocation(line: 1501, column: 31, scope: !13839)
!13847 = !DILocation(line: 1501, column: 10, scope: !13839)
!13848 = !DILocation(line: 1502, column: 23, scope: !13839)
!13849 = !DILocation(line: 1502, column: 10, scope: !13839)
!13850 = !DILocation(line: 1506, column: 31, scope: !13839)
!13851 = !DILocation(line: 1506, column: 9, scope: !13839)
!13852 = !DILocation(line: 1506, column: 2, scope: !13839)
!13853 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !12031, file: !12031, line: 571, type: !12032, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13854)
!13854 = !{!13855}
!13855 = !DILocalVariable(name: "t", arg: 1, scope: !13853, file: !12031, line: 571, type: !1270)
!13856 = !DILocation(line: 0, scope: !13853)
!13857 = !DILocation(line: 0, scope: !12245, inlinedAt: !13858)
!13858 = distinct !DILocation(line: 574, column: 9, scope: !13853)
!13859 = !DILocation(line: 135, column: 5, scope: !13831, inlinedAt: !13858)
!13860 = !DILocation(line: 139, column: 13, scope: !13829, inlinedAt: !13858)
!13861 = !DILocation(line: 574, column: 2, scope: !13853)
!13862 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !12031, file: !12031, line: 1187, type: !12032, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13863)
!13863 = !{!13864}
!13864 = !DILocalVariable(name: "t", arg: 1, scope: !13862, file: !12031, line: 1187, type: !1270)
!13865 = !DILocation(line: 0, scope: !13862)
!13866 = !DILocation(line: 0, scope: !12245, inlinedAt: !13867)
!13867 = distinct !DILocation(line: 1190, column: 9, scope: !13862)
!13868 = !DILocation(line: 145, column: 13, scope: !13869, inlinedAt: !13867)
!13869 = distinct !DILexicalBlock(scope: !12263, file: !12031, line: 144, column: 10)
!13870 = !DILocation(line: 1190, column: 2, scope: !13862)
!13871 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2108, file: !2108, line: 1517, type: !13767, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13872)
!13872 = !{!13873}
!13873 = !DILocalVariable(name: "thread", arg: 1, scope: !13871, file: !2108, line: 1517, type: !13673)
!13874 = !DILocation(line: 0, scope: !13871)
!13875 = !DILocation(line: 1521, column: 6, scope: !13876)
!13876 = distinct !DILexicalBlock(scope: !13871, file: !2108, line: 1521, column: 6)
!13877 = !DILocation(line: 1521, column: 6, scope: !13871)
!13878 = !DILocation(line: 1525, column: 6, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !13871, file: !2108, line: 1525, column: 6)
!13880 = !DILocation(line: 1525, column: 37, scope: !13879)
!13881 = !DILocation(line: 1525, column: 6, scope: !13871)
!13882 = !DILocation(line: 1527, column: 20, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13884, file: !2108, line: 1527, column: 7)
!13884 = distinct !DILexicalBlock(scope: !13879, file: !2108, line: 1525, column: 42)
!13885 = !DILocation(line: 1527, column: 33, scope: !13883)
!13886 = !DILocation(line: 1527, column: 7, scope: !13884)
!13887 = !DILocation(line: 1532, column: 2, scope: !13871)
!13888 = !DILocation(line: 1533, column: 2, scope: !13871)
!13889 = !DILocation(line: 1031, column: 3, scope: !12842, inlinedAt: !13890)
!13890 = distinct !DILocation(line: 48, column: 10, scope: !12846, inlinedAt: !13891)
!13891 = distinct !DILocation(line: 1537, column: 7, scope: !13892)
!13892 = distinct !DILexicalBlock(scope: !13871, file: !2108, line: 1537, column: 6)
!13893 = !DILocation(line: 0, scope: !12842, inlinedAt: !13890)
!13894 = !DILocation(line: 48, column: 9, scope: !12846, inlinedAt: !13891)
!13895 = !DILocation(line: 1537, column: 6, scope: !13871)
!13896 = !DILocation(line: 1538, column: 3, scope: !13897)
!13897 = distinct !DILexicalBlock(scope: !13892, file: !2108, line: 1537, column: 25)
!13898 = !DILocation(line: 1539, column: 2, scope: !13897)
!13899 = !DILocation(line: 1540, column: 1, scope: !13871)
!13900 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !11470, file: !11470, line: 101, type: !12316, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13901)
!13901 = !{!13902}
!13902 = !DILocalVariable(name: "thread", arg: 1, scope: !13900, file: !11470, line: 101, type: !2003)
!13903 = !DILocation(line: 0, scope: !13900)
!13904 = !DILocation(line: 103, column: 23, scope: !13900)
!13905 = !DILocation(line: 103, column: 36, scope: !13900)
!13906 = !DILocation(line: 103, column: 55, scope: !13900)
!13907 = !DILocation(line: 103, column: 2, scope: !13900)
!13908 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2108, file: !2108, line: 1567, type: !13909, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13911)
!13909 = !DISubroutineType(types: !13910)
!13910 = !{!13673}
!13911 = !{!13912}
!13912 = !DILocalVariable(name: "ret", scope: !13908, file: !2108, line: 1577, type: !13673)
!13913 = !DILocation(line: 1577, column: 30, scope: !13908)
!13914 = !DILocation(line: 0, scope: !13908)
!13915 = !DILocation(line: 1582, column: 2, scope: !13908)
!13916 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2108, file: !2108, line: 1593, type: !6534, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!13917 = !DILocation(line: 1031, column: 3, scope: !12842, inlinedAt: !13918)
!13918 = distinct !DILocation(line: 48, column: 10, scope: !12846, inlinedAt: !13919)
!13919 = distinct !DILocation(line: 1595, column: 10, scope: !13916)
!13920 = !DILocation(line: 0, scope: !12842, inlinedAt: !13918)
!13921 = !DILocation(line: 48, column: 9, scope: !12846, inlinedAt: !13919)
!13922 = !DILocation(line: 1595, column: 27, scope: !13916)
!13923 = !DILocation(line: 1595, column: 41, scope: !13916)
!13924 = !DILocation(line: 1595, column: 30, scope: !13916)
!13925 = !DILocation(line: 1595, column: 2, scope: !13916)
!13926 = distinct !DISubprogram(name: "z_thread_abort", scope: !2108, file: !2108, line: 1725, type: !12156, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13927)
!13927 = !{!13928, !13929}
!13928 = !DILocalVariable(name: "thread", arg: 1, scope: !13926, file: !2108, line: 1725, type: !2003)
!13929 = !DILocalVariable(name: "key", scope: !13926, file: !2108, line: 1727, type: !12190)
!13930 = !DILocation(line: 0, scope: !13926)
!13931 = !DILocation(line: 0, scope: !12198, inlinedAt: !13932)
!13932 = distinct !DILocation(line: 1727, column: 25, scope: !13926)
!13933 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !13934)
!13934 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !13932)
!13935 = !DILocation(line: 0, scope: !12207, inlinedAt: !13934)
!13936 = !DILocation(line: 1729, column: 20, scope: !13937)
!13937 = distinct !DILexicalBlock(scope: !13926, file: !2108, line: 1729, column: 6)
!13938 = !DILocation(line: 1729, column: 33, scope: !13937)
!13939 = !DILocation(line: 1729, column: 48, scope: !13937)
!13940 = !DILocation(line: 1729, column: 6, scope: !13926)
!13941 = !DILocation(line: 0, scope: !12225, inlinedAt: !13942)
!13942 = distinct !DILocation(line: 1730, column: 3, scope: !13943)
!13943 = distinct !DILexicalBlock(scope: !13937, file: !2108, line: 1729, column: 54)
!13944 = !DILocation(line: 0, scope: !12233, inlinedAt: !13945)
!13945 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !13942)
!13946 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !13945)
!13947 = !DILocation(line: 1732, column: 3, scope: !13948)
!13948 = distinct !DILexicalBlock(scope: !13943, file: !2108, line: 1732, column: 3)
!13949 = !{i64 2154844421, i64 2154844437, i64 2154844463, i64 2154844491, i64 2154844511}
!13950 = !DILocation(line: 1733, column: 3, scope: !13943)
!13951 = !DILocation(line: 1736, column: 20, scope: !13952)
!13952 = distinct !DILexicalBlock(scope: !13926, file: !2108, line: 1736, column: 6)
!13953 = !DILocation(line: 1736, column: 33, scope: !13952)
!13954 = !DILocation(line: 1736, column: 49, scope: !13952)
!13955 = !DILocation(line: 1736, column: 6, scope: !13926)
!13956 = !DILocation(line: 0, scope: !12225, inlinedAt: !13957)
!13957 = distinct !DILocation(line: 1737, column: 3, scope: !13958)
!13958 = distinct !DILexicalBlock(scope: !13952, file: !2108, line: 1736, column: 56)
!13959 = !DILocation(line: 0, scope: !12233, inlinedAt: !13960)
!13960 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !13957)
!13961 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !13960)
!13962 = !DILocation(line: 1738, column: 3, scope: !13958)
!13963 = !DILocation(line: 1775, column: 2, scope: !13926)
!13964 = !DILocation(line: 1776, column: 16, scope: !13965)
!13965 = distinct !DILexicalBlock(scope: !13926, file: !2108, line: 1776, column: 6)
!13966 = !DILocation(line: 1776, column: 13, scope: !13965)
!13967 = !DILocation(line: 1776, column: 25, scope: !13965)
!13968 = !DILocation(line: 1031, column: 3, scope: !12842, inlinedAt: !13969)
!13969 = distinct !DILocation(line: 48, column: 10, scope: !12846, inlinedAt: !13970)
!13970 = distinct !DILocation(line: 1776, column: 29, scope: !13965)
!13971 = !DILocation(line: 0, scope: !12842, inlinedAt: !13969)
!13972 = !DILocation(line: 48, column: 9, scope: !12846, inlinedAt: !13970)
!13973 = !DILocation(line: 1776, column: 6, scope: !13926)
!13974 = !DILocation(line: 0, scope: !12809, inlinedAt: !13975)
!13975 = distinct !DILocation(line: 1777, column: 3, scope: !13976)
!13976 = distinct !DILexicalBlock(scope: !13965, file: !2108, line: 1776, column: 47)
!13977 = !DILocation(line: 196, column: 9, scope: !12809, inlinedAt: !13975)
!13978 = !DILocation(line: 1779, column: 2, scope: !13976)
!13979 = !DILocation(line: 0, scope: !12225, inlinedAt: !13980)
!13980 = distinct !DILocation(line: 1780, column: 2, scope: !13926)
!13981 = !DILocation(line: 0, scope: !12233, inlinedAt: !13982)
!13982 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !13980)
!13983 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !13982)
!13984 = !DILocation(line: 1781, column: 1, scope: !13926)
!13985 = distinct !DISubprogram(name: "end_thread", scope: !2108, file: !2108, line: 1690, type: !12156, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13986)
!13986 = !{!13987}
!13987 = !DILocalVariable(name: "thread", arg: 1, scope: !13985, file: !2108, line: 1690, type: !2003)
!13988 = !DILocation(line: 0, scope: !13985)
!13989 = !DILocation(line: 1695, column: 20, scope: !13990)
!13990 = distinct !DILexicalBlock(scope: !13985, file: !2108, line: 1695, column: 6)
!13991 = !DILocation(line: 1695, column: 33, scope: !13990)
!13992 = !DILocation(line: 1695, column: 49, scope: !13990)
!13993 = !DILocation(line: 1695, column: 6, scope: !13985)
!13994 = !DILocation(line: 1697, column: 29, scope: !13995)
!13995 = distinct !DILexicalBlock(scope: !13990, file: !2108, line: 1695, column: 56)
!13996 = !DILocation(line: 1698, column: 7, scope: !13997)
!13997 = distinct !DILexicalBlock(scope: !13995, file: !2108, line: 1698, column: 7)
!13998 = !DILocation(line: 1698, column: 7, scope: !13995)
!13999 = !DILocation(line: 0, scope: !12367, inlinedAt: !14000)
!14000 = distinct !DILocation(line: 1699, column: 4, scope: !14001)
!14001 = distinct !DILexicalBlock(scope: !13997, file: !2108, line: 1698, column: 35)
!14002 = !DILocation(line: 266, column: 28, scope: !12367, inlinedAt: !14000)
!14003 = !DILocation(line: 0, scope: !12375, inlinedAt: !14004)
!14004 = distinct !DILocation(line: 268, column: 3, scope: !12379, inlinedAt: !14000)
!14005 = !DILocation(line: 234, column: 2, scope: !12375, inlinedAt: !14004)
!14006 = !DILocation(line: 1700, column: 3, scope: !14001)
!14007 = !DILocation(line: 1701, column: 20, scope: !14008)
!14008 = distinct !DILexicalBlock(scope: !13995, file: !2108, line: 1701, column: 7)
!14009 = !DILocation(line: 1701, column: 30, scope: !14008)
!14010 = !DILocation(line: 1701, column: 7, scope: !13995)
!14011 = !DILocation(line: 1702, column: 4, scope: !14012)
!14012 = distinct !DILexicalBlock(scope: !14008, file: !2108, line: 1701, column: 39)
!14013 = !DILocation(line: 1703, column: 3, scope: !14012)
!14014 = !DILocation(line: 1704, column: 9, scope: !13995)
!14015 = !DILocation(line: 1705, column: 23, scope: !13995)
!14016 = !DILocation(line: 1705, column: 3, scope: !13995)
!14017 = !DILocation(line: 1706, column: 3, scope: !13995)
!14018 = !DILocation(line: 1722, column: 2, scope: !13995)
!14019 = !DILocation(line: 1723, column: 1, scope: !13985)
!14020 = distinct !DISubprogram(name: "unpend_all", scope: !2108, file: !2108, line: 1674, type: !14021, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !14023)
!14021 = !DISubroutineType(types: !14022)
!14022 = !{null, !2034}
!14023 = !{!14024, !14025}
!14024 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14020, file: !2108, line: 1674, type: !2034)
!14025 = !DILocalVariable(name: "thread", scope: !14020, file: !2108, line: 1676, type: !2003)
!14026 = !DILocation(line: 0, scope: !14020)
!14027 = !DILocation(line: 1678, column: 19, scope: !14020)
!14028 = !DILocation(line: 1678, column: 41, scope: !14020)
!14029 = !DILocation(line: 1678, column: 2, scope: !14020)
!14030 = !DILocation(line: 1679, column: 3, scope: !14031)
!14031 = distinct !DILexicalBlock(scope: !14020, file: !2108, line: 1678, column: 50)
!14032 = !DILocation(line: 1680, column: 9, scope: !14031)
!14033 = !DILocalVariable(name: "thread", arg: 1, scope: !14034, file: !11490, line: 65, type: !2003)
!14034 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !11490, file: !11490, line: 65, type: !14035, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !14037)
!14035 = !DISubroutineType(types: !14036)
!14036 = !{null, !2003, !32}
!14037 = !{!14033, !14038}
!14038 = !DILocalVariable(name: "value", arg: 2, scope: !14034, file: !11490, line: 65, type: !32)
!14039 = !DILocation(line: 0, scope: !14034, inlinedAt: !14040)
!14040 = distinct !DILocation(line: 1681, column: 3, scope: !14031)
!14041 = !DILocation(line: 67, column: 15, scope: !14034, inlinedAt: !14040)
!14042 = !DILocation(line: 67, column: 33, scope: !14034, inlinedAt: !14040)
!14043 = !DILocation(line: 1682, column: 3, scope: !14031)
!14044 = distinct !{!14044, !14029, !14045}
!14045 = !DILocation(line: 1683, column: 2, scope: !14020)
!14046 = !DILocation(line: 1684, column: 1, scope: !14020)
!14047 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2108, file: !2108, line: 1794, type: !14048, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !14050)
!14048 = !DISubroutineType(types: !14049)
!14049 = !{!103, !2003, !12989}
!14050 = !{!14051, !14052, !14053, !14054}
!14051 = !DILocalVariable(name: "thread", arg: 1, scope: !14047, file: !2108, line: 1794, type: !2003)
!14052 = !DILocalVariable(name: "timeout", arg: 2, scope: !14047, file: !2108, line: 1794, type: !12989)
!14053 = !DILocalVariable(name: "key", scope: !14047, file: !2108, line: 1796, type: !12190)
!14054 = !DILocalVariable(name: "ret", scope: !14047, file: !2108, line: 1797, type: !103)
!14055 = !DILocation(line: 0, scope: !14047)
!14056 = !DILocation(line: 0, scope: !12198, inlinedAt: !14057)
!14057 = distinct !DILocation(line: 1796, column: 25, scope: !14047)
!14058 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !14059)
!14059 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !14057)
!14060 = !DILocation(line: 0, scope: !12207, inlinedAt: !14059)
!14061 = !DILocation(line: 1801, column: 20, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14047, file: !2108, line: 1801, column: 6)
!14063 = !DILocation(line: 1801, column: 33, scope: !14062)
!14064 = !DILocation(line: 1801, column: 49, scope: !14062)
!14065 = !DILocation(line: 1801, column: 6, scope: !14047)
!14066 = !DILocation(line: 1803, column: 13, scope: !14067)
!14067 = distinct !DILexicalBlock(scope: !14062, file: !2108, line: 1803, column: 13)
!14068 = !DILocation(line: 1803, column: 13, scope: !14062)
!14069 = !DILocation(line: 1805, column: 24, scope: !14070)
!14070 = distinct !DILexicalBlock(scope: !14067, file: !2108, line: 1805, column: 13)
!14071 = !DILocation(line: 1805, column: 21, scope: !14070)
!14072 = !DILocation(line: 1805, column: 34, scope: !14070)
!14073 = !DILocation(line: 1806, column: 20, scope: !14070)
!14074 = !DILocation(line: 1806, column: 44, scope: !14070)
!14075 = !DILocation(line: 1806, column: 30, scope: !14070)
!14076 = !DILocation(line: 1805, column: 13, scope: !14067)
!14077 = !DILocation(line: 1810, column: 42, scope: !14078)
!14078 = distinct !DILexicalBlock(scope: !14070, file: !2108, line: 1808, column: 9)
!14079 = !DILocation(line: 1810, column: 3, scope: !14078)
!14080 = !DILocation(line: 1811, column: 22, scope: !14078)
!14081 = !DILocation(line: 1811, column: 3, scope: !14078)
!14082 = !DILocation(line: 0, scope: !12809, inlinedAt: !14083)
!14083 = distinct !DILocation(line: 1814, column: 9, scope: !14078)
!14084 = !DILocation(line: 196, column: 9, scope: !12809, inlinedAt: !14083)
!14085 = !DILocation(line: 1817, column: 3, scope: !14078)
!14086 = !DILocation(line: 0, scope: !14062)
!14087 = !DILocation(line: 0, scope: !12225, inlinedAt: !14088)
!14088 = distinct !DILocation(line: 1822, column: 2, scope: !14047)
!14089 = !DILocation(line: 0, scope: !12233, inlinedAt: !14090)
!14090 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !14088)
!14091 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !14090)
!14092 = !DILocation(line: 1823, column: 2, scope: !14047)
!14093 = !DILocation(line: 1824, column: 1, scope: !14047)
!14094 = distinct !DISubprogram(name: "z_sched_wake", scope: !2108, file: !2108, line: 1882, type: !14095, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !14097)
!14095 = !DISubroutineType(types: !14096)
!14096 = !{!157, !2034, !103, !102}
!14097 = !{!14098, !14099, !14100, !14101, !14102, !14103, !14105}
!14098 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14094, file: !2108, line: 1882, type: !2034)
!14099 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !14094, file: !2108, line: 1882, type: !103)
!14100 = !DILocalVariable(name: "swap_data", arg: 3, scope: !14094, file: !2108, line: 1882, type: !102)
!14101 = !DILocalVariable(name: "thread", scope: !14094, file: !2108, line: 1884, type: !2003)
!14102 = !DILocalVariable(name: "ret", scope: !14094, file: !2108, line: 1885, type: !157)
!14103 = !DILocalVariable(name: "__i", scope: !14104, file: !2108, line: 1887, type: !12190)
!14104 = distinct !DILexicalBlock(scope: !14094, file: !2108, line: 1887, column: 2)
!14105 = !DILocalVariable(name: "__key", scope: !14104, file: !2108, line: 1887, type: !12190)
!14106 = !DILocation(line: 0, scope: !14094)
!14107 = !DILocation(line: 0, scope: !14104)
!14108 = !DILocation(line: 0, scope: !12198, inlinedAt: !14109)
!14109 = distinct !DILocation(line: 1887, column: 2, scope: !14104)
!14110 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !14111)
!14111 = distinct !DILocation(line: 145, column: 10, scope: !12198, inlinedAt: !14109)
!14112 = !DILocation(line: 0, scope: !12207, inlinedAt: !14111)
!14113 = !DILocation(line: 1888, column: 12, scope: !14114)
!14114 = distinct !DILexicalBlock(scope: !14115, file: !2108, line: 1887, column: 26)
!14115 = distinct !DILexicalBlock(scope: !14104, file: !2108, line: 1887, column: 2)
!14116 = !DILocation(line: 1890, column: 14, scope: !14117)
!14117 = distinct !DILexicalBlock(scope: !14114, file: !2108, line: 1890, column: 7)
!14118 = !DILocation(line: 1890, column: 7, scope: !14114)
!14119 = !DILocalVariable(name: "thread", arg: 1, scope: !14120, file: !14121, line: 134, type: !2003)
!14120 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14121, file: !14121, line: 134, type: !14122, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !14124)
!14121 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14122 = !DISubroutineType(types: !14123)
!14123 = !{null, !2003, !32, !102}
!14124 = !{!14119, !14125, !14126}
!14125 = !DILocalVariable(name: "value", arg: 2, scope: !14120, file: !14121, line: 135, type: !32)
!14126 = !DILocalVariable(name: "data", arg: 3, scope: !14120, file: !14121, line: 136, type: !102)
!14127 = !DILocation(line: 0, scope: !14120, inlinedAt: !14128)
!14128 = distinct !DILocation(line: 1891, column: 4, scope: !14129)
!14129 = distinct !DILexicalBlock(scope: !14117, file: !2108, line: 1890, column: 23)
!14130 = !DILocation(line: 0, scope: !14034, inlinedAt: !14131)
!14131 = distinct !DILocation(line: 138, column: 2, scope: !14120, inlinedAt: !14128)
!14132 = !DILocation(line: 67, column: 15, scope: !14034, inlinedAt: !14131)
!14133 = !DILocation(line: 67, column: 33, scope: !14034, inlinedAt: !14131)
!14134 = !DILocation(line: 139, column: 15, scope: !14120, inlinedAt: !14128)
!14135 = !DILocation(line: 139, column: 25, scope: !14120, inlinedAt: !14128)
!14136 = !DILocation(line: 1894, column: 4, scope: !14129)
!14137 = !DILocation(line: 1895, column: 10, scope: !14129)
!14138 = !DILocation(line: 1896, column: 4, scope: !14129)
!14139 = !DILocation(line: 1898, column: 3, scope: !14129)
!14140 = !DILocation(line: 0, scope: !12225, inlinedAt: !14141)
!14141 = distinct !DILocation(line: 1887, column: 2, scope: !14115)
!14142 = !DILocation(line: 0, scope: !12233, inlinedAt: !14143)
!14143 = distinct !DILocation(line: 215, column: 2, scope: !12225, inlinedAt: !14141)
!14144 = !DILocation(line: 95, column: 2, scope: !12233, inlinedAt: !14143)
!14145 = !DILocation(line: 1901, column: 2, scope: !14094)
!14146 = distinct !DISubprogram(name: "z_sched_wait", scope: !2108, file: !2108, line: 1904, type: !14147, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !14150)
!14147 = !DISubroutineType(types: !14148)
!14148 = !{!103, !12201, !12190, !2034, !12989, !14149}
!14149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!14150 = !{!14151, !14152, !14153, !14154, !14155, !14156}
!14151 = !DILocalVariable(name: "lock", arg: 1, scope: !14146, file: !2108, line: 1904, type: !12201)
!14152 = !DILocalVariable(name: "key", arg: 2, scope: !14146, file: !2108, line: 1904, type: !12190)
!14153 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14146, file: !2108, line: 1905, type: !2034)
!14154 = !DILocalVariable(name: "timeout", arg: 4, scope: !14146, file: !2108, line: 1905, type: !12989)
!14155 = !DILocalVariable(name: "data", arg: 5, scope: !14146, file: !2108, line: 1905, type: !14149)
!14156 = !DILocalVariable(name: "ret", scope: !14146, file: !2108, line: 1907, type: !103)
!14157 = !DILocation(line: 0, scope: !14146)
!14158 = !DILocation(line: 1907, column: 12, scope: !14146)
!14159 = !DILocation(line: 1909, column: 11, scope: !14160)
!14160 = distinct !DILexicalBlock(scope: !14146, file: !2108, line: 1909, column: 6)
!14161 = !DILocation(line: 1909, column: 6, scope: !14146)
!14162 = !DILocation(line: 1910, column: 11, scope: !14163)
!14163 = distinct !DILexicalBlock(scope: !14160, file: !2108, line: 1909, column: 20)
!14164 = !DILocation(line: 1910, column: 26, scope: !14163)
!14165 = !DILocation(line: 1910, column: 9, scope: !14163)
!14166 = !DILocation(line: 1911, column: 2, scope: !14163)
!14167 = !DILocation(line: 1912, column: 2, scope: !14146)
!14168 = distinct !DISubprogram(name: "z_data_copy", scope: !14169, file: !14169, line: 22, type: !2904, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2887, retainedNodes: !322)
!14169 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14170 = !DILocation(line: 24, column: 2, scope: !14168)
!14171 = !DILocation(line: 27, column: 2, scope: !14168)
!14172 = !DILocation(line: 71, column: 1, scope: !14168)
!14173 = distinct !DISubprogram(name: "z_add_timeout", scope: !2145, file: !2145, line: 88, type: !14174, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14180)
!14174 = !DISubroutineType(types: !14175)
!14175 = !{null, !2118, !2137, !14176}
!14176 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1359, line: 67, baseType: !14177)
!14177 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1359, line: 65, size: 64, elements: !14178)
!14178 = !{!14179}
!14179 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14177, file: !1359, line: 66, baseType: !1358, size: 64)
!14180 = !{!14181, !14182, !14183, !14184, !14190, !14191, !14194, !14197}
!14181 = !DILocalVariable(name: "to", arg: 1, scope: !14173, file: !2145, line: 88, type: !2118)
!14182 = !DILocalVariable(name: "fn", arg: 2, scope: !14173, file: !2145, line: 88, type: !2137)
!14183 = !DILocalVariable(name: "timeout", arg: 3, scope: !14173, file: !2145, line: 89, type: !14176)
!14184 = !DILocalVariable(name: "__i", scope: !14185, file: !2145, line: 102, type: !14186)
!14185 = distinct !DILexicalBlock(scope: !14173, file: !2145, line: 102, column: 2)
!14186 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !14187)
!14187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !14188)
!14188 = !{!14189}
!14189 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14187, file: !321, line: 33, baseType: !103, size: 32)
!14190 = !DILocalVariable(name: "__key", scope: !14185, file: !2145, line: 102, type: !14186)
!14191 = !DILocalVariable(name: "t", scope: !14192, file: !2145, line: 103, type: !2118)
!14192 = distinct !DILexicalBlock(scope: !14193, file: !2145, line: 102, column: 24)
!14193 = distinct !DILexicalBlock(scope: !14185, file: !2145, line: 102, column: 2)
!14194 = !DILocalVariable(name: "ticks", scope: !14195, file: !2145, line: 107, type: !1358)
!14195 = distinct !DILexicalBlock(scope: !14196, file: !2145, line: 106, column: 39)
!14196 = distinct !DILexicalBlock(scope: !14192, file: !2145, line: 105, column: 7)
!14197 = !DILocalVariable(name: "next_time", scope: !14198, file: !2145, line: 137, type: !566)
!14198 = distinct !DILexicalBlock(scope: !14199, file: !2145, line: 127, column: 22)
!14199 = distinct !DILexicalBlock(scope: !14192, file: !2145, line: 127, column: 7)
!14200 = !DILocation(line: 0, scope: !14173)
!14201 = !DILocation(line: 91, column: 6, scope: !14202)
!14202 = distinct !DILexicalBlock(scope: !14173, file: !2145, line: 91, column: 6)
!14203 = !DILocation(line: 91, column: 6, scope: !14173)
!14204 = !DILocation(line: 100, column: 6, scope: !14173)
!14205 = !DILocation(line: 100, column: 9, scope: !14173)
!14206 = !DILocation(line: 0, scope: !14185)
!14207 = !DILocalVariable(name: "l", arg: 1, scope: !14208, file: !321, line: 136, type: !14211)
!14208 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !14209, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14212)
!14209 = !DISubroutineType(types: !14210)
!14210 = !{!14186, !14211}
!14211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 32)
!14212 = !{!14207, !14213}
!14213 = !DILocalVariable(name: "k", scope: !14208, file: !321, line: 139, type: !14186)
!14214 = !DILocation(line: 0, scope: !14208, inlinedAt: !14215)
!14215 = distinct !DILocation(line: 102, column: 2, scope: !14185)
!14216 = !DILocation(line: 55, column: 2, scope: !14217, inlinedAt: !14221)
!14217 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5290, file: !5290, line: 42, type: !5291, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14218)
!14218 = !{!14219, !14220}
!14219 = !DILocalVariable(name: "key", scope: !14217, file: !5290, line: 44, type: !32)
!14220 = !DILocalVariable(name: "tmp", scope: !14217, file: !5290, line: 53, type: !32)
!14221 = distinct !DILocation(line: 145, column: 10, scope: !14208, inlinedAt: !14215)
!14222 = !{i64 1953717}
!14223 = !DILocation(line: 0, scope: !14217, inlinedAt: !14221)
!14224 = !DILocation(line: 106, column: 33, scope: !14196)
!14225 = !DILocation(line: 105, column: 7, scope: !14192)
!14226 = !DILocation(line: 107, column: 50, scope: !14195)
!14227 = !DILocation(line: 107, column: 48, scope: !14195)
!14228 = !DILocation(line: 0, scope: !14195)
!14229 = !DILocation(line: 109, column: 17, scope: !14195)
!14230 = !DILocation(line: 110, column: 3, scope: !14195)
!14231 = !DILocation(line: 111, column: 31, scope: !14232)
!14232 = distinct !DILexicalBlock(scope: !14196, file: !2145, line: 110, column: 10)
!14233 = !DILocation(line: 111, column: 37, scope: !14232)
!14234 = !DILocation(line: 111, column: 35, scope: !14232)
!14235 = !DILocation(line: 0, scope: !14196)
!14236 = !DILocation(line: 109, column: 8, scope: !14195)
!14237 = !DILocation(line: 109, column: 15, scope: !14195)
!14238 = !DILocation(line: 114, column: 12, scope: !14239)
!14239 = distinct !DILexicalBlock(scope: !14192, file: !2145, line: 114, column: 3)
!14240 = !DILocation(line: 0, scope: !14192)
!14241 = !DILocation(line: 114, column: 3, scope: !14239)
!14242 = !DILocation(line: 115, column: 24, scope: !14243)
!14243 = distinct !DILexicalBlock(scope: !14244, file: !2145, line: 115, column: 8)
!14244 = distinct !DILexicalBlock(scope: !14245, file: !2145, line: 114, column: 45)
!14245 = distinct !DILexicalBlock(scope: !14239, file: !2145, line: 114, column: 3)
!14246 = !DILocation(line: 115, column: 11, scope: !14243)
!14247 = !DILocation(line: 115, column: 18, scope: !14243)
!14248 = !DILocation(line: 115, column: 8, scope: !14244)
!14249 = !DILocation(line: 116, column: 15, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14243, file: !2145, line: 115, column: 32)
!14251 = !DILocation(line: 117, column: 26, scope: !14250)
!14252 = !DILocation(line: 117, column: 37, scope: !14250)
!14253 = !DILocation(line: 117, column: 5, scope: !14250)
!14254 = !DILocation(line: 123, column: 7, scope: !14192)
!14255 = !DILocation(line: 120, column: 15, scope: !14244)
!14256 = !DILocation(line: 114, column: 36, scope: !14245)
!14257 = distinct !{!14257, !14241, !14258}
!14258 = !DILocation(line: 121, column: 3, scope: !14239)
!14259 = !DILocation(line: 124, column: 41, scope: !14260)
!14260 = distinct !DILexicalBlock(scope: !14261, file: !2145, line: 123, column: 18)
!14261 = distinct !DILexicalBlock(scope: !14192, file: !2145, line: 123, column: 7)
!14262 = !DILocation(line: 124, column: 4, scope: !14260)
!14263 = !DILocation(line: 125, column: 3, scope: !14260)
!14264 = !DILocation(line: 127, column: 13, scope: !14199)
!14265 = !DILocation(line: 127, column: 10, scope: !14199)
!14266 = !DILocation(line: 127, column: 7, scope: !14192)
!14267 = !DILocation(line: 137, column: 24, scope: !14198)
!14268 = !DILocation(line: 0, scope: !14198)
!14269 = !DILocation(line: 139, column: 18, scope: !14270)
!14270 = distinct !DILexicalBlock(scope: !14198, file: !2145, line: 139, column: 8)
!14271 = !DILocation(line: 139, column: 23, scope: !14270)
!14272 = !DILocation(line: 141, column: 5, scope: !14273)
!14273 = distinct !DILexicalBlock(scope: !14270, file: !2145, line: 140, column: 48)
!14274 = !DILocation(line: 142, column: 4, scope: !14273)
!14275 = !DILocalVariable(name: "key", arg: 2, scope: !14276, file: !321, line: 190, type: !14186)
!14276 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !14277, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14279)
!14277 = !DISubroutineType(types: !14278)
!14278 = !{null, !14211, !14186}
!14279 = !{!14280, !14275}
!14280 = !DILocalVariable(name: "l", arg: 1, scope: !14276, file: !321, line: 189, type: !14211)
!14281 = !DILocation(line: 0, scope: !14276, inlinedAt: !14282)
!14282 = distinct !DILocation(line: 102, column: 2, scope: !14193)
!14283 = !DILocalVariable(name: "key", arg: 1, scope: !14284, file: !5290, line: 84, type: !32)
!14284 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5290, file: !5290, line: 84, type: !5301, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14285)
!14285 = !{!14283}
!14286 = !DILocation(line: 0, scope: !14284, inlinedAt: !14287)
!14287 = distinct !DILocation(line: 215, column: 2, scope: !14276, inlinedAt: !14282)
!14288 = !DILocation(line: 95, column: 2, scope: !14284, inlinedAt: !14287)
!14289 = !{i64 1954534}
!14290 = !DILocation(line: 148, column: 1, scope: !14173)
!14291 = distinct !DISubprogram(name: "elapsed", scope: !2145, file: !2145, line: 62, type: !14292, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !322)
!14292 = !DISubroutineType(types: !14293)
!14293 = !{!566}
!14294 = !DILocation(line: 64, column: 9, scope: !14291)
!14295 = !DILocation(line: 64, column: 28, scope: !14291)
!14296 = !DILocation(line: 64, column: 35, scope: !14291)
!14297 = !DILocation(line: 64, column: 2, scope: !14291)
!14298 = distinct !DISubprogram(name: "first", scope: !2145, file: !2145, line: 39, type: !14299, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14301)
!14299 = !DISubroutineType(types: !14300)
!14300 = !{!2118}
!14301 = !{!14302}
!14302 = !DILocalVariable(name: "t", scope: !14298, file: !2145, line: 41, type: !14303)
!14303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 32)
!14304 = !DILocation(line: 41, column: 19, scope: !14298)
!14305 = !DILocation(line: 0, scope: !14298)
!14306 = !DILocation(line: 43, column: 9, scope: !14298)
!14307 = !DILocation(line: 43, column: 2, scope: !14298)
!14308 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !221, file: !221, line: 443, type: !14309, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14311)
!14309 = !DISubroutineType(types: !14310)
!14310 = !{null, !14303, !14303}
!14311 = !{!14312, !14313, !14314}
!14312 = !DILocalVariable(name: "successor", arg: 1, scope: !14308, file: !221, line: 443, type: !14303)
!14313 = !DILocalVariable(name: "node", arg: 2, scope: !14308, file: !221, line: 443, type: !14303)
!14314 = !DILocalVariable(name: "prev", scope: !14308, file: !221, line: 445, type: !14315)
!14315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14303)
!14316 = !DILocation(line: 0, scope: !14308)
!14317 = !DILocation(line: 445, column: 39, scope: !14308)
!14318 = !DILocation(line: 447, column: 8, scope: !14308)
!14319 = !DILocation(line: 447, column: 13, scope: !14308)
!14320 = !DILocation(line: 448, column: 8, scope: !14308)
!14321 = !DILocation(line: 448, column: 13, scope: !14308)
!14322 = !DILocation(line: 449, column: 8, scope: !14308)
!14323 = !DILocation(line: 449, column: 13, scope: !14308)
!14324 = !DILocation(line: 450, column: 18, scope: !14308)
!14325 = !DILocation(line: 451, column: 1, scope: !14308)
!14326 = distinct !DISubprogram(name: "next", scope: !2145, file: !2145, line: 46, type: !14327, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14329)
!14327 = !DISubroutineType(types: !14328)
!14328 = !{!2118, !2118}
!14329 = !{!14330, !14331}
!14330 = !DILocalVariable(name: "t", arg: 1, scope: !14326, file: !2145, line: 46, type: !2118)
!14331 = !DILocalVariable(name: "n", scope: !14326, file: !2145, line: 48, type: !14303)
!14332 = !DILocation(line: 0, scope: !14326)
!14333 = !DILocation(line: 48, column: 58, scope: !14326)
!14334 = !DILocation(line: 48, column: 19, scope: !14326)
!14335 = !DILocation(line: 50, column: 9, scope: !14326)
!14336 = !DILocation(line: 50, column: 2, scope: !14326)
!14337 = distinct !DISubprogram(name: "sys_dlist_append", scope: !221, file: !221, line: 404, type: !14338, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14341)
!14338 = !DISubroutineType(types: !14339)
!14339 = !{null, !14340, !14303}
!14340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 32)
!14341 = !{!14342, !14343, !14344}
!14342 = !DILocalVariable(name: "list", arg: 1, scope: !14337, file: !221, line: 404, type: !14340)
!14343 = !DILocalVariable(name: "node", arg: 2, scope: !14337, file: !221, line: 404, type: !14303)
!14344 = !DILocalVariable(name: "tail", scope: !14337, file: !221, line: 406, type: !14315)
!14345 = !DILocation(line: 0, scope: !14337)
!14346 = !DILocation(line: 406, column: 34, scope: !14337)
!14347 = !DILocation(line: 408, column: 8, scope: !14337)
!14348 = !DILocation(line: 408, column: 13, scope: !14337)
!14349 = !DILocation(line: 409, column: 8, scope: !14337)
!14350 = !DILocation(line: 409, column: 13, scope: !14337)
!14351 = !DILocation(line: 411, column: 8, scope: !14337)
!14352 = !DILocation(line: 411, column: 13, scope: !14337)
!14353 = !DILocation(line: 412, column: 13, scope: !14337)
!14354 = !DILocation(line: 413, column: 1, scope: !14337)
!14355 = distinct !DISubprogram(name: "next_timeout", scope: !2145, file: !2145, line: 67, type: !14292, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14356)
!14356 = !{!14357, !14358, !14359}
!14357 = !DILocalVariable(name: "to", scope: !14355, file: !2145, line: 69, type: !2118)
!14358 = !DILocalVariable(name: "ticks_elapsed", scope: !14355, file: !2145, line: 70, type: !566)
!14359 = !DILocalVariable(name: "ret", scope: !14355, file: !2145, line: 71, type: !566)
!14360 = !DILocation(line: 69, column: 24, scope: !14355)
!14361 = !DILocation(line: 0, scope: !14355)
!14362 = !DILocation(line: 70, column: 26, scope: !14355)
!14363 = !DILocation(line: 73, column: 10, scope: !14364)
!14364 = distinct !DILexicalBlock(scope: !14355, file: !2145, line: 73, column: 6)
!14365 = !DILocation(line: 73, column: 19, scope: !14364)
!14366 = !DILocation(line: 74, column: 21, scope: !14364)
!14367 = !DILocation(line: 74, column: 30, scope: !14364)
!14368 = !DILocation(line: 74, column: 28, scope: !14364)
!14369 = !DILocation(line: 74, column: 45, scope: !14364)
!14370 = !DILocation(line: 73, column: 6, scope: !14355)
!14371 = !DILocation(line: 77, column: 9, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14364, file: !2145, line: 76, column: 9)
!14373 = !DILocation(line: 0, scope: !14364)
!14374 = !DILocation(line: 81, column: 20, scope: !14375)
!14375 = distinct !DILexicalBlock(scope: !14355, file: !2145, line: 81, column: 6)
!14376 = !DILocation(line: 81, column: 6, scope: !14375)
!14377 = !DILocation(line: 81, column: 32, scope: !14375)
!14378 = !DILocation(line: 85, column: 2, scope: !14355)
!14379 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !221, file: !221, line: 341, type: !14380, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14382)
!14380 = !DISubroutineType(types: !14381)
!14381 = !{!14303, !14340, !14303}
!14382 = !{!14383, !14384}
!14383 = !DILocalVariable(name: "list", arg: 1, scope: !14379, file: !221, line: 341, type: !14340)
!14384 = !DILocalVariable(name: "node", arg: 2, scope: !14379, file: !221, line: 342, type: !14303)
!14385 = !DILocation(line: 0, scope: !14379)
!14386 = !DILocation(line: 344, column: 15, scope: !14379)
!14387 = !DILocation(line: 344, column: 9, scope: !14379)
!14388 = !DILocation(line: 344, column: 26, scope: !14379)
!14389 = !DILocation(line: 344, column: 2, scope: !14379)
!14390 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !221, file: !221, line: 325, type: !14380, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14391)
!14391 = !{!14392, !14393}
!14392 = !DILocalVariable(name: "list", arg: 1, scope: !14390, file: !221, line: 325, type: !14340)
!14393 = !DILocalVariable(name: "node", arg: 2, scope: !14390, file: !221, line: 326, type: !14303)
!14394 = !DILocation(line: 0, scope: !14390)
!14395 = !DILocation(line: 328, column: 24, scope: !14390)
!14396 = !DILocation(line: 328, column: 15, scope: !14390)
!14397 = !DILocation(line: 328, column: 9, scope: !14390)
!14398 = !DILocation(line: 328, column: 45, scope: !14390)
!14399 = !DILocation(line: 328, column: 2, scope: !14390)
!14400 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !221, file: !221, line: 294, type: !14401, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14403)
!14401 = !DISubroutineType(types: !14402)
!14402 = !{!14303, !14340}
!14403 = !{!14404}
!14404 = !DILocalVariable(name: "list", arg: 1, scope: !14400, file: !221, line: 294, type: !14340)
!14405 = !DILocation(line: 0, scope: !14400)
!14406 = !DILocation(line: 296, column: 9, scope: !14400)
!14407 = !DILocation(line: 296, column: 2, scope: !14400)
!14408 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !221, file: !221, line: 266, type: !14409, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14411)
!14409 = !DISubroutineType(types: !14410)
!14410 = !{!157, !14340}
!14411 = !{!14412}
!14412 = !DILocalVariable(name: "list", arg: 1, scope: !14408, file: !221, line: 266, type: !14340)
!14413 = !DILocation(line: 0, scope: !14408)
!14414 = !DILocation(line: 268, column: 15, scope: !14408)
!14415 = !DILocation(line: 268, column: 20, scope: !14408)
!14416 = !DILocation(line: 268, column: 2, scope: !14408)
!14417 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2145, file: !2145, line: 150, type: !14418, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14420)
!14418 = !DISubroutineType(types: !14419)
!14419 = !{!103, !2118}
!14420 = !{!14421, !14422, !14423, !14425}
!14421 = !DILocalVariable(name: "to", arg: 1, scope: !14417, file: !2145, line: 150, type: !2118)
!14422 = !DILocalVariable(name: "ret", scope: !14417, file: !2145, line: 152, type: !103)
!14423 = !DILocalVariable(name: "__i", scope: !14424, file: !2145, line: 154, type: !14186)
!14424 = distinct !DILexicalBlock(scope: !14417, file: !2145, line: 154, column: 2)
!14425 = !DILocalVariable(name: "__key", scope: !14424, file: !2145, line: 154, type: !14186)
!14426 = !DILocation(line: 0, scope: !14417)
!14427 = !DILocation(line: 0, scope: !14424)
!14428 = !DILocation(line: 0, scope: !14208, inlinedAt: !14429)
!14429 = distinct !DILocation(line: 154, column: 2, scope: !14424)
!14430 = !DILocation(line: 55, column: 2, scope: !14217, inlinedAt: !14431)
!14431 = distinct !DILocation(line: 145, column: 10, scope: !14208, inlinedAt: !14429)
!14432 = !DILocation(line: 0, scope: !14217, inlinedAt: !14431)
!14433 = !DILocation(line: 155, column: 7, scope: !14434)
!14434 = distinct !DILexicalBlock(scope: !14435, file: !2145, line: 155, column: 7)
!14435 = distinct !DILexicalBlock(scope: !14436, file: !2145, line: 154, column: 24)
!14436 = distinct !DILexicalBlock(scope: !14424, file: !2145, line: 154, column: 2)
!14437 = !DILocation(line: 155, column: 7, scope: !14435)
!14438 = !DILocation(line: 156, column: 4, scope: !14439)
!14439 = distinct !DILexicalBlock(scope: !14434, file: !2145, line: 155, column: 39)
!14440 = !DILocation(line: 158, column: 3, scope: !14439)
!14441 = !DILocation(line: 0, scope: !14276, inlinedAt: !14442)
!14442 = distinct !DILocation(line: 154, column: 2, scope: !14436)
!14443 = !DILocation(line: 0, scope: !14284, inlinedAt: !14444)
!14444 = distinct !DILocation(line: 215, column: 2, scope: !14276, inlinedAt: !14442)
!14445 = !DILocation(line: 95, column: 2, scope: !14284, inlinedAt: !14444)
!14446 = !DILocation(line: 161, column: 2, scope: !14417)
!14447 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !221, file: !221, line: 225, type: !14448, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14452)
!14448 = !DISubroutineType(types: !14449)
!14449 = !{!157, !14450}
!14450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14451, size: 32)
!14451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2122)
!14452 = !{!14453}
!14453 = !DILocalVariable(name: "node", arg: 1, scope: !14447, file: !221, line: 225, type: !14450)
!14454 = !DILocation(line: 0, scope: !14447)
!14455 = !DILocation(line: 227, column: 15, scope: !14447)
!14456 = !DILocation(line: 227, column: 20, scope: !14447)
!14457 = !DILocation(line: 227, column: 2, scope: !14447)
!14458 = distinct !DISubprogram(name: "remove_timeout", scope: !2145, file: !2145, line: 53, type: !2139, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14459)
!14459 = !{!14460}
!14460 = !DILocalVariable(name: "t", arg: 1, scope: !14458, file: !2145, line: 53, type: !2118)
!14461 = !DILocation(line: 0, scope: !14458)
!14462 = !DILocation(line: 55, column: 6, scope: !14463)
!14463 = distinct !DILexicalBlock(scope: !14458, file: !2145, line: 55, column: 6)
!14464 = !DILocation(line: 55, column: 14, scope: !14463)
!14465 = !DILocation(line: 55, column: 6, scope: !14458)
!14466 = !DILocation(line: 56, column: 25, scope: !14467)
!14467 = distinct !DILexicalBlock(scope: !14463, file: !2145, line: 55, column: 23)
!14468 = !DILocation(line: 56, column: 12, scope: !14467)
!14469 = !DILocation(line: 56, column: 19, scope: !14467)
!14470 = !DILocation(line: 57, column: 2, scope: !14467)
!14471 = !DILocation(line: 59, column: 23, scope: !14458)
!14472 = !DILocation(line: 59, column: 2, scope: !14458)
!14473 = !DILocation(line: 60, column: 1, scope: !14458)
!14474 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !221, file: !221, line: 496, type: !14475, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14477)
!14475 = !DISubroutineType(types: !14476)
!14476 = !{null, !14303}
!14477 = !{!14478, !14479, !14480}
!14478 = !DILocalVariable(name: "node", arg: 1, scope: !14474, file: !221, line: 496, type: !14303)
!14479 = !DILocalVariable(name: "prev", scope: !14474, file: !221, line: 498, type: !14315)
!14480 = !DILocalVariable(name: "next", scope: !14474, file: !221, line: 499, type: !14315)
!14481 = !DILocation(line: 0, scope: !14474)
!14482 = !DILocation(line: 498, column: 34, scope: !14474)
!14483 = !DILocation(line: 499, column: 34, scope: !14474)
!14484 = !DILocation(line: 501, column: 8, scope: !14474)
!14485 = !DILocation(line: 501, column: 13, scope: !14474)
!14486 = !DILocation(line: 502, column: 8, scope: !14474)
!14487 = !DILocation(line: 502, column: 13, scope: !14474)
!14488 = !DILocation(line: 503, column: 2, scope: !14474)
!14489 = !DILocation(line: 504, column: 1, scope: !14474)
!14490 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !14475, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14491)
!14491 = !{!14492}
!14492 = !DILocalVariable(name: "node", arg: 1, scope: !14490, file: !221, line: 211, type: !14303)
!14493 = !DILocation(line: 0, scope: !14490)
!14494 = !DILocation(line: 213, column: 8, scope: !14490)
!14495 = !DILocation(line: 213, column: 13, scope: !14490)
!14496 = !DILocation(line: 214, column: 8, scope: !14490)
!14497 = !DILocation(line: 214, column: 13, scope: !14490)
!14498 = !DILocation(line: 215, column: 1, scope: !14490)
!14499 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2145, file: !2145, line: 183, type: !14500, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14504)
!14500 = !DISubroutineType(types: !14501)
!14501 = !{!1358, !14502}
!14502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14503, size: 32)
!14503 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2119)
!14504 = !{!14505, !14506, !14507, !14509}
!14505 = !DILocalVariable(name: "timeout", arg: 1, scope: !14499, file: !2145, line: 183, type: !14502)
!14506 = !DILocalVariable(name: "ticks", scope: !14499, file: !2145, line: 185, type: !1358)
!14507 = !DILocalVariable(name: "__i", scope: !14508, file: !2145, line: 187, type: !14186)
!14508 = distinct !DILexicalBlock(scope: !14499, file: !2145, line: 187, column: 2)
!14509 = !DILocalVariable(name: "__key", scope: !14508, file: !2145, line: 187, type: !14186)
!14510 = !DILocation(line: 0, scope: !14499)
!14511 = !DILocation(line: 0, scope: !14508)
!14512 = !DILocation(line: 0, scope: !14208, inlinedAt: !14513)
!14513 = distinct !DILocation(line: 187, column: 2, scope: !14508)
!14514 = !DILocation(line: 55, column: 2, scope: !14217, inlinedAt: !14515)
!14515 = distinct !DILocation(line: 145, column: 10, scope: !14208, inlinedAt: !14513)
!14516 = !DILocation(line: 0, scope: !14217, inlinedAt: !14515)
!14517 = !DILocation(line: 188, column: 11, scope: !14518)
!14518 = distinct !DILexicalBlock(scope: !14519, file: !2145, line: 187, column: 24)
!14519 = distinct !DILexicalBlock(scope: !14508, file: !2145, line: 187, column: 2)
!14520 = !DILocation(line: 0, scope: !14276, inlinedAt: !14521)
!14521 = distinct !DILocation(line: 187, column: 2, scope: !14519)
!14522 = !DILocation(line: 0, scope: !14284, inlinedAt: !14523)
!14523 = distinct !DILocation(line: 215, column: 2, scope: !14276, inlinedAt: !14521)
!14524 = !DILocation(line: 95, column: 2, scope: !14284, inlinedAt: !14523)
!14525 = !DILocation(line: 191, column: 2, scope: !14499)
!14526 = distinct !DISubprogram(name: "timeout_rem", scope: !2145, file: !2145, line: 165, type: !14500, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14527)
!14527 = !{!14528, !14529, !14530}
!14528 = !DILocalVariable(name: "timeout", arg: 1, scope: !14526, file: !2145, line: 165, type: !14502)
!14529 = !DILocalVariable(name: "ticks", scope: !14526, file: !2145, line: 167, type: !1358)
!14530 = !DILocalVariable(name: "t", scope: !14531, file: !2145, line: 173, type: !2118)
!14531 = distinct !DILexicalBlock(scope: !14526, file: !2145, line: 173, column: 2)
!14532 = !DILocation(line: 0, scope: !14526)
!14533 = !DILocation(line: 169, column: 6, scope: !14534)
!14534 = distinct !DILexicalBlock(scope: !14526, file: !2145, line: 169, column: 6)
!14535 = !DILocation(line: 169, column: 6, scope: !14526)
!14536 = !DILocation(line: 173, column: 28, scope: !14531)
!14537 = !DILocation(line: 0, scope: !14531)
!14538 = !DILocation(line: 173, column: 39, scope: !14539)
!14539 = distinct !DILexicalBlock(scope: !14531, file: !2145, line: 173, column: 2)
!14540 = !DILocation(line: 173, column: 2, scope: !14531)
!14541 = !DILocation(line: 174, column: 15, scope: !14542)
!14542 = distinct !DILexicalBlock(scope: !14539, file: !2145, line: 173, column: 61)
!14543 = !DILocation(line: 174, column: 9, scope: !14542)
!14544 = !DILocation(line: 175, column: 15, scope: !14545)
!14545 = distinct !DILexicalBlock(scope: !14542, file: !2145, line: 175, column: 7)
!14546 = !DILocation(line: 175, column: 7, scope: !14542)
!14547 = !DILocation(line: 173, column: 52, scope: !14539)
!14548 = distinct !{!14548, !14540, !14549}
!14549 = !DILocation(line: 178, column: 2, scope: !14531)
!14550 = !DILocation(line: 180, column: 17, scope: !14526)
!14551 = !DILocation(line: 180, column: 15, scope: !14526)
!14552 = !DILocation(line: 180, column: 2, scope: !14526)
!14553 = !DILocation(line: 181, column: 1, scope: !14526)
!14554 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11864, file: !11864, line: 35, type: !14555, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14557)
!14555 = !DISubroutineType(types: !14556)
!14556 = !{!157, !14502}
!14557 = !{!14558}
!14558 = !DILocalVariable(name: "to", arg: 1, scope: !14554, file: !11864, line: 35, type: !14502)
!14559 = !DILocation(line: 0, scope: !14554)
!14560 = !DILocation(line: 37, column: 35, scope: !14554)
!14561 = !DILocation(line: 37, column: 10, scope: !14554)
!14562 = !DILocation(line: 37, column: 9, scope: !14554)
!14563 = !DILocation(line: 37, column: 2, scope: !14554)
!14564 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2145, file: !2145, line: 194, type: !14500, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14565)
!14565 = !{!14566, !14567, !14568, !14570}
!14566 = !DILocalVariable(name: "timeout", arg: 1, scope: !14564, file: !2145, line: 194, type: !14502)
!14567 = !DILocalVariable(name: "ticks", scope: !14564, file: !2145, line: 196, type: !1358)
!14568 = !DILocalVariable(name: "__i", scope: !14569, file: !2145, line: 198, type: !14186)
!14569 = distinct !DILexicalBlock(scope: !14564, file: !2145, line: 198, column: 2)
!14570 = !DILocalVariable(name: "__key", scope: !14569, file: !2145, line: 198, type: !14186)
!14571 = !DILocation(line: 0, scope: !14564)
!14572 = !DILocation(line: 0, scope: !14569)
!14573 = !DILocation(line: 0, scope: !14208, inlinedAt: !14574)
!14574 = distinct !DILocation(line: 198, column: 2, scope: !14569)
!14575 = !DILocation(line: 55, column: 2, scope: !14217, inlinedAt: !14576)
!14576 = distinct !DILocation(line: 145, column: 10, scope: !14208, inlinedAt: !14574)
!14577 = !DILocation(line: 0, scope: !14217, inlinedAt: !14576)
!14578 = !DILocation(line: 199, column: 11, scope: !14579)
!14579 = distinct !DILexicalBlock(scope: !14580, file: !2145, line: 198, column: 24)
!14580 = distinct !DILexicalBlock(scope: !14569, file: !2145, line: 198, column: 2)
!14581 = !DILocation(line: 199, column: 23, scope: !14579)
!14582 = !DILocation(line: 0, scope: !14276, inlinedAt: !14583)
!14583 = distinct !DILocation(line: 198, column: 2, scope: !14580)
!14584 = !DILocation(line: 0, scope: !14284, inlinedAt: !14585)
!14585 = distinct !DILocation(line: 215, column: 2, scope: !14276, inlinedAt: !14583)
!14586 = !DILocation(line: 95, column: 2, scope: !14284, inlinedAt: !14585)
!14587 = !DILocation(line: 199, column: 21, scope: !14579)
!14588 = !DILocation(line: 202, column: 2, scope: !14564)
!14589 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2145, file: !2145, line: 205, type: !14292, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14590)
!14590 = !{!14591, !14592, !14594}
!14591 = !DILocalVariable(name: "ret", scope: !14589, file: !2145, line: 207, type: !566)
!14592 = !DILocalVariable(name: "__i", scope: !14593, file: !2145, line: 209, type: !14186)
!14593 = distinct !DILexicalBlock(scope: !14589, file: !2145, line: 209, column: 2)
!14594 = !DILocalVariable(name: "__key", scope: !14593, file: !2145, line: 209, type: !14186)
!14595 = !DILocation(line: 0, scope: !14589)
!14596 = !DILocation(line: 0, scope: !14593)
!14597 = !DILocation(line: 0, scope: !14208, inlinedAt: !14598)
!14598 = distinct !DILocation(line: 209, column: 2, scope: !14593)
!14599 = !DILocation(line: 55, column: 2, scope: !14217, inlinedAt: !14600)
!14600 = distinct !DILocation(line: 145, column: 10, scope: !14208, inlinedAt: !14598)
!14601 = !DILocation(line: 0, scope: !14217, inlinedAt: !14600)
!14602 = !DILocation(line: 210, column: 9, scope: !14603)
!14603 = distinct !DILexicalBlock(scope: !14604, file: !2145, line: 209, column: 24)
!14604 = distinct !DILexicalBlock(scope: !14593, file: !2145, line: 209, column: 2)
!14605 = !DILocation(line: 0, scope: !14276, inlinedAt: !14606)
!14606 = distinct !DILocation(line: 209, column: 2, scope: !14604)
!14607 = !DILocation(line: 0, scope: !14284, inlinedAt: !14608)
!14608 = distinct !DILocation(line: 215, column: 2, scope: !14276, inlinedAt: !14606)
!14609 = !DILocation(line: 95, column: 2, scope: !14284, inlinedAt: !14608)
!14610 = !DILocation(line: 212, column: 2, scope: !14589)
!14611 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2145, file: !2145, line: 215, type: !9474, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14612)
!14612 = !{!14613, !14614, !14615, !14617, !14618, !14621, !14622}
!14613 = !DILocalVariable(name: "ticks", arg: 1, scope: !14611, file: !2145, line: 215, type: !566)
!14614 = !DILocalVariable(name: "is_idle", arg: 2, scope: !14611, file: !2145, line: 215, type: !157)
!14615 = !DILocalVariable(name: "__i", scope: !14616, file: !2145, line: 217, type: !14186)
!14616 = distinct !DILexicalBlock(scope: !14611, file: !2145, line: 217, column: 2)
!14617 = !DILocalVariable(name: "__key", scope: !14616, file: !2145, line: 217, type: !14186)
!14618 = !DILocalVariable(name: "next_to", scope: !14619, file: !2145, line: 218, type: !103)
!14619 = distinct !DILexicalBlock(scope: !14620, file: !2145, line: 217, column: 24)
!14620 = distinct !DILexicalBlock(scope: !14616, file: !2145, line: 217, column: 2)
!14621 = !DILocalVariable(name: "sooner", scope: !14619, file: !2145, line: 219, type: !157)
!14622 = !DILocalVariable(name: "imminent", scope: !14619, file: !2145, line: 221, type: !157)
!14623 = !DILocation(line: 0, scope: !14611)
!14624 = !DILocation(line: 0, scope: !14616)
!14625 = !DILocation(line: 0, scope: !14208, inlinedAt: !14626)
!14626 = distinct !DILocation(line: 217, column: 2, scope: !14616)
!14627 = !DILocation(line: 55, column: 2, scope: !14217, inlinedAt: !14628)
!14628 = distinct !DILocation(line: 145, column: 10, scope: !14208, inlinedAt: !14626)
!14629 = !DILocation(line: 0, scope: !14217, inlinedAt: !14628)
!14630 = !DILocation(line: 218, column: 17, scope: !14619)
!14631 = !DILocation(line: 0, scope: !14619)
!14632 = !DILocation(line: 221, column: 27, scope: !14619)
!14633 = !DILocation(line: 233, column: 17, scope: !14634)
!14634 = distinct !DILexicalBlock(scope: !14619, file: !2145, line: 233, column: 7)
!14635 = !DILocation(line: 234, column: 26, scope: !14636)
!14636 = distinct !DILexicalBlock(scope: !14634, file: !2145, line: 233, column: 56)
!14637 = !DILocation(line: 234, column: 4, scope: !14636)
!14638 = !DILocation(line: 235, column: 3, scope: !14636)
!14639 = !DILocation(line: 0, scope: !14276, inlinedAt: !14640)
!14640 = distinct !DILocation(line: 217, column: 2, scope: !14620)
!14641 = !DILocation(line: 0, scope: !14284, inlinedAt: !14642)
!14642 = distinct !DILocation(line: 215, column: 2, scope: !14276, inlinedAt: !14640)
!14643 = !DILocation(line: 95, column: 2, scope: !14284, inlinedAt: !14642)
!14644 = !DILocation(line: 237, column: 1, scope: !14611)
!14645 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2145, file: !2145, line: 239, type: !14646, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14648)
!14646 = !DISubroutineType(types: !14647)
!14647 = !{null, !566}
!14648 = !{!14649, !14650, !14651, !14653}
!14649 = !DILocalVariable(name: "ticks", arg: 1, scope: !14645, file: !2145, line: 239, type: !566)
!14650 = !DILocalVariable(name: "key", scope: !14645, file: !2145, line: 245, type: !14186)
!14651 = !DILocalVariable(name: "t", scope: !14652, file: !2145, line: 262, type: !2118)
!14652 = distinct !DILexicalBlock(scope: !14645, file: !2145, line: 261, column: 67)
!14653 = !DILocalVariable(name: "dt", scope: !14652, file: !2145, line: 263, type: !103)
!14654 = !DILocation(line: 0, scope: !14645)
!14655 = !DILocation(line: 242, column: 2, scope: !14645)
!14656 = !DILocation(line: 0, scope: !14208, inlinedAt: !14657)
!14657 = distinct !DILocation(line: 245, column: 25, scope: !14645)
!14658 = !DILocation(line: 55, column: 2, scope: !14217, inlinedAt: !14659)
!14659 = distinct !DILocation(line: 145, column: 10, scope: !14208, inlinedAt: !14657)
!14660 = !DILocation(line: 0, scope: !14217, inlinedAt: !14659)
!14661 = !DILocation(line: 261, column: 9, scope: !14645)
!14662 = !DILocation(line: 261, column: 17, scope: !14645)
!14663 = !DILocation(line: 261, column: 25, scope: !14645)
!14664 = !DILocation(line: 261, column: 37, scope: !14645)
!14665 = !DILocation(line: 261, column: 47, scope: !14645)
!14666 = !DILocation(line: 261, column: 44, scope: !14645)
!14667 = !DILocation(line: 261, column: 2, scope: !14645)
!14668 = !DILocation(line: 0, scope: !14652)
!14669 = !DILocation(line: 263, column: 12, scope: !14652)
!14670 = !DILocation(line: 265, column: 16, scope: !14652)
!14671 = !DILocation(line: 265, column: 13, scope: !14652)
!14672 = !DILocation(line: 266, column: 13, scope: !14652)
!14673 = !DILocation(line: 267, column: 3, scope: !14652)
!14674 = !DILocation(line: 0, scope: !14276, inlinedAt: !14675)
!14675 = distinct !DILocation(line: 269, column: 3, scope: !14652)
!14676 = !DILocation(line: 0, scope: !14284, inlinedAt: !14677)
!14677 = distinct !DILocation(line: 215, column: 2, scope: !14276, inlinedAt: !14675)
!14678 = !DILocation(line: 95, column: 2, scope: !14284, inlinedAt: !14677)
!14679 = !DILocation(line: 270, column: 6, scope: !14652)
!14680 = !DILocation(line: 270, column: 3, scope: !14652)
!14681 = !DILocation(line: 0, scope: !14208, inlinedAt: !14682)
!14682 = distinct !DILocation(line: 271, column: 9, scope: !14652)
!14683 = !DILocation(line: 55, column: 2, scope: !14217, inlinedAt: !14684)
!14684 = distinct !DILocation(line: 145, column: 10, scope: !14208, inlinedAt: !14682)
!14685 = !DILocation(line: 0, scope: !14217, inlinedAt: !14684)
!14686 = !DILocation(line: 272, column: 22, scope: !14652)
!14687 = distinct !{!14687, !14667, !14688}
!14688 = !DILocation(line: 273, column: 2, scope: !14645)
!14689 = !DILocation(line: 276, column: 19, scope: !14690)
!14690 = distinct !DILexicalBlock(scope: !14691, file: !2145, line: 275, column: 23)
!14691 = distinct !DILexicalBlock(scope: !14645, file: !2145, line: 275, column: 6)
!14692 = !DILocation(line: 277, column: 2, scope: !14690)
!14693 = !DILocation(line: 279, column: 15, scope: !14645)
!14694 = !DILocation(line: 279, column: 12, scope: !14645)
!14695 = !DILocation(line: 280, column: 21, scope: !14645)
!14696 = !DILocation(line: 282, column: 24, scope: !14645)
!14697 = !DILocation(line: 282, column: 2, scope: !14645)
!14698 = !DILocation(line: 0, scope: !14276, inlinedAt: !14699)
!14699 = distinct !DILocation(line: 284, column: 2, scope: !14645)
!14700 = !DILocation(line: 0, scope: !14284, inlinedAt: !14701)
!14701 = distinct !DILocation(line: 215, column: 2, scope: !14276, inlinedAt: !14699)
!14702 = !DILocation(line: 95, column: 2, scope: !14284, inlinedAt: !14701)
!14703 = !DILocation(line: 285, column: 1, scope: !14645)
!14704 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2145, file: !2145, line: 287, type: !14705, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14707)
!14705 = !DISubroutineType(types: !14706)
!14706 = !{!280}
!14707 = !{!14708, !14709, !14711}
!14708 = !DILocalVariable(name: "t", scope: !14704, file: !2145, line: 289, type: !1270)
!14709 = !DILocalVariable(name: "__i", scope: !14710, file: !2145, line: 291, type: !14186)
!14710 = distinct !DILexicalBlock(scope: !14704, file: !2145, line: 291, column: 2)
!14711 = !DILocalVariable(name: "__key", scope: !14710, file: !2145, line: 291, type: !14186)
!14712 = !DILocation(line: 0, scope: !14704)
!14713 = !DILocation(line: 0, scope: !14710)
!14714 = !DILocation(line: 0, scope: !14208, inlinedAt: !14715)
!14715 = distinct !DILocation(line: 291, column: 2, scope: !14710)
!14716 = !DILocation(line: 55, column: 2, scope: !14217, inlinedAt: !14717)
!14717 = distinct !DILocation(line: 145, column: 10, scope: !14208, inlinedAt: !14715)
!14718 = !DILocation(line: 0, scope: !14217, inlinedAt: !14717)
!14719 = !DILocation(line: 292, column: 7, scope: !14720)
!14720 = distinct !DILexicalBlock(scope: !14721, file: !2145, line: 291, column: 24)
!14721 = distinct !DILexicalBlock(scope: !14710, file: !2145, line: 291, column: 2)
!14722 = !DILocation(line: 292, column: 19, scope: !14720)
!14723 = !DILocation(line: 0, scope: !14276, inlinedAt: !14724)
!14724 = distinct !DILocation(line: 291, column: 2, scope: !14721)
!14725 = !DILocation(line: 0, scope: !14284, inlinedAt: !14726)
!14726 = distinct !DILocation(line: 215, column: 2, scope: !14276, inlinedAt: !14724)
!14727 = !DILocation(line: 95, column: 2, scope: !14284, inlinedAt: !14726)
!14728 = !DILocation(line: 292, column: 17, scope: !14720)
!14729 = !DILocation(line: 294, column: 2, scope: !14704)
!14730 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2145, file: !2145, line: 297, type: !5545, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !322)
!14731 = !DILocation(line: 300, column: 19, scope: !14730)
!14732 = !DILocation(line: 300, column: 9, scope: !14730)
!14733 = !DILocation(line: 300, column: 2, scope: !14730)
!14734 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2145, file: !2145, line: 306, type: !14705, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !322)
!14735 = !DILocation(line: 308, column: 9, scope: !14734)
!14736 = !DILocation(line: 308, column: 2, scope: !14734)
!14737 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2145, file: !2145, line: 319, type: !5555, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14738)
!14738 = !{!14739, !14740, !14741, !14742}
!14739 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !14737, file: !2145, line: 319, type: !121)
!14740 = !DILocalVariable(name: "start_cycles", scope: !14737, file: !2145, line: 328, type: !121)
!14741 = !DILocalVariable(name: "cycles_to_wait", scope: !14737, file: !2145, line: 331, type: !121)
!14742 = !DILocalVariable(name: "current_cycles", scope: !14743, file: !2145, line: 338, type: !121)
!14743 = distinct !DILexicalBlock(scope: !14744, file: !2145, line: 337, column: 11)
!14744 = distinct !DILexicalBlock(scope: !14745, file: !2145, line: 337, column: 2)
!14745 = distinct !DILexicalBlock(scope: !14737, file: !2145, line: 337, column: 2)
!14746 = !DILocation(line: 0, scope: !14737)
!14747 = !DILocation(line: 322, column: 19, scope: !14748)
!14748 = distinct !DILexicalBlock(scope: !14737, file: !2145, line: 322, column: 6)
!14749 = !DILocation(line: 322, column: 6, scope: !14737)
!14750 = !DILocation(line: 328, column: 26, scope: !14737)
!14751 = !DILocation(line: 333, column: 43, scope: !14737)
!14752 = !DILocation(line: 337, column: 2, scope: !14737)
!14753 = !DILocation(line: 338, column: 29, scope: !14743)
!14754 = !DILocation(line: 0, scope: !14743)
!14755 = !DILocation(line: 341, column: 23, scope: !14756)
!14756 = distinct !DILexicalBlock(scope: !14743, file: !2145, line: 341, column: 7)
!14757 = !DILocation(line: 341, column: 39, scope: !14756)
!14758 = !DILocation(line: 349, column: 1, scope: !14737)
!14759 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !307, file: !307, line: 1675, type: !5545, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !322)
!14760 = !DILocation(line: 1677, column: 9, scope: !14759)
!14761 = !DILocation(line: 1677, column: 2, scope: !14759)
!14762 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !14763, file: !14763, line: 24, type: !5545, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !322)
!14763 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14764 = !DILocation(line: 26, column: 9, scope: !14762)
!14765 = !DILocation(line: 26, column: 2, scope: !14762)
!14766 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2145, file: !2145, line: 364, type: !14767, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14769)
!14767 = !DISubroutineType(types: !14768)
!14768 = !{!1270, !14176}
!14769 = !{!14770, !14771}
!14770 = !DILocalVariable(name: "timeout", arg: 1, scope: !14766, file: !2145, line: 364, type: !14176)
!14771 = !DILocalVariable(name: "dt", scope: !14766, file: !2145, line: 366, type: !1358)
!14772 = !DILocation(line: 0, scope: !14766)
!14773 = !DILocation(line: 368, column: 6, scope: !14766)
!14774 = !DILocation(line: 371, column: 10, scope: !14775)
!14775 = distinct !DILexicalBlock(scope: !14776, file: !2145, line: 370, column: 47)
!14776 = distinct !DILexicalBlock(scope: !14777, file: !2145, line: 370, column: 13)
!14777 = distinct !DILexicalBlock(scope: !14766, file: !2145, line: 368, column: 6)
!14778 = !DILocation(line: 371, column: 3, scope: !14775)
!14779 = !DILocation(line: 376, column: 58, scope: !14780)
!14780 = distinct !DILexicalBlock(scope: !14781, file: !2145, line: 376, column: 7)
!14781 = distinct !DILexicalBlock(scope: !14776, file: !2145, line: 372, column: 9)
!14782 = !DILocation(line: 376, column: 7, scope: !14781)
!14783 = !DILocation(line: 376, column: 43, scope: !14780)
!14784 = !DILocation(line: 377, column: 4, scope: !14785)
!14785 = distinct !DILexicalBlock(scope: !14780, file: !2145, line: 376, column: 64)
!14786 = !DILocation(line: 379, column: 10, scope: !14781)
!14787 = !DILocation(line: 379, column: 33, scope: !14781)
!14788 = !DILocation(line: 379, column: 31, scope: !14781)
!14789 = !DILocation(line: 379, column: 3, scope: !14781)
!14790 = !DILocation(line: 0, scope: !14777)
!14791 = !DILocation(line: 381, column: 1, scope: !14766)
!14792 = distinct !DISubprogram(name: "boot_banner", scope: !14793, file: !14793, line: 26, type: !2904, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !322)
!14793 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14794 = !DILocation(line: 34, column: 2, scope: !14792)
!14795 = !DILocation(line: 36, column: 1, scope: !14792)
