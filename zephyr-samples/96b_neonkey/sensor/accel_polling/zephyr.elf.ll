; ModuleID = 'build/96b_neonkey/accel_polling/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %union.anon.1 }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %union.anon.1, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %union.anon.1, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %union.anon.1, %union.anon.1 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %union.anon.1*, %union.anon.1* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [86 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [86 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231856 to i8*), void (i8*)* inttoptr (i32 134230003 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231856 to i8*), void (i8*)* inttoptr (i32 134229983 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231856 to i8*), void (i8*)* inttoptr (i32 134229973 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231856 to i8*), void (i8*)* inttoptr (i32 134230073 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231856 to i8*), void (i8*)* inttoptr (i32 134230063 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231856 to i8*), void (i8*)* inttoptr (i32 134230053 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231856 to i8*), void (i8*)* inttoptr (i32 134230043 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231856 to i8*), void (i8*)* inttoptr (i32 134230033 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231856 to i8*), void (i8*)* inttoptr (i32 134230023 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231856 to i8*), void (i8*)* inttoptr (i32 134230013 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231856 to i8*), void (i8*)* inttoptr (i32 134229993 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [37 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !166
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %union.anon.1 { i32 101384192 } }], align 4, !dbg !195
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !203
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !349
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !385
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i32 0, i32 0), %union.anon.1 { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), %union.anon.1 { i32 285933600 } }], align 4, !dbg !395
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !400
@.str.25 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !420
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !593
@.str.26 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !554
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !537
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !510
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !526
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !556
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !570
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !572
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !574
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !576
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !578
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !580
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !582
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !584
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !586
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !588
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !598
@.str.28 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !625
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !722
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !711
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 -134, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !763
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !618
@.str.37 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !829
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1106
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1076
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1062
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1007
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !616
@.str.1.38 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1108
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1080
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1078
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1024
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !614
@.str.2 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1121
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1084
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1082
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1030
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !612
@.str.3 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1123
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1088
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1086
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1036
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !610
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1125
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1092
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1090
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1042
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !608
@.str.5 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1127
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1096
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1094
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1048
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !606
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1129
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1100
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1098
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1054
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !604
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1131
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1104
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1102
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1060
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !620
@.str.44 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1133
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1328
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1289
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1330
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1280
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1282
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1291
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1299
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1322
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1325
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !695
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1352
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1461
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1463
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1459
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1430
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1465
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1005
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.38, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1022
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1028
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1034
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1040
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1046
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1052
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1058
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1555
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1597
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1600
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1607
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1614
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !1824
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1833
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !1840
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1845
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.91 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.94, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.95, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.96, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.97, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.98, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.92, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.99, i32 0, i32 0)], align 4, !dbg !1873
@.str.93 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.94 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.95 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.96 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.97 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.98 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.92 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.99 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !1985
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !1998
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2106
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2109
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2111
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1838
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1835
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2113
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2149
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1702
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2147
@.str.154 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2911 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !2915, !srcloc !2916
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !2917, !srcloc !2918
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !2919, !srcloc !2920
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !2921, !srcloc !2922
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2923, !srcloc !2924
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !2925, !srcloc !2926
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !2927, !srcloc !2928
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !2929, !srcloc !2930
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !2931, !srcloc !2932
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !2933, !srcloc !2934
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !2935, !srcloc !2936
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !2937, !srcloc !2938
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !2939, !srcloc !2940
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !2941, !srcloc !2942
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !2943, !srcloc !2944
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !2945, !srcloc !2946
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !2947, !srcloc !2948
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !2949, !srcloc !2950
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2951, !srcloc !2952
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !2953, !srcloc !2954
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !2955, !srcloc !2956
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2957, !srcloc !2958
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !2959, !srcloc !2960
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2961, !srcloc !2962
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !2963, !srcloc !2964
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !2965, !srcloc !2966
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !2967, !srcloc !2968
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !2969, !srcloc !2972
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !2973, !srcloc !2974
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2975, !srcloc !2976
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2977, !srcloc !2978
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2979, !srcloc !2980
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2981, !srcloc !2982
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !2983, !srcloc !2984
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !2985, !srcloc !2986
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !2987, !srcloc !2988
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !2989, !srcloc !2990
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2991, !srcloc !2992
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2993, !srcloc !2994
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2995, !srcloc !2996
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2997, !srcloc !2998
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2999, !srcloc !3000
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3001, !srcloc !3002
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3003, !srcloc !3004
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3005, !srcloc !3006
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3007, !srcloc !3008
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3009, !srcloc !3010
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3011, !srcloc !3012
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3013, !srcloc !3014
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3015, !srcloc !3016
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3017, !srcloc !3018
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3019, !srcloc !3020
  ret void, !dbg !3021
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3024 {
  br label %1

1:                                                ; preds = %0, %1
  tail call fastcc void @k_msleep() #24, !dbg !3032
  br label %1, !dbg !3033, !llvm.loop !3034
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep() unnamed_addr #1 !dbg !3036 {
  call void @llvm.dbg.value(metadata i32 1000, metadata !3040, metadata !DIExpression()), !dbg !3041
  tail call fastcc void @k_sleep([1 x i64] [i64 10000]) #24, !dbg !3042
  ret void, !dbg !3043
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3044 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3053, metadata !DIExpression()), !dbg !3054
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3055, !srcloc !3057
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3058
  ret void, !dbg !3059
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3060 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3062, metadata !DIExpression()), !dbg !3063
  ret i32 0, !dbg !3064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3065 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3069, metadata !DIExpression()), !dbg !3070
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3071
  ret void, !dbg !3072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3073 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3076
  ret i8* %1, !dbg !3077
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3078 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3090, metadata !DIExpression()), !dbg !3099
  call void @llvm.dbg.value(metadata i8* %0, metadata !3089, metadata !DIExpression()), !dbg !3099
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !3100
  ret void, !dbg !3102
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3103 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3107, metadata !DIExpression()), !dbg !3109
  call void @llvm.dbg.value(metadata i8* %1, metadata !3108, metadata !DIExpression()), !dbg !3109
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3110
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !3110
  ret i32 %4, !dbg !3111
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3112 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3124, metadata !DIExpression()), !dbg !3125
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3121, metadata !DIExpression()), !dbg !3125
  call void @llvm.dbg.value(metadata i8* %1, metadata !3122, metadata !DIExpression()), !dbg !3125
  call void @llvm.dbg.value(metadata i8* %2, metadata !3123, metadata !DIExpression()), !dbg !3125
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3126
  ret void, !dbg !3127
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3128 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3132, metadata !DIExpression()), !dbg !3135
  call void @llvm.dbg.value(metadata i32 %1, metadata !3133, metadata !DIExpression()), !dbg !3135
  call void @llvm.dbg.value(metadata i32 0, metadata !3134, metadata !DIExpression()), !dbg !3135
  %3 = icmp eq i32 %1, 0, !dbg !3136
  br i1 %3, label %13, label %4, !dbg !3139

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3134, metadata !DIExpression()), !dbg !3135
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3140
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3142
  %8 = load i8, i8* %7, align 1, !dbg !3142
  %9 = zext i8 %8 to i32, !dbg !3142
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3140
  %11 = add nuw i32 %5, 1, !dbg !3143
  call void @llvm.dbg.value(metadata i32 %11, metadata !3134, metadata !DIExpression()), !dbg !3135
  %12 = icmp eq i32 %11, %1, !dbg !3136
  br i1 %12, label %13, label %4, !dbg !3139, !llvm.loop !3144

13:                                               ; preds = %4, %2
  ret void, !dbg !3146
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3147 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3151, metadata !DIExpression()), !dbg !3153
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3154
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3154
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3152, metadata !DIExpression()), !dbg !3155
  call void @llvm.va_start(i8* nonnull %3), !dbg !3156
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3157
  %5 = load i32, i32* %4, align 4, !dbg !3157
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3157
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !3157
  call void @llvm.va_end(i8* nonnull %3), !dbg !3158
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3159
  ret void, !dbg !3159
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3160 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3164, metadata !DIExpression()), !dbg !3169
  call void @llvm.dbg.value(metadata i32 %1, metadata !3165, metadata !DIExpression()), !dbg !3169
  call void @llvm.dbg.value(metadata i8* %2, metadata !3166, metadata !DIExpression()), !dbg !3169
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3170
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3170
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3167, metadata !DIExpression()), !dbg !3171
  call void @llvm.va_start(i8* nonnull %5), !dbg !3172
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3173
  %7 = load i32, i32* %6, align 4, !dbg !3173
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3173
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !3173
  call void @llvm.dbg.value(metadata i32 %9, metadata !3168, metadata !DIExpression()), !dbg !3169
  call void @llvm.va_end(i8* nonnull %5), !dbg !3174
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3175
  ret i32 %9, !dbg !3176
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3177 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3184, metadata !DIExpression()), !dbg !3191
  call void @llvm.dbg.value(metadata i8* %0, metadata !3181, metadata !DIExpression()), !dbg !3191
  call void @llvm.dbg.value(metadata i32 %1, metadata !3182, metadata !DIExpression()), !dbg !3191
  call void @llvm.dbg.value(metadata i8* %2, metadata !3183, metadata !DIExpression()), !dbg !3191
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3192
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3192
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3185, metadata !DIExpression()), !dbg !3193
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3194
  store i8* %0, i8** %7, align 4, !dbg !3194
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3194
  store i32 %1, i32* %8, align 4, !dbg !3194
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3194
  store i32 0, i32* %9, align 4, !dbg !3194
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !3195
  %10 = load i32, i32* %9, align 4, !dbg !3196
  %11 = load i32, i32* %8, align 4, !dbg !3198
  %12 = icmp slt i32 %10, %11, !dbg !3199
  br i1 %12, label %13, label %15, !dbg !3200

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3201
  store i8 0, i8* %14, align 1, !dbg !3203
  br label %15, !dbg !3204

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3205
  ret i32 %10, !dbg !3206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3207 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3212, metadata !DIExpression()), !dbg !3214
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3213, metadata !DIExpression()), !dbg !3214
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3215
  %4 = load i8*, i8** %3, align 4, !dbg !3215
  %5 = icmp eq i8* %4, null, !dbg !3217
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3218
  br i1 %5, label %12, label %8, !dbg !3219

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3220
  %10 = load i32, i32* %9, align 4, !dbg !3220
  %11 = icmp slt i32 %7, %10, !dbg !3221
  br i1 %11, label %15, label %12, !dbg !3222

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3223
  %14 = add nsw i32 %7, 1, !dbg !3225
  store i32 %14, i32* %13, align 4, !dbg !3225
  br label %25, !dbg !3226

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3227
  %17 = icmp eq i32 %7, %16, !dbg !3229
  br i1 %17, label %18, label %21, !dbg !3230

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3231
  store i32 %19, i32* %6, align 4, !dbg !3231
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3233
  store i8 0, i8* %20, align 1, !dbg !3234
  br label %25, !dbg !3235

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3236
  %23 = add nsw i32 %7, 1, !dbg !3238
  store i32 %23, i32* %6, align 4, !dbg !3238
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3239
  store i8 %22, i8* %24, align 1, !dbg !3240
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3241
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !3242 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3252, metadata !DIExpression()), !dbg !3256
  call void @llvm.dbg.value(metadata i8* %1, metadata !3253, metadata !DIExpression()), !dbg !3256
  call void @llvm.dbg.value(metadata i8* %2, metadata !3254, metadata !DIExpression()), !dbg !3256
  call void @llvm.dbg.value(metadata i8* %3, metadata !3255, metadata !DIExpression()), !dbg !3256
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3257
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !3258
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !3259
  unreachable, !dbg !3260
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3261 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !3365
  ret %struct.k_thread* %1, !dbg !3366
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3367 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3371, metadata !DIExpression()), !dbg !3372
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3373, !srcloc !3375
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3376
  ret void, !dbg !3377
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3378 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3379, !srcloc !3381
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3382
  ret %struct.k_thread* %1, !dbg !3383
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !3384 {
  %6 = alloca [25 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = alloca i8*, align 4
  %9 = alloca i8, align 1
  %10 = extractvalue [1 x i32] %3, 0
  %11 = inttoptr i32 %10 to i8*
  call void @llvm.dbg.value(metadata i8* %11, metadata !3397, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3394, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i8* %1, metadata !3395, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i8* %2, metadata !3396, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i32 %4, metadata !3398, metadata !DIExpression()), !dbg !3555
  %12 = getelementptr inbounds [25 x i8], [25 x i8]* %6, i32 0, i32 0, !dbg !3556
  call void @llvm.lifetime.start.p0i8(i64 25, i8* nonnull %12) #23, !dbg !3556
  call void @llvm.dbg.declare(metadata [25 x i8]* %6, metadata !3399, metadata !DIExpression()), !dbg !3557
  call void @llvm.dbg.value(metadata i32 0, metadata !3403, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i1 undef, metadata !3405, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3555
  %13 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %14 = bitcast %struct.anon* %7 to i8*
  %15 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %16 = bitcast i8** %8 to i8*
  %17 = getelementptr inbounds [25 x i8], [25 x i8]* %6, i32 0, i32 25
  %18 = bitcast %struct.conversion* %15 to i24*
  %19 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %21 = bitcast %struct.anon* %7 to i8**
  %22 = bitcast %struct.anon* %7 to double*
  %23 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %25 = ptrtoint i8* %17 to i32
  %26 = getelementptr inbounds [25 x i8], [25 x i8]* %6, i32 0, i32 1
  br label %27, !dbg !3558

27:                                               ; preds = %477, %5
  %28 = phi i32 [ %478, %477 ], [ 0, %5 ]
  %29 = phi i8* [ %42, %477 ], [ %2, %5 ]
  %30 = phi i8* [ %187, %477 ], [ %11, %5 ]
  br label %31, !dbg !3558

31:                                               ; preds = %27, %35
  %32 = phi i32 [ %40, %35 ], [ %28, %27 ], !dbg !3559
  %33 = phi i8* [ %37, %35 ], [ %29, %27 ]
  call void @llvm.dbg.value(metadata i8* %30, metadata !3397, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i8* %33, metadata !3396, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i32 %32, metadata !3403, metadata !DIExpression()), !dbg !3555
  %34 = load i8, i8* %33, align 1, !dbg !3560
  switch i8 %34, label %35 [
    i8 0, label %479
    i8 37, label %41
  ], !dbg !3558

35:                                               ; preds = %31
  %36 = zext i8 %34 to i32, !dbg !3560
  %37 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !3561
  call void @llvm.dbg.value(metadata i8* %37, metadata !3396, metadata !DIExpression()), !dbg !3555
  %38 = call i32 %13(i32 noundef %36, i8* noundef %1) #25, !dbg !3561
  call void @llvm.dbg.value(metadata i32 %38, metadata !3407, metadata !DIExpression()), !dbg !3562
  %39 = icmp slt i32 %38, 0, !dbg !3563
  %40 = add i32 %32, 1, !dbg !3561
  call void @llvm.dbg.value(metadata i32 undef, metadata !3403, metadata !DIExpression()), !dbg !3555
  br i1 %39, label %479, label %31, !llvm.loop !3565

41:                                               ; preds = %31
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #23, !dbg !3567
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !3412, metadata !DIExpression()), !dbg !3568
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %14, i8 0, i32 24, i1 false), !dbg !3568
  call void @llvm.dbg.value(metadata %struct.conversion* %15, metadata !3456, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !3459, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.value(metadata i8* %33, metadata !3462, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.value(metadata i32 -1, metadata !3463, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.value(metadata i32 -1, metadata !3464, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.value(metadata i8* null, metadata !3465, metadata !DIExpression()), !dbg !3569
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #23, !dbg !3570
  call void @llvm.dbg.value(metadata i8* %17, metadata !3466, metadata !DIExpression()), !dbg !3569
  store i8* %17, i8** %8, align 4, !dbg !3571
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #23, !dbg !3572
  call void @llvm.dbg.value(metadata i8 0, metadata !3467, metadata !DIExpression()), !dbg !3569
  store i8 0, i8* %9, align 1, !dbg !3573
  %42 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %15, i8* noundef nonnull %33) #24, !dbg !3574
  call void @llvm.dbg.value(metadata i8* %42, metadata !3396, metadata !DIExpression()), !dbg !3555
  %43 = load i24, i24* %18, align 8, !dbg !3575
  %44 = and i24 %43, 256, !dbg !3575
  %45 = icmp eq i24 %44, 0, !dbg !3575
  br i1 %45, label %54, label %46, !dbg !3577

46:                                               ; preds = %41
  %47 = getelementptr inbounds i8, i8* %30, i32 4, !dbg !3578
  call void @llvm.dbg.value(metadata i8* %47, metadata !3397, metadata !DIExpression()), !dbg !3555
  %48 = bitcast i8* %30 to i32*, !dbg !3578
  %49 = load i32, i32* %48, align 4, !dbg !3578
  call void @llvm.dbg.value(metadata i32 %49, metadata !3463, metadata !DIExpression()), !dbg !3569
  %50 = icmp slt i32 %49, 0, !dbg !3580
  br i1 %50, label %51, label %59, !dbg !3582

51:                                               ; preds = %46
  %52 = or i24 %43, 4, !dbg !3583
  store i24 %52, i24* %18, align 8, !dbg !3583
  %53 = sub nsw i32 0, %49, !dbg !3585
  call void @llvm.dbg.value(metadata i32 %53, metadata !3463, metadata !DIExpression()), !dbg !3569
  br label %59, !dbg !3586

54:                                               ; preds = %41
  %55 = and i24 %43, 128, !dbg !3587
  %56 = icmp eq i24 %55, 0, !dbg !3587
  %57 = load i32, i32* %19, align 4
  %58 = select i1 %56, i32 -1, i32 %57, !dbg !3589
  br label %59, !dbg !3589

59:                                               ; preds = %54, %46, %51
  %60 = phi i24 [ %52, %51 ], [ %43, %46 ], [ %43, %54 ], !dbg !3590
  %61 = phi i32 [ %53, %51 ], [ %49, %46 ], [ %58, %54 ], !dbg !3569
  %62 = phi i8* [ %47, %51 ], [ %47, %46 ], [ %30, %54 ]
  call void @llvm.dbg.value(metadata i8* %62, metadata !3397, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i32 %61, metadata !3463, metadata !DIExpression()), !dbg !3569
  %63 = and i24 %60, 1024, !dbg !3590
  %64 = icmp eq i24 %63, 0, !dbg !3590
  br i1 %64, label %72, label %65, !dbg !3591

65:                                               ; preds = %59
  %66 = getelementptr inbounds i8, i8* %62, i32 4, !dbg !3592
  call void @llvm.dbg.value(metadata i8* %66, metadata !3397, metadata !DIExpression()), !dbg !3555
  %67 = bitcast i8* %62 to i32*, !dbg !3592
  %68 = load i32, i32* %67, align 4, !dbg !3592
  call void @llvm.dbg.value(metadata i32 %68, metadata !3468, metadata !DIExpression()), !dbg !3593
  %69 = icmp slt i32 %68, 0, !dbg !3594
  br i1 %69, label %70, label %77, !dbg !3596

70:                                               ; preds = %65
  %71 = and i24 %60, -513, !dbg !3597
  store i24 %71, i24* %18, align 8, !dbg !3597
  br label %77, !dbg !3599

72:                                               ; preds = %59
  %73 = and i24 %60, 512, !dbg !3600
  %74 = icmp eq i24 %73, 0, !dbg !3600
  %75 = load i32, i32* %20, align 8
  %76 = select i1 %74, i32 -1, i32 %75, !dbg !3602
  br label %77, !dbg !3602

77:                                               ; preds = %72, %70, %65
  %78 = phi i24 [ %71, %70 ], [ %60, %65 ], [ %60, %72 ], !dbg !3603
  %79 = phi i32 [ -1, %70 ], [ %68, %65 ], [ %76, %72 ], !dbg !3569
  %80 = phi i8* [ %66, %70 ], [ %66, %65 ], [ %62, %72 ], !dbg !3569
  call void @llvm.dbg.value(metadata i8* %80, metadata !3397, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i32 %79, metadata !3464, metadata !DIExpression()), !dbg !3569
  store i32 0, i32* %19, align 4, !dbg !3605
  store i32 0, i32* %20, align 8, !dbg !3606
  %81 = and i24 %78, 459264, !dbg !3607
  %82 = icmp eq i24 %81, 262144, !dbg !3607
  %83 = and i24 %78, 32768, !dbg !3607
  %84 = icmp eq i24 %83, 0, !dbg !3607
  %85 = select i1 %84, i32 6, i32 13, !dbg !3607
  %86 = select i1 %82, i32 %85, i32 %79, !dbg !3607
  call void @llvm.dbg.value(metadata i32 %86, metadata !3464, metadata !DIExpression()), !dbg !3569
  %87 = lshr i24 %78, 16, !dbg !3608
  call void @llvm.dbg.value(metadata i24 %87, metadata !3471, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3569
  %88 = lshr i24 %78, 11, !dbg !3609
  %89 = and i24 %88, 15, !dbg !3609
  %90 = zext i24 %89 to i32, !dbg !3609
  call void @llvm.dbg.value(metadata i32 %90, metadata !3472, metadata !DIExpression()), !dbg !3569
  %91 = trunc i24 %87 to i3, !dbg !3610
  switch i3 %91, label %186 [
    i3 1, label %92
    i3 2, label %134
    i3 -4, label %174
    i3 3, label %182
  ], !dbg !3610

92:                                               ; preds = %77
  switch i32 %90, label %93 [
    i32 7, label %119
    i32 6, label %119
    i32 5, label %111
    i32 3, label %98
    i32 4, label %103
  ], !dbg !3611

93:                                               ; preds = %92
  %94 = getelementptr inbounds i8, i8* %80, i32 4, !dbg !3614
  call void @llvm.dbg.value(metadata i8* %94, metadata !3397, metadata !DIExpression()), !dbg !3555
  %95 = bitcast i8* %80 to i32*, !dbg !3614
  %96 = load i32, i32* %95, align 4, !dbg !3614
  %97 = sext i32 %96 to i64, !dbg !3614
  store i64 %97, i64* %23, align 8, !dbg !3616
  br label %124, !dbg !3617

98:                                               ; preds = %92
  %99 = getelementptr inbounds i8, i8* %80, i32 4, !dbg !3618
  call void @llvm.dbg.value(metadata i8* %99, metadata !3397, metadata !DIExpression()), !dbg !3555
  %100 = bitcast i8* %80 to i32*, !dbg !3618
  %101 = load i32, i32* %100, align 4, !dbg !3618
  %102 = sext i32 %101 to i64, !dbg !3618
  store i64 %102, i64* %23, align 8, !dbg !3621
  br label %124, !dbg !3622

103:                                              ; preds = %92
  %104 = ptrtoint i8* %80 to i32, !dbg !3623
  %105 = add i32 %104, 7, !dbg !3623
  %106 = and i32 %105, -8, !dbg !3623
  %107 = inttoptr i32 %106 to i8*, !dbg !3623
  %108 = getelementptr inbounds i8, i8* %107, i32 8, !dbg !3623
  call void @llvm.dbg.value(metadata i8* %108, metadata !3397, metadata !DIExpression()), !dbg !3555
  %109 = inttoptr i32 %106 to i64*, !dbg !3623
  %110 = load i64, i64* %109, align 8, !dbg !3623
  store i64 %110, i64* %23, align 8, !dbg !3624
  br label %124, !dbg !3625

111:                                              ; preds = %92
  %112 = ptrtoint i8* %80 to i32, !dbg !3626
  %113 = add i32 %112, 7, !dbg !3626
  %114 = and i32 %113, -8, !dbg !3626
  %115 = inttoptr i32 %114 to i8*, !dbg !3626
  %116 = getelementptr inbounds i8, i8* %115, i32 8, !dbg !3626
  call void @llvm.dbg.value(metadata i8* %116, metadata !3397, metadata !DIExpression()), !dbg !3555
  %117 = inttoptr i32 %114 to i64*, !dbg !3626
  %118 = load i64, i64* %117, align 8, !dbg !3626
  store i64 %118, i64* %23, align 8, !dbg !3627
  br label %124, !dbg !3628

119:                                              ; preds = %92, %92
  %120 = getelementptr inbounds i8, i8* %80, i32 4, !dbg !3629
  call void @llvm.dbg.value(metadata i8* %120, metadata !3397, metadata !DIExpression()), !dbg !3555
  %121 = bitcast i8* %80 to i32*, !dbg !3629
  %122 = load i32, i32* %121, align 4, !dbg !3629
  %123 = sext i32 %122 to i64, !dbg !3630
  store i64 %123, i64* %23, align 8, !dbg !3631
  br label %124, !dbg !3632

124:                                              ; preds = %119, %111, %103, %98, %93
  %125 = phi i64 [ %97, %93 ], [ %110, %103 ], [ %102, %98 ], [ %118, %111 ], [ %123, %119 ]
  %126 = phi i8* [ %94, %93 ], [ %108, %103 ], [ %99, %98 ], [ %116, %111 ], [ %120, %119 ], !dbg !3633
  call void @llvm.dbg.value(metadata i8* %126, metadata !3397, metadata !DIExpression()), !dbg !3555
  %127 = trunc i24 %88 to i4, !dbg !3634
  switch i4 %127, label %186 [
    i4 1, label %128
    i4 2, label %131
  ], !dbg !3634

128:                                              ; preds = %124
  %129 = shl i64 %125, 56, !dbg !3635
  %130 = ashr exact i64 %129, 56, !dbg !3635
  store i64 %130, i64* %23, align 8, !dbg !3638
  br label %186, !dbg !3639

131:                                              ; preds = %124
  %132 = shl i64 %125, 48, !dbg !3640
  %133 = ashr exact i64 %132, 48, !dbg !3640
  store i64 %133, i64* %23, align 8, !dbg !3643
  br label %186, !dbg !3644

134:                                              ; preds = %77
  switch i32 %90, label %135 [
    i32 7, label %161
    i32 6, label %161
    i32 5, label %153
    i32 3, label %140
    i32 4, label %145
  ], !dbg !3645

135:                                              ; preds = %134
  %136 = getelementptr inbounds i8, i8* %80, i32 4, !dbg !3648
  call void @llvm.dbg.value(metadata i8* %136, metadata !3397, metadata !DIExpression()), !dbg !3555
  %137 = bitcast i8* %80 to i32*, !dbg !3648
  %138 = load i32, i32* %137, align 4, !dbg !3648
  %139 = zext i32 %138 to i64, !dbg !3648
  store i64 %139, i64* %23, align 8, !dbg !3650
  br label %166, !dbg !3651

140:                                              ; preds = %134
  %141 = getelementptr inbounds i8, i8* %80, i32 4, !dbg !3652
  call void @llvm.dbg.value(metadata i8* %141, metadata !3397, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i8* %141, metadata !3397, metadata !DIExpression()), !dbg !3555
  %142 = bitcast i8* %80 to i32*, !dbg !3652
  %143 = load i32, i32* %142, align 4, !dbg !3652
  %144 = zext i32 %143 to i64, !dbg !3652
  store i64 %144, i64* %23, align 8, !dbg !3652
  br label %166

145:                                              ; preds = %134
  %146 = ptrtoint i8* %80 to i32, !dbg !3654
  %147 = add i32 %146, 7, !dbg !3654
  %148 = and i32 %147, -8, !dbg !3654
  %149 = inttoptr i32 %148 to i8*, !dbg !3654
  %150 = getelementptr inbounds i8, i8* %149, i32 8, !dbg !3654
  call void @llvm.dbg.value(metadata i8* %150, metadata !3397, metadata !DIExpression()), !dbg !3555
  %151 = inttoptr i32 %148 to i64*, !dbg !3654
  %152 = load i64, i64* %151, align 8, !dbg !3654
  store i64 %152, i64* %23, align 8, !dbg !3655
  br label %166, !dbg !3656

153:                                              ; preds = %134
  %154 = ptrtoint i8* %80 to i32, !dbg !3657
  %155 = add i32 %154, 7, !dbg !3657
  %156 = and i32 %155, -8, !dbg !3657
  %157 = inttoptr i32 %156 to i8*, !dbg !3657
  %158 = getelementptr inbounds i8, i8* %157, i32 8, !dbg !3657
  call void @llvm.dbg.value(metadata i8* %158, metadata !3397, metadata !DIExpression()), !dbg !3555
  %159 = inttoptr i32 %156 to i64*, !dbg !3657
  %160 = load i64, i64* %159, align 8, !dbg !3657
  store i64 %160, i64* %23, align 8, !dbg !3658
  br label %166, !dbg !3659

161:                                              ; preds = %134, %134
  %162 = getelementptr inbounds i8, i8* %80, i32 4, !dbg !3660
  call void @llvm.dbg.value(metadata i8* %162, metadata !3397, metadata !DIExpression()), !dbg !3555
  %163 = bitcast i8* %80 to i32*, !dbg !3660
  %164 = load i32, i32* %163, align 4, !dbg !3660
  %165 = zext i32 %164 to i64, !dbg !3661
  store i64 %165, i64* %23, align 8, !dbg !3662
  br label %166, !dbg !3663

166:                                              ; preds = %140, %161, %153, %145, %135
  %167 = phi i64 [ %139, %135 ], [ %152, %145 ], [ %160, %153 ], [ %165, %161 ], [ %144, %140 ]
  %168 = phi i8* [ %136, %135 ], [ %150, %145 ], [ %158, %153 ], [ %162, %161 ], [ %141, %140 ], !dbg !3664
  call void @llvm.dbg.value(metadata i8* %168, metadata !3397, metadata !DIExpression()), !dbg !3555
  %169 = trunc i24 %88 to i4, !dbg !3665
  switch i4 %169, label %186 [
    i4 1, label %170
    i4 2, label %172
  ], !dbg !3665

170:                                              ; preds = %166
  %171 = and i64 %167, 255, !dbg !3666
  store i64 %171, i64* %23, align 8, !dbg !3669
  br label %186, !dbg !3670

172:                                              ; preds = %166
  %173 = and i64 %167, 65535, !dbg !3671
  store i64 %173, i64* %23, align 8, !dbg !3674
  br label %186, !dbg !3675

174:                                              ; preds = %77
  %175 = ptrtoint i8* %80 to i32, !dbg !3676
  %176 = add i32 %175, 7, !dbg !3676
  %177 = and i32 %176, -8, !dbg !3676
  %178 = inttoptr i32 %177 to i8*, !dbg !3676
  %179 = getelementptr inbounds i8, i8* %178, i32 8, !dbg !3676
  call void @llvm.dbg.value(metadata i8* %179, metadata !3397, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i8* %179, metadata !3397, metadata !DIExpression()), !dbg !3555
  %180 = inttoptr i32 %177 to double*, !dbg !3676
  %181 = load double, double* %180, align 8, !dbg !3676
  store double %181, double* %22, align 8, !dbg !3676
  br label %186

182:                                              ; preds = %77
  %183 = getelementptr inbounds i8, i8* %80, i32 4, !dbg !3680
  call void @llvm.dbg.value(metadata i8* %183, metadata !3397, metadata !DIExpression()), !dbg !3555
  %184 = bitcast i8* %80 to i8**, !dbg !3680
  %185 = load i8*, i8** %184, align 4, !dbg !3680
  store i8* %185, i8** %21, align 8, !dbg !3683
  br label %186, !dbg !3684

186:                                              ; preds = %174, %77, %166, %124, %172, %170, %182, %128, %131
  %187 = phi i8* [ %126, %128 ], [ %126, %131 ], [ %168, %170 ], [ %168, %172 ], [ %183, %182 ], [ %126, %124 ], [ %168, %166 ], [ %80, %77 ], [ %179, %174 ], !dbg !3569
  call void @llvm.dbg.value(metadata i8* %187, metadata !3397, metadata !DIExpression()), !dbg !3555
  %188 = and i24 %78, 3, !dbg !3685
  %189 = icmp eq i24 %188, 0, !dbg !3685
  br i1 %189, label %194, label %190, !dbg !3685

190:                                              ; preds = %186
  %191 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %33, i8* noundef nonnull %42) #24, !dbg !3686
  call void @llvm.dbg.value(metadata i32 %191, metadata !3473, metadata !DIExpression()), !dbg !3687
  %192 = icmp slt i32 %191, 0, !dbg !3688
  %193 = add i32 %191, %32, !dbg !3686
  call void @llvm.dbg.value(metadata i32 undef, metadata !3403, metadata !DIExpression()), !dbg !3555
  br i1 %192, label %475, label %477

194:                                              ; preds = %186
  %195 = load i8, i8* %24, align 1, !dbg !3690
  switch i8 %195, label %477 [
    i8 37, label %196
    i8 115, label %200
    i8 99, label %207
    i8 100, label %210
    i8 105, label %210
    i8 111, label %224
    i8 117, label %224
    i8 120, label %224
    i8 88, label %224
    i8 112, label %240
    i8 110, label %250
    i8 97, label %252
    i8 65, label %252
    i8 101, label %252
    i8 69, label %252
    i8 102, label %252
    i8 70, label %252
    i8 103, label %252
    i8 71, label %252
  ], !dbg !3691

196:                                              ; preds = %194
  %197 = call i32 %13(i32 noundef 37, i8* noundef %1) #25, !dbg !3692
  call void @llvm.dbg.value(metadata i32 %197, metadata !3477, metadata !DIExpression()), !dbg !3693
  %198 = icmp slt i32 %197, 0, !dbg !3694
  %199 = add i32 %32, 1, !dbg !3692
  call void @llvm.dbg.value(metadata i32 undef, metadata !3403, metadata !DIExpression()), !dbg !3555
  br i1 %198, label %475, label %477

200:                                              ; preds = %194
  %201 = load i8*, i8** %21, align 8, !dbg !3696
  call void @llvm.dbg.value(metadata i8* %201, metadata !3465, metadata !DIExpression()), !dbg !3569
  %202 = icmp sgt i32 %86, -1, !dbg !3697
  br i1 %202, label %203, label %205, !dbg !3699

203:                                              ; preds = %200
  %204 = call i32 @strnlen(i8* noundef %201, i32 noundef %86) #25, !dbg !3700
  call void @llvm.dbg.value(metadata i32 %204, metadata !3480, metadata !DIExpression()), !dbg !3702
  br label %257, !dbg !3703

205:                                              ; preds = %200
  %206 = call i32 @strlen(i8* noundef %201) #25, !dbg !3704
  call void @llvm.dbg.value(metadata i32 %206, metadata !3480, metadata !DIExpression()), !dbg !3702
  br label %257

207:                                              ; preds = %194
  call void @llvm.dbg.value(metadata i8* %12, metadata !3465, metadata !DIExpression()), !dbg !3569
  %208 = load i64, i64* %23, align 8, !dbg !3706
  %209 = trunc i64 %208 to i8, !dbg !3707
  store i8 %209, i8* %12, align 1, !dbg !3708
  call void @llvm.dbg.value(metadata i8* %26, metadata !3466, metadata !DIExpression()), !dbg !3569
  store i8* %26, i8** %8, align 4, !dbg !3709
  br label %261, !dbg !3710

210:                                              ; preds = %194, %194
  %211 = and i24 %78, 8, !dbg !3711
  %212 = icmp eq i24 %211, 0, !dbg !3711
  br i1 %212, label %214, label %213, !dbg !3713

213:                                              ; preds = %210
  call void @llvm.dbg.value(metadata i8 43, metadata !3467, metadata !DIExpression()), !dbg !3569
  store i8 43, i8* %9, align 1, !dbg !3714
  br label %218, !dbg !3716

214:                                              ; preds = %210
  %215 = and i24 %78, 16, !dbg !3717
  %216 = icmp eq i24 %215, 0, !dbg !3717
  br i1 %216, label %218, label %217, !dbg !3719

217:                                              ; preds = %214
  call void @llvm.dbg.value(metadata i8 32, metadata !3467, metadata !DIExpression()), !dbg !3569
  store i8 32, i8* %9, align 1, !dbg !3720
  br label %218, !dbg !3722

218:                                              ; preds = %214, %217, %213
  %219 = phi i8 [ 0, %214 ], [ 32, %217 ], [ 43, %213 ]
  %220 = load i64, i64* %23, align 8, !dbg !3723
  call void @llvm.dbg.value(metadata i64 %220, metadata !3404, metadata !DIExpression()), !dbg !3555
  %221 = icmp slt i64 %220, 0, !dbg !3724
  br i1 %221, label %222, label %224, !dbg !3726

222:                                              ; preds = %218
  call void @llvm.dbg.value(metadata i8 45, metadata !3467, metadata !DIExpression()), !dbg !3569
  store i8 45, i8* %9, align 1, !dbg !3727
  %223 = sub nsw i64 0, %220, !dbg !3729
  store i64 %223, i64* %23, align 8, !dbg !3730
  br label %224, !dbg !3731

224:                                              ; preds = %218, %222, %194, %194, %194, %194
  %225 = phi i8 [ %219, %218 ], [ 45, %222 ], [ 0, %194 ], [ 0, %194 ], [ 0, %194 ], [ 0, %194 ]
  %226 = load i64, i64* %23, align 8, !dbg !3732
  call void @llvm.dbg.value(metadata i8* %17, metadata !3466, metadata !DIExpression()), !dbg !3569
  %227 = call fastcc i8* @encode_uint(i64 noundef %226, %struct.conversion* noundef nonnull %15, i8* noundef nonnull %12, i8* noundef nonnull %17) #24, !dbg !3733
  call void @llvm.dbg.value(metadata i8* %227, metadata !3465, metadata !DIExpression()), !dbg !3569
  br label %228, !dbg !3734

228:                                              ; preds = %243, %224
  %229 = phi i8 [ 0, %243 ], [ %225, %224 ]
  %230 = phi i8* [ %246, %243 ], [ %227, %224 ], !dbg !3735
  call void @llvm.dbg.value(metadata i8* %230, metadata !3465, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.label(metadata !3554), !dbg !3736
  %231 = icmp sgt i32 %86, -1, !dbg !3737
  br i1 %231, label %232, label %261, !dbg !3738

232:                                              ; preds = %228
  call void @llvm.dbg.value(metadata i8* %17, metadata !3466, metadata !DIExpression()), !dbg !3569
  %233 = ptrtoint i8* %230 to i32, !dbg !3739
  %234 = sub i32 %25, %233, !dbg !3739
  call void @llvm.dbg.value(metadata i32 %234, metadata !3482, metadata !DIExpression()), !dbg !3740
  %235 = load i24, i24* %18, align 8, !dbg !3741
  %236 = and i24 %235, -65, !dbg !3741
  store i24 %236, i24* %18, align 8, !dbg !3741
  %237 = icmp ugt i32 %86, %234, !dbg !3742
  br i1 %237, label %238, label %261, !dbg !3744

238:                                              ; preds = %232
  %239 = sub nsw i32 %86, %234, !dbg !3745
  store i32 %239, i32* %19, align 4, !dbg !3747
  br label %261, !dbg !3748

240:                                              ; preds = %194
  %241 = load i8*, i8** %21, align 8, !dbg !3749
  %242 = icmp eq i8* %241, null, !dbg !3751
  br i1 %242, label %249, label %243, !dbg !3752

243:                                              ; preds = %240
  %244 = ptrtoint i8* %241 to i32, !dbg !3753
  %245 = zext i32 %244 to i64, !dbg !3753
  call void @llvm.dbg.value(metadata i8* %17, metadata !3466, metadata !DIExpression()), !dbg !3569
  %246 = call fastcc i8* @encode_uint(i64 noundef %245, %struct.conversion* noundef nonnull %15, i8* noundef nonnull %12, i8* noundef nonnull %17) #24, !dbg !3755
  call void @llvm.dbg.value(metadata i8* %246, metadata !3465, metadata !DIExpression()), !dbg !3569
  %247 = load i24, i24* %18, align 8, !dbg !3756
  %248 = or i24 %247, 1048576, !dbg !3756
  store i24 %248, i24* %18, align 8, !dbg !3756
  store i8 120, i8* %24, align 1, !dbg !3757
  br label %228, !dbg !3758

249:                                              ; preds = %240
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), metadata !3465, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 5), metadata !3466, metadata !DIExpression()), !dbg !3569
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 5), i8** %8, align 4, !dbg !3759
  br label %261, !dbg !3760

250:                                              ; preds = %194
  %251 = load i8*, i8** %21, align 8, !dbg !3761
  call fastcc void @store_count(%struct.conversion* noundef nonnull %15, i8* noundef %251, i32 noundef %32) #24, !dbg !3764
  br label %477, !dbg !3765

252:                                              ; preds = %194, %194, %194, %194, %194, %194, %194, %194
  %253 = load double, double* %22, align 8, !dbg !3766
  call void @llvm.dbg.value(metadata i8** %8, metadata !3466, metadata !DIExpression(DW_OP_deref)), !dbg !3569
  call void @llvm.dbg.value(metadata i8* %9, metadata !3467, metadata !DIExpression(DW_OP_deref)), !dbg !3569
  %254 = call fastcc i8* @encode_float(double noundef %253, %struct.conversion* noundef nonnull %15, i32 noundef %86, i8* noundef nonnull %9, i8* noundef nonnull %12, i8** noundef nonnull %8) #24, !dbg !3769
  call void @llvm.dbg.value(metadata i8* %12, metadata !3465, metadata !DIExpression()), !dbg !3569
  %255 = load i8*, i8** %8, align 4, !dbg !3770
  %256 = load i8, i8* %9, align 1, !dbg !3771
  br label %261, !dbg !3773

257:                                              ; preds = %203, %205
  %258 = phi i32 [ %204, %203 ], [ %206, %205 ], !dbg !3774
  call void @llvm.dbg.value(metadata i32 %258, metadata !3480, metadata !DIExpression()), !dbg !3702
  %259 = getelementptr inbounds i8, i8* %201, i32 %258, !dbg !3775
  call void @llvm.dbg.value(metadata i8* %259, metadata !3466, metadata !DIExpression()), !dbg !3569
  store i8* %259, i8** %8, align 4, !dbg !3776
  call void @llvm.dbg.value(metadata i32 -1, metadata !3464, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.value(metadata i32 %32, metadata !3403, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i8* %201, metadata !3465, metadata !DIExpression()), !dbg !3569
  %260 = icmp eq i8* %201, null, !dbg !3777
  br i1 %260, label %477, label %261, !dbg !3779, !llvm.loop !3565

261:                                              ; preds = %232, %238, %207, %249, %228, %252, %257
  %262 = phi i8 [ 0, %257 ], [ %229, %232 ], [ %229, %238 ], [ 0, %207 ], [ 0, %249 ], [ %229, %228 ], [ %256, %252 ], !dbg !3771
  %263 = phi i8* [ %259, %257 ], [ %17, %232 ], [ %17, %238 ], [ %26, %207 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 5), %249 ], [ %17, %228 ], [ %255, %252 ], !dbg !3770
  %264 = phi i8* [ %201, %257 ], [ %230, %232 ], [ %230, %238 ], [ %12, %207 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), %249 ], [ %230, %228 ], [ %12, %252 ]
  call void @llvm.dbg.value(metadata i8* %263, metadata !3466, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.value(metadata !DIArgList(i8* %263, i8* %264), metadata !3485, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3569
  call void @llvm.dbg.value(metadata i32 0, metadata !3486, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.value(metadata i8 %262, metadata !3467, metadata !DIExpression()), !dbg !3569
  %265 = icmp eq i8 %262, 0, !dbg !3780
  call void @llvm.dbg.value(metadata !DIArgList(i8* %263, i1 %265, i8* %264), metadata !3485, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3569
  %266 = load i24, i24* %18, align 8, !dbg !3781
  call void @llvm.dbg.value(metadata i32 undef, metadata !3485, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !3485, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3569
  call void @llvm.dbg.value(metadata i32 undef, metadata !3485, metadata !DIExpression()), !dbg !3569
  %267 = icmp sgt i32 %61, 0, !dbg !3783
  br i1 %267, label %268, label %318, !dbg !3784

268:                                              ; preds = %261
  %269 = and i24 %266, 1048576, !dbg !3781
  %270 = icmp eq i24 %269, 0, !dbg !3781
  %271 = ptrtoint i8* %263 to i32, !dbg !3785
  call void @llvm.dbg.value(metadata !DIArgList(i32 %271, i1 %265, i8* %264), metadata !3485, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3569
  %272 = ptrtoint i8* %264 to i32, !dbg !3785
  call void @llvm.dbg.value(metadata !DIArgList(i8* %263, i1 %265, i32 %272), metadata !3485, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3569
  call void @llvm.dbg.value(metadata !DIArgList(i32 %271, i1 %265, i32 %272), metadata !3485, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3569
  %273 = xor i1 %265, true, !dbg !3786
  call void @llvm.dbg.value(metadata !DIArgList(i8* %263, i1 %273, i8* %264), metadata !3485, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3569
  %274 = sext i1 %273 to i32, !dbg !3786
  call void @llvm.dbg.value(metadata !DIArgList(i8* %263, i1 %273, i8* %264), metadata !3485, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3569
  call void @llvm.dbg.value(metadata !DIArgList(i32 %271, i1 %273, i32 %272), metadata !3485, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3569
  %275 = lshr i24 %266, 19, !dbg !3787
  %276 = and i24 %275, 1, !dbg !3787
  %277 = select i1 %270, i24 %276, i24 2, !dbg !3787
  %278 = zext i24 %277 to i32, !dbg !3787
  %279 = add i32 %272, %274, !dbg !3787
  %280 = add i32 %271, %278, !dbg !3787
  call void @llvm.dbg.value(metadata !DIArgList(i32 %271, i32 undef, i32 %278, i1 %273, i32 %272), metadata !3485, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3569
  %281 = and i24 %266, 4194304, !dbg !3788
  %282 = icmp eq i24 %281, 0, !dbg !3788
  %283 = load i32, i32* %19, align 4, !dbg !3790
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %283), metadata !3485, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3569
  call void @llvm.dbg.value(metadata i32 undef, metadata !3485, metadata !DIExpression()), !dbg !3569
  %284 = load i32, i32* %20, align 8, !dbg !3791
  %285 = select i1 %282, i32 0, i32 %284, !dbg !3791
  call void @llvm.dbg.value(metadata i32 undef, metadata !3485, metadata !DIExpression()), !dbg !3569
  %286 = add i32 %279, %61, !dbg !3791
  %287 = add i32 %280, %283, !dbg !3791
  %288 = add i32 %287, %285, !dbg !3792
  %289 = sub i32 %286, %288, !dbg !3792
  call void @llvm.dbg.value(metadata i32 %289, metadata !3463, metadata !DIExpression()), !dbg !3569
  %290 = and i24 %266, 4, !dbg !3793
  %291 = icmp eq i24 %290, 0, !dbg !3793
  br i1 %291, label %292, label %318, !dbg !3794

292:                                              ; preds = %268
  call void @llvm.dbg.value(metadata i8 32, metadata !3487, metadata !DIExpression()), !dbg !3795
  %293 = and i24 %266, 64, !dbg !3796
  %294 = icmp eq i24 %293, 0, !dbg !3796
  %295 = select i1 %294, i1 true, i1 %265, !dbg !3797
  %296 = select i1 %294, i32 32, i32 48, !dbg !3797
  br i1 %295, label %303, label %297, !dbg !3797

297:                                              ; preds = %292
  %298 = zext i8 %262 to i32, !dbg !3798
  %299 = call i32 %13(i32 noundef %298, i8* noundef %1) #25, !dbg !3799
  call void @llvm.dbg.value(metadata i32 %299, metadata !3492, metadata !DIExpression()), !dbg !3800
  %300 = icmp slt i32 %299, 0, !dbg !3801
  call void @llvm.dbg.value(metadata i32 undef, metadata !3403, metadata !DIExpression()), !dbg !3555
  br i1 %300, label %475, label %301

301:                                              ; preds = %297
  %302 = add i32 %32, 1, !dbg !3799
  call void @llvm.dbg.value(metadata i8 0, metadata !3467, metadata !DIExpression()), !dbg !3569
  store i8 0, i8* %9, align 1, !dbg !3803
  br label %303, !dbg !3804

303:                                              ; preds = %292, %301
  %304 = phi i8 [ %262, %292 ], [ 0, %301 ]
  %305 = phi i32 [ %296, %292 ], [ 48, %301 ]
  %306 = phi i32 [ %32, %292 ], [ %302, %301 ], !dbg !3559
  call void @llvm.dbg.value(metadata i32 %306, metadata !3403, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i8 undef, metadata !3487, metadata !DIExpression()), !dbg !3795
  %307 = call i32 @llvm.smin.i32(i32 %289, i32 0), !dbg !3805
  %308 = add i32 %307, -1, !dbg !3805
  br label %309, !dbg !3805

309:                                              ; preds = %313, %303
  %310 = phi i32 [ %289, %303 ], [ %314, %313 ], !dbg !3806
  %311 = phi i32 [ %306, %303 ], [ %317, %313 ], !dbg !3559
  call void @llvm.dbg.value(metadata i32 %311, metadata !3403, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i32 %310, metadata !3463, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.value(metadata i32 %310, metadata !3463, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3569
  %312 = icmp sgt i32 %310, 0, !dbg !3807
  br i1 %312, label %313, label %318, !dbg !3805

313:                                              ; preds = %309
  %314 = add nsw i32 %310, -1, !dbg !3808
  call void @llvm.dbg.value(metadata i32 %314, metadata !3463, metadata !DIExpression()), !dbg !3569
  %315 = call i32 %13(i32 noundef %305, i8* noundef %1) #25, !dbg !3809
  call void @llvm.dbg.value(metadata i32 %315, metadata !3498, metadata !DIExpression()), !dbg !3810
  %316 = icmp slt i32 %315, 0, !dbg !3811
  %317 = add i32 %311, 1, !dbg !3809
  call void @llvm.dbg.value(metadata i32 undef, metadata !3403, metadata !DIExpression()), !dbg !3555
  br i1 %316, label %475, label %309, !llvm.loop !3813

318:                                              ; preds = %309, %268, %261
  %319 = phi i8 [ %262, %268 ], [ %262, %261 ], [ %304, %309 ], !dbg !3815
  %320 = phi i32 [ %289, %268 ], [ %61, %261 ], [ %308, %309 ], !dbg !3569
  %321 = phi i32 [ %32, %268 ], [ %32, %261 ], [ %311, %309 ], !dbg !3559
  call void @llvm.dbg.value(metadata i32 %321, metadata !3403, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i32 %320, metadata !3463, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.value(metadata i8 %319, metadata !3467, metadata !DIExpression()), !dbg !3569
  %322 = icmp eq i8 %319, 0, !dbg !3816
  br i1 %322, label %328, label %323, !dbg !3817

323:                                              ; preds = %318
  %324 = zext i8 %319 to i32, !dbg !3815
  %325 = call i32 %13(i32 noundef %324, i8* noundef %1) #25, !dbg !3818
  call void @llvm.dbg.value(metadata i32 %325, metadata !3501, metadata !DIExpression()), !dbg !3819
  %326 = icmp slt i32 %325, 0, !dbg !3820
  %327 = add i32 %321, 1, !dbg !3818
  call void @llvm.dbg.value(metadata i32 undef, metadata !3403, metadata !DIExpression()), !dbg !3555
  br i1 %326, label %475, label %328

328:                                              ; preds = %323, %318
  %329 = phi i32 [ %327, %323 ], [ %321, %318 ], !dbg !3559
  call void @llvm.dbg.value(metadata i32 %329, metadata !3403, metadata !DIExpression()), !dbg !3555
  %330 = and i24 %266, 4194304, !dbg !3822
  %331 = icmp eq i24 %330, 0, !dbg !3822
  br i1 %331, label %427, label %332, !dbg !3823

332:                                              ; preds = %328
  call void @llvm.dbg.value(metadata i8* %201, metadata !3505, metadata !DIExpression()), !dbg !3824
  %333 = and i24 %266, 32768, !dbg !3825
  %334 = icmp eq i24 %333, 0, !dbg !3825
  br i1 %334, label %346, label %335, !dbg !3826

335:                                              ; preds = %332, %340
  %336 = phi i8* [ %342, %340 ], [ %264, %332 ], !dbg !3824
  %337 = phi i32 [ %345, %340 ], [ %329, %332 ], !dbg !3559
  call void @llvm.dbg.value(metadata i32 %337, metadata !3403, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i8* %336, metadata !3505, metadata !DIExpression()), !dbg !3824
  %338 = load i8, i8* %336, align 1, !dbg !3827
  %339 = icmp eq i8 %338, 112, !dbg !3828
  br i1 %339, label %409, label %340, !dbg !3829

340:                                              ; preds = %335
  %341 = zext i8 %338 to i32, !dbg !3827
  %342 = getelementptr inbounds i8, i8* %336, i32 1, !dbg !3830
  call void @llvm.dbg.value(metadata i8* %342, metadata !3505, metadata !DIExpression()), !dbg !3824
  %343 = call i32 %13(i32 noundef %341, i8* noundef %1) #25, !dbg !3830
  call void @llvm.dbg.value(metadata i32 %343, metadata !3508, metadata !DIExpression()), !dbg !3831
  %344 = icmp slt i32 %343, 0, !dbg !3832
  %345 = add i32 %337, 1, !dbg !3830
  call void @llvm.dbg.value(metadata i32 undef, metadata !3403, metadata !DIExpression()), !dbg !3555
  br i1 %344, label %475, label %335, !llvm.loop !3834

346:                                              ; preds = %332, %353
  %347 = phi i8* [ %354, %353 ], [ %264, %332 ], !dbg !3824
  %348 = phi i32 [ %357, %353 ], [ %329, %332 ], !dbg !3559
  call void @llvm.dbg.value(metadata i32 %348, metadata !3403, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i8* %347, metadata !3505, metadata !DIExpression()), !dbg !3824
  %349 = load i8, i8* %347, align 1, !dbg !3836
  %350 = zext i8 %349 to i32, !dbg !3837
  %351 = call fastcc i32 @isdigit(i32 noundef %350) #24, !dbg !3838
  %352 = icmp eq i32 %351, 0, !dbg !3839
  br i1 %352, label %358, label %353, !dbg !3839

353:                                              ; preds = %346
  %354 = getelementptr inbounds i8, i8* %347, i32 1, !dbg !3840
  call void @llvm.dbg.value(metadata i8* %354, metadata !3505, metadata !DIExpression()), !dbg !3824
  %355 = call i32 %13(i32 noundef %350, i8* noundef %1) #25, !dbg !3840
  call void @llvm.dbg.value(metadata i32 %355, metadata !3513, metadata !DIExpression()), !dbg !3841
  %356 = icmp slt i32 %355, 0, !dbg !3842
  %357 = add i32 %348, 1, !dbg !3840
  call void @llvm.dbg.value(metadata i32 undef, metadata !3403, metadata !DIExpression()), !dbg !3555
  br i1 %356, label %475, label %346, !llvm.loop !3844

358:                                              ; preds = %346
  %359 = load i32, i32* %19, align 4, !dbg !3846
  call void @llvm.dbg.value(metadata i32 %359, metadata !3486, metadata !DIExpression()), !dbg !3569
  %360 = and i24 %266, 2097152, !dbg !3847
  %361 = icmp eq i24 %360, 0, !dbg !3847
  br i1 %361, label %362, label %376, !dbg !3848

362:                                              ; preds = %358
  %363 = call i32 @llvm.smin.i32(i32 %359, i32 0), !dbg !3849
  %364 = add i32 %363, -1, !dbg !3849
  br label %365, !dbg !3849

365:                                              ; preds = %362, %369
  %366 = phi i32 [ %370, %369 ], [ %359, %362 ], !dbg !3850
  %367 = phi i32 [ %373, %369 ], [ %348, %362 ], !dbg !3559
  call void @llvm.dbg.value(metadata i32 %367, metadata !3403, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i32 %366, metadata !3486, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3569
  %368 = icmp sgt i32 %366, 0, !dbg !3851
  br i1 %368, label %369, label %374, !dbg !3849

369:                                              ; preds = %365
  %370 = add nsw i32 %366, -1, !dbg !3852
  call void @llvm.dbg.value(metadata i32 %370, metadata !3486, metadata !DIExpression()), !dbg !3569
  %371 = call i32 %13(i32 noundef 48, i8* noundef %1) #25, !dbg !3853
  call void @llvm.dbg.value(metadata i32 %371, metadata !3517, metadata !DIExpression()), !dbg !3854
  %372 = icmp slt i32 %371, 0, !dbg !3855
  %373 = add i32 %367, 1, !dbg !3853
  call void @llvm.dbg.value(metadata i32 undef, metadata !3403, metadata !DIExpression()), !dbg !3555
  br i1 %372, label %475, label %365, !llvm.loop !3857

374:                                              ; preds = %365
  %375 = load i8, i8* %347, align 1, !dbg !3859
  br label %376, !dbg !3859

376:                                              ; preds = %374, %358
  %377 = phi i8 [ %349, %358 ], [ %375, %374 ], !dbg !3859
  %378 = phi i32 [ %359, %358 ], [ %364, %374 ], !dbg !3850
  %379 = phi i32 [ %348, %358 ], [ %367, %374 ], !dbg !3559
  call void @llvm.dbg.value(metadata i32 %379, metadata !3403, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i32 %378, metadata !3486, metadata !DIExpression()), !dbg !3569
  %380 = icmp eq i8 %377, 46, !dbg !3860
  br i1 %380, label %384, label %381, !dbg !3861

381:                                              ; preds = %388, %376
  %382 = phi i8* [ %347, %376 ], [ %385, %388 ]
  %383 = phi i32 [ %379, %376 ], [ %391, %388 ]
  br label %397, !dbg !3862

384:                                              ; preds = %376
  %385 = getelementptr inbounds i8, i8* %347, i32 1, !dbg !3863
  call void @llvm.dbg.value(metadata i8* %385, metadata !3505, metadata !DIExpression()), !dbg !3824
  %386 = call i32 %13(i32 noundef 46, i8* noundef %1) #25, !dbg !3863
  call void @llvm.dbg.value(metadata i32 %386, metadata !3522, metadata !DIExpression()), !dbg !3864
  %387 = icmp slt i32 %386, 0, !dbg !3865
  call void @llvm.dbg.value(metadata i32 undef, metadata !3403, metadata !DIExpression()), !dbg !3555
  br i1 %387, label %475, label %388

388:                                              ; preds = %384, %393
  %389 = phi i32 [ %394, %393 ], [ %378, %384 ], !dbg !3850
  %390 = phi i32 [ %391, %393 ], [ %379, %384 ]
  %391 = add i32 %390, 1, !dbg !3559
  call void @llvm.dbg.value(metadata i32 %391, metadata !3403, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i32 %389, metadata !3486, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3569
  %392 = icmp sgt i32 %389, 0, !dbg !3867
  br i1 %392, label %393, label %381, !dbg !3868

393:                                              ; preds = %388
  %394 = add nsw i32 %389, -1, !dbg !3869
  call void @llvm.dbg.value(metadata i32 %394, metadata !3486, metadata !DIExpression()), !dbg !3569
  %395 = call i32 %13(i32 noundef 48, i8* noundef %1) #25, !dbg !3870
  call void @llvm.dbg.value(metadata i32 %395, metadata !3526, metadata !DIExpression()), !dbg !3871
  %396 = icmp slt i32 %395, 0, !dbg !3872
  call void @llvm.dbg.value(metadata i32 undef, metadata !3403, metadata !DIExpression()), !dbg !3555
  br i1 %396, label %475, label %388, !llvm.loop !3874

397:                                              ; preds = %381, %404
  %398 = phi i8* [ %405, %404 ], [ %382, %381 ], !dbg !3850
  %399 = phi i32 [ %408, %404 ], [ %383, %381 ], !dbg !3559
  call void @llvm.dbg.value(metadata i32 %399, metadata !3403, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i8* %398, metadata !3505, metadata !DIExpression()), !dbg !3824
  %400 = load i8, i8* %398, align 1, !dbg !3876
  %401 = zext i8 %400 to i32, !dbg !3877
  %402 = call fastcc i32 @isdigit(i32 noundef %401) #24, !dbg !3878
  %403 = icmp eq i32 %402, 0, !dbg !3862
  br i1 %403, label %409, label %404, !dbg !3862

404:                                              ; preds = %397
  %405 = getelementptr inbounds i8, i8* %398, i32 1, !dbg !3879
  call void @llvm.dbg.value(metadata i8* %405, metadata !3505, metadata !DIExpression()), !dbg !3824
  %406 = call i32 %13(i32 noundef %401, i8* noundef %1) #25, !dbg !3879
  call void @llvm.dbg.value(metadata i32 %406, metadata !3529, metadata !DIExpression()), !dbg !3880
  %407 = icmp slt i32 %406, 0, !dbg !3881
  %408 = add i32 %399, 1, !dbg !3879
  call void @llvm.dbg.value(metadata i32 undef, metadata !3403, metadata !DIExpression()), !dbg !3555
  br i1 %407, label %475, label %397, !llvm.loop !3883

409:                                              ; preds = %335, %397
  %410 = phi i8* [ %398, %397 ], [ %336, %335 ], !dbg !3824
  %411 = phi i32 [ %399, %397 ], [ %337, %335 ], !dbg !3559
  call void @llvm.dbg.value(metadata i32 %411, metadata !3403, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i8* %410, metadata !3505, metadata !DIExpression()), !dbg !3824
  %412 = load i32, i32* %20, align 8, !dbg !3885
  call void @llvm.dbg.value(metadata i32 %412, metadata !3486, metadata !DIExpression()), !dbg !3569
  br label %413, !dbg !3886

413:                                              ; preds = %417, %409
  %414 = phi i32 [ %412, %409 ], [ %418, %417 ], !dbg !3824
  %415 = phi i32 [ %411, %409 ], [ %421, %417 ], !dbg !3559
  call void @llvm.dbg.value(metadata i32 %415, metadata !3403, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i32 %414, metadata !3486, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3569
  %416 = icmp sgt i32 %414, 0, !dbg !3887
  br i1 %416, label %417, label %422, !dbg !3886

417:                                              ; preds = %413
  %418 = add nsw i32 %414, -1, !dbg !3888
  call void @llvm.dbg.value(metadata i32 %418, metadata !3486, metadata !DIExpression()), !dbg !3569
  %419 = call i32 %13(i32 noundef 48, i8* noundef %1) #25, !dbg !3889
  call void @llvm.dbg.value(metadata i32 %419, metadata !3532, metadata !DIExpression()), !dbg !3890
  %420 = icmp slt i32 %419, 0, !dbg !3891
  %421 = add i32 %415, 1, !dbg !3889
  call void @llvm.dbg.value(metadata i32 undef, metadata !3403, metadata !DIExpression()), !dbg !3555
  br i1 %420, label %475, label %413, !llvm.loop !3893

422:                                              ; preds = %413
  call void @llvm.dbg.value(metadata i8* %263, metadata !3466, metadata !DIExpression()), !dbg !3569
  %423 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %410, i8* noundef %263) #24, !dbg !3895
  call void @llvm.dbg.value(metadata i32 %423, metadata !3535, metadata !DIExpression()), !dbg !3896
  %424 = icmp slt i32 %423, 0, !dbg !3897
  %425 = select i1 %424, i32 0, i32 %423, !dbg !3895
  %426 = add i32 %425, %415, !dbg !3895
  call void @llvm.dbg.value(metadata i32 %426, metadata !3403, metadata !DIExpression()), !dbg !3555
  br i1 %424, label %475, label %463

427:                                              ; preds = %328
  %428 = lshr i24 %266, 20, !dbg !3899
  %429 = lshr i24 %266, 19, !dbg !3900
  %430 = or i24 %428, %429, !dbg !3901
  %431 = and i24 %430, 1, !dbg !3901
  %432 = icmp eq i24 %431, 0, !dbg !3901
  br i1 %432, label %437, label %433, !dbg !3902

433:                                              ; preds = %427
  %434 = call i32 %13(i32 noundef 48, i8* noundef %1) #25, !dbg !3903
  call void @llvm.dbg.value(metadata i32 %434, metadata !3537, metadata !DIExpression()), !dbg !3904
  %435 = icmp slt i32 %434, 0, !dbg !3905
  %436 = add i32 %329, 1, !dbg !3903
  call void @llvm.dbg.value(metadata i32 undef, metadata !3403, metadata !DIExpression()), !dbg !3555
  br i1 %435, label %475, label %437

437:                                              ; preds = %433, %427
  %438 = phi i32 [ %436, %433 ], [ %329, %427 ], !dbg !3559
  call void @llvm.dbg.value(metadata i32 %438, metadata !3403, metadata !DIExpression()), !dbg !3555
  %439 = and i24 %266, 1048576, !dbg !3907
  %440 = icmp eq i24 %439, 0, !dbg !3907
  br i1 %440, label %447, label %441, !dbg !3908

441:                                              ; preds = %437
  %442 = load i8, i8* %24, align 1, !dbg !3909
  %443 = zext i8 %442 to i32, !dbg !3909
  %444 = call i32 %13(i32 noundef %443, i8* noundef %1) #25, !dbg !3909
  call void @llvm.dbg.value(metadata i32 %444, metadata !3542, metadata !DIExpression()), !dbg !3910
  %445 = icmp slt i32 %444, 0, !dbg !3911
  %446 = add i32 %438, 1, !dbg !3909
  call void @llvm.dbg.value(metadata i32 undef, metadata !3403, metadata !DIExpression()), !dbg !3555
  br i1 %445, label %475, label %447

447:                                              ; preds = %441, %437
  %448 = phi i32 [ %446, %441 ], [ %438, %437 ], !dbg !3559
  call void @llvm.dbg.value(metadata i32 %448, metadata !3403, metadata !DIExpression()), !dbg !3555
  %449 = load i32, i32* %19, align 4, !dbg !3913
  call void @llvm.dbg.value(metadata i32 %449, metadata !3486, metadata !DIExpression()), !dbg !3569
  br label %450, !dbg !3914

450:                                              ; preds = %454, %447
  %451 = phi i32 [ %449, %447 ], [ %455, %454 ], !dbg !3915
  %452 = phi i32 [ %448, %447 ], [ %458, %454 ], !dbg !3559
  call void @llvm.dbg.value(metadata i32 %452, metadata !3403, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i32 %451, metadata !3486, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3569
  %453 = icmp sgt i32 %451, 0, !dbg !3916
  br i1 %453, label %454, label %459, !dbg !3914

454:                                              ; preds = %450
  %455 = add nsw i32 %451, -1, !dbg !3917
  call void @llvm.dbg.value(metadata i32 %455, metadata !3486, metadata !DIExpression()), !dbg !3569
  %456 = call i32 %13(i32 noundef 48, i8* noundef %1) #25, !dbg !3918
  call void @llvm.dbg.value(metadata i32 %456, metadata !3546, metadata !DIExpression()), !dbg !3919
  %457 = icmp slt i32 %456, 0, !dbg !3920
  %458 = add i32 %452, 1, !dbg !3918
  call void @llvm.dbg.value(metadata i32 undef, metadata !3403, metadata !DIExpression()), !dbg !3555
  br i1 %457, label %475, label %450, !llvm.loop !3922

459:                                              ; preds = %450
  call void @llvm.dbg.value(metadata i8* %263, metadata !3466, metadata !DIExpression()), !dbg !3569
  %460 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %264, i8* noundef %263) #24, !dbg !3924
  call void @llvm.dbg.value(metadata i32 %460, metadata !3549, metadata !DIExpression()), !dbg !3925
  %461 = icmp slt i32 %460, 0, !dbg !3926
  %462 = add i32 %460, %452, !dbg !3924
  call void @llvm.dbg.value(metadata i32 undef, metadata !3403, metadata !DIExpression()), !dbg !3555
  br i1 %461, label %475, label %463

463:                                              ; preds = %459, %422
  %464 = phi i32 [ %426, %422 ], [ %462, %459 ], !dbg !3559
  call void @llvm.dbg.value(metadata i32 %464, metadata !3403, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i32 %320, metadata !3463, metadata !DIExpression()), !dbg !3569
  %465 = icmp sgt i32 %320, 0, !dbg !3928
  br i1 %465, label %466, label %477, !dbg !3929

466:                                              ; preds = %463
  %467 = add i32 %320, %464, !dbg !3929
  br label %468, !dbg !3929

468:                                              ; preds = %466, %472
  %469 = phi i32 [ %473, %472 ], [ %320, %466 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3403, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i32 %469, metadata !3463, metadata !DIExpression()), !dbg !3569
  %470 = call i32 %13(i32 noundef 32, i8* noundef %1) #25, !dbg !3930
  call void @llvm.dbg.value(metadata i32 %470, metadata !3551, metadata !DIExpression()), !dbg !3931
  %471 = icmp slt i32 %470, 0, !dbg !3932
  br i1 %471, label %475, label %472

472:                                              ; preds = %468
  %473 = add nsw i32 %469, -1, !dbg !3934
  call void @llvm.dbg.value(metadata i32 undef, metadata !3403, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3555
  call void @llvm.dbg.value(metadata i32 %473, metadata !3463, metadata !DIExpression()), !dbg !3569
  %474 = icmp sgt i32 %469, 1, !dbg !3928
  br i1 %474, label %468, label %477, !dbg !3929, !llvm.loop !3935

475:                                              ; preds = %422, %459, %441, %433, %323, %196, %297, %384, %190, %313, %340, %353, %369, %393, %404, %417, %454, %468
  %476 = phi i32 [ %470, %468 ], [ %456, %454 ], [ %419, %417 ], [ %406, %404 ], [ %395, %393 ], [ %371, %369 ], [ %355, %353 ], [ %343, %340 ], [ %315, %313 ], [ %197, %196 ], [ %325, %323 ], [ %434, %433 ], [ %444, %441 ], [ %460, %459 ], [ %423, %422 ], [ %299, %297 ], [ %386, %384 ], [ %191, %190 ]
  call void @llvm.dbg.value(metadata i32 %478, metadata !3403, metadata !DIExpression()), !dbg !3555
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #23, !dbg !3566
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #23, !dbg !3566
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #23, !dbg !3566
  br label %479

477:                                              ; preds = %472, %463, %196, %250, %194, %190, %257
  %478 = phi i32 [ %32, %257 ], [ %193, %190 ], [ %199, %196 ], [ %32, %250 ], [ %32, %194 ], [ %464, %463 ], [ %467, %472 ], !dbg !3559
  call void @llvm.dbg.value(metadata i32 %478, metadata !3403, metadata !DIExpression()), !dbg !3555
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #23, !dbg !3566
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #23, !dbg !3566
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #23, !dbg !3566
  br label %27

479:                                              ; preds = %31, %35, %475
  %480 = phi i32 [ %476, %475 ], [ %32, %31 ], [ %38, %35 ], !dbg !3555
  call void @llvm.lifetime.end.p0i8(i64 25, i8* nonnull %12) #23, !dbg !3937
  ret i32 %480, !dbg !3937
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #10

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3938 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3942, metadata !DIExpression()), !dbg !3944
  call void @llvm.dbg.value(metadata i8* %1, metadata !3943, metadata !DIExpression()), !dbg !3944
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !3945
  store i24 0, i24* %3, align 4, !dbg !3945
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !3945
  store i8 0, i8* %4, align 1, !dbg !3945
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !3945
  store i32 0, i32* %5, align 4, !dbg !3945
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !3945
  store i32 0, i32* %6, align 4, !dbg !3945
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3946
  call void @llvm.dbg.value(metadata i8* %7, metadata !3943, metadata !DIExpression()), !dbg !3944
  %8 = load i8, i8* %7, align 1, !dbg !3947
  %9 = icmp eq i8 %8, 37, !dbg !3949
  br i1 %9, label %10, label %12, !dbg !3950

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3951
  call void @llvm.dbg.value(metadata i8* %11, metadata !3943, metadata !DIExpression()), !dbg !3944
  store i8 37, i8* %4, align 1, !dbg !3953
  br label %18, !dbg !3954

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !3955
  call void @llvm.dbg.value(metadata i8* %13, metadata !3943, metadata !DIExpression()), !dbg !3944
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !3956
  call void @llvm.dbg.value(metadata i8* %14, metadata !3943, metadata !DIExpression()), !dbg !3944
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !3957
  call void @llvm.dbg.value(metadata i8* %15, metadata !3943, metadata !DIExpression()), !dbg !3944
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !3958
  call void @llvm.dbg.value(metadata i8* %16, metadata !3943, metadata !DIExpression()), !dbg !3944
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !3959
  call void @llvm.dbg.value(metadata i8* %17, metadata !3943, metadata !DIExpression()), !dbg !3944
  br label %18, !dbg !3960

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !3944
  ret i8* %19, !dbg !3961
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !3962 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3966, metadata !DIExpression()), !dbg !3973
  call void @llvm.dbg.value(metadata i8* %1, metadata !3967, metadata !DIExpression()), !dbg !3973
  call void @llvm.dbg.value(metadata i8* %2, metadata !3968, metadata !DIExpression()), !dbg !3973
  call void @llvm.dbg.value(metadata i8* %3, metadata !3969, metadata !DIExpression()), !dbg !3973
  call void @llvm.dbg.value(metadata i32 0, metadata !3970, metadata !DIExpression()), !dbg !3973
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !3974

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !3975
  call void @llvm.dbg.value(metadata i32 %9, metadata !3970, metadata !DIExpression()), !dbg !3973
  call void @llvm.dbg.value(metadata i8* %8, metadata !3968, metadata !DIExpression()), !dbg !3973
  %10 = icmp ult i8* %8, %3, !dbg !3976
  br i1 %10, label %11, label %13, !dbg !3977

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !3978
  br label %17, !dbg !3977

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !3979

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !3980
  %16 = icmp eq i8 %15, 0, !dbg !3979
  br i1 %16, label %24, label %17, !dbg !3974

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !3978
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !3981
  call void @llvm.dbg.value(metadata i8* %19, metadata !3968, metadata !DIExpression()), !dbg !3973
  %20 = zext i8 %18 to i32, !dbg !3982
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !3983
  call void @llvm.dbg.value(metadata i32 %21, metadata !3971, metadata !DIExpression()), !dbg !3984
  %22 = icmp slt i32 %21, 0, !dbg !3985
  %23 = add i32 %9, 1, !dbg !3987
  call void @llvm.dbg.value(metadata i32 undef, metadata !3970, metadata !DIExpression()), !dbg !3973
  br i1 %22, label %24, label %7, !llvm.loop !3988

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !3973
  ret i32 %25, !dbg !3990
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #11 !dbg !3991 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3995, metadata !DIExpression()), !dbg !4005
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !3996, metadata !DIExpression()), !dbg !4005
  call void @llvm.dbg.value(metadata i8* %2, metadata !3997, metadata !DIExpression()), !dbg !4005
  call void @llvm.dbg.value(metadata i8* %3, metadata !3998, metadata !DIExpression()), !dbg !4005
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4006
  %6 = load i8, i8* %5, align 1, !dbg !4006
  %7 = zext i8 %6 to i32, !dbg !4007
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !4008
  %9 = icmp eq i32 %8, 0, !dbg !4008
  call void @llvm.dbg.value(metadata i1 %9, metadata !3999, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4005
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !4009
  call void @llvm.dbg.value(metadata i32 %10, metadata !4000, metadata !DIExpression()), !dbg !4005
  %11 = ptrtoint i8* %3 to i32, !dbg !4010
  %12 = ptrtoint i8* %2 to i32, !dbg !4010
  %13 = sub i32 %11, %12, !dbg !4010
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4011
  call void @llvm.dbg.value(metadata i8* %14, metadata !4002, metadata !DIExpression()), !dbg !4005
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4012

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4005
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !3995, metadata !DIExpression()), !dbg !4005
  call void @llvm.dbg.value(metadata i8* %18, metadata !4002, metadata !DIExpression()), !dbg !4005
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4013
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4014
  call void @llvm.dbg.value(metadata i32 %25, metadata !4003, metadata !DIExpression()), !dbg !4015
  %26 = icmp ult i32 %25, 10, !dbg !4016
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4017
  %28 = add i32 %27, %25, !dbg !4015
  %29 = trunc i32 %28 to i8, !dbg !4017
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4018
  call void @llvm.dbg.value(metadata i8* %30, metadata !4002, metadata !DIExpression()), !dbg !4005
  store i8 %29, i8* %30, align 1, !dbg !4019
  call void @llvm.dbg.value(metadata i64 %22, metadata !3995, metadata !DIExpression()), !dbg !4005
  %31 = icmp uge i64 %19, %15, !dbg !4020
  %32 = icmp ugt i8* %30, %2, !dbg !4021
  %33 = and i1 %31, %32, !dbg !4021
  br i1 %33, label %17, label %34, !dbg !4022, !llvm.loop !4023

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4025
  %36 = load i24, i24* %35, align 4, !dbg !4025
  %37 = and i24 %36, 32, !dbg !4025
  %38 = icmp eq i24 %37, 0, !dbg !4025
  br i1 %38, label %44, label %39, !dbg !4027

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4028

40:                                               ; preds = %39
  br label %41, !dbg !4030

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4034
  store i24 %43, i24* %35, align 4, !dbg !4034
  br label %44, !dbg !4035

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4035
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !4036 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4042, metadata !DIExpression()), !dbg !4045
  call void @llvm.dbg.value(metadata i8* %1, metadata !4043, metadata !DIExpression()), !dbg !4045
  call void @llvm.dbg.value(metadata i32 %2, metadata !4044, metadata !DIExpression()), !dbg !4045
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4046
  %5 = load i24, i24* %4, align 4, !dbg !4046
  %6 = lshr i24 %5, 11, !dbg !4046
  %7 = and i24 %6, 15, !dbg !4046
  %8 = zext i24 %7 to i32, !dbg !4046
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4047

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4048
  store i32 %2, i32* %10, align 4, !dbg !4050
  br label %28, !dbg !4051

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4052
  store i8 %12, i8* %1, align 1, !dbg !4053
  br label %28, !dbg !4054

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4055
  %15 = bitcast i8* %1 to i16*, !dbg !4056
  store i16 %14, i16* %15, align 2, !dbg !4057
  br label %28, !dbg !4058

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4059
  store i32 %2, i32* %17, align 4, !dbg !4060
  br label %28, !dbg !4061

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4062
  %20 = bitcast i8* %1 to i64*, !dbg !4063
  store i64 %19, i64* %20, align 8, !dbg !4064
  br label %28, !dbg !4065

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4066
  %23 = bitcast i8* %1 to i64*, !dbg !4067
  store i64 %22, i64* %23, align 8, !dbg !4068
  br label %28, !dbg !4069

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4070
  store i32 %2, i32* %25, align 4, !dbg !4071
  br label %28, !dbg !4072

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4073
  store i32 %2, i32* %27, align 4, !dbg !4074
  br label %28, !dbg !4075

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4076
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @encode_float(double noundef %0, %struct.conversion* nocapture noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3, i8* noundef returned %4, i8** nocapture noundef writeonly %5) unnamed_addr #1 !dbg !4077 {
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  call void @llvm.dbg.value(metadata double %0, metadata !4082, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4083, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i32 %2, metadata !4084, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8* %3, metadata !4085, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8* %4, metadata !4086, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8** %5, metadata !4087, metadata !DIExpression()), !dbg !4103
  %10 = bitcast double %0 to i64, !dbg !4104
  call void @llvm.dbg.value(metadata i64 %10, metadata !4088, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8 0, metadata !4093, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8* %4, metadata !4094, metadata !DIExpression()), !dbg !4103
  %11 = icmp sgt i64 %10, -1, !dbg !4105
  br i1 %11, label %12, label %20, !dbg !4107

12:                                               ; preds = %6
  %13 = bitcast %struct.conversion* %1 to i24*, !dbg !4108
  %14 = load i24, i24* %13, align 4, !dbg !4108
  %15 = and i24 %14, 8, !dbg !4108
  %16 = icmp eq i24 %15, 0, !dbg !4108
  br i1 %16, label %17, label %20, !dbg !4110

17:                                               ; preds = %12
  %18 = and i24 %14, 16, !dbg !4111
  %19 = icmp eq i24 %18, 0, !dbg !4111
  br i1 %19, label %22, label %20, !dbg !4113

20:                                               ; preds = %17, %12, %6
  %21 = phi i8 [ 45, %6 ], [ 43, %12 ], [ 32, %17 ]
  store i8 %21, i8* %3, align 1, !dbg !4114
  br label %22, !dbg !4115

22:                                               ; preds = %20, %17
  %23 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4115
  %24 = load i8, i8* %23, align 1, !dbg !4115
  call void @llvm.dbg.value(metadata i8 %24, metadata !4095, metadata !DIExpression()), !dbg !4103
  %25 = lshr i64 %10, 52, !dbg !4116
  %26 = trunc i64 %25 to i32, !dbg !4117
  %27 = and i32 %26, 2047, !dbg !4117
  call void @llvm.dbg.value(metadata i32 %27, metadata !4096, metadata !DIExpression()), !dbg !4103
  %28 = bitcast i64* %7 to i8*, !dbg !4118
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #23, !dbg !4118
  %29 = and i64 %10, 4503599627370495, !dbg !4119
  call void @llvm.dbg.value(metadata i64 %29, metadata !4097, metadata !DIExpression()), !dbg !4103
  %30 = icmp eq i32 %27, 0, !dbg !4120
  %31 = icmp ne i64 %29, 0, !dbg !4121
  %32 = and i1 %31, %30, !dbg !4121
  call void @llvm.dbg.value(metadata i1 %32, metadata !4098, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4103
  %33 = icmp eq i32 %27, 2047, !dbg !4122
  br i1 %33, label %34, label %56, !dbg !4124

34:                                               ; preds = %22
  %35 = icmp eq i64 %29, 0, !dbg !4125
  %36 = zext i8 %24 to i32, !dbg !4128
  %37 = tail call fastcc i32 @isupper(i32 noundef %36) #24, !dbg !4128
  %38 = icmp eq i32 %37, 0, !dbg !4128
  %39 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !4128
  call void @llvm.dbg.value(metadata i8* %39, metadata !4094, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8* %39, metadata !4094, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8* %39, metadata !4094, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8* %39, metadata !4094, metadata !DIExpression()), !dbg !4103
  br i1 %35, label %40, label %44, !dbg !4129

40:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i8* undef, metadata !4094, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8* undef, metadata !4094, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8* %4, metadata !4094, metadata !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value)), !dbg !4103
  call void @llvm.dbg.value(metadata i8* %4, metadata !4094, metadata !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value)), !dbg !4103
  %41 = select i1 %38, i8 105, i8 73
  %42 = select i1 %38, i8 110, i8 78
  %43 = select i1 %38, i8 102, i8 70
  br label %47

44:                                               ; preds = %34
  %45 = select i1 %38, i8 110, i8 78
  %46 = select i1 %38, i8 97, i8 65
  br label %47

47:                                               ; preds = %44, %40
  %48 = phi i8 [ %41, %40 ], [ %45, %44 ]
  %49 = phi i8 [ %42, %40 ], [ %46, %44 ]
  %50 = phi i8 [ %43, %40 ], [ %45, %44 ]
  store i8 %48, i8* %4, align 1, !dbg !4128
  %51 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !4128
  store i8 %49, i8* %39, align 1, !dbg !4128
  store i8 %50, i8* %51, align 1, !dbg !4128
  %52 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !4128
  call void @llvm.dbg.value(metadata i8* %52, metadata !4094, metadata !DIExpression()), !dbg !4103
  %53 = bitcast %struct.conversion* %1 to i24*, !dbg !4130
  %54 = load i24, i24* %53, align 4, !dbg !4131
  %55 = and i24 %54, -65, !dbg !4131
  store i24 %55, i24* %53, align 4, !dbg !4131
  store i8* %52, i8** %5, align 4, !dbg !4132
  br label %302, !dbg !4133

56:                                               ; preds = %22
  %57 = icmp eq i8 %24, 70, !dbg !4134
  %58 = select i1 %57, i8 102, i8 %24, !dbg !4136
  call void @llvm.dbg.value(metadata i8 %58, metadata !4095, metadata !DIExpression()), !dbg !4103
  %59 = shl nuw nsw i64 %29, 11, !dbg !4137
  call void @llvm.dbg.value(metadata i64 %59, metadata !4097, metadata !DIExpression()), !dbg !4103
  %60 = zext i32 %27 to i64, !dbg !4138
  %61 = or i64 %59, %60, !dbg !4140
  %62 = icmp eq i64 %61, 0, !dbg !4141
  br i1 %62, label %80, label %63, !dbg !4142

63:                                               ; preds = %56
  br i1 %32, label %64, label %70, !dbg !4143

64:                                               ; preds = %63, %64
  %65 = phi i64 [ %67, %64 ], [ %59, %63 ], !dbg !4103
  %66 = phi i32 [ %69, %64 ], [ 0, %63 ], !dbg !4103
  call void @llvm.dbg.value(metadata i32 %66, metadata !4096, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i64 %65, metadata !4097, metadata !DIExpression()), !dbg !4103
  %67 = shl nuw i64 %65, 1, !dbg !4145
  call void @llvm.dbg.value(metadata i64 %67, metadata !4097, metadata !DIExpression()), !dbg !4103
  %68 = icmp sgt i64 %67, -1, !dbg !4148
  %69 = add nsw i32 %66, -1, !dbg !4149
  call void @llvm.dbg.value(metadata i32 %69, metadata !4096, metadata !DIExpression()), !dbg !4103
  br i1 %68, label %64, label %70, !dbg !4151, !llvm.loop !4152

70:                                               ; preds = %64, %63
  %71 = phi i64 [ %59, %63 ], [ %67, %64 ], !dbg !4154
  %72 = phi i32 [ %27, %63 ], [ %66, %64 ], !dbg !4155
  call void @llvm.dbg.value(metadata i32 %72, metadata !4096, metadata !DIExpression()), !dbg !4103
  %73 = add nsw i32 %72, -1022, !dbg !4156
  call void @llvm.dbg.value(metadata i32 %73, metadata !4096, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i64 %71, metadata !4097, metadata !DIExpression()), !dbg !4103
  %74 = or i64 %71, -9223372036854775808, !dbg !4154
  call void @llvm.dbg.value(metadata i64 %74, metadata !4097, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i32 0, metadata !4099, metadata !DIExpression()), !dbg !4103
  %75 = icmp slt i32 %72, 1020, !dbg !4157
  br i1 %75, label %76, label %80, !dbg !4158

76:                                               ; preds = %70, %93
  %77 = phi i32 [ %96, %93 ], [ 0, %70 ]
  %78 = phi i32 [ %95, %93 ], [ %73, %70 ]
  %79 = phi i64 [ %94, %93 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %77, metadata !4099, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i32 %78, metadata !4096, metadata !DIExpression()), !dbg !4103
  br label %85, !dbg !4159

80:                                               ; preds = %93, %56, %70
  %81 = phi i64 [ %74, %70 ], [ %59, %56 ], [ %94, %93 ]
  %82 = phi i32 [ %73, %70 ], [ %27, %56 ], [ %95, %93 ], !dbg !4103
  %83 = phi i32 [ 0, %70 ], [ 0, %56 ], [ %96, %93 ], !dbg !4103
  call void @llvm.dbg.value(metadata i32 %83, metadata !4099, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i32 %82, metadata !4096, metadata !DIExpression()), !dbg !4103
  %84 = icmp sgt i32 %82, 0, !dbg !4161
  br i1 %84, label %101, label %114, !dbg !4162

85:                                               ; preds = %76, %85
  %86 = phi i64 [ %88, %85 ], [ %79, %76 ], !dbg !4103
  %87 = phi i32 [ %89, %85 ], [ %78, %76 ], !dbg !4103
  call void @llvm.dbg.value(metadata i32 %87, metadata !4096, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i64 %86, metadata !4097, metadata !DIExpression()), !dbg !4103
  %88 = lshr i64 %86, 1, !dbg !4163
  call void @llvm.dbg.value(metadata i64 %88, metadata !4097, metadata !DIExpression()), !dbg !4103
  %89 = add nsw i32 %87, 1, !dbg !4165
  call void @llvm.dbg.value(metadata i32 %89, metadata !4096, metadata !DIExpression()), !dbg !4103
  %90 = lshr i64 %86, 33, !dbg !4166
  %91 = trunc i64 %90 to i32, !dbg !4167
  %92 = icmp ugt i32 %91, 858993458, !dbg !4168
  br i1 %92, label %85, label %93, !dbg !4169, !llvm.loop !4170

93:                                               ; preds = %85
  %94 = mul i64 %88, 5, !dbg !4172
  call void @llvm.dbg.value(metadata i64 %94, metadata !4097, metadata !DIExpression()), !dbg !4103
  %95 = add nsw i32 %87, 2, !dbg !4173
  call void @llvm.dbg.value(metadata i32 %95, metadata !4096, metadata !DIExpression()), !dbg !4103
  %96 = add nsw i32 %77, -1, !dbg !4174
  call void @llvm.dbg.value(metadata i32 %96, metadata !4099, metadata !DIExpression()), !dbg !4103
  %97 = icmp slt i32 %87, -4, !dbg !4157
  br i1 %97, label %76, label %80, !dbg !4158, !llvm.loop !4175

98:                                               ; preds = %108
  %99 = add nsw i32 %103, 1, !dbg !4177
  store i64 %111, i64* %7, align 8, !dbg !4179
  call void @llvm.dbg.value(metadata i32 %99, metadata !4099, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i32 %112, metadata !4096, metadata !DIExpression()), !dbg !4103
  %100 = icmp sgt i32 %110, 1, !dbg !4161
  br i1 %100, label %101, label %114, !dbg !4162, !llvm.loop !4181

101:                                              ; preds = %80, %98
  %102 = phi i64 [ %111, %98 ], [ %81, %80 ], !dbg !4183
  %103 = phi i32 [ %99, %98 ], [ %83, %80 ]
  %104 = phi i32 [ %112, %98 ], [ %82, %80 ]
  call void @llvm.dbg.value(metadata i32 %103, metadata !4099, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i32 %104, metadata !4096, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i64 %102, metadata !4097, metadata !DIExpression()), !dbg !4103
  %105 = add i64 %102, 2, !dbg !4183
  call void @llvm.dbg.value(metadata i64 %105, metadata !4097, metadata !DIExpression()), !dbg !4103
  store i64 %105, i64* %7, align 8, !dbg !4183
  call void @llvm.dbg.value(metadata i64* %7, metadata !4097, metadata !DIExpression(DW_OP_deref)), !dbg !4103
  call fastcc void @_ldiv5(i64* noundef nonnull %7) #24, !dbg !4184
  %106 = add nsw i32 %104, -1, !dbg !4185
  call void @llvm.dbg.value(metadata i32 %106, metadata !4096, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i32 %99, metadata !4099, metadata !DIExpression()), !dbg !4103
  %107 = load i64, i64* %7, align 8
  br label %108, !dbg !4186

108:                                              ; preds = %108, %101
  %109 = phi i64 [ %107, %101 ], [ %111, %108 ], !dbg !4103
  %110 = phi i32 [ %106, %101 ], [ %112, %108 ], !dbg !4187
  call void @llvm.dbg.value(metadata i32 %110, metadata !4096, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i64 %109, metadata !4097, metadata !DIExpression()), !dbg !4103
  %111 = shl i64 %109, 1, !dbg !4179
  call void @llvm.dbg.value(metadata i64 %111, metadata !4097, metadata !DIExpression()), !dbg !4103
  %112 = add nsw i32 %110, -1, !dbg !4188
  call void @llvm.dbg.value(metadata i32 %112, metadata !4096, metadata !DIExpression()), !dbg !4103
  %113 = icmp sgt i64 %111, -1, !dbg !4189
  br i1 %113, label %108, label %98, !dbg !4190

114:                                              ; preds = %98, %80
  %115 = phi i64 [ %81, %80 ], [ %111, %98 ], !dbg !4191
  %116 = phi i32 [ %82, %80 ], [ %112, %98 ], !dbg !4103
  %117 = phi i32 [ %83, %80 ], [ %99, %98 ], !dbg !4103
  %118 = sub nsw i32 4, %116, !dbg !4192
  call void @llvm.dbg.value(metadata i64 %115, metadata !4097, metadata !DIExpression()), !dbg !4103
  %119 = zext i32 %118 to i64, !dbg !4191
  %120 = lshr i64 %115, %119, !dbg !4191
  call void @llvm.dbg.value(metadata i64 %120, metadata !4097, metadata !DIExpression()), !dbg !4103
  %121 = and i8 %58, -33, !dbg !4193
  %122 = icmp eq i8 %121, 71, !dbg !4193
  br i1 %122, label %123, label %143, !dbg !4193

123:                                              ; preds = %114
  %124 = icmp slt i32 %117, -3, !dbg !4195
  %125 = icmp sgt i32 %117, %2
  %126 = or i1 %124, %125, !dbg !4198
  br i1 %126, label %127, label %132, !dbg !4198

127:                                              ; preds = %123
  %128 = add nsw i8 %58, -2, !dbg !4199
  call void @llvm.dbg.value(metadata i8 %128, metadata !4095, metadata !DIExpression()), !dbg !4103
  %129 = icmp sgt i32 %2, 0, !dbg !4201
  %130 = sext i1 %129 to i32, !dbg !4203
  %131 = add nsw i32 %130, %2, !dbg !4203
  br label %134, !dbg !4203

132:                                              ; preds = %123
  call void @llvm.dbg.value(metadata i8 102, metadata !4095, metadata !DIExpression()), !dbg !4103
  %133 = sub nsw i32 %2, %117, !dbg !4204
  call void @llvm.dbg.value(metadata i32 %133, metadata !4084, metadata !DIExpression()), !dbg !4103
  br label %134

134:                                              ; preds = %127, %132
  %135 = phi i32 [ %133, %132 ], [ %131, %127 ]
  %136 = phi i8 [ 102, %132 ], [ %128, %127 ], !dbg !4206
  call void @llvm.dbg.value(metadata i8 %136, metadata !4095, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i32 %135, metadata !4084, metadata !DIExpression()), !dbg !4103
  %137 = bitcast %struct.conversion* %1 to i24*, !dbg !4207
  %138 = load i24, i24* %137, align 4, !dbg !4207
  %139 = and i24 %138, 32, !dbg !4207
  %140 = icmp eq i24 %139, 0, !dbg !4207
  %141 = icmp sgt i32 %135, 0
  %142 = select i1 %140, i1 %141, i1 false, !dbg !4209
  br label %143, !dbg !4209

143:                                              ; preds = %134, %114
  %144 = phi i32 [ %2, %114 ], [ %135, %134 ]
  %145 = phi i1 [ false, %114 ], [ %142, %134 ]
  %146 = phi i8 [ %58, %114 ], [ %136, %134 ], !dbg !4103
  call void @llvm.dbg.value(metadata i8 %146, metadata !4095, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8 poison, metadata !4093, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i32 %144, metadata !4084, metadata !DIExpression()), !dbg !4103
  %147 = icmp eq i8 %146, 102, !dbg !4210
  %148 = add nsw i32 %144, %117, !dbg !4212
  %149 = icmp sgt i32 %148, 0, !dbg !4212
  %150 = select i1 %149, i32 %148, i32 0, !dbg !4212
  %151 = add nsw i32 %144, 1, !dbg !4212
  %152 = select i1 %147, i32 %150, i32 %151, !dbg !4212
  call void @llvm.dbg.value(metadata i32 %152, metadata !4100, metadata !DIExpression()), !dbg !4103
  %153 = bitcast i32* %8 to i8*, !dbg !4213
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %153) #23, !dbg !4213
  call void @llvm.dbg.value(metadata i32 16, metadata !4101, metadata !DIExpression()), !dbg !4103
  store i32 16, i32* %8, align 4, !dbg !4214
  %154 = icmp slt i32 %152, 16, !dbg !4215
  call void @llvm.dbg.value(metadata i32 undef, metadata !4100, metadata !DIExpression()), !dbg !4103
  %155 = bitcast i64* %9 to i8*, !dbg !4216
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #23, !dbg !4216
  call void @llvm.dbg.value(metadata i64 576460752303423488, metadata !4102, metadata !DIExpression()), !dbg !4103
  store i64 576460752303423488, i64* %9, align 8, !dbg !4217
  %156 = select i1 %154, i32 %152, i32 16, !dbg !4103
  call void @llvm.dbg.value(metadata i32 %156, metadata !4100, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4103
  %157 = icmp eq i32 %156, 0, !dbg !4218
  br i1 %157, label %164, label %158, !dbg !4218

158:                                              ; preds = %143, %158
  %159 = phi i32 [ %160, %158 ], [ %156, %143 ]
  call void @llvm.dbg.value(metadata i32 %159, metadata !4100, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4103
  %160 = add nsw i32 %159, -1, !dbg !4219
  call void @llvm.dbg.value(metadata i32 %160, metadata !4100, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i64* %9, metadata !4102, metadata !DIExpression(DW_OP_deref)), !dbg !4103
  call fastcc void @_ldiv10(i64* noundef nonnull %9) #24, !dbg !4220
  call void @llvm.dbg.value(metadata i32 %160, metadata !4100, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4103
  %161 = icmp eq i32 %160, 0, !dbg !4218
  br i1 %161, label %162, label %158, !dbg !4218, !llvm.loop !4222

162:                                              ; preds = %158
  %163 = load i64, i64* %9, align 8, !dbg !4224
  br label %164, !dbg !4224

164:                                              ; preds = %162, %143
  %165 = phi i64 [ %163, %162 ], [ 576460752303423488, %143 ], !dbg !4224
  call void @llvm.dbg.value(metadata i64 %165, metadata !4102, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i64 %120, metadata !4097, metadata !DIExpression()), !dbg !4103
  %166 = add i64 %120, %165, !dbg !4225
  call void @llvm.dbg.value(metadata i64 %166, metadata !4097, metadata !DIExpression()), !dbg !4103
  store i64 %166, i64* %7, align 8, !dbg !4225
  %167 = icmp ugt i64 %166, 1152921504606846975, !dbg !4226
  br i1 %167, label %168, label %170, !dbg !4228

168:                                              ; preds = %164
  call void @llvm.dbg.value(metadata i64* %7, metadata !4097, metadata !DIExpression(DW_OP_deref)), !dbg !4103
  call fastcc void @_ldiv10(i64* noundef nonnull %7) #24, !dbg !4229
  %169 = add nsw i32 %117, 1, !dbg !4231
  call void @llvm.dbg.value(metadata i32 %169, metadata !4099, metadata !DIExpression()), !dbg !4103
  br label %170, !dbg !4232

170:                                              ; preds = %168, %164
  %171 = phi i32 [ %169, %168 ], [ %117, %164 ], !dbg !4103
  call void @llvm.dbg.value(metadata i32 %171, metadata !4099, metadata !DIExpression()), !dbg !4103
  br i1 %147, label %172, label %211, !dbg !4233

172:                                              ; preds = %170
  %173 = icmp sgt i32 %171, 0, !dbg !4234
  br i1 %173, label %174, label %186, !dbg !4238

174:                                              ; preds = %172, %174
  %175 = phi i32 [ %179, %174 ], [ %171, %172 ]
  %176 = phi i8* [ %178, %174 ], [ %4, %172 ]
  call void @llvm.dbg.value(metadata i32 %175, metadata !4099, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8* %176, metadata !4094, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i64* %7, metadata !4097, metadata !DIExpression(DW_OP_deref)), !dbg !4103
  call void @llvm.dbg.value(metadata i32* %8, metadata !4101, metadata !DIExpression(DW_OP_deref)), !dbg !4103
  %177 = call fastcc zeroext i8 @_get_digit(i64* noundef nonnull %7, i32* noundef nonnull %8) #24, !dbg !4239
  %178 = getelementptr inbounds i8, i8* %176, i32 1, !dbg !4242
  call void @llvm.dbg.value(metadata i8* %178, metadata !4094, metadata !DIExpression()), !dbg !4103
  store i8 %177, i8* %176, align 1, !dbg !4243
  %179 = add nsw i32 %175, -1, !dbg !4244
  call void @llvm.dbg.value(metadata i32 %179, metadata !4099, metadata !DIExpression()), !dbg !4103
  %180 = icmp ugt i32 %175, 1, !dbg !4245
  %181 = load i32, i32* %8, align 4, !dbg !4246
  call void @llvm.dbg.value(metadata i32 %181, metadata !4101, metadata !DIExpression()), !dbg !4103
  %182 = icmp sgt i32 %181, 0, !dbg !4246
  %183 = select i1 %180, i1 %182, i1 false, !dbg !4246
  br i1 %183, label %174, label %184, !dbg !4247, !llvm.loop !4248

184:                                              ; preds = %174
  %185 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 2, i32 0, !dbg !4250
  store i32 %179, i32* %185, align 4, !dbg !4251
  call void @llvm.dbg.value(metadata i32 0, metadata !4099, metadata !DIExpression()), !dbg !4103
  br label %188, !dbg !4252

186:                                              ; preds = %172
  %187 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !4253
  call void @llvm.dbg.value(metadata i8* %187, metadata !4094, metadata !DIExpression()), !dbg !4103
  store i8 48, i8* %4, align 1, !dbg !4255
  br label %188

188:                                              ; preds = %186, %184
  %189 = phi i8* [ %178, %184 ], [ %187, %186 ], !dbg !4103
  %190 = phi i32 [ 0, %184 ], [ %171, %186 ], !dbg !4103
  call void @llvm.dbg.value(metadata i32 %190, metadata !4099, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8* %189, metadata !4094, metadata !DIExpression()), !dbg !4103
  %191 = bitcast %struct.conversion* %1 to i24*, !dbg !4256
  %192 = load i24, i24* %191, align 4, !dbg !4256
  %193 = and i24 %192, 32, !dbg !4256
  %194 = icmp ne i24 %193, 0, !dbg !4256
  %195 = icmp sgt i32 %144, 0
  %196 = select i1 %194, i1 true, i1 %195, !dbg !4258
  br i1 %196, label %197, label %199, !dbg !4258

197:                                              ; preds = %188
  %198 = getelementptr inbounds i8, i8* %189, i32 1, !dbg !4259
  call void @llvm.dbg.value(metadata i8* %198, metadata !4094, metadata !DIExpression()), !dbg !4103
  store i8 46, i8* %189, align 1, !dbg !4261
  br label %199, !dbg !4262

199:                                              ; preds = %188, %197
  %200 = phi i8* [ %198, %197 ], [ %189, %188 ], !dbg !4103
  call void @llvm.dbg.value(metadata i8* %200, metadata !4094, metadata !DIExpression()), !dbg !4103
  %201 = icmp slt i32 %190, 0, !dbg !4263
  %202 = select i1 %201, i1 %195, i1 false, !dbg !4265
  br i1 %202, label %203, label %225, !dbg !4265

203:                                              ; preds = %199
  %204 = sub nsw i32 0, %190, !dbg !4266
  %205 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 2, i32 0, !dbg !4268
  %206 = icmp ult i32 %144, %204, !dbg !4269
  %207 = select i1 %206, i32 %144, i32 %204, !dbg !4271
  store i32 %207, i32* %205, align 4, !dbg !4272
  %208 = sub nsw i32 %144, %207, !dbg !4273
  call void @llvm.dbg.value(metadata i32 %208, metadata !4084, metadata !DIExpression()), !dbg !4103
  %209 = load i24, i24* %191, align 4, !dbg !4274
  %210 = or i24 %209, 2097152, !dbg !4274
  store i24 %210, i24* %191, align 4, !dbg !4274
  br label %225, !dbg !4275

211:                                              ; preds = %170
  call void @llvm.dbg.value(metadata i64* %7, metadata !4097, metadata !DIExpression(DW_OP_deref)), !dbg !4103
  call void @llvm.dbg.value(metadata i32* %8, metadata !4101, metadata !DIExpression(DW_OP_deref)), !dbg !4103
  %212 = call fastcc zeroext i8 @_get_digit(i64* noundef nonnull %7, i32* noundef nonnull %8) #24, !dbg !4276
  store i8 %212, i8* %4, align 1, !dbg !4278
  %213 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !4279
  call void @llvm.dbg.value(metadata i8* %213, metadata !4094, metadata !DIExpression()), !dbg !4103
  %214 = icmp ne i8 %212, 48, !dbg !4281
  %215 = sext i1 %214 to i32, !dbg !4282
  %216 = add nsw i32 %171, %215, !dbg !4282
  call void @llvm.dbg.value(metadata i32 %216, metadata !4099, metadata !DIExpression()), !dbg !4103
  %217 = bitcast %struct.conversion* %1 to i24*, !dbg !4283
  %218 = load i24, i24* %217, align 4, !dbg !4283
  %219 = and i24 %218, 32, !dbg !4283
  %220 = icmp ne i24 %219, 0, !dbg !4283
  %221 = icmp sgt i32 %144, 0
  %222 = select i1 %220, i1 true, i1 %221, !dbg !4285
  br i1 %222, label %223, label %243, !dbg !4285

223:                                              ; preds = %211
  %224 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !4286
  call void @llvm.dbg.value(metadata i8* %224, metadata !4094, metadata !DIExpression()), !dbg !4103
  store i8 46, i8* %213, align 1, !dbg !4288
  br label %225, !dbg !4289

225:                                              ; preds = %223, %199, %203
  %226 = phi i32 [ %208, %203 ], [ %144, %199 ], [ %144, %223 ], !dbg !4103
  %227 = phi i8* [ %200, %203 ], [ %200, %199 ], [ %224, %223 ], !dbg !4290
  %228 = phi i32 [ %190, %203 ], [ %190, %199 ], [ %216, %223 ], !dbg !4290
  call void @llvm.dbg.value(metadata i32 %228, metadata !4099, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8* %227, metadata !4094, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i32 %226, metadata !4084, metadata !DIExpression()), !dbg !4103
  %229 = icmp sgt i32 %226, 0, !dbg !4291
  %230 = load i32, i32* %8, align 4, !dbg !4292
  call void @llvm.dbg.value(metadata i32 %230, metadata !4101, metadata !DIExpression()), !dbg !4103
  %231 = icmp sgt i32 %230, 0, !dbg !4292
  %232 = select i1 %229, i1 %231, i1 false, !dbg !4292
  br i1 %232, label %233, label %243, !dbg !4293

233:                                              ; preds = %225, %233
  %234 = phi i8* [ %237, %233 ], [ %227, %225 ]
  %235 = phi i32 [ %238, %233 ], [ %226, %225 ]
  call void @llvm.dbg.value(metadata i8* %234, metadata !4094, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i32 %235, metadata !4084, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i64* %7, metadata !4097, metadata !DIExpression(DW_OP_deref)), !dbg !4103
  call void @llvm.dbg.value(metadata i32* %8, metadata !4101, metadata !DIExpression(DW_OP_deref)), !dbg !4103
  %236 = call fastcc zeroext i8 @_get_digit(i64* noundef nonnull %7, i32* noundef nonnull %8) #24, !dbg !4294
  %237 = getelementptr inbounds i8, i8* %234, i32 1, !dbg !4296
  call void @llvm.dbg.value(metadata i8* %237, metadata !4094, metadata !DIExpression()), !dbg !4103
  store i8 %236, i8* %234, align 1, !dbg !4297
  %238 = add nsw i32 %235, -1, !dbg !4298
  call void @llvm.dbg.value(metadata i32 %238, metadata !4084, metadata !DIExpression()), !dbg !4103
  %239 = icmp ugt i32 %235, 1, !dbg !4291
  %240 = load i32, i32* %8, align 4, !dbg !4292
  call void @llvm.dbg.value(metadata i32 %240, metadata !4101, metadata !DIExpression()), !dbg !4103
  %241 = icmp sgt i32 %240, 0, !dbg !4292
  %242 = select i1 %239, i1 %241, i1 false, !dbg !4292
  br i1 %242, label %233, label %243, !dbg !4293, !llvm.loop !4299

243:                                              ; preds = %233, %211, %225
  %244 = phi i32 [ %228, %225 ], [ %216, %211 ], [ %228, %233 ]
  %245 = phi i32 [ %226, %225 ], [ %144, %211 ], [ %238, %233 ], !dbg !4103
  %246 = phi i8* [ %227, %225 ], [ %213, %211 ], [ %237, %233 ], !dbg !4103
  %247 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 3, i32 0, !dbg !4301
  store i32 %245, i32* %247, align 4, !dbg !4302
  br i1 %145, label %248, label %254, !dbg !4303

248:                                              ; preds = %243
  store i32 0, i32* %247, align 4, !dbg !4304
  br label %249, !dbg !4307

249:                                              ; preds = %249, %248
  %250 = phi i8* [ %246, %248 ], [ %251, %249 ], !dbg !4103
  call void @llvm.dbg.value(metadata i8* %250, metadata !4094, metadata !DIExpression()), !dbg !4103
  %251 = getelementptr inbounds i8, i8* %250, i32 -1, !dbg !4308
  call void @llvm.dbg.value(metadata i8* %251, metadata !4094, metadata !DIExpression()), !dbg !4103
  %252 = load i8, i8* %251, align 1, !dbg !4309
  switch i8 %252, label %254 [
    i8 48, label %249
    i8 46, label %253
  ], !dbg !4307

253:                                              ; preds = %249
  br label %254, !dbg !4310

254:                                              ; preds = %249, %253, %243
  %255 = phi i8* [ %246, %243 ], [ %251, %253 ], [ %250, %249 ], !dbg !4103
  call void @llvm.dbg.value(metadata i8* %255, metadata !4094, metadata !DIExpression()), !dbg !4103
  %256 = and i8 %146, -33, !dbg !4310
  %257 = icmp eq i8 %256, 69, !dbg !4310
  br i1 %257, label %258, label %287, !dbg !4310

258:                                              ; preds = %254
  %259 = getelementptr inbounds i8, i8* %255, i32 1, !dbg !4312
  call void @llvm.dbg.value(metadata i8* %259, metadata !4094, metadata !DIExpression()), !dbg !4103
  store i8 %146, i8* %255, align 1, !dbg !4314
  %260 = icmp slt i32 %244, 0, !dbg !4315
  %261 = sub nsw i32 0, %244, !dbg !4317
  %262 = select i1 %260, i8 45, i8 43, !dbg !4317
  %263 = select i1 %260, i32 %261, i32 %244, !dbg !4317
  %264 = getelementptr inbounds i8, i8* %255, i32 2, !dbg !4318
  store i8 %262, i8* %259, align 1, !dbg !4318
  call void @llvm.dbg.value(metadata i32 %263, metadata !4099, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8* %264, metadata !4094, metadata !DIExpression()), !dbg !4103
  %265 = icmp sgt i32 %263, 99, !dbg !4319
  br i1 %265, label %266, label %274, !dbg !4321

266:                                              ; preds = %258
  %267 = freeze i32 %263
  %268 = udiv i32 %267, 100, !dbg !4322
  %269 = trunc i32 %268 to i8, !dbg !4324
  %270 = add i8 %269, 48, !dbg !4324
  %271 = getelementptr inbounds i8, i8* %255, i32 3, !dbg !4325
  call void @llvm.dbg.value(metadata i8* %271, metadata !4094, metadata !DIExpression()), !dbg !4103
  store i8 %270, i8* %264, align 1, !dbg !4326
  %272 = mul i32 %268, 100
  %273 = sub i32 %267, %272
  call void @llvm.dbg.value(metadata i32 %273, metadata !4099, metadata !DIExpression()), !dbg !4103
  br label %274, !dbg !4327

274:                                              ; preds = %266, %258
  %275 = phi i8* [ %271, %266 ], [ %264, %258 ], !dbg !4328
  %276 = phi i32 [ %273, %266 ], [ %263, %258 ], !dbg !4328
  call void @llvm.dbg.value(metadata i32 %276, metadata !4099, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8* %275, metadata !4094, metadata !DIExpression()), !dbg !4103
  %277 = freeze i32 %276
  %278 = udiv i32 %277, 10, !dbg !4329
  %279 = trunc i32 %278 to i8, !dbg !4330
  %280 = add i8 %279, 48, !dbg !4330
  %281 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !4331
  call void @llvm.dbg.value(metadata i8* %281, metadata !4094, metadata !DIExpression()), !dbg !4103
  store i8 %280, i8* %275, align 1, !dbg !4332
  %282 = mul i32 %278, 10
  %283 = sub i32 %277, %282
  %284 = trunc i32 %283 to i8, !dbg !4333
  %285 = or i8 %284, 48, !dbg !4333
  %286 = getelementptr inbounds i8, i8* %275, i32 2, !dbg !4334
  call void @llvm.dbg.value(metadata i8* %286, metadata !4094, metadata !DIExpression()), !dbg !4103
  store i8 %285, i8* %281, align 1, !dbg !4335
  br label %287, !dbg !4336

287:                                              ; preds = %254, %274
  %288 = phi i8* [ %286, %274 ], [ %255, %254 ], !dbg !4103
  call void @llvm.dbg.value(metadata i8* %288, metadata !4094, metadata !DIExpression()), !dbg !4103
  %289 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 2, i32 0, !dbg !4337
  %290 = load i32, i32* %289, align 4, !dbg !4337
  %291 = icmp sgt i32 %290, 0, !dbg !4338
  br i1 %291, label %296, label %292, !dbg !4339

292:                                              ; preds = %287
  %293 = load i32, i32* %247, align 4, !dbg !4340
  %294 = icmp sgt i32 %293, 0, !dbg !4341
  %295 = select i1 %294, i24 4194304, i24 0, !dbg !4339
  br label %296, !dbg !4339

296:                                              ; preds = %292, %287
  %297 = phi i24 [ 4194304, %287 ], [ %295, %292 ]
  %298 = bitcast %struct.conversion* %1 to i24*, !dbg !4342
  %299 = load i24, i24* %298, align 4, !dbg !4343
  %300 = and i24 %299, -4194305, !dbg !4343
  %301 = or i24 %300, %297, !dbg !4343
  store i24 %301, i24* %298, align 4, !dbg !4343
  store i8* %288, i8** %5, align 4, !dbg !4344
  store i8 0, i8* %288, align 1, !dbg !4345
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #23, !dbg !4346
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %153) #23, !dbg !4346
  br label %302

302:                                              ; preds = %296, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #23, !dbg !4346
  ret i8* %4, !dbg !4346
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #12 !dbg !4347 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4350, metadata !DIExpression()), !dbg !4351
  %2 = add i32 %0, -48, !dbg !4352
  %3 = icmp ult i32 %2, 10, !dbg !4353
  %4 = zext i1 %3 to i32, !dbg !4353
  ret i32 %4, !dbg !4354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #12 !dbg !4355 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4357, metadata !DIExpression()), !dbg !4358
  %2 = add i32 %0, -65, !dbg !4359
  %3 = icmp ult i32 %2, 26, !dbg !4360
  %4 = zext i1 %3 to i32, !dbg !4360
  ret i32 %4, !dbg !4361
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_ldiv5(i64* nocapture noundef %0) unnamed_addr #1 !dbg !4362 {
  call void @llvm.dbg.value(metadata i64* %0, metadata !4367, metadata !DIExpression()), !dbg !4372
  %2 = load i64, i64* %0, align 8, !dbg !4373
  call void @llvm.dbg.value(metadata i64 %2, metadata !4368, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4372
  %3 = lshr i64 %2, 32, !dbg !4374
  call void @llvm.dbg.value(metadata i64 %3, metadata !4369, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4372
  call void @llvm.dbg.value(metadata i32 858993459, metadata !4370, metadata !DIExpression()), !dbg !4372
  %4 = tail call i32 asm "", "=r,0"(i32 858993459) #27, !dbg !4375, !srcloc !4376
  call void @llvm.dbg.value(metadata i32 %4, metadata !4370, metadata !DIExpression()), !dbg !4372
  %5 = zext i32 %4 to i64, !dbg !4377
  %6 = mul nuw i64 %5, 4294967297, !dbg !4378
  call void @llvm.dbg.value(metadata i64 %6, metadata !4371, metadata !DIExpression()), !dbg !4372
  %7 = and i64 %2, 4294967295, !dbg !4379
  %8 = mul nuw i64 %7, %5, !dbg !4380
  %9 = add i64 %6, %8, !dbg !4381
  call void @llvm.dbg.value(metadata i64 %9, metadata !4371, metadata !DIExpression()), !dbg !4372
  %10 = lshr i64 %9, 32, !dbg !4382
  call void @llvm.dbg.value(metadata i64 %10, metadata !4371, metadata !DIExpression()), !dbg !4372
  call void @llvm.dbg.value(metadata i64 undef, metadata !4371, metadata !DIExpression()), !dbg !4372
  %11 = mul nuw i64 %3, %5, !dbg !4383
  %12 = add i64 %11, %8, !dbg !4384
  %13 = add i64 %12, %10, !dbg !4385
  call void @llvm.dbg.value(metadata i64 %13, metadata !4371, metadata !DIExpression()), !dbg !4372
  %14 = lshr i64 %13, 32, !dbg !4386
  call void @llvm.dbg.value(metadata i64 %14, metadata !4371, metadata !DIExpression()), !dbg !4372
  %15 = add nuw i64 %14, %11, !dbg !4387
  call void @llvm.dbg.value(metadata i64 %15, metadata !4371, metadata !DIExpression()), !dbg !4372
  store i64 %15, i64* %0, align 8, !dbg !4388
  ret void, !dbg !4389
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_ldiv10(i64* nocapture noundef %0) unnamed_addr #1 !dbg !4390 {
  call void @llvm.dbg.value(metadata i64* %0, metadata !4392, metadata !DIExpression()), !dbg !4393
  %2 = load i64, i64* %0, align 8, !dbg !4394
  %3 = lshr i64 %2, 1, !dbg !4394
  store i64 %3, i64* %0, align 8, !dbg !4394
  tail call fastcc void @_ldiv5(i64* noundef nonnull %0) #24, !dbg !4395
  ret void, !dbg !4396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc zeroext i8 @_get_digit(i64* nocapture noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !4397 {
  call void @llvm.dbg.value(metadata i64* %0, metadata !4401, metadata !DIExpression()), !dbg !4404
  call void @llvm.dbg.value(metadata i32* %1, metadata !4402, metadata !DIExpression()), !dbg !4404
  %3 = load i32, i32* %1, align 4, !dbg !4405
  %4 = icmp sgt i32 %3, 0, !dbg !4407
  br i1 %4, label %5, label %13, !dbg !4408

5:                                                ; preds = %2
  %6 = add nsw i32 %3, -1, !dbg !4409
  store i32 %6, i32* %1, align 4, !dbg !4409
  %7 = load i64, i64* %0, align 8, !dbg !4411
  %8 = mul i64 %7, 10, !dbg !4411
  %9 = lshr i64 %8, 60, !dbg !4412
  %10 = trunc i64 %9 to i8, !dbg !4413
  %11 = or i8 %10, 48, !dbg !4413
  call void @llvm.dbg.value(metadata i8 %11, metadata !4403, metadata !DIExpression()), !dbg !4404
  %12 = and i64 %8, 1152921504606846974, !dbg !4414
  store i64 %12, i64* %0, align 8, !dbg !4414
  br label %13, !dbg !4415

13:                                               ; preds = %2, %5
  %14 = phi i8 [ %11, %5 ], [ 48, %2 ], !dbg !4416
  call void @llvm.dbg.value(metadata i8 %14, metadata !4403, metadata !DIExpression()), !dbg !4404
  ret i8 %14, !dbg !4417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #12 !dbg !4418 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4422, metadata !DIExpression()), !dbg !4423
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4424

2:                                                ; preds = %1
  br label %4, !dbg !4425

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4427

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4428
  ret i32 %5, !dbg !4429
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !4430 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4432, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i8* %1, metadata !4433, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i8 1, metadata !4434, metadata !DIExpression()), !dbg !4435
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4436

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4434, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i8* %5, metadata !4433, metadata !DIExpression()), !dbg !4435
  %6 = load i8, i8* %5, align 1, !dbg !4437
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4439

7:                                                ; preds = %4
  br label %11, !dbg !4440

8:                                                ; preds = %4
  br label %11, !dbg !4442

9:                                                ; preds = %4
  br label %11, !dbg !4443

10:                                               ; preds = %4
  br label %11, !dbg !4444

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !4445
  %14 = or i24 %13, %12, !dbg !4445
  store i24 %14, i24* %3, align 4, !dbg !4445
  call void @llvm.dbg.value(metadata i8 poison, metadata !4434, metadata !DIExpression()), !dbg !4435
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4433, metadata !DIExpression()), !dbg !4435
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4434, metadata !DIExpression()), !dbg !4435
  call void @llvm.dbg.value(metadata i8* %15, metadata !4433, metadata !DIExpression()), !dbg !4435
  %17 = load i24, i24* %3, align 4, !dbg !4446
  %18 = and i24 %17, 68, !dbg !4448
  %19 = icmp eq i24 %18, 68, !dbg !4448
  br i1 %19, label %20, label %22, !dbg !4448

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !4449
  store i24 %21, i24* %3, align 4, !dbg !4449
  br label %22, !dbg !4451

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !4452
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !4453 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4455, metadata !DIExpression()), !dbg !4459
  call void @llvm.dbg.value(metadata i8* %1, metadata !4456, metadata !DIExpression()), !dbg !4459
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4460
  %5 = load i24, i24* %4, align 4, !dbg !4461
  %6 = or i24 %5, 128, !dbg !4461
  store i24 %6, i24* %4, align 4, !dbg !4461
  call void @llvm.dbg.value(metadata i8* %1, metadata !4456, metadata !DIExpression()), !dbg !4459
  %7 = load i8, i8* %1, align 1, !dbg !4462
  %8 = icmp eq i8 %7, 42, !dbg !4464
  br i1 %8, label %9, label %12, !dbg !4465

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !4466
  store i24 %10, i24* %4, align 4, !dbg !4466
  call void @llvm.dbg.value(metadata i8* %1, metadata !4456, metadata !DIExpression()), !dbg !4459
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4468
  call void @llvm.dbg.value(metadata i8* %11, metadata !4456, metadata !DIExpression()), !dbg !4459
  store i8* %11, i8** %3, align 4, !dbg !4468
  br label %29, !dbg !4469

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4457, metadata !DIExpression()), !dbg !4459
  call void @llvm.dbg.value(metadata i8** %3, metadata !4456, metadata !DIExpression(DW_OP_deref)), !dbg !4459
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !4470
  call void @llvm.dbg.value(metadata i32 %13, metadata !4458, metadata !DIExpression()), !dbg !4459
  %14 = load i8*, i8** %3, align 4, !dbg !4471
  call void @llvm.dbg.value(metadata i8* %14, metadata !4456, metadata !DIExpression()), !dbg !4459
  %15 = icmp eq i8* %14, %1, !dbg !4473
  br i1 %15, label %29, label %16, !dbg !4474

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !4475
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4477
  store i32 %13, i32* %18, align 4, !dbg !4478
  %19 = lshr i32 %13, 31, !dbg !4479
  %20 = lshr i24 %17, 1, !dbg !4480
  %21 = and i24 %20, 1, !dbg !4480
  %22 = zext i24 %21 to i32, !dbg !4480
  %23 = or i32 %19, %22, !dbg !4480
  %24 = trunc i32 %23 to i24, !dbg !4480
  %25 = shl nuw nsw i24 %24, 1, !dbg !4480
  %26 = and i24 %17, -131, !dbg !4480
  %27 = or i24 %26, 128, !dbg !4480
  %28 = or i24 %25, %27, !dbg !4480
  store i24 %28, i24* %4, align 4, !dbg !4480
  br label %29, !dbg !4481

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !4459
  ret i8* %30, !dbg !4482
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !4483 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4485, metadata !DIExpression()), !dbg !4488
  call void @llvm.dbg.value(metadata i8* %1, metadata !4486, metadata !DIExpression()), !dbg !4488
  %4 = load i8, i8* %1, align 1, !dbg !4489
  %5 = icmp eq i8 %4, 46, !dbg !4490
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !4491
  %7 = load i24, i24* %6, align 4, !dbg !4492
  %8 = select i1 %5, i24 512, i24 0, !dbg !4492
  %9 = and i24 %7, -513, !dbg !4492
  %10 = or i24 %9, %8, !dbg !4492
  store i24 %10, i24* %6, align 4, !dbg !4492
  br i1 %5, label %11, label %32, !dbg !4493

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4486, metadata !DIExpression()), !dbg !4488
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4494
  call void @llvm.dbg.value(metadata i8* %12, metadata !4486, metadata !DIExpression()), !dbg !4488
  store i8* %12, i8** %3, align 4, !dbg !4494
  %13 = load i8, i8* %12, align 1, !dbg !4495
  %14 = icmp eq i8 %13, 42, !dbg !4497
  br i1 %14, label %15, label %18, !dbg !4498

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !4499
  store i24 %16, i24* %6, align 4, !dbg !4499
  call void @llvm.dbg.value(metadata i8* %12, metadata !4486, metadata !DIExpression()), !dbg !4488
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4501
  call void @llvm.dbg.value(metadata i8* %17, metadata !4486, metadata !DIExpression()), !dbg !4488
  store i8* %17, i8** %3, align 4, !dbg !4501
  br label %32, !dbg !4502

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !4486, metadata !DIExpression(DW_OP_deref)), !dbg !4488
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !4503
  call void @llvm.dbg.value(metadata i32 %19, metadata !4487, metadata !DIExpression()), !dbg !4488
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4504
  store i32 %19, i32* %20, align 4, !dbg !4505
  %21 = lshr i32 %19, 31, !dbg !4506
  %22 = load i24, i24* %6, align 4, !dbg !4507
  %23 = lshr i24 %22, 1, !dbg !4507
  %24 = and i24 %23, 1, !dbg !4507
  %25 = zext i24 %24 to i32, !dbg !4507
  %26 = or i32 %21, %25, !dbg !4507
  %27 = trunc i32 %26 to i24, !dbg !4507
  %28 = shl nuw nsw i24 %27, 1, !dbg !4507
  %29 = and i24 %22, -3, !dbg !4507
  %30 = or i24 %28, %29, !dbg !4507
  store i24 %30, i24* %6, align 4, !dbg !4507
  %31 = load i8*, i8** %3, align 4, !dbg !4508
  call void @llvm.dbg.value(metadata i8* %31, metadata !4486, metadata !DIExpression()), !dbg !4488
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !4488
  ret i8* %33, !dbg !4509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !4510 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4512, metadata !DIExpression()), !dbg !4514
  call void @llvm.dbg.value(metadata i8* %1, metadata !4513, metadata !DIExpression()), !dbg !4514
  %3 = load i8, i8* %1, align 1, !dbg !4515
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !4516

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4517
  call void @llvm.dbg.value(metadata i8* %5, metadata !4513, metadata !DIExpression()), !dbg !4514
  %6 = load i8, i8* %5, align 1, !dbg !4520
  %7 = icmp eq i8 %6, 104, !dbg !4521
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4522
  %9 = load i24, i24* %8, align 4, !dbg !4522
  %10 = and i24 %9, -30721, !dbg !4522
  br i1 %7, label %11, label %14, !dbg !4523

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !4524
  store i24 %12, i24* %8, align 4, !dbg !4524
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4526
  call void @llvm.dbg.value(metadata i8* %13, metadata !4513, metadata !DIExpression()), !dbg !4514
  br label %56, !dbg !4527

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !4528
  store i24 %15, i24* %8, align 4, !dbg !4528
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4530
  call void @llvm.dbg.value(metadata i8* %17, metadata !4513, metadata !DIExpression()), !dbg !4514
  %18 = load i8, i8* %17, align 1, !dbg !4532
  %19 = icmp eq i8 %18, 108, !dbg !4533
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !4534
  %21 = load i24, i24* %20, align 4, !dbg !4534
  %22 = and i24 %21, -30721, !dbg !4534
  br i1 %19, label %23, label %26, !dbg !4535

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !4536
  store i24 %24, i24* %20, align 4, !dbg !4536
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4538
  call void @llvm.dbg.value(metadata i8* %25, metadata !4513, metadata !DIExpression()), !dbg !4514
  br label %56, !dbg !4539

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !4540
  store i24 %27, i24* %20, align 4, !dbg !4540
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !4542
  %30 = load i24, i24* %29, align 4, !dbg !4543
  %31 = and i24 %30, -30721, !dbg !4543
  %32 = or i24 %31, 10240, !dbg !4543
  store i24 %32, i24* %29, align 4, !dbg !4543
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4544
  call void @llvm.dbg.value(metadata i8* %33, metadata !4513, metadata !DIExpression()), !dbg !4514
  br label %56, !dbg !4545

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !4546
  %36 = load i24, i24* %35, align 4, !dbg !4547
  %37 = and i24 %36, -30721, !dbg !4547
  %38 = or i24 %37, 12288, !dbg !4547
  store i24 %38, i24* %35, align 4, !dbg !4547
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4548
  call void @llvm.dbg.value(metadata i8* %39, metadata !4513, metadata !DIExpression()), !dbg !4514
  br label %56, !dbg !4549

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !4550
  %42 = load i24, i24* %41, align 4, !dbg !4551
  %43 = and i24 %42, -30721, !dbg !4551
  %44 = or i24 %43, 14336, !dbg !4551
  store i24 %44, i24* %41, align 4, !dbg !4551
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4552
  call void @llvm.dbg.value(metadata i8* %45, metadata !4513, metadata !DIExpression()), !dbg !4514
  br label %56, !dbg !4553

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !4554
  %48 = load i24, i24* %47, align 4, !dbg !4555
  %49 = and i24 %48, -30723, !dbg !4555
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4556
  call void @llvm.dbg.value(metadata i8* %50, metadata !4513, metadata !DIExpression()), !dbg !4514
  %51 = or i24 %49, 16386, !dbg !4557
  store i24 %51, i24* %47, align 4, !dbg !4557
  br label %56, !dbg !4558

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !4559
  %54 = load i24, i24* %53, align 4, !dbg !4560
  %55 = and i24 %54, -30721, !dbg !4560
  store i24 %55, i24* %53, align 4, !dbg !4560
  br label %56, !dbg !4561

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !4513, metadata !DIExpression()), !dbg !4514
  ret i8* %57, !dbg !4562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !4563 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4565, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i8* %1, metadata !4566, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i8 0, metadata !4567, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i8* %1, metadata !4566, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4570
  %3 = load i8, i8* %1, align 1, !dbg !4571
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4572
  store i8 %3, i8* %4, align 1, !dbg !4573
  switch i8 %3, label %50 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %36
    i8 115, label %43
    i8 112, label %43
  ], !dbg !4574

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !4575

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4576
  %9 = load i24, i24* %8, align 4, !dbg !4576
  %10 = and i24 %9, -458753, !dbg !4576
  %11 = or i24 %10, %7, !dbg !4576
  call void @llvm.dbg.label(metadata !4568), !dbg !4577
  %12 = and i24 %9, 30720, !dbg !4578
  %13 = icmp eq i24 %12, 16384, !dbg !4578
  %14 = zext i1 %13 to i24, !dbg !4580
  %15 = or i24 %11, %14, !dbg !4580
  %16 = icmp eq i8 %3, 99, !dbg !4581
  br i1 %16, label %17, label %54, !dbg !4583

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !4584
  %19 = icmp ne i24 %18, 0, !dbg !4584
  call void @llvm.dbg.value(metadata i1 %19, metadata !4567, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4570
  br label %54, !dbg !4586

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !4587
  %22 = load i24, i24* %21, align 4, !dbg !4588
  %23 = and i8 %3, -33, !dbg !4589
  %24 = icmp eq i8 %23, 65, !dbg !4589
  %25 = select i1 %24, i24 32768, i24 0, !dbg !4589
  %26 = and i24 %22, -491521, !dbg !4590
  %27 = or i24 %26, %25, !dbg !4590
  %28 = or i24 %27, 262144, !dbg !4590
  br i1 %24, label %54, label %29, !dbg !4591

29:                                               ; preds = %20
  %30 = lshr i24 %22, 11, !dbg !4592
  %31 = trunc i24 %30 to i4, !dbg !4594
  switch i4 %31, label %34 [
    i4 3, label %32
    i4 0, label %54
    i4 -8, label %54
  ], !dbg !4594

32:                                               ; preds = %29
  %33 = and i24 %28, -227329, !dbg !4595
  br label %54, !dbg !4597

34:                                               ; preds = %29
  %35 = or i24 %27, 262145, !dbg !4598
  br label %54, !dbg !4601

36:                                               ; preds = %2
  %37 = bitcast %struct.conversion* %0 to i24*, !dbg !4602
  %38 = load i24, i24* %37, align 4, !dbg !4603
  %39 = and i24 %38, -458753, !dbg !4603
  %40 = or i24 %39, 196608, !dbg !4603
  %41 = and i24 %38, 30720, !dbg !4604
  %42 = icmp eq i24 %41, 16384, !dbg !4604
  br label %54, !dbg !4606

43:                                               ; preds = %2, %2
  %44 = bitcast %struct.conversion* %0 to i24*, !dbg !4607
  %45 = load i24, i24* %44, align 4, !dbg !4608
  %46 = and i24 %45, -458753, !dbg !4608
  %47 = or i24 %46, 196608, !dbg !4608
  %48 = and i24 %45, 30720, !dbg !4609
  %49 = icmp ne i24 %48, 0, !dbg !4609
  br label %54, !dbg !4611

50:                                               ; preds = %2
  %51 = bitcast %struct.conversion* %0 to i24*, !dbg !4612
  %52 = load i24, i24* %51, align 4, !dbg !4613
  %53 = or i24 %52, 1, !dbg !4613
  br label %54, !dbg !4614

54:                                               ; preds = %43, %36, %29, %29, %20, %32, %34, %17, %6, %50
  %55 = phi i24 [ %47, %43 ], [ %40, %36 ], [ %28, %29 ], [ %28, %29 ], [ %28, %20 ], [ %33, %32 ], [ %35, %34 ], [ %15, %17 ], [ %15, %6 ], [ %53, %50 ], !dbg !4615
  %56 = phi i1 [ %49, %43 ], [ %42, %36 ], [ false, %29 ], [ false, %29 ], [ true, %20 ], [ false, %32 ], [ false, %34 ], [ %19, %17 ], [ false, %6 ], [ false, %50 ]
  %57 = bitcast %struct.conversion* %0 to i24*, !dbg !4616
  %58 = zext i1 %56 to i32
  %59 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4617
  call void @llvm.dbg.value(metadata i8* %59, metadata !4566, metadata !DIExpression()), !dbg !4570
  call void @llvm.dbg.value(metadata i8 poison, metadata !4567, metadata !DIExpression()), !dbg !4570
  %60 = lshr i24 %55, 1, !dbg !4615
  %61 = and i24 %60, 1, !dbg !4615
  %62 = zext i24 %61 to i32, !dbg !4615
  %63 = or i32 %62, %58, !dbg !4615
  %64 = trunc i32 %63 to i24, !dbg !4615
  %65 = shl nuw nsw i24 %64, 1, !dbg !4615
  %66 = and i24 %55, -3, !dbg !4615
  %67 = or i24 %65, %66, !dbg !4615
  store i24 %67, i24* %57, align 4, !dbg !4615
  ret i8* %59, !dbg !4618
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #11 !dbg !4619 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !4623, metadata !DIExpression()), !dbg !4626
  %2 = load i8*, i8** %0, align 4, !dbg !4627
  call void @llvm.dbg.value(metadata i8* %2, metadata !4624, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.value(metadata i32 0, metadata !4625, metadata !DIExpression()), !dbg !4626
  %3 = load i8, i8* %2, align 1, !dbg !4628
  %4 = zext i8 %3 to i32, !dbg !4629
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !4630
  %6 = icmp eq i32 %5, 0, !dbg !4631
  br i1 %6, label %19, label %7, !dbg !4631

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4625, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.value(metadata i8* %10, metadata !4624, metadata !DIExpression()), !dbg !4626
  %11 = mul i32 %9, 10, !dbg !4632
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !4634
  call void @llvm.dbg.value(metadata i8* %12, metadata !4624, metadata !DIExpression()), !dbg !4626
  %13 = add i32 %11, -48, !dbg !4635
  %14 = add i32 %13, %8, !dbg !4636
  call void @llvm.dbg.value(metadata i32 %14, metadata !4625, metadata !DIExpression()), !dbg !4626
  %15 = load i8, i8* %12, align 1, !dbg !4628
  %16 = zext i8 %15 to i32, !dbg !4629
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !4630
  %18 = icmp eq i32 %17, 0, !dbg !4631
  br i1 %18, label %19, label %7, !dbg !4631, !llvm.loop !4637

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !4626
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !4626
  store i8* %20, i8** %0, align 4, !dbg !4639
  ret i32 %21, !dbg !4640
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !4641 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !4643, !srcloc !4644
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !4645, !srcloc !4646
  tail call void asm sideeffect ".globl\09CONFIG_SENSOR\0A\09.equ\09CONFIG_SENSOR,1\0A\09.type\09CONFIG_SENSOR,%object", ""() #23, !dbg !4647, !srcloc !4648
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !4649, !srcloc !4650
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !4651, !srcloc !4652
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !4653, !srcloc !4654
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,86\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !4655, !srcloc !4656
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !4657, !srcloc !4658
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !4659, !srcloc !4660
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !4661, !srcloc !4662
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !4663, !srcloc !4664
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !4665, !srcloc !4666
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !4667, !srcloc !4668
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !4669, !srcloc !4670
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !4671, !srcloc !4672
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !4673, !srcloc !4674
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !4675, !srcloc !4676
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !4677, !srcloc !4678
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !4679, !srcloc !4680
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !4681, !srcloc !4682
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !4683, !srcloc !4684
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !4685, !srcloc !4686
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !4687, !srcloc !4688
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !4689, !srcloc !4690
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !4691, !srcloc !4692
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !4693, !srcloc !4694
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !4695, !srcloc !4696
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !4697, !srcloc !4698
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !4699, !srcloc !4700
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !4701, !srcloc !4702
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !4703, !srcloc !4704
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !4705, !srcloc !4706
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !4707, !srcloc !4708
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4709, !srcloc !4710
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !4711, !srcloc !4712
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4713, !srcloc !4714
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !4715, !srcloc !4716
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !4717, !srcloc !4718
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4719, !srcloc !4720
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !4721, !srcloc !4722
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !4723, !srcloc !4724
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !4725, !srcloc !4726
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !4727, !srcloc !4728
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !4729, !srcloc !4730
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !4731, !srcloc !4732
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4733, !srcloc !4734
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !4735, !srcloc !4736
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #23, !dbg !4737, !srcloc !4738
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !4739, !srcloc !4740
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !4741, !srcloc !4742
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !4743, !srcloc !4744
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !4745, !srcloc !4746
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !4747, !srcloc !4748
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !4749, !srcloc !4750
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !4751, !srcloc !4752
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !4753, !srcloc !4754
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !4755, !srcloc !4756
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !4757, !srcloc !4758
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !4759, !srcloc !4760
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !4761, !srcloc !4762
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !4763, !srcloc !4764
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !4765, !srcloc !4766
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !4767, !srcloc !4768
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !4769, !srcloc !4770
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !4771, !srcloc !4772
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !4773, !srcloc !4774
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !4775, !srcloc !4776
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !4777, !srcloc !4778
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !4779, !srcloc !4780
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !4781, !srcloc !4782
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !4783, !srcloc !4784
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !4785, !srcloc !4786
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !4787, !srcloc !4788
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !4789, !srcloc !4790
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !4791, !srcloc !4792
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !4793, !srcloc !4794
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !4795, !srcloc !4796
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !4797, !srcloc !4798
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !4799, !srcloc !4800
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !4801, !srcloc !4802
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !4803, !srcloc !4804
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !4805, !srcloc !4806
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_NEONKEY\0A\09.equ\09CONFIG_BOARD_96B_NEONKEY,1\0A\09.type\09CONFIG_BOARD_96B_NEONKEY,%object", ""() #23, !dbg !4807, !srcloc !4808
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !4809, !srcloc !4810
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !4811, !srcloc !4812
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !4813, !srcloc !4814
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !4815, !srcloc !4816
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !4817, !srcloc !4818
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F411XE\0A\09.equ\09CONFIG_SOC_STM32F411XE,1\0A\09.type\09CONFIG_SOC_STM32F411XE,%object", ""() #23, !dbg !4819, !srcloc !4820
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !4821, !srcloc !4822
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !4823, !srcloc !4824
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !4825, !srcloc !4826
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !4827, !srcloc !4828
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !4829, !srcloc !4830
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !4831, !srcloc !4832
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !4833, !srcloc !4834
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !4835, !srcloc !4836
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !4837, !srcloc !4838
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !4839, !srcloc !4840
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !4841, !srcloc !4842
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !4843, !srcloc !4844
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !4845, !srcloc !4846
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !4847, !srcloc !4848
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !4849, !srcloc !4850
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !4851, !srcloc !4852
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !4853, !srcloc !4854
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !4855, !srcloc !4856
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !4857, !srcloc !4858
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !4859, !srcloc !4860
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !4861, !srcloc !4862
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !4863, !srcloc !4864
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !4865, !srcloc !4866
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !4867, !srcloc !4868
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !4869, !srcloc !4870
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !4871, !srcloc !4872
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !4873, !srcloc !4874
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !4875, !srcloc !4876
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !4877, !srcloc !4878
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !4879, !srcloc !4880
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !4881, !srcloc !4882
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !4883, !srcloc !4884
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !4885, !srcloc !4886
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !4887, !srcloc !4888
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !4889, !srcloc !4890
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !4891, !srcloc !4892
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !4893, !srcloc !4894
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !4895, !srcloc !4896
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !4897, !srcloc !4898
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !4899, !srcloc !4900
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !4901, !srcloc !4902
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !4903, !srcloc !4904
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !4905, !srcloc !4906
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !4907, !srcloc !4908
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !4909, !srcloc !4910
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !4911, !srcloc !4912
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !4913, !srcloc !4914
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !4915, !srcloc !4916
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !4917, !srcloc !4918
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !4919, !srcloc !4920
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !4921, !srcloc !4922
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !4923, !srcloc !4924
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4925, !srcloc !4926
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !4927, !srcloc !4928
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !4929, !srcloc !4930
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !4931, !srcloc !4932
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !4933, !srcloc !4934
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !4935, !srcloc !4936
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !4937, !srcloc !4938
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !4939, !srcloc !4940
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !4941, !srcloc !4942
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !4943, !srcloc !4944
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !4945, !srcloc !4946
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !4947, !srcloc !4948
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !4949, !srcloc !4950
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !4951, !srcloc !4952
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !4953, !srcloc !4954
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !4955, !srcloc !4956
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !4957, !srcloc !4958
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !4959, !srcloc !4960
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !4961, !srcloc !4962
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !4963, !srcloc !4964
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !4965, !srcloc !4966
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !4967, !srcloc !4968
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !4969, !srcloc !4970
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !4971, !srcloc !4972
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !4973, !srcloc !4974
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !4975, !srcloc !4976
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !4977, !srcloc !4978
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !4979, !srcloc !4980
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !4981, !srcloc !4982
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !4983, !srcloc !4984
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !4985, !srcloc !4986
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !4987, !srcloc !4988
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !4989, !srcloc !4990
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !4991, !srcloc !4992
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !4993, !srcloc !4994
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !4995, !srcloc !4996
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !4997, !srcloc !4998
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !4999, !srcloc !5000
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5001, !srcloc !5002
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5003, !srcloc !5004
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5005, !srcloc !5006
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5007, !srcloc !5008
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5009, !srcloc !5010
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5011, !srcloc !5012
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5013, !srcloc !5014
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5015, !srcloc !5016
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5017, !srcloc !5018
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5019, !srcloc !5020
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5021, !srcloc !5022
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5023, !srcloc !5024
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5025, !srcloc !5026
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5027, !srcloc !5028
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5029, !srcloc !5030
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5031, !srcloc !5032
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5033, !srcloc !5034
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5035, !srcloc !5036
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5037, !srcloc !5038
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5039, !srcloc !5040
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5041, !srcloc !5042
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5043, !srcloc !5044
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5045, !srcloc !5046
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5047, !srcloc !5048
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5049, !srcloc !5050
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5051, !srcloc !5052
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5053, !srcloc !5054
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5055, !srcloc !5056
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5057, !srcloc !5058
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5059, !srcloc !5060
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5061, !srcloc !5062
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5063, !srcloc !5064
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5065, !srcloc !5066
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5067, !srcloc !5068
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5069, !srcloc !5070
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5071, !srcloc !5072
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5073, !srcloc !5074
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5075, !srcloc !5076
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5077, !srcloc !5078
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5079, !srcloc !5080
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5081, !srcloc !5082
  tail call void asm sideeffect ".globl\09CONFIG_SENSOR_INIT_PRIORITY\0A\09.equ\09CONFIG_SENSOR_INIT_PRIORITY,90\0A\09.type\09CONFIG_SENSOR_INIT_PRIORITY,%object", ""() #23, !dbg !5083, !srcloc !5084
  tail call void asm sideeffect ".globl\09CONFIG_TMP112_FULL_SCALE_RUNTIME\0A\09.equ\09CONFIG_TMP112_FULL_SCALE_RUNTIME,1\0A\09.type\09CONFIG_TMP112_FULL_SCALE_RUNTIME,%object", ""() #23, !dbg !5085, !srcloc !5086
  tail call void asm sideeffect ".globl\09CONFIG_TMP112_SAMPLING_FREQUENCY_RUNTIME\0A\09.equ\09CONFIG_TMP112_SAMPLING_FREQUENCY_RUNTIME,1\0A\09.type\09CONFIG_TMP112_SAMPLING_FREQUENCY_RUNTIME,%object", ""() #23, !dbg !5087, !srcloc !5088
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5089, !srcloc !5090
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5091, !srcloc !5092
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5093, !srcloc !5094
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5095, !srcloc !5096
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5097, !srcloc !5098
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5099, !srcloc !5100
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5101, !srcloc !5102
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5103, !srcloc !5104
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5105, !srcloc !5106
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5107, !srcloc !5108
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5109, !srcloc !5110
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5111, !srcloc !5112
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5113, !srcloc !5114
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5115, !srcloc !5116
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5117, !srcloc !5118
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5119, !srcloc !5120
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5121, !srcloc !5122
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5123, !srcloc !5124
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FP_SUPPORT\0A\09.equ\09CONFIG_CBPRINTF_FP_SUPPORT,1\0A\09.type\09CONFIG_CBPRINTF_FP_SUPPORT,%object", ""() #23, !dbg !5125, !srcloc !5126
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5127, !srcloc !5128
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5129, !srcloc !5130
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5131, !srcloc !5132
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5133, !srcloc !5134
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5135, !srcloc !5136
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5137, !srcloc !5138
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5139, !srcloc !5140
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5141, !srcloc !5142
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5143, !srcloc !5144
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5145, !srcloc !5146
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5147, !srcloc !5148
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5149, !srcloc !5150
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5151, !srcloc !5152
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5153, !srcloc !5154
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5155, !srcloc !5156
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5157, !srcloc !5158
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5159, !srcloc !5160
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5161, !srcloc !5162
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5163, !srcloc !5164
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5165, !srcloc !5166
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5167, !srcloc !5168
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5169, !srcloc !5170
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5171, !srcloc !5172
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5173, !srcloc !5174
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5175, !srcloc !5176
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5177, !srcloc !5178
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5179, !srcloc !5180
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5181, !srcloc !5182
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5183, !srcloc !5184
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5185, !srcloc !5186
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5187, !srcloc !5188
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5189, !srcloc !5190
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5191, !srcloc !5192
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5193, !srcloc !5194
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5195, !srcloc !5196
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5197, !srcloc !5198
  ret void, !dbg !5199
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5200 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5202, metadata !DIExpression()), !dbg !5204
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !5205
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !5206
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !5207, !srcloc !5216
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5207
  call void @llvm.dbg.value(metadata i32 %3, metadata !5213, metadata !DIExpression()) #23, !dbg !5217
  call void @llvm.dbg.value(metadata i32 undef, metadata !5214, metadata !DIExpression()) #23, !dbg !5217
  call void @llvm.dbg.value(metadata i32 %3, metadata !5203, metadata !DIExpression()), !dbg !5204
  call void @llvm.dbg.value(metadata i32 %3, metadata !5218, metadata !DIExpression()) #23, !dbg !5223
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !5225, !srcloc !5226
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5227
  ret i32 0, !dbg !5228
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #13 !dbg !5229 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5231
  %2 = or i32 %1, 512, !dbg !5231
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5231
  ret void, !dbg !5232
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #13 !dbg !5233 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5234
  %2 = or i32 %1, 1024, !dbg !5234
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5234
  ret void, !dbg !5235
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #12 !dbg !5236 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5238, metadata !DIExpression()), !dbg !5239
  ret i32 0, !dbg !5240
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5241 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5290, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !5291, metadata !DIExpression()), !dbg !5292
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !5293
  ret void, !dbg !5294
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !5295 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5312, metadata !DIExpression()), !dbg !5315
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !5313, metadata !DIExpression()), !dbg !5315
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5316
  %4 = load i32, i32* %3, align 4, !dbg !5316
  call void @llvm.dbg.value(metadata i32 %4, metadata !5314, metadata !DIExpression()), !dbg !5315
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !5317
  ret void, !dbg !5318
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !5319 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5323, metadata !DIExpression()), !dbg !5326
  call void @llvm.dbg.value(metadata i8* %0, metadata !5324, metadata !DIExpression()), !dbg !5326
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !5327
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !5327
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !5325, metadata !DIExpression()), !dbg !5328
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !5328
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !5329
  %5 = bitcast i8* %4 to i32*, !dbg !5329
  %6 = load i32, i32* %5, align 4, !dbg !5329
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !5330
  store i32 %6, i32* %7, align 4, !dbg !5331
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !5332
  unreachable, !dbg !5333
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !5334 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5337, metadata !DIExpression()), !dbg !5338
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !5339
  ret void, !dbg !5340
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5341 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5345, metadata !DIExpression()), !dbg !5346
  %2 = icmp sgt i32 %0, -1, !dbg !5347
  br i1 %2, label %3, label %8, !dbg !5349

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5350, !srcloc !5352
  %4 = and i32 %0, 31, !dbg !5353
  %5 = shl nuw i32 1, %4, !dbg !5354
  %6 = lshr i32 %0, 5, !dbg !5355
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !5356
  store volatile i32 %5, i32* %7, align 4, !dbg !5357
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5358, !srcloc !5359
  br label %8, !dbg !5360

8:                                                ; preds = %3, %1
  ret void, !dbg !5361
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !5362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5364, metadata !DIExpression()), !dbg !5365
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !5366
  ret void, !dbg !5367
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5370, metadata !DIExpression()), !dbg !5371
  %2 = icmp sgt i32 %0, -1, !dbg !5372
  br i1 %2, label %3, label %8, !dbg !5374

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !5375
  %5 = shl nuw i32 1, %4, !dbg !5377
  %6 = lshr i32 %0, 5, !dbg !5378
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !5379
  store volatile i32 %5, i32* %7, align 4, !dbg !5380
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5381, !srcloc !5385
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5386, !srcloc !5389
  br label %8, !dbg !5390

8:                                                ; preds = %3, %1
  ret void, !dbg !5391
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #14 !dbg !5392 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5396, metadata !DIExpression()), !dbg !5397
  %2 = lshr i32 %0, 5, !dbg !5398
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !5399
  %4 = load volatile i32, i32* %3, align 4, !dbg !5399
  %5 = and i32 %0, 31, !dbg !5400
  %6 = shl nuw i32 1, %5, !dbg !5400
  %7 = and i32 %4, %6, !dbg !5401
  ret i32 %7, !dbg !5402
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !5403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5407, metadata !DIExpression()), !dbg !5410
  call void @llvm.dbg.value(metadata i32 %1, metadata !5408, metadata !DIExpression()), !dbg !5410
  call void @llvm.dbg.value(metadata i32 %2, metadata !5409, metadata !DIExpression()), !dbg !5410
  %4 = add i32 %1, 1, !dbg !5411
  call void @llvm.dbg.value(metadata i32 %4, metadata !5408, metadata !DIExpression()), !dbg !5410
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !5414
  ret void, !dbg !5415
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5420, metadata !DIExpression()), !dbg !5422
  call void @llvm.dbg.value(metadata i32 %1, metadata !5421, metadata !DIExpression()), !dbg !5422
  %3 = trunc i32 %1 to i8, !dbg !5423
  %4 = shl i8 %3, 4, !dbg !5423
  %5 = and i32 %0, 15, !dbg !5425
  %6 = add nsw i32 %5, -4, !dbg !5425
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !5425
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5425
  %9 = icmp slt i32 %0, 0, !dbg !5425
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !5425
  store volatile i8 %4, i8* %10, align 1, !dbg !5423
  ret void, !dbg !5426
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !5427 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5429, metadata !DIExpression()), !dbg !5430
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !5431
  ret void, !dbg !5432
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !5433 {
  tail call void @z_SysNmiOnReset() #25, !dbg !5435
  tail call void @z_arm_int_exit() #25, !dbg !5436
  ret void, !dbg !5437
}

; Function Attrs: optsize
declare !dbg !5438 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !5439 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !5441 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !5443
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !5444
  tail call void @z_bss_zero() #25, !dbg !5445
  tail call void @z_data_copy() #25, !dbg !5446
  tail call void @z_arm_interrupt_init() #25, !dbg !5447
  tail call void @z_cstart() #28, !dbg !5448
  unreachable, !dbg !5448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !5449 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !5450
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5451, !srcloc !5454
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5455, !srcloc !5458
  ret void, !dbg !5459
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !5460 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !5461
  %2 = and i32 %1, -15728641, !dbg !5461
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !5461
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !5462, !srcloc !5469
  call void @llvm.dbg.value(metadata i32 %3, metadata !5467, metadata !DIExpression()) #23, !dbg !5470
  %4 = and i32 %3, -5, !dbg !5471
  call void @llvm.dbg.value(metadata i32 %4, metadata !5472, metadata !DIExpression()) #23, !dbg !5477
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5481, !srcloc !5458
  ret void, !dbg !5483
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !5484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5487, metadata !DIExpression()), !dbg !5488
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5489
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !5490
  store i32 %0, i32* %3, align 4, !dbg !5491
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !5492
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !5493
  store i32 %4, i32* %5, align 4, !dbg !5494
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5495
  %7 = or i32 %6, 268435456, !dbg !5495
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5495
  call void @llvm.dbg.value(metadata i32 0, metadata !5496, metadata !DIExpression()) #23, !dbg !5499
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5501, !srcloc !5502
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5503
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !5504
  %10 = load i32, i32* %9, align 4, !dbg !5504
  ret i32 %10, !dbg !5505
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !5506 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5616, metadata !DIExpression()), !dbg !5624
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !5617, metadata !DIExpression()), !dbg !5624
  call void @llvm.dbg.value(metadata i8* %2, metadata !5618, metadata !DIExpression()), !dbg !5624
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !5619, metadata !DIExpression()), !dbg !5624
  call void @llvm.dbg.value(metadata i8* %4, metadata !5620, metadata !DIExpression()), !dbg !5624
  call void @llvm.dbg.value(metadata i8* %5, metadata !5621, metadata !DIExpression()), !dbg !5624
  call void @llvm.dbg.value(metadata i8* %6, metadata !5622, metadata !DIExpression()), !dbg !5624
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !5625
  call void @llvm.dbg.value(metadata i8* %8, metadata !5623, metadata !DIExpression()), !dbg !5624
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !5626
  %10 = bitcast i8* %9 to i32*, !dbg !5626
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !5627
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !5628
  %12 = bitcast i8* %8 to i32*, !dbg !5629
  store i32 %11, i32* %12, align 4, !dbg !5630
  %13 = ptrtoint i8* %4 to i32, !dbg !5631
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !5632
  %15 = bitcast i8* %14 to i32*, !dbg !5632
  store i32 %13, i32* %15, align 4, !dbg !5633
  %16 = ptrtoint i8* %5 to i32, !dbg !5634
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !5635
  %18 = bitcast i8* %17 to i32*, !dbg !5635
  store i32 %16, i32* %18, align 4, !dbg !5636
  %19 = ptrtoint i8* %6 to i32, !dbg !5637
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !5638
  %21 = bitcast i8* %20 to i32*, !dbg !5638
  store i32 %19, i32* %21, align 4, !dbg !5639
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !5640
  %23 = bitcast i8* %22 to i32*, !dbg !5640
  store i32 16777216, i32* %23, align 4, !dbg !5641
  %24 = ptrtoint i8* %8 to i32, !dbg !5642
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !5643
  store i32 %24, i32* %25, align 8, !dbg !5644
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !5645
  store i32 0, i32* %26, align 4, !dbg !5646
  ret void, !dbg !5647
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !5648 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5653, metadata !DIExpression()), !dbg !5659
  call void @llvm.dbg.value(metadata i32 %1, metadata !5654, metadata !DIExpression()), !dbg !5659
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5660
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !5655, metadata !DIExpression()), !dbg !5659
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !5661
  br i1 %4, label %19, label %5, !dbg !5663

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !5658, metadata !DIExpression()), !dbg !5659
  %6 = icmp eq i32 %0, -22, !dbg !5664
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !5664
  %8 = load i32, i32* %7, align 4, !dbg !5664
  br i1 %6, label %16, label %9, !dbg !5666

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !5664
  %11 = icmp ule i32 %10, %0, !dbg !5664
  %12 = icmp ugt i32 %8, %0, !dbg !5664
  %13 = and i1 %12, %11, !dbg !5664
  %14 = icmp ugt i32 %8, %1, !dbg !5664
  %15 = and i1 %14, %13, !dbg !5664
  br i1 %15, label %18, label %19, !dbg !5664

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !5664
  br i1 %17, label %18, label %19, !dbg !5666

18:                                               ; preds = %9, %16
  br label %19, !dbg !5667

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !5659
  ret i32 %20, !dbg !5669
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !5670 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5674, metadata !DIExpression()), !dbg !5677
  call void @llvm.dbg.value(metadata i8* %1, metadata !5675, metadata !DIExpression()), !dbg !5677
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !5676, metadata !DIExpression()), !dbg !5677
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5678
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !5679
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !5680, !srcloc !5681
  unreachable, !dbg !5682
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !5683 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5701, metadata !DIExpression()), !dbg !5711
  call void @llvm.dbg.value(metadata i32 %1, metadata !5702, metadata !DIExpression()), !dbg !5711
  call void @llvm.dbg.value(metadata i32 %2, metadata !5703, metadata !DIExpression()), !dbg !5711
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !5704, metadata !DIExpression()), !dbg !5711
  call void @llvm.dbg.value(metadata i32 0, metadata !5705, metadata !DIExpression()), !dbg !5711
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5712
  %9 = and i32 %8, 511, !dbg !5713
  call void @llvm.dbg.value(metadata i32 %9, metadata !5706, metadata !DIExpression()), !dbg !5711
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5714
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5714
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !5715
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5715
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !5710, metadata !DIExpression()), !dbg !5716
  call void @llvm.dbg.value(metadata i32 0, metadata !5717, metadata !DIExpression()) #23, !dbg !5720
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5722, !srcloc !5723
  call void @llvm.dbg.value(metadata i8* %6, metadata !5708, metadata !DIExpression(DW_OP_deref)), !dbg !5711
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !5724
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !5709, metadata !DIExpression()), !dbg !5711
  call void @llvm.dbg.value(metadata i8* %5, metadata !5707, metadata !DIExpression(DW_OP_deref)), !dbg !5711
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #24, !dbg !5725
  call void @llvm.dbg.value(metadata i32 %12, metadata !5705, metadata !DIExpression()), !dbg !5711
  %13 = load i8, i8* %5, align 1, !dbg !5726, !range !5728
  call void @llvm.dbg.value(metadata i8 %13, metadata !5707, metadata !DIExpression()), !dbg !5711
  %14 = icmp eq i8 %13, 0, !dbg !5726
  br i1 %14, label %15, label %32, !dbg !5729

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !5730
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !5731
  %18 = load i8, i8* %6, align 1, !dbg !5732, !range !5728
  call void @llvm.dbg.value(metadata i8 %18, metadata !5708, metadata !DIExpression()), !dbg !5711
  %19 = icmp eq i8 %18, 0, !dbg !5732
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !5734
  %21 = load i32, i32* %20, align 4, !dbg !5734
  br i1 %19, label %27, label %22, !dbg !5735

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !5736
  %24 = icmp eq i32 %23, 0, !dbg !5739
  br i1 %24, label %25, label %31, !dbg !5740

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !5741
  br label %29, !dbg !5743

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !5744
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !5734
  br label %31, !dbg !5746

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !5746
  br label %32, !dbg !5747

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5747
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5747
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5747
  ret void, !dbg !5747
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !5748 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5753, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.value(metadata i32 %1, metadata !5754, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.value(metadata i32 %2, metadata !5755, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.value(metadata i8* %3, metadata !5756, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.value(metadata i8 0, metadata !5757, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !5758, metadata !DIExpression()), !dbg !5759
  store i8 0, i8* %3, align 1, !dbg !5760
  %5 = icmp ult i32 %2, -16777216, !dbg !5761
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !5763
  br i1 %8, label %16, label %9, !dbg !5763

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !5764
  %11 = icmp eq i32 %10, 0, !dbg !5764
  br i1 %11, label %12, label %13, !dbg !5766

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !5758, metadata !DIExpression()), !dbg !5759
  store i8 1, i8* %3, align 1, !dbg !5769
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !5759
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !5758, metadata !DIExpression()), !dbg !5759
  br label %16, !dbg !5772

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !5759
  ret %struct.__esf* %17, !dbg !5773
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !5774 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5778, metadata !DIExpression()), !dbg !5782
  call void @llvm.dbg.value(metadata i32 %1, metadata !5779, metadata !DIExpression()), !dbg !5782
  call void @llvm.dbg.value(metadata i8* %2, metadata !5780, metadata !DIExpression()), !dbg !5782
  call void @llvm.dbg.value(metadata i32 0, metadata !5781, metadata !DIExpression()), !dbg !5782
  store i8 0, i8* %2, align 1, !dbg !5783
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !5784

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !5785
  call void @llvm.dbg.value(metadata i32 %5, metadata !5781, metadata !DIExpression()), !dbg !5782
  br label %11, !dbg !5787

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !5788
  call void @llvm.dbg.value(metadata i32 %7, metadata !5781, metadata !DIExpression()), !dbg !5782
  br label %11, !dbg !5789

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !5790
  call void @llvm.dbg.value(metadata i32 0, metadata !5781, metadata !DIExpression()), !dbg !5782
  br label %11, !dbg !5791

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !5792
  call void @llvm.dbg.value(metadata i32 0, metadata !5781, metadata !DIExpression()), !dbg !5782
  br label %11, !dbg !5793

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !5794
  br label %11, !dbg !5795

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !5796
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !5797 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5801, metadata !DIExpression()), !dbg !5804
  call void @llvm.dbg.value(metadata i8* %1, metadata !5802, metadata !DIExpression()), !dbg !5804
  call void @llvm.dbg.value(metadata i32 0, metadata !5803, metadata !DIExpression()), !dbg !5804
  store i8 0, i8* %1, align 1, !dbg !5805
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5806
  %4 = and i32 %3, 2, !dbg !5808
  %5 = icmp eq i32 %4, 0, !dbg !5809
  br i1 %5, label %6, label %33, !dbg !5810

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5811
  %8 = icmp sgt i32 %7, -1, !dbg !5813
  br i1 %8, label %9, label %33, !dbg !5814

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5815
  %11 = and i32 %10, 1073741824, !dbg !5817
  %12 = icmp eq i32 %11, 0, !dbg !5818
  br i1 %12, label %33, label %13, !dbg !5819

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !5820
  br i1 %14, label %15, label %18, !dbg !5823

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5824
  %17 = load i32, i32* %16, align 4, !dbg !5824
  call void @llvm.dbg.value(metadata i32 %17, metadata !5803, metadata !DIExpression()), !dbg !5804
  br label %33, !dbg !5826

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5827
  %20 = and i32 %19, 255, !dbg !5829
  %21 = icmp eq i32 %20, 0, !dbg !5830
  br i1 %21, label %24, label %22, !dbg !5831

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !5832
  call void @llvm.dbg.value(metadata i32 %23, metadata !5803, metadata !DIExpression()), !dbg !5804
  br label %33, !dbg !5834

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5835
  %26 = and i32 %25, 65280, !dbg !5837
  %27 = icmp eq i32 %26, 0, !dbg !5838
  br i1 %27, label %29, label %28, !dbg !5839

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !5840
  call void @llvm.dbg.value(metadata i32 0, metadata !5803, metadata !DIExpression()), !dbg !5804
  br label %33, !dbg !5842

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5843
  %31 = icmp ult i32 %30, 65536, !dbg !5845
  br i1 %31, label %33, label %32, !dbg !5846

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #24, !dbg !5847
  call void @llvm.dbg.value(metadata i32 0, metadata !5803, metadata !DIExpression()), !dbg !5804
  br label %33, !dbg !5849

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !5804
  call void @llvm.dbg.value(metadata i32 %34, metadata !5803, metadata !DIExpression()), !dbg !5804
  ret i32 %34, !dbg !5850
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !5851 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5853, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.value(metadata i32 %1, metadata !5854, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.value(metadata i8* %2, metadata !5855, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.value(metadata i32 0, metadata !5856, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.value(metadata i32 -22, metadata !5857, metadata !DIExpression()), !dbg !5866
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5867
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5869
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5871
  %7 = and i32 %6, 2, !dbg !5872
  %8 = icmp eq i32 %7, 0, !dbg !5873
  br i1 %8, label %19, label %9, !dbg !5874

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !5875
  call void @llvm.dbg.value(metadata i32 %10, metadata !5858, metadata !DIExpression()), !dbg !5876
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5877
  %12 = and i32 %11, 128, !dbg !5879
  %13 = icmp eq i32 %12, 0, !dbg !5880
  br i1 %13, label %19, label %14, !dbg !5881

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !5857, metadata !DIExpression()), !dbg !5866
  %15 = icmp eq i32 %1, 0, !dbg !5882
  br i1 %15, label %19, label %16, !dbg !5885

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5886
  %18 = and i32 %17, -129, !dbg !5886
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5886
  br label %19, !dbg !5888

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !5866
  call void @llvm.dbg.value(metadata i32 %20, metadata !5857, metadata !DIExpression()), !dbg !5866
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5889
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5891
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5893
  %24 = and i32 %23, 16, !dbg !5894
  %25 = icmp eq i32 %24, 0, !dbg !5894
  br i1 %25, label %26, label %30, !dbg !5895

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5896
  %28 = and i32 %27, 2, !dbg !5897
  %29 = icmp eq i32 %28, 0, !dbg !5897
  br i1 %29, label %39, label %30, !dbg !5898

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5899
  %32 = and i32 %31, 2048, !dbg !5900
  %33 = icmp eq i32 %32, 0, !dbg !5900
  br i1 %33, label %39, label %34, !dbg !5901

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !5902
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #25, !dbg !5903
  call void @llvm.dbg.value(metadata i32 %36, metadata !5861, metadata !DIExpression()), !dbg !5904
  %37 = icmp eq i32 %36, 0, !dbg !5905
  br i1 %37, label %39, label %38, !dbg !5907

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !5908, metadata !DIExpression()) #23, !dbg !5911
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #23, !dbg !5914, !srcloc !5915
  call void @llvm.dbg.value(metadata i32 2, metadata !5856, metadata !DIExpression()), !dbg !5866
  br label %39, !dbg !5916

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !5866
  call void @llvm.dbg.value(metadata i32 %40, metadata !5856, metadata !DIExpression()), !dbg !5866
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5917
  %42 = and i32 %41, 32, !dbg !5919
  %43 = icmp eq i32 %42, 0, !dbg !5920
  br i1 %43, label %47, label %44, !dbg !5921

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5922
  %46 = and i32 %45, -8193, !dbg !5922
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5922
  br label %47, !dbg !5924

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5925
  %49 = or i32 %48, 255, !dbg !5925
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5925
  store i8 0, i8* %2, align 1, !dbg !5926
  ret i32 %40, !dbg !5927
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !5928 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5932, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i32 %0, metadata !5933, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i8* %1, metadata !5934, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i32 0, metadata !5935, metadata !DIExpression()), !dbg !5939
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5940
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5942
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5944
  %6 = and i32 %5, 512, !dbg !5945
  %7 = icmp eq i32 %6, 0, !dbg !5945
  br i1 %7, label %18, label %8, !dbg !5946

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !5947
  call void @llvm.dbg.value(metadata i32 %9, metadata !5936, metadata !DIExpression()), !dbg !5948
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5949
  %11 = and i32 %10, 32768, !dbg !5951
  %12 = icmp ne i32 %11, 0, !dbg !5952
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !5953
  br i1 %14, label %15, label %18, !dbg !5953

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5954
  %17 = and i32 %16, -32769, !dbg !5954
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5954
  br label %18, !dbg !5958

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5959
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5961
  %21 = and i32 %20, 256, !dbg !5963
  %22 = icmp eq i32 %21, 0, !dbg !5964
  br i1 %22, label %23, label %25, !dbg !5965

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5966
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5968
  %27 = or i32 %26, 65280, !dbg !5968
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5968
  store i8 0, i8* %1, align 1, !dbg !5969
  ret void, !dbg !5970
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #13 !dbg !5971 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5977, metadata !DIExpression()), !dbg !5979
  call void @llvm.dbg.value(metadata i32 0, metadata !5978, metadata !DIExpression()), !dbg !5979
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5980
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5982
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5984
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5986
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5988
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5990
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5992
  %8 = or i32 %7, -65536, !dbg !5992
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5992
  ret void, !dbg !5993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !5994 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5998, metadata !DIExpression()), !dbg !6000
  call void @llvm.dbg.value(metadata i8* %0, metadata !5999, metadata !DIExpression()), !dbg !6000
  store i8 0, i8* %0, align 1, !dbg !6001
  ret void, !dbg !6002
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6003 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6007, metadata !DIExpression()), !dbg !6010
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6011
  %3 = load i32, i32* %2, align 4, !dbg !6011
  %4 = inttoptr i32 %3 to i16*, !dbg !6012
  call void @llvm.dbg.value(metadata i16* %4, metadata !6008, metadata !DIExpression()), !dbg !6010
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6013
  %6 = or i32 %5, 256, !dbg !6013
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6013
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6014, !srcloc !6017
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6018, !srcloc !6021
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6022
  %8 = load i16, i16* %7, align 2, !dbg !6023
  call void @llvm.dbg.value(metadata i16 %8, metadata !6009, metadata !DIExpression()), !dbg !6010
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6024
  %10 = and i32 %9, -257, !dbg !6024
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6024
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6025, !srcloc !6017
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6027, !srcloc !6021
  %11 = icmp eq i16 %8, -8446, !dbg !6029
  ret i1 %11, !dbg !6031
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #13 !dbg !6032 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6033
  %2 = or i32 %1, 16, !dbg !6033
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6033
  ret void, !dbg !6034
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #13 !dbg !6035 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6038, metadata !DIExpression()), !dbg !6039
  br label %1, !dbg !6040

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6038, metadata !DIExpression()), !dbg !6039
  tail call fastcc void @__NVIC_SetPriority.8(i32 noundef %2) #24, !dbg !6042
  %3 = add nuw nsw i32 %2, 1, !dbg !6045
  call void @llvm.dbg.value(metadata i32 %3, metadata !6038, metadata !DIExpression()), !dbg !6039
  %4 = icmp eq i32 %3, 86, !dbg !6046
  br i1 %4, label %5, label %1, !dbg !6040, !llvm.loop !6047

5:                                                ; preds = %1
  ret void, !dbg !6049
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.8(i32 noundef %0) unnamed_addr #13 !dbg !6050 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6052, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i32 1, metadata !6053, metadata !DIExpression()), !dbg !6054
  %2 = and i32 %0, 15, !dbg !6055
  %3 = add nsw i32 %2, -4, !dbg !6055
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6055
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6055
  %6 = icmp slt i32 %0, 0, !dbg !6055
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6055
  store volatile i8 16, i8* %7, align 1, !dbg !6056
  ret void, !dbg !6058
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6059 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6165, metadata !DIExpression()), !dbg !6166
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6167
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6169
  br i1 %3, label %4, label %12, !dbg !6170

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !6171, !srcloc !6183
  call void @llvm.dbg.value(metadata i32 %5, metadata !6174, metadata !DIExpression()) #23, !dbg !6184
  %6 = icmp eq i32 %5, 0, !dbg !6185
  br i1 %6, label %12, label %7, !dbg !6186

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6187
  %9 = or i32 %8, 268435456, !dbg !6187
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6187
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6189
  %11 = and i32 %10, -32769, !dbg !6189
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6189
  br label %12, !dbg !6190

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !6191
  ret void, !dbg !6192
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !6193 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !6194
  ret void, !dbg !6195
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !205 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !329, metadata !DIExpression()), !dbg !6196
  call void @llvm.dbg.value(metadata i8 0, metadata !330, metadata !DIExpression()), !dbg !6196
  call void @llvm.dbg.value(metadata i32 64, metadata !332, metadata !DIExpression()), !dbg !6196
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !6197
  %3 = load i32, i32* %2, align 4, !dbg !6197
  %4 = add i32 %3, -64, !dbg !6199
  call void @llvm.dbg.value(metadata i32 %4, metadata !331, metadata !DIExpression()), !dbg !6196
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !6200
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !6201
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !6202
  call void @llvm.dbg.value(metadata i8 1, metadata !330, metadata !DIExpression()), !dbg !6196
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !6203
  ret void, !dbg !6204
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !6205 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6206
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6207, !srcloc !6210
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6211, !srcloc !6214
  ret void, !dbg !6215
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !6216 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !6217, !srcloc !6220
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6221
  ret void, !dbg !6222
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !6223 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6238, metadata !DIExpression()), !dbg !6242
  call void @llvm.dbg.value(metadata i8 %1, metadata !6239, metadata !DIExpression()), !dbg !6242
  call void @llvm.dbg.value(metadata i32 %2, metadata !6240, metadata !DIExpression()), !dbg !6242
  call void @llvm.dbg.value(metadata i32 %3, metadata !6241, metadata !DIExpression()), !dbg !6242
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !6243
  ret void, !dbg !6245
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !6246 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6251, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata i8 %1, metadata !6252, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata i32 undef, metadata !6253, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.value(metadata i32 undef, metadata !6254, metadata !DIExpression()), !dbg !6256
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6257
  call void @llvm.dbg.value(metadata i8 %3, metadata !6255, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6256
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !6258
  call void @llvm.dbg.value(metadata i32 %4, metadata !6255, metadata !DIExpression()), !dbg !6256
  %5 = trunc i32 %4 to i8, !dbg !6259
  store i8 %5, i8* @static_regions_num, align 1, !dbg !6260
  ret void, !dbg !6261
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #15 !dbg !6262 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6266, metadata !DIExpression()), !dbg !6272
  call void @llvm.dbg.value(metadata i8 %1, metadata !6267, metadata !DIExpression()), !dbg !6272
  call void @llvm.dbg.value(metadata i8 %2, metadata !6268, metadata !DIExpression()), !dbg !6272
  call void @llvm.dbg.value(metadata i1 %3, metadata !6269, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6272
  %5 = zext i8 %2 to i32, !dbg !6273
  call void @llvm.dbg.value(metadata i32 %5, metadata !6271, metadata !DIExpression()), !dbg !6272
  call void @llvm.dbg.value(metadata i32 0, metadata !6270, metadata !DIExpression()), !dbg !6272
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !6271, metadata !DIExpression()), !dbg !6272
  call void @llvm.dbg.value(metadata i32 0, metadata !6270, metadata !DIExpression()), !dbg !6272
  %7 = icmp eq i8 %1, 0, !dbg !6274
  br i1 %7, label %29, label %8, !dbg !6277

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6271, metadata !DIExpression()), !dbg !6272
  call void @llvm.dbg.value(metadata i32 %10, metadata !6270, metadata !DIExpression()), !dbg !6272
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !6278
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !6281
  %13 = load i32, i32* %12, align 4, !dbg !6281
  %14 = icmp eq i32 %13, 0, !dbg !6282
  br i1 %14, label %25, label %15, !dbg !6283

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !6284

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !6286
  %18 = icmp eq i32 %17, 0, !dbg !6286
  br i1 %18, label %29, label %19, !dbg !6287

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !6288
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !6289
  call void @llvm.dbg.value(metadata i32 %21, metadata !6271, metadata !DIExpression()), !dbg !6272
  %22 = icmp eq i32 %21, -22, !dbg !6290
  br i1 %22, label %29, label %23, !dbg !6292

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !6293
  call void @llvm.dbg.value(metadata i32 %24, metadata !6271, metadata !DIExpression()), !dbg !6272
  br label %25, !dbg !6294

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !6272
  call void @llvm.dbg.value(metadata i32 %26, metadata !6271, metadata !DIExpression()), !dbg !6272
  %27 = add nuw nsw i32 %10, 1, !dbg !6295
  call void @llvm.dbg.value(metadata i32 %27, metadata !6270, metadata !DIExpression()), !dbg !6272
  %28 = icmp eq i32 %27, %6, !dbg !6274
  br i1 %28, label %29, label %8, !dbg !6277, !llvm.loop !6296

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !6272
  ret i32 %30, !dbg !6298
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !6299 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6303, metadata !DIExpression()), !dbg !6305
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !6306
  %3 = load i32, i32* %2, align 4, !dbg !6306
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !6307, !range !6308
  %5 = icmp ult i32 %4, 2, !dbg !6307
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !6309
  br i1 %7, label %8, label %15, !dbg !6309

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !6310
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !6311
  %11 = load i32, i32* %10, align 4, !dbg !6311
  %12 = and i32 %11, %9, !dbg !6312
  %13 = icmp eq i32 %12, 0, !dbg !6313
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !6304, metadata !DIExpression()), !dbg !6305
  ret i32 %16, !dbg !6314
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #15 !dbg !6315 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !6319, metadata !DIExpression()), !dbg !6322
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !6320, metadata !DIExpression()), !dbg !6322
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !6323
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !6323
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !6321, metadata !DIExpression()), !dbg !6324
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !6325
  %6 = load i32, i32* %5, align 4, !dbg !6325
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !6326
  store i32 %6, i32* %7, align 4, !dbg !6327
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !6328
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !6329
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !6330
  %11 = load i32, i32* %10, align 4, !dbg !6330
  call fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.1* noundef nonnull %8, %union.anon.1* noundef nonnull %9, i32 noundef %11) #24, !dbg !6331
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !6332
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !6333
  ret i32 %12, !dbg !6334
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.1* nocapture noundef writeonly %0, %union.anon.1* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !6335 {
  call void @llvm.dbg.value(metadata %union.anon.1* %0, metadata !6342, metadata !DIExpression()), !dbg !6346
  call void @llvm.dbg.value(metadata %union.anon.1* %1, metadata !6343, metadata !DIExpression()), !dbg !6346
  call void @llvm.dbg.value(metadata i32 undef, metadata !6344, metadata !DIExpression()), !dbg !6346
  call void @llvm.dbg.value(metadata i32 %2, metadata !6345, metadata !DIExpression()), !dbg !6346
  %4 = getelementptr inbounds %union.anon.1, %union.anon.1* %1, i32 0, i32 0, !dbg !6347
  %5 = load i32, i32* %4, align 4, !dbg !6347
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !6348
  %7 = or i32 %6, %5, !dbg !6349
  %8 = getelementptr inbounds %union.anon.1, %union.anon.1* %0, i32 0, i32 0, !dbg !6350
  store i32 %7, i32* %8, align 4, !dbg !6351
  ret void, !dbg !6352
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !6353 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6357, metadata !DIExpression()), !dbg !6359
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6358, metadata !DIExpression()), !dbg !6359
  %3 = zext i8 %0 to i32, !dbg !6360
  %4 = icmp ugt i8 %0, 7, !dbg !6362
  br i1 %4, label %6, label %5, !dbg !6363

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !6364
  br label %6, !dbg !6365

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !6359
  ret i32 %7, !dbg !6366
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !6367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6371, metadata !DIExpression()), !dbg !6373
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6372, metadata !DIExpression()), !dbg !6373
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !6374
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !6375
  %4 = load i32, i32* %3, align 4, !dbg !6375
  %5 = and i32 %4, -32, !dbg !6376
  %6 = or i32 %5, %0, !dbg !6377
  %7 = or i32 %6, 16, !dbg !6377
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !6378
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !6379
  %9 = load i32, i32* %8, align 4, !dbg !6379
  %10 = or i32 %9, 1, !dbg !6380
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6381
  ret void, !dbg !6382
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #13 !dbg !6383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6386, metadata !DIExpression()), !dbg !6387
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6388
  ret void, !dbg !6389
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !6390 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6394, metadata !DIExpression()), !dbg !6395
  %2 = icmp ult i32 %0, 33, !dbg !6396
  br i1 %2, label %11, label %3, !dbg !6398

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !6399
  br i1 %4, label %11, label %5, !dbg !6401

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !6402
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !6403, !range !6308
  %8 = mul nsw i32 %7, -2, !dbg !6404
  %9 = add nsw i32 %8, 62, !dbg !6404
  %10 = and i32 %9, 62, !dbg !6405
  br label %11, !dbg !6406

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !6395
  ret i32 %12, !dbg !6407
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #15 !dbg !6408 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6412, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.value(metadata i8 %1, metadata !6413, metadata !DIExpression()), !dbg !6414
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !6415
  ret void, !dbg !6417
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !6418 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6422, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.value(metadata i8 %1, metadata !6423, metadata !DIExpression()), !dbg !6429
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6430
  call void @llvm.dbg.value(metadata i8 %3, metadata !6424, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6429
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !6431
  call void @llvm.dbg.value(metadata i32 %4, metadata !6424, metadata !DIExpression()), !dbg !6429
  %5 = icmp ne i32 %4, -22, !dbg !6432
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !6433
  call void @llvm.dbg.value(metadata i32 %4, metadata !6425, metadata !DIExpression()), !dbg !6434
  br i1 %7, label %8, label %12, !dbg !6433

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6425, metadata !DIExpression()), !dbg !6434
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !6435
  %10 = add i32 %9, 1, !dbg !6438
  call void @llvm.dbg.value(metadata i32 %10, metadata !6425, metadata !DIExpression()), !dbg !6434
  %11 = icmp eq i32 %10, 8, !dbg !6439
  br i1 %11, label %12, label %8, !dbg !6440, !llvm.loop !6441

12:                                               ; preds = %8, %2
  ret void, !dbg !6443
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #13 !dbg !6444 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6447, metadata !DIExpression()), !dbg !6448
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6449
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6450
  ret void, !dbg !6451
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !6452 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !6457
  %2 = icmp ugt i32 %1, 8, !dbg !6459
  br i1 %2, label %14, label %3, !dbg !6460

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !6461
  call void @llvm.dbg.value(metadata i32 0, metadata !6456, metadata !DIExpression()), !dbg !6462
  %4 = icmp eq i32 %1, 0, !dbg !6463
  br i1 %4, label %12, label %5, !dbg !6466

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !6466

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6456, metadata !DIExpression()), !dbg !6462
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !6467
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #24, !dbg !6469
  %10 = add nuw i32 %8, 1, !dbg !6470
  call void @llvm.dbg.value(metadata i32 %10, metadata !6456, metadata !DIExpression()), !dbg !6462
  %11 = icmp eq i32 %10, %1, !dbg !6463
  br i1 %11, label %12, label %7, !dbg !6466, !llvm.loop !6471

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !6473
  store i8 %13, i8* @static_regions_num, align 1, !dbg !6474
  tail call void @arm_core_mpu_enable() #24, !dbg !6475
  br label %14, !dbg !6476

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !6462
  ret i32 %15, !dbg !6477
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6478 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6485, metadata !DIExpression()), !dbg !6488
  call void @llvm.dbg.value(metadata i8* %1, metadata !6486, metadata !DIExpression()), !dbg !6488
  call void @llvm.dbg.value(metadata i8* %0, metadata !6487, metadata !DIExpression()), !dbg !6488
  %3 = load i8, i8* %1, align 1, !dbg !6489
  %4 = icmp eq i8 %3, 0, !dbg !6490
  br i1 %4, label %13, label %5, !dbg !6491

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !6485, metadata !DIExpression()), !dbg !6488
  call void @llvm.dbg.value(metadata i8* %8, metadata !6486, metadata !DIExpression()), !dbg !6488
  store i8 %6, i8* %7, align 1, !dbg !6492
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6494
  call void @llvm.dbg.value(metadata i8* %9, metadata !6485, metadata !DIExpression()), !dbg !6488
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6495
  call void @llvm.dbg.value(metadata i8* %10, metadata !6486, metadata !DIExpression()), !dbg !6488
  %11 = load i8, i8* %10, align 1, !dbg !6489
  %12 = icmp eq i8 %11, 0, !dbg !6490
  br i1 %12, label %13, label %5, !dbg !6491, !llvm.loop !6496

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !6498
  ret i8* %0, !dbg !6499
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6500 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6504, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.value(metadata i8* %1, metadata !6505, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.value(metadata i32 %2, metadata !6506, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.value(metadata i8* %0, metadata !6507, metadata !DIExpression()), !dbg !6508
  %4 = icmp eq i32 %2, 0, !dbg !6509
  br i1 %4, label %22, label %5, !dbg !6510

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6504, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.value(metadata i32 %7, metadata !6506, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.value(metadata i8* %8, metadata !6505, metadata !DIExpression()), !dbg !6508
  %9 = load i8, i8* %8, align 1, !dbg !6511
  %10 = icmp eq i8 %9, 0, !dbg !6512
  br i1 %10, label %16, label %11, !dbg !6513

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !6514
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6516
  call void @llvm.dbg.value(metadata i8* %12, metadata !6505, metadata !DIExpression()), !dbg !6508
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6517
  call void @llvm.dbg.value(metadata i8* %13, metadata !6504, metadata !DIExpression()), !dbg !6508
  %14 = add i32 %7, -1, !dbg !6518
  call void @llvm.dbg.value(metadata i32 %14, metadata !6506, metadata !DIExpression()), !dbg !6508
  %15 = icmp eq i32 %14, 0, !dbg !6509
  br i1 %15, label %22, label %5, !dbg !6510, !llvm.loop !6519

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !6504, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.value(metadata i32 %18, metadata !6506, metadata !DIExpression()), !dbg !6508
  store i8 0, i8* %17, align 1, !dbg !6521
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6523
  call void @llvm.dbg.value(metadata i8* %19, metadata !6504, metadata !DIExpression()), !dbg !6508
  %20 = add i32 %18, -1, !dbg !6524
  call void @llvm.dbg.value(metadata i32 %20, metadata !6506, metadata !DIExpression()), !dbg !6508
  %21 = icmp eq i32 %20, 0, !dbg !6525
  br i1 %21, label %22, label %16, !dbg !6526, !llvm.loop !6527

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !6529
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6530 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6534, metadata !DIExpression()), !dbg !6537
  call void @llvm.dbg.value(metadata i32 %1, metadata !6535, metadata !DIExpression()), !dbg !6537
  call void @llvm.dbg.value(metadata i32 %1, metadata !6536, metadata !DIExpression()), !dbg !6537
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6538

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !6534, metadata !DIExpression()), !dbg !6537
  %6 = load i8, i8* %5, align 1, !dbg !6539
  %7 = icmp eq i8 %6, %3, !dbg !6540
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !6541
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6542
  call void @llvm.dbg.value(metadata i8* %10, metadata !6534, metadata !DIExpression()), !dbg !6537
  br i1 %9, label %11, label %4, !dbg !6541, !llvm.loop !6544

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !6546
  ret i8* %12, !dbg !6547
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6548 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6550, metadata !DIExpression()), !dbg !6553
  call void @llvm.dbg.value(metadata i32 %1, metadata !6551, metadata !DIExpression()), !dbg !6553
  call void @llvm.dbg.value(metadata i8* null, metadata !6552, metadata !DIExpression()), !dbg !6553
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6554

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !6553
  call void @llvm.dbg.value(metadata i8* %6, metadata !6552, metadata !DIExpression()), !dbg !6553
  call void @llvm.dbg.value(metadata i8* %5, metadata !6550, metadata !DIExpression()), !dbg !6553
  %7 = load i8, i8* %5, align 1, !dbg !6555
  %8 = icmp eq i8 %7, %3, !dbg !6558
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !6559
  call void @llvm.dbg.value(metadata i8* %9, metadata !6552, metadata !DIExpression()), !dbg !6553
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6560
  call void @llvm.dbg.value(metadata i8* %10, metadata !6550, metadata !DIExpression()), !dbg !6553
  %11 = icmp eq i8 %7, 0, !dbg !6561
  br i1 %11, label %12, label %4, !dbg !6561, !llvm.loop !6562

12:                                               ; preds = %4
  ret i8* %9, !dbg !6564
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #18 !dbg !6565 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6569, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.value(metadata i32 0, metadata !6570, metadata !DIExpression()), !dbg !6571
  %2 = load i8, i8* %0, align 1, !dbg !6572
  %3 = icmp eq i8 %2, 0, !dbg !6573
  br i1 %3, label %11, label %4, !dbg !6574

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6570, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.value(metadata i8* %6, metadata !6569, metadata !DIExpression()), !dbg !6571
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6575
  call void @llvm.dbg.value(metadata i8* %7, metadata !6569, metadata !DIExpression()), !dbg !6571
  %8 = add i32 %5, 1, !dbg !6577
  call void @llvm.dbg.value(metadata i32 %8, metadata !6570, metadata !DIExpression()), !dbg !6571
  %9 = load i8, i8* %7, align 1, !dbg !6572
  %10 = icmp eq i8 %9, 0, !dbg !6573
  br i1 %10, label %11, label %4, !dbg !6574, !llvm.loop !6578

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !6571
  ret i32 %12, !dbg !6580
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6581 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6585, metadata !DIExpression()), !dbg !6588
  call void @llvm.dbg.value(metadata i32 %1, metadata !6586, metadata !DIExpression()), !dbg !6588
  call void @llvm.dbg.value(metadata i32 0, metadata !6587, metadata !DIExpression()), !dbg !6588
  %3 = load i8, i8* %0, align 1, !dbg !6589
  %4 = icmp ne i8 %3, 0, !dbg !6590
  %5 = icmp ne i32 %1, 0, !dbg !6591
  %6 = and i1 %4, %5, !dbg !6591
  br i1 %6, label %7, label %16, !dbg !6592

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6587, metadata !DIExpression()), !dbg !6588
  call void @llvm.dbg.value(metadata i8* %9, metadata !6585, metadata !DIExpression()), !dbg !6588
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6593
  call void @llvm.dbg.value(metadata i8* %10, metadata !6585, metadata !DIExpression()), !dbg !6588
  %11 = add nuw i32 %8, 1, !dbg !6595
  call void @llvm.dbg.value(metadata i32 %11, metadata !6587, metadata !DIExpression()), !dbg !6588
  %12 = load i8, i8* %10, align 1, !dbg !6589
  %13 = icmp ne i8 %12, 0, !dbg !6590
  %14 = icmp ult i32 %11, %1, !dbg !6591
  %15 = select i1 %13, i1 %14, i1 false, !dbg !6591
  br i1 %15, label %7, label %16, !dbg !6592, !llvm.loop !6596

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !6588
  ret i32 %17, !dbg !6598
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !6599 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6603, metadata !DIExpression()), !dbg !6605
  call void @llvm.dbg.value(metadata i8* %1, metadata !6604, metadata !DIExpression()), !dbg !6605
  %3 = load i8, i8* %0, align 1, !dbg !6606
  %4 = load i8, i8* %1, align 1, !dbg !6607
  %5 = icmp ne i8 %3, %4, !dbg !6608
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !6609
  br i1 %7, label %18, label %8, !dbg !6609

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6604, metadata !DIExpression()), !dbg !6605
  call void @llvm.dbg.value(metadata i8* %10, metadata !6603, metadata !DIExpression()), !dbg !6605
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6610
  call void @llvm.dbg.value(metadata i8* %11, metadata !6603, metadata !DIExpression()), !dbg !6605
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6612
  call void @llvm.dbg.value(metadata i8* %12, metadata !6604, metadata !DIExpression()), !dbg !6605
  %13 = load i8, i8* %11, align 1, !dbg !6606
  %14 = load i8, i8* %12, align 1, !dbg !6607
  %15 = icmp ne i8 %13, %14, !dbg !6608
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !6609
  br i1 %17, label %18, label %8, !dbg !6609, !llvm.loop !6613

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !6606
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !6607
  %21 = zext i8 %19 to i32, !dbg !6616
  %22 = zext i8 %20 to i32, !dbg !6617
  %23 = sub nsw i32 %21, %22, !dbg !6618
  ret i32 %23, !dbg !6619
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6620 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6624, metadata !DIExpression()), !dbg !6627
  call void @llvm.dbg.value(metadata i8* %1, metadata !6625, metadata !DIExpression()), !dbg !6627
  call void @llvm.dbg.value(metadata i32 %2, metadata !6626, metadata !DIExpression()), !dbg !6627
  %4 = icmp eq i32 %2, 0, !dbg !6628
  br i1 %4, label %23, label %5, !dbg !6628

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !6626, metadata !DIExpression()), !dbg !6627
  call void @llvm.dbg.value(metadata i8* %7, metadata !6625, metadata !DIExpression()), !dbg !6627
  call void @llvm.dbg.value(metadata i8* %8, metadata !6624, metadata !DIExpression()), !dbg !6627
  %9 = load i8, i8* %8, align 1, !dbg !6629
  %10 = load i8, i8* %7, align 1, !dbg !6630
  %11 = icmp ne i8 %9, %10, !dbg !6631
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !6632
  br i1 %13, label %19, label %14, !dbg !6632

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6633
  call void @llvm.dbg.value(metadata i8* %15, metadata !6624, metadata !DIExpression()), !dbg !6627
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6635
  call void @llvm.dbg.value(metadata i8* %16, metadata !6625, metadata !DIExpression()), !dbg !6627
  %17 = add i32 %6, -1, !dbg !6636
  call void @llvm.dbg.value(metadata i32 %17, metadata !6626, metadata !DIExpression()), !dbg !6627
  %18 = icmp eq i32 %17, 0, !dbg !6628
  br i1 %18, label %23, label %5, !dbg !6628, !llvm.loop !6637

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !6640
  %21 = zext i8 %10 to i32, !dbg !6641
  %22 = sub nsw i32 %20, %21, !dbg !6642
  br label %23, !dbg !6643

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !6643
  ret i32 %24, !dbg !6644
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #11 !dbg !6645 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6650, metadata !DIExpression()), !dbg !6655
  call void @llvm.dbg.value(metadata i8* %1, metadata !6651, metadata !DIExpression()), !dbg !6655
  call void @llvm.dbg.value(metadata i8** %2, metadata !6652, metadata !DIExpression()), !dbg !6655
  %4 = icmp eq i8* %0, null, !dbg !6656
  br i1 %4, label %5, label %7, !dbg !6656

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !6657
  br label %7, !dbg !6656

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !6656
  call void @llvm.dbg.value(metadata i8* %8, metadata !6653, metadata !DIExpression()), !dbg !6655
  %9 = load i8, i8* %8, align 1, !dbg !6658
  %10 = icmp eq i8 %9, 0, !dbg !6658
  br i1 %10, label %33, label %11, !dbg !6659

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6653, metadata !DIExpression()), !dbg !6655
  %14 = zext i8 %12 to i32, !dbg !6658
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !6660
  %16 = icmp eq i8* %15, null, !dbg !6659
  br i1 %16, label %21, label %17, !dbg !6661

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6662
  call void @llvm.dbg.value(metadata i8* %18, metadata !6653, metadata !DIExpression()), !dbg !6655
  %19 = load i8, i8* %18, align 1, !dbg !6658
  %20 = icmp eq i8 %19, 0, !dbg !6658
  br i1 %20, label %33, label %11, !dbg !6659, !llvm.loop !6664

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !6654, metadata !DIExpression()), !dbg !6655
  %24 = zext i8 %22 to i32, !dbg !6666
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !6667
  %26 = icmp eq i8* %25, null, !dbg !6668
  br i1 %26, label %27, label %31, !dbg !6669

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6670
  call void @llvm.dbg.value(metadata i8* %28, metadata !6654, metadata !DIExpression()), !dbg !6655
  %29 = load i8, i8* %28, align 1, !dbg !6666
  %30 = icmp eq i8 %29, 0, !dbg !6666
  br i1 %30, label %33, label %21, !dbg !6672, !llvm.loop !6673

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !6675
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6678
  br label %33, !dbg !6679

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !6655
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !6655
  store i8* %34, i8** %2, align 4, !dbg !6655
  ret i8* %35, !dbg !6680
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6681 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6683, metadata !DIExpression()), !dbg !6685
  call void @llvm.dbg.value(metadata i8* %1, metadata !6684, metadata !DIExpression()), !dbg !6685
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !6686
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !6687
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !6688
  ret i8* %0, !dbg !6689
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6690 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6692, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i8* %1, metadata !6693, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i32 %2, metadata !6694, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i8* %0, metadata !6695, metadata !DIExpression()), !dbg !6697
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !6698
  call void @llvm.dbg.value(metadata i32 %4, metadata !6696, metadata !DIExpression()), !dbg !6697
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !6699
  call void @llvm.dbg.value(metadata i8* %5, metadata !6692, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i8* %1, metadata !6693, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i32 %2, metadata !6694, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i32 %2, metadata !6694, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6697
  %6 = icmp eq i32 %2, 0, !dbg !6700
  br i1 %6, label %18, label %7, !dbg !6701

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !6702
  call void @llvm.dbg.value(metadata i8* %9, metadata !6692, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i8* %10, metadata !6693, metadata !DIExpression()), !dbg !6697
  %12 = load i8, i8* %10, align 1, !dbg !6703
  %13 = icmp eq i8 %12, 0, !dbg !6704
  br i1 %13, label %18, label %14, !dbg !6705

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6706
  call void @llvm.dbg.value(metadata i8* %15, metadata !6693, metadata !DIExpression()), !dbg !6697
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6708
  call void @llvm.dbg.value(metadata i8* %16, metadata !6692, metadata !DIExpression()), !dbg !6697
  store i8 %12, i8* %9, align 1, !dbg !6709
  call void @llvm.dbg.value(metadata i32 %11, metadata !6694, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i32 %11, metadata !6694, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6697
  %17 = icmp eq i32 %11, 0, !dbg !6700
  br i1 %17, label %18, label %7, !dbg !6701, !llvm.loop !6710

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !6697
  store i8 0, i8* %19, align 1, !dbg !6712
  ret i8* %0, !dbg !6713
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6714 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6718, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.value(metadata i8* %1, metadata !6719, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.value(metadata i32 %2, metadata !6720, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.value(metadata i8* %0, metadata !6721, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.value(metadata i8* %1, metadata !6722, metadata !DIExpression()), !dbg !6723
  %4 = icmp eq i32 %2, 0, !dbg !6724
  br i1 %4, label %31, label %5, !dbg !6726

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6722, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.value(metadata i8* %0, metadata !6721, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.value(metadata i32 %2, metadata !6720, metadata !DIExpression()), !dbg !6723
  %6 = add i32 %2, -1, !dbg !6727
  call void @llvm.dbg.value(metadata i32 %6, metadata !6720, metadata !DIExpression()), !dbg !6723
  %7 = icmp eq i32 %6, 0, !dbg !6728
  br i1 %7, label %23, label %8, !dbg !6729

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !6730
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !6730
  br label %11, !dbg !6730

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6722, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.value(metadata i8* %14, metadata !6721, metadata !DIExpression()), !dbg !6723
  %15 = load i8, i8* %14, align 1, !dbg !6731
  %16 = load i8, i8* %13, align 1, !dbg !6732
  %17 = icmp eq i8 %15, %16, !dbg !6733
  br i1 %17, label %18, label %23, !dbg !6730

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6734
  call void @llvm.dbg.value(metadata i8* %19, metadata !6721, metadata !DIExpression()), !dbg !6723
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6736
  call void @llvm.dbg.value(metadata i8* %20, metadata !6722, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.value(metadata i32 %12, metadata !6720, metadata !DIExpression()), !dbg !6723
  %21 = add i32 %12, -1, !dbg !6727
  call void @llvm.dbg.value(metadata i32 %21, metadata !6720, metadata !DIExpression()), !dbg !6723
  %22 = icmp eq i32 %21, 0, !dbg !6728
  br i1 %22, label %23, label %11, !dbg !6729, !llvm.loop !6737

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !6723
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !6723
  %26 = load i8, i8* %24, align 1, !dbg !6739
  %27 = zext i8 %26 to i32, !dbg !6739
  %28 = load i8, i8* %25, align 1, !dbg !6740
  %29 = zext i8 %28 to i32, !dbg !6740
  %30 = sub nsw i32 %27, %29, !dbg !6741
  br label %31, !dbg !6742

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !6723
  ret i32 %32, !dbg !6743
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6744 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6748, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata i8* %1, metadata !6749, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata i32 %2, metadata !6750, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata i8* %0, metadata !6751, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata i8* %1, metadata !6752, metadata !DIExpression()), !dbg !6753
  %4 = ptrtoint i8* %0 to i32, !dbg !6754
  %5 = ptrtoint i8* %1 to i32, !dbg !6754
  %6 = sub i32 %4, %5, !dbg !6754
  %7 = icmp ult i32 %6, %2, !dbg !6756
  br i1 %7, label %10, label %8, !dbg !6757

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6752, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata i8* %0, metadata !6751, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata i32 %2, metadata !6750, metadata !DIExpression()), !dbg !6753
  %9 = icmp eq i32 %2, 0, !dbg !6758
  br i1 %9, label %26, label %17, !dbg !6760

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6750, metadata !DIExpression()), !dbg !6753
  %12 = add i32 %11, -1, !dbg !6761
  call void @llvm.dbg.value(metadata i32 %12, metadata !6750, metadata !DIExpression()), !dbg !6753
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !6764
  %14 = load i8, i8* %13, align 1, !dbg !6764
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !6765
  store i8 %14, i8* %15, align 1, !dbg !6766
  %16 = icmp eq i32 %12, 0, !dbg !6767
  br i1 %16, label %26, label %10, !dbg !6768, !llvm.loop !6769

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !6752, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata i8* %19, metadata !6751, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata i32 %20, metadata !6750, metadata !DIExpression()), !dbg !6753
  %21 = load i8, i8* %18, align 1, !dbg !6771
  store i8 %21, i8* %19, align 1, !dbg !6773
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !6774
  call void @llvm.dbg.value(metadata i8* %22, metadata !6751, metadata !DIExpression()), !dbg !6753
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6775
  call void @llvm.dbg.value(metadata i8* %23, metadata !6752, metadata !DIExpression()), !dbg !6753
  %24 = add i32 %20, -1, !dbg !6776
  call void @llvm.dbg.value(metadata i32 %24, metadata !6750, metadata !DIExpression()), !dbg !6753
  %25 = icmp eq i32 %24, 0, !dbg !6758
  br i1 %25, label %26, label %17, !dbg !6760, !llvm.loop !6777

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !6779
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6780 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6786, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.value(metadata i8* %1, metadata !6787, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.value(metadata i32 %2, metadata !6788, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.value(metadata i8* %0, metadata !6789, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.value(metadata i8* %1, metadata !6790, metadata !DIExpression()), !dbg !6791
  %4 = icmp eq i32 %2, 0, !dbg !6792
  br i1 %4, label %14, label %5, !dbg !6793

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6790, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.value(metadata i8* %7, metadata !6789, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.value(metadata i32 %8, metadata !6788, metadata !DIExpression()), !dbg !6791
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6794
  call void @llvm.dbg.value(metadata i8* %9, metadata !6790, metadata !DIExpression()), !dbg !6791
  %10 = load i8, i8* %6, align 1, !dbg !6796
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6797
  call void @llvm.dbg.value(metadata i8* %11, metadata !6789, metadata !DIExpression()), !dbg !6791
  store i8 %10, i8* %7, align 1, !dbg !6798
  %12 = add i32 %8, -1, !dbg !6799
  call void @llvm.dbg.value(metadata i32 %12, metadata !6788, metadata !DIExpression()), !dbg !6791
  %13 = icmp eq i32 %12, 0, !dbg !6792
  br i1 %13, label %14, label %5, !dbg !6793, !llvm.loop !6800

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !6802
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !6803 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6807, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i32 %1, metadata !6808, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i32 %2, metadata !6809, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8* %0, metadata !6810, metadata !DIExpression()), !dbg !6812
  %4 = trunc i32 %1 to i8, !dbg !6813
  call void @llvm.dbg.value(metadata i8 %4, metadata !6811, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i32 %2, metadata !6809, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8* %0, metadata !6810, metadata !DIExpression()), !dbg !6812
  %5 = icmp eq i32 %2, 0, !dbg !6814
  br i1 %5, label %12, label %6, !dbg !6815

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !6809, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8* %8, metadata !6810, metadata !DIExpression()), !dbg !6812
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6816
  call void @llvm.dbg.value(metadata i8* %9, metadata !6810, metadata !DIExpression()), !dbg !6812
  store i8 %4, i8* %8, align 1, !dbg !6818
  %10 = add i32 %7, -1, !dbg !6819
  call void @llvm.dbg.value(metadata i32 %10, metadata !6809, metadata !DIExpression()), !dbg !6812
  %11 = icmp eq i32 %10, 0, !dbg !6814
  br i1 %11, label %12, label %6, !dbg !6815, !llvm.loop !6820

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !6822
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6823 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6827, metadata !DIExpression()), !dbg !6833
  call void @llvm.dbg.value(metadata i32 %1, metadata !6828, metadata !DIExpression()), !dbg !6833
  call void @llvm.dbg.value(metadata i32 %2, metadata !6829, metadata !DIExpression()), !dbg !6833
  %4 = icmp eq i32 %2, 0, !dbg !6834
  br i1 %4, label %17, label %5, !dbg !6835

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !6836

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !6837
  call void @llvm.dbg.value(metadata i8* %9, metadata !6830, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.value(metadata i32 %8, metadata !6829, metadata !DIExpression()), !dbg !6833
  call void @llvm.dbg.value(metadata i8* %9, metadata !6830, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6837
  %10 = load i8, i8* %9, align 1, !dbg !6838
  %11 = icmp eq i8 %10, %6, !dbg !6841
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !6842
  call void @llvm.dbg.value(metadata i8* %12, metadata !6830, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.value(metadata i32 %13, metadata !6829, metadata !DIExpression()), !dbg !6833
  br i1 %15, label %16, label %7, !dbg !6842, !llvm.loop !6843

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !6845

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !6833
  ret i8* %19, !dbg !6846
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !6847 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !6849, metadata !DIExpression()), !dbg !6850
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !6851
  ret void, !dbg !6852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #12 !dbg !6853 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6855, metadata !DIExpression()), !dbg !6856
  ret i32 -1, !dbg !6857
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6858 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6862, metadata !DIExpression()), !dbg !6864
  call void @llvm.dbg.value(metadata i32* %1, metadata !6863, metadata !DIExpression()), !dbg !6864
  %3 = ptrtoint i32* %1 to i32, !dbg !6865
  %4 = and i32 %3, -2, !dbg !6865
  %5 = icmp eq i32 %4, 2, !dbg !6865
  br i1 %5, label %6, label %9, !dbg !6865

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6866
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !6866
  br label %9, !dbg !6867

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !6867
  ret i32 %10, !dbg !6868
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6869 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6871, metadata !DIExpression()), !dbg !6873
  call void @llvm.dbg.value(metadata i32* %1, metadata !6872, metadata !DIExpression()), !dbg !6873
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !6874
  ret i32 %3, !dbg !6875
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !6876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6879, metadata !DIExpression()), !dbg !6881
  call void @llvm.dbg.value(metadata i32* %1, metadata !6880, metadata !DIExpression()), !dbg !6881
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6882, !srcloc !6884
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !6885
  ret i32 %3, !dbg !6886
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !6887 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6892, metadata !DIExpression()), !dbg !6896
  call void @llvm.dbg.value(metadata i32* %1, metadata !6893, metadata !DIExpression()), !dbg !6896
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6897
  call void @llvm.dbg.value(metadata i32 %3, metadata !6894, metadata !DIExpression()), !dbg !6896
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !6898
  call void @llvm.dbg.value(metadata i32 %4, metadata !6895, metadata !DIExpression()), !dbg !6896
  %5 = icmp ne i32 %3, %4, !dbg !6899
  %6 = sext i1 %5 to i32, !dbg !6900
  ret i32 %6, !dbg !6901
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !6902 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6906, metadata !DIExpression()), !dbg !6910
  call void @llvm.dbg.value(metadata i32 %1, metadata !6907, metadata !DIExpression()), !dbg !6910
  call void @llvm.dbg.value(metadata i32 %2, metadata !6908, metadata !DIExpression()), !dbg !6910
  call void @llvm.dbg.value(metadata i32* %3, metadata !6909, metadata !DIExpression()), !dbg !6910
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !6911
  ret i32 %5, !dbg !6912
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !6913 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6915, metadata !DIExpression()), !dbg !6919
  call void @llvm.dbg.value(metadata i32 %1, metadata !6916, metadata !DIExpression()), !dbg !6919
  call void @llvm.dbg.value(metadata i32 %2, metadata !6917, metadata !DIExpression()), !dbg !6919
  call void @llvm.dbg.value(metadata i32* %3, metadata !6918, metadata !DIExpression()), !dbg !6919
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6920, !srcloc !6922
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !6923
  ret i32 %5, !dbg !6924
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !6925 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6927, metadata !DIExpression()), !dbg !6935
  call void @llvm.dbg.value(metadata i32 %1, metadata !6928, metadata !DIExpression()), !dbg !6935
  call void @llvm.dbg.value(metadata i32 %2, metadata !6929, metadata !DIExpression()), !dbg !6935
  call void @llvm.dbg.value(metadata i32* %3, metadata !6930, metadata !DIExpression()), !dbg !6935
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !6936
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !6938
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !6938
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !6938
  br i1 %11, label %33, label %12, !dbg !6938

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !6935
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !6935
  call void @llvm.dbg.value(metadata i8* %14, metadata !6933, metadata !DIExpression()), !dbg !6935
  call void @llvm.dbg.value(metadata i32 %13, metadata !6931, metadata !DIExpression()), !dbg !6935
  call void @llvm.dbg.value(metadata i32 %1, metadata !6932, metadata !DIExpression()), !dbg !6935
  br label %15, !dbg !6939

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !6941
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !6935
  call void @llvm.dbg.value(metadata i8* %17, metadata !6933, metadata !DIExpression()), !dbg !6935
  call void @llvm.dbg.value(metadata i32 %16, metadata !6932, metadata !DIExpression()), !dbg !6935
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6942
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6945
  call void @llvm.dbg.value(metadata i8* %19, metadata !6933, metadata !DIExpression()), !dbg !6935
  %20 = load i8, i8* %17, align 1, !dbg !6946
  %21 = zext i8 %20 to i32, !dbg !6947
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !6942
  %23 = icmp eq i32 %22, -1, !dbg !6948
  br i1 %23, label %30, label %24, !dbg !6949

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !6950
  call void @llvm.dbg.value(metadata i32 %25, metadata !6932, metadata !DIExpression()), !dbg !6935
  %26 = icmp eq i32 %25, 0, !dbg !6951
  br i1 %26, label %27, label %15, !dbg !6952, !llvm.loop !6953

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !6955
  call void @llvm.dbg.value(metadata i32 %28, metadata !6931, metadata !DIExpression()), !dbg !6935
  %29 = icmp eq i32 %28, 0, !dbg !6956
  br i1 %29, label %30, label %12, !dbg !6957, !llvm.loop !6958

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !6935
  call void @llvm.dbg.value(metadata i32 %31, metadata !6931, metadata !DIExpression()), !dbg !6935
  call void @llvm.dbg.label(metadata !6934), !dbg !6961
  %32 = sub i32 %2, %31, !dbg !6962
  br label %33, !dbg !6963

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !6935
  ret i32 %34, !dbg !6964
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !6965 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6969, metadata !DIExpression()), !dbg !6970
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !6971
  %3 = icmp eq i32 %2, -1, !dbg !6973
  br i1 %3, label %8, label %4, !dbg !6974

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !6975
  %6 = icmp eq i32 %5, -1, !dbg !6976
  %7 = sext i1 %6 to i32, !dbg !6975
  br label %8, !dbg !6977

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !6970
  ret i32 %9, !dbg !6978
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !6979 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6981, metadata !DIExpression()), !dbg !6982
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !6983
  ret void, !dbg !6984
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !6985 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6989, metadata !DIExpression()), !dbg !6995
  call void @llvm.dbg.value(metadata i32 %1, metadata !6990, metadata !DIExpression()), !dbg !6995
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !6991, metadata !DIExpression()), !dbg !6995
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !6996
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !6996
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !6996
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !6992, metadata !DIExpression()), !dbg !6995
  call void @llvm.dbg.value(metadata i32 %0, metadata !6994, metadata !DIExpression()), !dbg !6995
  %7 = icmp slt i32 %0, %1, !dbg !6997
  br i1 %7, label %8, label %22, !dbg !7000

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6994, metadata !DIExpression()), !dbg !6995
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !7001
  %11 = icmp eq i32 %10, 0, !dbg !7001
  br i1 %11, label %19, label %12, !dbg !7004

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !7005
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7007
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7007
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7009
  br i1 %15, label %19, label %16, !dbg !7010

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7011
  %18 = load i8*, i8** %17, align 4, !dbg !7011
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !7012
  br label %19, !dbg !7013

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7014
  call void @llvm.dbg.value(metadata i32 %20, metadata !6994, metadata !DIExpression()), !dbg !6995
  %21 = icmp eq i32 %20, %1, !dbg !6997
  br i1 %21, label %22, label %8, !dbg !7000, !llvm.loop !7015

22:                                               ; preds = %19, %3
  ret void, !dbg !7017
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #14 !dbg !7018 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7020, metadata !DIExpression()), !dbg !7021
  %2 = shl nuw i32 1, %0, !dbg !7022
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !7025
  ret i32 %3, !dbg !7026
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #13 !dbg !7027 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7031, metadata !DIExpression()), !dbg !7032
  %2 = shl nuw i32 1, %0, !dbg !7033
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !7036
  ret void, !dbg !7037
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #13 !dbg !7038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7041, metadata !DIExpression()), !dbg !7042
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7043
  ret void, !dbg !7044
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7045 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7047, metadata !DIExpression()), !dbg !7048
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7049
  %3 = and i32 %2, %0, !dbg !7049
  %4 = icmp eq i32 %3, %0, !dbg !7050
  %5 = zext i1 %4 to i32, !dbg !7050
  ret i32 %5, !dbg !7051
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7052 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7054, metadata !DIExpression()), !dbg !7055
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !7056
  ret void, !dbg !7057
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7058 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7060, metadata !DIExpression()), !dbg !7061
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !7062
  ret void, !dbg !7063
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7064 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7066, metadata !DIExpression()), !dbg !7067
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !7068
  ret void, !dbg !7069
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !7070 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7072, metadata !DIExpression()), !dbg !7073
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !7074
  ret void, !dbg !7075
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !7076 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7078, metadata !DIExpression()), !dbg !7079
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !7080
  ret void, !dbg !7081
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7082 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7084, metadata !DIExpression()), !dbg !7085
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !7086
  ret void, !dbg !7087
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !7088 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7090, metadata !DIExpression()), !dbg !7091
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !7092
  ret void, !dbg !7093
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !7094 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7096, metadata !DIExpression()), !dbg !7097
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !7098
  ret void, !dbg !7099
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !7100 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7102, metadata !DIExpression()), !dbg !7103
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !7104
  ret void, !dbg !7105
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !7106 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7108, metadata !DIExpression()), !dbg !7109
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !7110
  ret void, !dbg !7111
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7112 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7114, metadata !DIExpression()), !dbg !7115
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !7116
  ret i32 0, !dbg !7117
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !558 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !562, metadata !DIExpression()), !dbg !7118
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !7119
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !7121
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !7123
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !7125
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !7127
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !7129
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !7131
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !7133
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !7135
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !7137
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !7139
  ret void, !dbg !7141
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7142 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7144, metadata !DIExpression()), !dbg !7146
  call void @llvm.dbg.value(metadata i32 0, metadata !7145, metadata !DIExpression()), !dbg !7146
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !7147
  %3 = load i32, i32* %2, align 4, !dbg !7147
  call void @llvm.dbg.value(metadata i32 %3, metadata !7145, metadata !DIExpression()), !dbg !7146
  %4 = shl nuw i32 1, %0, !dbg !7148
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #24, !dbg !7149
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !7150
  ret void, !dbg !7151
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !7152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7154, metadata !DIExpression()), !dbg !7155
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7156
  %3 = or i32 %2, %0, !dbg !7156
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7156
  ret void, !dbg !7157
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #13 !dbg !7158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7160, metadata !DIExpression()), !dbg !7161
  %2 = icmp slt i32 %0, 32, !dbg !7162
  br i1 %2, label %3, label %5, !dbg !7164

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !7165
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !7167
  br label %5, !dbg !7168

5:                                                ; preds = %1, %3
  ret void, !dbg !7169
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !7170 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7172, metadata !DIExpression()), !dbg !7173
  %2 = xor i32 %0, -1, !dbg !7174
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7174
  %4 = and i32 %3, %2, !dbg !7174
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7174
  ret void, !dbg !7175
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #13 !dbg !7176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7180, metadata !DIExpression()), !dbg !7182
  call void @llvm.dbg.value(metadata i32 %1, metadata !7181, metadata !DIExpression()), !dbg !7182
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !7183

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !7184
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !7186
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !7187
  br label %11, !dbg !7188

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !7189
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !7190
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !7191
  br label %11, !dbg !7192

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !7193
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !7194
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !7195
  br label %11, !dbg !7196

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !7197
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !7198
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !7199
  br label %11, !dbg !7200

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !7201
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !7202 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7204, metadata !DIExpression()), !dbg !7205
  %2 = xor i32 %0, -1, !dbg !7206
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7206
  %4 = and i32 %3, %2, !dbg !7206
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7206
  ret void, !dbg !7207
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !7208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7210, metadata !DIExpression()), !dbg !7211
  %2 = xor i32 %0, -1, !dbg !7212
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7212
  %4 = and i32 %3, %2, !dbg !7212
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7212
  ret void, !dbg !7213
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !7214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7216, metadata !DIExpression()), !dbg !7217
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7218
  %3 = or i32 %2, %0, !dbg !7218
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7218
  ret void, !dbg !7219
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !7220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7222, metadata !DIExpression()), !dbg !7223
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7224
  %3 = or i32 %2, %0, !dbg !7224
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7224
  ret void, !dbg !7225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !7226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7230, metadata !DIExpression()), !dbg !7236
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !7231, metadata !DIExpression()), !dbg !7236
  call void @llvm.dbg.value(metadata i8* %2, metadata !7232, metadata !DIExpression()), !dbg !7236
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !7233, metadata !DIExpression()), !dbg !7236
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7235, metadata !DIExpression()), !dbg !7236
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7237
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !7237
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !7239
  br i1 %6, label %7, label %9, !dbg !7240

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !7241
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7242
  store i8* %2, i8** %8, align 4, !dbg !7243
  br label %9, !dbg !7244

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !7236
  ret i32 %10, !dbg !7245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !7246 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7248, metadata !DIExpression()), !dbg !7251
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !7249, metadata !DIExpression()), !dbg !7251
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7250, metadata !DIExpression()), !dbg !7251
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7252
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !7253
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7254
  store i8* null, i8** %3, align 4, !dbg !7255
  ret void, !dbg !7256
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !7257 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7259, metadata !DIExpression()), !dbg !7264
  call void @llvm.dbg.value(metadata i8* %1, metadata !7260, metadata !DIExpression()), !dbg !7264
  call void @llvm.dbg.value(metadata i8* %1, metadata !7261, metadata !DIExpression()), !dbg !7264
  %3 = bitcast i8* %1 to i32*, !dbg !7265
  %4 = load i32, i32* %3, align 4, !dbg !7265
  %5 = add i32 %4, -169, !dbg !7265
  %6 = icmp ult i32 %5, -121, !dbg !7265
  br i1 %6, label %15, label %7, !dbg !7267

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7268
  %9 = inttoptr i32 %8 to i32*, !dbg !7269
  call void @llvm.dbg.value(metadata i32* %9, metadata !7262, metadata !DIExpression()), !dbg !7264
  %10 = load volatile i32, i32* %9, align 4, !dbg !7270
  call void @llvm.dbg.value(metadata i32 %10, metadata !7263, metadata !DIExpression()), !dbg !7264
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7271
  %12 = bitcast i8* %11 to i32*, !dbg !7271
  %13 = load i32, i32* %12, align 4, !dbg !7271
  %14 = or i32 %13, %10, !dbg !7272
  call void @llvm.dbg.value(metadata i32 %14, metadata !7263, metadata !DIExpression()), !dbg !7264
  store volatile i32 %14, i32* %9, align 4, !dbg !7273
  br label %15, !dbg !7274

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7264
  ret i32 %16, !dbg !7275
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !7276 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7278, metadata !DIExpression()), !dbg !7283
  call void @llvm.dbg.value(metadata i8* %1, metadata !7279, metadata !DIExpression()), !dbg !7283
  call void @llvm.dbg.value(metadata i8* %1, metadata !7280, metadata !DIExpression()), !dbg !7283
  %3 = bitcast i8* %1 to i32*, !dbg !7284
  %4 = load i32, i32* %3, align 4, !dbg !7284
  %5 = add i32 %4, -169, !dbg !7284
  %6 = icmp ult i32 %5, -121, !dbg !7284
  br i1 %6, label %16, label %7, !dbg !7286

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7287
  %9 = inttoptr i32 %8 to i32*, !dbg !7288
  call void @llvm.dbg.value(metadata i32* %9, metadata !7281, metadata !DIExpression()), !dbg !7283
  %10 = load volatile i32, i32* %9, align 4, !dbg !7289
  call void @llvm.dbg.value(metadata i32 %10, metadata !7282, metadata !DIExpression()), !dbg !7283
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7290
  %12 = bitcast i8* %11 to i32*, !dbg !7290
  %13 = load i32, i32* %12, align 4, !dbg !7290
  %14 = xor i32 %13, -1, !dbg !7291
  %15 = and i32 %10, %14, !dbg !7292
  call void @llvm.dbg.value(metadata i32 %15, metadata !7282, metadata !DIExpression()), !dbg !7283
  store volatile i32 %15, i32* %9, align 4, !dbg !7293
  br label %16, !dbg !7294

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7283
  ret i32 %17, !dbg !7295
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !7296 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7298, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.value(metadata i8* %1, metadata !7299, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.value(metadata i32* %2, metadata !7300, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.value(metadata i8* %1, metadata !7301, metadata !DIExpression()), !dbg !7306
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !7307
  call void @llvm.dbg.value(metadata i32 %4, metadata !7302, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.value(metadata i32 undef, metadata !7303, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.value(metadata i32 undef, metadata !7304, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.value(metadata i32 %4, metadata !7305, metadata !DIExpression()), !dbg !7306
  %5 = bitcast i8* %1 to i32*, !dbg !7308
  %6 = load i32, i32* %5, align 4, !dbg !7308
  switch i32 %6, label %18 [
    i32 48, label %16
    i32 52, label %16
    i32 56, label %16
    i32 64, label %7
    i32 68, label %9
    i32 168, label %16
    i32 6, label %16
    i32 1, label %11
    i32 4, label %14
    i32 5, label %15
  ], !dbg !7309

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !7310
  call void @llvm.dbg.value(metadata i32 %8, metadata !7303, metadata !DIExpression()), !dbg !7306
  br label %16, !dbg !7311

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #24, !dbg !7313
  call void @llvm.dbg.value(metadata i32 %10, metadata !7304, metadata !DIExpression()), !dbg !7306
  br label %16, !dbg !7314

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !7315
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12) #24, !dbg !7316
  br label %16, !dbg !7317

14:                                               ; preds = %3
  br label %16, !dbg !7318

15:                                               ; preds = %3
  br label %16, !dbg !7319

16:                                               ; preds = %3, %3, %3, %3, %3, %15, %14, %11, %9, %7
  %17 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ 0, %14 ], [ 32000, %15 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %17, i32* %2, align 4, !dbg !7320
  br label %18, !dbg !7321

18:                                               ; preds = %16, %3
  %19 = phi i32 [ -134, %3 ], [ 0, %16 ], !dbg !7306
  ret i32 %19, !dbg !7321
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #13 !dbg !7322 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7324, metadata !DIExpression()), !dbg !7332
  call void @llvm.dbg.value(metadata i8* %1, metadata !7325, metadata !DIExpression()), !dbg !7332
  call void @llvm.dbg.value(metadata i8* %2, metadata !7326, metadata !DIExpression()), !dbg !7332
  call void @llvm.dbg.value(metadata i8* %1, metadata !7327, metadata !DIExpression()), !dbg !7332
  %4 = bitcast i8* %1 to i32*, !dbg !7333
  %5 = load i32, i32* %4, align 4, !dbg !7333
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !7334
  call void @llvm.dbg.value(metadata i32 %6, metadata !7331, metadata !DIExpression()), !dbg !7332
  %7 = icmp slt i32 %6, 0, !dbg !7335
  br i1 %7, label %22, label %8, !dbg !7337

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7327, metadata !DIExpression()), !dbg !7332
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7338
  %10 = bitcast i8* %9 to i32*, !dbg !7338
  %11 = load i32, i32* %10, align 4, !dbg !7338
  %12 = lshr i32 %11, 16, !dbg !7338
  %13 = and i32 %12, 7, !dbg !7338
  %14 = lshr i32 %11, 8, !dbg !7339
  %15 = and i32 %14, 31, !dbg !7339
  %16 = shl i32 %13, %15, !dbg !7340
  call void @llvm.dbg.value(metadata i32 %16, metadata !7330, metadata !DIExpression()), !dbg !7332
  %17 = and i32 %11, 255, !dbg !7341
  %18 = or i32 %17, 1073887232, !dbg !7342
  %19 = inttoptr i32 %18 to i32*, !dbg !7343
  call void @llvm.dbg.value(metadata i32* %19, metadata !7328, metadata !DIExpression()), !dbg !7332
  %20 = load volatile i32, i32* %19, align 4, !dbg !7344
  call void @llvm.dbg.value(metadata i32 %20, metadata !7329, metadata !DIExpression()), !dbg !7332
  %21 = or i32 %16, %20, !dbg !7345
  call void @llvm.dbg.value(metadata i32 %21, metadata !7329, metadata !DIExpression()), !dbg !7332
  store volatile i32 %21, i32* %19, align 4, !dbg !7346
  br label %22, !dbg !7347

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !7332
  ret i32 %23, !dbg !7348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #12 !dbg !7349 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7353, metadata !DIExpression()), !dbg !7355
  call void @llvm.dbg.value(metadata i32 0, metadata !7354, metadata !DIExpression()), !dbg !7355
  %2 = add i32 %0, -1, !dbg !7356
  %3 = icmp ult i32 %2, 6, !dbg !7356
  br i1 %3, label %4, label %7, !dbg !7356

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !7356
  %6 = load i32, i32* %5, align 4, !dbg !7356
  call void @llvm.dbg.value(metadata i32 %6, metadata !7354, metadata !DIExpression()), !dbg !7355
  br label %7, !dbg !7357

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !7355
  ret i32 %8, !dbg !7358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !7359 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7363, metadata !DIExpression()), !dbg !7365
  call void @llvm.dbg.value(metadata i32 %1, metadata !7364, metadata !DIExpression()), !dbg !7365
  %3 = udiv i32 %0, %1, !dbg !7366
  ret i32 %3, !dbg !7367
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0) unnamed_addr #12 !dbg !7368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7372, metadata !DIExpression()), !dbg !7376
  call void @llvm.dbg.value(metadata i32 16, metadata !7373, metadata !DIExpression()), !dbg !7376
  call void @llvm.dbg.value(metadata i32 336, metadata !7374, metadata !DIExpression()), !dbg !7376
  call void @llvm.dbg.value(metadata i32 4, metadata !7375, metadata !DIExpression()), !dbg !7376
  %2 = mul i32 %0, 336, !dbg !7377
  %3 = lshr i32 %2, 6, !dbg !7378
  ret i32 %3, !dbg !7379
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !7380 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !7382, metadata !DIExpression()), !dbg !7385
  tail call void @config_enable_default_clocks() #25, !dbg !7386
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !7387
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !7387
  %4 = lshr i32 %3, 4, !dbg !7387
  %5 = and i32 %4, 15, !dbg !7387
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !7387
  %7 = load i8, i8* %6, align 1, !dbg !7387
  %8 = zext i8 %7 to i32, !dbg !7387
  %9 = lshr i32 %2, %8, !dbg !7387
  call void @llvm.dbg.value(metadata i32 %9, metadata !7383, metadata !DIExpression()), !dbg !7385
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !7384, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !7385
  %10 = icmp ult i32 %9, 84000000, !dbg !7388
  br i1 %10, label %11, label %13, !dbg !7390

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !7391
  br label %13, !dbg !7393

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !7394
  tail call fastcc void @set_up_plls() #24, !dbg !7395
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !7396
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !7399
  br label %14, !dbg !7400

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !7401
  %16 = icmp eq i32 %15, 8, !dbg !7402
  br i1 %16, label %17, label %14, !dbg !7400, !llvm.loop !7403

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !7405
  br i1 %18, label %19, label %21, !dbg !7407

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !7408
  br label %21, !dbg !7410

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !7411
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !7412
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !7413
  ret i32 0, !dbg !7414
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #14 !dbg !7415 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7417
  %2 = and i32 %1, 240, !dbg !7417
  ret i32 %2, !dbg !7418
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #13 !dbg !7419 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !7420
  %2 = icmp eq i32 %1, 1, !dbg !7424
  br i1 %2, label %7, label %3, !dbg !7425

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !7426
  br label %4, !dbg !7428

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !7429
  %6 = icmp eq i32 %5, 1, !dbg !7430
  br i1 %6, label %7, label %4, !dbg !7428, !llvm.loop !7431

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !7433
  br label %8, !dbg !7436

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !7437
  %10 = icmp eq i32 %9, 1, !dbg !7438
  br i1 %10, label %11, label %8, !dbg !7436, !llvm.loop !7439

11:                                               ; preds = %8
  ret void, !dbg !7441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !7442 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !7443
  %2 = icmp eq i32 %1, 8, !dbg !7445
  br i1 %2, label %3, label %4, !dbg !7446

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !7447
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !7449
  br label %4, !dbg !7450

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !7451
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7452
  %6 = and i32 %5, -196609, !dbg !7452
  %7 = or i32 %6, 65536, !dbg !7452
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7452
  tail call void @config_pll_sysclock() #25, !dbg !7453
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !7454
  br label %8, !dbg !7455

8:                                                ; preds = %8, %4
  %9 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !7456
  %10 = icmp eq i32 %9, 1, !dbg !7457
  br i1 %10, label %11, label %8, !dbg !7455, !llvm.loop !7458

11:                                               ; preds = %8
  ret void, !dbg !7460
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #13 !dbg !7461 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7463, metadata !DIExpression()), !dbg !7464
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7465
  %2 = and i32 %1, -241, !dbg !7465
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7465
  ret void, !dbg !7466
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #13 !dbg !7467 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7469, metadata !DIExpression()), !dbg !7470
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7471
  %3 = and i32 %2, -4, !dbg !7471
  %4 = or i32 %3, %0, !dbg !7471
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7471
  ret void, !dbg !7472
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #14 !dbg !7473 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7474
  %2 = and i32 %1, 12, !dbg !7474
  ret i32 %2, !dbg !7475
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #13 !dbg !7476 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !7478, metadata !DIExpression()), !dbg !7479
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7480
  %2 = and i32 %1, -7169, !dbg !7480
  %3 = or i32 %2, 4096, !dbg !7480
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7480
  ret void, !dbg !7481
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #13 !dbg !7482 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7484, metadata !DIExpression()), !dbg !7485
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7486
  %2 = and i32 %1, -57345, !dbg !7486
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7486
  ret void, !dbg !7487
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #13 !dbg !7488 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !7489
  %2 = icmp eq i32 %1, 1, !dbg !7491
  br i1 %2, label %7, label %3, !dbg !7492

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !7493
  br label %4, !dbg !7495

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !7496
  %6 = icmp eq i32 %5, 1, !dbg !7497
  br i1 %6, label %7, label %4, !dbg !7495, !llvm.loop !7498

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !7500
  br label %8, !dbg !7501

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !7502
  %10 = icmp eq i32 %9, 0, !dbg !7503
  br i1 %10, label %11, label %8, !dbg !7501, !llvm.loop !7504

11:                                               ; preds = %8
  ret void, !dbg !7506
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #13 !dbg !7507 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7508
  %2 = and i32 %1, -16777217, !dbg !7508
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7508
  ret void, !dbg !7509
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #13 !dbg !7510 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7511
  %2 = or i32 %1, 16777216, !dbg !7511
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7511
  ret void, !dbg !7512
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #14 !dbg !7513 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7514
  %2 = lshr i32 %1, 25, !dbg !7515
  %3 = and i32 %2, 1, !dbg !7515
  ret i32 %3, !dbg !7516
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #14 !dbg !7517 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7518
  %2 = lshr i32 %1, 1, !dbg !7519
  %3 = and i32 %2, 1, !dbg !7519
  ret i32 %3, !dbg !7520
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #13 !dbg !7521 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7522
  %2 = or i32 %1, 1, !dbg !7522
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7522
  ret void, !dbg !7523
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #13 !dbg !7524 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7525
  %2 = or i32 %1, 1, !dbg !7525
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7525
  ret void, !dbg !7526
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #14 !dbg !7527 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7528
  %2 = lshr i32 %1, 1, !dbg !7529
  %3 = and i32 %2, 1, !dbg !7529
  ret i32 %3, !dbg !7530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #12 !dbg !7531 {
  ret i32 16000000, !dbg !7533
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #13 !dbg !7536 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !7537
  ret void, !dbg !7538
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #13 !dbg !7539 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7543, metadata !DIExpression()), !dbg !7547
  call void @llvm.dbg.value(metadata i32 16, metadata !7544, metadata !DIExpression()), !dbg !7547
  call void @llvm.dbg.value(metadata i32 336, metadata !7545, metadata !DIExpression()), !dbg !7547
  call void @llvm.dbg.value(metadata i32 65536, metadata !7546, metadata !DIExpression()), !dbg !7547
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7548
  %2 = and i32 %1, -4227072, !dbg !7548
  %3 = or i32 %2, 21520, !dbg !7548
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7548
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7549
  %5 = and i32 %4, -196609, !dbg !7549
  %6 = or i32 %5, 65536, !dbg !7549
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7549
  ret void, !dbg !7550
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #15 !dbg !7551 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !7552
  ret void, !dbg !7553
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #15 !dbg !7554 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !7557, metadata !DIExpression()), !dbg !7559
  %2 = bitcast i32* %1 to i8*, !dbg !7560
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !7560
  call void @llvm.dbg.declare(metadata i32* %1, metadata !7558, metadata !DIExpression()), !dbg !7561
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7562
  %4 = or i32 %3, 268435456, !dbg !7562
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7562
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7563
  %6 = and i32 %5, 268435456, !dbg !7563
  store volatile i32 %6, i32* %1, align 4, !dbg !7564
  %7 = load volatile i32, i32* %1, align 4, !dbg !7565
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !7566
  ret void, !dbg !7566
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7567 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7569, metadata !DIExpression()), !dbg !7570
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !7571
  br i1 %2, label %3, label %4, !dbg !7573

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !7574
  br label %4, !dbg !7575

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !7570
  ret i32 %5, !dbg !7576
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !7577 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !7582, metadata !DIExpression()), !dbg !7583
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7584, !srcloc !7586
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !7587
  ret i1 %1, !dbg !7588
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !7589 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !7590
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !7591
  ret void, !dbg !7592
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !7593 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7595, metadata !DIExpression()), !dbg !7596
  %2 = icmp eq i32 %0, 10, !dbg !7597
  br i1 %2, label %3, label %4, !dbg !7599

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !7600
  br label %4, !dbg !7602

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !7603
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !7604
  ret i32 %0, !dbg !7605
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7606 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !7609, metadata !DIExpression()), !dbg !7611
  call void @llvm.dbg.value(metadata i8 %0, metadata !7610, metadata !DIExpression()), !dbg !7611
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7612, !srcloc !7614
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !7615
  ret void, !dbg !7616
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7617 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !7619, metadata !DIExpression()), !dbg !7622
  call void @llvm.dbg.value(metadata i8 %0, metadata !7620, metadata !DIExpression()), !dbg !7622
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7623
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !7621, metadata !DIExpression()), !dbg !7622
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !7624
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !7624
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #25, !dbg !7625
  ret void, !dbg !7626
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !7627 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !7629, metadata !DIExpression()), !dbg !7630
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !7631
  ret i1 %1, !dbg !7632
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #12 !dbg !7633 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !7680, metadata !DIExpression()), !dbg !7683
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !7681, metadata !DIExpression()), !dbg !7683
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !7682, metadata !DIExpression()), !dbg !7683
  ret void, !dbg !7684
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !7685 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7687, metadata !DIExpression()), !dbg !7692
  call void @llvm.dbg.value(metadata i8 %1, metadata !7688, metadata !DIExpression()), !dbg !7692
  call void @llvm.dbg.value(metadata i32 %2, metadata !7689, metadata !DIExpression()), !dbg !7692
  %5 = bitcast i32* %4 to i8*, !dbg !7693
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7693
  call void @llvm.dbg.value(metadata i32* %4, metadata !7691, metadata !DIExpression(DW_OP_deref)), !dbg !7692
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !7694
  call void @llvm.dbg.value(metadata i32 %6, metadata !7690, metadata !DIExpression()), !dbg !7692
  %7 = icmp eq i32 %6, 0, !dbg !7695
  br i1 %7, label %8, label %31, !dbg !7697

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !7690, metadata !DIExpression()), !dbg !7692
  %9 = and i32 %2, 131072, !dbg !7698
  %10 = icmp eq i32 %9, 0, !dbg !7700
  br i1 %10, label %28, label %11, !dbg !7701

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !7702
  %13 = icmp eq i32 %12, 0, !dbg !7705
  br i1 %13, label %18, label %14, !dbg !7706

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !7707
  %16 = shl nuw i32 1, %15, !dbg !7707
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !7709
  br label %25, !dbg !7710

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !7711
  %20 = icmp eq i32 %19, 0, !dbg !7713
  %21 = zext i8 %1 to i32, !dbg !7692
  br i1 %20, label %25, label %22, !dbg !7714

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !7715
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !7717
  br label %25, !dbg !7718

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !7719
  %27 = load i32, i32* %4, align 4, !dbg !7720
  call void @llvm.dbg.value(metadata i32 %30, metadata !7691, metadata !DIExpression()), !dbg !7692
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !7721
  br label %31, !dbg !7722

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !7719
  %30 = load i32, i32* %4, align 4, !dbg !7720
  call void @llvm.dbg.value(metadata i32 %30, metadata !7691, metadata !DIExpression()), !dbg !7692
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !7721
  call void @llvm.dbg.value(metadata i32 0, metadata !7690, metadata !DIExpression()), !dbg !7692
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7723
  ret i32 %6, !dbg !7723
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #14 !dbg !7724 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7728, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata i32* %1, metadata !7729, metadata !DIExpression()), !dbg !7733
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7734
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7734
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7734
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7730, metadata !DIExpression()), !dbg !7733
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7735
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7735
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7735
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7732, metadata !DIExpression()), !dbg !7733
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !7736
  store i32 %9, i32* %1, align 4, !dbg !7737
  ret i32 0, !dbg !7738
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #13 !dbg !7739 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7741, metadata !DIExpression()), !dbg !7747
  call void @llvm.dbg.value(metadata i32 %1, metadata !7742, metadata !DIExpression()), !dbg !7747
  call void @llvm.dbg.value(metadata i32 %2, metadata !7743, metadata !DIExpression()), !dbg !7747
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7748
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !7748
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !7748
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !7744, metadata !DIExpression()), !dbg !7747
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !7749
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !7749
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !7749
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !7745, metadata !DIExpression()), !dbg !7747
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !7750
  call void @llvm.dbg.value(metadata i32 %10, metadata !7746, metadata !DIExpression()), !dbg !7747
  %11 = xor i32 %1, -1, !dbg !7751
  %12 = and i32 %10, %11, !dbg !7752
  %13 = and i32 %2, %1, !dbg !7753
  %14 = or i32 %12, %13, !dbg !7754
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !7755
  ret i32 0, !dbg !7756
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7757 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7759, metadata !DIExpression()), !dbg !7763
  call void @llvm.dbg.value(metadata i32 %1, metadata !7760, metadata !DIExpression()), !dbg !7763
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7764
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7764
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7764
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7761, metadata !DIExpression()), !dbg !7763
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7765
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7765
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7765
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7762, metadata !DIExpression()), !dbg !7763
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !7766
  store volatile i32 %1, i32* %9, align 4, !dbg !7766
  ret i32 0, !dbg !7767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7768 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7770, metadata !DIExpression()), !dbg !7774
  call void @llvm.dbg.value(metadata i32 %1, metadata !7771, metadata !DIExpression()), !dbg !7774
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7775
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7775
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7775
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7772, metadata !DIExpression()), !dbg !7774
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7776
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7776
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7776
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7773, metadata !DIExpression()), !dbg !7774
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !7777
  ret i32 0, !dbg !7778
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7779 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7781, metadata !DIExpression()), !dbg !7785
  call void @llvm.dbg.value(metadata i32 %1, metadata !7782, metadata !DIExpression()), !dbg !7785
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7786
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7786
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7786
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7783, metadata !DIExpression()), !dbg !7785
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7787
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7787
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7787
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7784, metadata !DIExpression()), !dbg !7785
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !7788
  %10 = load volatile i32, i32* %9, align 4, !dbg !7788
  %11 = xor i32 %10, %1, !dbg !7788
  store volatile i32 %11, i32* %9, align 4, !dbg !7788
  ret i32 0, !dbg !7789
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !7790 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7792, metadata !DIExpression()), !dbg !7802
  call void @llvm.dbg.value(metadata i8 %1, metadata !7793, metadata !DIExpression()), !dbg !7802
  call void @llvm.dbg.value(metadata i32 %2, metadata !7794, metadata !DIExpression()), !dbg !7802
  call void @llvm.dbg.value(metadata i32 %3, metadata !7795, metadata !DIExpression()), !dbg !7802
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7803
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7803
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7803
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7796, metadata !DIExpression()), !dbg !7802
  call void @llvm.dbg.value(metadata i8* undef, metadata !7797, metadata !DIExpression()), !dbg !7802
  call void @llvm.dbg.value(metadata i32 0, metadata !7799, metadata !DIExpression()), !dbg !7802
  call void @llvm.dbg.value(metadata i32 0, metadata !7800, metadata !DIExpression()), !dbg !7802
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !7804

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !7805
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !7809
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7810
  %12 = load i32, i32* %11, align 4, !dbg !7810
  %13 = icmp eq i32 %10, %12, !dbg !7811
  br i1 %13, label %14, label %29, !dbg !7812

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !7813
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !7815
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !7816
  br label %29, !dbg !7817

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7818
  %17 = load i8*, i8** %16, align 4, !dbg !7818
  call void @llvm.dbg.value(metadata i8* %17, metadata !7797, metadata !DIExpression()), !dbg !7802
  %18 = zext i8 %1 to i32, !dbg !7819
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !7821
  %20 = icmp eq i32 %19, 0, !dbg !7822
  br i1 %20, label %21, label %29, !dbg !7823

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7824
  %23 = load i32, i32* %22, align 4, !dbg !7824
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !7825
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !7826

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !7799, metadata !DIExpression()), !dbg !7802
  br label %27, !dbg !7827

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !7799, metadata !DIExpression()), !dbg !7802
  br label %27, !dbg !7829

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !7799, metadata !DIExpression()), !dbg !7802
  br label %27, !dbg !7830

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !7802
  call void @llvm.dbg.value(metadata i32 %28, metadata !7799, metadata !DIExpression()), !dbg !7802
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !7831
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !7832
  br label %29, !dbg !7832

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !7802
  call void @llvm.dbg.value(metadata i32 %30, metadata !7800, metadata !DIExpression()), !dbg !7802
  call void @llvm.dbg.label(metadata !7801), !dbg !7833
  ret i32 %30, !dbg !7834
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #11 !dbg !7835 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7837, metadata !DIExpression()), !dbg !7841
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7838, metadata !DIExpression()), !dbg !7841
  call void @llvm.dbg.value(metadata i1 %2, metadata !7839, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7841
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7842
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !7842
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !7842
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !7840, metadata !DIExpression()), !dbg !7841
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !7843
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !7844
  ret i32 %8, !dbg !7845
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #11 !dbg !7846 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7852, metadata !DIExpression()), !dbg !7855
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7853, metadata !DIExpression()), !dbg !7855
  call void @llvm.dbg.value(metadata i1 %2, metadata !7854, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7855
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !7856
  br i1 %4, label %10, label %5, !dbg !7858

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7859
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #24, !dbg !7862
  %8 = or i1 %7, %2, !dbg !7863
  %9 = select i1 %8, i32 0, i32 -22, !dbg !7863
  br i1 %2, label %11, label %13, !dbg !7863

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !7864

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7865
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #24, !dbg !7868
  br label %13, !dbg !7869

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !7855
  ret i32 %14, !dbg !7870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7871 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7875, metadata !DIExpression()), !dbg !7876
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7877
  %3 = icmp eq %struct._snode* %2, null, !dbg !7877
  ret i1 %3, !dbg !7877
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !7878 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7882, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7883, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7884, metadata !DIExpression()), !dbg !7886
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7887
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7885, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7884, metadata !DIExpression()), !dbg !7886
  %4 = icmp eq %struct._snode* %3, null, !dbg !7889
  br i1 %4, label %15, label %5, !dbg !7887

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7885, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7884, metadata !DIExpression()), !dbg !7886
  %6 = icmp eq %struct._snode* %3, %1, !dbg !7891
  br i1 %6, label %9, label %11, !dbg !7894

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7885, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7884, metadata !DIExpression()), !dbg !7886
  %8 = icmp eq %struct._snode* %13, %1, !dbg !7891
  br i1 %8, label %9, label %11, !dbg !7894, !llvm.loop !7895

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !7896
  br label %15, !dbg !7896

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7885, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7884, metadata !DIExpression()), !dbg !7886
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !7889
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7885, metadata !DIExpression()), !dbg !7886
  %14 = icmp eq %struct._snode* %13, null, !dbg !7889
  br i1 %14, label %15, label %7, !dbg !7887, !llvm.loop !7895

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !7898
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !7899 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7903, metadata !DIExpression()), !dbg !7905
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7904, metadata !DIExpression()), !dbg !7905
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7906
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !7906
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !7906
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7907
  %5 = icmp eq %struct._snode* %4, null, !dbg !7907
  br i1 %5, label %6, label %8, !dbg !7906

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7909
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !7909
  br label %8, !dbg !7909

8:                                                ; preds = %6, %2
  ret void, !dbg !7906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7911 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7915, metadata !DIExpression()), !dbg !7916
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7917
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7917
  ret %struct._snode* %3, !dbg !7918
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7919 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7923, metadata !DIExpression()), !dbg !7925
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7924, metadata !DIExpression()), !dbg !7925
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7926
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7927
  ret void, !dbg !7928
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7929 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7931, metadata !DIExpression()), !dbg !7933
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7932, metadata !DIExpression()), !dbg !7933
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7934
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7935
  ret void, !dbg !7936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7937 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7939, metadata !DIExpression()), !dbg !7940
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7941
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7941
  ret %struct._snode* %3, !dbg !7942
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7943 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7945, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7946, metadata !DIExpression()), !dbg !7947
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7948
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7949
  ret void, !dbg !7950
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !7951 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7955, metadata !DIExpression()), !dbg !7958
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7956, metadata !DIExpression()), !dbg !7958
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !7957, metadata !DIExpression()), !dbg !7958
  %4 = icmp eq %struct._snode* %1, null, !dbg !7959
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !7961
  br i1 %4, label %6, label %11, !dbg !7962

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !7963
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7965
  %8 = icmp eq %struct._snode* %7, %2, !dbg !7965
  br i1 %8, label %9, label %15, !dbg !7963

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7967
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !7967
  br label %15, !dbg !7967

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !7969
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7971
  %13 = icmp eq %struct._snode* %12, %2, !dbg !7971
  br i1 %13, label %14, label %15, !dbg !7969

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !7973
  br label %15, !dbg !7973

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !7962
  ret void, !dbg !7962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !7975 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7979, metadata !DIExpression()), !dbg !7980
  %2 = icmp eq %struct._snode* %0, null, !dbg !7981
  br i1 %2, label %5, label %3, !dbg !7981

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !7981
  br label %5, !dbg !7981

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !7981
  ret %struct._snode* %6, !dbg !7981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7982 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7984, metadata !DIExpression()), !dbg !7985
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !7986
  ret %struct._snode* %2, !dbg !7986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7987 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7989, metadata !DIExpression()), !dbg !7990
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7991
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7991
  ret %struct._snode* %3, !dbg !7992
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !7993 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7995, metadata !DIExpression()), !dbg !7998
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !7999, !range !8000
  call void @llvm.dbg.value(metadata i32 %2, metadata !7996, metadata !DIExpression()), !dbg !7998
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !8001
  call void @llvm.dbg.value(metadata i32 %3, metadata !7997, metadata !DIExpression()), !dbg !7998
  ret i32 %3, !dbg !8002
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !8003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8005, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.value(metadata i8* %1, metadata !8006, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.value(metadata i8* %1, metadata !8007, metadata !DIExpression()), !dbg !8008
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !8009
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !8009
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8010
  %6 = bitcast i8* %5 to %struct.device**, !dbg !8010
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !8010
  %8 = shl nuw i32 1, %0, !dbg !8011
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !8012
  ret void, !dbg !8013
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8014 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !8018, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.value(metadata i32 %1, metadata !8019, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8020, metadata !DIExpression()), !dbg !8024
  %4 = bitcast i64* %3 to i8*, !dbg !8025
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !8025
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !8022, metadata !DIExpression()), !dbg !8024
  store i64 70368744177732, i64* %3, align 8, !dbg !8026
  call void @llvm.dbg.value(metadata i64* %3, metadata !8022, metadata !DIExpression(DW_OP_deref)), !dbg !8024
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !8027
  call void @llvm.dbg.value(metadata i32 %5, metadata !8023, metadata !DIExpression()), !dbg !8024
  %6 = icmp eq i32 %5, 0, !dbg !8028
  br i1 %6, label %7, label %8, !dbg !8030

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !8031
  br label %8, !dbg !8032

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !8033
  ret void, !dbg !8033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !8034 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8036, metadata !DIExpression()), !dbg !8039
  call void @llvm.dbg.value(metadata i8* %0, metadata !8037, metadata !DIExpression()), !dbg !8039
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !8040
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !8038, metadata !DIExpression()), !dbg !8039
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !8041
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !8041
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !8042
  ret i32 %5, !dbg !8043
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8046, metadata !DIExpression()), !dbg !8049
  call void @llvm.dbg.value(metadata i32 %1, metadata !8047, metadata !DIExpression()), !dbg !8049
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !8050
  call void @llvm.dbg.value(metadata i32 %3, metadata !8048, metadata !DIExpression()), !dbg !8049
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !8051
  ret void, !dbg !8052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #12 !dbg !8053 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8057, metadata !DIExpression()), !dbg !8058
  %2 = sdiv i32 %0, 4, !dbg !8059
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !8060
  %6 = add nsw i32 %5, 16, !dbg !8061
  %7 = shl i32 15, %6, !dbg !8062
  %8 = or i32 %7, %2, !dbg !8063
  ret i32 %8, !dbg !8064
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8065 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8069, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.value(metadata i32 %1, metadata !8070, metadata !DIExpression()), !dbg !8071
  %3 = and i32 %1, 255, !dbg !8072
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !8072
  %5 = load volatile i32, i32* %4, align 4, !dbg !8072
  %6 = lshr i32 %1, 16, !dbg !8072
  %7 = xor i32 %6, -1, !dbg !8072
  %8 = and i32 %5, %7, !dbg !8072
  call void @llvm.dbg.value(metadata i32 %6, metadata !8073, metadata !DIExpression()) #23, !dbg !8077
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #27, !dbg !8079, !srcloc !8080
  call void @llvm.dbg.value(metadata i32 %9, metadata !8076, metadata !DIExpression()) #23, !dbg !8077
  call void @llvm.dbg.value(metadata i32 %9, metadata !8081, metadata !DIExpression()) #23, !dbg !8086
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !8088, !range !6308
  %11 = shl i32 %0, %10, !dbg !8072
  %12 = or i32 %11, %8, !dbg !8072
  store volatile i32 %12, i32* %4, align 4, !dbg !8072
  ret void, !dbg !8089
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8090 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8094, metadata !DIExpression()), !dbg !8099
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !8095, metadata !DIExpression()), !dbg !8099
  call void @llvm.dbg.value(metadata i32 %2, metadata !8096, metadata !DIExpression()), !dbg !8099
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8100
  %5 = icmp eq %struct._snode* %4, null, !dbg !8100
  br i1 %5, label %21, label %6, !dbg !8100

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !8102
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8098, metadata !DIExpression()), !dbg !8099
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !8097, metadata !DIExpression()), !dbg !8099
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !8103
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !8103
  %11 = load i32, i32* %10, align 4, !dbg !8103
  %12 = and i32 %11, %2, !dbg !8107
  %13 = icmp eq i32 %12, 0, !dbg !8107
  br i1 %13, label %19, label %14, !dbg !8108

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !8097, metadata !DIExpression()), !dbg !8099
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !8109
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !8109
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !8109
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !8111
  br label %19, !dbg !8112

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8097, metadata !DIExpression()), !dbg !8099
  %20 = icmp eq %struct._snode* %8, null, !dbg !8113
  br i1 %20, label %21, label %6, !dbg !8113

21:                                               ; preds = %19, %3
  ret void, !dbg !8114
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !8115 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8117, metadata !DIExpression()), !dbg !8118
  %2 = and i32 %0, 255, !dbg !8119
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !8119
  %4 = load volatile i32, i32* %3, align 4, !dbg !8119
  %5 = lshr i32 %0, 16, !dbg !8119
  %6 = and i32 %4, %5, !dbg !8119
  call void @llvm.dbg.value(metadata i32 %5, metadata !8073, metadata !DIExpression()) #23, !dbg !8120
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #27, !dbg !8122, !srcloc !8080
  call void @llvm.dbg.value(metadata i32 %7, metadata !8076, metadata !DIExpression()) #23, !dbg !8120
  call void @llvm.dbg.value(metadata i32 %7, metadata !8081, metadata !DIExpression()) #23, !dbg !8123
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !8125, !range !6308
  %9 = lshr i32 %6, %8, !dbg !8126
  ret i32 %9, !dbg !8127
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8128 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8133, metadata !DIExpression()), !dbg !8135
  call void @llvm.dbg.value(metadata i32 %1, metadata !8134, metadata !DIExpression()), !dbg !8135
  %3 = shl i32 %1, 16, !dbg !8136
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !8136
  store volatile i32 %3, i32* %4, align 4, !dbg !8136
  ret void, !dbg !8137
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !8138 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8142, metadata !DIExpression()), !dbg !8143
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8144
  %3 = load volatile i32, i32* %2, align 4, !dbg !8144
  ret i32 %3, !dbg !8145
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8146 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8148, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.value(metadata i32 %1, metadata !8149, metadata !DIExpression()), !dbg !8150
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8151
  store volatile i32 %1, i32* %3, align 4, !dbg !8151
  ret void, !dbg !8152
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !8153 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8155, metadata !DIExpression()), !dbg !8156
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !8157
  %3 = load volatile i32, i32* %2, align 4, !dbg !8157
  ret i32 %3, !dbg !8158
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !8159 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8163, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i32* %1, metadata !8164, metadata !DIExpression()), !dbg !8165
  %3 = and i32 %0, 131072, !dbg !8166
  %4 = icmp eq i32 %3, 0, !dbg !8168
  br i1 %4, label %22, label %5, !dbg !8169

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !8170
  %6 = and i32 %0, 2, !dbg !8172
  %7 = icmp eq i32 %6, 0, !dbg !8174
  br i1 %7, label %11, label %8, !dbg !8175

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !8176
  %10 = icmp eq i32 %9, 0, !dbg !8176
  br i1 %10, label %33, label %11, !dbg !8179

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !8180
  store i32 %12, i32* %1, align 4, !dbg !8180
  %13 = and i32 %0, 16, !dbg !8181
  %14 = icmp eq i32 %13, 0, !dbg !8183
  br i1 %14, label %17, label %15, !dbg !8184

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !8185
  br label %31, !dbg !8187

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !8188
  %19 = icmp eq i32 %18, 0, !dbg !8190
  br i1 %19, label %33, label %20, !dbg !8191

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !8192
  br label %31, !dbg !8194

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !8195
  %24 = icmp eq i32 %23, 0, !dbg !8197
  br i1 %24, label %31, label %25, !dbg !8198

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !8199
  %27 = icmp eq i32 %26, 0, !dbg !8202
  br i1 %27, label %28, label %31, !dbg !8203

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !8204
  br label %33, !dbg !8205

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !8165
  ret i32 %34, !dbg !8205
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8206 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8210, metadata !DIExpression()), !dbg !8221
  call void @llvm.dbg.value(metadata i32 %1, metadata !8211, metadata !DIExpression()), !dbg !8221
  call void @llvm.dbg.value(metadata i32 %2, metadata !8212, metadata !DIExpression()), !dbg !8221
  call void @llvm.dbg.value(metadata i32 %3, metadata !8213, metadata !DIExpression()), !dbg !8221
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8222
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8222
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8222
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8214, metadata !DIExpression()), !dbg !8221
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !8223
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !8223
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !8223
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !8215, metadata !DIExpression()), !dbg !8221
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !8224
  call void @llvm.dbg.value(metadata i32 %11, metadata !8216, metadata !DIExpression()), !dbg !8221
  %12 = and i32 %2, 48, !dbg !8225
  call void @llvm.dbg.value(metadata i32 %12, metadata !8217, metadata !DIExpression()), !dbg !8221
  call void @llvm.dbg.value(metadata i32 %2, metadata !8218, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !8221
  call void @llvm.dbg.value(metadata i32 %2, metadata !8219, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !8221
  call void @llvm.dbg.value(metadata i32 %2, metadata !8220, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !8221
  %13 = lshr i32 %2, 6, !dbg !8226
  %14 = and i32 %13, 1, !dbg !8226
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !8227
  %15 = lshr i32 %2, 7, !dbg !8228
  %16 = and i32 %15, 3, !dbg !8228
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !8229
  %17 = lshr i32 %2, 9, !dbg !8230
  %18 = and i32 %17, 3, !dbg !8230
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !8231
  %19 = icmp eq i32 %12, 32, !dbg !8232
  br i1 %19, label %20, label %24, !dbg !8234

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !8235
  br i1 %21, label %22, label %23, !dbg !8238

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !8239
  br label %24, !dbg !8241

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !8242
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !8244
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !8245
  ret void, !dbg !8246
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #12 !dbg !8247 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8249, metadata !DIExpression()), !dbg !8251
  %2 = shl nuw i32 1, %0, !dbg !8252
  call void @llvm.dbg.value(metadata i32 %2, metadata !8250, metadata !DIExpression()), !dbg !8251
  ret i32 %2, !dbg !8253
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8254 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8258, metadata !DIExpression()), !dbg !8261
  call void @llvm.dbg.value(metadata i32 %1, metadata !8259, metadata !DIExpression()), !dbg !8261
  call void @llvm.dbg.value(metadata i32 %2, metadata !8260, metadata !DIExpression()), !dbg !8261
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !8262
  %5 = load volatile i32, i32* %4, align 4, !dbg !8262
  %6 = xor i32 %1, -1, !dbg !8262
  %7 = and i32 %5, %6, !dbg !8262
  %8 = mul i32 %2, %1, !dbg !8262
  %9 = or i32 %7, %8, !dbg !8262
  store volatile i32 %9, i32* %4, align 4, !dbg !8262
  ret void, !dbg !8263
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8264 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8266, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.value(metadata i32 %1, metadata !8267, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.value(metadata i32 %2, metadata !8268, metadata !DIExpression()), !dbg !8269
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !8270
  %5 = load volatile i32, i32* %4, align 4, !dbg !8270
  call void @llvm.dbg.value(metadata i32 %1, metadata !8073, metadata !DIExpression()) #23, !dbg !8271
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #27, !dbg !8273, !srcloc !8080
  call void @llvm.dbg.value(metadata i32 %6, metadata !8076, metadata !DIExpression()) #23, !dbg !8271
  call void @llvm.dbg.value(metadata i32 %6, metadata !8081, metadata !DIExpression()) #23, !dbg !8274
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !8276, !range !6308
  %8 = shl nuw nsw i32 %7, 1, !dbg !8270
  %9 = shl i32 3, %8, !dbg !8270
  %10 = xor i32 %9, -1, !dbg !8270
  %11 = and i32 %5, %10, !dbg !8270
  call void @llvm.dbg.value(metadata i32 %1, metadata !8073, metadata !DIExpression()) #23, !dbg !8277
  call void @llvm.dbg.value(metadata i32 %6, metadata !8076, metadata !DIExpression()) #23, !dbg !8277
  call void @llvm.dbg.value(metadata i32 %6, metadata !8081, metadata !DIExpression()) #23, !dbg !8279
  %12 = shl i32 %2, %8, !dbg !8270
  %13 = or i32 %11, %12, !dbg !8270
  store volatile i32 %13, i32* %4, align 4, !dbg !8270
  ret void, !dbg !8281
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8282 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8284, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata i32 %1, metadata !8285, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata i32 %2, metadata !8286, metadata !DIExpression()), !dbg !8287
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !8288
  %5 = load volatile i32, i32* %4, align 4, !dbg !8288
  call void @llvm.dbg.value(metadata i32 %1, metadata !8073, metadata !DIExpression()) #23, !dbg !8289
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #27, !dbg !8291, !srcloc !8080
  call void @llvm.dbg.value(metadata i32 %6, metadata !8076, metadata !DIExpression()) #23, !dbg !8289
  call void @llvm.dbg.value(metadata i32 %6, metadata !8081, metadata !DIExpression()) #23, !dbg !8292
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !8294, !range !6308
  %8 = shl nuw nsw i32 %7, 1, !dbg !8288
  %9 = shl i32 3, %8, !dbg !8288
  %10 = xor i32 %9, -1, !dbg !8288
  %11 = and i32 %5, %10, !dbg !8288
  call void @llvm.dbg.value(metadata i32 %1, metadata !8073, metadata !DIExpression()) #23, !dbg !8295
  call void @llvm.dbg.value(metadata i32 %6, metadata !8076, metadata !DIExpression()) #23, !dbg !8295
  call void @llvm.dbg.value(metadata i32 %6, metadata !8081, metadata !DIExpression()) #23, !dbg !8297
  %12 = shl i32 %2, %8, !dbg !8288
  %13 = or i32 %11, %12, !dbg !8288
  store volatile i32 %13, i32* %4, align 4, !dbg !8288
  ret void, !dbg !8299
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8300 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8302, metadata !DIExpression()), !dbg !8305
  call void @llvm.dbg.value(metadata i32 %1, metadata !8303, metadata !DIExpression()), !dbg !8305
  call void @llvm.dbg.value(metadata i32 %2, metadata !8304, metadata !DIExpression()), !dbg !8305
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !8306
  %5 = load volatile i32, i32* %4, align 4, !dbg !8306
  call void @llvm.dbg.value(metadata i32 %1, metadata !8073, metadata !DIExpression()) #23, !dbg !8307
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #27, !dbg !8309, !srcloc !8080
  call void @llvm.dbg.value(metadata i32 %6, metadata !8076, metadata !DIExpression()) #23, !dbg !8307
  call void @llvm.dbg.value(metadata i32 %6, metadata !8081, metadata !DIExpression()) #23, !dbg !8310
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !8312, !range !6308
  %8 = shl nuw nsw i32 %7, 2, !dbg !8306
  %9 = shl i32 15, %8, !dbg !8306
  %10 = xor i32 %9, -1, !dbg !8306
  %11 = and i32 %5, %10, !dbg !8306
  call void @llvm.dbg.value(metadata i32 %1, metadata !8073, metadata !DIExpression()) #23, !dbg !8313
  call void @llvm.dbg.value(metadata i32 %6, metadata !8076, metadata !DIExpression()) #23, !dbg !8313
  call void @llvm.dbg.value(metadata i32 %6, metadata !8081, metadata !DIExpression()) #23, !dbg !8315
  %12 = shl i32 %2, %8, !dbg !8306
  %13 = or i32 %11, %12, !dbg !8306
  store volatile i32 %13, i32* %4, align 4, !dbg !8306
  ret void, !dbg !8317
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8318 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8320, metadata !DIExpression()), !dbg !8323
  call void @llvm.dbg.value(metadata i32 %1, metadata !8321, metadata !DIExpression()), !dbg !8323
  call void @llvm.dbg.value(metadata i32 %2, metadata !8322, metadata !DIExpression()), !dbg !8323
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !8324
  %5 = load volatile i32, i32* %4, align 4, !dbg !8324
  %6 = lshr i32 %1, 8, !dbg !8324
  call void @llvm.dbg.value(metadata i32 %6, metadata !8073, metadata !DIExpression()) #23, !dbg !8325
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #27, !dbg !8327, !srcloc !8080
  call void @llvm.dbg.value(metadata i32 %7, metadata !8076, metadata !DIExpression()) #23, !dbg !8325
  call void @llvm.dbg.value(metadata i32 %7, metadata !8081, metadata !DIExpression()) #23, !dbg !8328
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !8330, !range !6308
  %9 = shl nuw nsw i32 %8, 2, !dbg !8324
  %10 = shl i32 15, %9, !dbg !8324
  %11 = xor i32 %10, -1, !dbg !8324
  %12 = and i32 %5, %11, !dbg !8324
  call void @llvm.dbg.value(metadata i32 %6, metadata !8073, metadata !DIExpression()) #23, !dbg !8331
  call void @llvm.dbg.value(metadata i32 %7, metadata !8076, metadata !DIExpression()) #23, !dbg !8331
  call void @llvm.dbg.value(metadata i32 %7, metadata !8081, metadata !DIExpression()) #23, !dbg !8333
  %13 = shl i32 %2, %9, !dbg !8324
  %14 = or i32 %12, %13, !dbg !8324
  store volatile i32 %14, i32* %4, align 4, !dbg !8324
  ret void, !dbg !8335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8336 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8338, metadata !DIExpression()), !dbg !8341
  call void @llvm.dbg.value(metadata i32 %1, metadata !8339, metadata !DIExpression()), !dbg !8341
  call void @llvm.dbg.value(metadata i32 %2, metadata !8340, metadata !DIExpression()), !dbg !8341
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !8342
  %5 = load volatile i32, i32* %4, align 4, !dbg !8342
  call void @llvm.dbg.value(metadata i32 %1, metadata !8073, metadata !DIExpression()) #23, !dbg !8343
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #27, !dbg !8345, !srcloc !8080
  call void @llvm.dbg.value(metadata i32 %6, metadata !8076, metadata !DIExpression()) #23, !dbg !8343
  call void @llvm.dbg.value(metadata i32 %6, metadata !8081, metadata !DIExpression()) #23, !dbg !8346
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !8348, !range !6308
  %8 = shl nuw nsw i32 %7, 1, !dbg !8342
  %9 = shl i32 3, %8, !dbg !8342
  %10 = xor i32 %9, -1, !dbg !8342
  %11 = and i32 %5, %10, !dbg !8342
  call void @llvm.dbg.value(metadata i32 %1, metadata !8073, metadata !DIExpression()) #23, !dbg !8349
  call void @llvm.dbg.value(metadata i32 %6, metadata !8076, metadata !DIExpression()) #23, !dbg !8349
  call void @llvm.dbg.value(metadata i32 %6, metadata !8081, metadata !DIExpression()) #23, !dbg !8351
  %12 = shl i32 %2, %8, !dbg !8342
  %13 = or i32 %11, %12, !dbg !8342
  store volatile i32 %13, i32* %4, align 4, !dbg !8342
  ret void, !dbg !8353
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !8354 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8356, metadata !DIExpression()), !dbg !8359
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8360
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !8360
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !8360
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !8357, metadata !DIExpression()), !dbg !8359
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !8361
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !8362
  %6 = tail call fastcc zeroext i1 @device_is_ready.40() #24, !dbg !8363
  br i1 %6, label %7, label %11, !dbg !8365

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !8366
  call void @llvm.dbg.value(metadata i32 %8, metadata !8358, metadata !DIExpression()), !dbg !8359
  %9 = icmp slt i32 %8, 0, !dbg !8367
  %10 = select i1 %9, i32 %8, i32 0, !dbg !8369
  br label %11, !dbg !8369

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !8359
  ret i32 %12, !dbg !8370
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.40() unnamed_addr #1 !dbg !8371 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8375, metadata !DIExpression()), !dbg !8376
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8377, !srcloc !8379
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.41() #24, !dbg !8380
  ret i1 %1, !dbg !8381
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8382 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8386, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata i8 1, metadata !8387, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !8388, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata i32 0, metadata !8389, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8390, metadata !DIExpression()), !dbg !8391
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8392
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !8392
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !8392
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !8388, metadata !DIExpression()), !dbg !8391
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !8393
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !8396
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !8397
  call void @llvm.dbg.value(metadata i32 %7, metadata !8389, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata i32 %7, metadata !8389, metadata !DIExpression()), !dbg !8391
  ret i32 %7, !dbg !8398
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.41() unnamed_addr #1 !dbg !8399 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8401, metadata !DIExpression()), !dbg !8402
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !8403
  ret i1 %1, !dbg !8404
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8405 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8409, metadata !DIExpression()), !dbg !8417
  call void @llvm.dbg.value(metadata i32 %1, metadata !8410, metadata !DIExpression()), !dbg !8417
  call void @llvm.dbg.value(metadata i32 %2, metadata !8411, metadata !DIExpression()), !dbg !8417
  call void @llvm.dbg.value(metadata i32 %3, metadata !8412, metadata !DIExpression()), !dbg !8417
  call void @llvm.dbg.value(metadata i32 0, metadata !8413, metadata !DIExpression()), !dbg !8417
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !8418
  %5 = icmp eq i32 %3, 17, !dbg !8419
  br i1 %5, label %6, label %14, !dbg !8420

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !8421
  call void @llvm.dbg.value(metadata i32 %7, metadata !8414, metadata !DIExpression()), !dbg !8422
  %8 = icmp eq i32 %7, 0, !dbg !8423
  %9 = shl nuw i32 1, %1, !dbg !8425
  br i1 %8, label %12, label %10, !dbg !8426

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !8427
  br label %14, !dbg !8429

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !8430
  br label %14, !dbg !8433

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !8434
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #15 !dbg !8435 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8437, metadata !DIExpression()), !dbg !8441
  call void @llvm.dbg.value(metadata i8* %1, metadata !8438, metadata !DIExpression()), !dbg !8441
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8442
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8442
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8442
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8439, metadata !DIExpression()), !dbg !8441
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8443
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8443
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !8445
  %9 = icmp eq i32 %8, 0, !dbg !8445
  br i1 %9, label %12, label %10, !dbg !8446

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8447
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !8449
  br label %12, !dbg !8450

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8451
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !8453
  %15 = icmp eq i32 %14, 0, !dbg !8453
  br i1 %15, label %19, label %16, !dbg !8454

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8455
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !8456
  store i8 %18, i8* %1, align 1, !dbg !8457
  br label %19, !dbg !8458

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !8441
  ret i32 %20, !dbg !8459
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !8460 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8462, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata i8 %1, metadata !8463, metadata !DIExpression()), !dbg !8466
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8467
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8467
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8467
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8464, metadata !DIExpression()), !dbg !8466
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !8468

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8469
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !8472
  %10 = icmp eq i32 %9, 0, !dbg !8472
  br i1 %10, label %18, label %11, !dbg !8473

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8474, !srcloc !8481
  call void @llvm.dbg.value(metadata i32 undef, metadata !8477, metadata !DIExpression()) #23, !dbg !8482
  call void @llvm.dbg.value(metadata i32 undef, metadata !8478, metadata !DIExpression()) #23, !dbg !8482
  call void @llvm.dbg.value(metadata i32 undef, metadata !8465, metadata !DIExpression()), !dbg !8466
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8483
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !8485
  %15 = icmp eq i32 %14, 0, !dbg !8485
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !8474
  br i1 %15, label %17, label %19, !dbg !8486

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !8477, metadata !DIExpression()) #23, !dbg !8482
  call void @llvm.dbg.value(metadata i32 %16, metadata !8465, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.value(metadata i32 undef, metadata !8487, metadata !DIExpression()) #23, !dbg !8490
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !8492, !srcloc !8493
  br label %18, !dbg !8494

18:                                               ; preds = %17, %7
  br label %7, !dbg !8469, !llvm.loop !8495

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !8474
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8497
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !8498
  call void @llvm.dbg.value(metadata i32 %20, metadata !8487, metadata !DIExpression()) #23, !dbg !8499
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !8501, !srcloc !8493
  ret void, !dbg !8502
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #15 !dbg !8503 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8505, metadata !DIExpression()), !dbg !8508
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8509
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8509
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8509
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8506, metadata !DIExpression()), !dbg !8508
  call void @llvm.dbg.value(metadata i32 0, metadata !8507, metadata !DIExpression()), !dbg !8508
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8510
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8510
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !8512
  %8 = icmp ne i32 %7, 0, !dbg !8512
  %9 = zext i1 %8 to i32, !dbg !8513
  call void @llvm.dbg.value(metadata i32 %9, metadata !8507, metadata !DIExpression()), !dbg !8508
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8514
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !8516
  %12 = icmp eq i32 %11, 0, !dbg !8516
  %13 = or i32 %9, 2, !dbg !8517
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !8517
  call void @llvm.dbg.value(metadata i32 %14, metadata !8507, metadata !DIExpression()), !dbg !8508
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8518
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !8520
  %17 = icmp eq i32 %16, 0, !dbg !8520
  %18 = or i32 %14, 4, !dbg !8521
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !8521
  call void @llvm.dbg.value(metadata i32 %19, metadata !8507, metadata !DIExpression()), !dbg !8508
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8522
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !8524
  %22 = icmp eq i32 %21, 0, !dbg !8524
  %23 = or i32 %19, 8, !dbg !8525
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !8525
  call void @llvm.dbg.value(metadata i32 %24, metadata !8507, metadata !DIExpression()), !dbg !8508
  %25 = and i32 %24, 8, !dbg !8526
  %26 = icmp eq i32 %25, 0, !dbg !8526
  br i1 %26, label %29, label %27, !dbg !8528

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8529
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !8531
  br label %29, !dbg !8532

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !8533
  %31 = icmp eq i32 %30, 0, !dbg !8533
  br i1 %31, label %34, label %32, !dbg !8535

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8536
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !8538
  br label %34, !dbg !8539

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !8540
  %36 = icmp eq i32 %35, 0, !dbg !8540
  br i1 %36, label %39, label %37, !dbg !8542

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8543
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !8545
  br label %39, !dbg !8546

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !8547
  %41 = icmp eq i32 %40, 0, !dbg !8547
  br i1 %41, label %44, label %42, !dbg !8549

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8550
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !8552
  br label %44, !dbg !8553

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8554
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !8555
  ret i32 %24, !dbg !8556
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !8557 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8559, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8560, metadata !DIExpression()), !dbg !8568
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8569
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8569
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8569
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8561, metadata !DIExpression()), !dbg !8568
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8570
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !8570
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !8570
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !8562, metadata !DIExpression()), !dbg !8568
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8571
  %10 = load i8, i8* %9, align 4, !dbg !8571
  %11 = zext i8 %10 to i32, !dbg !8572
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !8573
  call void @llvm.dbg.value(metadata i32 %12, metadata !8564, metadata !DIExpression()), !dbg !8568
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8574
  %14 = load i8, i8* %13, align 1, !dbg !8574
  %15 = zext i8 %14 to i32, !dbg !8575
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !8576
  call void @llvm.dbg.value(metadata i32 %16, metadata !8565, metadata !DIExpression()), !dbg !8568
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8577
  %18 = load i8, i8* %17, align 2, !dbg !8577
  %19 = zext i8 %18 to i32, !dbg !8578
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !8579
  call void @llvm.dbg.value(metadata i32 %20, metadata !8566, metadata !DIExpression()), !dbg !8568
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8580
  %22 = load i8, i8* %21, align 1, !dbg !8580
  %23 = zext i8 %22 to i32, !dbg !8581
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !8582
  call void @llvm.dbg.value(metadata i32 %24, metadata !8567, metadata !DIExpression()), !dbg !8568
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !8583

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !8585
  br i1 %26, label %69, label %27, !dbg !8587

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !8588

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !8589
  br i1 %29, label %65, label %30, !dbg !8589

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !8591
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !8568
  br i1 %31, label %38, label %34, !dbg !8593

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !8594
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !8594

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !8597
  br i1 %37, label %38, label %69, !dbg !8598

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8599
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !8600
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !8601
  %41 = icmp eq i32 %12, %40, !dbg !8603
  br i1 %41, label %43, label %42, !dbg !8604

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !8605
  br label %43, !dbg !8607

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !8608
  %45 = icmp eq i32 %16, %44, !dbg !8610
  br i1 %45, label %47, label %46, !dbg !8611

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !8612
  br label %47, !dbg !8614

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !8615
  %49 = icmp eq i32 %20, %48, !dbg !8617
  br i1 %49, label %51, label %50, !dbg !8618

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !8619
  br label %51, !dbg !8621

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !8622
  %53 = icmp eq i32 %24, %52, !dbg !8624
  br i1 %53, label %55, label %54, !dbg !8625

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !8626
  br label %55, !dbg !8628

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8629
  %57 = load i32, i32* %56, align 4, !dbg !8629
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !8631
  %59 = load i32, i32* %58, align 4, !dbg !8631
  %60 = icmp eq i32 %57, %59, !dbg !8632
  br i1 %60, label %63, label %61, !dbg !8633

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !8634
  %62 = load i32, i32* %56, align 4, !dbg !8636
  store i32 %62, i32* %58, align 4, !dbg !8637
  br label %63, !dbg !8638

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !8639
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !8640
  br label %69, !dbg !8641

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !8589
  %67 = and i8 %66, 1, !dbg !8589
  %68 = icmp eq i8 %67, 0, !dbg !8589
  br i1 %68, label %30, label %69, !dbg !8589

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !8568
  ret i32 %70, !dbg !8642
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !8643 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8645, metadata !DIExpression()), !dbg !8648
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8646, metadata !DIExpression()), !dbg !8648
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8649
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !8649
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !8649
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !8647, metadata !DIExpression()), !dbg !8648
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !8650
  %7 = load i32, i32* %6, align 4, !dbg !8650
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8651
  store i32 %7, i32* %8, align 4, !dbg !8652
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !8653, !range !8654
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !8655
  %11 = trunc i32 %10 to i8, !dbg !8655
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8656
  store i8 %11, i8* %12, align 4, !dbg !8657
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !8658, !range !8659
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !8660
  %15 = trunc i32 %14 to i8, !dbg !8660
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8661
  store i8 %15, i8* %16, align 1, !dbg !8662
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !8663
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !8664, !range !8654
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !8665
  %20 = trunc i32 %19 to i8, !dbg !8665
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8666
  store i8 %20, i8* %21, align 2, !dbg !8667
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !8668, !range !8669
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !8670
  %24 = trunc i32 %23 to i8, !dbg !8670
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8671
  store i8 %24, i8* %25, align 1, !dbg !8672
  ret i32 0, !dbg !8673
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8674 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8678, metadata !DIExpression()), !dbg !8680
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8681
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8681
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8681
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8679, metadata !DIExpression()), !dbg !8680
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8682
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8682
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !8683
  ret i32 %7, !dbg !8684
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #12 !dbg !8685 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8689, metadata !DIExpression()), !dbg !8690
  %2 = icmp eq i32 %0, 1024, !dbg !8691
  %3 = select i1 %2, i32 2, i32 0, !dbg !8691
  %4 = icmp eq i32 %0, 1536, !dbg !8691
  %5 = select i1 %4, i32 1, i32 %3, !dbg !8691
  ret i32 %5, !dbg !8692
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8693 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8695, metadata !DIExpression()), !dbg !8697
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8698
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8698
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8698
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8696, metadata !DIExpression()), !dbg !8697
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8699
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8699
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !8700
  ret i32 %7, !dbg !8701
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !8702 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8706, metadata !DIExpression()), !dbg !8707
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !8708
  %3 = icmp ult i32 %2, 4, !dbg !8708
  br i1 %3, label %4, label %7, !dbg !8708

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !8708
  %6 = load i32, i32* %5, align 4, !dbg !8708
  br label %7, !dbg !8708

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !8709
  ret i32 %8, !dbg !8711
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8712 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8714, metadata !DIExpression()), !dbg !8716
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8717
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8717
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8717
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8715, metadata !DIExpression()), !dbg !8716
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8718
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8718
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !8719
  ret i32 %7, !dbg !8720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8721 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8725, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i32 %1, metadata !8726, metadata !DIExpression()), !dbg !8727
  %3 = icmp eq i32 %0, 4096, !dbg !8728
  %4 = icmp eq i32 %1, 0, !dbg !8728
  %5 = select i1 %4, i32 4, i32 3, !dbg !8728
  %6 = select i1 %4, i32 3, i32 2, !dbg !8728
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !8728
  ret i32 %7, !dbg !8729
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8730 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8732, metadata !DIExpression()), !dbg !8734
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8735
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8735
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8735
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8733, metadata !DIExpression()), !dbg !8734
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8736
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8736
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !8737
  ret i32 %7, !dbg !8738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8743, metadata !DIExpression()), !dbg !8744
  %2 = icmp eq i32 %0, 768, !dbg !8745
  %3 = zext i1 %2 to i32, !dbg !8744
  ret i32 %3, !dbg !8747
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8748 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8753, metadata !DIExpression()), !dbg !8754
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8755
  %3 = load volatile i32, i32* %2, align 4, !dbg !8755
  %4 = and i32 %3, 768, !dbg !8755
  ret i32 %4, !dbg !8756
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8757 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8759, metadata !DIExpression()), !dbg !8760
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8761
  %3 = load volatile i32, i32* %2, align 4, !dbg !8761
  %4 = and i32 %3, 4096, !dbg !8761
  ret i32 %4, !dbg !8762
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8763 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8765, metadata !DIExpression()), !dbg !8766
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8767
  %3 = load volatile i32, i32* %2, align 4, !dbg !8767
  %4 = and i32 %3, 12288, !dbg !8767
  ret i32 %4, !dbg !8768
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8769 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8771, metadata !DIExpression()), !dbg !8772
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8773
  %3 = load volatile i32, i32* %2, align 4, !dbg !8773
  %4 = and i32 %3, 1536, !dbg !8773
  ret i32 %4, !dbg !8774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #12 !dbg !8775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8779, metadata !DIExpression()), !dbg !8780
  %2 = icmp eq i32 %0, 2, !dbg !8781
  %3 = select i1 %2, i32 1024, i32 0, !dbg !8781
  %4 = icmp eq i32 %0, 1, !dbg !8781
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !8781
  ret i32 %5, !dbg !8782
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !8783 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8787, metadata !DIExpression()), !dbg !8788
  %2 = icmp ult i32 %0, 3, !dbg !8789
  br i1 %2, label %3, label %6, !dbg !8789

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !8789
  %5 = load i32, i32* %4, align 4, !dbg !8789
  br label %6, !dbg !8789

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !8790
  ret i32 %7, !dbg !8792
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8793 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8797, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.value(metadata i32 %1, metadata !8798, metadata !DIExpression()), !dbg !8799
  %3 = icmp eq i32 %0, 4, !dbg !8800
  %4 = icmp eq i32 %1, 0, !dbg !8800
  %5 = select i1 %4, i32 0, i32 4096, !dbg !8800
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !8800
  ret i32 %6, !dbg !8801
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8802 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8806, metadata !DIExpression()), !dbg !8807
  %2 = icmp eq i32 %0, 1, !dbg !8808
  %3 = select i1 %2, i32 768, i32 0, !dbg !8807
  ret i32 %3, !dbg !8810
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8811 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8815, metadata !DIExpression()), !dbg !8816
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8817
  %3 = load volatile i32, i32* %2, align 4, !dbg !8817
  %4 = and i32 %3, -8193, !dbg !8817
  store volatile i32 %4, i32* %2, align 4, !dbg !8817
  ret void, !dbg !8818
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8819 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8823, metadata !DIExpression()), !dbg !8826
  call void @llvm.dbg.value(metadata i32 %1, metadata !8824, metadata !DIExpression()), !dbg !8826
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8827
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8827
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8827
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8825, metadata !DIExpression()), !dbg !8826
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8828
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8828
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8829
  ret void, !dbg !8830
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8831 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8833, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata i32 %1, metadata !8834, metadata !DIExpression()), !dbg !8836
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8837
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8837
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8837
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8835, metadata !DIExpression()), !dbg !8836
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8838
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8838
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8839
  ret void, !dbg !8840
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8841 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8843, metadata !DIExpression()), !dbg !8846
  call void @llvm.dbg.value(metadata i32 %1, metadata !8844, metadata !DIExpression()), !dbg !8846
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8847
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8847
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8847
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8845, metadata !DIExpression()), !dbg !8846
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8848
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8848
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8849
  ret void, !dbg !8850
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8851 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8853, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i32 %1, metadata !8854, metadata !DIExpression()), !dbg !8856
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8857
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8857
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8857
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8855, metadata !DIExpression()), !dbg !8856
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8858
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8858
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8859
  ret void, !dbg !8860
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8861 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8863, metadata !DIExpression()), !dbg !8868
  call void @llvm.dbg.value(metadata i32 %1, metadata !8864, metadata !DIExpression()), !dbg !8868
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8869
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !8869
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !8869
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !8865, metadata !DIExpression()), !dbg !8868
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8870
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !8870
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !8870
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !8866, metadata !DIExpression()), !dbg !8868
  %10 = bitcast i32* %3 to i8*, !dbg !8871
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8871
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !8872
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !8872
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !8876
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8876
  %15 = load i8*, i8** %14, align 4, !dbg !8876
  call void @llvm.dbg.value(metadata i32* %3, metadata !8867, metadata !DIExpression(DW_OP_deref)), !dbg !8868
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !8877
  %17 = icmp slt i32 %16, 0, !dbg !8878
  br i1 %17, label %23, label %18, !dbg !8879

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !8880
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8880
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #24, !dbg !8881
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8882
  %22 = load i32, i32* %3, align 4, !dbg !8883
  call void @llvm.dbg.value(metadata i32 %22, metadata !8867, metadata !DIExpression()), !dbg !8868
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #24, !dbg !8884
  br label %23, !dbg !8885

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8885
  ret void, !dbg !8885
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8886 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8888, metadata !DIExpression()), !dbg !8889
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8890
  %3 = load volatile i32, i32* %2, align 4, !dbg !8890
  %4 = or i32 %3, 8192, !dbg !8890
  store volatile i32 %4, i32* %2, align 4, !dbg !8890
  ret void, !dbg !8891
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !8892 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8894, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.value(metadata i8* %1, metadata !8895, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.value(metadata i32* %2, metadata !8896, metadata !DIExpression()), !dbg !8898
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8899
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !8899
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !8899
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !8897, metadata !DIExpression()), !dbg !8898
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !8900
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !8900
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !8902
  br i1 %9, label %12, label %10, !dbg !8903

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !8904
  br label %12, !dbg !8905

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !8898
  ret i32 %13, !dbg !8906
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8907 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8911, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 0, metadata !8912, metadata !DIExpression()), !dbg !8913
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8914
  %3 = load volatile i32, i32* %2, align 4, !dbg !8914
  %4 = and i32 %3, -32769, !dbg !8914
  store volatile i32 %4, i32* %2, align 4, !dbg !8914
  ret void, !dbg !8915
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8916 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8920, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i32 %1, metadata !8921, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i32 0, metadata !8922, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i32 %2, metadata !8923, metadata !DIExpression()), !dbg !8924
  %4 = zext i32 %1 to i64, !dbg !8925
  %5 = mul nuw nsw i64 %4, 25, !dbg !8925
  %6 = zext i32 %2 to i64, !dbg !8925
  %7 = shl nuw nsw i64 %6, 2, !dbg !8925
  %8 = udiv i64 %5, %7, !dbg !8925
  %9 = trunc i64 %8 to i32, !dbg !8925
  %10 = udiv i32 %9, 100, !dbg !8925
  %11 = shl nuw nsw i32 %10, 4, !dbg !8925
  %12 = mul i32 %10, -100, !dbg !8925
  %13 = add i32 %12, %9, !dbg !8925
  %14 = shl i32 %13, 4, !dbg !8925
  %15 = add i32 %14, 50, !dbg !8925
  %16 = udiv i32 %15, 100, !dbg !8925
  %17 = and i32 %16, 240, !dbg !8925
  %18 = add nuw nsw i32 %17, %11, !dbg !8925
  %19 = and i32 %16, 15, !dbg !8925
  %20 = and i32 %18, 65520, !dbg !8928
  %21 = or i32 %20, %19, !dbg !8928
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !8929
  store volatile i32 %21, i32* %22, align 4, !dbg !8930
  ret void, !dbg !8931
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8932 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8934, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata i32 %1, metadata !8935, metadata !DIExpression()), !dbg !8936
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8937
  %4 = load volatile i32, i32* %3, align 4, !dbg !8937
  %5 = and i32 %4, -769, !dbg !8937
  %6 = or i32 %5, %1, !dbg !8937
  store volatile i32 %6, i32* %3, align 4, !dbg !8937
  ret void, !dbg !8938
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8939 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8941, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.value(metadata i32 %1, metadata !8942, metadata !DIExpression()), !dbg !8943
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8944
  %4 = load volatile i32, i32* %3, align 4, !dbg !8944
  %5 = and i32 %4, -4097, !dbg !8944
  %6 = or i32 %5, %1, !dbg !8944
  store volatile i32 %6, i32* %3, align 4, !dbg !8944
  ret void, !dbg !8945
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8946 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8948, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.value(metadata i32 %1, metadata !8949, metadata !DIExpression()), !dbg !8950
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8951
  %4 = load volatile i32, i32* %3, align 4, !dbg !8951
  %5 = and i32 %4, -12289, !dbg !8951
  %6 = or i32 %5, %1, !dbg !8951
  store volatile i32 %6, i32* %3, align 4, !dbg !8951
  ret void, !dbg !8952
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8953 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8955, metadata !DIExpression()), !dbg !8957
  call void @llvm.dbg.value(metadata i32 %1, metadata !8956, metadata !DIExpression()), !dbg !8957
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8958
  %4 = load volatile i32, i32* %3, align 4, !dbg !8958
  %5 = and i32 %4, -1537, !dbg !8958
  %6 = or i32 %5, %1, !dbg !8958
  store volatile i32 %6, i32* %3, align 4, !dbg !8958
  ret void, !dbg !8959
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8960 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8962, metadata !DIExpression()), !dbg !8963
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8964
  %3 = load volatile i32, i32* %2, align 4, !dbg !8964
  %4 = lshr i32 %3, 3, !dbg !8965
  %5 = and i32 %4, 1, !dbg !8965
  ret i32 %5, !dbg !8966
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8967 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8969, metadata !DIExpression()), !dbg !8970
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8971
  %3 = load volatile i32, i32* %2, align 4, !dbg !8971
  %4 = and i32 %3, 1, !dbg !8971
  ret i32 %4, !dbg !8972
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8973 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8975, metadata !DIExpression()), !dbg !8976
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8977
  %3 = load volatile i32, i32* %2, align 4, !dbg !8977
  %4 = lshr i32 %3, 1, !dbg !8978
  %5 = and i32 %4, 1, !dbg !8978
  ret i32 %5, !dbg !8979
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8980 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8982, metadata !DIExpression()), !dbg !8983
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8984
  %3 = load volatile i32, i32* %2, align 4, !dbg !8984
  %4 = lshr i32 %3, 8, !dbg !8985
  %5 = and i32 %4, 1, !dbg !8985
  ret i32 %5, !dbg !8986
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8987 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8989, metadata !DIExpression()), !dbg !8990
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8991
  store volatile i32 -257, i32* %2, align 4, !dbg !8991
  ret void, !dbg !8992
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8993 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8995, metadata !DIExpression()), !dbg !8997
  %3 = bitcast i32* %2 to i8*, !dbg !8998
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8998
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8996, metadata !DIExpression()), !dbg !8999
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9000
  %5 = load volatile i32, i32* %4, align 4, !dbg !9000
  store volatile i32 %5, i32* %2, align 4, !dbg !9001
  %6 = load volatile i32, i32* %2, align 4, !dbg !9002
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9003
  %8 = load volatile i32, i32* %7, align 4, !dbg !9003
  store volatile i32 %8, i32* %2, align 4, !dbg !9004
  %9 = load volatile i32, i32* %2, align 4, !dbg !9005
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9006
  ret void, !dbg !9006
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9007 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9009, metadata !DIExpression()), !dbg !9011
  %3 = bitcast i32* %2 to i8*, !dbg !9012
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9012
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9010, metadata !DIExpression()), !dbg !9013
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9014
  %5 = load volatile i32, i32* %4, align 4, !dbg !9014
  store volatile i32 %5, i32* %2, align 4, !dbg !9015
  %6 = load volatile i32, i32* %2, align 4, !dbg !9016
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9017
  %8 = load volatile i32, i32* %7, align 4, !dbg !9017
  store volatile i32 %8, i32* %2, align 4, !dbg !9018
  %9 = load volatile i32, i32* %2, align 4, !dbg !9019
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9020
  ret void, !dbg !9020
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9021 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9023, metadata !DIExpression()), !dbg !9025
  %3 = bitcast i32* %2 to i8*, !dbg !9026
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9026
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9024, metadata !DIExpression()), !dbg !9027
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9028
  %5 = load volatile i32, i32* %4, align 4, !dbg !9028
  store volatile i32 %5, i32* %2, align 4, !dbg !9029
  %6 = load volatile i32, i32* %2, align 4, !dbg !9030
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9031
  %8 = load volatile i32, i32* %7, align 4, !dbg !9031
  store volatile i32 %8, i32* %2, align 4, !dbg !9032
  %9 = load volatile i32, i32* %2, align 4, !dbg !9033
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9034
  ret void, !dbg !9034
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9035 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9037, metadata !DIExpression()), !dbg !9039
  %3 = bitcast i32* %2 to i8*, !dbg !9040
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9040
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9038, metadata !DIExpression()), !dbg !9041
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9042
  %5 = load volatile i32, i32* %4, align 4, !dbg !9042
  store volatile i32 %5, i32* %2, align 4, !dbg !9043
  %6 = load volatile i32, i32* %2, align 4, !dbg !9044
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9045
  %8 = load volatile i32, i32* %7, align 4, !dbg !9045
  store volatile i32 %8, i32* %2, align 4, !dbg !9046
  %9 = load volatile i32, i32* %2, align 4, !dbg !9047
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9048
  ret void, !dbg !9048
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9049 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9051, metadata !DIExpression()), !dbg !9052
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9053
  %3 = load volatile i32, i32* %2, align 4, !dbg !9053
  %4 = lshr i32 %3, 7, !dbg !9054
  %5 = and i32 %4, 1, !dbg !9054
  ret i32 %5, !dbg !9055
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #13 !dbg !9056 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9060, metadata !DIExpression()), !dbg !9062
  call void @llvm.dbg.value(metadata i8 %1, metadata !9061, metadata !DIExpression()), !dbg !9062
  %3 = zext i8 %1 to i32, !dbg !9063
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9064
  store volatile i32 %3, i32* %4, align 4, !dbg !9065
  ret void, !dbg !9066
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9067 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9069, metadata !DIExpression()), !dbg !9070
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9071
  %3 = load volatile i32, i32* %2, align 4, !dbg !9071
  %4 = lshr i32 %3, 5, !dbg !9072
  %5 = and i32 %4, 1, !dbg !9072
  ret i32 %5, !dbg !9073
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9074 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9078, metadata !DIExpression()), !dbg !9079
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9080
  %3 = load volatile i32, i32* %2, align 4, !dbg !9080
  %4 = trunc i32 %3 to i8, !dbg !9081
  ret i8 %4, !dbg !9082
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !9083 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9085, metadata !DIExpression()), !dbg !9091
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9092
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9092
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9092
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9086, metadata !DIExpression()), !dbg !9091
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9093
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !9093
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !9093
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !9087, metadata !DIExpression()), !dbg !9091
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !9094
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !9095
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !9095
  %10 = tail call fastcc zeroext i1 @device_is_ready.46(%struct.device* noundef %9) #24, !dbg !9097
  br i1 %10, label %11, label %49, !dbg !9098

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !9099
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !9100
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9100
  %15 = load i8*, i8** %14, align 4, !dbg !9100
  %16 = tail call fastcc i32 @clock_control_on.47(%struct.device* noundef %12, i8* noundef %15) #24, !dbg !9101
  call void @llvm.dbg.value(metadata i32 %16, metadata !9090, metadata !DIExpression()), !dbg !9091
  %17 = icmp eq i32 %16, 0, !dbg !9102
  br i1 %17, label %18, label %49, !dbg !9104

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !9105
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !9105
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #24, !dbg !9106
  call void @llvm.dbg.value(metadata i32 %21, metadata !9090, metadata !DIExpression()), !dbg !9091
  %22 = icmp slt i32 %21, 0, !dbg !9107
  br i1 %22, label %49, label %23, !dbg !9109

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9110
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9110
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #24, !dbg !9111
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9112
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #24, !dbg !9113
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !9114
  %28 = load i32, i32* %27, align 4, !dbg !9114
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !9116

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !9088, metadata !DIExpression()), !dbg !9091
  call void @llvm.dbg.value(metadata i32 4096, metadata !9089, metadata !DIExpression()), !dbg !9091
  br label %31, !dbg !9117

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !9088, metadata !DIExpression()), !dbg !9091
  call void @llvm.dbg.value(metadata i32 0, metadata !9089, metadata !DIExpression()), !dbg !9091
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !9120
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !9120
  call void @llvm.dbg.value(metadata i32 %33, metadata !9089, metadata !DIExpression()), !dbg !9091
  call void @llvm.dbg.value(metadata i32 %32, metadata !9088, metadata !DIExpression()), !dbg !9091
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9121
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #24, !dbg !9122
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !9123
  %36 = load i8, i8* %35, align 4, !dbg !9123, !range !5728
  %37 = icmp eq i8 %36, 0, !dbg !9123
  br i1 %37, label %39, label %38, !dbg !9125

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !9126
  br label %39, !dbg !9128

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !9129
  %41 = load i32, i32* %40, align 4, !dbg !9129
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #24, !dbg !9130
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !9131
  %43 = load i8, i8* %42, align 4, !dbg !9131, !range !5728
  %44 = icmp eq i8 %43, 0, !dbg !9131
  br i1 %44, label %47, label %45, !dbg !9133

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9134
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #24, !dbg !9136
  br label %47, !dbg !9137

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9138
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #24, !dbg !9139
  br label %49, !dbg !9140

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !9091
  ret i32 %50, !dbg !9141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9142 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9146, metadata !DIExpression()), !dbg !9150
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9151
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !9151
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !9151
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !9147, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9148, metadata !DIExpression()), !dbg !9150
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !9152
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !9153
  ret void, !dbg !9154
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.46(%struct.device* noundef %0) unnamed_addr #1 !dbg !9155 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9159, metadata !DIExpression()), !dbg !9160
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9161, !srcloc !9163
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.48(%struct.device* noundef %0) #24, !dbg !9164
  ret i1 %2, !dbg !9165
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.47(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !9166 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9168, metadata !DIExpression()), !dbg !9171
  call void @llvm.dbg.value(metadata i8* %1, metadata !9169, metadata !DIExpression()), !dbg !9171
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9172
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !9172
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !9172
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !9170, metadata !DIExpression()), !dbg !9171
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !9173
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !9173
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !9174
  ret i32 %8, !dbg !9175
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !9176 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9180, metadata !DIExpression()), !dbg !9184
  call void @llvm.dbg.value(metadata i8 0, metadata !9181, metadata !DIExpression()), !dbg !9184
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !9185
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !9185
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9183, metadata !DIExpression(DW_OP_deref)), !dbg !9184
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !9186
  call void @llvm.dbg.value(metadata i32 %4, metadata !9182, metadata !DIExpression()), !dbg !9184
  %5 = icmp slt i32 %4, 0, !dbg !9187
  br i1 %5, label %9, label %6, !dbg !9189

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !9190
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !9183, metadata !DIExpression()), !dbg !9184
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !9191
  br label %9, !dbg !9192

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !9184
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !9193
  ret i32 %10, !dbg !9193
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9194 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9196, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 12, metadata !9197, metadata !DIExpression()), !dbg !9200
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9201

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9202, metadata !DIExpression()) #23, !dbg !9208
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !9211, !srcloc !9212
  call void @llvm.dbg.value(metadata i32 %4, metadata !9207, metadata !DIExpression()) #23, !dbg !9208
  %5 = or i32 %4, 12, !dbg !9213
  call void @llvm.dbg.value(metadata i32 %5, metadata !9198, metadata !DIExpression()), !dbg !9214
  call void @llvm.dbg.value(metadata i32 %5, metadata !9215, metadata !DIExpression()) #23, !dbg !9222
  call void @llvm.dbg.value(metadata i32* %2, metadata !9220, metadata !DIExpression()) #23, !dbg !9222
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !9224, !srcloc !9225
  call void @llvm.dbg.value(metadata i32 %6, metadata !9221, metadata !DIExpression()) #23, !dbg !9222
  %7 = icmp eq i32 %6, 0, !dbg !9201
  br i1 %7, label %8, label %3, !dbg !9213, !llvm.loop !9226

8:                                                ; preds = %3
  ret void, !dbg !9227
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !9228 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9230, metadata !DIExpression()), !dbg !9234
  call void @llvm.dbg.value(metadata i32 %1, metadata !9231, metadata !DIExpression()), !dbg !9234
  call void @llvm.dbg.value(metadata i32 %2, metadata !9232, metadata !DIExpression()), !dbg !9234
  call void @llvm.dbg.value(metadata i32 0, metadata !9233, metadata !DIExpression()), !dbg !9234
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9235
  %5 = load volatile i32, i32* %4, align 4, !dbg !9235
  %6 = and i32 %5, -5633, !dbg !9235
  %7 = or i32 %2, %1, !dbg !9235
  %8 = or i32 %7, %6, !dbg !9235
  store volatile i32 %8, i32* %4, align 4, !dbg !9235
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9236
  %10 = load volatile i32, i32* %9, align 4, !dbg !9236
  %11 = and i32 %10, -12289, !dbg !9236
  store volatile i32 %11, i32* %9, align 4, !dbg !9236
  ret void, !dbg !9237
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !9238 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9240, metadata !DIExpression()), !dbg !9241
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9242
  %3 = load volatile i32, i32* %2, align 4, !dbg !9242
  %4 = or i32 %3, 8, !dbg !9242
  store volatile i32 %4, i32* %2, align 4, !dbg !9242
  ret void, !dbg !9243
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9244 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !9248, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !9249, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.value(metadata i32 0, metadata !9250, metadata !DIExpression()), !dbg !9251
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !9252
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !9252
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !9253
  %5 = load i8, i8* %4, align 4, !dbg !9253
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !9254
  ret i32 %6, !dbg !9255
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.48(%struct.device* noundef %0) unnamed_addr #1 !dbg !9256 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9258, metadata !DIExpression()), !dbg !9259
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !9260
  ret i1 %2, !dbg !9261
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #13 !dbg !9262 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9264, metadata !DIExpression()), !dbg !9265
  tail call fastcc void @__NVIC_SetPriority.50() #24, !dbg !9266
  store i32 8399, i32* @last_load, align 4, !dbg !9267
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9268
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9269
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9270
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9271
  %3 = or i32 %2, 7, !dbg !9271
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9271
  ret i32 0, !dbg !9272
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.50() unnamed_addr #13 !dbg !9273 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !9275, metadata !DIExpression()), !dbg !9277
  call void @llvm.dbg.value(metadata i32 1, metadata !9276, metadata !DIExpression()), !dbg !9277
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !9278
  ret void, !dbg !9281
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !9282 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9284, metadata !DIExpression()), !dbg !9286
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !9287
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9288
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9289
  %5 = add i32 %4, %3, !dbg !9289
  store i32 %5, i32* @cycle_count, align 4, !dbg !9289
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9290
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !9291
  %7 = sub i32 %5, %6, !dbg !9294
  %8 = udiv i32 %7, 8400, !dbg !9295
  call void @llvm.dbg.value(metadata i32 %8, metadata !9285, metadata !DIExpression()), !dbg !9286
  %9 = mul nuw i32 %8, 8400, !dbg !9296
  %10 = add i32 %9, %6, !dbg !9297
  store i32 %10, i32* @announced_cycles, align 4, !dbg !9297
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !9298
  tail call void @z_arm_int_exit() #25, !dbg !9299
  ret void, !dbg !9300
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #13 !dbg !9301 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9306
  call void @llvm.dbg.value(metadata i32 %1, metadata !9303, metadata !DIExpression()), !dbg !9307
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9308
  call void @llvm.dbg.value(metadata i32 %2, metadata !9304, metadata !DIExpression()), !dbg !9307
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9309
  call void @llvm.dbg.value(metadata i32 %3, metadata !9305, metadata !DIExpression()), !dbg !9307
  %4 = and i32 %2, 65536, !dbg !9310
  %5 = icmp ne i32 %4, 0, !dbg !9310
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !9312
  %8 = load i32, i32* @last_load, align 4, !dbg !9307
  br i1 %7, label %9, label %13, !dbg !9312

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9313
  %11 = add i32 %10, %8, !dbg !9313
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !9313
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9315
  br label %13, !dbg !9316

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !9317
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9318
  %16 = add i32 %14, %15, !dbg !9319
  ret i32 %16, !dbg !9320
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !9321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9325, metadata !DIExpression()), !dbg !9338
  call void @llvm.dbg.value(metadata i1 %1, metadata !9326, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9338
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !9339
  br i1 %4, label %5, label %8, !dbg !9339

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9341
  %7 = and i32 %6, -2, !dbg !9341
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9341
  store i32 -16777216, i32* @last_load, align 4, !dbg !9343
  br label %54, !dbg !9344

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !9345
  call void @llvm.dbg.value(metadata i32 %9, metadata !9330, metadata !DIExpression()), !dbg !9338
  br i1 %3, label %18, label %10, !dbg !9346

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !9346
  call void @llvm.dbg.value(metadata i32 undef, metadata !9325, metadata !DIExpression()), !dbg !9338
  %12 = icmp slt i32 %11, 1, !dbg !9347
  br i1 %12, label %18, label %13, !dbg !9347

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !9347
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !9347
  %16 = mul nuw nsw i32 %15, 8400, !dbg !9347
  %17 = add nuw nsw i32 %16, 8399, !dbg !9347
  br label %18, !dbg !9347

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !9325, metadata !DIExpression()), !dbg !9338
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9348, metadata !DIExpression()) #23, !dbg !9355
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9357, !srcloc !9363
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !9357
  call void @llvm.dbg.value(metadata i32 %21, metadata !9360, metadata !DIExpression()) #23, !dbg !9364
  call void @llvm.dbg.value(metadata i32 undef, metadata !9361, metadata !DIExpression()) #23, !dbg !9364
  call void @llvm.dbg.value(metadata i32 %21, metadata !9354, metadata !DIExpression()) #23, !dbg !9355
  call void @llvm.dbg.value(metadata i32 %21, metadata !9331, metadata !DIExpression()), !dbg !9338
  %22 = tail call fastcc i32 @elapsed() #24, !dbg !9365
  call void @llvm.dbg.value(metadata i32 %22, metadata !9336, metadata !DIExpression()), !dbg !9338
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9366
  call void @llvm.dbg.value(metadata i32 %23, metadata !9328, metadata !DIExpression()), !dbg !9338
  %24 = load i32, i32* @cycle_count, align 4, !dbg !9367
  %25 = add i32 %24, %22, !dbg !9367
  store i32 %25, i32* @cycle_count, align 4, !dbg !9367
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9368
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !9369
  %27 = sub i32 %25, %26, !dbg !9370
  call void @llvm.dbg.value(metadata i32 %27, metadata !9337, metadata !DIExpression()), !dbg !9338
  %28 = icmp slt i32 %27, 0, !dbg !9371
  br i1 %28, label %38, label %29, !dbg !9373

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !9327, metadata !DIExpression()), !dbg !9338
  call void @llvm.dbg.value(metadata i32 undef, metadata !9327, metadata !DIExpression()), !dbg !9338
  %30 = add nuw i32 %19, %27, !dbg !9374
  %31 = urem i32 %30, 8400, !dbg !9376
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !9327, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9338
  %32 = sub nuw nsw i32 %19, %31, !dbg !9377
  call void @llvm.dbg.value(metadata i32 %32, metadata !9327, metadata !DIExpression()), !dbg !9338
  %33 = icmp ugt i32 %32, 1024, !dbg !9378
  br i1 %33, label %34, label %36, !dbg !9378

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !9327, metadata !DIExpression()), !dbg !9338
  %35 = icmp ugt i32 %32, 16766400, !dbg !9379
  br i1 %35, label %38, label %36, !dbg !9381

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !9382
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9383
  call void @llvm.dbg.value(metadata i32 %40, metadata !9329, metadata !DIExpression()), !dbg !9338
  %41 = add nsw i32 %39, -1, !dbg !9384
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9385
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9386
  %42 = icmp ult i32 %23, %40, !dbg !9387
  br i1 %42, label %43, label %48, !dbg !9389

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !9390
  %45 = add i32 %23, %9, !dbg !9392
  %46 = sub i32 %45, %40, !dbg !9393
  %47 = add i32 %46, %44, !dbg !9390
  br label %52, !dbg !9394

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !9395
  %50 = load i32, i32* @cycle_count, align 4, !dbg !9397
  %51 = add i32 %49, %50, !dbg !9397
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !9398
  store i32 %53, i32* @cycle_count, align 4, !dbg !9398
  call void @llvm.dbg.value(metadata i32 %21, metadata !9399, metadata !DIExpression()) #23, !dbg !9405
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9404, metadata !DIExpression()) #23, !dbg !9405
  call void @llvm.dbg.value(metadata i32 %21, metadata !9407, metadata !DIExpression()) #23, !dbg !9410
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !9412, !srcloc !9413
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !9414
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !9415 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9348, metadata !DIExpression()) #23, !dbg !9419
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9421, !srcloc !9363
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9421
  call void @llvm.dbg.value(metadata i32 %2, metadata !9360, metadata !DIExpression()) #23, !dbg !9423
  call void @llvm.dbg.value(metadata i32 undef, metadata !9361, metadata !DIExpression()) #23, !dbg !9423
  call void @llvm.dbg.value(metadata i32 %2, metadata !9354, metadata !DIExpression()) #23, !dbg !9419
  call void @llvm.dbg.value(metadata i32 %2, metadata !9417, metadata !DIExpression()), !dbg !9424
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !9425
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9426
  %5 = add i32 %4, %3, !dbg !9427
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !9428
  %7 = sub i32 %5, %6, !dbg !9429
  call void @llvm.dbg.value(metadata i32 %7, metadata !9418, metadata !DIExpression()), !dbg !9424
  call void @llvm.dbg.value(metadata i32 %2, metadata !9399, metadata !DIExpression()) #23, !dbg !9430
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9404, metadata !DIExpression()) #23, !dbg !9430
  call void @llvm.dbg.value(metadata i32 %2, metadata !9407, metadata !DIExpression()) #23, !dbg !9432
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !9434, !srcloc !9413
  %8 = udiv i32 %7, 8400, !dbg !9435
  ret i32 %8, !dbg !9436
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !9437 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9348, metadata !DIExpression()) #23, !dbg !9441
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9443, !srcloc !9363
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9443
  call void @llvm.dbg.value(metadata i32 %2, metadata !9360, metadata !DIExpression()) #23, !dbg !9445
  call void @llvm.dbg.value(metadata i32 undef, metadata !9361, metadata !DIExpression()) #23, !dbg !9445
  call void @llvm.dbg.value(metadata i32 %2, metadata !9354, metadata !DIExpression()) #23, !dbg !9441
  call void @llvm.dbg.value(metadata i32 %2, metadata !9439, metadata !DIExpression()), !dbg !9446
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !9447
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9448
  %5 = add i32 %4, %3, !dbg !9449
  call void @llvm.dbg.value(metadata i32 %5, metadata !9440, metadata !DIExpression()), !dbg !9446
  call void @llvm.dbg.value(metadata i32 %2, metadata !9399, metadata !DIExpression()) #23, !dbg !9450
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9404, metadata !DIExpression()) #23, !dbg !9450
  call void @llvm.dbg.value(metadata i32 %2, metadata !9407, metadata !DIExpression()) #23, !dbg !9452
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !9454, !srcloc !9413
  ret i32 %5, !dbg !9455
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #13 !dbg !9456 {
  %1 = load i32, i32* @last_load, align 4, !dbg !9457
  %2 = icmp eq i32 %1, -16777216, !dbg !9459
  br i1 %2, label %3, label %6, !dbg !9460

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9461
  %5 = or i32 %4, 1, !dbg !9461
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9461
  br label %6, !dbg !9463

6:                                                ; preds = %3, %0
  ret void, !dbg !9464
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #13 !dbg !9465 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9466
  %2 = and i32 %1, -2, !dbg !9466
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9466
  ret void, !dbg !9467
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #11 !dbg !9468 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9494, metadata !DIExpression()), !dbg !9497
  call void @llvm.dbg.value(metadata i8 %1, metadata !9495, metadata !DIExpression()), !dbg !9497
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9496, metadata !DIExpression()), !dbg !9497
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !9498
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9498
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !9497
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9499
  %8 = load i8, i8* %6, align 4, !dbg !9500
  %9 = zext i8 %8 to i32, !dbg !9501
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !9501
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !9502
  br i1 %11, label %18, label %24, !dbg !9503

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !9497
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9499
  %14 = load i8, i8* %6, align 4, !dbg !9500
  %15 = zext i8 %14 to i32, !dbg !9501
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !9501
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !9502
  br i1 %17, label %18, label %24, !dbg !9503, !llvm.loop !9504

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !9506
  %21 = load i8, i8* %20, align 1, !dbg !9506
  %22 = icmp eq i8 %21, %1, !dbg !9509
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !9510
  br i1 %22, label %24, label %12, !dbg !9511

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !9497
  ret i32 %25, !dbg !9512
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9513 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !9524, metadata !DIExpression()), !dbg !9540
  call void @llvm.dbg.value(metadata i8 %1, metadata !9525, metadata !DIExpression()), !dbg !9540
  call void @llvm.dbg.value(metadata i32 %2, metadata !9526, metadata !DIExpression()), !dbg !9540
  call void @llvm.dbg.value(metadata i32 0, metadata !9529, metadata !DIExpression()), !dbg !9540
  call void @llvm.dbg.value(metadata i32 0, metadata !9530, metadata !DIExpression()), !dbg !9540
  call void @llvm.dbg.value(metadata i8 0, metadata !9531, metadata !DIExpression()), !dbg !9541
  %4 = icmp eq i8 %1, 0, !dbg !9542
  br i1 %4, label %35, label %5, !dbg !9543

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !9542
  br label %9, !dbg !9543

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !9531, metadata !DIExpression()), !dbg !9541
  call void @llvm.dbg.value(metadata i32 %29, metadata !9529, metadata !DIExpression()), !dbg !9540
  %8 = icmp eq i32 %34, %6, !dbg !9542
  br i1 %8, label %35, label %9, !dbg !9543, !llvm.loop !9544

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !9531, metadata !DIExpression()), !dbg !9541
  call void @llvm.dbg.value(metadata i32 %11, metadata !9529, metadata !DIExpression()), !dbg !9540
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !9546
  %13 = load i32, i32* %12, align 4, !dbg !9546
  call void @llvm.dbg.value(metadata i32 %13, metadata !9528, metadata !DIExpression()), !dbg !9540
  %14 = and i32 %13, 31, !dbg !9547
  %15 = icmp ult i32 %14, 16, !dbg !9548
  br i1 %15, label %16, label %20, !dbg !9549

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !9550
  %18 = load i32, i32* %17, align 4, !dbg !9550
  %19 = or i32 %18, 32, !dbg !9552
  call void @llvm.dbg.value(metadata i32 %19, metadata !9529, metadata !DIExpression()), !dbg !9540
  br label %28, !dbg !9553

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !9554

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !9555
  %23 = load i32, i32* %22, align 4, !dbg !9555
  call void @llvm.dbg.value(metadata i32 %23, metadata !9533, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !9556
  %24 = lshr i32 %23, 7, !dbg !9557
  %25 = and i32 %24, 16, !dbg !9557
  %26 = or i32 %25, %23, !dbg !9557
  call void @llvm.dbg.value(metadata i32 %26, metadata !9529, metadata !DIExpression()), !dbg !9540
  br label %28, !dbg !9558

27:                                               ; preds = %20
  br label %28, !dbg !9559

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !9540
  call void @llvm.dbg.value(metadata i32 %29, metadata !9529, metadata !DIExpression()), !dbg !9540
  %30 = lshr i32 %13, 5, !dbg !9559
  %31 = and i32 %30, 255, !dbg !9559
  call void @llvm.dbg.value(metadata i32 %31, metadata !9527, metadata !DIExpression()), !dbg !9540
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !9560
  call void @llvm.dbg.value(metadata i32 %32, metadata !9530, metadata !DIExpression()), !dbg !9540
  %33 = icmp slt i32 %32, 0, !dbg !9561
  %34 = add nuw nsw i32 %10, 1, !dbg !9563
  call void @llvm.dbg.value(metadata i32 %34, metadata !9531, metadata !DIExpression()), !dbg !9541
  br i1 %33, label %35, label %7, !dbg !9564

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !9565
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9566 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9570, metadata !DIExpression()), !dbg !9574
  call void @llvm.dbg.value(metadata i32 %1, metadata !9571, metadata !DIExpression()), !dbg !9574
  call void @llvm.dbg.value(metadata i32 %2, metadata !9572, metadata !DIExpression()), !dbg !9574
  %4 = icmp ugt i32 %0, 175, !dbg !9575
  br i1 %4, label %16, label %5, !dbg !9577

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !9578
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !9579
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !9579
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !9573, metadata !DIExpression()), !dbg !9574
  %9 = add nsw i32 %6, -8, !dbg !9580
  %10 = icmp ult i32 %9, 3, !dbg !9580
  br i1 %10, label %16, label %11, !dbg !9582

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.55(%struct.device* noundef %8) #24, !dbg !9583
  br i1 %12, label %13, label %16, !dbg !9584

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !9585
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !9586
  br label %16, !dbg !9587

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !9574
  ret i32 %17, !dbg !9588
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.55(%struct.device* noundef %0) unnamed_addr #1 !dbg !9589 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9593, metadata !DIExpression()), !dbg !9594
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9595, !srcloc !9597
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.56(%struct.device* noundef %0) #24, !dbg !9598
  ret i1 %2, !dbg !9599
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.56(%struct.device* noundef %0) unnamed_addr #1 !dbg !9600 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9602, metadata !DIExpression()), !dbg !9603
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !9604
  ret i1 %2, !dbg !9605
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #12 !dbg !9606 {
  ret void, !dbg !9607
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #14 !dbg !9608 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9610, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i32 0, metadata !9611, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i32 2, metadata !9612, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i32 0, metadata !9613, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i32 2, metadata !9614, metadata !DIExpression()), !dbg !9615
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9616
  %2 = and i32 %1, 12, !dbg !9617
  call void @llvm.dbg.value(metadata i32 %2, metadata !9610, metadata !DIExpression()), !dbg !9615
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !9618

3:                                                ; preds = %0
  br label %21, !dbg !9619

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9621
  call void @llvm.dbg.value(metadata i32 %5, metadata !9613, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !9615
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9622
  %7 = and i32 %6, 63, !dbg !9623
  call void @llvm.dbg.value(metadata i32 %7, metadata !9614, metadata !DIExpression()), !dbg !9615
  %8 = and i32 %5, 4194304, !dbg !9624
  %9 = icmp eq i32 %8, 0, !dbg !9624
  %10 = select i1 %9, i32 16000000, i32 8000000
  %11 = udiv i32 %10, %7, !dbg !9626
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9626
  %13 = lshr i32 %12, 6, !dbg !9626
  %14 = and i32 %13, 511, !dbg !9626
  %15 = mul i32 %14, %11, !dbg !9626
  call void @llvm.dbg.value(metadata i32 %15, metadata !9611, metadata !DIExpression()), !dbg !9615
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9627
  %17 = lshr i32 %16, 15, !dbg !9628
  %18 = and i32 %17, 6, !dbg !9628
  %19 = add nuw nsw i32 %18, 2, !dbg !9628
  call void @llvm.dbg.value(metadata i32 %19, metadata !9612, metadata !DIExpression()), !dbg !9615
  %20 = udiv i32 %15, %19, !dbg !9629
  br label %21, !dbg !9630

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 8000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !9631
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9632
  %24 = lshr i32 %23, 4, !dbg !9633
  %25 = and i32 %24, 15, !dbg !9633
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !9634
  %27 = load i8, i8* %26, align 1, !dbg !9634
  %28 = zext i8 %27 to i32, !dbg !9634
  call void @llvm.dbg.value(metadata i32 %28, metadata !9610, metadata !DIExpression()), !dbg !9615
  %29 = lshr i32 %22, %28, !dbg !9635
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !9635
  ret void, !dbg !9636
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !9637 {
  ret i32 0, !dbg !9642
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !9643 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !9669, metadata !DIExpression()), !dbg !9680
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !9681
  br i1 %3, label %311, label %4, !dbg !9683

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !9684
  %6 = load i32, i32* %5, align 4, !dbg !9684
  %7 = and i32 %6, 1, !dbg !9686
  %8 = icmp eq i32 %7, 0, !dbg !9687
  br i1 %8, label %66, label %9, !dbg !9688

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9689
  %11 = and i32 %10, 12, !dbg !9689
  %12 = icmp eq i32 %11, 4, !dbg !9692
  br i1 %12, label %21, label %13, !dbg !9693

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9694
  %15 = and i32 %14, 12, !dbg !9694
  %16 = icmp eq i32 %15, 8, !dbg !9695
  br i1 %16, label %17, label %29, !dbg !9696

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9697
  %19 = and i32 %18, 4194304, !dbg !9698
  %20 = icmp eq i32 %19, 0, !dbg !9699
  br i1 %20, label %29, label %21, !dbg !9700

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9701
  %23 = and i32 %22, 131072, !dbg !9701
  %24 = icmp eq i32 %23, 0, !dbg !9701
  br i1 %24, label %66, label %25, !dbg !9704

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9705
  %27 = load i32, i32* %26, align 4, !dbg !9705
  %28 = icmp eq i32 %27, 0, !dbg !9706
  br i1 %28, label %311, label %66, !dbg !9707

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9708
  %31 = load i32, i32* %30, align 4, !dbg !9708
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !9712

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9713
  %34 = or i32 %33, 65536, !dbg !9713
  br label %45, !dbg !9713

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9715
  %37 = or i32 %36, 262144, !dbg !9715
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9715
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9715
  %39 = or i32 %38, 65536, !dbg !9715
  br label %45, !dbg !9715

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9718
  %42 = and i32 %41, -65537, !dbg !9718
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9718
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9718
  %44 = and i32 %43, -262145, !dbg !9718
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9720
  %47 = load i32, i32* %30, align 4, !dbg !9721
  %48 = icmp eq i32 %47, 0, !dbg !9723
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !9724
  call void @llvm.dbg.value(metadata i32 %49, metadata !9670, metadata !DIExpression()), !dbg !9680
  call void @llvm.dbg.value(metadata i32 %49, metadata !9670, metadata !DIExpression()), !dbg !9680
  br i1 %48, label %58, label %50, !dbg !9725

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9726
  %52 = and i32 %51, 131072, !dbg !9728
  %53 = icmp eq i32 %52, 0, !dbg !9728
  br i1 %53, label %54, label %66, !dbg !9729

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !9730
  %56 = sub i32 %55, %49, !dbg !9733
  %57 = icmp ugt i32 %56, 100, !dbg !9734
  br i1 %57, label %311, label %50, !dbg !9735, !llvm.loop !9736

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9738
  %60 = and i32 %59, 131072, !dbg !9738
  %61 = icmp eq i32 %60, 0, !dbg !9738
  br i1 %61, label %66, label %62, !dbg !9740

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !9741
  %64 = sub i32 %63, %49, !dbg !9744
  %65 = icmp ugt i32 %64, 100, !dbg !9745
  br i1 %65, label %311, label %58, !dbg !9746, !llvm.loop !9747

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !9749
  %68 = and i32 %67, 2, !dbg !9751
  %69 = icmp eq i32 %68, 0, !dbg !9752
  br i1 %69, label %121, label %70, !dbg !9753

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9754
  %72 = and i32 %71, 12, !dbg !9754
  %73 = icmp eq i32 %72, 0, !dbg !9757
  br i1 %73, label %82, label %74, !dbg !9758

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9759
  %76 = and i32 %75, 12, !dbg !9759
  %77 = icmp eq i32 %76, 8, !dbg !9760
  br i1 %77, label %78, label %90, !dbg !9761

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9762
  %80 = and i32 %79, 4194304, !dbg !9763
  %81 = icmp eq i32 %80, 0, !dbg !9764
  br i1 %81, label %82, label %90, !dbg !9765

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9766
  %84 = and i32 %83, 2, !dbg !9766
  %85 = icmp eq i32 %84, 0, !dbg !9766
  br i1 %85, label %114, label %86, !dbg !9769

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9770
  %88 = load i32, i32* %87, align 4, !dbg !9770
  %89 = icmp eq i32 %88, 1, !dbg !9771
  br i1 %89, label %114, label %311, !dbg !9772

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9773
  %92 = load i32, i32* %91, align 4, !dbg !9773
  %93 = icmp eq i32 %92, 0, !dbg !9776
  br i1 %93, label %104, label %94, !dbg !9777

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !9778
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !9780
  call void @llvm.dbg.value(metadata i32 %95, metadata !9670, metadata !DIExpression()), !dbg !9680
  br label %96, !dbg !9781

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9782
  %98 = and i32 %97, 2, !dbg !9783
  %99 = icmp eq i32 %98, 0, !dbg !9783
  br i1 %99, label %100, label %114, !dbg !9781

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !9784
  %102 = sub i32 %101, %95, !dbg !9787
  %103 = icmp ugt i32 %102, 2, !dbg !9788
  br i1 %103, label %311, label %96, !dbg !9789, !llvm.loop !9790

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !9792
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !9794
  call void @llvm.dbg.value(metadata i32 %105, metadata !9670, metadata !DIExpression()), !dbg !9680
  br label %106, !dbg !9795

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9796
  %108 = and i32 %107, 2, !dbg !9796
  %109 = icmp eq i32 %108, 0, !dbg !9796
  br i1 %109, label %121, label %110, !dbg !9795

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !9797
  %112 = sub i32 %111, %105, !dbg !9800
  %113 = icmp ugt i32 %112, 2, !dbg !9801
  br i1 %113, label %311, label %106, !dbg !9802, !llvm.loop !9803

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9805
  %116 = and i32 %115, -249, !dbg !9805
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !9805
  %118 = load i32, i32* %117, align 4, !dbg !9805
  %119 = shl i32 %118, 3, !dbg !9805
  %120 = or i32 %119, %116, !dbg !9805
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9805
  br label %121, !dbg !9806

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !9806
  %123 = and i32 %122, 8, !dbg !9808
  %124 = icmp eq i32 %123, 0, !dbg !9809
  br i1 %124, label %149, label %125, !dbg !9810

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !9811
  %127 = load i32, i32* %126, align 4, !dbg !9811
  %128 = icmp eq i32 %127, 0, !dbg !9814
  br i1 %128, label %139, label %129, !dbg !9815

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !9816
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !9818
  call void @llvm.dbg.value(metadata i32 %130, metadata !9670, metadata !DIExpression()), !dbg !9680
  br label %131, !dbg !9819

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9820
  %133 = and i32 %132, 2, !dbg !9821
  %134 = icmp eq i32 %133, 0, !dbg !9821
  br i1 %134, label %135, label %149, !dbg !9819

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !9822
  %137 = sub i32 %136, %130, !dbg !9825
  %138 = icmp ugt i32 %137, 2, !dbg !9826
  br i1 %138, label %311, label %131, !dbg !9827, !llvm.loop !9828

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !9830
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !9832
  call void @llvm.dbg.value(metadata i32 %140, metadata !9670, metadata !DIExpression()), !dbg !9680
  br label %141, !dbg !9833

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9834
  %143 = and i32 %142, 2, !dbg !9834
  %144 = icmp eq i32 %143, 0, !dbg !9834
  br i1 %144, label %149, label %145, !dbg !9833

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !9835
  %147 = sub i32 %146, %140, !dbg !9838
  %148 = icmp ugt i32 %147, 2, !dbg !9839
  br i1 %148, label %311, label %141, !dbg !9840, !llvm.loop !9841

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !9843
  %151 = and i32 %150, 4, !dbg !9844
  %152 = icmp eq i32 %151, 0, !dbg !9845
  br i1 %152, label %221, label %153, !dbg !9846

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !9672, metadata !DIExpression()), !dbg !9847
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9848
  %155 = and i32 %154, 268435456, !dbg !9848
  %156 = icmp eq i32 %155, 0, !dbg !9848
  br i1 %156, label %157, label %164, !dbg !9849

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !9850
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !9850
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9676, metadata !DIExpression()), !dbg !9850
  store volatile i32 0, i32* %2, align 4, !dbg !9850
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9850
  %160 = or i32 %159, 268435456, !dbg !9850
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9850
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9850
  %162 = and i32 %161, 268435456, !dbg !9850
  store volatile i32 %162, i32* %2, align 4, !dbg !9850
  %163 = load volatile i32, i32* %2, align 4, !dbg !9850
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !9851
  call void @llvm.dbg.value(metadata i32 1, metadata !9672, metadata !DIExpression()), !dbg !9847
  br label %164, !dbg !9852

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !9672, metadata !DIExpression()), !dbg !9847
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9853
  %166 = and i32 %165, 256, !dbg !9853
  %167 = icmp eq i32 %166, 0, !dbg !9853
  br i1 %167, label %168, label %180, !dbg !9855

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9856
  %170 = or i32 %169, 256, !dbg !9856
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9856
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !9858
  call void @llvm.dbg.value(metadata i32 %171, metadata !9670, metadata !DIExpression()), !dbg !9680
  br label %172, !dbg !9859

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9860
  %174 = and i32 %173, 256, !dbg !9860
  %175 = icmp eq i32 %174, 0, !dbg !9860
  br i1 %175, label %176, label %180, !dbg !9859

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !9861
  %178 = sub i32 %177, %171, !dbg !9864
  %179 = icmp ugt i32 %178, 2, !dbg !9865
  br i1 %179, label %311, label %172, !dbg !9866, !llvm.loop !9867

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !9869
  %182 = load i32, i32* %181, align 4, !dbg !9869
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !9872

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9873
  %185 = or i32 %184, 1, !dbg !9873
  br label %196, !dbg !9873

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9875
  %188 = or i32 %187, 4, !dbg !9875
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9875
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9875
  %190 = or i32 %189, 1, !dbg !9875
  br label %196, !dbg !9875

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9878
  %193 = and i32 %192, -2, !dbg !9878
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9878
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9878
  %195 = and i32 %194, -5, !dbg !9878
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9880
  %198 = load i32, i32* %181, align 4, !dbg !9881
  %199 = icmp eq i32 %198, 0, !dbg !9883
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !9884
  call void @llvm.dbg.value(metadata i32 %200, metadata !9670, metadata !DIExpression()), !dbg !9680
  call void @llvm.dbg.value(metadata i32 %200, metadata !9670, metadata !DIExpression()), !dbg !9680
  br i1 %199, label %209, label %201, !dbg !9885

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9886
  %203 = and i32 %202, 2, !dbg !9888
  %204 = icmp eq i32 %203, 0, !dbg !9888
  br i1 %204, label %205, label %217, !dbg !9889

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !9890
  %207 = sub i32 %206, %200, !dbg !9893
  %208 = icmp ugt i32 %207, 5000, !dbg !9894
  br i1 %208, label %311, label %201, !dbg !9895, !llvm.loop !9896

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9898
  %211 = and i32 %210, 2, !dbg !9898
  %212 = icmp eq i32 %211, 0, !dbg !9898
  br i1 %212, label %217, label %213, !dbg !9900

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !9901
  %215 = sub i32 %214, %200, !dbg !9904
  %216 = icmp ugt i32 %215, 5000, !dbg !9905
  br i1 %216, label %311, label %209, !dbg !9906, !llvm.loop !9907

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !9909

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9910
  %220 = and i32 %219, -268435457, !dbg !9910
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9910
  br label %221, !dbg !9913

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !9914
  %223 = load i32, i32* %222, align 4, !dbg !9914
  %224 = icmp eq i32 %223, 0, !dbg !9916
  br i1 %224, label %310, label %225, !dbg !9917

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9918
  %227 = and i32 %226, 12, !dbg !9918
  %228 = icmp eq i32 %227, 8, !dbg !9921
  br i1 %228, label %277, label %229, !dbg !9922

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !9923
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !9926
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !9926
  call void @llvm.dbg.value(metadata i32 %231, metadata !9670, metadata !DIExpression()), !dbg !9680
  call void @llvm.dbg.value(metadata i32 %231, metadata !9670, metadata !DIExpression()), !dbg !9680
  br i1 %230, label %232, label %269, !dbg !9927

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9928
  %234 = and i32 %233, 33554432, !dbg !9928
  %235 = icmp eq i32 %234, 0, !dbg !9928
  br i1 %235, label %240, label %236, !dbg !9930

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !9931
  %238 = sub i32 %237, %231, !dbg !9934
  %239 = icmp ugt i32 %238, 2, !dbg !9935
  br i1 %239, label %311, label %232, !dbg !9936, !llvm.loop !9937

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !9939
  %242 = load i32, i32* %241, align 4, !dbg !9939
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !9939
  %244 = load i32, i32* %243, align 4, !dbg !9939
  %245 = or i32 %244, %242, !dbg !9939
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !9939
  %247 = load i32, i32* %246, align 4, !dbg !9939
  %248 = shl i32 %247, 6, !dbg !9939
  %249 = or i32 %245, %248, !dbg !9939
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !9939
  %251 = load i32, i32* %250, align 4, !dbg !9939
  %252 = shl i32 %251, 15, !dbg !9939
  %253 = add i32 %252, -65536, !dbg !9939
  %254 = and i32 %253, -65536, !dbg !9939
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !9939
  %256 = load i32, i32* %255, align 4, !dbg !9939
  %257 = shl i32 %256, 24, !dbg !9939
  %258 = or i32 %249, %257, !dbg !9939
  %259 = or i32 %258, %254, !dbg !9939
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9939
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !9940
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !9941
  call void @llvm.dbg.value(metadata i32 %260, metadata !9670, metadata !DIExpression()), !dbg !9680
  br label %261, !dbg !9942

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9943
  %263 = and i32 %262, 33554432, !dbg !9944
  %264 = icmp eq i32 %263, 0, !dbg !9944
  br i1 %264, label %265, label %310, !dbg !9942

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !9945
  %267 = sub i32 %266, %260, !dbg !9948
  %268 = icmp ugt i32 %267, 2, !dbg !9949
  br i1 %268, label %311, label %261, !dbg !9950, !llvm.loop !9951

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9953
  %271 = and i32 %270, 33554432, !dbg !9953
  %272 = icmp eq i32 %271, 0, !dbg !9953
  br i1 %272, label %310, label %273, !dbg !9955

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !9956
  %275 = sub i32 %274, %231, !dbg !9959
  %276 = icmp ugt i32 %275, 2, !dbg !9960
  br i1 %276, label %311, label %269, !dbg !9961, !llvm.loop !9962

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !9964
  br i1 %278, label %311, label %279, !dbg !9967

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9968
  call void @llvm.dbg.value(metadata i32 %280, metadata !9671, metadata !DIExpression()), !dbg !9680
  %281 = and i32 %280, 4194304, !dbg !9970
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !9972
  %283 = load i32, i32* %282, align 4, !dbg !9972
  %284 = icmp eq i32 %281, %283, !dbg !9973
  br i1 %284, label %285, label %311, !dbg !9974

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !9975
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !9976
  %288 = load i32, i32* %287, align 4, !dbg !9976
  %289 = icmp eq i32 %286, %288, !dbg !9977
  br i1 %289, label %290, label %311, !dbg !9978

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !9979
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !9980
  %293 = load i32, i32* %292, align 4, !dbg !9980
  %294 = shl i32 %293, 6, !dbg !9981
  %295 = icmp eq i32 %291, %294, !dbg !9982
  br i1 %295, label %296, label %311, !dbg !9983

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !9984
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !9985
  %299 = load i32, i32* %298, align 4, !dbg !9985
  %300 = shl i32 %299, 15, !dbg !9986
  %301 = add i32 %300, -65536, !dbg !9986
  %302 = and i32 %301, -65536, !dbg !9986
  %303 = icmp eq i32 %297, %302, !dbg !9987
  br i1 %303, label %304, label %311, !dbg !9988

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !9989
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !9990
  %307 = load i32, i32* %306, align 4, !dbg !9990
  %308 = shl i32 %307, 24, !dbg !9991
  %309 = icmp eq i32 %305, %308, !dbg !9992
  br i1 %309, label %310, label %311, !dbg !9993

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !9994

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !9680
  ret i32 %312, !dbg !9995
}

; Function Attrs: optsize
declare !dbg !9996 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !9998 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !10011, metadata !DIExpression()), !dbg !10014
  call void @llvm.dbg.value(metadata i32 %1, metadata !10012, metadata !DIExpression()), !dbg !10014
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !10015
  br i1 %3, label %115, label %4, !dbg !10017

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10018
  %6 = and i32 %5, 7, !dbg !10018
  %7 = icmp ult i32 %6, %1, !dbg !10020
  br i1 %7, label %8, label %13, !dbg !10021

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !10022
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !10022
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10024
  %11 = and i32 %10, 7, !dbg !10024
  %12 = icmp eq i32 %11, %1, !dbg !10026
  br i1 %12, label %13, label %115, !dbg !10027

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !10028
  %15 = load i32, i32* %14, align 4, !dbg !10028
  %16 = and i32 %15, 2, !dbg !10030
  %17 = icmp eq i32 %16, 0, !dbg !10031
  br i1 %17, label %39, label %18, !dbg !10032

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !10033
  %20 = icmp eq i32 %19, 0, !dbg !10036
  br i1 %20, label %25, label %21, !dbg !10037

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10038
  %23 = or i32 %22, 7168, !dbg !10038
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10038
  %24 = load i32, i32* %14, align 4, !dbg !10040
  br label %25, !dbg !10042

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !10040
  %27 = and i32 %26, 8, !dbg !10043
  %28 = icmp eq i32 %27, 0, !dbg !10044
  br i1 %28, label %32, label %29, !dbg !10045

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10046
  %31 = or i32 %30, 57344, !dbg !10046
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10046
  br label %32, !dbg !10048

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10049
  %34 = and i32 %33, -241, !dbg !10049
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !10049
  %36 = load i32, i32* %35, align 4, !dbg !10049
  %37 = or i32 %34, %36, !dbg !10049
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10049
  %38 = load i32, i32* %14, align 4, !dbg !10050
  br label %39, !dbg !10052

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !10050
  %41 = and i32 %40, 1, !dbg !10053
  %42 = icmp eq i32 %41, 0, !dbg !10054
  br i1 %42, label %73, label %43, !dbg !10055

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !10056
  %45 = load i32, i32* %44, align 4, !dbg !10056
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !10059

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10060
  %48 = and i32 %47, 131072, !dbg !10063
  %49 = icmp eq i32 %48, 0, !dbg !10063
  br i1 %49, label %115, label %58, !dbg !10064

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10065
  %52 = and i32 %51, 33554432, !dbg !10069
  %53 = icmp eq i32 %52, 0, !dbg !10069
  br i1 %53, label %115, label %58, !dbg !10070

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10071
  %56 = and i32 %55, 2, !dbg !10074
  %57 = icmp eq i32 %56, 0, !dbg !10074
  br i1 %57, label %115, label %58, !dbg !10075

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10076
  %60 = and i32 %59, -4, !dbg !10076
  %61 = or i32 %60, %45, !dbg !10076
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10076
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !10077
  call void @llvm.dbg.value(metadata i32 %62, metadata !10013, metadata !DIExpression()), !dbg !10014
  br label %63, !dbg !10078

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10079
  %65 = and i32 %64, 12, !dbg !10079
  %66 = load i32, i32* %44, align 4, !dbg !10080
  %67 = shl i32 %66, 2, !dbg !10081
  %68 = icmp eq i32 %65, %67, !dbg !10082
  br i1 %68, label %73, label %69, !dbg !10078

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !10083
  %71 = sub i32 %70, %62, !dbg !10086
  %72 = icmp ugt i32 %71, 5000, !dbg !10087
  br i1 %72, label %115, label %63, !dbg !10088, !llvm.loop !10089

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10091
  %75 = and i32 %74, 7, !dbg !10091
  %76 = icmp ugt i32 %75, %1, !dbg !10093
  br i1 %76, label %77, label %82, !dbg !10094

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !10095
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !10095
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10097
  %80 = and i32 %79, 7, !dbg !10097
  %81 = icmp eq i32 %80, %1, !dbg !10099
  br i1 %81, label %82, label %115, !dbg !10100

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !10101
  %84 = and i32 %83, 4, !dbg !10103
  %85 = icmp eq i32 %84, 0, !dbg !10104
  br i1 %85, label %93, label %86, !dbg !10105

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10106
  %88 = and i32 %87, -7169, !dbg !10106
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !10106
  %90 = load i32, i32* %89, align 4, !dbg !10106
  %91 = or i32 %88, %90, !dbg !10106
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10106
  %92 = load i32, i32* %14, align 4, !dbg !10108
  br label %93, !dbg !10110

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !10108
  %95 = and i32 %94, 8, !dbg !10111
  %96 = icmp eq i32 %95, 0, !dbg !10112
  br i1 %96, label %104, label %97, !dbg !10113

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10114
  %99 = and i32 %98, -57345, !dbg !10114
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !10114
  %101 = load i32, i32* %100, align 4, !dbg !10114
  %102 = shl i32 %101, 3, !dbg !10114
  %103 = or i32 %102, %99, !dbg !10114
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10114
  br label %104, !dbg !10116

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !10117
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10118
  %107 = lshr i32 %106, 4, !dbg !10119
  %108 = and i32 %107, 15, !dbg !10119
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !10120
  %110 = load i8, i8* %109, align 1, !dbg !10120
  %111 = zext i8 %110 to i32, !dbg !10120
  %112 = lshr i32 %105, %111, !dbg !10121
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !10122
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !10123
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !10124
  br label %115, !dbg !10125

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !10014
  ret i32 %116, !dbg !10126
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !10127 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10129, metadata !DIExpression()), !dbg !10133
  call void @llvm.dbg.value(metadata i32 0, metadata !10130, metadata !DIExpression()), !dbg !10133
  call void @llvm.dbg.value(metadata i32 0, metadata !10131, metadata !DIExpression()), !dbg !10133
  call void @llvm.dbg.value(metadata i32 0, metadata !10132, metadata !DIExpression()), !dbg !10133
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10134
  %2 = and i32 %1, 12, !dbg !10135
  switch i32 %2, label %29 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !10136

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !10132, metadata !DIExpression()), !dbg !10133
  br label %29, !dbg !10137

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10140
  %6 = and i32 %5, 63, !dbg !10142
  call void @llvm.dbg.value(metadata i32 %6, metadata !10129, metadata !DIExpression()), !dbg !10133
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10143
  %8 = and i32 %7, 4194304, !dbg !10143
  %9 = icmp eq i32 %8, 0, !dbg !10145
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10146
  %11 = lshr i32 %10, 6, !dbg !10146
  %12 = and i32 %11, 511, !dbg !10146
  br i1 %9, label %16, label %13, !dbg !10147

13:                                               ; preds = %4
  %14 = mul nuw i32 %12, 8000000, !dbg !10148
  %15 = udiv i32 %14, %6, !dbg !10150
  call void @llvm.dbg.value(metadata i32 %15, metadata !10130, metadata !DIExpression()), !dbg !10133
  br label %22, !dbg !10151

16:                                               ; preds = %4
  %17 = zext i32 %12 to i64, !dbg !10152
  %18 = mul nuw nsw i64 %17, 16000000, !dbg !10154
  %19 = zext i32 %6 to i64, !dbg !10155
  %20 = udiv i64 %18, %19, !dbg !10156
  %21 = trunc i64 %20 to i32, !dbg !10157
  call void @llvm.dbg.value(metadata i32 %21, metadata !10130, metadata !DIExpression()), !dbg !10133
  br label %22

22:                                               ; preds = %16, %13
  %23 = phi i32 [ %15, %13 ], [ %21, %16 ], !dbg !10146
  call void @llvm.dbg.value(metadata i32 %23, metadata !10130, metadata !DIExpression()), !dbg !10133
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10158
  %25 = lshr i32 %24, 15, !dbg !10159
  %26 = and i32 %25, 6, !dbg !10159
  %27 = add nuw nsw i32 %26, 2, !dbg !10159
  call void @llvm.dbg.value(metadata i32 %27, metadata !10131, metadata !DIExpression()), !dbg !10133
  %28 = udiv i32 %23, %27, !dbg !10160
  call void @llvm.dbg.value(metadata i32 %28, metadata !10132, metadata !DIExpression()), !dbg !10133
  br label %29, !dbg !10161

29:                                               ; preds = %0, %22, %3
  %30 = phi i32 [ %28, %22 ], [ 8000000, %3 ], [ 16000000, %0 ], !dbg !10162
  call void @llvm.dbg.value(metadata i32 %30, metadata !10132, metadata !DIExpression()), !dbg !10133
  ret i32 %30, !dbg !10163
}

; Function Attrs: optsize
declare !dbg !10164 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10167 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10171, metadata !DIExpression()), !dbg !10191
  call void @llvm.dbg.value(metadata i32 %1, metadata !10172, metadata !DIExpression()), !dbg !10191
  call void @llvm.dbg.value(metadata i32 %2, metadata !10173, metadata !DIExpression()), !dbg !10191
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !10192
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !10192
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !10174, metadata !DIExpression()), !dbg !10193
  %8 = icmp eq i32 %0, 0, !dbg !10194
  br i1 %8, label %9, label %23, !dbg !10195

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !10196
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !10196
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10184, metadata !DIExpression()), !dbg !10196
  store volatile i32 0, i32* %5, align 4, !dbg !10196
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10196
  %12 = or i32 %11, 1, !dbg !10196
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10196
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10196
  %14 = and i32 %13, 1, !dbg !10196
  store volatile i32 %14, i32* %5, align 4, !dbg !10196
  %15 = load volatile i32, i32* %5, align 4, !dbg !10196
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !10197
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !10198
  store i32 256, i32* %16, align 4, !dbg !10199
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !10200
  store i32 2, i32* %17, align 4, !dbg !10201
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !10202
  store i32 3, i32* %18, align 4, !dbg !10203
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !10204
  store i32 0, i32* %19, align 4, !dbg !10205
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !10206
  store i32 0, i32* %20, align 4, !dbg !10207
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !10208
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10209
  %22 = and i32 %21, -123731969, !dbg !10209
  br label %38, !dbg !10210

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !10211
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !10211
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10188, metadata !DIExpression()), !dbg !10211
  store volatile i32 0, i32* %6, align 4, !dbg !10211
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10211
  %26 = or i32 %25, 4, !dbg !10211
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10211
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10211
  %28 = and i32 %27, 4, !dbg !10211
  store volatile i32 %28, i32* %6, align 4, !dbg !10211
  %29 = load volatile i32, i32* %6, align 4, !dbg !10211
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !10212
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !10213
  store i32 512, i32* %30, align 4, !dbg !10214
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !10215
  store i32 2, i32* %31, align 4, !dbg !10216
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !10217
  store i32 3, i32* %32, align 4, !dbg !10218
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !10219
  store i32 0, i32* %33, align 4, !dbg !10220
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !10221
  store i32 0, i32* %34, align 4, !dbg !10222
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !10223
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10224
  %36 = and i32 %35, 134217727, !dbg !10224
  %37 = shl i32 %2, 3, !dbg !10224
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !10225
  %42 = or i32 %41, %40, !dbg !10225
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10225
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !10226
  ret void, !dbg !10226
}

; Function Attrs: optsize
declare !dbg !10227 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #13 !dbg !10231 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !10232
  ret void, !dbg !10233
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #13 !dbg !10234 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !10235
  ret void, !dbg !10236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !10237 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !10238
  ret i32 %1, !dbg !10239
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #14 !dbg !10240 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !10241
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10242
  %3 = lshr i32 %2, 10, !dbg !10243
  %4 = and i32 %3, 7, !dbg !10243
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !10244
  %6 = load i8, i8* %5, align 1, !dbg !10244
  %7 = zext i8 %6 to i32, !dbg !10244
  %8 = lshr i32 %1, %7, !dbg !10245
  ret i32 %8, !dbg !10246
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #14 !dbg !10247 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !10248
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10249
  %3 = lshr i32 %2, 13, !dbg !10250
  %4 = and i32 %3, 7, !dbg !10250
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !10251
  %6 = load i8, i8* %5, align 1, !dbg !10251
  %7 = zext i8 %6 to i32, !dbg !10251
  %8 = lshr i32 %1, %7, !dbg !10252
  ret i32 %8, !dbg !10253
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !10254 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10258, metadata !DIExpression()), !dbg !10259
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10260
  store i32 15, i32* %2, align 4, !dbg !10261
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10262
  %4 = and i32 %3, 262144, !dbg !10264
  %5 = icmp eq i32 %4, 0, !dbg !10265
  br i1 %5, label %8, label %6, !dbg !10266

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10267
  store i32 327680, i32* %7, align 4, !dbg !10269
  br label %15, !dbg !10270

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10271
  %10 = and i32 %9, 65536, !dbg !10273
  %11 = icmp eq i32 %10, 0, !dbg !10274
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10275
  br i1 %11, label %14, label %13, !dbg !10276

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !10277
  br label %15, !dbg !10279

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !10280
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10282
  %17 = and i32 %16, 1, !dbg !10284
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10285
  store i32 %17, i32* %18, align 4, !dbg !10287
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10288
  %20 = lshr i32 %19, 3, !dbg !10289
  %21 = and i32 %20, 31, !dbg !10289
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10290
  store i32 %21, i32* %22, align 4, !dbg !10291
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10292
  %24 = and i32 %23, 4, !dbg !10294
  %25 = icmp eq i32 %24, 0, !dbg !10295
  br i1 %25, label %28, label %26, !dbg !10296

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10297
  store i32 5, i32* %27, align 4, !dbg !10299
  br label %35, !dbg !10300

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10301
  %30 = and i32 %29, 1, !dbg !10303
  %31 = icmp eq i32 %30, 0, !dbg !10304
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10305
  br i1 %31, label %34, label %33, !dbg !10306

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !10307
  br label %35, !dbg !10309

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !10310
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10312
  %37 = and i32 %36, 1, !dbg !10314
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10315
  store i32 %37, i32* %38, align 4, !dbg !10317
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10318
  %40 = and i32 %39, 16777216, !dbg !10320
  %41 = icmp eq i32 %40, 0, !dbg !10321
  %42 = select i1 %41, i32 1, i32 2, !dbg !10322
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10323
  store i32 %42, i32* %43, align 4, !dbg !10325
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10326
  %45 = and i32 %44, 4194304, !dbg !10327
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10328
  store i32 %45, i32* %46, align 4, !dbg !10329
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10330
  %48 = and i32 %47, 63, !dbg !10331
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10332
  store i32 %48, i32* %49, align 4, !dbg !10333
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10334
  %51 = lshr i32 %50, 6, !dbg !10335
  %52 = and i32 %51, 511, !dbg !10335
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10336
  store i32 %52, i32* %53, align 4, !dbg !10337
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10338
  %55 = shl i32 %54, 1, !dbg !10339
  %56 = and i32 %55, 393216, !dbg !10339
  %57 = add nuw nsw i32 %56, 131072, !dbg !10339
  %58 = lshr exact i32 %57, 16, !dbg !10340
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10341
  store i32 %58, i32* %59, align 4, !dbg !10342
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10343
  %61 = lshr i32 %60, 24, !dbg !10344
  %62 = and i32 %61, 15, !dbg !10344
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10345
  store i32 %62, i32* %63, align 4, !dbg !10346
  ret void, !dbg !10347
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #14 !dbg !10348 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !10352, metadata !DIExpression()), !dbg !10354
  call void @llvm.dbg.value(metadata i32* %1, metadata !10353, metadata !DIExpression()), !dbg !10354
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !10355
  store i32 15, i32* %3, align 4, !dbg !10356
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10357
  %5 = and i32 %4, 3, !dbg !10358
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !10359
  store i32 %5, i32* %6, align 4, !dbg !10360
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10361
  %8 = and i32 %7, 240, !dbg !10362
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !10363
  store i32 %8, i32* %9, align 4, !dbg !10364
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10365
  %11 = and i32 %10, 7168, !dbg !10366
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !10367
  store i32 %11, i32* %12, align 4, !dbg !10368
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10369
  %14 = lshr i32 %13, 3, !dbg !10370
  %15 = and i32 %14, 7168, !dbg !10370
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !10371
  store i32 %15, i32* %16, align 4, !dbg !10372
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10373
  %18 = and i32 %17, 7, !dbg !10374
  store i32 %18, i32* %1, align 4, !dbg !10375
  ret void, !dbg !10376
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !10377 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10378
  %2 = and i32 %1, 128, !dbg !10378
  %3 = icmp eq i32 %2, 0, !dbg !10378
  br i1 %3, label %5, label %4, !dbg !10380

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !10381
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !10383
  br label %5, !dbg !10384

5:                                                ; preds = %4, %0
  ret void, !dbg !10385
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !10386 {
  ret void, !dbg !10387
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #13 !dbg !10388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10391, metadata !DIExpression()), !dbg !10392
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !10393
  ret void, !dbg !10394
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #13 !dbg !10395 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10398, metadata !DIExpression()), !dbg !10400
  call void @llvm.dbg.value(metadata i32 1000, metadata !10399, metadata !DIExpression()), !dbg !10400
  %2 = udiv i32 %0, 1000, !dbg !10401
  %3 = add nsw i32 %2, -1, !dbg !10402
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10403
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10404
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10405
  ret void, !dbg !10406
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #15 !dbg !10407 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10409, metadata !DIExpression()), !dbg !10411
  %3 = bitcast i32* %2 to i8*, !dbg !10412
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10412
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10410, metadata !DIExpression()), !dbg !10413
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10414
  store volatile i32 %4, i32* %2, align 4, !dbg !10413
  %5 = load volatile i32, i32* %2, align 4, !dbg !10415
  %6 = icmp eq i32 %0, -1, !dbg !10416
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10409, metadata !DIExpression()), !dbg !10411
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !10411
  call void @llvm.dbg.value(metadata i32 %8, metadata !10409, metadata !DIExpression()), !dbg !10411
  br label %9, !dbg !10418

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10409, metadata !DIExpression()), !dbg !10411
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10419
  call void @llvm.dbg.value(metadata i32 undef, metadata !10409, metadata !DIExpression()), !dbg !10411
  %12 = shl i32 %11, 15, !dbg !10411
  %13 = ashr i32 %12, 31, !dbg !10411
  %14 = add i32 %13, %10, !dbg !10411
  call void @llvm.dbg.value(metadata i32 %14, metadata !10409, metadata !DIExpression()), !dbg !10411
  %15 = icmp eq i32 %14, 0, !dbg !10418
  br i1 %15, label %16, label %9, !dbg !10418

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10422
  ret void, !dbg !10422
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !10423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10425, metadata !DIExpression()), !dbg !10426
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !10427
  ret void, !dbg !10428
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #13 !dbg !10429 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10434, metadata !DIExpression()), !dbg !10439
  call void @llvm.dbg.value(metadata i32 0, metadata !10437, metadata !DIExpression()), !dbg !10439
  call void @llvm.dbg.value(metadata i32 0, metadata !10438, metadata !DIExpression()), !dbg !10439
  %2 = icmp eq i32 %0, 0, !dbg !10440
  br i1 %2, label %50, label %3, !dbg !10442

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !10443
  %5 = icmp eq i32 %4, 49152, !dbg !10446
  br i1 %5, label %6, label %15, !dbg !10447

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !10437, metadata !DIExpression()), !dbg !10439
  %7 = add i32 %0, -64000001, !dbg !10448
  %8 = icmp ult i32 %7, 26000000, !dbg !10448
  br i1 %8, label %15, label %9, !dbg !10448

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !10451
  %11 = select i1 %10, i32 0, i32 3, !dbg !10453
  call void @llvm.dbg.value(metadata i32 %11, metadata !10437, metadata !DIExpression()), !dbg !10439
  %12 = add i32 %0, -30000001, !dbg !10454
  %13 = icmp ult i32 %12, 60000000, !dbg !10454
  %14 = select i1 %13, i32 1, i32 %11, !dbg !10454
  call void @llvm.dbg.value(metadata i32 %14, metadata !10437, metadata !DIExpression()), !dbg !10439
  br label %15, !dbg !10454

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !10439
  call void @llvm.dbg.value(metadata i32 %16, metadata !10437, metadata !DIExpression()), !dbg !10439
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !10457
  %18 = icmp eq i32 %17, 32768, !dbg !10459
  br i1 %18, label %19, label %27, !dbg !10460

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !10461
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !10464
  br i1 %22, label %27, label %23, !dbg !10464

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !10465
  %25 = and i1 %24, %21, !dbg !10468
  %26 = select i1 %25, i32 1, i32 %16, !dbg !10468
  call void @llvm.dbg.value(metadata i32 %26, metadata !10437, metadata !DIExpression()), !dbg !10439
  br label %27, !dbg !10468

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !10469
  call void @llvm.dbg.value(metadata i32 %28, metadata !10437, metadata !DIExpression()), !dbg !10439
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !10470
  %30 = icmp eq i32 %29, 16384, !dbg !10472
  br i1 %30, label %31, label %39, !dbg !10473

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !10474
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !10477
  br i1 %34, label %39, label %35, !dbg !10477

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !10478
  %37 = select i1 %36, i1 %33, i1 false, !dbg !10481
  %38 = select i1 %37, i32 1, i32 %28, !dbg !10481
  call void @llvm.dbg.value(metadata i32 %38, metadata !10437, metadata !DIExpression()), !dbg !10439
  br label %39, !dbg !10481

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !10469
  call void @llvm.dbg.value(metadata i32 %40, metadata !10437, metadata !DIExpression()), !dbg !10439
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #24, !dbg !10482
  call void @llvm.dbg.value(metadata i32 2, metadata !10435, metadata !DIExpression()), !dbg !10439
  br label %41, !dbg !10483

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !10469
  call void @llvm.dbg.value(metadata i32 %42, metadata !10435, metadata !DIExpression()), !dbg !10439
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !10484
  call void @llvm.dbg.value(metadata i32 %43, metadata !10436, metadata !DIExpression()), !dbg !10439
  %44 = add nsw i32 %42, -1, !dbg !10486
  call void @llvm.dbg.value(metadata i32 %44, metadata !10435, metadata !DIExpression()), !dbg !10439
  %45 = icmp ne i32 %43, %40, !dbg !10487
  %46 = icmp ne i32 %44, 0, !dbg !10488
  %47 = select i1 %45, i1 %46, i1 false, !dbg !10488
  br i1 %47, label %41, label %48, !dbg !10489, !llvm.loop !10490

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !10492
  call void @llvm.dbg.value(metadata i32 %51, metadata !10438, metadata !DIExpression()), !dbg !10439
  ret i32 %51, !dbg !10493
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #14 !dbg !10494 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10496
  %2 = and i32 %1, 49152, !dbg !10496
  ret i32 %2, !dbg !10497
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #13 !dbg !10498 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10500, metadata !DIExpression()), !dbg !10501
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10502
  %3 = and i32 %2, -8, !dbg !10502
  %4 = or i32 %3, %0, !dbg !10502
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10502
  ret void, !dbg !10503
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #14 !dbg !10504 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10505
  %2 = and i32 %1, 7, !dbg !10505
  ret i32 %2, !dbg !10506
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !10507 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !10525, metadata !DIExpression()), !dbg !10529
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10526, metadata !DIExpression()), !dbg !10529
  call void @llvm.dbg.value(metadata i32 0, metadata !10527, metadata !DIExpression()), !dbg !10529
  call void @llvm.dbg.value(metadata i32 0, metadata !10528, metadata !DIExpression()), !dbg !10529
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !10530
  %4 = icmp eq i32 %3, 0, !dbg !10532
  br i1 %4, label %5, label %21, !dbg !10533

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !10534
  call void @llvm.dbg.value(metadata i32 %6, metadata !10528, metadata !DIExpression()), !dbg !10529
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.65() #24, !dbg !10536
  %8 = icmp eq i32 %7, 1, !dbg !10538
  br i1 %8, label %13, label %9, !dbg !10539

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.66() #24, !dbg !10540
  br label %10, !dbg !10542

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.65() #24, !dbg !10543
  %12 = icmp eq i32 %11, 1, !dbg !10544
  br i1 %12, label %13, label %10, !dbg !10542, !llvm.loop !10545

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !10547
  %15 = load i32, i32* %14, align 4, !dbg !10547
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !10548
  %17 = load i32, i32* %16, align 4, !dbg !10548
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !10549
  %19 = load i32, i32* %18, align 4, !dbg !10549
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.67(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !10550
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !10551
  call void @llvm.dbg.value(metadata i32 %20, metadata !10527, metadata !DIExpression()), !dbg !10529
  br label %21, !dbg !10552

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !10553
  call void @llvm.dbg.value(metadata i32 %22, metadata !10527, metadata !DIExpression()), !dbg !10529
  ret i32 %22, !dbg !10554
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #14 !dbg !10555 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10559, metadata !DIExpression()), !dbg !10560
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.69() #24, !dbg !10561
  %2 = icmp ne i32 %1, 0, !dbg !10563
  call void @llvm.dbg.value(metadata i1 %2, metadata !10559, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10560
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !10564
  %4 = icmp ne i32 %3, 0, !dbg !10566
  %5 = select i1 %4, i1 true, i1 %2, !dbg !10567
  %6 = zext i1 %5 to i32, !dbg !10567
  call void @llvm.dbg.value(metadata i32 %6, metadata !10559, metadata !DIExpression()), !dbg !10560
  ret i32 %6, !dbg !10568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !10569 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10573, metadata !DIExpression()), !dbg !10576
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10574, metadata !DIExpression()), !dbg !10576
  call void @llvm.dbg.value(metadata i32 0, metadata !10575, metadata !DIExpression()), !dbg !10576
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10577
  %4 = load i32, i32* %3, align 4, !dbg !10577
  %5 = and i32 %4, 63, !dbg !10578
  %6 = udiv i32 %0, %5, !dbg !10579
  call void @llvm.dbg.value(metadata i32 %6, metadata !10575, metadata !DIExpression()), !dbg !10576
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10580
  %8 = load i32, i32* %7, align 4, !dbg !10580
  %9 = and i32 %8, 511, !dbg !10581
  %10 = mul i32 %9, %6, !dbg !10582
  call void @llvm.dbg.value(metadata i32 %10, metadata !10575, metadata !DIExpression()), !dbg !10576
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10583
  %12 = load i32, i32* %11, align 4, !dbg !10583
  %13 = lshr i32 %12, 15, !dbg !10584
  %14 = and i32 %13, 131070, !dbg !10584
  %15 = add nuw nsw i32 %14, 2, !dbg !10584
  %16 = udiv i32 %10, %15, !dbg !10585
  call void @llvm.dbg.value(metadata i32 %16, metadata !10575, metadata !DIExpression()), !dbg !10576
  ret i32 %16, !dbg !10586
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.65() unnamed_addr #14 !dbg !10587 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10588
  %2 = lshr i32 %1, 1, !dbg !10589
  %3 = and i32 %2, 1, !dbg !10589
  ret i32 %3, !dbg !10590
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.66() unnamed_addr #13 !dbg !10591 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10592
  %2 = or i32 %1, 1, !dbg !10592
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10592
  ret void, !dbg !10593
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.67(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #13 !dbg !10594 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10596, metadata !DIExpression()), !dbg !10600
  call void @llvm.dbg.value(metadata i32 %1, metadata !10597, metadata !DIExpression()), !dbg !10600
  call void @llvm.dbg.value(metadata i32 %2, metadata !10598, metadata !DIExpression()), !dbg !10600
  call void @llvm.dbg.value(metadata i32 %3, metadata !10599, metadata !DIExpression()), !dbg !10600
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10601
  %6 = and i32 %5, -4227072, !dbg !10601
  %7 = or i32 %1, %0, !dbg !10601
  %8 = shl i32 %2, 6, !dbg !10601
  %9 = or i32 %7, %8, !dbg !10601
  %10 = or i32 %9, %6, !dbg !10601
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10601
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10602
  %12 = and i32 %11, -196609, !dbg !10602
  %13 = or i32 %12, %3, !dbg !10602
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10602
  ret void, !dbg !10603
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #13 !dbg !10604 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10608, metadata !DIExpression()), !dbg !10612
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10609, metadata !DIExpression()), !dbg !10612
  call void @llvm.dbg.value(metadata i32 0, metadata !10610, metadata !DIExpression()), !dbg !10612
  call void @llvm.dbg.value(metadata i32 0, metadata !10611, metadata !DIExpression()), !dbg !10612
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10613
  %4 = load i32, i32* %3, align 4, !dbg !10613
  %5 = lshr i32 %4, 4, !dbg !10613
  %6 = and i32 %5, 15, !dbg !10613
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !10613
  %8 = load i8, i8* %7, align 1, !dbg !10613
  %9 = zext i8 %8 to i32, !dbg !10613
  %10 = lshr i32 %0, %9, !dbg !10613
  call void @llvm.dbg.value(metadata i32 %10, metadata !10611, metadata !DIExpression()), !dbg !10612
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !10614
  %12 = icmp ult i32 %11, %10, !dbg !10616
  br i1 %12, label %13, label %16, !dbg !10617

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !10618
  call void @llvm.dbg.value(metadata i32 %14, metadata !10610, metadata !DIExpression()), !dbg !10612
  %15 = icmp eq i32 %14, 0, !dbg !10620
  br i1 %15, label %16, label %30, !dbg !10622

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.68() #24, !dbg !10623
  br label %17, !dbg !10625

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.69() #24, !dbg !10626
  %19 = icmp eq i32 %18, 1, !dbg !10627
  br i1 %19, label %20, label %17, !dbg !10625, !llvm.loop !10628

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !10630
  tail call fastcc void @LL_RCC_SetAHBPrescaler.70(i32 noundef %21) #24, !dbg !10631
  tail call fastcc void @LL_RCC_SetSysClkSource.71() #24, !dbg !10632
  br label %22, !dbg !10633

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.72() #24, !dbg !10634
  %24 = icmp eq i32 %23, 8, !dbg !10635
  br i1 %24, label %25, label %22, !dbg !10633, !llvm.loop !10636

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10638
  %27 = load i32, i32* %26, align 4, !dbg !10638
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.73(i32 noundef %27) #24, !dbg !10639
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10640
  %29 = load i32, i32* %28, align 4, !dbg !10640
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.74(i32 noundef %29) #24, !dbg !10641
  br label %30, !dbg !10642

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !10643
  %33 = icmp ugt i32 %32, %10, !dbg !10645
  br i1 %33, label %34, label %36, !dbg !10646

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !10647
  call void @llvm.dbg.value(metadata i32 %35, metadata !10610, metadata !DIExpression()), !dbg !10612
  br label %36, !dbg !10649

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !10612
  call void @llvm.dbg.value(metadata i32 %37, metadata !10610, metadata !DIExpression()), !dbg !10612
  %38 = icmp eq i32 %37, 0, !dbg !10650
  br i1 %38, label %39, label %40, !dbg !10652

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !10653
  br label %40, !dbg !10655

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !10656
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.68() unnamed_addr #13 !dbg !10657 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10658
  %2 = or i32 %1, 16777216, !dbg !10658
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10658
  ret void, !dbg !10659
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.69() unnamed_addr #14 !dbg !10660 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10661
  %2 = lshr i32 %1, 25, !dbg !10662
  %3 = and i32 %2, 1, !dbg !10662
  ret i32 %3, !dbg !10663
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.70(i32 noundef %0) unnamed_addr #13 !dbg !10664 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10666, metadata !DIExpression()), !dbg !10667
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10668
  %3 = and i32 %2, -241, !dbg !10668
  %4 = or i32 %3, %0, !dbg !10668
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10668
  ret void, !dbg !10669
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.71() unnamed_addr #13 !dbg !10670 {
  call void @llvm.dbg.value(metadata i32 2, metadata !10672, metadata !DIExpression()), !dbg !10673
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10674
  %2 = and i32 %1, -4, !dbg !10674
  %3 = or i32 %2, 2, !dbg !10674
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10674
  ret void, !dbg !10675
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.72() unnamed_addr #14 !dbg !10676 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10677
  %2 = and i32 %1, 12, !dbg !10677
  ret i32 %2, !dbg !10678
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.73(i32 noundef %0) unnamed_addr #13 !dbg !10679 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10681, metadata !DIExpression()), !dbg !10682
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10683
  %3 = and i32 %2, -7169, !dbg !10683
  %4 = or i32 %3, %0, !dbg !10683
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10683
  ret void, !dbg !10684
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.74(i32 noundef %0) unnamed_addr #13 !dbg !10685 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10687, metadata !DIExpression()), !dbg !10688
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10689
  %3 = and i32 %2, -57345, !dbg !10689
  %4 = or i32 %3, %0, !dbg !10689
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10689
  ret void, !dbg !10690
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #14 !dbg !10691 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10692
  %2 = lshr i32 %1, 27, !dbg !10693
  %3 = and i32 %2, 1, !dbg !10693
  ret i32 %3, !dbg !10694
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !10695 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10699, metadata !DIExpression()), !dbg !10705
  call void @llvm.dbg.value(metadata i32 %1, metadata !10700, metadata !DIExpression()), !dbg !10705
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !10701, metadata !DIExpression()), !dbg !10705
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !10702, metadata !DIExpression()), !dbg !10705
  call void @llvm.dbg.value(metadata i32 0, metadata !10703, metadata !DIExpression()), !dbg !10705
  call void @llvm.dbg.value(metadata i32 0, metadata !10704, metadata !DIExpression()), !dbg !10705
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !10706
  %6 = icmp eq i32 %5, 0, !dbg !10708
  br i1 %6, label %7, label %27, !dbg !10709

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !10710
  call void @llvm.dbg.value(metadata i32 %8, metadata !10704, metadata !DIExpression()), !dbg !10705
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !10712
  %10 = icmp eq i32 %9, 1, !dbg !10714
  br i1 %10, label %19, label %11, !dbg !10715

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !10716
  br i1 %12, label %13, label %14, !dbg !10719

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !10720
  br label %15, !dbg !10722

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !10723
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !10725
  br label %16, !dbg !10726

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !10727
  %18 = icmp eq i32 %17, 1, !dbg !10728
  br i1 %18, label %19, label %16, !dbg !10726, !llvm.loop !10729

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !10731
  %21 = load i32, i32* %20, align 4, !dbg !10731
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !10732
  %23 = load i32, i32* %22, align 4, !dbg !10732
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !10733
  %25 = load i32, i32* %24, align 4, !dbg !10733
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.67(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !10734
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !10735
  call void @llvm.dbg.value(metadata i32 %26, metadata !10703, metadata !DIExpression()), !dbg !10705
  br label %27, !dbg !10736

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !10737
  call void @llvm.dbg.value(metadata i32 %28, metadata !10703, metadata !DIExpression()), !dbg !10705
  ret i32 %28, !dbg !10738
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #14 !dbg !10739 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10740
  %2 = lshr i32 %1, 17, !dbg !10741
  %3 = and i32 %2, 1, !dbg !10741
  ret i32 %3, !dbg !10742
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #13 !dbg !10743 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10744
  %2 = or i32 %1, 262144, !dbg !10744
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10744
  ret void, !dbg !10745
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #13 !dbg !10746 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10747
  %2 = and i32 %1, -262145, !dbg !10747
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10747
  ret void, !dbg !10748
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #13 !dbg !10749 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10750
  %2 = or i32 %1, 65536, !dbg !10750
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10750
  ret void, !dbg !10751
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !10752 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10755, metadata !DIExpression()), !dbg !10771
  call void @llvm.dbg.value(metadata i32 undef, metadata !10755, metadata !DIExpression()), !dbg !10771
  call void @llvm.dbg.value(metadata i32 undef, metadata !10755, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !10771
  ret void, !dbg !10772
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !10773 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10777, metadata !DIExpression()), !dbg !10779
  %2 = icmp eq i8* %0, null, !dbg !10780
  br i1 %2, label %29, label %3, !dbg !10782

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !10783
  %5 = icmp eq i8 %4, 0, !dbg !10784
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !10785
  br i1 %6, label %29, label %8, !dbg !10785

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10778, metadata !DIExpression()), !dbg !10779
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !10786

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !10778, metadata !DIExpression()), !dbg !10779
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !10788
  br i1 %10, label %11, label %15, !dbg !10793

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !10794
  %13 = load i8*, i8** %12, align 4, !dbg !10794
  %14 = icmp eq i8* %13, %0, !dbg !10795
  br i1 %14, label %29, label %15, !dbg !10796

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !10797
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !10778, metadata !DIExpression()), !dbg !10779
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10798
  br i1 %17, label %7, label %8, !dbg !10799, !llvm.loop !10800

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !10778, metadata !DIExpression()), !dbg !10779
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !10802
  br i1 %20, label %21, label %26, !dbg !10806

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !10807
  %23 = load i8*, i8** %22, align 4, !dbg !10807
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !10808
  %25 = icmp eq i32 %24, 0, !dbg !10809
  br i1 %25, label %29, label %26, !dbg !10810

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !10811
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !10778, metadata !DIExpression()), !dbg !10779
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10812
  br i1 %28, label %29, label %18, !dbg !10786, !llvm.loop !10813

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !10779
  ret %struct.device* %30, !dbg !10815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !10816 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10820, metadata !DIExpression()), !dbg !10821
  %2 = icmp eq %struct.device* %0, null, !dbg !10822
  br i1 %2, label %14, label %3, !dbg !10824

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !10825
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !10825
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !10826
  %7 = load i8, i8* %6, align 1, !dbg !10826
  %8 = and i8 %7, 1, !dbg !10826
  %9 = icmp eq i8 %8, 0, !dbg !10826
  br i1 %9, label %14, label %10, !dbg !10827

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !10828
  %12 = load i8, i8* %11, align 1, !dbg !10828
  %13 = icmp eq i8 %12, 0, !dbg !10829
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !10821
  ret i1 %15, !dbg !10830
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !10831 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !10836, metadata !DIExpression()), !dbg !10837
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !10838
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !10839
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10840 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10848, metadata !DIExpression()), !dbg !10853
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10849, metadata !DIExpression()), !dbg !10853
  call void @llvm.dbg.value(metadata i8* %2, metadata !10850, metadata !DIExpression()), !dbg !10853
  %5 = bitcast i32* %4 to i8*, !dbg !10854
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10854
  call void @llvm.dbg.value(metadata i32 0, metadata !10851, metadata !DIExpression()), !dbg !10853
  store i32 0, i32* %4, align 4, !dbg !10855
  call void @llvm.dbg.value(metadata i32* %4, metadata !10851, metadata !DIExpression(DW_OP_deref)), !dbg !10853
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !10856
  call void @llvm.dbg.value(metadata i16* %6, metadata !10852, metadata !DIExpression()), !dbg !10853
  %7 = load i32, i32* %4, align 4, !dbg !10857
  call void @llvm.dbg.value(metadata i32 %7, metadata !10851, metadata !DIExpression()), !dbg !10853
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !10858
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10859
  ret i32 %8, !dbg !10860
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !10861 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10865, metadata !DIExpression()), !dbg !10871
  call void @llvm.dbg.value(metadata i32* %1, metadata !10866, metadata !DIExpression()), !dbg !10871
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10872
  %4 = load i16*, i16** %3, align 4, !dbg !10872
  call void @llvm.dbg.value(metadata i16* %4, metadata !10867, metadata !DIExpression()), !dbg !10871
  %5 = icmp eq i16* %4, null, !dbg !10873
  br i1 %5, label %14, label %6, !dbg !10874

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !10875
  call void @llvm.dbg.value(metadata i32 %7, metadata !10868, metadata !DIExpression()), !dbg !10875
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !10876
  %9 = load i16, i16* %8, align 2, !dbg !10876
  %10 = add i16 %9, -32767, !dbg !10877
  %11 = icmp ult i16 %10, 2, !dbg !10877
  %12 = add i32 %7, 1, !dbg !10878
  call void @llvm.dbg.value(metadata i32 %12, metadata !10868, metadata !DIExpression()), !dbg !10875
  br i1 %11, label %13, label %6, !dbg !10877, !llvm.loop !10880

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !10883
  br label %14, !dbg !10884

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !10885
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !10886 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !10890, metadata !DIExpression()), !dbg !10901
  call void @llvm.dbg.value(metadata i32 %1, metadata !10891, metadata !DIExpression()), !dbg !10901
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !10892, metadata !DIExpression()), !dbg !10901
  call void @llvm.dbg.value(metadata i8* %3, metadata !10893, metadata !DIExpression()), !dbg !10901
  call void @llvm.dbg.value(metadata i32 0, metadata !10894, metadata !DIExpression()), !dbg !10902
  %5 = icmp eq i32 %1, 0, !dbg !10903
  br i1 %5, label %16, label %8, !dbg !10904

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !10894, metadata !DIExpression()), !dbg !10902
  %7 = icmp eq i32 %15, %1, !dbg !10903
  br i1 %7, label %16, label %8, !dbg !10904, !llvm.loop !10905

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10894, metadata !DIExpression()), !dbg !10902
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !10907
  %11 = load i16, i16* %10, align 2, !dbg !10907
  call void @llvm.dbg.value(metadata i16 %11, metadata !10896, metadata !DIExpression()), !dbg !10908
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !10909
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !10899, metadata !DIExpression()), !dbg !10908
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !10910
  call void @llvm.dbg.value(metadata i32 %13, metadata !10900, metadata !DIExpression()), !dbg !10908
  %14 = icmp slt i32 %13, 0, !dbg !10911
  %15 = add nuw i32 %9, 1, !dbg !10913
  call void @llvm.dbg.value(metadata i32 %15, metadata !10894, metadata !DIExpression()), !dbg !10902
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !10914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #12 !dbg !10915 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10919, metadata !DIExpression()), !dbg !10922
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !10920, metadata !DIExpression()), !dbg !10922
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !10921, metadata !DIExpression()), !dbg !10922
  %2 = sext i16 %0 to i32, !dbg !10923
  %3 = icmp slt i16 %0, 1, !dbg !10925
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !10926
  %6 = add nsw i32 %2, -1, !dbg !10926
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !10926
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !10926
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10920, metadata !DIExpression()), !dbg !10922
  ret %struct.device* %8, !dbg !10927
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10928 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10930, metadata !DIExpression()), !dbg !10935
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10931, metadata !DIExpression()), !dbg !10935
  call void @llvm.dbg.value(metadata i8* %2, metadata !10932, metadata !DIExpression()), !dbg !10935
  %5 = bitcast i32* %4 to i8*, !dbg !10936
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10936
  call void @llvm.dbg.value(metadata i32 0, metadata !10933, metadata !DIExpression()), !dbg !10935
  store i32 0, i32* %4, align 4, !dbg !10937
  call void @llvm.dbg.value(metadata i32* %4, metadata !10933, metadata !DIExpression(DW_OP_deref)), !dbg !10935
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !10938
  call void @llvm.dbg.value(metadata i16* %6, metadata !10934, metadata !DIExpression()), !dbg !10935
  %7 = load i32, i32* %4, align 4, !dbg !10939
  call void @llvm.dbg.value(metadata i32 %7, metadata !10933, metadata !DIExpression()), !dbg !10935
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !10940
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10941
  ret i32 %8, !dbg !10942
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !10943 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10945, metadata !DIExpression()), !dbg !10950
  call void @llvm.dbg.value(metadata i32* %1, metadata !10946, metadata !DIExpression()), !dbg !10950
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10951
  %4 = load i16*, i16** %3, align 4, !dbg !10951
  call void @llvm.dbg.value(metadata i16* %4, metadata !10947, metadata !DIExpression()), !dbg !10950
  call void @llvm.dbg.value(metadata i32 0, metadata !10948, metadata !DIExpression()), !dbg !10950
  call void @llvm.dbg.value(metadata i32 0, metadata !10949, metadata !DIExpression()), !dbg !10950
  %5 = icmp eq i16* %4, null, !dbg !10952
  br i1 %5, label %22, label %6, !dbg !10954

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10948, metadata !DIExpression()), !dbg !10950
  call void @llvm.dbg.value(metadata i16* %8, metadata !10947, metadata !DIExpression()), !dbg !10950
  %9 = load i16, i16* %8, align 2, !dbg !10955
  %10 = icmp eq i16 %9, -32768, !dbg !10959
  call void @llvm.dbg.value(metadata i32 undef, metadata !10948, metadata !DIExpression()), !dbg !10950
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !10960
  call void @llvm.dbg.value(metadata i16* %11, metadata !10947, metadata !DIExpression()), !dbg !10950
  %12 = zext i1 %10 to i32, !dbg !10961
  %13 = add i32 %7, %12, !dbg !10961
  call void @llvm.dbg.value(metadata i32 %13, metadata !10948, metadata !DIExpression()), !dbg !10950
  %14 = icmp eq i32 %13, 2, !dbg !10962
  br i1 %14, label %15, label %6, !dbg !10963

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !10950
  call void @llvm.dbg.value(metadata i32 %16, metadata !10949, metadata !DIExpression()), !dbg !10950
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !10964
  %18 = load i16, i16* %17, align 2, !dbg !10964
  %19 = icmp eq i16 %18, 32767, !dbg !10965
  %20 = add i32 %16, 1, !dbg !10966
  call void @llvm.dbg.value(metadata i32 %20, metadata !10949, metadata !DIExpression()), !dbg !10950
  br i1 %19, label %21, label %15, !dbg !10968, !llvm.loop !10969

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !10971
  br label %22, !dbg !10972

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !10973
  call void @llvm.dbg.value(metadata i16* %23, metadata !10947, metadata !DIExpression()), !dbg !10950
  ret i16* %23, !dbg !10974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !10975 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10978
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !10979
  ret i32* %2, !dbg !10980
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #12 !dbg !10981 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11129, metadata !DIExpression()), !dbg !11132
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !11130, metadata !DIExpression()), !dbg !11132
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11131, metadata !DIExpression()), !dbg !11132
  ret void, !dbg !11133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !11134 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11138, metadata !DIExpression()), !dbg !11140
  call void @llvm.dbg.value(metadata i32 %1, metadata !11139, metadata !DIExpression()), !dbg !11140
  ret void, !dbg !11141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !11142 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11146, metadata !DIExpression()), !dbg !11148
  call void @llvm.dbg.value(metadata i32 %1, metadata !11147, metadata !DIExpression()), !dbg !11148
  ret void, !dbg !11149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11150 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11154, metadata !DIExpression()), !dbg !11156
  call void @llvm.dbg.value(metadata i8* %1, metadata !11155, metadata !DIExpression()), !dbg !11156
  ret i32 -134, !dbg !11157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11162, metadata !DIExpression()), !dbg !11164
  call void @llvm.dbg.value(metadata i8* %1, metadata !11163, metadata !DIExpression()), !dbg !11164
  ret i32 -134, !dbg !11165
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !11166 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11169, metadata !DIExpression()), !dbg !11170
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11171, !srcloc !11177
  call void @llvm.dbg.value(metadata i32 undef, metadata !11174, metadata !DIExpression()) #23, !dbg !11178
  call void @llvm.dbg.value(metadata i32 undef, metadata !11175, metadata !DIExpression()) #23, !dbg !11178
  br label %3, !dbg !11179

3:                                                ; preds = %3, %1
  br label %3, !dbg !11180, !llvm.loop !11183
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11190, metadata !DIExpression()), !dbg !11192
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11191, metadata !DIExpression()), !dbg !11192
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11193
  unreachable, !dbg !11193
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !11194 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11196, metadata !DIExpression()), !dbg !11197
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11198
  unreachable, !dbg !11198
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11201, metadata !DIExpression()), !dbg !11205
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11202, metadata !DIExpression()), !dbg !11205
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11206, !srcloc !11177
  call void @llvm.dbg.value(metadata i32 undef, metadata !11174, metadata !DIExpression()) #23, !dbg !11208
  call void @llvm.dbg.value(metadata i32 undef, metadata !11175, metadata !DIExpression()) #23, !dbg !11208
  call void @llvm.dbg.value(metadata i32 undef, metadata !11203, metadata !DIExpression()), !dbg !11205
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11204, metadata !DIExpression()), !dbg !11205
  %4 = icmp eq %struct.__esf* %1, null, !dbg !11209
  br i1 %4, label %6, label %5, !dbg !11211

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !11212
  br label %7, !dbg !11213

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !11212
  br label %7, !dbg !11216

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !11206
  call void @llvm.dbg.value(metadata i32 %8, metadata !11174, metadata !DIExpression()) #23, !dbg !11208
  call void @llvm.dbg.value(metadata i32 %8, metadata !11203, metadata !DIExpression()), !dbg !11205
  %9 = tail call fastcc %struct.k_thread* @k_current_get.81() #26, !dbg !11218
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !11204, metadata !DIExpression()), !dbg !11205
  call void @llvm.dbg.value(metadata i32 undef, metadata !11219, metadata !DIExpression()) #23, !dbg !11222
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !11224, !srcloc !11225
  tail call fastcc void @k_thread_abort.82(%struct.k_thread* noundef %9) #24, !dbg !11226
  ret void, !dbg !11229
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.81() unnamed_addr #9 !dbg !11230 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.83() #26, !dbg !11234
  ret %struct.k_thread* %1, !dbg !11235
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.82(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11236 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11240, metadata !DIExpression()), !dbg !11241
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11242, !srcloc !11244
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !11245
  ret void, !dbg !11246
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.83() unnamed_addr #9 !dbg !11247 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11248, !srcloc !11250
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !11251
  ret %struct.k_thread* %1, !dbg !11252
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11253 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11257, metadata !DIExpression()), !dbg !11260
  call void @llvm.dbg.value(metadata i32 %1, metadata !11258, metadata !DIExpression()), !dbg !11260
  call void @llvm.dbg.value(metadata i32 %2, metadata !11259, metadata !DIExpression()), !dbg !11260
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !11261
  ret void, !dbg !11262
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11263 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11267, metadata !DIExpression()), !dbg !11270
  call void @llvm.dbg.value(metadata i8* %1, metadata !11268, metadata !DIExpression()), !dbg !11270
  call void @llvm.dbg.value(metadata i32 %2, metadata !11269, metadata !DIExpression()), !dbg !11270
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !11271
  ret void, !dbg !11272
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !11273 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !11274
  ret void, !dbg !11275
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !11276 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11278, metadata !DIExpression()), !dbg !11279
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !11280
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11281
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !11282
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !11283
  %4 = trunc i32 %0 to i8, !dbg !11284
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !11285
  store i8 %4, i8* %5, align 4, !dbg !11286
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !11287
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !11288
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !11289
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !11290
  store i8* %8, i8** %9, align 4, !dbg !11291
  ret void, !dbg !11292
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !11293 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11295, metadata !DIExpression()), !dbg !11301
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11302
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11296, metadata !DIExpression()), !dbg !11301
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !11303
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !11297, metadata !DIExpression()), !dbg !11301
  call void @llvm.dbg.value(metadata i8* null, metadata !11300, metadata !DIExpression()), !dbg !11301
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !11304
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !11305
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !11306
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !11307
  ret void, !dbg !11308
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !11309 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11313, metadata !DIExpression()), !dbg !11314
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11315
  ret i8* %2, !dbg !11316
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !11317 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11322, metadata !DIExpression()), !dbg !11323
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11324
  %3 = load i8, i8* %2, align 1, !dbg !11325
  %4 = and i8 %3, -5, !dbg !11325
  store i8 %4, i8* %2, align 1, !dbg !11325
  ret void, !dbg !11326
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !11327 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !11330
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !11331
  %3 = ptrtoint i8* %2 to i32, !dbg !11340
  %4 = add i32 %3, 2048, !dbg !11341
  call void @llvm.dbg.value(metadata i32 %4, metadata !11335, metadata !DIExpression()) #23, !dbg !11342
  call void @llvm.dbg.value(metadata i32 %4, metadata !11343, metadata !DIExpression()) #23, !dbg !11346
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !11348, !srcloc !11349
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11350
  %6 = or i32 %5, 512, !dbg !11350
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11350
  tail call fastcc void @__NVIC_SetPriority.90(i32 noundef -2, i32 noundef 255) #25, !dbg !11351
  tail call fastcc void @__NVIC_SetPriority.90(i32 noundef -5, i32 noundef 0) #25, !dbg !11354
  tail call fastcc void @__NVIC_SetPriority.90(i32 noundef -12, i32 noundef 0) #25, !dbg !11355
  tail call fastcc void @__NVIC_SetPriority.90(i32 noundef -11, i32 noundef 0) #25, !dbg !11356
  tail call fastcc void @__NVIC_SetPriority.90(i32 noundef -10, i32 noundef 0) #25, !dbg !11357
  tail call fastcc void @__NVIC_SetPriority.90(i32 noundef -4, i32 noundef 0) #25, !dbg !11358
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11359
  %8 = or i32 %7, 458752, !dbg !11359
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11359
  tail call void @z_arm_fault_init() #25, !dbg !11360
  tail call void @z_arm_cpu_idle_init() #25, !dbg !11361
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !11362
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !11365
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !11366
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !11367
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !11368
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !11368
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !11329, metadata !DIExpression()), !dbg !11369
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !11370
  call void @z_device_state_init() #25, !dbg !11371
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !11372
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !11373
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !11374
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !11375
  unreachable, !dbg !11375
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1847 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1851, metadata !DIExpression()), !dbg !11376
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !11377
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !11377
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1852, metadata !DIExpression()), !dbg !11376
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1852, metadata !DIExpression()), !dbg !11376
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !11378
  br i1 %7, label %8, label %35, !dbg !11379

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1852, metadata !DIExpression()), !dbg !11376
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !11380
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !11380
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1862, metadata !DIExpression()), !dbg !11381
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !11382
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !11382
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !11383
  call void @llvm.dbg.value(metadata i32 %14, metadata !1866, metadata !DIExpression()), !dbg !11381
  %15 = icmp eq %struct.device* %11, null, !dbg !11384
  br i1 %15, label %32, label %16, !dbg !11386

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !11387
  br i1 %17, label %26, label %18, !dbg !11390

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !11391
  call void @llvm.dbg.value(metadata i32 %19, metadata !1866, metadata !DIExpression()), !dbg !11381
  %20 = icmp ult i32 %19, 255, !dbg !11393
  %21 = select i1 %20, i32 %19, i32 255, !dbg !11393
  call void @llvm.dbg.value(metadata i32 %21, metadata !1866, metadata !DIExpression()), !dbg !11381
  %22 = trunc i32 %21 to i8, !dbg !11394
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11395
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !11395
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !11396
  store i8 %22, i8* %25, align 1, !dbg !11397
  br label %26, !dbg !11398

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11399
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !11399
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !11400
  %30 = load i8, i8* %29, align 1, !dbg !11401
  %31 = or i8 %30, 1, !dbg !11401
  store i8 %31, i8* %29, align 1, !dbg !11401
  br label %32, !dbg !11402

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !11403
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1852, metadata !DIExpression()), !dbg !11376
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !11378
  br i1 %34, label %8, label %35, !dbg !11379, !llvm.loop !11404

35:                                               ; preds = %32, %1
  ret void, !dbg !11406
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.90(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !11407 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11409, metadata !DIExpression()), !dbg !11411
  call void @llvm.dbg.value(metadata i32 %1, metadata !11410, metadata !DIExpression()), !dbg !11411
  %3 = trunc i32 %1 to i8, !dbg !11412
  %4 = shl i8 %3, 4, !dbg !11412
  %5 = and i32 %0, 15, !dbg !11415
  %6 = add nsw i32 %5, -4, !dbg !11416
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !11417
  store volatile i8 %4, i8* %7, align 1, !dbg !11418
  ret void, !dbg !11419
}

; Function Attrs: optsize
declare !dbg !11420 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !11421 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11424, metadata !DIExpression()), !dbg !11425
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11426
  store i8 1, i8* %2, align 1, !dbg !11427
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !11428
  store i8 1, i8* %3, align 4, !dbg !11429
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11430
  store i32 0, i32* %4, align 4, !dbg !11431
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11432
  store i32 0, i32* %5, align 4, !dbg !11433
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11434
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !11435
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11436
  ret void, !dbg !11437
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !11438 {
  tail call void @z_sched_init() #25, !dbg !11443
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11444
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.91, i32 0, i32 0)) #25, !dbg !11445
  call void @llvm.dbg.value(metadata i8* %1, metadata !11442, metadata !DIExpression()), !dbg !11446
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !11447
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !11448
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !11449
  ret i8* %1, !dbg !11450
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !11451 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11455, metadata !DIExpression()), !dbg !11456
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !11457
  unreachable, !dbg !11458
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !11459 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11461, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata i8* %1, metadata !11462, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata i8* %2, metadata !11463, metadata !DIExpression()), !dbg !11464
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !11465
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !11466
  tail call void @boot_banner() #25, !dbg !11467
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !11468
  tail call void @z_init_static_threads() #25, !dbg !11469
  tail call void @main() #25, !dbg !11470
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11471
  %5 = and i8 %4, -2, !dbg !11471
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11471
  ret void, !dbg !11472
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !11473 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11483, metadata !DIExpression()), !dbg !11485
  call void @llvm.dbg.value(metadata i8* %1, metadata !11484, metadata !DIExpression()), !dbg !11485
  ret void, !dbg !11486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !11487 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11489, metadata !DIExpression()), !dbg !11491
  call void @llvm.dbg.value(metadata i8* %1, metadata !11490, metadata !DIExpression()), !dbg !11491
  ret void, !dbg !11492
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !11493 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !11494, !srcloc !11501
  call void @llvm.dbg.value(metadata i32 %1, metadata !11497, metadata !DIExpression()) #23, !dbg !11502
  %2 = icmp ne i32 %1, 0, !dbg !11503
  ret i1 %2, !dbg !11504
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !11505 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11506
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11507
  %3 = load i8, i8* %2, align 4, !dbg !11508
  %4 = or i8 %3, 1, !dbg !11508
  store i8 %4, i8* %2, align 4, !dbg !11508
  ret void, !dbg !11509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !11510 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11511
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11512
  %3 = load i8, i8* %2, align 4, !dbg !11513
  %4 = and i8 %3, -2, !dbg !11513
  store i8 %4, i8* %2, align 4, !dbg !11513
  ret void, !dbg !11514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !11515 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11516
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11517
  %3 = load i8, i8* %2, align 4, !dbg !11517
  %4 = and i8 %3, 1, !dbg !11518
  %5 = icmp ne i8 %4, 0, !dbg !11519
  ret i1 %5, !dbg !11520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11521 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11525, metadata !DIExpression()), !dbg !11527
  call void @llvm.dbg.value(metadata i8* %1, metadata !11526, metadata !DIExpression()), !dbg !11527
  ret i32 -88, !dbg !11528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !11529 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11533, metadata !DIExpression()), !dbg !11534
  ret i8* null, !dbg !11535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #12 !dbg !11536 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11540, metadata !DIExpression()), !dbg !11543
  call void @llvm.dbg.value(metadata i8* %1, metadata !11541, metadata !DIExpression()), !dbg !11543
  call void @llvm.dbg.value(metadata i32 %2, metadata !11542, metadata !DIExpression()), !dbg !11543
  ret i32 -88, !dbg !11544
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1875 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !1989, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.value(metadata i8* %1, metadata !1990, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.value(metadata i32 %2, metadata !1991, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.value(metadata i32 0, metadata !1992, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.value(metadata i8 undef, metadata !1994, metadata !DIExpression()), !dbg !11545
  %4 = icmp eq i8* %1, null, !dbg !11546
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !11548
  br i1 %6, label %46, label %7, !dbg !11548

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11549
  %9 = load i8, i8* %8, align 1, !dbg !11549
  call void @llvm.dbg.value(metadata i8 %9, metadata !1994, metadata !DIExpression()), !dbg !11545
  %10 = add i32 %2, -1, !dbg !11550
  call void @llvm.dbg.value(metadata i32 %10, metadata !1991, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.value(metadata i8 0, metadata !1995, metadata !DIExpression()), !dbg !11551
  call void @llvm.dbg.value(metadata i8 %9, metadata !1994, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.value(metadata i32 0, metadata !1992, metadata !DIExpression()), !dbg !11545
  %11 = icmp eq i8 %9, 0, !dbg !11552
  br i1 %11, label %12, label %15, !dbg !11554

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !11555
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !11556
  store i8 0, i8* %14, align 1, !dbg !11557
  br label %46, !dbg !11558

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !1995, metadata !DIExpression()), !dbg !11551
  call void @llvm.dbg.value(metadata i8 %17, metadata !1994, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.value(metadata i32 %18, metadata !1992, metadata !DIExpression()), !dbg !11545
  %19 = zext i8 %17 to i32, !dbg !11559
  %20 = zext i8 %16 to i32, !dbg !11560
  %21 = shl nuw i32 1, %20, !dbg !11560
  call void @llvm.dbg.value(metadata i32 %21, metadata !1993, metadata !DIExpression()), !dbg !11545
  %22 = and i32 %21, %19, !dbg !11562
  %23 = icmp eq i32 %22, 0, !dbg !11564
  br i1 %23, label %42, label %24, !dbg !11565

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !11566
  %26 = sub i32 %10, %18, !dbg !11567
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !11568
  %28 = load i8*, i8** %27, align 4, !dbg !11568
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !11569
  %30 = load i32, i32* %29, align 4, !dbg !11569
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !11570
  %32 = add i32 %31, %18, !dbg !11571
  call void @llvm.dbg.value(metadata i32 %32, metadata !1992, metadata !DIExpression()), !dbg !11545
  %33 = trunc i32 %21 to i8, !dbg !11572
  %34 = xor i8 %33, -1, !dbg !11572
  %35 = and i8 %17, %34, !dbg !11572
  call void @llvm.dbg.value(metadata i8 %35, metadata !1994, metadata !DIExpression()), !dbg !11545
  %36 = icmp eq i8 %35, 0, !dbg !11573
  br i1 %36, label %12, label %37, !dbg !11575

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !11576
  %39 = sub i32 %10, %32, !dbg !11578
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #24, !dbg !11579
  %41 = add i32 %40, %32, !dbg !11580
  call void @llvm.dbg.value(metadata i32 %41, metadata !1992, metadata !DIExpression()), !dbg !11545
  br label %42, !dbg !11581

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !11545
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !11545
  call void @llvm.dbg.value(metadata i8 %44, metadata !1994, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.value(metadata i32 %43, metadata !1992, metadata !DIExpression()), !dbg !11545
  %45 = add i8 %16, 1, !dbg !11582
  call void @llvm.dbg.value(metadata i8 %45, metadata !1995, metadata !DIExpression()), !dbg !11551
  br label %15, !dbg !11554

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.92, i32 0, i32 0), %3 ], !dbg !11545
  ret i8* %47, !dbg !11583
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11584 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11588, metadata !DIExpression()), !dbg !11593
  call void @llvm.dbg.value(metadata i32 %1, metadata !11589, metadata !DIExpression()), !dbg !11593
  call void @llvm.dbg.value(metadata i8* %2, metadata !11590, metadata !DIExpression()), !dbg !11593
  call void @llvm.dbg.value(metadata i32 %3, metadata !11591, metadata !DIExpression()), !dbg !11593
  %5 = icmp ult i32 %1, %3, !dbg !11594
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !11594
  call void @llvm.dbg.value(metadata i32 %6, metadata !11592, metadata !DIExpression()), !dbg !11593
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !11595
  ret i32 %6, !dbg !11596
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11597 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11601, metadata !DIExpression()), !dbg !11602
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !11603
  ret void, !dbg !11604
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !11605 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11614, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11615, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.value(metadata i32 %2, metadata !11616, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11617, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.value(metadata i8* %4, metadata !11618, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.value(metadata i8* %5, metadata !11619, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.value(metadata i8* %6, metadata !11620, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.value(metadata i32 %7, metadata !11621, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.value(metadata i32 %8, metadata !11622, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.value(metadata i8* undef, metadata !11623, metadata !DIExpression()), !dbg !11625
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !11626
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #24, !dbg !11627
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !11628
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !11629
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !11630
  call void @llvm.dbg.value(metadata i8* %13, metadata !11624, metadata !DIExpression()), !dbg !11625
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !11631
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !11632
  store i8* null, i8** %14, align 4, !dbg !11633
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11634
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !11634
  br i1 %16, label %20, label %17, !dbg !11636

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !11637
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !11637
  br label %20, !dbg !11638

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !11625
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11639
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !11641
  ret i8* %13, !dbg !11642
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !11643 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11648, metadata !DIExpression()), !dbg !11649
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !11650
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !11651
  ret void, !dbg !11652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !11653 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11658, metadata !DIExpression()), !dbg !11662
  call void @llvm.dbg.value(metadata i32 %1, metadata !11659, metadata !DIExpression()), !dbg !11662
  call void @llvm.dbg.value(metadata i32 %2, metadata !11660, metadata !DIExpression()), !dbg !11662
  call void @llvm.dbg.value(metadata i32 %3, metadata !11661, metadata !DIExpression()), !dbg !11662
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !11663
  store %union.anon* null, %union.anon** %5, align 8, !dbg !11664
  %6 = trunc i32 %3 to i8, !dbg !11665
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !11666
  store i8 %6, i8* %7, align 4, !dbg !11667
  %8 = trunc i32 %2 to i8, !dbg !11668
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !11669
  store i8 %8, i8* %9, align 1, !dbg !11670
  %10 = trunc i32 %1 to i8, !dbg !11671
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !11672
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !11672
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !11672
  store i8 %10, i8* %13, align 2, !dbg !11673
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !11674
  store i8 0, i8* %14, align 1, !dbg !11675
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !11676
  ret void, !dbg !11677
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !11678 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11682, metadata !DIExpression()), !dbg !11690
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11683, metadata !DIExpression()), !dbg !11690
  call void @llvm.dbg.value(metadata i32 %2, metadata !11684, metadata !DIExpression()), !dbg !11690
  call void @llvm.dbg.value(metadata i32 0, metadata !11689, metadata !DIExpression()), !dbg !11690
  %4 = add i32 %2, 7, !dbg !11691
  %5 = and i32 %4, -8, !dbg !11691
  %6 = add i32 %5, 64, !dbg !11691
  call void @llvm.dbg.value(metadata i32 %6, metadata !11685, metadata !DIExpression()), !dbg !11690
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.102(%struct.z_thread_stack_element* noundef %1) #24, !dbg !11693
  call void @llvm.dbg.value(metadata i8* %7, metadata !11688, metadata !DIExpression()), !dbg !11690
  call void @llvm.dbg.value(metadata i32 %5, metadata !11686, metadata !DIExpression()), !dbg !11690
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !11694
  call void @llvm.dbg.value(metadata i8* %8, metadata !11687, metadata !DIExpression()), !dbg !11690
  call void @llvm.dbg.value(metadata i32 0, metadata !11689, metadata !DIExpression()), !dbg !11690
  %9 = ptrtoint i8* %7 to i32, !dbg !11695
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11696
  store i32 %9, i32* %10, align 4, !dbg !11697
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11698
  store i32 %5, i32* %11, align 4, !dbg !11699
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !11700
  store i32 0, i32* %12, align 4, !dbg !11701
  call void @llvm.dbg.value(metadata i8* %8, metadata !11687, metadata !DIExpression()), !dbg !11690
  ret i8* %8, !dbg !11702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.102(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !11703 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11707, metadata !DIExpression()), !dbg !11708
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11709
  ret i8* %2, !dbg !11710
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11711 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11716, metadata !DIExpression()), !dbg !11717
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !11718
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !11719
  ret void, !dbg !11720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11721 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11723, metadata !DIExpression()), !dbg !11724
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11725
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !11726
  ret void, !dbg !11727
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11728 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11732, metadata !DIExpression()), !dbg !11733
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11734
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !11735
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11736
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !11737
  ret void, !dbg !11738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !11739 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11744, metadata !DIExpression()), !dbg !11745
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11746
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !11747
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11748
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !11749
  ret void, !dbg !11750
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !11751 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !11768, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11759, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11760, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.value(metadata i32 %2, metadata !11761, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11762, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.value(metadata i8* %4, metadata !11763, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.value(metadata i8* %5, metadata !11764, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.value(metadata i8* %6, metadata !11765, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.value(metadata i32 %7, metadata !11766, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.value(metadata i32 %8, metadata !11767, metadata !DIExpression()), !dbg !11769
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #24, !dbg !11770
  %13 = icmp eq i64 %11, -1, !dbg !11771
  br i1 %13, label %15, label %14, !dbg !11773

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !11774
  br label %15, !dbg !11776

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !11777
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11778 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !11783, metadata !DIExpression()), !dbg !11784
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11782, metadata !DIExpression()), !dbg !11784
  %4 = icmp eq i64 %3, 0, !dbg !11785
  br i1 %4, label %5, label %6, !dbg !11787

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !11788
  br label %7, !dbg !11790

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !11791
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !11793
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11794 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11798, metadata !DIExpression()), !dbg !11799
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11800, !srcloc !11802
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !11803
  ret void, !dbg !11804
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11805 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11808, metadata !DIExpression()), !dbg !11809
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11807, metadata !DIExpression()), !dbg !11809
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11810
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !11811
  ret void, !dbg !11812
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !11813 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11815, metadata !DIExpression()), !dbg !11835
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !11836

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !11837
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11833, metadata !DIExpression()), !dbg !11838
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !11839

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !11815, metadata !DIExpression()), !dbg !11835
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !11840
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11840
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !11843
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !11843
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !11844
  %9 = load i32, i32* %8, align 4, !dbg !11844
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !11845
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !11845
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !11846
  %13 = load i8*, i8** %12, align 4, !dbg !11846
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !11847
  %15 = load i8*, i8** %14, align 4, !dbg !11847
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !11848
  %17 = load i8*, i8** %16, align 4, !dbg !11848
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !11849
  %19 = load i32, i32* %18, align 4, !dbg !11849
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !11850
  %21 = load i32, i32* %20, align 4, !dbg !11850
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #24, !dbg !11851
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11852
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !11853
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !11854
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !11854
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !11855
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !11815, metadata !DIExpression()), !dbg !11835
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11856
  br i1 %27, label %2, label %1, !dbg !11836, !llvm.loop !11858

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !11837
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11833, metadata !DIExpression()), !dbg !11838
  br label %29, !dbg !11839

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !11860
  ret void, !dbg !11861

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !11833, metadata !DIExpression()), !dbg !11838
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !11862
  %33 = load i32, i32* %32, align 4, !dbg !11862
  %34 = icmp eq i32 %33, -1, !dbg !11866
  br i1 %34, label %43, label %35, !dbg !11867

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !11868
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !11868
  %38 = icmp sgt i32 %33, 0, !dbg !11870
  %39 = select i1 %38, i32 %33, i32 0, !dbg !11870
  %40 = zext i32 %39 to i64, !dbg !11870
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #24, !dbg !11870
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !11871
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #24, !dbg !11871
  br label %43, !dbg !11872

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !11873
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !11833, metadata !DIExpression()), !dbg !11838
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11874
  br i1 %45, label %30, label %29, !dbg !11839, !llvm.loop !11876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !11878 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !11883, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.value(metadata i64 %0, metadata !11885, metadata !DIExpression()), !dbg !11902
  call void @llvm.dbg.value(metadata i32 1000, metadata !11890, metadata !DIExpression()), !dbg !11902
  call void @llvm.dbg.value(metadata i32 10000, metadata !11891, metadata !DIExpression()), !dbg !11902
  call void @llvm.dbg.value(metadata i8 1, metadata !11892, metadata !DIExpression()), !dbg !11902
  call void @llvm.dbg.value(metadata i8 0, metadata !11893, metadata !DIExpression()), !dbg !11902
  call void @llvm.dbg.value(metadata i8 1, metadata !11894, metadata !DIExpression()), !dbg !11902
  call void @llvm.dbg.value(metadata i8 0, metadata !11895, metadata !DIExpression()), !dbg !11902
  call void @llvm.dbg.value(metadata i8 1, metadata !11896, metadata !DIExpression()), !dbg !11902
  call void @llvm.dbg.value(metadata i8 0, metadata !11897, metadata !DIExpression()), !dbg !11902
  call void @llvm.dbg.value(metadata i64 0, metadata !11898, metadata !DIExpression()), !dbg !11902
  call void @llvm.dbg.value(metadata i64 0, metadata !11898, metadata !DIExpression()), !dbg !11902
  %2 = mul i64 %0, 10, !dbg !11904
  ret i64 %2, !dbg !11910
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !11911 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !11913, metadata !DIExpression()), !dbg !11917
  call void @llvm.dbg.value(metadata i8* %1, metadata !11914, metadata !DIExpression()), !dbg !11917
  call void @llvm.dbg.value(metadata i8* %2, metadata !11915, metadata !DIExpression()), !dbg !11917
  call void @llvm.dbg.value(metadata i8* %3, metadata !11916, metadata !DIExpression()), !dbg !11917
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11918
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !11919
  %7 = load i8, i8* %6, align 4, !dbg !11920
  %8 = or i8 %7, 4, !dbg !11920
  store i8 %8, i8* %6, align 4, !dbg !11920
  tail call void @z_thread_essential_clear() #24, !dbg !11921
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !11922
  unreachable, !dbg !11922
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !11923 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11927, metadata !DIExpression()), !dbg !11928
  ret i32 -134, !dbg !11929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #12 !dbg !11930 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11934, metadata !DIExpression()), !dbg !11936
  call void @llvm.dbg.value(metadata i32 %1, metadata !11935, metadata !DIExpression()), !dbg !11936
  ret i32 -134, !dbg !11937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #12 !dbg !11938 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11945, metadata !DIExpression()), !dbg !11947
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !11946, metadata !DIExpression()), !dbg !11947
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !11948
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !11950
  %6 = select i1 %5, i32 -22, i32 0, !dbg !11947
  ret i32 %6, !dbg !11951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #12 !dbg !11952 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !11956, metadata !DIExpression()), !dbg !11957
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !11958
  %3 = select i1 %2, i32 -22, i32 0, !dbg !11957
  ret i32 %3, !dbg !11960
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !11961 {
  tail call void @sys_clock_idle_exit() #25, !dbg !11963
  ret void, !dbg !11964
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !11965 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11967, metadata !DIExpression()), !dbg !11970
  call void @llvm.dbg.value(metadata i8* %1, metadata !11968, metadata !DIExpression()), !dbg !11970
  call void @llvm.dbg.value(metadata i8* %2, metadata !11969, metadata !DIExpression()), !dbg !11970
  br label %4, !dbg !11971

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11972, !srcloc !11979
  call void @llvm.dbg.value(metadata i32 undef, metadata !11975, metadata !DIExpression()) #23, !dbg !11980
  call void @llvm.dbg.value(metadata i32 undef, metadata !11976, metadata !DIExpression()) #23, !dbg !11980
  tail call fastcc void @k_cpu_idle() #24, !dbg !11981
  br label %4, !dbg !11971, !llvm.loop !11982
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !11984 {
  tail call void @arch_cpu_idle() #25, !dbg !11985
  ret void, !dbg !11986
}

; Function Attrs: optsize
declare !dbg !11987 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !11988 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11992, metadata !DIExpression()), !dbg !11996
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11993, metadata !DIExpression()), !dbg !11996
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !11997
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !11997
  %5 = load i8, i8* %4, align 2, !dbg !11997
  call void @llvm.dbg.value(metadata i8 %5, metadata !11994, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !11996
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !11998
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !11998
  %8 = load i8, i8* %7, align 2, !dbg !11998
  call void @llvm.dbg.value(metadata i8 %8, metadata !11995, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !11996
  %9 = icmp eq i8 %8, %5, !dbg !11999
  %10 = sext i8 %5 to i32, !dbg !12001
  %11 = sext i8 %8 to i32, !dbg !12001
  %12 = sub nsw i32 %11, %10, !dbg !12001
  %13 = select i1 %9, i32 0, i32 %12, !dbg !12001
  ret i32 %13, !dbg !12002
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !12003 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12007, metadata !DIExpression()), !dbg !12008
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !12009
  %3 = icmp eq i32 %2, 0, !dbg !12011
  br i1 %3, label %8, label %4, !dbg !12012

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !12013
  %6 = add i32 %5, %2, !dbg !12015
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12016
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !12017
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !12018
  br label %8, !dbg !12019

8:                                                ; preds = %4, %1
  ret void, !dbg !12020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !12021 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12025, metadata !DIExpression()), !dbg !12027
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !12028
  call void @llvm.dbg.value(metadata i32 %1, metadata !12026, metadata !DIExpression()), !dbg !12027
  ret i32 %1, !dbg !12029
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12030 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12034, metadata !DIExpression()), !dbg !12043
  call void @llvm.dbg.value(metadata i32 %1, metadata !12035, metadata !DIExpression()), !dbg !12043
  call void @llvm.dbg.value(metadata i32 0, metadata !12036, metadata !DIExpression()), !dbg !12044
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !12052
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12054, !srcloc !12060
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12054
  call void @llvm.dbg.value(metadata i32 %4, metadata !12057, metadata !DIExpression()) #23, !dbg !12061
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !12061
  call void @llvm.dbg.value(metadata i32 %4, metadata !12051, metadata !DIExpression()) #23, !dbg !12052
  call void @llvm.dbg.value(metadata i32 %4, metadata !12042, metadata !DIExpression()), !dbg !12044
  call void @llvm.dbg.value(metadata i32 undef, metadata !12036, metadata !DIExpression()), !dbg !12044
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12062
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !12065
  %6 = icmp sgt i32 %0, 0, !dbg !12066
  %7 = icmp sgt i32 %5, 2, !dbg !12068
  %8 = select i1 %7, i32 %5, i32 2, !dbg !12068
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !12068
  store i32 %9, i32* @slice_ticks, align 4, !dbg !12069
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !12070
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12071
  call void @llvm.dbg.value(metadata i32 %4, metadata !12072, metadata !DIExpression()) #23, !dbg !12078
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !12078
  call void @llvm.dbg.value(metadata i32 %4, metadata !12080, metadata !DIExpression()) #23, !dbg !12083
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12085, !srcloc !12086
  call void @llvm.dbg.value(metadata i32 1, metadata !12036, metadata !DIExpression()), !dbg !12044
  call void @llvm.dbg.value(metadata i32 undef, metadata !12036, metadata !DIExpression()), !dbg !12044
  ret void, !dbg !12087
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #12 !dbg !12088 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12090, metadata !DIExpression()), !dbg !12091
  call void @llvm.dbg.value(metadata i32 %0, metadata !12092, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12107
  call void @llvm.dbg.value(metadata i32 1000, metadata !12095, metadata !DIExpression()), !dbg !12107
  call void @llvm.dbg.value(metadata i32 10000, metadata !12096, metadata !DIExpression()), !dbg !12107
  call void @llvm.dbg.value(metadata i8 1, metadata !12097, metadata !DIExpression()), !dbg !12107
  call void @llvm.dbg.value(metadata i1 true, metadata !12098, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12107
  call void @llvm.dbg.value(metadata i1 true, metadata !12099, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12107
  call void @llvm.dbg.value(metadata i8 0, metadata !12100, metadata !DIExpression()), !dbg !12107
  call void @llvm.dbg.value(metadata i1 true, metadata !12101, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12107
  call void @llvm.dbg.value(metadata i1 false, metadata !12102, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12107
  call void @llvm.dbg.value(metadata i64 0, metadata !12103, metadata !DIExpression()), !dbg !12107
  call void @llvm.dbg.value(metadata i64 0, metadata !12103, metadata !DIExpression()), !dbg !12107
  %2 = mul i32 %0, 10, !dbg !12109
  ret i32 %2, !dbg !12115
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !12116 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12118, metadata !DIExpression()), !dbg !12120
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !12121
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12123, !srcloc !12060
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12123
  call void @llvm.dbg.value(metadata i32 %3, metadata !12057, metadata !DIExpression()) #23, !dbg !12125
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !12125
  call void @llvm.dbg.value(metadata i32 %3, metadata !12051, metadata !DIExpression()) #23, !dbg !12121
  call void @llvm.dbg.value(metadata i32 %3, metadata !12119, metadata !DIExpression()), !dbg !12120
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12126
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12128
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !12129
  br i1 %6, label %7, label %8, !dbg !12130

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12131
  call void @llvm.dbg.value(metadata i32 %3, metadata !12072, metadata !DIExpression()) #23, !dbg !12133
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !12133
  call void @llvm.dbg.value(metadata i32 %3, metadata !12080, metadata !DIExpression()) #23, !dbg !12135
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12137, !srcloc !12086
  br label %24, !dbg !12138

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12139
  %9 = tail call fastcc i32 @slice_time() #24, !dbg !12140
  %10 = icmp eq i32 %9, 0, !dbg !12140
  br i1 %10, label %21, label %11, !dbg !12142

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #24, !dbg !12143
  br i1 %12, label %13, label %21, !dbg !12144

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12145
  %15 = icmp sgt i32 %14, %0, !dbg !12148
  br i1 %15, label %19, label %16, !dbg !12149

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12150
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #24, !dbg !12150
  call void @llvm.dbg.value(metadata i32 %18, metadata !12119, metadata !DIExpression()), !dbg !12120
  br label %22, !dbg !12152

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !12153
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12153
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12155
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !12120
  call void @llvm.dbg.value(metadata i32 %23, metadata !12119, metadata !DIExpression()), !dbg !12120
  call void @llvm.dbg.value(metadata i32 %23, metadata !12072, metadata !DIExpression()) #23, !dbg !12157
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !12157
  call void @llvm.dbg.value(metadata i32 %23, metadata !12080, metadata !DIExpression()) #23, !dbg !12159
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !12161, !srcloc !12086
  br label %24, !dbg !12162

24:                                               ; preds = %22, %7
  ret void, !dbg !12162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !12163 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12167, metadata !DIExpression()), !dbg !12169
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !12170
  %3 = icmp eq i32 %2, 0, !dbg !12170
  br i1 %3, label %16, label %4, !dbg !12171

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !12172
  br i1 %5, label %16, label %6, !dbg !12173

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12174
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !12174
  %9 = load i8, i8* %8, align 2, !dbg !12174
  %10 = sext i8 %9 to i32, !dbg !12175
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !12176
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !12177
  br i1 %12, label %16, label %13, !dbg !12178

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !12179
  %15 = xor i1 %14, true, !dbg !12180
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !12169
  call void @llvm.dbg.value(metadata i1 %17, metadata !12168, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12169
  ret i1 %17, !dbg !12181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !12182 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12186, metadata !DIExpression()), !dbg !12188
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12189
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12187, metadata !DIExpression()), !dbg !12188
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !12190
  br i1 %3, label %5, label %4, !dbg !12192

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !12193
  br label %5, !dbg !12195

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !12186, metadata !DIExpression()), !dbg !12188
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12196
  ret i32 %6, !dbg !12197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12198 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12200, metadata !DIExpression()), !dbg !12202
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12203
  %3 = load i8, i8* %2, align 1, !dbg !12203
  call void @llvm.dbg.value(metadata i8 %3, metadata !12201, metadata !DIExpression()), !dbg !12202
  %4 = and i8 %3, 31, !dbg !12204
  %5 = icmp ne i8 %4, 0, !dbg !12205
  ret i1 %5, !dbg !12206
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12207 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12209, metadata !DIExpression()), !dbg !12210
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !12211
  br i1 %2, label %3, label %7, !dbg !12213

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12214, metadata !DIExpression()) #23, !dbg !12217
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12220
  %5 = load i8, i8* %4, align 1, !dbg !12221
  %6 = and i8 %5, 127, !dbg !12221
  store i8 %6, i8* %4, align 1, !dbg !12221
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12222, metadata !DIExpression()) #23, !dbg !12225
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !12229
  br label %7, !dbg !12230

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12231, metadata !DIExpression()) #23, !dbg !12234
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12236
  %9 = load i8, i8* %8, align 1, !dbg !12237
  %10 = or i8 %9, -128, !dbg !12237
  store i8 %10, i8* %8, align 1, !dbg !12237
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12238, metadata !DIExpression()) #23, !dbg !12241
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12245, metadata !DIExpression()) #23, !dbg !12253
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12251, metadata !DIExpression()) #23, !dbg !12253
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !12255
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !12252, metadata !DIExpression()) #23, !dbg !12253
  %12 = icmp eq %struct._dnode* %11, null, !dbg !12257
  br i1 %12, label %23, label %13, !dbg !12255

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !12252, metadata !DIExpression()) #23, !dbg !12253
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !12259
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !12252, metadata !DIExpression()) #23, !dbg !12253
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !12260
  %17 = icmp sgt i32 %16, 0, !dbg !12263
  br i1 %17, label %18, label %20, !dbg !12264

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12265
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !12267
  br label %25, !dbg !12268

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !12257
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !12252, metadata !DIExpression()) #23, !dbg !12253
  %22 = icmp eq %struct._dnode* %21, null, !dbg !12257
  br i1 %22, label %23, label %13, !dbg !12255, !llvm.loop !12269

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12271
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !12272
  br label %25, !dbg !12273

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12274
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !12275
  %28 = zext i1 %27 to i32, !dbg !12275
  tail call fastcc void @update_cache(i32 noundef %28) #24, !dbg !12276
  ret void, !dbg !12277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12278 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12280, metadata !DIExpression()), !dbg !12281
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #24, !dbg !12282
  ret i1 %2, !dbg !12283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !12284 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !12286, metadata !DIExpression()), !dbg !12288
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12287, metadata !DIExpression()), !dbg !12288
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !12289
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #24, !dbg !12290
  ret void, !dbg !12291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !12292 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12296, metadata !DIExpression()), !dbg !12297
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !12298
  br i1 %2, label %6, label %3, !dbg !12298

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12299
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12299
  br label %6, !dbg !12298

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !12298
  ret %struct._dnode* %7, !dbg !12300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !12301 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12305, metadata !DIExpression()), !dbg !12309
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12306, metadata !DIExpression()), !dbg !12309
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12310
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12310
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12307, metadata !DIExpression()), !dbg !12309
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12311
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !12312
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12313
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !12314
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12315
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12316
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12317
  ret void, !dbg !12318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !12319 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12323, metadata !DIExpression()), !dbg !12325
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12324, metadata !DIExpression()), !dbg !12325
  %3 = icmp eq %struct._dnode* %1, null, !dbg !12326
  br i1 %3, label %6, label %4, !dbg !12327

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !12328
  br label %6, !dbg !12327

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !12327
  ret %struct._dnode* %7, !dbg !12329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !12330 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12334, metadata !DIExpression()), !dbg !12337
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12335, metadata !DIExpression()), !dbg !12337
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12338
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12338
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12336, metadata !DIExpression()), !dbg !12337
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12339
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !12340
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12341
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !12342
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12343
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12344
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12345
  ret void, !dbg !12346
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !12347 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12349, metadata !DIExpression()), !dbg !12351
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !12352
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12359, metadata !DIExpression()) #23, !dbg !12361
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !12362
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !12363
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !12363
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12350, metadata !DIExpression()), !dbg !12351
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12364, metadata !DIExpression()) #23, !dbg !12370
  call void @llvm.dbg.value(metadata i32 %0, metadata !12369, metadata !DIExpression()) #23, !dbg !12370
  %6 = icmp eq i32 %0, 0, !dbg !12373
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12375
  br i1 %6, label %8, label %15, !dbg !12376

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !12377
  br i1 %9, label %15, label %10, !dbg !12379

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !12380
  br i1 %11, label %15, label %12, !dbg !12382

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !12383
  %14 = icmp eq i32 %13, 0, !dbg !12383
  br i1 %14, label %18, label %15, !dbg !12385

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !12386
  br i1 %16, label %18, label %17, !dbg !12389

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12390
  br label %18, !dbg !12392

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !12375
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12375
  ret void, !dbg !12393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !12394 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12398, metadata !DIExpression()), !dbg !12401
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12399, metadata !DIExpression()), !dbg !12401
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !12402
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !12400, metadata !DIExpression()), !dbg !12401
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12399, metadata !DIExpression()), !dbg !12401
  ret %struct.k_thread* %3, !dbg !12403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12404 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12406, metadata !DIExpression()), !dbg !12407
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12408
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !12409
  %4 = xor i1 %3, true, !dbg !12410
  ret i1 %4, !dbg !12411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12412 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12414, metadata !DIExpression()), !dbg !12415
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !12416
  %3 = load i16, i16* %2, align 2, !dbg !12416
  %4 = icmp ult i16 %3, 128, !dbg !12417
  %5 = zext i1 %4 to i32, !dbg !12417
  ret i32 %5, !dbg !12418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12419 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12425, metadata !DIExpression()), !dbg !12426
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12427
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !12428
  %4 = xor i1 %3, true, !dbg !12429
  ret i1 %4, !dbg !12430
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12431 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12437, metadata !DIExpression()), !dbg !12438
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12439
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12439
  %4 = icmp ne %struct._dnode* %3, null, !dbg !12440
  ret i1 %4, !dbg !12441
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !12442 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12444, metadata !DIExpression()), !dbg !12446
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12445, metadata !DIExpression()), !dbg !12446
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12447
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12447
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !12448
  br i1 %5, label %9, label %6, !dbg !12449

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12450
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !12450
  br label %9, !dbg !12449

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !12449
  ret %struct._dnode* %10, !dbg !12451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !12452 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12456, metadata !DIExpression()), !dbg !12457
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12458
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12458
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !12459
  ret i1 %4, !dbg !12460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !12461 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12465, metadata !DIExpression()), !dbg !12468
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12469
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12469
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !12466, metadata !DIExpression()), !dbg !12468
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12470
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12470
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !12467, metadata !DIExpression()), !dbg !12468
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !12471
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !12472
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !12473
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !12474
  tail call fastcc void @sys_dnode_init.107(%struct._dnode* noundef %0) #24, !dbg !12475
  ret void, !dbg !12476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.107(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12477 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12479, metadata !DIExpression()), !dbg !12480
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12481
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12482
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12483
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12484
  ret void, !dbg !12485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12486 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12490, metadata !DIExpression()), !dbg !12492
  call void @llvm.dbg.value(metadata i32 128, metadata !12491, metadata !DIExpression()), !dbg !12492
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12493
  %3 = load i8, i8* %2, align 1, !dbg !12493
  %4 = icmp slt i8 %3, 0, !dbg !12494
  ret i1 %4, !dbg !12495
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !12496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12500, metadata !DIExpression()), !dbg !12502
  call void @llvm.dbg.value(metadata i32 %1, metadata !12501, metadata !DIExpression()), !dbg !12502
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !12503
  ret i1 %3, !dbg !12504
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #12 !dbg !12505 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12507, metadata !DIExpression()), !dbg !12508
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !12509
  ret i1 %2, !dbg !12510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !12511 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12513, metadata !DIExpression()), !dbg !12515
  call void @llvm.dbg.value(metadata i32 %1, metadata !12514, metadata !DIExpression()), !dbg !12515
  %3 = icmp slt i32 %0, %1, !dbg !12516
  ret i1 %3, !dbg !12517
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12518 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12520, metadata !DIExpression()), !dbg !12524
  call void @llvm.dbg.value(metadata i32 0, metadata !12521, metadata !DIExpression()), !dbg !12525
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !12526
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12528, !srcloc !12060
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12528
  call void @llvm.dbg.value(metadata i32 %3, metadata !12057, metadata !DIExpression()) #23, !dbg !12530
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !12530
  call void @llvm.dbg.value(metadata i32 %3, metadata !12051, metadata !DIExpression()) #23, !dbg !12526
  call void @llvm.dbg.value(metadata i32 %3, metadata !12523, metadata !DIExpression()), !dbg !12525
  call void @llvm.dbg.value(metadata i32 undef, metadata !12521, metadata !DIExpression()), !dbg !12525
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !12531
  call void @llvm.dbg.value(metadata i32 %3, metadata !12072, metadata !DIExpression()) #23, !dbg !12536
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !12536
  call void @llvm.dbg.value(metadata i32 %3, metadata !12080, metadata !DIExpression()) #23, !dbg !12538
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12540, !srcloc !12086
  call void @llvm.dbg.value(metadata i32 1, metadata !12521, metadata !DIExpression()), !dbg !12525
  call void @llvm.dbg.value(metadata i32 undef, metadata !12521, metadata !DIExpression()), !dbg !12525
  ret void, !dbg !12541
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12542 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12544, metadata !DIExpression()), !dbg !12545
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !12546
  br i1 %2, label %24, label %3, !dbg !12548

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !12549
  br i1 %4, label %5, label %24, !dbg !12550

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12231, metadata !DIExpression()) #23, !dbg !12551
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12554
  %7 = load i8, i8* %6, align 1, !dbg !12555
  %8 = or i8 %7, -128, !dbg !12555
  store i8 %8, i8* %6, align 1, !dbg !12555
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12238, metadata !DIExpression()) #23, !dbg !12556
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12245, metadata !DIExpression()) #23, !dbg !12558
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12251, metadata !DIExpression()) #23, !dbg !12558
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !12560
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !12252, metadata !DIExpression()) #23, !dbg !12558
  %10 = icmp eq %struct._dnode* %9, null, !dbg !12561
  br i1 %10, label %21, label %11, !dbg !12560

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !12252, metadata !DIExpression()) #23, !dbg !12558
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !12562
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12252, metadata !DIExpression()) #23, !dbg !12558
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !12563
  %15 = icmp sgt i32 %14, 0, !dbg !12564
  br i1 %15, label %16, label %18, !dbg !12565

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12566
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !12567
  br label %23, !dbg !12568

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !12561
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !12252, metadata !DIExpression()) #23, !dbg !12558
  %20 = icmp eq %struct._dnode* %19, null, !dbg !12561
  br i1 %20, label %21, label %11, !dbg !12560, !llvm.loop !12569

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12571
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !12572
  br label %23, !dbg !12573

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !12574
  br label %24, !dbg !12575

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !12576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12577 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12579, metadata !DIExpression()), !dbg !12580
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !12581
  br i1 %2, label %6, label %3, !dbg !12582

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !12583
  %5 = xor i1 %4, true, !dbg !12582
  br label %6, !dbg !12582

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !12584
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12585 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12587, metadata !DIExpression()), !dbg !12591
  call void @llvm.dbg.value(metadata i32 0, metadata !12588, metadata !DIExpression()), !dbg !12592
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !12593
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12595, !srcloc !12060
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12595
  call void @llvm.dbg.value(metadata i32 %3, metadata !12057, metadata !DIExpression()) #23, !dbg !12597
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !12597
  call void @llvm.dbg.value(metadata i32 %3, metadata !12051, metadata !DIExpression()) #23, !dbg !12593
  call void @llvm.dbg.value(metadata i32 %3, metadata !12590, metadata !DIExpression()), !dbg !12592
  call void @llvm.dbg.value(metadata i32 undef, metadata !12588, metadata !DIExpression()), !dbg !12592
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !12598
  call void @llvm.dbg.value(metadata i32 %3, metadata !12072, metadata !DIExpression()) #23, !dbg !12601
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !12601
  call void @llvm.dbg.value(metadata i32 %3, metadata !12080, metadata !DIExpression()) #23, !dbg !12603
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12605, !srcloc !12086
  call void @llvm.dbg.value(metadata i32 1, metadata !12588, metadata !DIExpression()), !dbg !12592
  call void @llvm.dbg.value(metadata i32 undef, metadata !12588, metadata !DIExpression()), !dbg !12592
  ret void, !dbg !12606
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12607 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12609, metadata !DIExpression()), !dbg !12611
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !12612
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12614, !srcloc !12060
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12614
  call void @llvm.dbg.value(metadata i32 %3, metadata !12057, metadata !DIExpression()) #23, !dbg !12616
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !12616
  call void @llvm.dbg.value(metadata i32 %3, metadata !12051, metadata !DIExpression()) #23, !dbg !12612
  call void @llvm.dbg.value(metadata i32 %3, metadata !12610, metadata !DIExpression()), !dbg !12611
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !12617
  br i1 %4, label %5, label %6, !dbg !12619

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12072, metadata !DIExpression()) #23, !dbg !12620
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !12620
  call void @llvm.dbg.value(metadata i32 %3, metadata !12080, metadata !DIExpression()) #23, !dbg !12623
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12625, !srcloc !12086
  br label %8, !dbg !12626

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.112(%struct.k_thread* noundef %0) #24, !dbg !12627
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !12628
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12629
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !12629
  br label %8, !dbg !12630

8:                                                ; preds = %6, %5
  ret void, !dbg !12630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12631 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12633, metadata !DIExpression()), !dbg !12634
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12635
  %3 = load i8, i8* %2, align 1, !dbg !12635
  %4 = and i8 %3, 4, !dbg !12636
  %5 = icmp eq i8 %4, 0, !dbg !12637
  ret i1 %5, !dbg !12638
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.112(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12639 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12641, metadata !DIExpression()), !dbg !12642
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12643
  %3 = load i8, i8* %2, align 1, !dbg !12644
  %4 = and i8 %3, -5, !dbg !12644
  store i8 %4, i8* %2, align 1, !dbg !12644
  ret void, !dbg !12645
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !12646 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !12649, metadata !DIExpression()), !dbg !12650
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12648, metadata !DIExpression()), !dbg !12650
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !12651
  br i1 %4, label %5, label %9, !dbg !12653

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !12654
  br i1 %6, label %7, label %9, !dbg !12655

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !12656, metadata !DIExpression()) #23, !dbg !12662
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12661, metadata !DIExpression()) #23, !dbg !12662
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !12665
  br label %10, !dbg !12666

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !12072, metadata !DIExpression()) #23, !dbg !12667
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !12667
  call void @llvm.dbg.value(metadata i32 %3, metadata !12080, metadata !DIExpression()) #23, !dbg !12670
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12672, !srcloc !12086
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !12673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !12674 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12678, metadata !DIExpression()), !dbg !12679
  call void @llvm.dbg.value(metadata i32 %0, metadata !12680, metadata !DIExpression()), !dbg !12685
  %2 = icmp eq i32 %0, 0, !dbg !12687
  br i1 %2, label %3, label %6, !dbg !12688

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12689, !srcloc !12696
  call void @llvm.dbg.value(metadata i32 %4, metadata !12692, metadata !DIExpression()) #23, !dbg !12697
  %5 = icmp eq i32 %4, 0, !dbg !12698
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !12679
  ret i1 %7, !dbg !12699
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !12700 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12703
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12702, metadata !DIExpression()), !dbg !12704
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12705
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !12706
  ret i1 %3, !dbg !12707
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !12708 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12710, metadata !DIExpression()), !dbg !12712
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !12713
  call void @llvm.dbg.value(metadata i32 %2, metadata !12711, metadata !DIExpression()), !dbg !12712
  ret i32 %2, !dbg !12714
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12715 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12717, metadata !DIExpression()), !dbg !12721
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !12722
  call void @llvm.dbg.value(metadata i32 0, metadata !12718, metadata !DIExpression()), !dbg !12723
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !12724
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12726, !srcloc !12060
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12726
  call void @llvm.dbg.value(metadata i32 %4, metadata !12057, metadata !DIExpression()) #23, !dbg !12728
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !12728
  call void @llvm.dbg.value(metadata i32 %4, metadata !12051, metadata !DIExpression()) #23, !dbg !12724
  call void @llvm.dbg.value(metadata i32 %4, metadata !12720, metadata !DIExpression()), !dbg !12723
  call void @llvm.dbg.value(metadata i32 undef, metadata !12718, metadata !DIExpression()), !dbg !12723
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !12729
  br i1 %5, label %6, label %10, !dbg !12733

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12214, metadata !DIExpression()) #23, !dbg !12734
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12737
  %8 = load i8, i8* %7, align 1, !dbg !12738
  %9 = and i8 %8, 127, !dbg !12738
  store i8 %9, i8* %7, align 1, !dbg !12738
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12222, metadata !DIExpression()) #23, !dbg !12739
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !12741
  br label %10, !dbg !12742

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !12743
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12744
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !12745
  %13 = zext i1 %12 to i32, !dbg !12745
  tail call fastcc void @update_cache(i32 noundef %13) #24, !dbg !12746
  call void @llvm.dbg.value(metadata i32 %4, metadata !12072, metadata !DIExpression()) #23, !dbg !12747
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !12747
  call void @llvm.dbg.value(metadata i32 %4, metadata !12080, metadata !DIExpression()) #23, !dbg !12749
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12751, !srcloc !12086
  call void @llvm.dbg.value(metadata i32 1, metadata !12718, metadata !DIExpression()), !dbg !12723
  call void @llvm.dbg.value(metadata i32 undef, metadata !12718, metadata !DIExpression()), !dbg !12723
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12752
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !12754
  br i1 %15, label %16, label %17, !dbg !12755

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !12756
  br label %17, !dbg !12758

17:                                               ; preds = %16, %10
  ret void, !dbg !12759
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12760 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12762, metadata !DIExpression()), !dbg !12763
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12764
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !12765
  ret i32 %3, !dbg !12766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12767 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12769, metadata !DIExpression()), !dbg !12770
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12771
  %3 = load i8, i8* %2, align 1, !dbg !12772
  %4 = or i8 %3, 16, !dbg !12772
  store i8 %4, i8* %2, align 1, !dbg !12772
  ret void, !dbg !12773
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !12774 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12775, !srcloc !12060
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12775
  call void @llvm.dbg.value(metadata i32 %2, metadata !12057, metadata !DIExpression()) #23, !dbg !12777
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !12777
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !12778
  ret void, !dbg !12779
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !12780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12782, metadata !DIExpression()), !dbg !12783
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !12784
  br i1 %2, label %3, label %5, !dbg !12786

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !12787
  br label %6, !dbg !12789

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !12080, metadata !DIExpression()) #23, !dbg !12790
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !12793, !srcloc !12086
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !12794
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12795 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12797, metadata !DIExpression()), !dbg !12799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !12800
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12802, !srcloc !12060
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12802
  call void @llvm.dbg.value(metadata i32 %3, metadata !12057, metadata !DIExpression()) #23, !dbg !12804
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !12804
  call void @llvm.dbg.value(metadata i32 %3, metadata !12051, metadata !DIExpression()) #23, !dbg !12800
  call void @llvm.dbg.value(metadata i32 %3, metadata !12798, metadata !DIExpression()), !dbg !12799
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !12805
  br i1 %4, label %6, label %5, !dbg !12807

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12072, metadata !DIExpression()) #23, !dbg !12808
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !12808
  call void @llvm.dbg.value(metadata i32 %3, metadata !12080, metadata !DIExpression()) #23, !dbg !12811
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12813, !srcloc !12086
  br label %8, !dbg !12814

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !12815
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !12816
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12817
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !12817
  br label %8, !dbg !12818

8:                                                ; preds = %6, %5
  ret void, !dbg !12818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12819 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12821, metadata !DIExpression()), !dbg !12822
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12823
  %3 = load i8, i8* %2, align 1, !dbg !12823
  %4 = and i8 %3, 16, !dbg !12824
  %5 = icmp ne i8 %4, 0, !dbg !12825
  ret i1 %5, !dbg !12826
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12827 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12829, metadata !DIExpression()), !dbg !12830
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12831
  %3 = load i8, i8* %2, align 1, !dbg !12832
  %4 = and i8 %3, -17, !dbg !12832
  store i8 %4, i8* %2, align 1, !dbg !12832
  ret void, !dbg !12833
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12834 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12844, metadata !DIExpression()), !dbg !12848
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12842, metadata !DIExpression()), !dbg !12848
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12843, metadata !DIExpression()), !dbg !12848
  call void @llvm.dbg.value(metadata i32 0, metadata !12845, metadata !DIExpression()), !dbg !12849
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !12850
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12852, !srcloc !12060
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !12852
  call void @llvm.dbg.value(metadata i32 %5, metadata !12057, metadata !DIExpression()) #23, !dbg !12854
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !12854
  call void @llvm.dbg.value(metadata i32 %5, metadata !12051, metadata !DIExpression()) #23, !dbg !12850
  call void @llvm.dbg.value(metadata i32 %5, metadata !12847, metadata !DIExpression()), !dbg !12849
  call void @llvm.dbg.value(metadata i32 undef, metadata !12845, metadata !DIExpression()), !dbg !12849
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !12855
  call void @llvm.dbg.value(metadata i32 %5, metadata !12072, metadata !DIExpression()) #23, !dbg !12858
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !12858
  call void @llvm.dbg.value(metadata i32 %5, metadata !12080, metadata !DIExpression()) #23, !dbg !12860
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !12862, !srcloc !12086
  call void @llvm.dbg.value(metadata i32 1, metadata !12845, metadata !DIExpression()), !dbg !12849
  call void @llvm.dbg.value(metadata i32 undef, metadata !12845, metadata !DIExpression()), !dbg !12849
  ret void, !dbg !12863
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !12864 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12868, metadata !DIExpression()), !dbg !12869
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12866, metadata !DIExpression()), !dbg !12869
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12867, metadata !DIExpression()), !dbg !12869
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #24, !dbg !12870
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !12871
  ret void, !dbg !12872
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !12873 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12877, metadata !DIExpression()), !dbg !12879
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12878, metadata !DIExpression()), !dbg !12879
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !12880
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !12881
  %3 = icmp eq %union.anon* %1, null, !dbg !12882
  br i1 %3, label %21, label %4, !dbg !12884

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12885
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !12887
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !12888
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !12245, metadata !DIExpression()) #23, !dbg !12889
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12251, metadata !DIExpression()) #23, !dbg !12889
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !12891
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !12252, metadata !DIExpression()) #23, !dbg !12889
  %8 = icmp eq %struct._dnode* %7, null, !dbg !12892
  br i1 %8, label %19, label %9, !dbg !12891

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12252, metadata !DIExpression()) #23, !dbg !12889
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !12893
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !12252, metadata !DIExpression()) #23, !dbg !12889
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !12894
  %13 = icmp sgt i32 %12, 0, !dbg !12895
  br i1 %13, label %14, label %16, !dbg !12896

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12897
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !12898
  br label %21, !dbg !12899

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !12892
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !12252, metadata !DIExpression()) #23, !dbg !12889
  %18 = icmp eq %struct._dnode* %17, null, !dbg !12892
  br i1 %18, label %19, label %9, !dbg !12891, !llvm.loop !12900

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12902
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !12903
  br label %21, !dbg !12904

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !12905
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12906 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12911, metadata !DIExpression()), !dbg !12912
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12910, metadata !DIExpression()), !dbg !12912
  %4 = icmp eq i64 %3, -1, !dbg !12913
  br i1 %4, label %6, label %5, !dbg !12915

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.113(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !12916
  br label %6, !dbg !12918

6:                                                ; preds = %5, %2
  ret void, !dbg !12919
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.113(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12920 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12923, metadata !DIExpression()), !dbg !12924
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12922, metadata !DIExpression()), !dbg !12924
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12925
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !12926
  ret void, !dbg !12927
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !12928 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12930, metadata !DIExpression()), !dbg !12938
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !12939
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !12939
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12931, metadata !DIExpression()), !dbg !12938
  call void @llvm.dbg.value(metadata i32 0, metadata !12932, metadata !DIExpression()), !dbg !12940
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !12941
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12943, !srcloc !12060
  call void @llvm.dbg.value(metadata i32 undef, metadata !12057, metadata !DIExpression()) #23, !dbg !12945
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !12945
  call void @llvm.dbg.value(metadata i32 undef, metadata !12051, metadata !DIExpression()) #23, !dbg !12941
  call void @llvm.dbg.value(metadata i32 undef, metadata !12934, metadata !DIExpression()), !dbg !12940
  call void @llvm.dbg.value(metadata i32 undef, metadata !12932, metadata !DIExpression()), !dbg !12940
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !12946
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !12947
  %7 = load i8, i8* %6, align 1, !dbg !12947
  %8 = and i8 %7, 40, !dbg !12948
  %9 = icmp eq i8 %8, 0, !dbg !12948
  call void @llvm.dbg.value(metadata i1 %9, metadata !12935, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12949
  br i1 %9, label %10, label %17, !dbg !12950

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !12951
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !12951
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !12951
  %14 = icmp eq %union.anon* %13, null, !dbg !12955
  br i1 %14, label %16, label %15, !dbg !12956

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !12957
  br label %16, !dbg !12959

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.112(%struct.k_thread* noundef nonnull %3) #24, !dbg !12960
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !12961
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !12962
  br label %17, !dbg !12963

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !12943
  call void @llvm.dbg.value(metadata i32 %18, metadata !12057, metadata !DIExpression()) #23, !dbg !12945
  call void @llvm.dbg.value(metadata i32 %18, metadata !12051, metadata !DIExpression()) #23, !dbg !12941
  call void @llvm.dbg.value(metadata i32 %18, metadata !12934, metadata !DIExpression()), !dbg !12940
  call void @llvm.dbg.value(metadata i32 undef, metadata !12072, metadata !DIExpression()) #23, !dbg !12964
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !12964
  call void @llvm.dbg.value(metadata i32 undef, metadata !12080, metadata !DIExpression()) #23, !dbg !12966
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !12968, !srcloc !12086
  call void @llvm.dbg.value(metadata i32 1, metadata !12932, metadata !DIExpression()), !dbg !12940
  call void @llvm.dbg.value(metadata i32 undef, metadata !12932, metadata !DIExpression()), !dbg !12940
  ret void, !dbg !12969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12970 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12972, metadata !DIExpression()), !dbg !12973
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12974
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !12975
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12976
  store %union.anon* null, %union.anon** %2, align 8, !dbg !12977
  ret void, !dbg !12978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12979 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12981, metadata !DIExpression()), !dbg !12982
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12983
  %3 = load i8, i8* %2, align 1, !dbg !12984
  %4 = and i8 %3, -3, !dbg !12984
  store i8 %4, i8* %2, align 1, !dbg !12984
  ret void, !dbg !12985
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12986 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12988, metadata !DIExpression()), !dbg !12989
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !12990
  br i1 %2, label %3, label %7, !dbg !12992

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12214, metadata !DIExpression()) #23, !dbg !12993
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12996
  %5 = load i8, i8* %4, align 1, !dbg !12997
  %6 = and i8 %5, 127, !dbg !12997
  store i8 %6, i8* %4, align 1, !dbg !12997
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12222, metadata !DIExpression()) #23, !dbg !12998
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13000
  br label %7, !dbg !13001

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13002
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !13003
  %10 = zext i1 %9 to i32, !dbg !13003
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !13004
  ret void, !dbg !13005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !13006 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13008, metadata !DIExpression()), !dbg !13009
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13010
  %3 = load i8, i8* %2, align 1, !dbg !13011
  %4 = or i8 %3, 2, !dbg !13011
  store i8 %4, i8* %2, align 1, !dbg !13011
  ret void, !dbg !13012
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !13013 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13015, metadata !DIExpression()), !dbg !13019
  call void @llvm.dbg.value(metadata i32 0, metadata !13016, metadata !DIExpression()), !dbg !13020
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !13021
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13023, !srcloc !12060
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13023
  call void @llvm.dbg.value(metadata i32 %3, metadata !12057, metadata !DIExpression()) #23, !dbg !13025
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !13025
  call void @llvm.dbg.value(metadata i32 %3, metadata !12051, metadata !DIExpression()) #23, !dbg !13021
  call void @llvm.dbg.value(metadata i32 %3, metadata !13018, metadata !DIExpression()), !dbg !13020
  call void @llvm.dbg.value(metadata i32 undef, metadata !13016, metadata !DIExpression()), !dbg !13020
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !13026
  call void @llvm.dbg.value(metadata i32 %3, metadata !12072, metadata !DIExpression()) #23, !dbg !13029
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !13029
  call void @llvm.dbg.value(metadata i32 %3, metadata !12080, metadata !DIExpression()) #23, !dbg !13031
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13033, !srcloc !12086
  call void @llvm.dbg.value(metadata i32 1, metadata !13016, metadata !DIExpression()), !dbg !13020
  call void @llvm.dbg.value(metadata i32 undef, metadata !13016, metadata !DIExpression()), !dbg !13020
  ret void, !dbg !13034
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13035 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13041, metadata !DIExpression()), !dbg !13046
  call void @llvm.dbg.value(metadata i32 %0, metadata !13039, metadata !DIExpression()), !dbg !13046
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13040, metadata !DIExpression()), !dbg !13046
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13047
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !13048
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13049
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13050
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !13051
  call void @llvm.dbg.value(metadata i32 %6, metadata !13042, metadata !DIExpression()), !dbg !13046
  call void @llvm.dbg.value(metadata i32 0, metadata !13043, metadata !DIExpression()), !dbg !13052
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !13053
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13055, !srcloc !12060
  call void @llvm.dbg.value(metadata i32 undef, metadata !12057, metadata !DIExpression()) #23, !dbg !13057
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !13057
  call void @llvm.dbg.value(metadata i32 undef, metadata !12051, metadata !DIExpression()) #23, !dbg !13053
  call void @llvm.dbg.value(metadata i32 undef, metadata !13045, metadata !DIExpression()), !dbg !13052
  call void @llvm.dbg.value(metadata i32 undef, metadata !13043, metadata !DIExpression()), !dbg !13052
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13058
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13062
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !13063
  br i1 %10, label %11, label %12, !dbg !13064

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13065
  br label %12, !dbg !13067

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !13055
  call void @llvm.dbg.value(metadata i32 %13, metadata !12057, metadata !DIExpression()) #23, !dbg !13057
  call void @llvm.dbg.value(metadata i32 %13, metadata !12051, metadata !DIExpression()) #23, !dbg !13053
  call void @llvm.dbg.value(metadata i32 %13, metadata !13045, metadata !DIExpression()), !dbg !13052
  call void @llvm.dbg.value(metadata i32 undef, metadata !12072, metadata !DIExpression()) #23, !dbg !13068
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !13068
  call void @llvm.dbg.value(metadata i32 undef, metadata !12080, metadata !DIExpression()) #23, !dbg !13070
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !13072, !srcloc !12086
  call void @llvm.dbg.value(metadata i32 1, metadata !13043, metadata !DIExpression()), !dbg !13052
  call void @llvm.dbg.value(metadata i32 undef, metadata !13043, metadata !DIExpression()), !dbg !13052
  ret i32 %6, !dbg !13073
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !13074 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13079, metadata !DIExpression()), !dbg !13082
  call void @llvm.dbg.value(metadata i64 undef, metadata !13081, metadata !DIExpression()), !dbg !13082
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13078, metadata !DIExpression()), !dbg !13082
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !13080, metadata !DIExpression()), !dbg !13082
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13083
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13084
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !13085
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13087, !srcloc !12060
  call void @llvm.dbg.value(metadata i32 undef, metadata !12057, metadata !DIExpression()) #23, !dbg !13089
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !13089
  call void @llvm.dbg.value(metadata i32 undef, metadata !12051, metadata !DIExpression()) #23, !dbg !13085
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13090
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !13091
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !12656, metadata !DIExpression()) #23, !dbg !13092
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12661, metadata !DIExpression()) #23, !dbg !13092
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !13094
  ret i32 %9, !dbg !13095
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13096 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13100, metadata !DIExpression()), !dbg !13105
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13101, metadata !DIExpression()), !dbg !13105
  call void @llvm.dbg.value(metadata i32 0, metadata !13102, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !13107
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13109, !srcloc !12060
  call void @llvm.dbg.value(metadata i32 undef, metadata !12057, metadata !DIExpression()) #23, !dbg !13111
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !13111
  call void @llvm.dbg.value(metadata i32 undef, metadata !12051, metadata !DIExpression()) #23, !dbg !13107
  call void @llvm.dbg.value(metadata i32 undef, metadata !13104, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13101, metadata !DIExpression()), !dbg !13105
  call void @llvm.dbg.value(metadata i32 undef, metadata !13102, metadata !DIExpression()), !dbg !13106
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !13112
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13101, metadata !DIExpression()), !dbg !13105
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13115
  br i1 %5, label %7, label %6, !dbg !13117

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !13118
  br label %7, !dbg !13120

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13109
  call void @llvm.dbg.value(metadata i32 %8, metadata !12057, metadata !DIExpression()) #23, !dbg !13111
  call void @llvm.dbg.value(metadata i32 %8, metadata !12051, metadata !DIExpression()) #23, !dbg !13107
  call void @llvm.dbg.value(metadata i32 %8, metadata !13104, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.value(metadata i32 undef, metadata !12072, metadata !DIExpression()) #23, !dbg !13121
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !13121
  call void @llvm.dbg.value(metadata i32 undef, metadata !12080, metadata !DIExpression()) #23, !dbg !13123
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !13125, !srcloc !12086
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13101, metadata !DIExpression()), !dbg !13105
  call void @llvm.dbg.value(metadata i32 undef, metadata !13102, metadata !DIExpression()), !dbg !13106
  ret %struct.k_thread* %4, !dbg !13126
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13127 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13129, metadata !DIExpression()), !dbg !13134
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13130, metadata !DIExpression()), !dbg !13134
  call void @llvm.dbg.value(metadata i32 0, metadata !13131, metadata !DIExpression()), !dbg !13135
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !13136
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13138, !srcloc !12060
  call void @llvm.dbg.value(metadata i32 undef, metadata !12057, metadata !DIExpression()) #23, !dbg !13140
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !13140
  call void @llvm.dbg.value(metadata i32 undef, metadata !12051, metadata !DIExpression()) #23, !dbg !13136
  call void @llvm.dbg.value(metadata i32 undef, metadata !13133, metadata !DIExpression()), !dbg !13135
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13130, metadata !DIExpression()), !dbg !13134
  call void @llvm.dbg.value(metadata i32 undef, metadata !13131, metadata !DIExpression()), !dbg !13135
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !13141
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13130, metadata !DIExpression()), !dbg !13134
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13144
  br i1 %5, label %8, label %6, !dbg !13146

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !13147
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !13149
  br label %8, !dbg !13150

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !13138
  call void @llvm.dbg.value(metadata i32 %9, metadata !12057, metadata !DIExpression()) #23, !dbg !13140
  call void @llvm.dbg.value(metadata i32 %9, metadata !12051, metadata !DIExpression()) #23, !dbg !13136
  call void @llvm.dbg.value(metadata i32 %9, metadata !13133, metadata !DIExpression()), !dbg !13135
  call void @llvm.dbg.value(metadata i32 undef, metadata !12072, metadata !DIExpression()) #23, !dbg !13151
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !13151
  call void @llvm.dbg.value(metadata i32 undef, metadata !12080, metadata !DIExpression()) #23, !dbg !13153
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !13155, !srcloc !12086
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13130, metadata !DIExpression()), !dbg !13134
  call void @llvm.dbg.value(metadata i32 undef, metadata !13131, metadata !DIExpression()), !dbg !13135
  ret %struct.k_thread* %4, !dbg !13156
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13157 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13159, metadata !DIExpression()), !dbg !13160
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13015, metadata !DIExpression()) #23, !dbg !13161
  call void @llvm.dbg.value(metadata i32 0, metadata !13016, metadata !DIExpression()) #23, !dbg !13163
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !13164
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13166, !srcloc !12060
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13166
  call void @llvm.dbg.value(metadata i32 %3, metadata !12057, metadata !DIExpression()) #23, !dbg !13168
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !13168
  call void @llvm.dbg.value(metadata i32 %3, metadata !12051, metadata !DIExpression()) #23, !dbg !13164
  call void @llvm.dbg.value(metadata i32 %3, metadata !13018, metadata !DIExpression()) #23, !dbg !13163
  call void @llvm.dbg.value(metadata i32 undef, metadata !13016, metadata !DIExpression()) #23, !dbg !13163
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !13169
  call void @llvm.dbg.value(metadata i32 %3, metadata !12072, metadata !DIExpression()) #23, !dbg !13170
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !13170
  call void @llvm.dbg.value(metadata i32 %3, metadata !12080, metadata !DIExpression()) #23, !dbg !13172
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13174, !srcloc !12086
  call void @llvm.dbg.value(metadata i32 1, metadata !13016, metadata !DIExpression()) #23, !dbg !13163
  call void @llvm.dbg.value(metadata i32 undef, metadata !13016, metadata !DIExpression()) #23, !dbg !13163
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !13175
  ret void, !dbg !13176
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13177 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13179, metadata !DIExpression()), !dbg !13185
  call void @llvm.dbg.value(metadata i32 %1, metadata !13180, metadata !DIExpression()), !dbg !13185
  call void @llvm.dbg.value(metadata i8 0, metadata !13181, metadata !DIExpression()), !dbg !13185
  call void @llvm.dbg.value(metadata i32 0, metadata !13182, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !13187
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13189, !srcloc !12060
  call void @llvm.dbg.value(metadata i32 undef, metadata !12057, metadata !DIExpression()) #23, !dbg !13191
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !13191
  call void @llvm.dbg.value(metadata i32 undef, metadata !12051, metadata !DIExpression()) #23, !dbg !13187
  call void @llvm.dbg.value(metadata i32 undef, metadata !13184, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i8 poison, metadata !13181, metadata !DIExpression()), !dbg !13185
  call void @llvm.dbg.value(metadata i32 undef, metadata !13182, metadata !DIExpression()), !dbg !13186
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !13192
  call void @llvm.dbg.value(metadata i1 %6, metadata !13181, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13185
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !13195

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12214, metadata !DIExpression()) #23, !dbg !13196
  %11 = load i8, i8* %4, align 1, !dbg !13202
  %12 = and i8 %11, 127, !dbg !13202
  store i8 %12, i8* %4, align 1, !dbg !13202
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12222, metadata !DIExpression()) #23, !dbg !13203
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13205
  store i8 %9, i8* %8, align 2, !dbg !13206
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12231, metadata !DIExpression()) #23, !dbg !13207
  %13 = load i8, i8* %4, align 1, !dbg !13209
  %14 = or i8 %13, -128, !dbg !13209
  store i8 %14, i8* %4, align 1, !dbg !13209
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12238, metadata !DIExpression()) #23, !dbg !13210
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12245, metadata !DIExpression()) #23, !dbg !13212
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12251, metadata !DIExpression()) #23, !dbg !13212
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13214
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !12252, metadata !DIExpression()) #23, !dbg !13212
  %16 = icmp eq %struct._dnode* %15, null, !dbg !13215
  br i1 %16, label %26, label %17, !dbg !13214

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !12252, metadata !DIExpression()) #23, !dbg !13212
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !13216
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !12252, metadata !DIExpression()) #23, !dbg !13212
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !13217
  %21 = icmp sgt i32 %20, 0, !dbg !13218
  br i1 %21, label %22, label %23, !dbg !13219

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !13220
  br label %27, !dbg !13221

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !13215
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !12252, metadata !DIExpression()) #23, !dbg !13212
  %25 = icmp eq %struct._dnode* %24, null, !dbg !13215
  br i1 %25, label %26, label %17, !dbg !13214, !llvm.loop !13222

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !13224
  br label %27, !dbg !13225

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !13226
  br label %29, !dbg !13227

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !13228
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !13189
  call void @llvm.dbg.value(metadata i32 %30, metadata !12057, metadata !DIExpression()) #23, !dbg !13191
  call void @llvm.dbg.value(metadata i32 %30, metadata !12051, metadata !DIExpression()) #23, !dbg !13187
  call void @llvm.dbg.value(metadata i32 %30, metadata !13184, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i32 undef, metadata !12072, metadata !DIExpression()) #23, !dbg !13230
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !13230
  call void @llvm.dbg.value(metadata i32 undef, metadata !12080, metadata !DIExpression()) #23, !dbg !13232
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !13234, !srcloc !12086
  call void @llvm.dbg.value(metadata i8 poison, metadata !13181, metadata !DIExpression()), !dbg !13185
  call void @llvm.dbg.value(metadata i32 undef, metadata !13182, metadata !DIExpression()), !dbg !13186
  ret i1 %6, !dbg !13235
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13236 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13240, metadata !DIExpression()), !dbg !13243
  call void @llvm.dbg.value(metadata i32 %1, metadata !13241, metadata !DIExpression()), !dbg !13243
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !13244
  call void @llvm.dbg.value(metadata i1 %3, metadata !13242, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13243
  br i1 %3, label %4, label %12, !dbg !13245

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13247
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13248
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13248
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13248
  %9 = load i8, i8* %8, align 1, !dbg !13248
  %10 = icmp eq i8 %9, 0, !dbg !13249
  br i1 %10, label %11, label %12, !dbg !13250

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !13251
  br label %12, !dbg !13253

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !13254
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !13255 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13257, metadata !DIExpression()), !dbg !13260
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !13261
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13263, !srcloc !12060
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13263
  call void @llvm.dbg.value(metadata i32 %2, metadata !12057, metadata !DIExpression()) #23, !dbg !13265
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !13265
  call void @llvm.dbg.value(metadata i32 %2, metadata !12051, metadata !DIExpression()) #23, !dbg !13261
  call void @llvm.dbg.value(metadata i32 %2, metadata !13259, metadata !DIExpression()), !dbg !13260
  call void @llvm.dbg.value(metadata i32 undef, metadata !13257, metadata !DIExpression()), !dbg !13260
  tail call fastcc void @z_sched_lock() #24, !dbg !13266
  call void @llvm.dbg.value(metadata i32 %2, metadata !12072, metadata !DIExpression()) #23, !dbg !13269
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !13269
  call void @llvm.dbg.value(metadata i32 %2, metadata !12080, metadata !DIExpression()) #23, !dbg !13271
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13273, !srcloc !12086
  call void @llvm.dbg.value(metadata i32 1, metadata !13257, metadata !DIExpression()), !dbg !13260
  call void @llvm.dbg.value(metadata i32 undef, metadata !13257, metadata !DIExpression()), !dbg !13260
  ret void, !dbg !13274
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !13275 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13276
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13277
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !13277
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !13277
  %5 = load i8, i8* %4, align 1, !dbg !13278
  %6 = add i8 %5, -1, !dbg !13278
  store i8 %6, i8* %4, align 1, !dbg !13278
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13279, !srcloc !13281
  ret void, !dbg !13282
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !13283 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13285, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !13289
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13291, !srcloc !12060
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13291
  call void @llvm.dbg.value(metadata i32 %2, metadata !12057, metadata !DIExpression()) #23, !dbg !13293
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !13293
  call void @llvm.dbg.value(metadata i32 %2, metadata !12051, metadata !DIExpression()) #23, !dbg !13289
  call void @llvm.dbg.value(metadata i32 %2, metadata !13287, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i32 undef, metadata !13285, metadata !DIExpression()), !dbg !13288
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13294
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !13297
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !13297
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13297
  %7 = load i8, i8* %6, align 1, !dbg !13298
  %8 = add i8 %7, 1, !dbg !13298
  store i8 %8, i8* %6, align 1, !dbg !13298
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !13299
  call void @llvm.dbg.value(metadata i32 %2, metadata !12072, metadata !DIExpression()) #23, !dbg !13300
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !13300
  call void @llvm.dbg.value(metadata i32 %2, metadata !12080, metadata !DIExpression()) #23, !dbg !13302
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13304, !srcloc !12086
  call void @llvm.dbg.value(metadata i32 1, metadata !13285, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i32 undef, metadata !13285, metadata !DIExpression()), !dbg !13288
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !13305
  ret void, !dbg !13306
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !13307 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13308
  ret %struct.k_thread* %1, !dbg !13309
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !13310 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !13314, metadata !DIExpression()), !dbg !13319
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !13315, metadata !DIExpression()), !dbg !13319
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !13320
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13316, metadata !DIExpression()), !dbg !13319
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !13321
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13317, metadata !DIExpression()), !dbg !13319
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !13322
  call void @llvm.dbg.value(metadata i32 %5, metadata !13318, metadata !DIExpression()), !dbg !13319
  %6 = icmp sgt i32 %5, 0, !dbg !13323
  br i1 %6, label %17, label %7, !dbg !13325

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !13326
  br i1 %8, label %17, label %9, !dbg !13328

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !13329
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !13329
  %12 = load i32, i32* %11, align 8, !dbg !13329
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !13331
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !13331
  %15 = load i32, i32* %14, align 8, !dbg !13331
  %16 = icmp ult i32 %12, %15, !dbg !13332
  br label %17, !dbg !13333

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !13334
  ret i1 %18, !dbg !13335
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13336 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13353, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13354, metadata !DIExpression()), !dbg !13368
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13369
  %5 = load i32, i32* %4, align 4, !dbg !13370
  %6 = add nsw i32 %5, 1, !dbg !13370
  store i32 %6, i32* %4, align 4, !dbg !13370
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !13371
  store i32 %5, i32* %7, align 8, !dbg !13372
  %8 = load i32, i32* %4, align 4, !dbg !13373
  %9 = icmp eq i32 %8, 0, !dbg !13374
  br i1 %9, label %10, label %32, !dbg !13375

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !13376
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !13376
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !13356, metadata !DIExpression()), !dbg !13376
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13376
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !13376
  %14 = load i32, i32* %13, align 4, !dbg !13376
  %15 = shl i32 %14, 2, !dbg !13376
  %16 = alloca i8, i32 %15, align 8, !dbg !13376
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !13376
  store i8* %16, i8** %17, align 4, !dbg !13376
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !13376
  %19 = alloca i8, i32 %14, align 8, !dbg !13376
  store i8* %19, i8** %18, align 4, !dbg !13376
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !13376
  store i32 -1, i32* %20, align 4, !dbg !13376
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !13377
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !13365, metadata !DIExpression()), !dbg !13378
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !13355, metadata !DIExpression()), !dbg !13368
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !13379
  br i1 %22, label %23, label %24, !dbg !13376

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !13379
  br label %32, !dbg !13380

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !13355, metadata !DIExpression()), !dbg !13368
  %26 = load i32, i32* %4, align 4, !dbg !13381
  %27 = add nsw i32 %26, 1, !dbg !13381
  store i32 %27, i32* %4, align 4, !dbg !13381
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !13383
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !13383
  store i32 %26, i32* %29, align 8, !dbg !13384
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !13377
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !13365, metadata !DIExpression()), !dbg !13378
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !13355, metadata !DIExpression()), !dbg !13368
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !13379
  br i1 %31, label %23, label %24, !dbg !13376, !llvm.loop !13385

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13387
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13388
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !13389
  ret void, !dbg !13390
}

; Function Attrs: optsize
declare !dbg !13391 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !13396 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13399 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13401, metadata !DIExpression()), !dbg !13403
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13402, metadata !DIExpression()), !dbg !13403
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13404
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13405
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !13406
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !13407
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !13407
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !13409
  br i1 %7, label %8, label %10, !dbg !13410

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13411
  store i32 0, i32* %9, align 4, !dbg !13413
  br label %10, !dbg !13414

10:                                               ; preds = %8, %2
  ret void, !dbg !13415
}

; Function Attrs: optsize
declare !dbg !13416 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !13417 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13421, metadata !DIExpression()), !dbg !13424
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13422, metadata !DIExpression()), !dbg !13424
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13425
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !13426
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !13423, metadata !DIExpression()), !dbg !13424
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13422, metadata !DIExpression()), !dbg !13424
  ret %struct.k_thread* %4, !dbg !13427
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !13428 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !13432, metadata !DIExpression()), !dbg !13433
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !13434
  ret %struct.rbnode* %2, !dbg !13435
}

; Function Attrs: optsize
declare !dbg !13436 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !13439 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !13451, metadata !DIExpression()), !dbg !13455
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !13456
  %3 = load i32, i32* %2, align 4, !dbg !13456
  %4 = icmp eq i32 %3, 0, !dbg !13458
  br i1 %4, label %10, label %5, !dbg !13459

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13452, metadata !DIExpression()), !dbg !13455
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !13460, !range !6308
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !13461
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13453, metadata !DIExpression()), !dbg !13455
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !13462
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !13454, metadata !DIExpression()), !dbg !13455
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13452, metadata !DIExpression()), !dbg !13455
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !13455
  ret %struct.k_thread* %11, !dbg !13463
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13464 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13468, metadata !DIExpression()), !dbg !13471
  call void @llvm.dbg.value(metadata i32 0, metadata !13469, metadata !DIExpression()), !dbg !13471
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !13472
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13470, metadata !DIExpression()), !dbg !13471
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13473
  br i1 %3, label %8, label %4, !dbg !13474

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !13475
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !13477
  call void @llvm.dbg.value(metadata i32 1, metadata !13469, metadata !DIExpression()), !dbg !13471
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !13472
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13470, metadata !DIExpression()), !dbg !13471
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13473
  br i1 %7, label %8, label %4, !dbg !13474, !llvm.loop !13478

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !13471
  ret i32 %9, !dbg !13480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !13481 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13483, metadata !DIExpression()), !dbg !13484
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13485
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !13486
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13487
  ret %struct.k_thread* %4, !dbg !13488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !13489 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !13498, metadata !DIExpression()), !dbg !13499
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !13500
  tail call fastcc void @sys_dlist_init.120(%struct._dnode* noundef nonnull %2) #24, !dbg !13501
  ret void, !dbg !13502
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.120(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13503 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13507, metadata !DIExpression()), !dbg !13508
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13509
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13510
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13511
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13512
  ret void, !dbg !13513
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !13514 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !13515
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !13516
  ret void, !dbg !13517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !13518 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13523, metadata !DIExpression()), !dbg !13524
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13525
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !13525
  %4 = load i8, i8* %3, align 2, !dbg !13525
  %5 = sext i8 %4 to i32, !dbg !13526
  ret i32 %5, !dbg !13527
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13528 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13532, metadata !DIExpression()), !dbg !13535
  call void @llvm.dbg.value(metadata i32 %1, metadata !13533, metadata !DIExpression()), !dbg !13535
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13534, metadata !DIExpression()), !dbg !13535
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !13536
  ret void, !dbg !13537
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !13538 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !13539
  br i1 %1, label %8, label %2, !dbg !13540

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !13541
  br i1 %3, label %8, label %4, !dbg !13542

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13543
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !13544
  %7 = xor i1 %6, true, !dbg !13542
  br label %8, !dbg !13542

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !13545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !13546 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !13547, !range !5728
  %2 = icmp eq i8 %1, 0, !dbg !13547
  ret i1 %2, !dbg !13548
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !13549 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !13552
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13554, !srcloc !12060
  call void @llvm.dbg.value(metadata i32 undef, metadata !12057, metadata !DIExpression()) #23, !dbg !13556
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !13556
  call void @llvm.dbg.value(metadata i32 undef, metadata !12051, metadata !DIExpression()) #23, !dbg !13552
  call void @llvm.dbg.value(metadata i32 undef, metadata !13551, metadata !DIExpression()), !dbg !13557
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13558
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12214, metadata !DIExpression()) #23, !dbg !13561
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !13563
  %4 = load i8, i8* %3, align 1, !dbg !13564
  %5 = and i8 %4, 127, !dbg !13564
  store i8 %5, i8* %3, align 1, !dbg !13564
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12222, metadata !DIExpression()) #23, !dbg !13565
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !13567
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13568
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12231, metadata !DIExpression()) #23, !dbg !13569
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !13571
  %8 = load i8, i8* %7, align 1, !dbg !13572
  %9 = or i8 %8, -128, !dbg !13572
  store i8 %9, i8* %7, align 1, !dbg !13572
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12238, metadata !DIExpression()) #23, !dbg !13573
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12245, metadata !DIExpression()) #23, !dbg !13575
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12251, metadata !DIExpression()) #23, !dbg !13575
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13577
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12252, metadata !DIExpression()) #23, !dbg !13575
  %11 = icmp eq %struct._dnode* %10, null, !dbg !13578
  br i1 %11, label %22, label %12, !dbg !13577

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !12252, metadata !DIExpression()) #23, !dbg !13575
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !13579
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !12252, metadata !DIExpression()) #23, !dbg !13575
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !13580
  %16 = icmp sgt i32 %15, 0, !dbg !13581
  br i1 %16, label %17, label %19, !dbg !13582

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13583
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !13584
  br label %24, !dbg !13585

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !13578
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !12252, metadata !DIExpression()) #23, !dbg !13575
  %21 = icmp eq %struct._dnode* %20, null, !dbg !13578
  br i1 %21, label %22, label %12, !dbg !13577, !llvm.loop !13586

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13588
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !13589
  br label %24, !dbg !13590

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !13554
  call void @llvm.dbg.value(metadata i32 %25, metadata !12057, metadata !DIExpression()) #23, !dbg !13556
  call void @llvm.dbg.value(metadata i32 %25, metadata !12051, metadata !DIExpression()) #23, !dbg !13552
  call void @llvm.dbg.value(metadata i32 %25, metadata !13551, metadata !DIExpression()), !dbg !13557
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !13591
  call void @llvm.dbg.value(metadata i32 undef, metadata !12656, metadata !DIExpression()) #23, !dbg !13592
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12661, metadata !DIExpression()) #23, !dbg !13592
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !13594
  ret void, !dbg !13595
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !13596 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !13600, metadata !DIExpression()), !dbg !13603
  %3 = icmp eq i64 %2, -1, !dbg !13604
  br i1 %3, label %4, label %6, !dbg !13606

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13607
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #24, !dbg !13609
  br label %11, !dbg !13610

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !13601, metadata !DIExpression()), !dbg !13603
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !13611
  %8 = sext i32 %7 to i64, !dbg !13611
  call void @llvm.dbg.value(metadata i64 %8, metadata !13601, metadata !DIExpression()), !dbg !13603
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #24, !dbg !13612
  %10 = trunc i64 %9 to i32, !dbg !13612
  call void @llvm.dbg.value(metadata i32 %10, metadata !13602, metadata !DIExpression()), !dbg !13603
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !13603
  ret i32 %12, !dbg !13613
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13614 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13618, metadata !DIExpression()), !dbg !13619
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13620, !srcloc !13622
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !13623
  ret void, !dbg !13624
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !13625 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13629, metadata !DIExpression()), !dbg !13633
  %2 = icmp eq i64 %0, 0, !dbg !13634
  br i1 %2, label %3, label %4, !dbg !13636

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #24, !dbg !13637
  br label %29, !dbg !13639

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !13631, metadata !DIExpression()), !dbg !13633
  %5 = icmp sgt i64 %0, -3, !dbg !13640
  br i1 %5, label %6, label %10, !dbg !13642

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !13643
  %8 = trunc i64 %0 to i32, !dbg !13645
  %9 = add i32 %7, %8, !dbg !13645
  call void @llvm.dbg.value(metadata i32 %9, metadata !13630, metadata !DIExpression()), !dbg !13633
  br label %13, !dbg !13646

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !13647
  %12 = sub i32 -2, %11, !dbg !13647
  call void @llvm.dbg.value(metadata i32 %12, metadata !13630, metadata !DIExpression()), !dbg !13633
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !13649
  call void @llvm.dbg.value(metadata i32 %14, metadata !13630, metadata !DIExpression()), !dbg !13633
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !13650
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13652, !srcloc !12060
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !13652
  call void @llvm.dbg.value(metadata i32 %16, metadata !12057, metadata !DIExpression()) #23, !dbg !13654
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !13654
  call void @llvm.dbg.value(metadata i32 %16, metadata !12051, metadata !DIExpression()) #23, !dbg !13650
  call void @llvm.dbg.value(metadata i32 %16, metadata !13632, metadata !DIExpression()), !dbg !13633
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13655
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !13656
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #24, !dbg !13657
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13658
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !13659
  tail call fastcc void @z_add_thread_timeout.113(%struct.k_thread* noundef %18, [1 x i64] %19) #24, !dbg !13659
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13660
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #24, !dbg !13661
  call void @llvm.dbg.value(metadata i32 %16, metadata !12656, metadata !DIExpression()) #23, !dbg !13662
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12661, metadata !DIExpression()) #23, !dbg !13662
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !13664
  %22 = zext i32 %14 to i64, !dbg !13665
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !13666
  %24 = zext i32 %23 to i64, !dbg !13666
  %25 = sub nsw i64 %22, %24, !dbg !13667
  call void @llvm.dbg.value(metadata i64 %25, metadata !13629, metadata !DIExpression()), !dbg !13633
  %26 = icmp sgt i64 %25, 0, !dbg !13668
  %27 = select i1 %26, i64 %25, i64 0, !dbg !13668
  %28 = trunc i64 %27 to i32, !dbg !13668
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !13633
  ret i32 %30, !dbg !13669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #12 !dbg !13670 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13672, metadata !DIExpression()), !dbg !13673
  call void @llvm.dbg.value(metadata i64 %0, metadata !12092, metadata !DIExpression()), !dbg !13674
  call void @llvm.dbg.value(metadata i32 10000, metadata !12095, metadata !DIExpression()), !dbg !13674
  call void @llvm.dbg.value(metadata i32 1000, metadata !12096, metadata !DIExpression()), !dbg !13674
  call void @llvm.dbg.value(metadata i8 1, metadata !12097, metadata !DIExpression()), !dbg !13674
  call void @llvm.dbg.value(metadata i1 false, metadata !12098, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13674
  call void @llvm.dbg.value(metadata i1 false, metadata !12099, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13674
  call void @llvm.dbg.value(metadata i8 0, metadata !12100, metadata !DIExpression()), !dbg !13674
  call void @llvm.dbg.value(metadata i1 false, metadata !12101, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13674
  call void @llvm.dbg.value(metadata i1 true, metadata !12102, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13674
  call void @llvm.dbg.value(metadata i64 0, metadata !12103, metadata !DIExpression()), !dbg !13674
  call void @llvm.dbg.value(metadata i64 0, metadata !12103, metadata !DIExpression()), !dbg !13674
  call void @llvm.dbg.value(metadata i64 %0, metadata !12092, metadata !DIExpression()), !dbg !13674
  %2 = udiv i64 %0, 10, !dbg !13676
  ret i64 %2, !dbg !13680
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !13681 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13682, !srcloc !13684
  tail call void @z_impl_k_yield() #24, !dbg !13685
  ret void, !dbg !13686
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !13687 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13691, metadata !DIExpression()), !dbg !13693
  %2 = sext i32 %0 to i64, !dbg !13694
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !13695
  call void @llvm.dbg.value(metadata i64 %3, metadata !13692, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13693
  %4 = shl i64 %3, 32, !dbg !13696
  %5 = ashr exact i64 %4, 32, !dbg !13696
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !13697
  call void @llvm.dbg.value(metadata i32 %6, metadata !13692, metadata !DIExpression()), !dbg !13693
  %7 = sext i32 %6 to i64, !dbg !13698
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !13699
  %9 = trunc i64 %8 to i32, !dbg !13699
  ret i32 %9, !dbg !13700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !13701 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13703, metadata !DIExpression()), !dbg !13704
  call void @llvm.dbg.value(metadata i64 %0, metadata !12092, metadata !DIExpression()), !dbg !13705
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12095, metadata !DIExpression()), !dbg !13705
  call void @llvm.dbg.value(metadata i32 10000, metadata !12096, metadata !DIExpression()), !dbg !13705
  call void @llvm.dbg.value(metadata i8 1, metadata !12097, metadata !DIExpression()), !dbg !13705
  call void @llvm.dbg.value(metadata i1 false, metadata !12098, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13705
  call void @llvm.dbg.value(metadata i1 true, metadata !12099, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13705
  call void @llvm.dbg.value(metadata i8 0, metadata !12100, metadata !DIExpression()), !dbg !13705
  call void @llvm.dbg.value(metadata i1 false, metadata !12101, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13705
  call void @llvm.dbg.value(metadata i1 true, metadata !12102, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13705
  call void @llvm.dbg.value(metadata i64 0, metadata !12103, metadata !DIExpression()), !dbg !13705
  call void @llvm.dbg.value(metadata i64 0, metadata !12103, metadata !DIExpression()), !dbg !13705
  %2 = add i64 %0, 99, !dbg !13707
  call void @llvm.dbg.value(metadata i64 %2, metadata !12092, metadata !DIExpression()), !dbg !13705
  %3 = udiv i64 %2, 100, !dbg !13708
  ret i64 %3, !dbg !13709
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #12 !dbg !13710 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13712, metadata !DIExpression()), !dbg !13713
  call void @llvm.dbg.value(metadata i64 %0, metadata !12092, metadata !DIExpression()), !dbg !13714
  call void @llvm.dbg.value(metadata i32 10000, metadata !12095, metadata !DIExpression()), !dbg !13714
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12096, metadata !DIExpression()), !dbg !13714
  call void @llvm.dbg.value(metadata i8 1, metadata !12097, metadata !DIExpression()), !dbg !13714
  call void @llvm.dbg.value(metadata i1 false, metadata !12098, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13714
  call void @llvm.dbg.value(metadata i1 false, metadata !12099, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13714
  call void @llvm.dbg.value(metadata i8 0, metadata !12100, metadata !DIExpression()), !dbg !13714
  call void @llvm.dbg.value(metadata i1 true, metadata !12101, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13714
  call void @llvm.dbg.value(metadata i1 false, metadata !12102, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13714
  call void @llvm.dbg.value(metadata i64 0, metadata !12103, metadata !DIExpression()), !dbg !13714
  call void @llvm.dbg.value(metadata i64 0, metadata !12103, metadata !DIExpression()), !dbg !13714
  %2 = mul i64 %0, 100, !dbg !13716
  ret i64 %2, !dbg !13718
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13719 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13721, metadata !DIExpression()), !dbg !13722
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !13723
  br i1 %2, label %14, label %3, !dbg !13725

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !13726
  %5 = icmp slt i32 %4, 0, !dbg !13728
  br i1 %5, label %6, label %10, !dbg !13729

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13730
  %8 = load i8, i8* %7, align 1, !dbg !13730
  %9 = icmp eq i8 %8, 16, !dbg !13733
  br i1 %9, label %10, label %14, !dbg !13734

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !13735
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !13736
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13737, !srcloc !12696
  call void @llvm.dbg.value(metadata i32 %11, metadata !12692, metadata !DIExpression()) #23, !dbg !13741
  %12 = icmp eq i32 %11, 0, !dbg !13742
  br i1 %12, label %13, label %14, !dbg !13743

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !13744
  br label %14, !dbg !13746

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !13747
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13748 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13750, metadata !DIExpression()), !dbg !13751
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13752
  %3 = load i8, i8* %2, align 1, !dbg !13752
  %4 = and i8 %3, 2, !dbg !13753
  %5 = icmp ne i8 %4, 0, !dbg !13754
  ret i1 %5, !dbg !13755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !13756 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13761
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13760, metadata !DIExpression()), !dbg !13762
  ret %struct.k_thread* %1, !dbg !13763
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !13764 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13765, !srcloc !12696
  call void @llvm.dbg.value(metadata i32 %1, metadata !12692, metadata !DIExpression()) #23, !dbg !13768
  %2 = icmp eq i32 %1, 0, !dbg !13769
  br i1 %2, label %3, label %8, !dbg !13770

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13771
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !13772
  %6 = icmp ne i32 %5, 0, !dbg !13770
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !13773
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13774 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13776, metadata !DIExpression()), !dbg !13778
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !13779
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13781, !srcloc !12060
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13781
  call void @llvm.dbg.value(metadata i32 %3, metadata !12057, metadata !DIExpression()) #23, !dbg !13783
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !13783
  call void @llvm.dbg.value(metadata i32 %3, metadata !12051, metadata !DIExpression()) #23, !dbg !13779
  call void @llvm.dbg.value(metadata i32 %3, metadata !13777, metadata !DIExpression()), !dbg !13778
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13784
  %5 = load i8, i8* %4, align 4, !dbg !13784
  %6 = and i8 %5, 1, !dbg !13786
  %7 = icmp eq i8 %6, 0, !dbg !13787
  br i1 %7, label %9, label %8, !dbg !13788

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12072, metadata !DIExpression()) #23, !dbg !13789
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !13789
  call void @llvm.dbg.value(metadata i32 %3, metadata !12080, metadata !DIExpression()) #23, !dbg !13792
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13794, !srcloc !12086
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !13795, !srcloc !13797
  br label %24, !dbg !13798

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13799
  %11 = load i8, i8* %10, align 1, !dbg !13799
  %12 = and i8 %11, 8, !dbg !13801
  %13 = icmp eq i8 %12, 0, !dbg !13802
  br i1 %13, label %15, label %14, !dbg !13803

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !12072, metadata !DIExpression()) #23, !dbg !13804
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !13804
  call void @llvm.dbg.value(metadata i32 %3, metadata !12080, metadata !DIExpression()) #23, !dbg !13807
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13809, !srcloc !12086
  br label %24, !dbg !13810

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !13811
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13812
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !13814
  br i1 %17, label %18, label %23, !dbg !13815

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13816, !srcloc !12696
  call void @llvm.dbg.value(metadata i32 %19, metadata !12692, metadata !DIExpression()) #23, !dbg !13819
  %20 = icmp eq i32 %19, 0, !dbg !13820
  br i1 %20, label %21, label %23, !dbg !13821

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !12656, metadata !DIExpression()) #23, !dbg !13822
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12661, metadata !DIExpression()) #23, !dbg !13822
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !13825
  br label %23, !dbg !13826

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !12072, metadata !DIExpression()) #23, !dbg !13827
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !13827
  call void @llvm.dbg.value(metadata i32 %3, metadata !12080, metadata !DIExpression()) #23, !dbg !13829
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13831, !srcloc !12086
  br label %24, !dbg !13832

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !13832
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13833 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13835, metadata !DIExpression()), !dbg !13836
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13837
  %3 = load i8, i8* %2, align 1, !dbg !13837
  %4 = and i8 %3, 8, !dbg !13839
  %5 = icmp eq i8 %4, 0, !dbg !13840
  br i1 %5, label %6, label %20, !dbg !13841

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !13842
  %8 = or i8 %7, 8, !dbg !13842
  store i8 %8, i8* %2, align 1, !dbg !13842
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !13844
  br i1 %9, label %10, label %12, !dbg !13846

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12214, metadata !DIExpression()) #23, !dbg !13847
  %11 = and i8 %8, 95, !dbg !13850
  store i8 %11, i8* %2, align 1, !dbg !13850
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12222, metadata !DIExpression()) #23, !dbg !13851
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !13853
  br label %12, !dbg !13854

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13855
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !13855
  %15 = icmp eq %union.anon* %14, null, !dbg !13857
  br i1 %15, label %17, label %16, !dbg !13858

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !13859
  br label %17, !dbg !13861

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !13862
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13863
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #24, !dbg !13864
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !13865
  br label %20, !dbg !13866

20:                                               ; preds = %17, %1
  ret void, !dbg !13867
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !13868 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13872, metadata !DIExpression()), !dbg !13874
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !13875
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13873, metadata !DIExpression()), !dbg !13874
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13876
  br i1 %3, label %10, label %4, !dbg !13877

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !13878
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !13880
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13881, metadata !DIExpression()), !dbg !13887
  call void @llvm.dbg.value(metadata i32 0, metadata !13886, metadata !DIExpression()), !dbg !13887
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !13889
  store i32 0, i32* %7, align 4, !dbg !13890
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !13891
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !13875
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !13873, metadata !DIExpression()), !dbg !13874
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !13876
  br i1 %9, label %10, label %4, !dbg !13877, !llvm.loop !13892

10:                                               ; preds = %4, %1
  ret void, !dbg !13894
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13895 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13900, metadata !DIExpression()), !dbg !13903
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13899, metadata !DIExpression()), !dbg !13903
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !13904
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13906, !srcloc !12060
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13906
  call void @llvm.dbg.value(metadata i32 %4, metadata !12057, metadata !DIExpression()) #23, !dbg !13908
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !13908
  call void @llvm.dbg.value(metadata i32 %4, metadata !12051, metadata !DIExpression()) #23, !dbg !13904
  call void @llvm.dbg.value(metadata i32 %4, metadata !13901, metadata !DIExpression()), !dbg !13903
  call void @llvm.dbg.value(metadata i32 0, metadata !13902, metadata !DIExpression()), !dbg !13903
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13909
  %6 = load i8, i8* %5, align 1, !dbg !13909
  %7 = and i8 %6, 8, !dbg !13911
  %8 = icmp eq i8 %7, 0, !dbg !13912
  br i1 %8, label %9, label %24, !dbg !13913

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !13900, metadata !DIExpression()), !dbg !13903
  %11 = icmp eq i64 %10, 0, !dbg !13914
  br i1 %11, label %24, label %12, !dbg !13916

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13917
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !13919
  br i1 %14, label %24, label %15, !dbg !13920

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13921
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !13921
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !13922
  %19 = icmp eq %union.anon* %17, %18, !dbg !13923
  br i1 %19, label %24, label %20, !dbg !13924

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13925
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #24, !dbg !13927
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13928
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #24, !dbg !13929
  call void @llvm.dbg.value(metadata i32 %4, metadata !12656, metadata !DIExpression()) #23, !dbg !13930
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12661, metadata !DIExpression()) #23, !dbg !13930
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !13932
  call void @llvm.dbg.value(metadata i32 %23, metadata !13902, metadata !DIExpression()), !dbg !13903
  br label %26, !dbg !13933

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !13934
  call void @llvm.dbg.value(metadata i32 %25, metadata !13902, metadata !DIExpression()), !dbg !13903
  call void @llvm.dbg.value(metadata i32 %4, metadata !12072, metadata !DIExpression()) #23, !dbg !13935
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !13935
  call void @llvm.dbg.value(metadata i32 %4, metadata !12080, metadata !DIExpression()) #23, !dbg !13937
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13939, !srcloc !12086
  br label %26, !dbg !13940

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !13903
  ret i32 %27, !dbg !13941
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13942 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13946, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.value(metadata i32 %1, metadata !13947, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.value(metadata i8* %2, metadata !13948, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.value(metadata i8 0, metadata !13950, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.value(metadata i32 0, metadata !13951, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12045, metadata !DIExpression()) #23, !dbg !13956
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13958, !srcloc !12060
  call void @llvm.dbg.value(metadata i32 undef, metadata !12057, metadata !DIExpression()) #23, !dbg !13960
  call void @llvm.dbg.value(metadata i32 undef, metadata !12058, metadata !DIExpression()) #23, !dbg !13960
  call void @llvm.dbg.value(metadata i32 undef, metadata !12051, metadata !DIExpression()) #23, !dbg !13956
  call void @llvm.dbg.value(metadata i32 undef, metadata !13953, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata i8 poison, metadata !13950, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.value(metadata i32 undef, metadata !13951, metadata !DIExpression()), !dbg !13955
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #24, !dbg !13961
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13949, metadata !DIExpression()), !dbg !13954
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13964
  br i1 %7, label %12, label %8, !dbg !13966

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13967, metadata !DIExpression()), !dbg !13975
  call void @llvm.dbg.value(metadata i32 %1, metadata !13973, metadata !DIExpression()), !dbg !13975
  call void @llvm.dbg.value(metadata i8* %2, metadata !13974, metadata !DIExpression()), !dbg !13975
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13881, metadata !DIExpression()), !dbg !13978
  call void @llvm.dbg.value(metadata i32 %1, metadata !13886, metadata !DIExpression()), !dbg !13978
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !13980
  store i32 %1, i32* %9, align 4, !dbg !13981
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !13982
  store i8* %2, i8** %10, align 4, !dbg !13983
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !13984
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !13985
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #24, !dbg !13986
  call void @llvm.dbg.value(metadata i8 1, metadata !13950, metadata !DIExpression()), !dbg !13954
  br label %12, !dbg !13987

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !13958
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !13958
  call void @llvm.dbg.value(metadata i32 %14, metadata !12057, metadata !DIExpression()) #23, !dbg !13960
  call void @llvm.dbg.value(metadata i32 %14, metadata !12051, metadata !DIExpression()) #23, !dbg !13956
  call void @llvm.dbg.value(metadata i32 %14, metadata !13953, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata i8 poison, metadata !13950, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.value(metadata i32 undef, metadata !12072, metadata !DIExpression()) #23, !dbg !13988
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12077, metadata !DIExpression()) #23, !dbg !13988
  call void @llvm.dbg.value(metadata i32 undef, metadata !12080, metadata !DIExpression()) #23, !dbg !13990
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !13992, !srcloc !12086
  call void @llvm.dbg.value(metadata i32 undef, metadata !13951, metadata !DIExpression()), !dbg !13955
  ret i1 %13, !dbg !13993
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !13994 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14000, metadata !DIExpression()), !dbg !14005
  call void @llvm.dbg.value(metadata i64 undef, metadata !14002, metadata !DIExpression()), !dbg !14005
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13999, metadata !DIExpression()), !dbg !14005
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14001, metadata !DIExpression()), !dbg !14005
  call void @llvm.dbg.value(metadata i8** %4, metadata !14003, metadata !DIExpression()), !dbg !14005
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !14006
  call void @llvm.dbg.value(metadata i32 %6, metadata !14004, metadata !DIExpression()), !dbg !14005
  %7 = icmp eq i8** %4, null, !dbg !14007
  br i1 %7, label %12, label %8, !dbg !14009

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14010
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !14012
  %11 = load i8*, i8** %10, align 4, !dbg !14012
  store i8* %11, i8** %4, align 4, !dbg !14013
  br label %12, !dbg !14014

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !14015
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !14016 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !14018
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !14019
  ret void, !dbg !14020
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14021 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !14031, metadata !DIExpression()), !dbg !14048
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14029, metadata !DIExpression()), !dbg !14048
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !14030, metadata !DIExpression()), !dbg !14048
  %5 = icmp eq i64 %4, -1, !dbg !14049
  br i1 %5, label %55, label %6, !dbg !14051

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !14052
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !14053
  call void @llvm.dbg.value(metadata i32 0, metadata !14032, metadata !DIExpression()), !dbg !14054
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14055, metadata !DIExpression()) #23, !dbg !14062
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14064, !srcloc !14070
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !14064
  call void @llvm.dbg.value(metadata i32 %9, metadata !14067, metadata !DIExpression()) #23, !dbg !14071
  call void @llvm.dbg.value(metadata i32 undef, metadata !14068, metadata !DIExpression()) #23, !dbg !14071
  call void @llvm.dbg.value(metadata i32 %9, metadata !14061, metadata !DIExpression()) #23, !dbg !14062
  call void @llvm.dbg.value(metadata i32 %9, metadata !14038, metadata !DIExpression()), !dbg !14054
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()), !dbg !14054
  %10 = icmp slt i64 %4, -1, !dbg !14072
  br i1 %10, label %11, label %17, !dbg !14073

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !14074
  %13 = add i64 %4, %12, !dbg !14075
  %14 = sub i64 -2, %13, !dbg !14075
  call void @llvm.dbg.value(metadata i64 %14, metadata !14042, metadata !DIExpression()), !dbg !14076
  %15 = icmp sgt i64 %14, 1, !dbg !14077
  %16 = select i1 %15, i64 %14, i64 1, !dbg !14077
  br label %22, !dbg !14078

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !14079
  %19 = tail call fastcc i32 @elapsed.133() #24, !dbg !14081
  %20 = sext i32 %19 to i64, !dbg !14081
  %21 = add nsw i64 %18, %20, !dbg !14082
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !14083
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14084
  store i64 %23, i64* %24, align 8, !dbg !14085
  %25 = tail call fastcc %struct._timeout* @first() #24, !dbg !14086
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !14039, metadata !DIExpression()), !dbg !14088
  %26 = icmp eq %struct._timeout* %25, null, !dbg !14089
  br i1 %26, label %42, label %27, !dbg !14089

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !14090
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !14039, metadata !DIExpression()), !dbg !14088
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14094
  %31 = load i64, i64* %30, align 8, !dbg !14094
  %32 = icmp slt i64 %28, %31, !dbg !14095
  br i1 %32, label %33, label %38, !dbg !14096

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14094
  %35 = sub nsw i64 %31, %28, !dbg !14097
  store i64 %35, i64* %34, align 8, !dbg !14097
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !14099
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14100
  tail call fastcc void @sys_dlist_insert.134(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #24, !dbg !14101
  br label %44, !dbg !14102

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !14103
  store i64 %39, i64* %24, align 8, !dbg !14103
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #24, !dbg !14104
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !14039, metadata !DIExpression()), !dbg !14088
  %41 = icmp eq %struct._timeout* %40, null, !dbg !14089
  br i1 %41, label %42, label %27, !dbg !14089, !llvm.loop !14105

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14107
  tail call fastcc void @sys_dlist_append.135(%struct._dnode* noundef %43) #24, !dbg !14110
  br label %44, !dbg !14111

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #24, !dbg !14112
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !14113
  br i1 %46, label %47, label %54, !dbg !14114

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #24, !dbg !14115
  call void @llvm.dbg.value(metadata i32 %48, metadata !14045, metadata !DIExpression()), !dbg !14116
  %49 = icmp ne i32 %48, 0, !dbg !14117
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !14119
  br i1 %52, label %54, label %53, !dbg !14119

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !14120
  br label %54, !dbg !14122

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !14123, metadata !DIExpression()) #23, !dbg !14129
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14128, metadata !DIExpression()) #23, !dbg !14129
  call void @llvm.dbg.value(metadata i32 %9, metadata !14131, metadata !DIExpression()) #23, !dbg !14134
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14136, !srcloc !14137
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()), !dbg !14054
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !14138
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.133() unnamed_addr #1 !dbg !14139 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !14142
  %2 = icmp eq i32 %1, 0, !dbg !14143
  br i1 %2, label %3, label %5, !dbg !14142

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !14144
  br label %5, !dbg !14142

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !14142
  ret i32 %6, !dbg !14145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !14146 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.138() #24, !dbg !14152
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14150, metadata !DIExpression()), !dbg !14153
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !14154
  ret %struct._timeout* %2, !dbg !14155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.134(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !14156 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14160, metadata !DIExpression()), !dbg !14164
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14161, metadata !DIExpression()), !dbg !14164
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14165
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14165
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14162, metadata !DIExpression()), !dbg !14164
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14166
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14167
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14168
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14169
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14170
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14171
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14172
  ret void, !dbg !14173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !14174 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14178, metadata !DIExpression()), !dbg !14180
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14181
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.136(%struct._dnode* noundef %2) #24, !dbg !14182
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14179, metadata !DIExpression()), !dbg !14180
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !14183
  ret %struct._timeout* %4, !dbg !14184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.135(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14185 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14190, metadata !DIExpression()), !dbg !14193
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14191, metadata !DIExpression()), !dbg !14193
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14194
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14192, metadata !DIExpression()), !dbg !14193
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14195
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !14196
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14197
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !14198
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !14199
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14200
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14201
  ret void, !dbg !14202
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !14203 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !14208
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !14205, metadata !DIExpression()), !dbg !14209
  %2 = tail call fastcc i32 @elapsed.133() #24, !dbg !14210
  call void @llvm.dbg.value(metadata i32 %2, metadata !14206, metadata !DIExpression()), !dbg !14209
  %3 = icmp eq %struct._timeout* %1, null, !dbg !14211
  br i1 %3, label %14, label %4, !dbg !14213

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !14214
  %6 = load i64, i64* %5, align 8, !dbg !14214
  %7 = sext i32 %2 to i64, !dbg !14215
  %8 = sub nsw i64 %6, %7, !dbg !14216
  %9 = icmp sgt i64 %8, 2147483647, !dbg !14217
  br i1 %9, label %14, label %10, !dbg !14218

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !14219
  %12 = select i1 %11, i64 %8, i64 0, !dbg !14219
  %13 = trunc i64 %12 to i32, !dbg !14219
  call void @llvm.dbg.value(metadata i32 %13, metadata !14207, metadata !DIExpression()), !dbg !14209
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !14221
  call void @llvm.dbg.value(metadata i32 %15, metadata !14207, metadata !DIExpression()), !dbg !14209
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14222
  %17 = icmp ne i32 %16, 0, !dbg !14224
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !14225
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !14225
  call void @llvm.dbg.value(metadata i32 %20, metadata !14207, metadata !DIExpression()), !dbg !14209
  ret i32 %20, !dbg !14226
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.136(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !14227 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14231, metadata !DIExpression()), !dbg !14233
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14232, metadata !DIExpression()), !dbg !14233
  %2 = icmp eq %struct._dnode* %0, null, !dbg !14234
  br i1 %2, label %5, label %3, !dbg !14235

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.137(%struct._dnode* noundef nonnull %0) #24, !dbg !14236
  br label %5, !dbg !14235

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !14235
  ret %struct._dnode* %6, !dbg !14237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.137(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !14238 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14240, metadata !DIExpression()), !dbg !14242
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14241, metadata !DIExpression()), !dbg !14242
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14243
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !14244
  br i1 %3, label %7, label %4, !dbg !14245

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14246
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !14246
  br label %7, !dbg !14245

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !14245
  ret %struct._dnode* %8, !dbg !14247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.138() unnamed_addr #5 !dbg !14248 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14252, metadata !DIExpression()), !dbg !14253
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.139() #24, !dbg !14254
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !14254
  ret %struct._dnode* %3, !dbg !14255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.139() unnamed_addr #5 !dbg !14256 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14260, metadata !DIExpression()), !dbg !14261
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !14262
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !14263
  ret i1 %2, !dbg !14264
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14265 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14269, metadata !DIExpression()), !dbg !14274
  call void @llvm.dbg.value(metadata i32 -22, metadata !14270, metadata !DIExpression()), !dbg !14274
  call void @llvm.dbg.value(metadata i32 0, metadata !14271, metadata !DIExpression()), !dbg !14275
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14055, metadata !DIExpression()) #23, !dbg !14276
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14278, !srcloc !14070
  call void @llvm.dbg.value(metadata i32 undef, metadata !14067, metadata !DIExpression()) #23, !dbg !14280
  call void @llvm.dbg.value(metadata i32 undef, metadata !14068, metadata !DIExpression()) #23, !dbg !14280
  call void @llvm.dbg.value(metadata i32 undef, metadata !14061, metadata !DIExpression()) #23, !dbg !14276
  call void @llvm.dbg.value(metadata i32 undef, metadata !14273, metadata !DIExpression()), !dbg !14275
  call void @llvm.dbg.value(metadata i32 -22, metadata !14270, metadata !DIExpression()), !dbg !14274
  call void @llvm.dbg.value(metadata i32 undef, metadata !14271, metadata !DIExpression()), !dbg !14275
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !14270, metadata !DIExpression()), !dbg !14274
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.142(%struct._dnode* noundef %3) #24, !dbg !14281
  br i1 %4, label %5, label %6, !dbg !14285

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !14286
  call void @llvm.dbg.value(metadata i32 0, metadata !14270, metadata !DIExpression()), !dbg !14274
  br label %6, !dbg !14288

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !14274
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14278
  call void @llvm.dbg.value(metadata i32 %8, metadata !14067, metadata !DIExpression()) #23, !dbg !14280
  call void @llvm.dbg.value(metadata i32 %8, metadata !14061, metadata !DIExpression()) #23, !dbg !14276
  call void @llvm.dbg.value(metadata i32 %8, metadata !14273, metadata !DIExpression()), !dbg !14275
  call void @llvm.dbg.value(metadata i32 %7, metadata !14270, metadata !DIExpression()), !dbg !14274
  call void @llvm.dbg.value(metadata i32 undef, metadata !14123, metadata !DIExpression()) #23, !dbg !14289
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14128, metadata !DIExpression()) #23, !dbg !14289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14131, metadata !DIExpression()) #23, !dbg !14291
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !14293, !srcloc !14137
  call void @llvm.dbg.value(metadata i32 undef, metadata !14271, metadata !DIExpression()), !dbg !14275
  ret i32 %7, !dbg !14294
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.142(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14295 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14301, metadata !DIExpression()), !dbg !14302
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14303
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14303
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14304
  ret i1 %4, !dbg !14305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !14306 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14308, metadata !DIExpression()), !dbg !14309
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !14310
  %3 = icmp eq %struct._timeout* %2, null, !dbg !14312
  br i1 %3, label %10, label %4, !dbg !14313

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14314
  %6 = load i64, i64* %5, align 8, !dbg !14314
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !14316
  %8 = load i64, i64* %7, align 8, !dbg !14317
  %9 = add nsw i64 %8, %6, !dbg !14317
  store i64 %9, i64* %7, align 8, !dbg !14317
  br label %10, !dbg !14318

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14319
  tail call fastcc void @sys_dlist_remove.143(%struct._dnode* noundef %11) #24, !dbg !14320
  ret void, !dbg !14321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.143(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !14322 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14326, metadata !DIExpression()), !dbg !14329
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14330
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14330
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14327, metadata !DIExpression()), !dbg !14329
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14331
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14331
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14328, metadata !DIExpression()), !dbg !14329
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14332
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14333
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14334
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14335
  tail call fastcc void @sys_dnode_init.144(%struct._dnode* noundef %0) #24, !dbg !14336
  ret void, !dbg !14337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.144(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14338 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14340, metadata !DIExpression()), !dbg !14341
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14342
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14343
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14344
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14345
  ret void, !dbg !14346
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14347 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14353, metadata !DIExpression()), !dbg !14358
  call void @llvm.dbg.value(metadata i64 0, metadata !14354, metadata !DIExpression()), !dbg !14358
  call void @llvm.dbg.value(metadata i32 0, metadata !14355, metadata !DIExpression()), !dbg !14359
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14055, metadata !DIExpression()) #23, !dbg !14360
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14362, !srcloc !14070
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14362
  call void @llvm.dbg.value(metadata i32 %3, metadata !14067, metadata !DIExpression()) #23, !dbg !14364
  call void @llvm.dbg.value(metadata i32 undef, metadata !14068, metadata !DIExpression()) #23, !dbg !14364
  call void @llvm.dbg.value(metadata i32 %3, metadata !14061, metadata !DIExpression()) #23, !dbg !14360
  call void @llvm.dbg.value(metadata i32 %3, metadata !14357, metadata !DIExpression()), !dbg !14359
  call void @llvm.dbg.value(metadata i64 0, metadata !14354, metadata !DIExpression()), !dbg !14358
  call void @llvm.dbg.value(metadata i32 undef, metadata !14355, metadata !DIExpression()), !dbg !14359
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !14365
  call void @llvm.dbg.value(metadata i64 %4, metadata !14354, metadata !DIExpression()), !dbg !14358
  call void @llvm.dbg.value(metadata i32 %3, metadata !14123, metadata !DIExpression()) #23, !dbg !14368
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14128, metadata !DIExpression()) #23, !dbg !14368
  call void @llvm.dbg.value(metadata i32 %3, metadata !14131, metadata !DIExpression()) #23, !dbg !14370
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14372, !srcloc !14137
  call void @llvm.dbg.value(metadata i32 undef, metadata !14355, metadata !DIExpression()), !dbg !14359
  ret i64 %4, !dbg !14373
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !14374 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14376, metadata !DIExpression()), !dbg !14380
  call void @llvm.dbg.value(metadata i64 0, metadata !14377, metadata !DIExpression()), !dbg !14380
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.145(%struct._timeout* noundef %0) #24, !dbg !14381
  br i1 %2, label %21, label %3, !dbg !14383

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !14384
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !14378, metadata !DIExpression()), !dbg !14385
  call void @llvm.dbg.value(metadata i64 0, metadata !14377, metadata !DIExpression()), !dbg !14380
  %5 = icmp eq %struct._timeout* %4, null, !dbg !14386
  br i1 %5, label %16, label %6, !dbg !14388

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !14378, metadata !DIExpression()), !dbg !14385
  call void @llvm.dbg.value(metadata i64 %8, metadata !14377, metadata !DIExpression()), !dbg !14380
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !14389
  %10 = load i64, i64* %9, align 8, !dbg !14389
  %11 = add nsw i64 %10, %8, !dbg !14391
  call void @llvm.dbg.value(metadata i64 %11, metadata !14377, metadata !DIExpression()), !dbg !14380
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !14392
  br i1 %12, label %16, label %13, !dbg !14394

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !14395
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !14378, metadata !DIExpression()), !dbg !14385
  call void @llvm.dbg.value(metadata i64 %11, metadata !14377, metadata !DIExpression()), !dbg !14380
  %15 = icmp eq %struct._timeout* %14, null, !dbg !14386
  br i1 %15, label %16, label %6, !dbg !14388, !llvm.loop !14396

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !14380
  call void @llvm.dbg.value(metadata i64 %17, metadata !14377, metadata !DIExpression()), !dbg !14380
  %18 = tail call fastcc i32 @elapsed.133() #24, !dbg !14398
  %19 = sext i32 %18 to i64, !dbg !14398
  %20 = sub nsw i64 %17, %19, !dbg !14399
  br label %21, !dbg !14400

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !14380
  ret i64 %22, !dbg !14401
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.145(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14402 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14406, metadata !DIExpression()), !dbg !14407
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14408
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.142(%struct._dnode* noundef %2) #24, !dbg !14409
  %4 = xor i1 %3, true, !dbg !14410
  ret i1 %4, !dbg !14411
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14412 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14414, metadata !DIExpression()), !dbg !14419
  call void @llvm.dbg.value(metadata i64 0, metadata !14415, metadata !DIExpression()), !dbg !14419
  call void @llvm.dbg.value(metadata i32 0, metadata !14416, metadata !DIExpression()), !dbg !14420
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14055, metadata !DIExpression()) #23, !dbg !14421
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14423, !srcloc !14070
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14423
  call void @llvm.dbg.value(metadata i32 %3, metadata !14067, metadata !DIExpression()) #23, !dbg !14425
  call void @llvm.dbg.value(metadata i32 undef, metadata !14068, metadata !DIExpression()) #23, !dbg !14425
  call void @llvm.dbg.value(metadata i32 %3, metadata !14061, metadata !DIExpression()) #23, !dbg !14421
  call void @llvm.dbg.value(metadata i32 %3, metadata !14418, metadata !DIExpression()), !dbg !14420
  call void @llvm.dbg.value(metadata i64 0, metadata !14415, metadata !DIExpression()), !dbg !14419
  call void @llvm.dbg.value(metadata i32 undef, metadata !14416, metadata !DIExpression()), !dbg !14420
  %4 = load i64, i64* @curr_tick, align 8, !dbg !14426
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !14429
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !14415, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14419
  call void @llvm.dbg.value(metadata i32 %3, metadata !14123, metadata !DIExpression()) #23, !dbg !14430
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14128, metadata !DIExpression()) #23, !dbg !14430
  call void @llvm.dbg.value(metadata i32 %3, metadata !14131, metadata !DIExpression()) #23, !dbg !14432
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14434, !srcloc !14137
  call void @llvm.dbg.value(metadata i32 undef, metadata !14416, metadata !DIExpression()), !dbg !14420
  %6 = add i64 %5, %4, !dbg !14435
  ret i64 %6, !dbg !14436
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !14437 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !14439, metadata !DIExpression()), !dbg !14443
  call void @llvm.dbg.value(metadata i32 0, metadata !14440, metadata !DIExpression()), !dbg !14444
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14055, metadata !DIExpression()) #23, !dbg !14445
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14447, !srcloc !14070
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14447
  call void @llvm.dbg.value(metadata i32 %2, metadata !14067, metadata !DIExpression()) #23, !dbg !14449
  call void @llvm.dbg.value(metadata i32 undef, metadata !14068, metadata !DIExpression()) #23, !dbg !14449
  call void @llvm.dbg.value(metadata i32 %2, metadata !14061, metadata !DIExpression()) #23, !dbg !14445
  call void @llvm.dbg.value(metadata i32 %2, metadata !14442, metadata !DIExpression()), !dbg !14444
  call void @llvm.dbg.value(metadata i32 -1, metadata !14439, metadata !DIExpression()), !dbg !14443
  call void @llvm.dbg.value(metadata i32 undef, metadata !14440, metadata !DIExpression()), !dbg !14444
  %3 = tail call fastcc i32 @next_timeout() #24, !dbg !14450
  call void @llvm.dbg.value(metadata i32 %3, metadata !14439, metadata !DIExpression()), !dbg !14443
  call void @llvm.dbg.value(metadata i32 %2, metadata !14123, metadata !DIExpression()) #23, !dbg !14453
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14128, metadata !DIExpression()) #23, !dbg !14453
  call void @llvm.dbg.value(metadata i32 %2, metadata !14131, metadata !DIExpression()) #23, !dbg !14455
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14457, !srcloc !14137
  call void @llvm.dbg.value(metadata i32 undef, metadata !14440, metadata !DIExpression()), !dbg !14444
  ret i32 %3, !dbg !14458
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !14459 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14461, metadata !DIExpression()), !dbg !14471
  call void @llvm.dbg.value(metadata i1 %1, metadata !14462, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14471
  call void @llvm.dbg.value(metadata i32 0, metadata !14463, metadata !DIExpression()), !dbg !14472
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14055, metadata !DIExpression()) #23, !dbg !14473
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14475, !srcloc !14070
  call void @llvm.dbg.value(metadata i32 undef, metadata !14067, metadata !DIExpression()) #23, !dbg !14477
  call void @llvm.dbg.value(metadata i32 undef, metadata !14068, metadata !DIExpression()) #23, !dbg !14477
  call void @llvm.dbg.value(metadata i32 undef, metadata !14061, metadata !DIExpression()) #23, !dbg !14473
  call void @llvm.dbg.value(metadata i32 undef, metadata !14465, metadata !DIExpression()), !dbg !14472
  call void @llvm.dbg.value(metadata i32 undef, metadata !14463, metadata !DIExpression()), !dbg !14472
  %4 = tail call fastcc i32 @next_timeout() #24, !dbg !14478
  call void @llvm.dbg.value(metadata i32 %4, metadata !14466, metadata !DIExpression()), !dbg !14479
  call void @llvm.dbg.value(metadata i1 undef, metadata !14469, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14479
  %5 = icmp slt i32 %4, 2, !dbg !14480
  call void @llvm.dbg.value(metadata i1 %5, metadata !14470, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14479
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !14481
  call void @llvm.dbg.value(metadata i1 %6, metadata !14469, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14479
  br i1 %7, label %11, label %8, !dbg !14481

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !14483
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !14483
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !14485
  br label %11, !dbg !14486

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !14475
  call void @llvm.dbg.value(metadata i32 %12, metadata !14067, metadata !DIExpression()) #23, !dbg !14477
  call void @llvm.dbg.value(metadata i32 %12, metadata !14061, metadata !DIExpression()) #23, !dbg !14473
  call void @llvm.dbg.value(metadata i32 %12, metadata !14465, metadata !DIExpression()), !dbg !14472
  call void @llvm.dbg.value(metadata i32 undef, metadata !14123, metadata !DIExpression()) #23, !dbg !14487
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14128, metadata !DIExpression()) #23, !dbg !14487
  call void @llvm.dbg.value(metadata i32 undef, metadata !14131, metadata !DIExpression()) #23, !dbg !14489
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !14491, !srcloc !14137
  call void @llvm.dbg.value(metadata i32 1, metadata !14463, metadata !DIExpression()), !dbg !14472
  call void @llvm.dbg.value(metadata i32 undef, metadata !14463, metadata !DIExpression()), !dbg !14472
  ret void, !dbg !14492
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !14493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14497, metadata !DIExpression()), !dbg !14502
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !14503
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14055, metadata !DIExpression()) #23, !dbg !14504
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14506, !srcloc !14070
  call void @llvm.dbg.value(metadata i32 undef, metadata !14067, metadata !DIExpression()) #23, !dbg !14508
  call void @llvm.dbg.value(metadata i32 undef, metadata !14068, metadata !DIExpression()) #23, !dbg !14508
  call void @llvm.dbg.value(metadata i32 undef, metadata !14061, metadata !DIExpression()) #23, !dbg !14504
  call void @llvm.dbg.value(metadata i32 undef, metadata !14498, metadata !DIExpression()), !dbg !14502
  store i32 %0, i32* @announce_remaining, align 4, !dbg !14502
  call void @llvm.dbg.value(metadata i32 undef, metadata !14498, metadata !DIExpression()), !dbg !14502
  %3 = tail call fastcc %struct._timeout* @first() #24, !dbg !14509
  %4 = icmp eq %struct._timeout* %3, null, !dbg !14510
  br i1 %4, label %28, label %5, !dbg !14511

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !14512
  %10 = load i64, i64* %9, align 8, !dbg !14512
  %11 = sext i32 %8 to i64, !dbg !14513
  %12 = icmp sgt i64 %10, %11, !dbg !14514
  br i1 %12, label %26, label %13, !dbg !14515

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !14502
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !14499, metadata !DIExpression()), !dbg !14516
  %15 = trunc i64 %10 to i32, !dbg !14517
  call void @llvm.dbg.value(metadata i32 %15, metadata !14501, metadata !DIExpression()), !dbg !14516
  %16 = sext i32 %15 to i64, !dbg !14518
  %17 = load i64, i64* @curr_tick, align 8, !dbg !14519
  %18 = add i64 %17, %16, !dbg !14519
  store i64 %18, i64* @curr_tick, align 8, !dbg !14519
  store i64 0, i64* %9, align 8, !dbg !14520
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #24, !dbg !14521
  call void @llvm.dbg.value(metadata i32 %14, metadata !14123, metadata !DIExpression()) #23, !dbg !14522
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14128, metadata !DIExpression()) #23, !dbg !14522
  call void @llvm.dbg.value(metadata i32 %14, metadata !14131, metadata !DIExpression()) #23, !dbg !14524
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14526, !srcloc !14137
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !14527
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !14527
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !14528
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14055, metadata !DIExpression()) #23, !dbg !14529
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14531, !srcloc !14070
  call void @llvm.dbg.value(metadata i32 undef, metadata !14067, metadata !DIExpression()) #23, !dbg !14533
  call void @llvm.dbg.value(metadata i32 undef, metadata !14068, metadata !DIExpression()) #23, !dbg !14533
  call void @llvm.dbg.value(metadata i32 undef, metadata !14061, metadata !DIExpression()) #23, !dbg !14529
  call void @llvm.dbg.value(metadata i32 undef, metadata !14498, metadata !DIExpression()), !dbg !14502
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !14534
  %23 = sub nsw i32 %22, %15, !dbg !14534
  store i32 %23, i32* @announce_remaining, align 4, !dbg !14502
  call void @llvm.dbg.value(metadata i32 undef, metadata !14498, metadata !DIExpression()), !dbg !14502
  %24 = tail call fastcc %struct._timeout* @first() #24, !dbg !14509
  %25 = icmp eq %struct._timeout* %24, null, !dbg !14510
  br i1 %25, label %28, label %5, !dbg !14511, !llvm.loop !14535

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !14537
  store i64 %27, i64* %9, align 8, !dbg !14537
  br label %32, !dbg !14540

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !14502
  %31 = sext i32 %30 to i64, !dbg !14541
  br label %32, !dbg !14541

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !14541
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !14502
  %36 = load i64, i64* @curr_tick, align 8, !dbg !14542
  %37 = add i64 %36, %33, !dbg !14542
  store i64 %37, i64* @curr_tick, align 8, !dbg !14542
  store i32 0, i32* @announce_remaining, align 4, !dbg !14543
  %38 = tail call fastcc i32 @next_timeout() #24, !dbg !14544
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !14545
  call void @llvm.dbg.value(metadata i32 %35, metadata !14123, metadata !DIExpression()) #23, !dbg !14546
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14128, metadata !DIExpression()) #23, !dbg !14546
  call void @llvm.dbg.value(metadata i32 %35, metadata !14131, metadata !DIExpression()) #23, !dbg !14548
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !14550, !srcloc !14137
  ret void, !dbg !14551
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !14552 {
  call void @llvm.dbg.value(metadata i64 0, metadata !14556, metadata !DIExpression()), !dbg !14560
  call void @llvm.dbg.value(metadata i32 0, metadata !14557, metadata !DIExpression()), !dbg !14561
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14055, metadata !DIExpression()) #23, !dbg !14562
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14564, !srcloc !14070
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14564
  call void @llvm.dbg.value(metadata i32 %2, metadata !14067, metadata !DIExpression()) #23, !dbg !14566
  call void @llvm.dbg.value(metadata i32 undef, metadata !14068, metadata !DIExpression()) #23, !dbg !14566
  call void @llvm.dbg.value(metadata i32 %2, metadata !14061, metadata !DIExpression()) #23, !dbg !14562
  call void @llvm.dbg.value(metadata i32 %2, metadata !14559, metadata !DIExpression()), !dbg !14561
  call void @llvm.dbg.value(metadata i64 0, metadata !14556, metadata !DIExpression()), !dbg !14560
  call void @llvm.dbg.value(metadata i32 undef, metadata !14557, metadata !DIExpression()), !dbg !14561
  %3 = load i64, i64* @curr_tick, align 8, !dbg !14567
  %4 = tail call fastcc i32 @elapsed.133() #24, !dbg !14570
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !14556, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14560
  call void @llvm.dbg.value(metadata i32 %2, metadata !14123, metadata !DIExpression()) #23, !dbg !14571
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14128, metadata !DIExpression()) #23, !dbg !14571
  call void @llvm.dbg.value(metadata i32 %2, metadata !14131, metadata !DIExpression()) #23, !dbg !14573
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14575, !srcloc !14137
  call void @llvm.dbg.value(metadata i32 undef, metadata !14557, metadata !DIExpression()), !dbg !14561
  %5 = sext i32 %4 to i64, !dbg !14570
  %6 = add i64 %3, %5, !dbg !14576
  ret i64 %6, !dbg !14577
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !14578 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !14579
  %2 = trunc i64 %1 to i32, !dbg !14580
  ret i32 %2, !dbg !14581
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !14582 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !14583
  ret i64 %1, !dbg !14584
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !14585 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14587, metadata !DIExpression()), !dbg !14594
  %2 = icmp eq i32 %0, 0, !dbg !14595
  br i1 %2, label %10, label %3, !dbg !14597

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !14598
  call void @llvm.dbg.value(metadata i32 %4, metadata !14588, metadata !DIExpression()), !dbg !14594
  %5 = mul i32 %0, 84, !dbg !14599
  call void @llvm.dbg.value(metadata i32 %5, metadata !14589, metadata !DIExpression()), !dbg !14594
  br label %6, !dbg !14600

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !14601
  call void @llvm.dbg.value(metadata i32 %7, metadata !14590, metadata !DIExpression()), !dbg !14602
  %8 = sub i32 %7, %4, !dbg !14603
  %9 = icmp ult i32 %8, %5, !dbg !14605
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !14606
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !14607 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !14608
  ret i32 %1, !dbg !14609
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !14610 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !14612
  ret i32 %1, !dbg !14613
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !14614 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14618, metadata !DIExpression()), !dbg !14620
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !14621

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !14622
  br label %14, !dbg !14626

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14619, metadata !DIExpression()), !dbg !14620
  %6 = icmp slt i64 %2, -1, !dbg !14627
  br i1 %6, label %7, label %9, !dbg !14630

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !14631
  br label %14, !dbg !14632

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !14634
  %11 = icmp ugt i64 %2, 1, !dbg !14635
  %12 = select i1 %11, i64 %2, i64 1, !dbg !14635
  %13 = add nsw i64 %10, %12, !dbg !14636
  br label %14, !dbg !14637

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !14638
  ret i64 %15, !dbg !14639
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !14640 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.154, i32 0, i32 0)) #25, !dbg !14642
  ret void, !dbg !14643
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { argmemonly nofree nounwind willreturn writeonly }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nounwind readnone }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!595, !2, !2152, !2154, !27, !2331, !2333, !2371, !111, !168, !2373, !2384, !2430, !2432, !2460, !2488, !2531, !2603, !2648, !197, !351, !2676, !387, !397, !422, !627, !2681, !765, !831, !1135, !1354, !2720, !1467, !1557, !2722, !2808, !2873, !1609, !2876, !1616, !1980, !2894, !2000, !2896, !2115, !2899}
!llvm.ident = !{!2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901, !2901}
!llvm.module.flags = !{!2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 98, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5504, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 86)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2752, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !111, file: !129, line: 56, type: !130, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !113, globals: !128, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!113 = !{!114}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 259, baseType: !117)
!116 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f411xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 250, size: 224, elements: !118)
!118 = !{!119, !122, !123, !124, !125, !126, !127}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !117, file: !116, line: 252, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !117, file: !116, line: 253, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !117, file: !116, line: 254, baseType: !120, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !117, file: !116, line: 255, baseType: !120, size: 32, offset: 96)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !117, file: !116, line: 256, baseType: !120, size: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !117, file: !116, line: 257, baseType: !120, size: 32, offset: 160)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !117, file: !116, line: 258, baseType: !120, size: 32, offset: 192)
!128 = !{!109}
!129 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !133)
!132 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!133 = !{!134, !165}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !131, file: !132, line: 60, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DISubroutineType(types: !137)
!137 = !{!103, !138}
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !140)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = !{!143, !147, !148, !149, !158, !159}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !140, file: !141, line: 380, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!146 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !140, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !140, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !140, file: !141, line: 386, baseType: !150, size: 32, offset: 96)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !152)
!152 = !{!153, !156}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !151, file: !141, line: 359, baseType: !154, size: 8)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !155)
!155 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !151, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!157 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !140, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !140, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !141, line: 43, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !164)
!164 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !131, file: !132, line: 65, baseType: !138, size: 32, offset: 32)
!166 = !DIGlobalVariableExpression(var: !167, expr: !DIExpression())
!167 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !168, file: !171, line: 71, type: !172, isLocal: true, isDefinition: true, align: 32)
!168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !169, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !170, splitDebugInlining: false, nameTableKind: None)
!169 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!170 = !{!166}
!171 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !174)
!174 = !{!175, !194}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !173, file: !132, line: 60, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DISubroutineType(types: !178)
!178 = !{!103, !179}
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !182)
!182 = !{!183, !184, !185, !186, !192, !193}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !181, file: !141, line: 380, baseType: !144, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !181, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !181, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !181, file: !141, line: 386, baseType: !187, size: 32, offset: 96)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !188, file: !141, line: 359, baseType: !154, size: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !188, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !181, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !181, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !173, file: !132, line: 65, baseType: !179, size: 32, offset: 32)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "static_regions", scope: !197, file: !206, line: 62, type: !347, isLocal: true, isDefinition: true)
!197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !199, globals: !202, splitDebugInlining: false, nameTableKind: None)
!198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!199 = !{!200, !103, !121, !102}
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !201, line: 214, baseType: !32)
!201 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!202 = !{!203, !195}
!203 = !DIGlobalVariableExpression(var: !204, expr: !DIExpression())
!204 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !205, file: !206, line: 198, type: !333, isLocal: true, isDefinition: true)
!205 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !206, file: !206, line: 175, type: !207, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !328)
!206 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!207 = !DISubroutineType(types: !208)
!208 = !{null, !209}
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !212)
!211 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!212 = !{!213, !282, !295, !296, !297, !298, !304, !323}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !210, file: !211, line: 247, baseType: !214, size: 384)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !215)
!215 = !{!216, !244, !252, !253, !254, !267, !268, !269}
!216 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !211, line: 60, baseType: !217, size: 64)
!217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !214, file: !211, line: 60, size: 64, elements: !218)
!218 = !{!219, !235}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !217, file: !211, line: 61, baseType: !220, size: 64)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !222)
!221 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !223)
!223 = !{!224, !230}
!224 = !DIDerivedType(tag: DW_TAG_member, scope: !222, file: !221, line: 38, baseType: !225, size: 32)
!225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !222, file: !221, line: 38, size: 32, elements: !226)
!226 = !{!227, !229}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !225, file: !221, line: 39, baseType: !228, size: 32)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !225, file: !221, line: 40, baseType: !228, size: 32)
!230 = !DIDerivedType(tag: DW_TAG_member, scope: !222, file: !221, line: 42, baseType: !231, size: 32, offset: 32)
!231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !222, file: !221, line: 42, size: 32, elements: !232)
!232 = !{!233, !234}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !231, file: !221, line: 43, baseType: !228, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !231, file: !221, line: 44, baseType: !228, size: 32)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !217, file: !211, line: 62, baseType: !236, size: 64)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !238)
!237 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!238 = !{!239}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !236, file: !237, line: 50, baseType: !240, size: 64)
!240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 64, elements: !242)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!242 = !{!243}
!243 = !DISubrange(count: 2)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !214, file: !211, line: 68, baseType: !245, size: 32, offset: 64)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !249)
!249 = !{!250}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !248, file: !247, line: 232, baseType: !251, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !222)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !214, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !214, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!254 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !211, line: 90, baseType: !255, size: 16, offset: 112)
!255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !214, file: !211, line: 90, size: 16, elements: !256)
!256 = !{!257, !264}
!257 = !DIDerivedType(tag: DW_TAG_member, scope: !255, file: !211, line: 91, baseType: !258, size: 16)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !255, file: !211, line: 91, size: 16, elements: !259)
!259 = !{!260, !263}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !258, file: !211, line: 96, baseType: !261, size: 8)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !262)
!262 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !258, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !255, file: !211, line: 100, baseType: !265, size: 16)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !266)
!266 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !214, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !214, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !214, file: !211, line: 131, baseType: !270, size: 192, offset: 192)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !271)
!271 = !{!272, !273, !279}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !270, file: !247, line: 245, baseType: !220, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !270, file: !247, line: 246, baseType: !274, size: 32, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!276 = !DISubroutineType(types: !277)
!277 = !{null, !278}
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !270, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !281)
!281 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !210, file: !211, line: 250, baseType: !283, size: 288, offset: 384)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !285)
!284 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!285 = !{!286, !287, !288, !289, !290, !291, !292, !293, !294}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !283, file: !284, line: 26, baseType: !121, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !283, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !283, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !283, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !283, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !283, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !283, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !283, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !283, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !210, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !210, file: !211, line: 256, baseType: !246, size: 64, offset: 704)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !210, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !210, file: !211, line: 300, baseType: !299, size: 96, offset: 800)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !300)
!300 = !{!301, !302, !303}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !299, file: !211, line: 153, baseType: !22, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !299, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !299, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !210, file: !211, line: 325, baseType: !305, size: 32, offset: 896)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 32)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !308)
!307 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!308 = !{!309, !318, !319}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !306, file: !307, line: 5074, baseType: !310, size: 96)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !312)
!311 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!312 = !{!313, !316, !317}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !310, file: !311, line: 57, baseType: !314, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 32)
!315 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !311, line: 57, flags: DIFlagFwdDecl)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !310, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !310, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !306, file: !307, line: 5075, baseType: !246, size: 64, offset: 96)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !306, file: !307, line: 5076, baseType: !320, offset: 160)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!321 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!322 = !{}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !210, file: !211, line: 343, baseType: !324, size: 64, offset: 928)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !325)
!325 = !{!326, !327}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !324, file: !284, line: 63, baseType: !121, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !324, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!328 = !{!329, !330, !331, !332}
!329 = !DILocalVariable(name: "thread", arg: 1, scope: !205, file: !206, line: 175, type: !209)
!330 = !DILocalVariable(name: "region_num", scope: !205, file: !206, line: 200, type: !154)
!331 = !DILocalVariable(name: "guard_start", scope: !205, file: !206, line: 265, type: !22)
!332 = !DILocalVariable(name: "guard_size", scope: !205, file: !206, line: 266, type: !200)
!333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !334, size: 96, elements: !345)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !335, line: 52, size: 96, elements: !336)
!335 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!336 = !{!337, !338, !339}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !334, file: !335, line: 53, baseType: !22, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !334, file: !335, line: 54, baseType: !200, size: 32, offset: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !334, file: !335, line: 55, baseType: !340, size: 32, offset: 64)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !341, line: 151, baseType: !342)
!341 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !341, line: 149, size: 32, elements: !343)
!343 = !{!344}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !342, file: !341, line: 150, baseType: !121, size: 32)
!345 = !{!346}
!346 = !DISubrange(count: 1)
!347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 96, elements: !345)
!348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !334)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !351, file: !384, line: 39, type: !154, isLocal: true, isDefinition: true)
!351 = distinct !DICompileUnit(language: DW_LANG_C99, file: !352, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !353, globals: !383, splitDebugInlining: false, nameTableKind: None)
!352 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!353 = !{!354, !102, !103, !371, !154}
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 32)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !356, line: 1226, baseType: !357)
!356 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!357 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 1213, size: 352, elements: !358)
!358 = !{!359, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !357, file: !356, line: 1215, baseType: !360, size: 32)
!360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !357, file: !356, line: 1216, baseType: !120, size: 32, offset: 32)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !357, file: !356, line: 1217, baseType: !120, size: 32, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !357, file: !356, line: 1218, baseType: !120, size: 32, offset: 96)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !357, file: !356, line: 1219, baseType: !120, size: 32, offset: 128)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !357, file: !356, line: 1220, baseType: !120, size: 32, offset: 160)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !357, file: !356, line: 1221, baseType: !120, size: 32, offset: 192)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !357, file: !356, line: 1222, baseType: !120, size: 32, offset: 224)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !357, file: !356, line: 1223, baseType: !120, size: 32, offset: 256)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !357, file: !356, line: 1224, baseType: !120, size: 32, offset: 288)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !357, file: !356, line: 1225, baseType: !120, size: 32, offset: 320)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !373)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !374, line: 27, size: 96, elements: !375)
!374 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!375 = !{!376, !377, !378}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !373, file: !374, line: 29, baseType: !121, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !373, file: !374, line: 31, baseType: !144, size: 32, offset: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !373, file: !374, line: 37, baseType: !379, size: 32, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !341, line: 146, baseType: !380)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !341, line: 141, size: 32, elements: !381)
!381 = !{!382}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !380, file: !341, line: 143, baseType: !121, size: 32)
!383 = !{!349}
!384 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !387, file: !394, line: 21, type: !106, isLocal: true, isDefinition: true)
!387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !389, globals: !393, splitDebugInlining: false, nameTableKind: None)
!388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!389 = !{!390, !103, !102}
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!391 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !392, line: 22, baseType: !103)
!392 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!393 = !{!385}
!394 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !397, file: !402, line: 13, type: !419, isLocal: true, isDefinition: true)
!397 = distinct !DICompileUnit(language: DW_LANG_C99, file: !398, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !399, splitDebugInlining: false, nameTableKind: None)
!398 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!399 = !{!400, !395}
!400 = !DIGlobalVariableExpression(var: !401, expr: !DIExpression())
!401 = distinct !DIGlobalVariable(name: "mpu_config", scope: !397, file: !402, line: 37, type: !403, isLocal: false, isDefinition: true)
!402 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !404)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !374, line: 41, size: 64, elements: !405)
!405 = !{!406, !407}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !404, file: !374, line: 43, baseType: !121, size: 32)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !404, file: !374, line: 45, baseType: !408, size: 32, offset: 32)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !410)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !374, line: 27, size: 96, elements: !411)
!411 = !{!412, !413, !414}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !410, file: !374, line: 29, baseType: !121, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !410, file: !374, line: 31, baseType: !144, size: 32, offset: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !410, file: !374, line: 37, baseType: !415, size: 32, offset: 64)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !341, line: 146, baseType: !416)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !341, line: 141, size: 32, elements: !417)
!417 = !{!418}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !416, file: !341, line: 143, baseType: !121, size: 32)
!419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 192, elements: !242)
!420 = !DIGlobalVariableExpression(var: !421, expr: !DIExpression())
!421 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !422, file: !506, line: 72, type: !590, isLocal: true, isDefinition: true)
!422 = distinct !DICompileUnit(language: DW_LANG_C99, file: !423, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !424, retainedTypes: !492, globals: !503, splitDebugInlining: false, nameTableKind: None)
!423 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!424 = !{!30, !425}
!425 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 65, baseType: !103, size: 32, elements: !426)
!426 = !{!427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491}
!427 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!428 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!429 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!430 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!431 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!432 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!433 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!434 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!435 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!436 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!437 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!438 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!439 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!440 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!441 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!442 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!443 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!444 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!445 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!446 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!447 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!448 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!449 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!450 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!451 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!452 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!453 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!454 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!455 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!456 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!457 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!458 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!459 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!460 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!461 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!462 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!463 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!464 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!465 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!466 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!467 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!468 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!469 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!470 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!471 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!472 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!473 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!474 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!475 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!476 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!477 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!478 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!479 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!480 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!481 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!482 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!483 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!484 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!485 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!486 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!487 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!488 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!489 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!490 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!491 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!492 = !{!200, !103, !102, !493}
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 32)
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !116, line: 244, baseType: !495)
!495 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 236, size: 192, elements: !496)
!496 = !{!497, !498, !499, !500, !501, !502}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !495, file: !116, line: 238, baseType: !120, size: 32)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !495, file: !116, line: 239, baseType: !120, size: 32, offset: 32)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !495, file: !116, line: 240, baseType: !120, size: 32, offset: 64)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !495, file: !116, line: 241, baseType: !120, size: 32, offset: 96)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !495, file: !116, line: 242, baseType: !120, size: 32, offset: 128)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !495, file: !116, line: 243, baseType: !120, size: 32, offset: 160)
!503 = !{!504, !510, !526, !537, !554, !420, !556, !570, !572, !574, !576, !578, !580, !582, !584, !586, !588}
!504 = !DIGlobalVariableExpression(var: !505, expr: !DIExpression())
!505 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !422, file: !506, line: 424, type: !507, isLocal: false, isDefinition: true, align: 16)
!506 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !508)
!508 = !{!509}
!509 = !DISubrange(count: 4)
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !422, file: !506, line: 424, type: !512, isLocal: false, isDefinition: true, align: 32)
!512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !513)
!513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !514)
!514 = !{!515, !516, !517, !518, !524, !525}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !513, file: !141, line: 380, baseType: !144, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !513, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !513, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !513, file: !141, line: 386, baseType: !519, size: 32, offset: 96)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 32)
!520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !521)
!521 = !{!522, !523}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !520, file: !141, line: 359, baseType: !154, size: 8)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !520, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !513, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !513, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !422, file: !506, line: 424, type: !528, isLocal: true, isDefinition: true, align: 32)
!528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !529)
!529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !530)
!530 = !{!531, !536}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !529, file: !132, line: 60, baseType: !532, size: 32)
!532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 32)
!533 = !DISubroutineType(types: !534)
!534 = !{!103, !535}
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 32)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !529, file: !132, line: 65, baseType: !535, size: 32, offset: 32)
!537 = !DIGlobalVariableExpression(var: !538, expr: !DIExpression())
!538 = distinct !DIGlobalVariable(name: "exti_data", scope: !422, file: !506, line: 423, type: !539, isLocal: true, isDefinition: true)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !506, line: 107, size: 1472, elements: !540)
!540 = !{!541}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !539, file: !506, line: 109, baseType: !542, size: 1472)
!542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !543, size: 1472, elements: !552)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !506, line: 101, size: 64, elements: !544)
!544 = !{!545, !551}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !543, file: !506, line: 102, baseType: !546, size: 32)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !547, line: 63, baseType: !548)
!547 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 32)
!549 = !DISubroutineType(types: !550)
!550 = !{null, !103, !102}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !543, file: !506, line: 103, baseType: !102, size: 32, offset: 32)
!552 = !{!553}
!553 = !DISubrange(count: 23)
!554 = !DIGlobalVariableExpression(var: !555, expr: !DIExpression())
!555 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !422, file: !506, line: 424, type: !520, isLocal: true, isDefinition: true, align: 8)
!556 = !DIGlobalVariableExpression(var: !557, expr: !DIExpression())
!557 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !558, file: !506, line: 493, type: !563, isLocal: true, isDefinition: true, align: 32)
!558 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !506, file: !506, line: 460, type: !559, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !561)
!559 = !DISubroutineType(types: !560)
!560 = !{null, !535}
!561 = !{!562}
!562 = !DILocalVariable(name: "dev", arg: 1, scope: !558, file: !506, line: 460, type: !535)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !564)
!564 = !{!565, !567, !568, !569}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !563, file: !10, line: 55, baseType: !566, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !563, file: !10, line: 57, baseType: !566, size: 32, offset: 32)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !563, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !563, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!570 = !DIGlobalVariableExpression(var: !571, expr: !DIExpression())
!571 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !558, file: !506, line: 497, type: !563, isLocal: true, isDefinition: true, align: 32)
!572 = !DIGlobalVariableExpression(var: !573, expr: !DIExpression())
!573 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !558, file: !506, line: 507, type: !563, isLocal: true, isDefinition: true, align: 32)
!574 = !DIGlobalVariableExpression(var: !575, expr: !DIExpression())
!575 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !558, file: !506, line: 512, type: !563, isLocal: true, isDefinition: true, align: 32)
!576 = !DIGlobalVariableExpression(var: !577, expr: !DIExpression())
!577 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !558, file: !506, line: 516, type: !563, isLocal: true, isDefinition: true, align: 32)
!578 = !DIGlobalVariableExpression(var: !579, expr: !DIExpression())
!579 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !558, file: !506, line: 523, type: !563, isLocal: true, isDefinition: true, align: 32)
!580 = !DIGlobalVariableExpression(var: !581, expr: !DIExpression())
!581 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !558, file: !506, line: 527, type: !563, isLocal: true, isDefinition: true, align: 32)
!582 = !DIGlobalVariableExpression(var: !583, expr: !DIExpression())
!583 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !558, file: !506, line: 581, type: !563, isLocal: true, isDefinition: true, align: 32)
!584 = !DIGlobalVariableExpression(var: !585, expr: !DIExpression())
!585 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !558, file: !506, line: 586, type: !563, isLocal: true, isDefinition: true, align: 32)
!586 = !DIGlobalVariableExpression(var: !587, expr: !DIExpression())
!587 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !558, file: !506, line: 591, type: !563, isLocal: true, isDefinition: true, align: 32)
!588 = !DIGlobalVariableExpression(var: !589, expr: !DIExpression())
!589 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !558, file: !506, line: 595, type: !563, isLocal: true, isDefinition: true, align: 32)
!590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !591, size: 736, elements: !552)
!591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !592)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !116, line: 134, baseType: !425)
!593 = !DIGlobalVariableExpression(var: !594, expr: !DIExpression())
!594 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !595, file: !600, line: 22, type: !622, isLocal: false, isDefinition: true, align: 16)
!595 = distinct !DICompileUnit(language: DW_LANG_C99, file: !596, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !597, splitDebugInlining: false, nameTableKind: None)
!596 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!597 = !{!598, !593, !604, !606, !608, !610, !612, !614, !616, !618, !620}
!598 = !DIGlobalVariableExpression(var: !599, expr: !DIExpression())
!599 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !595, file: !600, line: 17, type: !601, isLocal: false, isDefinition: true, align: 16)
!600 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 192, elements: !602)
!602 = !{!603}
!603 = !DISubrange(count: 12)
!604 = !DIGlobalVariableExpression(var: !605, expr: !DIExpression())
!605 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !595, file: !600, line: 29, type: !507, isLocal: false, isDefinition: true, align: 16)
!606 = !DIGlobalVariableExpression(var: !607, expr: !DIExpression())
!607 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !595, file: !600, line: 36, type: !507, isLocal: false, isDefinition: true, align: 16)
!608 = !DIGlobalVariableExpression(var: !609, expr: !DIExpression())
!609 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !595, file: !600, line: 43, type: !507, isLocal: false, isDefinition: true, align: 16)
!610 = !DIGlobalVariableExpression(var: !611, expr: !DIExpression())
!611 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !595, file: !600, line: 50, type: !507, isLocal: false, isDefinition: true, align: 16)
!612 = !DIGlobalVariableExpression(var: !613, expr: !DIExpression())
!613 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !595, file: !600, line: 57, type: !507, isLocal: false, isDefinition: true, align: 16)
!614 = !DIGlobalVariableExpression(var: !615, expr: !DIExpression())
!615 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !595, file: !600, line: 64, type: !507, isLocal: false, isDefinition: true, align: 16)
!616 = !DIGlobalVariableExpression(var: !617, expr: !DIExpression())
!617 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !595, file: !600, line: 71, type: !507, isLocal: false, isDefinition: true, align: 16)
!618 = !DIGlobalVariableExpression(var: !619, expr: !DIExpression())
!619 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !595, file: !600, line: 78, type: !507, isLocal: false, isDefinition: true, align: 16)
!620 = !DIGlobalVariableExpression(var: !621, expr: !DIExpression())
!621 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !595, file: !600, line: 85, type: !507, isLocal: false, isDefinition: true, align: 16)
!622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 48, elements: !623)
!623 = !{!624}
!624 = !DISubrange(count: 3)
!625 = !DIGlobalVariableExpression(var: !626, expr: !DIExpression())
!626 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !627, file: !691, line: 398, type: !724, isLocal: true, isDefinition: true)
!627 = distinct !DICompileUnit(language: DW_LANG_C99, file: !628, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !629, retainedTypes: !642, globals: !688, splitDebugInlining: false, nameTableKind: None)
!628 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!629 = !{!630, !30, !635}
!630 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !631, line: 197, baseType: !32, size: 32, elements: !632)
!631 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!632 = !{!633, !634}
!633 = !DIEnumerator(name: "SUCCESS", value: 0)
!634 = !DIEnumerator(name: "ERROR", value: 1)
!635 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !636, line: 44, baseType: !32, size: 32, elements: !637)
!636 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!637 = !{!638, !639, !640, !641}
!638 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!639 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!640 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!641 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!642 = !{!102, !103, !121, !643, !681, !687}
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !645)
!645 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !646)
!646 = !{!647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !680}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !645, file: !116, line: 338, baseType: !120, size: 32)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !645, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !645, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !645, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !645, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !645, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !645, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !645, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !645, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !645, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !645, file: !116, line: 348, baseType: !658, size: 64, offset: 320)
!658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 64, elements: !242)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !645, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !645, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !645, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !645, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !645, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !645, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !645, file: !116, line: 355, baseType: !658, size: 64, offset: 576)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !645, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !645, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !645, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !645, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !645, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !645, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !645, file: !116, line: 362, baseType: !658, size: 64, offset: 832)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !645, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !645, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !645, file: !116, line: 365, baseType: !658, size: 64, offset: 960)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !645, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !645, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !645, file: !116, line: 368, baseType: !679, size: 32, offset: 1088)
!679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 32, elements: !345)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !645, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 32)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !683, line: 343, size: 64, elements: !684)
!683 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!684 = !{!685, !686}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !682, file: !683, line: 344, baseType: !121, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !682, file: !683, line: 345, baseType: !121, size: 32, offset: 32)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!688 = !{!689, !695, !711, !722, !625}
!689 = !DIGlobalVariableExpression(var: !690, expr: !DIExpression())
!690 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !627, file: !691, line: 752, type: !692, isLocal: false, isDefinition: true, align: 16)
!691 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 704, elements: !693)
!693 = !{!694}
!694 = !DISubrange(count: 44)
!695 = !DIGlobalVariableExpression(var: !696, expr: !DIExpression())
!696 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !627, file: !691, line: 752, type: !697, isLocal: false, isDefinition: true, align: 32)
!697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !698)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !699)
!699 = !{!700, !701, !702, !703, !709, !710}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !698, file: !141, line: 380, baseType: !144, size: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !698, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !698, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !698, file: !141, line: 386, baseType: !704, size: 32, offset: 96)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 32)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !706)
!706 = !{!707, !708}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !705, file: !141, line: 359, baseType: !154, size: 8)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !705, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !698, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !698, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!711 = !DIGlobalVariableExpression(var: !712, expr: !DIExpression())
!712 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !627, file: !691, line: 752, type: !713, isLocal: true, isDefinition: true, align: 32)
!713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !714)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !715)
!715 = !{!716, !721}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !714, file: !132, line: 60, baseType: !717, size: 32)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 32)
!718 = !DISubroutineType(types: !719)
!719 = !{!103, !720}
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 32)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !714, file: !132, line: 65, baseType: !720, size: 32, offset: 32)
!722 = !DIGlobalVariableExpression(var: !723, expr: !DIExpression())
!723 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !627, file: !691, line: 752, type: !705, isLocal: true, isDefinition: true, align: 8)
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !636, line: 100, size: 224, elements: !725)
!725 = !{!726, !732, !733, !742, !747, !752, !758}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !724, file: !636, line: 101, baseType: !727, size: 32)
!727 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !636, line: 76, baseType: !728)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 32)
!729 = !DISubroutineType(types: !730)
!730 = !{!103, !720, !731}
!731 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !636, line: 56, baseType: !102)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !724, file: !636, line: 102, baseType: !727, size: 32, offset: 32)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !724, file: !636, line: 103, baseType: !734, size: 32, offset: 64)
!734 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !636, line: 83, baseType: !735)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 32)
!736 = !DISubroutineType(types: !737)
!737 = !{!103, !720, !731, !738, !102}
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !636, line: 72, baseType: !739)
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 32)
!740 = !DISubroutineType(types: !741)
!741 = !{null, !720, !731, !102}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !724, file: !636, line: 104, baseType: !743, size: 32, offset: 96)
!743 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !636, line: 79, baseType: !744)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 32)
!745 = !DISubroutineType(types: !746)
!746 = !{!103, !720, !731, !687}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !724, file: !636, line: 105, baseType: !748, size: 32, offset: 128)
!748 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !636, line: 88, baseType: !749)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 32)
!750 = !DISubroutineType(types: !751)
!751 = !{!635, !720, !731}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !724, file: !636, line: 106, baseType: !753, size: 32, offset: 160)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !636, line: 92, baseType: !754)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 32)
!755 = !DISubroutineType(types: !756)
!756 = !{!103, !720, !731, !757}
!757 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !636, line: 64, baseType: !102)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !724, file: !636, line: 107, baseType: !759, size: 32, offset: 192)
!759 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !636, line: 96, baseType: !760)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 32)
!761 = !DISubroutineType(types: !762)
!762 = !{!103, !720, !731, !102}
!763 = !DIGlobalVariableExpression(var: !764, expr: !DIExpression())
!764 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !765, file: !822, line: 603, type: !824, isLocal: true, isDefinition: true, align: 32)
!765 = distinct !DICompileUnit(language: DW_LANG_C99, file: !766, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !767, globals: !819, splitDebugInlining: false, nameTableKind: None)
!766 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!767 = !{!102, !103, !768}
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 32)
!769 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !770)
!770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !771, line: 336, size: 160, elements: !772)
!771 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!772 = !{!773, !793, !797, !801, !814}
!773 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !770, file: !771, line: 365, baseType: !774, size: 32)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 32)
!775 = !DISubroutineType(types: !776)
!776 = !{!103, !777, !792}
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 32)
!778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !779)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !780)
!780 = !{!781, !782, !783, !784, !790, !791}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !779, file: !141, line: 380, baseType: !144, size: 32)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !779, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !779, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !779, file: !141, line: 386, baseType: !785, size: 32, offset: 96)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 32)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !787)
!787 = !{!788, !789}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !786, file: !141, line: 359, baseType: !154, size: 8)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !786, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !779, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !779, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !770, file: !771, line: 366, baseType: !794, size: 32, offset: 32)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 32)
!795 = !DISubroutineType(types: !796)
!796 = !{null, !777, !155}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !770, file: !771, line: 374, baseType: !798, size: 32, offset: 64)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 32)
!799 = !DISubroutineType(types: !800)
!800 = !{!103, !777}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !770, file: !771, line: 377, baseType: !802, size: 32, offset: 96)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 32)
!803 = !DISubroutineType(types: !804)
!804 = !{!103, !777, !805}
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !807)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !771, line: 122, size: 64, elements: !808)
!808 = !{!809, !810, !811, !812, !813}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !807, file: !771, line: 123, baseType: !121, size: 32)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !807, file: !771, line: 124, baseType: !154, size: 8, offset: 32)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !807, file: !771, line: 125, baseType: !154, size: 8, offset: 40)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !807, file: !771, line: 126, baseType: !154, size: 8, offset: 48)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !807, file: !771, line: 127, baseType: !154, size: 8, offset: 56)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !770, file: !771, line: 379, baseType: !815, size: 32, offset: 128)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 32)
!816 = !DISubroutineType(types: !817)
!817 = !{!103, !777, !818}
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 32)
!819 = !{!763, !820}
!820 = !DIGlobalVariableExpression(var: !821, expr: !DIExpression())
!821 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !765, file: !822, line: 38, type: !823, isLocal: true, isDefinition: true)
!822 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !777)
!824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !825)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !826)
!826 = !{!827, !828}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !825, file: !132, line: 60, baseType: !798, size: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !825, file: !132, line: 65, baseType: !777, size: 32, offset: 32)
!829 = !DIGlobalVariableExpression(var: !830, expr: !DIExpression())
!830 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !831, file: !1001, line: 762, type: !1110, isLocal: true, isDefinition: true)
!831 = distinct !DICompileUnit(language: DW_LANG_C99, file: !832, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !833, retainedTypes: !851, globals: !998, splitDebugInlining: false, nameTableKind: None)
!832 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!833 = !{!30, !834, !840, !845, !635}
!834 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !835, line: 506, baseType: !32, size: 32, elements: !836)
!835 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!836 = !{!837, !838, !839}
!837 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!838 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!839 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!840 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !835, line: 512, baseType: !32, size: 32, elements: !841)
!841 = !{!842, !843, !844}
!842 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!843 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!844 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!845 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !547, line: 43, baseType: !32, size: 32, elements: !846)
!846 = !{!847, !848, !849, !850}
!847 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!848 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!849 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!850 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!851 = !{!102, !103, !852, !922, !927, !887, !840, !834, !932, !933, !121, !947, !902, !957, !958, !959}
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 32)
!853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !854)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !835, line: 523, size: 288, elements: !855)
!855 = !{!856, !877, !883, !888, !892, !893, !894, !898, !918}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !854, file: !835, line: 524, baseType: !857, size: 32)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 32)
!858 = !DISubroutineType(types: !859)
!859 = !{!103, !860, !875, !876}
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 32)
!861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !862)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !863)
!863 = !{!864, !865, !866, !867, !873, !874}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !862, file: !141, line: 380, baseType: !144, size: 32)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !862, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !862, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !862, file: !141, line: 386, baseType: !868, size: 32, offset: 96)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 32)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !870)
!870 = !{!871, !872}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !869, file: !141, line: 359, baseType: !154, size: 8)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !869, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !862, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !862, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !835, line: 237, baseType: !154)
!876 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !835, line: 257, baseType: !121)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !854, file: !835, line: 530, baseType: !878, size: 32, offset: 32)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!879 = !DISubroutineType(types: !880)
!880 = !{!103, !860, !881}
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 32)
!882 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !835, line: 229, baseType: !121)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !854, file: !835, line: 532, baseType: !884, size: 32, offset: 64)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 32)
!885 = !DISubroutineType(types: !886)
!886 = !{!103, !860, !887, !882}
!887 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !835, line: 216, baseType: !121)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !854, file: !835, line: 535, baseType: !889, size: 32, offset: 96)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 32)
!890 = !DISubroutineType(types: !891)
!891 = !{!103, !860, !887}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !854, file: !835, line: 537, baseType: !889, size: 32, offset: 128)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !854, file: !835, line: 539, baseType: !889, size: 32, offset: 160)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !854, file: !835, line: 541, baseType: !895, size: 32, offset: 192)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 32)
!896 = !DISubroutineType(types: !897)
!897 = !{!103, !860, !875, !834, !840}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !854, file: !835, line: 544, baseType: !899, size: 32, offset: 224)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 32)
!900 = !DISubroutineType(types: !901)
!901 = !{!103, !860, !902, !157}
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 32)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !835, line: 478, size: 96, elements: !904)
!904 = !{!905, !912, !917}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !903, file: !835, line: 482, baseType: !906, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !907, line: 33, baseType: !908)
!907 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !907, line: 29, size: 32, elements: !909)
!909 = !{!910}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !908, file: !907, line: 30, baseType: !911, size: 32)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 32)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !903, file: !835, line: 485, baseType: !913, size: 32, offset: 32)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !835, line: 464, baseType: !914)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DISubroutineType(types: !916)
!916 = !{null, !860, !902, !887}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !903, file: !835, line: 493, baseType: !887, size: 32, offset: 64)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !854, file: !835, line: 547, baseType: !919, size: 32, offset: 256)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32)
!920 = !DISubroutineType(types: !921)
!921 = !{!121, !860}
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 32)
!923 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !924)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !835, line: 428, size: 32, elements: !925)
!925 = !{!926}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !924, file: !835, line: 434, baseType: !887, size: 32)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 32)
!928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !929)
!929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !835, line: 441, size: 32, elements: !930)
!930 = !{!931}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !929, file: !835, line: 447, baseType: !887, size: 32)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 32)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 276, baseType: !935)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 265, size: 320, elements: !936)
!936 = !{!937, !938, !939, !940, !941, !942, !943, !944, !945}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !935, file: !116, line: 267, baseType: !120, size: 32)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !935, file: !116, line: 268, baseType: !120, size: 32, offset: 32)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !935, file: !116, line: 269, baseType: !120, size: 32, offset: 64)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !935, file: !116, line: 270, baseType: !120, size: 32, offset: 96)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !935, file: !116, line: 271, baseType: !120, size: 32, offset: 128)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !935, file: !116, line: 272, baseType: !120, size: 32, offset: 160)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !935, file: !116, line: 273, baseType: !120, size: 32, offset: 192)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !935, file: !116, line: 274, baseType: !120, size: 32, offset: 224)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !935, file: !116, line: 275, baseType: !946, size: 64, offset: 256)
!946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !242)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !116, line: 289, baseType: !949)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 282, size: 288, elements: !950)
!950 = !{!951, !952, !953, !955, !956}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !949, file: !116, line: 284, baseType: !120, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !949, file: !116, line: 285, baseType: !120, size: 32, offset: 32)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !949, file: !116, line: 286, baseType: !954, size: 128, offset: 64)
!954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !508)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !949, file: !116, line: 287, baseType: !658, size: 64, offset: 192)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !949, file: !116, line: 288, baseType: !120, size: 32, offset: 256)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 32)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 32)
!960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !961)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !636, line: 100, size: 224, elements: !962)
!962 = !{!963, !968, !969, !978, !983, !988, !993}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !961, file: !636, line: 101, baseType: !964, size: 32)
!964 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !636, line: 76, baseType: !965)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 32)
!966 = !DISubroutineType(types: !967)
!967 = !{!103, !860, !731}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !961, file: !636, line: 102, baseType: !964, size: 32, offset: 32)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !961, file: !636, line: 103, baseType: !970, size: 32, offset: 64)
!970 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !636, line: 83, baseType: !971)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 32)
!972 = !DISubroutineType(types: !973)
!973 = !{!103, !860, !731, !974, !102}
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !636, line: 72, baseType: !975)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 32)
!976 = !DISubroutineType(types: !977)
!977 = !{null, !860, !731, !102}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !961, file: !636, line: 104, baseType: !979, size: 32, offset: 96)
!979 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !636, line: 79, baseType: !980)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 32)
!981 = !DISubroutineType(types: !982)
!982 = !{!103, !860, !731, !687}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !961, file: !636, line: 105, baseType: !984, size: 32, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !636, line: 88, baseType: !985)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 32)
!986 = !DISubroutineType(types: !987)
!987 = !{!635, !860, !731}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !961, file: !636, line: 106, baseType: !989, size: 32, offset: 160)
!989 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !636, line: 92, baseType: !990)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!991 = !DISubroutineType(types: !992)
!992 = !{!103, !860, !731, !757}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !961, file: !636, line: 107, baseType: !994, size: 32, offset: 192)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !636, line: 96, baseType: !995)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!996 = !DISubroutineType(types: !997)
!997 = !{!103, !860, !731, !102}
!998 = !{!999, !1005, !1007, !1017, !1022, !1024, !1026, !1028, !1030, !1032, !1034, !1036, !1038, !1040, !1042, !1044, !1046, !1048, !1050, !1052, !1054, !1056, !1058, !1060, !1062, !1076, !1078, !1080, !1082, !1084, !1086, !1088, !1090, !1092, !1094, !1096, !1098, !1100, !1102, !1104, !829, !1106, !1108, !1121, !1123, !1125, !1127, !1129, !1131}
!999 = !DIGlobalVariableExpression(var: !1000, expr: !DIExpression())
!1000 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !831, file: !1001, line: 762, type: !1002, isLocal: false, isDefinition: true, align: 16)
!1001 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 80, elements: !1003)
!1003 = !{!1004}
!1004 = !DISubrange(count: 5)
!1005 = !DIGlobalVariableExpression(var: !1006, expr: !DIExpression())
!1006 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !831, file: !1001, line: 762, type: !861, isLocal: false, isDefinition: true, align: 32)
!1007 = !DIGlobalVariableExpression(var: !1008, expr: !DIExpression())
!1008 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !831, file: !1001, line: 762, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1010)
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1011)
!1011 = !{!1012, !1016}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1010, file: !132, line: 60, baseType: !1013, size: 32)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 32)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!103, !860}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1010, file: !132, line: 65, baseType: !860, size: 32, offset: 32)
!1017 = !DIGlobalVariableExpression(var: !1018, expr: !DIExpression())
!1018 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !831, file: !1001, line: 766, type: !1019, isLocal: false, isDefinition: true, align: 16)
!1019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 160, elements: !1020)
!1020 = !{!1021}
!1021 = !DISubrange(count: 10)
!1022 = !DIGlobalVariableExpression(var: !1023, expr: !DIExpression())
!1023 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !831, file: !1001, line: 766, type: !861, isLocal: false, isDefinition: true, align: 32)
!1024 = !DIGlobalVariableExpression(var: !1025, expr: !DIExpression())
!1025 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !831, file: !1001, line: 766, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1026 = !DIGlobalVariableExpression(var: !1027, expr: !DIExpression())
!1027 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !831, file: !1001, line: 770, type: !1002, isLocal: false, isDefinition: true, align: 16)
!1028 = !DIGlobalVariableExpression(var: !1029, expr: !DIExpression())
!1029 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !831, file: !1001, line: 770, type: !861, isLocal: false, isDefinition: true, align: 32)
!1030 = !DIGlobalVariableExpression(var: !1031, expr: !DIExpression())
!1031 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !831, file: !1001, line: 770, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1032 = !DIGlobalVariableExpression(var: !1033, expr: !DIExpression())
!1033 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !831, file: !1001, line: 774, type: !1002, isLocal: false, isDefinition: true, align: 16)
!1034 = !DIGlobalVariableExpression(var: !1035, expr: !DIExpression())
!1035 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !831, file: !1001, line: 774, type: !861, isLocal: false, isDefinition: true, align: 32)
!1036 = !DIGlobalVariableExpression(var: !1037, expr: !DIExpression())
!1037 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !831, file: !1001, line: 774, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1038 = !DIGlobalVariableExpression(var: !1039, expr: !DIExpression())
!1039 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !831, file: !1001, line: 778, type: !1002, isLocal: false, isDefinition: true, align: 16)
!1040 = !DIGlobalVariableExpression(var: !1041, expr: !DIExpression())
!1041 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !831, file: !1001, line: 778, type: !861, isLocal: false, isDefinition: true, align: 32)
!1042 = !DIGlobalVariableExpression(var: !1043, expr: !DIExpression())
!1043 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !831, file: !1001, line: 778, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1044 = !DIGlobalVariableExpression(var: !1045, expr: !DIExpression())
!1045 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !831, file: !1001, line: 782, type: !1002, isLocal: false, isDefinition: true, align: 16)
!1046 = !DIGlobalVariableExpression(var: !1047, expr: !DIExpression())
!1047 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !831, file: !1001, line: 782, type: !861, isLocal: false, isDefinition: true, align: 32)
!1048 = !DIGlobalVariableExpression(var: !1049, expr: !DIExpression())
!1049 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !831, file: !1001, line: 782, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1050 = !DIGlobalVariableExpression(var: !1051, expr: !DIExpression())
!1051 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !831, file: !1001, line: 786, type: !1002, isLocal: false, isDefinition: true, align: 16)
!1052 = !DIGlobalVariableExpression(var: !1053, expr: !DIExpression())
!1053 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !831, file: !1001, line: 786, type: !861, isLocal: false, isDefinition: true, align: 32)
!1054 = !DIGlobalVariableExpression(var: !1055, expr: !DIExpression())
!1055 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !831, file: !1001, line: 786, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1056 = !DIGlobalVariableExpression(var: !1057, expr: !DIExpression())
!1057 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !831, file: !1001, line: 790, type: !1002, isLocal: false, isDefinition: true, align: 16)
!1058 = !DIGlobalVariableExpression(var: !1059, expr: !DIExpression())
!1059 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !831, file: !1001, line: 790, type: !861, isLocal: false, isDefinition: true, align: 32)
!1060 = !DIGlobalVariableExpression(var: !1061, expr: !DIExpression())
!1061 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !831, file: !1001, line: 790, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1062 = !DIGlobalVariableExpression(var: !1063, expr: !DIExpression())
!1063 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !831, file: !1001, line: 762, type: !1064, isLocal: true, isDefinition: true)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1065, line: 237, size: 128, elements: !1066)
!1065 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1066 = !{!1067, !1068, !1069}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1064, file: !1065, line: 239, baseType: !929, size: 32)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1064, file: !1065, line: 241, baseType: !860, size: 32, offset: 32)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1064, file: !1065, line: 243, baseType: !1070, size: 64, offset: 64)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !907, line: 40, baseType: !1071)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !907, line: 35, size: 64, elements: !1072)
!1072 = !{!1073, !1075}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1071, file: !907, line: 36, baseType: !1074, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1071, file: !907, line: 37, baseType: !1074, size: 32, offset: 32)
!1076 = !DIGlobalVariableExpression(var: !1077, expr: !DIExpression())
!1077 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !831, file: !1001, line: 762, type: !869, isLocal: true, isDefinition: true, align: 8)
!1078 = !DIGlobalVariableExpression(var: !1079, expr: !DIExpression())
!1079 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !831, file: !1001, line: 766, type: !1064, isLocal: true, isDefinition: true)
!1080 = !DIGlobalVariableExpression(var: !1081, expr: !DIExpression())
!1081 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !831, file: !1001, line: 766, type: !869, isLocal: true, isDefinition: true, align: 8)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !831, file: !1001, line: 770, type: !1064, isLocal: true, isDefinition: true)
!1084 = !DIGlobalVariableExpression(var: !1085, expr: !DIExpression())
!1085 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !831, file: !1001, line: 770, type: !869, isLocal: true, isDefinition: true, align: 8)
!1086 = !DIGlobalVariableExpression(var: !1087, expr: !DIExpression())
!1087 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !831, file: !1001, line: 774, type: !1064, isLocal: true, isDefinition: true)
!1088 = !DIGlobalVariableExpression(var: !1089, expr: !DIExpression())
!1089 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !831, file: !1001, line: 774, type: !869, isLocal: true, isDefinition: true, align: 8)
!1090 = !DIGlobalVariableExpression(var: !1091, expr: !DIExpression())
!1091 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !831, file: !1001, line: 778, type: !1064, isLocal: true, isDefinition: true)
!1092 = !DIGlobalVariableExpression(var: !1093, expr: !DIExpression())
!1093 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !831, file: !1001, line: 778, type: !869, isLocal: true, isDefinition: true, align: 8)
!1094 = !DIGlobalVariableExpression(var: !1095, expr: !DIExpression())
!1095 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !831, file: !1001, line: 782, type: !1064, isLocal: true, isDefinition: true)
!1096 = !DIGlobalVariableExpression(var: !1097, expr: !DIExpression())
!1097 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !831, file: !1001, line: 782, type: !869, isLocal: true, isDefinition: true, align: 8)
!1098 = !DIGlobalVariableExpression(var: !1099, expr: !DIExpression())
!1099 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !831, file: !1001, line: 786, type: !1064, isLocal: true, isDefinition: true)
!1100 = !DIGlobalVariableExpression(var: !1101, expr: !DIExpression())
!1101 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !831, file: !1001, line: 786, type: !869, isLocal: true, isDefinition: true, align: 8)
!1102 = !DIGlobalVariableExpression(var: !1103, expr: !DIExpression())
!1103 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !831, file: !1001, line: 790, type: !1064, isLocal: true, isDefinition: true)
!1104 = !DIGlobalVariableExpression(var: !1105, expr: !DIExpression())
!1105 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !831, file: !1001, line: 790, type: !869, isLocal: true, isDefinition: true, align: 8)
!1106 = !DIGlobalVariableExpression(var: !1107, expr: !DIExpression())
!1107 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !831, file: !1001, line: 656, type: !853, isLocal: true, isDefinition: true)
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !831, file: !1001, line: 766, type: !1110, isLocal: true, isDefinition: true)
!1110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1111)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1065, line: 224, size: 160, elements: !1112)
!1112 = !{!1113, !1114, !1115, !1116}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1111, file: !1065, line: 226, baseType: !924, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1111, file: !1065, line: 228, baseType: !687, size: 32, offset: 32)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1111, file: !1065, line: 230, baseType: !103, size: 32, offset: 64)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1111, file: !1065, line: 231, baseType: !1117, size: 64, offset: 96)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !683, line: 343, size: 64, elements: !1118)
!1118 = !{!1119, !1120}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1117, file: !683, line: 344, baseType: !121, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1117, file: !683, line: 345, baseType: !121, size: 32, offset: 32)
!1121 = !DIGlobalVariableExpression(var: !1122, expr: !DIExpression())
!1122 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !831, file: !1001, line: 770, type: !1110, isLocal: true, isDefinition: true)
!1123 = !DIGlobalVariableExpression(var: !1124, expr: !DIExpression())
!1124 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !831, file: !1001, line: 774, type: !1110, isLocal: true, isDefinition: true)
!1125 = !DIGlobalVariableExpression(var: !1126, expr: !DIExpression())
!1126 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !831, file: !1001, line: 778, type: !1110, isLocal: true, isDefinition: true)
!1127 = !DIGlobalVariableExpression(var: !1128, expr: !DIExpression())
!1128 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !831, file: !1001, line: 782, type: !1110, isLocal: true, isDefinition: true)
!1129 = !DIGlobalVariableExpression(var: !1130, expr: !DIExpression())
!1130 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !831, file: !1001, line: 786, type: !1110, isLocal: true, isDefinition: true)
!1131 = !DIGlobalVariableExpression(var: !1132, expr: !DIExpression())
!1132 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !831, file: !1001, line: 790, type: !1110, isLocal: true, isDefinition: true)
!1133 = !DIGlobalVariableExpression(var: !1134, expr: !DIExpression())
!1134 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1135, file: !1276, line: 1914, type: !1337, isLocal: true, isDefinition: true)
!1135 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1136, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1137, retainedTypes: !1170, globals: !1273, splitDebugInlining: false, nameTableKind: None)
!1136 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!1137 = !{!30, !1138, !1145, !1152, !1159, !1165, !635}
!1138 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !771, line: 47, baseType: !32, size: 32, elements: !1139)
!1139 = !{!1140, !1141, !1142, !1143, !1144}
!1140 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1141 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1142 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1143 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1144 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !771, line: 75, baseType: !32, size: 32, elements: !1146)
!1146 = !{!1147, !1148, !1149, !1150, !1151}
!1147 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1148 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1149 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1150 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1151 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !771, line: 92, baseType: !32, size: 32, elements: !1153)
!1153 = !{!1154, !1155, !1156, !1157, !1158}
!1154 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1155 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1156 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1157 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1158 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1159 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !771, line: 84, baseType: !32, size: 32, elements: !1160)
!1160 = !{!1161, !1162, !1163, !1164}
!1161 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1162 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1163 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1164 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !771, line: 107, baseType: !32, size: 32, elements: !1166)
!1166 = !{!1167, !1168, !1169}
!1167 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1168 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1169 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1170 = !{!102, !103, !1171, !155, !154, !1220, !121, !731, !1231, !265, !1270, !1272}
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1173)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !771, line: 336, size: 160, elements: !1174)
!1174 = !{!1175, !1194, !1198, !1202, !1215}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1173, file: !771, line: 365, baseType: !1176, size: 32)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 32)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{!103, !1179, !792}
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 32)
!1180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1181)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1182)
!1182 = !{!1183, !1184, !1185, !1186, !1192, !1193}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1181, file: !141, line: 380, baseType: !144, size: 32)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1181, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1181, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1181, file: !141, line: 386, baseType: !1187, size: 32, offset: 96)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1189)
!1189 = !{!1190, !1191}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1188, file: !141, line: 359, baseType: !154, size: 8)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1188, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1181, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1181, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1173, file: !771, line: 366, baseType: !1195, size: 32, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 32)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{null, !1179, !155}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1173, file: !771, line: 374, baseType: !1199, size: 32, offset: 64)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!103, !1179}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1173, file: !771, line: 377, baseType: !1203, size: 32, offset: 96)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 32)
!1204 = !DISubroutineType(types: !1205)
!1205 = !{!103, !1179, !1206}
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!1207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !771, line: 122, size: 64, elements: !1209)
!1209 = !{!1210, !1211, !1212, !1213, !1214}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1208, file: !771, line: 123, baseType: !121, size: 32)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1208, file: !771, line: 124, baseType: !154, size: 8, offset: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1208, file: !771, line: 125, baseType: !154, size: 8, offset: 40)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1208, file: !771, line: 126, baseType: !154, size: 8, offset: 48)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1208, file: !771, line: 127, baseType: !154, size: 8, offset: 56)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1173, file: !771, line: 379, baseType: !1216, size: 32, offset: 128)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{!103, !1179, !1219}
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 32)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !116, line: 508, baseType: !1222)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 499, size: 224, elements: !1223)
!1223 = !{!1224, !1225, !1226, !1227, !1228, !1229, !1230}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1222, file: !116, line: 501, baseType: !120, size: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1222, file: !116, line: 502, baseType: !120, size: 32, offset: 32)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1222, file: !116, line: 503, baseType: !120, size: 32, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1222, file: !116, line: 504, baseType: !120, size: 32, offset: 96)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1222, file: !116, line: 505, baseType: !120, size: 32, offset: 128)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1222, file: !116, line: 506, baseType: !120, size: 32, offset: 160)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1222, file: !116, line: 507, baseType: !120, size: 32, offset: 192)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1233)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !636, line: 100, size: 224, elements: !1234)
!1234 = !{!1235, !1240, !1241, !1250, !1255, !1260, !1265}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1233, file: !636, line: 101, baseType: !1236, size: 32)
!1236 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !636, line: 76, baseType: !1237)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!103, !1179, !731}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1233, file: !636, line: 102, baseType: !1236, size: 32, offset: 32)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1233, file: !636, line: 103, baseType: !1242, size: 32, offset: 64)
!1242 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !636, line: 83, baseType: !1243)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1244 = !DISubroutineType(types: !1245)
!1245 = !{!103, !1179, !731, !1246, !102}
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !636, line: 72, baseType: !1247)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 32)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{null, !1179, !731, !102}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1233, file: !636, line: 104, baseType: !1251, size: 32, offset: 96)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !636, line: 79, baseType: !1252)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{!103, !1179, !731, !687}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1233, file: !636, line: 105, baseType: !1256, size: 32, offset: 128)
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !636, line: 88, baseType: !1257)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 32)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!635, !1179, !731}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1233, file: !636, line: 106, baseType: !1261, size: 32, offset: 160)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !636, line: 92, baseType: !1262)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!103, !1179, !731, !757}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1233, file: !636, line: 107, baseType: !1266, size: 32, offset: 192)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !636, line: 96, baseType: !1267)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!103, !1179, !731, !102}
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1271)
!1271 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!1273 = !{!1274, !1280, !1282, !1289, !1133, !1291, !1299, !1322, !1325, !1328, !1330}
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1135, file: !1276, line: 1914, type: !1277, isLocal: false, isDefinition: true, align: 16)
!1276 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 128, elements: !1278)
!1278 = !{!1279}
!1279 = !DISubrange(count: 8)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1135, file: !1276, line: 1914, type: !1180, isLocal: false, isDefinition: true, align: 32)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1135, file: !1276, line: 1914, type: !1284, isLocal: true, isDefinition: true, align: 32)
!1284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1285)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1286)
!1286 = !{!1287, !1288}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1285, file: !132, line: 60, baseType: !1199, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1285, file: !132, line: 65, baseType: !1179, size: 32, offset: 32)
!1289 = !DIGlobalVariableExpression(var: !1290, expr: !DIExpression())
!1290 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1135, file: !1276, line: 1914, type: !1188, isLocal: true, isDefinition: true, align: 8)
!1291 = !DIGlobalVariableExpression(var: !1292, expr: !DIExpression())
!1292 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1135, file: !1276, line: 1914, type: !1293, isLocal: true, isDefinition: true)
!1293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 64, elements: !345)
!1294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1295)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !683, line: 343, size: 64, elements: !1296)
!1296 = !{!1297, !1298}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1295, file: !683, line: 344, baseType: !121, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1295, file: !683, line: 345, baseType: !121, size: 32, offset: 32)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1135, file: !1276, line: 1914, type: !1301, isLocal: true, isDefinition: true)
!1301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1302)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1303, line: 60, size: 64, elements: !1304)
!1303 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1304 = !{!1305, !1321}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1302, file: !1303, line: 69, baseType: !1306, size: 32)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 32)
!1307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1308)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1303, line: 50, size: 64, elements: !1309)
!1309 = !{!1310, !1319, !1320}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1308, file: !1303, line: 52, baseType: !1311, size: 32)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1313)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1314, line: 37, baseType: !1315)
!1314 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1314, line: 32, size: 64, elements: !1316)
!1316 = !{!1317, !1318}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1315, file: !1314, line: 34, baseType: !121, size: 32)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1315, file: !1314, line: 36, baseType: !121, size: 32, offset: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1308, file: !1303, line: 54, baseType: !154, size: 8, offset: 32)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1308, file: !1303, line: 56, baseType: !154, size: 8, offset: 40)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1302, file: !1303, line: 71, baseType: !154, size: 8, offset: 32)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1135, file: !1276, line: 1914, type: !1324, isLocal: true, isDefinition: true)
!1324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1307, size: 64, elements: !345)
!1325 = !DIGlobalVariableExpression(var: !1326, expr: !DIExpression())
!1326 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1135, file: !1276, line: 1914, type: !1327, isLocal: true, isDefinition: true)
!1327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1312, size: 128, elements: !242)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1135, file: !1276, line: 1539, type: !1172, isLocal: true, isDefinition: true)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1135, file: !1276, line: 1914, type: !1332, isLocal: true, isDefinition: true)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1333, line: 74, size: 64, elements: !1334)
!1333 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1334 = !{!1335, !1336}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1332, file: !1333, line: 76, baseType: !121, size: 32)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1332, file: !1333, line: 78, baseType: !1179, size: 32, offset: 32)
!1337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1338)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1333, line: 22, size: 224, elements: !1339)
!1339 = !{!1340, !1341, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1338, file: !1333, line: 24, baseType: !1220, size: 32)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1338, file: !1333, line: 26, baseType: !1342, size: 32, offset: 32)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 32)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1338, file: !1333, line: 28, baseType: !200, size: 32, offset: 64)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1338, file: !1333, line: 30, baseType: !157, size: 8, offset: 96)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1338, file: !1333, line: 32, baseType: !103, size: 32, offset: 128)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1338, file: !1333, line: 34, baseType: !157, size: 8, offset: 160)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1338, file: !1333, line: 36, baseType: !157, size: 8, offset: 168)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1338, file: !1333, line: 38, baseType: !157, size: 8, offset: 176)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1338, file: !1333, line: 40, baseType: !157, size: 8, offset: 184)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1338, file: !1333, line: 41, baseType: !1351, size: 32, offset: 192)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 32)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1354, file: !1432, line: 65, type: !120, isLocal: true, isDefinition: true)
!1354 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1355, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1356, retainedTypes: !1357, globals: !1429, splitDebugInlining: false, nameTableKind: None)
!1355 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!1356 = !{!425}
!1357 = !{!1358, !1360, !566, !154, !121, !1368, !1399}
!1358 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1359, line: 46, baseType: !280)
!1359 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 32)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !356, line: 770, baseType: !1362)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 764, size: 128, elements: !1363)
!1363 = !{!1364, !1365, !1366, !1367}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1362, file: !356, line: 766, baseType: !120, size: 32)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1362, file: !356, line: 767, baseType: !120, size: 32, offset: 32)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1362, file: !356, line: 768, baseType: !120, size: 32, offset: 64)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1362, file: !356, line: 769, baseType: !360, size: 32, offset: 96)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 32)
!1369 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !1370)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !1371)
!1371 = !{!1372, !1374, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1389, !1394, !1398}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1370, file: !356, line: 413, baseType: !1373, size: 256)
!1373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1278)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1370, file: !356, line: 414, baseType: !1375, size: 768, offset: 256)
!1375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1376)
!1376 = !{!1377}
!1377 = !DISubrange(count: 24)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1370, file: !356, line: 415, baseType: !1373, size: 256, offset: 1024)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1370, file: !356, line: 416, baseType: !1375, size: 768, offset: 1280)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1370, file: !356, line: 417, baseType: !1373, size: 256, offset: 2048)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1370, file: !356, line: 418, baseType: !1375, size: 768, offset: 2304)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1370, file: !356, line: 419, baseType: !1373, size: 256, offset: 3072)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1370, file: !356, line: 420, baseType: !1375, size: 768, offset: 3328)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1370, file: !356, line: 421, baseType: !1373, size: 256, offset: 4096)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1370, file: !356, line: 422, baseType: !1386, size: 1792, offset: 4352)
!1386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1387)
!1387 = !{!1388}
!1388 = !DISubrange(count: 56)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1370, file: !356, line: 423, baseType: !1390, size: 1920, offset: 6144)
!1390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1391, size: 1920, elements: !1392)
!1391 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !154)
!1392 = !{!1393}
!1393 = !DISubrange(count: 240)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1370, file: !356, line: 424, baseType: !1395, size: 20608, offset: 8064)
!1395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1396)
!1396 = !{!1397}
!1397 = !DISubrange(count: 644)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1370, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 32)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !1401)
!1401 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !1402)
!1402 = !{!1403, !1404, !1405, !1406, !1407, !1408, !1409, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1420, !1421, !1422, !1424, !1426, !1428}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1401, file: !356, line: 447, baseType: !360, size: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1401, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1401, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1401, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1401, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1401, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1401, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!1410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1391, size: 96, elements: !602)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1401, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1401, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1401, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1401, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1401, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1401, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1401, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1401, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!1419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 64, elements: !242)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1401, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1401, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1401, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!1423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 128, elements: !508)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1401, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!1425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 160, elements: !1003)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1401, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!1427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !1003)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1401, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!1429 = !{!1430, !1456, !1459, !1461, !1463, !1352}
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1354, file: !1432, line: 285, type: !1433, isLocal: true, isDefinition: true, align: 32)
!1432 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1434)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1435)
!1435 = !{!1436, !1455}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1434, file: !132, line: 60, baseType: !1437, size: 32)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 32)
!1438 = !DISubroutineType(types: !1439)
!1439 = !{!103, !1440}
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 32)
!1441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1442)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1443)
!1443 = !{!1444, !1445, !1446, !1447, !1453, !1454}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1442, file: !141, line: 380, baseType: !144, size: 32)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1442, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1442, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1442, file: !141, line: 386, baseType: !1448, size: 32, offset: 96)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 32)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1450)
!1450 = !{!1451, !1452}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1449, file: !141, line: 359, baseType: !154, size: 8)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1449, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1442, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1442, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1434, file: !132, line: 65, baseType: !1440, size: 32, offset: 32)
!1456 = !DIGlobalVariableExpression(var: !1457, expr: !DIExpression())
!1457 = distinct !DIGlobalVariable(name: "lock", scope: !1354, file: !1432, line: 34, type: !1458, isLocal: true, isDefinition: true)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!1459 = !DIGlobalVariableExpression(var: !1460, expr: !DIExpression())
!1460 = distinct !DIGlobalVariable(name: "last_load", scope: !1354, file: !1432, line: 36, type: !121, isLocal: true, isDefinition: true)
!1461 = !DIGlobalVariableExpression(var: !1462, expr: !DIExpression())
!1462 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1354, file: !1432, line: 48, type: !121, isLocal: true, isDefinition: true)
!1463 = !DIGlobalVariableExpression(var: !1464, expr: !DIExpression())
!1464 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1354, file: !1432, line: 54, type: !121, isLocal: true, isDefinition: true)
!1465 = !DIGlobalVariableExpression(var: !1466, expr: !DIExpression())
!1466 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1467, file: !1549, line: 22, type: !1551, isLocal: true, isDefinition: true)
!1467 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1468, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1469, retainedTypes: !1470, globals: !1546, splitDebugInlining: false, nameTableKind: None)
!1468 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!1469 = !{!834, !840}
!1470 = !{!1471, !1535, !1540, !887, !840, !834, !1545, !102}
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1473)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !835, line: 523, size: 288, elements: !1474)
!1474 = !{!1475, !1494, !1498, !1502, !1506, !1507, !1508, !1512, !1531}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1473, file: !835, line: 524, baseType: !1476, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 32)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{!103, !1479, !875, !876}
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1481)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1482)
!1482 = !{!1483, !1484, !1485, !1486, !1492, !1493}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1481, file: !141, line: 380, baseType: !144, size: 32)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1481, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1481, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1481, file: !141, line: 386, baseType: !1487, size: 32, offset: 96)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1489)
!1489 = !{!1490, !1491}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1488, file: !141, line: 359, baseType: !154, size: 8)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1488, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1481, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1481, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1473, file: !835, line: 530, baseType: !1495, size: 32, offset: 32)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = !DISubroutineType(types: !1497)
!1497 = !{!103, !1479, !881}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1473, file: !835, line: 532, baseType: !1499, size: 32, offset: 64)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 32)
!1500 = !DISubroutineType(types: !1501)
!1501 = !{!103, !1479, !887, !882}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1473, file: !835, line: 535, baseType: !1503, size: 32, offset: 96)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 32)
!1504 = !DISubroutineType(types: !1505)
!1505 = !{!103, !1479, !887}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1473, file: !835, line: 537, baseType: !1503, size: 32, offset: 128)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1473, file: !835, line: 539, baseType: !1503, size: 32, offset: 160)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1473, file: !835, line: 541, baseType: !1509, size: 32, offset: 192)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 32)
!1510 = !DISubroutineType(types: !1511)
!1511 = !{!103, !1479, !875, !834, !840}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1473, file: !835, line: 544, baseType: !1513, size: 32, offset: 224)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 32)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!103, !1479, !1516, !157}
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 32)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !835, line: 478, size: 96, elements: !1518)
!1518 = !{!1519, !1525, !1530}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1517, file: !835, line: 482, baseType: !1520, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !907, line: 33, baseType: !1521)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !907, line: 29, size: 32, elements: !1522)
!1522 = !{!1523}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1521, file: !907, line: 30, baseType: !1524, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1517, file: !835, line: 485, baseType: !1526, size: 32, offset: 32)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !835, line: 464, baseType: !1527)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 32)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{null, !1479, !1516, !887}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1517, file: !835, line: 493, baseType: !887, size: 32, offset: 64)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1473, file: !835, line: 547, baseType: !1532, size: 32, offset: 256)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 32)
!1533 = !DISubroutineType(types: !1534)
!1534 = !{!121, !1479}
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1537)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !835, line: 428, size: 32, elements: !1538)
!1538 = !{!1539}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1537, file: !835, line: 434, baseType: !887, size: 32)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1542)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !835, line: 441, size: 32, elements: !1543)
!1543 = !{!1544}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1542, file: !835, line: 447, baseType: !887, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 32)
!1546 = !{!1547, !1465}
!1547 = !DIGlobalVariableExpression(var: !1548, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1548 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1467, file: !1549, line: 37, type: !1550, isLocal: true, isDefinition: true)
!1549 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !200)
!1551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, size: 352, elements: !1553)
!1552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1479)
!1553 = !{!1554}
!1554 = !DISubrange(count: 11)
!1555 = !DIGlobalVariableExpression(var: !1556, expr: !DIExpression())
!1556 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1557, file: !1599, line: 139, type: !1606, isLocal: false, isDefinition: true)
!1557 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1558, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1559, globals: !1596, splitDebugInlining: false, nameTableKind: None)
!1558 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!1559 = !{!1560}
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !1562)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !1563)
!1563 = !{!1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1562, file: !116, line: 338, baseType: !120, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1562, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1562, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1562, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1562, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1562, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1562, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1562, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1562, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1562, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1562, file: !116, line: 348, baseType: !658, size: 64, offset: 320)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1562, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1562, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1562, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1562, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1562, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1562, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1562, file: !116, line: 355, baseType: !658, size: 64, offset: 576)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1562, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1562, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1562, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1562, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1562, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1562, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1562, file: !116, line: 362, baseType: !658, size: 64, offset: 832)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1562, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1562, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1562, file: !116, line: 365, baseType: !658, size: 64, offset: 960)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1562, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1562, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1562, file: !116, line: 368, baseType: !679, size: 32, offset: 1088)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1562, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!1596 = !{!1597, !1600, !1555}
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1557, file: !1599, line: 137, type: !121, isLocal: false, isDefinition: true)
!1599 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1600 = !DIGlobalVariableExpression(var: !1601, expr: !DIExpression())
!1601 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1557, file: !1599, line: 138, type: !1602, isLocal: false, isDefinition: true)
!1602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1603, size: 128, elements: !1604)
!1603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!1604 = !{!1605}
!1605 = !DISubrange(count: 16)
!1606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1603, size: 64, elements: !1278)
!1607 = !DIGlobalVariableExpression(var: !1608, expr: !DIExpression())
!1608 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1609, file: !1612, line: 23, type: !1613, isLocal: false, isDefinition: true)
!1609 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1610, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1611, splitDebugInlining: false, nameTableKind: None)
!1610 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!1611 = !{!1607}
!1612 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1616, file: !1620, line: 86, type: !1870, isLocal: false, isDefinition: true, align: 512)
!1616 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1617, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1618, retainedTypes: !1627, globals: !1701, splitDebugInlining: false, nameTableKind: None)
!1617 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!1618 = !{!1619, !30, !425}
!1619 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1620, line: 63, baseType: !32, size: 32, elements: !1621)
!1620 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1621 = !{!1622, !1623, !1624, !1625, !1626}
!1622 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1623 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1624 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1625 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1626 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1627 = !{!200, !102, !103, !1628, !957, !121, !1659, !566, !154, !1684}
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1630)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1631, line: 51, size: 64, elements: !1632)
!1631 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1632 = !{!1633, !1654}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1630, file: !1631, line: 52, baseType: !1634, size: 32)
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1631, line: 38, baseType: !1635)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!1636 = !DISubroutineType(types: !1637)
!1637 = !{!103, !1638, !1653, !265}
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1640)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1641)
!1641 = !{!1642, !1643, !1644, !1645, !1651, !1652}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1640, file: !141, line: 380, baseType: !144, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1640, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1640, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1640, file: !141, line: 386, baseType: !1646, size: 32, offset: 96)
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 32)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1648)
!1648 = !{!1649, !1650}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1647, file: !141, line: 359, baseType: !154, size: 8)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1647, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1640, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1640, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1630, file: !1631, line: 53, baseType: !1655, size: 32, offset: 32)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1631, line: 47, baseType: !1656)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 32)
!1657 = !DISubroutineType(types: !1658)
!1658 = !{!103, !1638, !1653, !265, !121}
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !1661)
!1661 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !1662)
!1662 = !{!1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1661, file: !356, line: 447, baseType: !360, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1661, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1661, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1661, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1661, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1661, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1661, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1661, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1661, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1661, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1661, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1661, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1661, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1661, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1661, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1661, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1661, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1661, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1661, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1661, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1661, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 32)
!1685 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !1686)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !1687)
!1687 = !{!1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1686, file: !356, line: 413, baseType: !1373, size: 256)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1686, file: !356, line: 414, baseType: !1375, size: 768, offset: 256)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1686, file: !356, line: 415, baseType: !1373, size: 256, offset: 1024)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1686, file: !356, line: 416, baseType: !1375, size: 768, offset: 1280)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1686, file: !356, line: 417, baseType: !1373, size: 256, offset: 2048)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1686, file: !356, line: 418, baseType: !1375, size: 768, offset: 2304)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1686, file: !356, line: 419, baseType: !1373, size: 256, offset: 3072)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1686, file: !356, line: 420, baseType: !1375, size: 768, offset: 3328)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1686, file: !356, line: 421, baseType: !1373, size: 256, offset: 4096)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1686, file: !356, line: 422, baseType: !1386, size: 1792, offset: 4352)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1686, file: !356, line: 423, baseType: !1390, size: 1920, offset: 6144)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1686, file: !356, line: 424, baseType: !1395, size: 20608, offset: 8064)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1686, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!1701 = !{!1702, !1824, !1833, !1835, !1614, !1838, !1840, !1845}
!1702 = !DIGlobalVariableExpression(var: !1703, expr: !DIExpression())
!1703 = distinct !DIGlobalVariable(name: "_kernel", scope: !1616, file: !1620, line: 40, type: !1704, isLocal: false, isDefinition: true)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !247, line: 158, size: 288, elements: !1705)
!1705 = !{!1706, !1819}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1704, file: !247, line: 159, baseType: !1707, size: 192)
!1707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1708, size: 192, elements: !345)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !247, line: 100, size: 192, elements: !1709)
!1709 = !{!1710, !1711, !1712, !1813, !1814, !1815, !1816}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1708, file: !247, line: 102, baseType: !121, size: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1708, file: !247, line: 105, baseType: !957, size: 32, offset: 32)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1708, file: !247, line: 108, baseType: !1713, size: 32, offset: 64)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 32)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !1715)
!1715 = !{!1716, !1774, !1786, !1787, !1788, !1789, !1795, !1808}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1714, file: !211, line: 247, baseType: !1717, size: 384)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !1718)
!1718 = !{!1719, !1743, !1750, !1751, !1752, !1761, !1762, !1763}
!1719 = !DIDerivedType(tag: DW_TAG_member, scope: !1717, file: !211, line: 60, baseType: !1720, size: 64)
!1720 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1717, file: !211, line: 60, size: 64, elements: !1721)
!1721 = !{!1722, !1737}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1720, file: !211, line: 61, baseType: !1723, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !1724)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !1725)
!1725 = !{!1726, !1732}
!1726 = !DIDerivedType(tag: DW_TAG_member, scope: !1724, file: !221, line: 38, baseType: !1727, size: 32)
!1727 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1724, file: !221, line: 38, size: 32, elements: !1728)
!1728 = !{!1729, !1731}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1727, file: !221, line: 39, baseType: !1730, size: 32)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1727, file: !221, line: 40, baseType: !1730, size: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, scope: !1724, file: !221, line: 42, baseType: !1733, size: 32, offset: 32)
!1733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1724, file: !221, line: 42, size: 32, elements: !1734)
!1734 = !{!1735, !1736}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1733, file: !221, line: 43, baseType: !1730, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1733, file: !221, line: 44, baseType: !1730, size: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1720, file: !211, line: 62, baseType: !1738, size: 64)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !1739)
!1739 = !{!1740}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1738, file: !237, line: 50, baseType: !1741, size: 64)
!1741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1742, size: 64, elements: !242)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 32)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1717, file: !211, line: 68, baseType: !1744, size: 32, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 32)
!1745 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !1746)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !1747)
!1747 = !{!1748}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1746, file: !247, line: 232, baseType: !1749, size: 64)
!1749 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !1724)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1717, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1717, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!1752 = !DIDerivedType(tag: DW_TAG_member, scope: !1717, file: !211, line: 90, baseType: !1753, size: 16, offset: 112)
!1753 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1717, file: !211, line: 90, size: 16, elements: !1754)
!1754 = !{!1755, !1760}
!1755 = !DIDerivedType(tag: DW_TAG_member, scope: !1753, file: !211, line: 91, baseType: !1756, size: 16)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !211, line: 91, size: 16, elements: !1757)
!1757 = !{!1758, !1759}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1756, file: !211, line: 96, baseType: !261, size: 8)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1756, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1753, file: !211, line: 100, baseType: !265, size: 16)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1717, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1717, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1717, file: !211, line: 131, baseType: !1764, size: 192, offset: 192)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !1765)
!1765 = !{!1766, !1767, !1773}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1764, file: !247, line: 245, baseType: !1723, size: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1764, file: !247, line: 246, baseType: !1768, size: 32, offset: 64)
!1768 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !1769)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 32)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{null, !1772}
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1764, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1714, file: !211, line: 250, baseType: !1775, size: 288, offset: 384)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !1776)
!1776 = !{!1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1775, file: !284, line: 26, baseType: !121, size: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1775, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1775, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1775, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1775, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1775, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1775, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1775, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1775, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1714, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1714, file: !211, line: 256, baseType: !1745, size: 64, offset: 704)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1714, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1714, file: !211, line: 300, baseType: !1790, size: 96, offset: 800)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !1791)
!1791 = !{!1792, !1793, !1794}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1790, file: !211, line: 153, baseType: !22, size: 32)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1790, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1790, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1714, file: !211, line: 325, baseType: !1796, size: 32, offset: 896)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 32)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !1798)
!1798 = !{!1799, !1805, !1806}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1797, file: !307, line: 5074, baseType: !1800, size: 96)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !1801)
!1801 = !{!1802, !1803, !1804}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1800, file: !311, line: 57, baseType: !314, size: 32)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1800, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1800, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1797, file: !307, line: 5075, baseType: !1745, size: 64, offset: 96)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1797, file: !307, line: 5076, baseType: !1807, offset: 160)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1714, file: !211, line: 343, baseType: !1809, size: 64, offset: 928)
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !1810)
!1810 = !{!1811, !1812}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1809, file: !284, line: 63, baseType: !121, size: 32)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1809, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1708, file: !247, line: 111, baseType: !1713, size: 32, offset: 96)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1708, file: !247, line: 124, baseType: !103, size: 32, offset: 128)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1708, file: !247, line: 127, baseType: !154, size: 8, offset: 160)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1708, file: !247, line: 153, baseType: !1817, offset: 168)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1818, line: 33, elements: !322)
!1818 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1704, file: !247, line: 170, baseType: !1820, size: 96, offset: 192)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !247, line: 83, size: 96, elements: !1821)
!1821 = !{!1822, !1823}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1820, file: !247, line: 86, baseType: !1713, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1820, file: !247, line: 90, baseType: !1749, size: 64, offset: 32)
!1824 = !DIGlobalVariableExpression(var: !1825, expr: !DIExpression())
!1825 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1616, file: !1620, line: 43, type: !1826, isLocal: false, isDefinition: true, align: 512)
!1826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1827, size: 8704, elements: !1831)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1828, line: 47, size: 8, elements: !1829)
!1828 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1829 = !{!1830}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1827, file: !1828, line: 48, baseType: !146, size: 8)
!1831 = !{!1832}
!1832 = !DISubrange(count: 1088)
!1833 = !DIGlobalVariableExpression(var: !1834, expr: !DIExpression())
!1834 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1616, file: !1620, line: 44, type: !1714, isLocal: false, isDefinition: true)
!1835 = !DIGlobalVariableExpression(var: !1836, expr: !DIExpression())
!1836 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1616, file: !1620, line: 48, type: !1837, isLocal: false, isDefinition: true)
!1837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1714, size: 1024, elements: !345)
!1838 = !DIGlobalVariableExpression(var: !1839, expr: !DIExpression())
!1839 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1616, file: !1620, line: 217, type: !157, isLocal: false, isDefinition: true)
!1840 = !DIGlobalVariableExpression(var: !1841, expr: !DIExpression())
!1841 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1616, file: !1620, line: 50, type: !1842, isLocal: true, isDefinition: true, align: 512)
!1842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1827, size: 3072, elements: !1843)
!1843 = !{!346, !1844}
!1844 = !DISubrange(count: 384)
!1845 = !DIGlobalVariableExpression(var: !1846, expr: !DIExpression())
!1846 = distinct !DIGlobalVariable(name: "levels", scope: !1847, file: !1620, line: 232, type: !1867, isLocal: true, isDefinition: true)
!1847 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1620, file: !1620, line: 230, type: !1848, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !1850)
!1848 = !DISubroutineType(types: !1849)
!1849 = !{null, !1619}
!1850 = !{!1851, !1852, !1862, !1866}
!1851 = !DILocalVariable(name: "level", arg: 1, scope: !1847, file: !1620, line: 230, type: !1619)
!1852 = !DILocalVariable(name: "entry", scope: !1847, file: !1620, line: 244, type: !1853)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1856)
!1856 = !{!1857, !1861}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1855, file: !132, line: 60, baseType: !1858, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 32)
!1859 = !DISubroutineType(types: !1860)
!1860 = !{!103, !1638}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1855, file: !132, line: 65, baseType: !1638, size: 32, offset: 32)
!1862 = !DILocalVariable(name: "dev", scope: !1863, file: !1620, line: 247, type: !1638)
!1863 = distinct !DILexicalBlock(scope: !1864, file: !1620, line: 246, column: 64)
!1864 = distinct !DILexicalBlock(scope: !1865, file: !1620, line: 246, column: 2)
!1865 = distinct !DILexicalBlock(scope: !1847, file: !1620, line: 246, column: 2)
!1866 = !DILocalVariable(name: "rc", scope: !1863, file: !1620, line: 248, type: !103)
!1867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1853, size: 192, elements: !1868)
!1868 = !{!1869}
!1869 = !DISubrange(count: 6)
!1870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1827, size: 16896, elements: !1871)
!1871 = !{!346, !1872}
!1872 = !DISubrange(count: 2112)
!1873 = !DIGlobalVariableExpression(var: !1874, expr: !DIExpression())
!1874 = distinct !DIGlobalVariable(name: "states_str", scope: !1875, file: !1876, line: 276, type: !1997, isLocal: true, isDefinition: true)
!1875 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1876, file: !1876, line: 271, type: !1877, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !1988)
!1876 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1877 = !DISubroutineType(types: !1878)
!1878 = !{!144, !1879, !957, !200}
!1879 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !1880)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 32)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !1882)
!1882 = !{!1883, !1941, !1953, !1954, !1955, !1956, !1962, !1975}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1881, file: !211, line: 247, baseType: !1884, size: 384)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !1885)
!1885 = !{!1886, !1910, !1917, !1918, !1919, !1928, !1929, !1930}
!1886 = !DIDerivedType(tag: DW_TAG_member, scope: !1884, file: !211, line: 60, baseType: !1887, size: 64)
!1887 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1884, file: !211, line: 60, size: 64, elements: !1888)
!1888 = !{!1889, !1904}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1887, file: !211, line: 61, baseType: !1890, size: 64)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !1891)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !1892)
!1892 = !{!1893, !1899}
!1893 = !DIDerivedType(tag: DW_TAG_member, scope: !1891, file: !221, line: 38, baseType: !1894, size: 32)
!1894 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1891, file: !221, line: 38, size: 32, elements: !1895)
!1895 = !{!1896, !1898}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1894, file: !221, line: 39, baseType: !1897, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1894, file: !221, line: 40, baseType: !1897, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, scope: !1891, file: !221, line: 42, baseType: !1900, size: 32, offset: 32)
!1900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1891, file: !221, line: 42, size: 32, elements: !1901)
!1901 = !{!1902, !1903}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1900, file: !221, line: 43, baseType: !1897, size: 32)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1900, file: !221, line: 44, baseType: !1897, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1887, file: !211, line: 62, baseType: !1905, size: 64)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !1906)
!1906 = !{!1907}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1905, file: !237, line: 50, baseType: !1908, size: 64)
!1908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1909, size: 64, elements: !242)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 32)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1884, file: !211, line: 68, baseType: !1911, size: 32, offset: 64)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !1913)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !1914)
!1914 = !{!1915}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1913, file: !247, line: 232, baseType: !1916, size: 64)
!1916 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !1891)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1884, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1884, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!1919 = !DIDerivedType(tag: DW_TAG_member, scope: !1884, file: !211, line: 90, baseType: !1920, size: 16, offset: 112)
!1920 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1884, file: !211, line: 90, size: 16, elements: !1921)
!1921 = !{!1922, !1927}
!1922 = !DIDerivedType(tag: DW_TAG_member, scope: !1920, file: !211, line: 91, baseType: !1923, size: 16)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1920, file: !211, line: 91, size: 16, elements: !1924)
!1924 = !{!1925, !1926}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1923, file: !211, line: 96, baseType: !261, size: 8)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1923, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1920, file: !211, line: 100, baseType: !265, size: 16)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1884, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1884, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1884, file: !211, line: 131, baseType: !1931, size: 192, offset: 192)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !1932)
!1932 = !{!1933, !1934, !1940}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1931, file: !247, line: 245, baseType: !1890, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1931, file: !247, line: 246, baseType: !1935, size: 32, offset: 64)
!1935 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !1936)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 32)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{null, !1939}
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1931, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1881, file: !211, line: 250, baseType: !1942, size: 288, offset: 384)
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !1943)
!1943 = !{!1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1942, file: !284, line: 26, baseType: !121, size: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1942, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1942, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1942, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1942, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1942, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1942, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1942, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1942, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1881, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1881, file: !211, line: 256, baseType: !1912, size: 64, offset: 704)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1881, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1881, file: !211, line: 300, baseType: !1957, size: 96, offset: 800)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !1958)
!1958 = !{!1959, !1960, !1961}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1957, file: !211, line: 153, baseType: !22, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1957, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1957, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1881, file: !211, line: 325, baseType: !1963, size: 32, offset: 896)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 32)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !1965)
!1965 = !{!1966, !1972, !1973}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1964, file: !307, line: 5074, baseType: !1967, size: 96)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !1968)
!1968 = !{!1969, !1970, !1971}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1967, file: !311, line: 57, baseType: !314, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1967, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1967, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1964, file: !307, line: 5075, baseType: !1912, size: 64, offset: 96)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1964, file: !307, line: 5076, baseType: !1974, offset: 160)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1881, file: !211, line: 343, baseType: !1976, size: 64, offset: 928)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !1977)
!1977 = !{!1978, !1979}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1976, file: !284, line: 63, baseType: !121, size: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1976, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!1980 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1981, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1982, globals: !1984, splitDebugInlining: false, nameTableKind: None)
!1981 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!1982 = !{!102, !144, !1358, !154, !103, !1983, !24, !200, !957, !22, !121, !1270}
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 32)
!1984 = !{!1873, !1985}
!1985 = !DIGlobalVariableExpression(var: !1986, expr: !DIExpression())
!1986 = distinct !DIGlobalVariable(name: "states_sz", scope: !1875, file: !1876, line: 279, type: !1987, isLocal: true, isDefinition: true)
!1987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1550, size: 256, elements: !1278)
!1988 = !{!1989, !1990, !1991, !1992, !1993, !1994, !1995}
!1989 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1875, file: !1876, line: 271, type: !1879)
!1990 = !DILocalVariable(name: "buf", arg: 2, scope: !1875, file: !1876, line: 271, type: !957)
!1991 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1875, file: !1876, line: 271, type: !200)
!1992 = !DILocalVariable(name: "off", scope: !1875, file: !1876, line: 273, type: !200)
!1993 = !DILocalVariable(name: "bit", scope: !1875, file: !1876, line: 274, type: !154)
!1994 = !DILocalVariable(name: "thread_state", scope: !1875, file: !1876, line: 275, type: !154)
!1995 = !DILocalVariable(name: "index", scope: !1996, file: !1876, line: 293, type: !154)
!1996 = distinct !DILexicalBlock(scope: !1875, file: !1876, line: 293, column: 2)
!1997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 256, elements: !1278)
!1998 = !DIGlobalVariableExpression(var: !1999, expr: !DIExpression())
!1999 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2000, file: !2108, line: 56, type: !2097, isLocal: false, isDefinition: true)
!2000 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2001, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2002, globals: !2105, splitDebugInlining: false, nameTableKind: None)
!2001 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2002 = !{!2003, !957, !102, !2103, !1653, !1358, !566, !103, !121, !1270, !2104}
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 32)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !2005)
!2005 = !{!2006, !2064, !2076, !2077, !2078, !2079, !2085, !2098}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2004, file: !211, line: 247, baseType: !2007, size: 384)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !2008)
!2008 = !{!2009, !2033, !2040, !2041, !2042, !2051, !2052, !2053}
!2009 = !DIDerivedType(tag: DW_TAG_member, scope: !2007, file: !211, line: 60, baseType: !2010, size: 64)
!2010 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2007, file: !211, line: 60, size: 64, elements: !2011)
!2011 = !{!2012, !2027}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2010, file: !211, line: 61, baseType: !2013, size: 64)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !2015)
!2015 = !{!2016, !2022}
!2016 = !DIDerivedType(tag: DW_TAG_member, scope: !2014, file: !221, line: 38, baseType: !2017, size: 32)
!2017 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2014, file: !221, line: 38, size: 32, elements: !2018)
!2018 = !{!2019, !2021}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2017, file: !221, line: 39, baseType: !2020, size: 32)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 32)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2017, file: !221, line: 40, baseType: !2020, size: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, scope: !2014, file: !221, line: 42, baseType: !2023, size: 32, offset: 32)
!2023 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2014, file: !221, line: 42, size: 32, elements: !2024)
!2024 = !{!2025, !2026}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2023, file: !221, line: 43, baseType: !2020, size: 32)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2023, file: !221, line: 44, baseType: !2020, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2010, file: !211, line: 62, baseType: !2028, size: 64)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !2029)
!2029 = !{!2030}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2028, file: !237, line: 50, baseType: !2031, size: 64)
!2031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2032, size: 64, elements: !242)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2007, file: !211, line: 68, baseType: !2034, size: 32, offset: 64)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 32)
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !2036)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !2037)
!2037 = !{!2038}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2036, file: !247, line: 232, baseType: !2039, size: 64)
!2039 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !2014)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2007, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2007, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!2042 = !DIDerivedType(tag: DW_TAG_member, scope: !2007, file: !211, line: 90, baseType: !2043, size: 16, offset: 112)
!2043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2007, file: !211, line: 90, size: 16, elements: !2044)
!2044 = !{!2045, !2050}
!2045 = !DIDerivedType(tag: DW_TAG_member, scope: !2043, file: !211, line: 91, baseType: !2046, size: 16)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2043, file: !211, line: 91, size: 16, elements: !2047)
!2047 = !{!2048, !2049}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2046, file: !211, line: 96, baseType: !261, size: 8)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2046, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2043, file: !211, line: 100, baseType: !265, size: 16)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2007, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2007, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2007, file: !211, line: 131, baseType: !2054, size: 192, offset: 192)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !2055)
!2055 = !{!2056, !2057, !2063}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2054, file: !247, line: 245, baseType: !2013, size: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2054, file: !247, line: 246, baseType: !2058, size: 32, offset: 64)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !2059)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 32)
!2060 = !DISubroutineType(types: !2061)
!2061 = !{null, !2062}
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2054, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2004, file: !211, line: 250, baseType: !2065, size: 288, offset: 384)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !2066)
!2066 = !{!2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2065, file: !284, line: 26, baseType: !121, size: 32)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2065, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2065, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2065, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2065, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2065, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2065, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2065, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2065, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2004, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2004, file: !211, line: 256, baseType: !2035, size: 64, offset: 704)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2004, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2004, file: !211, line: 300, baseType: !2080, size: 96, offset: 800)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !2081)
!2081 = !{!2082, !2083, !2084}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2080, file: !211, line: 153, baseType: !22, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2080, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2080, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2004, file: !211, line: 325, baseType: !2086, size: 32, offset: 896)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 32)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !2088)
!2088 = !{!2089, !2095, !2096}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2087, file: !307, line: 5074, baseType: !2090, size: 96)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !2091)
!2091 = !{!2092, !2093, !2094}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2090, file: !311, line: 57, baseType: !314, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2090, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2090, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2087, file: !307, line: 5075, baseType: !2035, size: 64, offset: 96)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2087, file: !307, line: 5076, baseType: !2097, offset: 160)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2004, file: !211, line: 343, baseType: !2099, size: 64, offset: 928)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !2100)
!2100 = !{!2101, !2102}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2099, file: !284, line: 63, baseType: !121, size: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2099, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 32)
!2105 = !{!1998, !2106, !2109, !2111}
!2106 = !DIGlobalVariableExpression(var: !2107, expr: !DIExpression())
!2107 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2000, file: !2108, line: 404, type: !103, isLocal: true, isDefinition: true)
!2108 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2109 = !DIGlobalVariableExpression(var: !2110, expr: !DIExpression())
!2110 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2000, file: !2108, line: 405, type: !103, isLocal: true, isDefinition: true)
!2111 = !DIGlobalVariableExpression(var: !2112, expr: !DIExpression())
!2112 = distinct !DIGlobalVariable(name: "pending_current", scope: !2000, file: !2108, line: 425, type: !2003, isLocal: true, isDefinition: true)
!2113 = !DIGlobalVariableExpression(var: !2114, expr: !DIExpression())
!2114 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2115, file: !2145, line: 15, type: !1270, isLocal: true, isDefinition: true)
!2115 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2116, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2117, globals: !2142, splitDebugInlining: false, nameTableKind: None)
!2116 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2117 = !{!1358, !102, !566, !121, !1270, !103, !2118, !957, !280}
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 32)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !2120)
!2120 = !{!2121, !2136, !2141}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2119, file: !247, line: 245, baseType: !2122, size: 64)
!2122 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !2123)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !2124)
!2124 = !{!2125, !2131}
!2125 = !DIDerivedType(tag: DW_TAG_member, scope: !2123, file: !221, line: 38, baseType: !2126, size: 32)
!2126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2123, file: !221, line: 38, size: 32, elements: !2127)
!2127 = !{!2128, !2130}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2126, file: !221, line: 39, baseType: !2129, size: 32)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 32)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2126, file: !221, line: 40, baseType: !2129, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, scope: !2123, file: !221, line: 42, baseType: !2132, size: 32, offset: 32)
!2132 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2123, file: !221, line: 42, size: 32, elements: !2133)
!2133 = !{!2134, !2135}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2132, file: !221, line: 43, baseType: !2129, size: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2132, file: !221, line: 44, baseType: !2129, size: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2119, file: !247, line: 246, baseType: !2137, size: 32, offset: 64)
!2137 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !2138)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 32)
!2139 = !DISubroutineType(types: !2140)
!2140 = !{null, !2118}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2119, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!2142 = !{!2113, !2143, !2147, !2149}
!2143 = !DIGlobalVariableExpression(var: !2144, expr: !DIExpression())
!2144 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2115, file: !2145, line: 19, type: !2146, isLocal: true, isDefinition: true)
!2145 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!2147 = !DIGlobalVariableExpression(var: !2148, expr: !DIExpression())
!2148 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2115, file: !2145, line: 25, type: !103, isLocal: true, isDefinition: true)
!2149 = !DIGlobalVariableExpression(var: !2150, expr: !DIExpression())
!2150 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2115, file: !2145, line: 17, type: !2151, isLocal: true, isDefinition: true)
!2151 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !2123)
!2152 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2153, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2153 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2154 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2155, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2156, retainedTypes: !2256, globals: !2319, splitDebugInlining: false, nameTableKind: None)
!2155 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/sensor/accel_polling/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2156 = !{!2157, !2221, !2241, !30}
!2157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sensor_channel", file: !2158, line: 53, baseType: !32, size: 32, elements: !2159)
!2158 = !DIFile(filename: "zephyr/include/zephyr/drivers/sensor.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2159 = !{!2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220}
!2160 = !DIEnumerator(name: "SENSOR_CHAN_ACCEL_X", value: 0)
!2161 = !DIEnumerator(name: "SENSOR_CHAN_ACCEL_Y", value: 1)
!2162 = !DIEnumerator(name: "SENSOR_CHAN_ACCEL_Z", value: 2)
!2163 = !DIEnumerator(name: "SENSOR_CHAN_ACCEL_XYZ", value: 3)
!2164 = !DIEnumerator(name: "SENSOR_CHAN_GYRO_X", value: 4)
!2165 = !DIEnumerator(name: "SENSOR_CHAN_GYRO_Y", value: 5)
!2166 = !DIEnumerator(name: "SENSOR_CHAN_GYRO_Z", value: 6)
!2167 = !DIEnumerator(name: "SENSOR_CHAN_GYRO_XYZ", value: 7)
!2168 = !DIEnumerator(name: "SENSOR_CHAN_MAGN_X", value: 8)
!2169 = !DIEnumerator(name: "SENSOR_CHAN_MAGN_Y", value: 9)
!2170 = !DIEnumerator(name: "SENSOR_CHAN_MAGN_Z", value: 10)
!2171 = !DIEnumerator(name: "SENSOR_CHAN_MAGN_XYZ", value: 11)
!2172 = !DIEnumerator(name: "SENSOR_CHAN_DIE_TEMP", value: 12)
!2173 = !DIEnumerator(name: "SENSOR_CHAN_AMBIENT_TEMP", value: 13)
!2174 = !DIEnumerator(name: "SENSOR_CHAN_PRESS", value: 14)
!2175 = !DIEnumerator(name: "SENSOR_CHAN_PROX", value: 15)
!2176 = !DIEnumerator(name: "SENSOR_CHAN_HUMIDITY", value: 16)
!2177 = !DIEnumerator(name: "SENSOR_CHAN_LIGHT", value: 17)
!2178 = !DIEnumerator(name: "SENSOR_CHAN_IR", value: 18)
!2179 = !DIEnumerator(name: "SENSOR_CHAN_RED", value: 19)
!2180 = !DIEnumerator(name: "SENSOR_CHAN_GREEN", value: 20)
!2181 = !DIEnumerator(name: "SENSOR_CHAN_BLUE", value: 21)
!2182 = !DIEnumerator(name: "SENSOR_CHAN_ALTITUDE", value: 22)
!2183 = !DIEnumerator(name: "SENSOR_CHAN_PM_1_0", value: 23)
!2184 = !DIEnumerator(name: "SENSOR_CHAN_PM_2_5", value: 24)
!2185 = !DIEnumerator(name: "SENSOR_CHAN_PM_10", value: 25)
!2186 = !DIEnumerator(name: "SENSOR_CHAN_DISTANCE", value: 26)
!2187 = !DIEnumerator(name: "SENSOR_CHAN_CO2", value: 27)
!2188 = !DIEnumerator(name: "SENSOR_CHAN_VOC", value: 28)
!2189 = !DIEnumerator(name: "SENSOR_CHAN_GAS_RES", value: 29)
!2190 = !DIEnumerator(name: "SENSOR_CHAN_VOLTAGE", value: 30)
!2191 = !DIEnumerator(name: "SENSOR_CHAN_CURRENT", value: 31)
!2192 = !DIEnumerator(name: "SENSOR_CHAN_POWER", value: 32)
!2193 = !DIEnumerator(name: "SENSOR_CHAN_RESISTANCE", value: 33)
!2194 = !DIEnumerator(name: "SENSOR_CHAN_ROTATION", value: 34)
!2195 = !DIEnumerator(name: "SENSOR_CHAN_POS_DX", value: 35)
!2196 = !DIEnumerator(name: "SENSOR_CHAN_POS_DY", value: 36)
!2197 = !DIEnumerator(name: "SENSOR_CHAN_POS_DZ", value: 37)
!2198 = !DIEnumerator(name: "SENSOR_CHAN_RPM", value: 38)
!2199 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_VOLTAGE", value: 39)
!2200 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_AVG_CURRENT", value: 40)
!2201 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_STDBY_CURRENT", value: 41)
!2202 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_MAX_LOAD_CURRENT", value: 42)
!2203 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_TEMP", value: 43)
!2204 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_STATE_OF_CHARGE", value: 44)
!2205 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_FULL_CHARGE_CAPACITY", value: 45)
!2206 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_REMAINING_CHARGE_CAPACITY", value: 46)
!2207 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_NOM_AVAIL_CAPACITY", value: 47)
!2208 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_FULL_AVAIL_CAPACITY", value: 48)
!2209 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_AVG_POWER", value: 49)
!2210 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_STATE_OF_HEALTH", value: 50)
!2211 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_TIME_TO_EMPTY", value: 51)
!2212 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_TIME_TO_FULL", value: 52)
!2213 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_CYCLE_COUNT", value: 53)
!2214 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_DESIGN_VOLTAGE", value: 54)
!2215 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_DESIRED_VOLTAGE", value: 55)
!2216 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_DESIRED_CHARGING_CURRENT", value: 56)
!2217 = !DIEnumerator(name: "SENSOR_CHAN_ALL", value: 57)
!2218 = !DIEnumerator(name: "SENSOR_CHAN_COMMON_COUNT", value: 58)
!2219 = !DIEnumerator(name: "SENSOR_CHAN_PRIV_START", value: 58)
!2220 = !DIEnumerator(name: "SENSOR_CHAN_MAX", value: 32767)
!2221 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sensor_attribute", file: !2158, line: 274, baseType: !32, size: 32, elements: !2222)
!2222 = !{!2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240}
!2223 = !DIEnumerator(name: "SENSOR_ATTR_SAMPLING_FREQUENCY", value: 0)
!2224 = !DIEnumerator(name: "SENSOR_ATTR_LOWER_THRESH", value: 1)
!2225 = !DIEnumerator(name: "SENSOR_ATTR_UPPER_THRESH", value: 2)
!2226 = !DIEnumerator(name: "SENSOR_ATTR_SLOPE_TH", value: 3)
!2227 = !DIEnumerator(name: "SENSOR_ATTR_SLOPE_DUR", value: 4)
!2228 = !DIEnumerator(name: "SENSOR_ATTR_HYSTERESIS", value: 5)
!2229 = !DIEnumerator(name: "SENSOR_ATTR_OVERSAMPLING", value: 6)
!2230 = !DIEnumerator(name: "SENSOR_ATTR_FULL_SCALE", value: 7)
!2231 = !DIEnumerator(name: "SENSOR_ATTR_OFFSET", value: 8)
!2232 = !DIEnumerator(name: "SENSOR_ATTR_CALIB_TARGET", value: 9)
!2233 = !DIEnumerator(name: "SENSOR_ATTR_CONFIGURATION", value: 10)
!2234 = !DIEnumerator(name: "SENSOR_ATTR_CALIBRATION", value: 11)
!2235 = !DIEnumerator(name: "SENSOR_ATTR_FEATURE_MASK", value: 12)
!2236 = !DIEnumerator(name: "SENSOR_ATTR_ALERT", value: 13)
!2237 = !DIEnumerator(name: "SENSOR_ATTR_FF_DUR", value: 14)
!2238 = !DIEnumerator(name: "SENSOR_ATTR_COMMON_COUNT", value: 15)
!2239 = !DIEnumerator(name: "SENSOR_ATTR_PRIV_START", value: 15)
!2240 = !DIEnumerator(name: "SENSOR_ATTR_MAX", value: 32767)
!2241 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sensor_trigger_type", file: !2158, line: 203, baseType: !32, size: 32, elements: !2242)
!2242 = !{!2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255}
!2243 = !DIEnumerator(name: "SENSOR_TRIG_TIMER", value: 0)
!2244 = !DIEnumerator(name: "SENSOR_TRIG_DATA_READY", value: 1)
!2245 = !DIEnumerator(name: "SENSOR_TRIG_DELTA", value: 2)
!2246 = !DIEnumerator(name: "SENSOR_TRIG_NEAR_FAR", value: 3)
!2247 = !DIEnumerator(name: "SENSOR_TRIG_THRESHOLD", value: 4)
!2248 = !DIEnumerator(name: "SENSOR_TRIG_TAP", value: 5)
!2249 = !DIEnumerator(name: "SENSOR_TRIG_DOUBLE_TAP", value: 6)
!2250 = !DIEnumerator(name: "SENSOR_TRIG_FREEFALL", value: 7)
!2251 = !DIEnumerator(name: "SENSOR_TRIG_MOTION", value: 8)
!2252 = !DIEnumerator(name: "SENSOR_TRIG_STATIONARY", value: 9)
!2253 = !DIEnumerator(name: "SENSOR_TRIG_COMMON_COUNT", value: 10)
!2254 = !DIEnumerator(name: "SENSOR_TRIG_PRIV_START", value: 10)
!2255 = !DIEnumerator(name: "SENSOR_TRIG_MAX", value: 32767)
!2256 = !{!200, !103, !2257, !102, !2318, !1358, !121, !1270}
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2259)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sensor_driver_api", file: !2158, line: 397, size: 160, elements: !2260)
!2260 = !{!2261, !2287, !2293, !2308, !2313}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "attr_set", scope: !2259, file: !2158, line: 398, baseType: !2262, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_typedef, name: "sensor_attr_set_t", file: !2158, line: 354, baseType: !2263)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 32)
!2264 = !DISubroutineType(types: !2265)
!2265 = !{!103, !2266, !2157, !2221, !2281}
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 32)
!2267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2268)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !2269)
!2269 = !{!2270, !2271, !2272, !2273, !2279, !2280}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2268, file: !141, line: 380, baseType: !144, size: 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2268, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2268, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2268, file: !141, line: 386, baseType: !2274, size: 32, offset: 96)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 32)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !2276)
!2276 = !{!2277, !2278}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2275, file: !141, line: 359, baseType: !154, size: 8)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2275, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2268, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2268, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 32)
!2282 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2283)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sensor_value", file: !2158, line: 43, size: 64, elements: !2284)
!2284 = !{!2285, !2286}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "val1", scope: !2283, file: !2158, line: 45, baseType: !566, size: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !2283, file: !2158, line: 47, baseType: !566, size: 32, offset: 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "attr_get", scope: !2259, file: !2158, line: 399, baseType: !2288, size: 32, offset: 32)
!2288 = !DIDerivedType(tag: DW_TAG_typedef, name: "sensor_attr_get_t", file: !2158, line: 365, baseType: !2289)
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 32)
!2290 = !DISubroutineType(types: !2291)
!2291 = !{!103, !2266, !2157, !2221, !2292}
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "trigger_set", scope: !2259, file: !2158, line: 400, baseType: !2294, size: 32, offset: 64)
!2294 = !DIDerivedType(tag: DW_TAG_typedef, name: "sensor_trigger_set_t", file: !2158, line: 376, baseType: !2295)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 32)
!2296 = !DISubroutineType(types: !2297)
!2297 = !{!103, !2266, !2298, !2304}
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 32)
!2299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2300)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sensor_trigger", file: !2158, line: 264, size: 64, elements: !2301)
!2301 = !{!2302, !2303}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2300, file: !2158, line: 266, baseType: !2241, size: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !2300, file: !2158, line: 268, baseType: !2157, size: 32, offset: 32)
!2304 = !DIDerivedType(tag: DW_TAG_typedef, name: "sensor_trigger_handler_t", file: !2158, line: 345, baseType: !2305)
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 32)
!2306 = !DISubroutineType(types: !2307)
!2307 = !{null, !2266, !2298}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fetch", scope: !2259, file: !2158, line: 401, baseType: !2309, size: 32, offset: 96)
!2309 = !DIDerivedType(tag: DW_TAG_typedef, name: "sensor_sample_fetch_t", file: !2158, line: 385, baseType: !2310)
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2311, size: 32)
!2311 = !DISubroutineType(types: !2312)
!2312 = !{!103, !2266, !2157}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "channel_get", scope: !2259, file: !2158, line: 402, baseType: !2314, size: 32, offset: 128)
!2314 = !DIDerivedType(tag: DW_TAG_typedef, name: "sensor_channel_get_t", file: !2158, line: 393, baseType: !2315)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 32)
!2316 = !DISubroutineType(types: !2317)
!2317 = !{!103, !2266, !2157, !2292}
!2318 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2319 = !{!2320, !2327}
!2320 = !DIGlobalVariableExpression(var: !2321, expr: !DIExpression())
!2321 = distinct !DIGlobalVariable(name: "sensors", scope: !2154, file: !2322, line: 20, type: !2323, isLocal: true, isDefinition: true)
!2322 = !DIFile(filename: "zephyr/samples/sensor/accel_polling/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2324, elements: !2325)
!2324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2266)
!2325 = !{!2326}
!2326 = !DISubrange(count: 0)
!2327 = !DIGlobalVariableExpression(var: !2328, expr: !DIExpression())
!2328 = distinct !DIGlobalVariable(name: "channels", scope: !2154, file: !2322, line: 22, type: !2329, isLocal: true, isDefinition: true)
!2329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2330, size: 96, elements: !623)
!2330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2157)
!2331 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2332, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2332 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2333 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2334, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2335, retainedTypes: !2355, splitDebugInlining: false, nameTableKind: None)
!2334 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2335 = !{!2336, !2344}
!2336 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2337, line: 69, baseType: !32, size: 32, elements: !2338)
!2337 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2338 = !{!2339, !2340, !2341, !2342, !2343}
!2339 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2340 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2341 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2342 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2343 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2344 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2337, line: 56, baseType: !32, size: 32, elements: !2345)
!2345 = !{!2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354}
!2346 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2347 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2348 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2349 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2350 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2351 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2352 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2353 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2354 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2355 = !{!103, !2336, !2344, !2356, !262, !164, !2358, !2359, !155, !266, !144, !200, !102, !22, !32, !2361, !2362, !2363, !2364, !2365, !281, !2366, !2357, !2367, !2368, !2369, !2370, !121, !1270}
!2356 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2337, line: 31, baseType: !2357)
!2357 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !281)
!2358 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !201, line: 329, baseType: !32)
!2359 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2337, line: 32, baseType: !2360)
!2360 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1271)
!2361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!2364 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 32)
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 32)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !201, line: 145, baseType: !103)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 32)
!2371 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2372, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2372 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2373 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2374, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2375, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2374 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2375 = !{!2376, !30}
!2376 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2377, line: 27, baseType: !32, size: 32, elements: !2378)
!2377 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2378 = !{!2379, !2380, !2381, !2382, !2383}
!2379 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2380 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2381 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2382 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2383 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2384 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2385, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2386, retainedTypes: !2387, splitDebugInlining: false, nameTableKind: None)
!2385 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2386 = !{!425, !2376, !30}
!2387 = !{!592, !2388, !102, !103, !566, !121, !154, !2405}
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !2390)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !2391)
!2391 = !{!2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2390, file: !356, line: 413, baseType: !1373, size: 256)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2390, file: !356, line: 414, baseType: !1375, size: 768, offset: 256)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2390, file: !356, line: 415, baseType: !1373, size: 256, offset: 1024)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2390, file: !356, line: 416, baseType: !1375, size: 768, offset: 1280)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2390, file: !356, line: 417, baseType: !1373, size: 256, offset: 2048)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2390, file: !356, line: 418, baseType: !1375, size: 768, offset: 2304)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2390, file: !356, line: 419, baseType: !1373, size: 256, offset: 3072)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2390, file: !356, line: 420, baseType: !1375, size: 768, offset: 3328)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2390, file: !356, line: 421, baseType: !1373, size: 256, offset: 4096)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2390, file: !356, line: 422, baseType: !1386, size: 1792, offset: 4352)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2390, file: !356, line: 423, baseType: !1390, size: 1920, offset: 6144)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2390, file: !356, line: 424, baseType: !1395, size: 20608, offset: 8064)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2390, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2407)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2408)
!2408 = !{!2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2407, file: !356, line: 447, baseType: !360, size: 32)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2407, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2407, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2407, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2407, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2407, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2407, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2407, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2407, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2407, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2407, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2407, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2407, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2407, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2407, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2407, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2407, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2407, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2407, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2407, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2407, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2430 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2431, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2431 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2432 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2433, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2434, splitDebugInlining: false, nameTableKind: None)
!2433 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2434 = !{!102, !103, !22, !2435}
!2435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 32)
!2436 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2437)
!2437 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2438)
!2438 = !{!2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2437, file: !356, line: 447, baseType: !360, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2437, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2437, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2437, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2437, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2437, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2437, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2437, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2437, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2437, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2437, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2437, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2437, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2437, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2437, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2437, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2437, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2437, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2437, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2437, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2437, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2460 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2461, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2462, splitDebugInlining: false, nameTableKind: None)
!2461 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2462 = !{!2463, !102, !103}
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 32)
!2464 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2465)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2466)
!2466 = !{!2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2465, file: !356, line: 447, baseType: !360, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2465, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2465, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2465, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2465, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2465, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2465, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2465, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2465, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2465, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2465, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2465, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2465, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2465, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2465, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2465, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2465, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2465, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2465, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2465, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2465, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2488 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2489, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2490, splitDebugInlining: false, nameTableKind: None)
!2489 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2490 = !{!2491, !121, !102, !103}
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 32)
!2492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2493, line: 98, size: 256, elements: !2494)
!2493 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2494 = !{!2495, !2500, !2505, !2510, !2515, !2520, !2525, !2530}
!2495 = !DIDerivedType(tag: DW_TAG_member, scope: !2492, file: !2493, line: 99, baseType: !2496, size: 32)
!2496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2492, file: !2493, line: 99, size: 32, elements: !2497)
!2497 = !{!2498, !2499}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2496, file: !2493, line: 99, baseType: !121, size: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2496, file: !2493, line: 99, baseType: !121, size: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, scope: !2492, file: !2493, line: 100, baseType: !2501, size: 32, offset: 32)
!2501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2492, file: !2493, line: 100, size: 32, elements: !2502)
!2502 = !{!2503, !2504}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2501, file: !2493, line: 100, baseType: !121, size: 32)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2501, file: !2493, line: 100, baseType: !121, size: 32)
!2505 = !DIDerivedType(tag: DW_TAG_member, scope: !2492, file: !2493, line: 101, baseType: !2506, size: 32, offset: 64)
!2506 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2492, file: !2493, line: 101, size: 32, elements: !2507)
!2507 = !{!2508, !2509}
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2506, file: !2493, line: 101, baseType: !121, size: 32)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2506, file: !2493, line: 101, baseType: !121, size: 32)
!2510 = !DIDerivedType(tag: DW_TAG_member, scope: !2492, file: !2493, line: 102, baseType: !2511, size: 32, offset: 96)
!2511 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2492, file: !2493, line: 102, size: 32, elements: !2512)
!2512 = !{!2513, !2514}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2511, file: !2493, line: 102, baseType: !121, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2511, file: !2493, line: 102, baseType: !121, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, scope: !2492, file: !2493, line: 103, baseType: !2516, size: 32, offset: 128)
!2516 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2492, file: !2493, line: 103, size: 32, elements: !2517)
!2517 = !{!2518, !2519}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2516, file: !2493, line: 103, baseType: !121, size: 32)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2516, file: !2493, line: 103, baseType: !121, size: 32)
!2520 = !DIDerivedType(tag: DW_TAG_member, scope: !2492, file: !2493, line: 104, baseType: !2521, size: 32, offset: 160)
!2521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2492, file: !2493, line: 104, size: 32, elements: !2522)
!2522 = !{!2523, !2524}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2521, file: !2493, line: 104, baseType: !121, size: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2521, file: !2493, line: 104, baseType: !121, size: 32)
!2525 = !DIDerivedType(tag: DW_TAG_member, scope: !2492, file: !2493, line: 105, baseType: !2526, size: 32, offset: 192)
!2526 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2492, file: !2493, line: 105, size: 32, elements: !2527)
!2527 = !{!2528, !2529}
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2526, file: !2493, line: 105, baseType: !121, size: 32)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2526, file: !2493, line: 105, baseType: !121, size: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2492, file: !2493, line: 106, baseType: !121, size: 32, offset: 224)
!2531 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2532, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2375, retainedTypes: !2533, splitDebugInlining: false, nameTableKind: None)
!2532 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2533 = !{!2534, !102, !103, !2559, !2602, !121}
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 32)
!2535 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2536)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2537)
!2537 = !{!2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2536, file: !356, line: 447, baseType: !360, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2536, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2536, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2536, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2536, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2536, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2536, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2536, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2536, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2536, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2536, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2536, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2536, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2536, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2536, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2536, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2536, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2536, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2536, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2536, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2536, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2493, line: 141, baseType: !2561)
!2561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2493, line: 97, size: 256, elements: !2562)
!2562 = !{!2563}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2561, file: !2493, line: 107, baseType: !2564, size: 256)
!2564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2493, line: 98, size: 256, elements: !2565)
!2565 = !{!2566, !2571, !2576, !2581, !2586, !2591, !2596, !2601}
!2566 = !DIDerivedType(tag: DW_TAG_member, scope: !2564, file: !2493, line: 99, baseType: !2567, size: 32)
!2567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2564, file: !2493, line: 99, size: 32, elements: !2568)
!2568 = !{!2569, !2570}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2567, file: !2493, line: 99, baseType: !121, size: 32)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2567, file: !2493, line: 99, baseType: !121, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_member, scope: !2564, file: !2493, line: 100, baseType: !2572, size: 32, offset: 32)
!2572 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2564, file: !2493, line: 100, size: 32, elements: !2573)
!2573 = !{!2574, !2575}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2572, file: !2493, line: 100, baseType: !121, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2572, file: !2493, line: 100, baseType: !121, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, scope: !2564, file: !2493, line: 101, baseType: !2577, size: 32, offset: 64)
!2577 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2564, file: !2493, line: 101, size: 32, elements: !2578)
!2578 = !{!2579, !2580}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2577, file: !2493, line: 101, baseType: !121, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2577, file: !2493, line: 101, baseType: !121, size: 32)
!2581 = !DIDerivedType(tag: DW_TAG_member, scope: !2564, file: !2493, line: 102, baseType: !2582, size: 32, offset: 96)
!2582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2564, file: !2493, line: 102, size: 32, elements: !2583)
!2583 = !{!2584, !2585}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2582, file: !2493, line: 102, baseType: !121, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2582, file: !2493, line: 102, baseType: !121, size: 32)
!2586 = !DIDerivedType(tag: DW_TAG_member, scope: !2564, file: !2493, line: 103, baseType: !2587, size: 32, offset: 128)
!2587 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2564, file: !2493, line: 103, size: 32, elements: !2588)
!2588 = !{!2589, !2590}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2587, file: !2493, line: 103, baseType: !121, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2587, file: !2493, line: 103, baseType: !121, size: 32)
!2591 = !DIDerivedType(tag: DW_TAG_member, scope: !2564, file: !2493, line: 104, baseType: !2592, size: 32, offset: 160)
!2592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2564, file: !2493, line: 104, size: 32, elements: !2593)
!2593 = !{!2594, !2595}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2592, file: !2493, line: 104, baseType: !121, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2592, file: !2493, line: 104, baseType: !121, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, scope: !2564, file: !2493, line: 105, baseType: !2597, size: 32, offset: 192)
!2597 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2564, file: !2493, line: 105, size: 32, elements: !2598)
!2598 = !{!2599, !2600}
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2597, file: !2493, line: 105, baseType: !121, size: 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2597, file: !2493, line: 105, baseType: !121, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2564, file: !2493, line: 106, baseType: !121, size: 32, offset: 224)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!2603 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2604, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1356, retainedTypes: !2605, splitDebugInlining: false, nameTableKind: None)
!2604 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2605 = !{!592, !566, !154, !121, !2606, !2623}
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 32)
!2607 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !2608)
!2608 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !2609)
!2609 = !{!2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2608, file: !356, line: 413, baseType: !1373, size: 256)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2608, file: !356, line: 414, baseType: !1375, size: 768, offset: 256)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2608, file: !356, line: 415, baseType: !1373, size: 256, offset: 1024)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2608, file: !356, line: 416, baseType: !1375, size: 768, offset: 1280)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2608, file: !356, line: 417, baseType: !1373, size: 256, offset: 2048)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2608, file: !356, line: 418, baseType: !1375, size: 768, offset: 2304)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2608, file: !356, line: 419, baseType: !1373, size: 256, offset: 3072)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2608, file: !356, line: 420, baseType: !1375, size: 768, offset: 3328)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2608, file: !356, line: 421, baseType: !1373, size: 256, offset: 4096)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2608, file: !356, line: 422, baseType: !1386, size: 1792, offset: 4352)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2608, file: !356, line: 423, baseType: !1390, size: 1920, offset: 6144)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2608, file: !356, line: 424, baseType: !1395, size: 20608, offset: 8064)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2608, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2624, size: 32)
!2624 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2625)
!2625 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2626)
!2626 = !{!2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647}
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2625, file: !356, line: 447, baseType: !360, size: 32)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2625, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2625, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2625, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2625, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2625, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2625, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2625, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2625, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2625, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2625, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2625, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2625, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2625, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2625, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2625, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2625, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2625, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2625, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2625, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2625, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2648 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2649, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2650, splitDebugInlining: false, nameTableKind: None)
!2649 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2650 = !{!2651, !102, !103}
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 32)
!2652 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2653)
!2653 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2654)
!2654 = !{!2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2653, file: !356, line: 447, baseType: !360, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2653, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2653, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2653, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2653, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2653, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2653, file: !356, line: 453, baseType: !1410, size: 96, offset: 192)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2653, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2653, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2653, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2653, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2653, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2653, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2653, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2653, file: !356, line: 461, baseType: !1419, size: 64, offset: 512)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2653, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2653, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2653, file: !356, line: 464, baseType: !1423, size: 128, offset: 640)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2653, file: !356, line: 465, baseType: !1425, size: 160, offset: 768)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2653, file: !356, line: 466, baseType: !1427, size: 160, offset: 928)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2653, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2676 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2677, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2678, splitDebugInlining: false, nameTableKind: None)
!2677 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2678 = !{!146, !957, !200, !792, !2679, !155, !102}
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2680, size: 32)
!2680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!2681 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2682, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2683, splitDebugInlining: false, nameTableKind: None)
!2682 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2683 = !{!2684}
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 32)
!2685 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !2686)
!2686 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !2687)
!2687 = !{!2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2686, file: !116, line: 338, baseType: !120, size: 32)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2686, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2686, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2686, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2686, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2686, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2686, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2686, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2686, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2686, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2686, file: !116, line: 348, baseType: !658, size: 64, offset: 320)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2686, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2686, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2686, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2686, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2686, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2686, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2686, file: !116, line: 355, baseType: !658, size: 64, offset: 576)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2686, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2686, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2686, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2686, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2686, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2686, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2686, file: !116, line: 362, baseType: !658, size: 64, offset: 832)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2686, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2686, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2686, file: !116, line: 365, baseType: !658, size: 64, offset: 960)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2686, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2686, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2686, file: !116, line: 368, baseType: !679, size: 32, offset: 1088)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2686, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!2720 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2721, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2721 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2722 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2723, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2724, retainedTypes: !2740, splitDebugInlining: false, nameTableKind: None)
!2723 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2724 = !{!2725, !2732, !2736}
!2725 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2726, line: 38, baseType: !32, size: 32, elements: !2727)
!2726 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2727 = !{!2728, !2729, !2730, !2731}
!2728 = !DIEnumerator(name: "HAL_OK", value: 0)
!2729 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2730 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2731 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2732 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !631, line: 184, baseType: !32, size: 32, elements: !2733)
!2733 = !{!2734, !2735}
!2734 = !DIEnumerator(name: "RESET", value: 0)
!2735 = !DIEnumerator(name: "SET", value: 1)
!2736 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !631, line: 190, baseType: !32, size: 32, elements: !2737)
!2737 = !{!2738, !2739}
!2738 = !DIEnumerator(name: "DISABLE", value: 0)
!2739 = !DIEnumerator(name: "ENABLE", value: 1)
!2740 = !{!102, !2741, !154, !121, !1272, !2777, !2783, !2794, !265, !2795, !1270}
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !2743)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !2744)
!2744 = !{!2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2743, file: !116, line: 338, baseType: !120, size: 32)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2743, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2743, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2743, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2743, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2743, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2743, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2743, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2743, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2743, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2743, file: !116, line: 348, baseType: !658, size: 64, offset: 320)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2743, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2743, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2743, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2743, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2743, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2743, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2743, file: !116, line: 355, baseType: !658, size: 64, offset: 576)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2743, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2743, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2743, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2743, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2743, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2743, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2743, file: !116, line: 362, baseType: !658, size: 64, offset: 832)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2743, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2743, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2743, file: !116, line: 365, baseType: !658, size: 64, offset: 960)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2743, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2743, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2743, file: !116, line: 368, baseType: !679, size: 32, offset: 1088)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2743, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2778, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 330, baseType: !2779)
!2779 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 326, size: 64, elements: !2780)
!2780 = !{!2781, !2782}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2779, file: !116, line: 328, baseType: !120, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2779, file: !116, line: 329, baseType: !120, size: 32, offset: 32)
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 259, baseType: !2785)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 250, size: 224, elements: !2786)
!2786 = !{!2787, !2788, !2789, !2790, !2791, !2792, !2793}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2785, file: !116, line: 252, baseType: !120, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2785, file: !116, line: 253, baseType: !120, size: 32, offset: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2785, file: !116, line: 254, baseType: !120, size: 32, offset: 64)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2785, file: !116, line: 255, baseType: !120, size: 32, offset: 96)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2785, file: !116, line: 256, baseType: !120, size: 32, offset: 128)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2785, file: !116, line: 257, baseType: !120, size: 32, offset: 160)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2785, file: !116, line: 258, baseType: !120, size: 32, offset: 192)
!2794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 32)
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 276, baseType: !2797)
!2797 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 265, size: 320, elements: !2798)
!2798 = !{!2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2797, file: !116, line: 267, baseType: !120, size: 32)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2797, file: !116, line: 268, baseType: !120, size: 32, offset: 32)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2797, file: !116, line: 269, baseType: !120, size: 32, offset: 64)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2797, file: !116, line: 270, baseType: !120, size: 32, offset: 96)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2797, file: !116, line: 271, baseType: !120, size: 32, offset: 128)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2797, file: !116, line: 272, baseType: !120, size: 32, offset: 160)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2797, file: !116, line: 273, baseType: !120, size: 32, offset: 192)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2797, file: !116, line: 274, baseType: !120, size: 32, offset: 224)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2797, file: !116, line: 275, baseType: !946, size: 64, offset: 256)
!2808 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2809, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2810, retainedTypes: !2811, splitDebugInlining: false, nameTableKind: None)
!2809 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2810 = !{!630}
!2811 = !{!2812, !121, !2820, !2826, !2837}
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 32)
!2813 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !356, line: 770, baseType: !2814)
!2814 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 764, size: 128, elements: !2815)
!2815 = !{!2816, !2817, !2818, !2819}
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2814, file: !356, line: 766, baseType: !120, size: 32)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2814, file: !356, line: 767, baseType: !120, size: 32, offset: 32)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2814, file: !356, line: 768, baseType: !120, size: 32, offset: 64)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2814, file: !356, line: 769, baseType: !360, size: 32, offset: 96)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 32)
!2821 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 330, baseType: !2822)
!2822 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 326, size: 64, elements: !2823)
!2823 = !{!2824, !2825}
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2822, file: !116, line: 328, baseType: !120, size: 32)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2822, file: !116, line: 329, baseType: !120, size: 32, offset: 32)
!2826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2827, size: 32)
!2827 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 259, baseType: !2828)
!2828 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 250, size: 224, elements: !2829)
!2829 = !{!2830, !2831, !2832, !2833, !2834, !2835, !2836}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2828, file: !116, line: 252, baseType: !120, size: 32)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2828, file: !116, line: 253, baseType: !120, size: 32, offset: 32)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2828, file: !116, line: 254, baseType: !120, size: 32, offset: 64)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2828, file: !116, line: 255, baseType: !120, size: 32, offset: 96)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2828, file: !116, line: 256, baseType: !120, size: 32, offset: 128)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2828, file: !116, line: 257, baseType: !120, size: 32, offset: 160)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2828, file: !116, line: 258, baseType: !120, size: 32, offset: 192)
!2837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2838, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !2839)
!2839 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !2840)
!2840 = !{!2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872}
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2839, file: !116, line: 338, baseType: !120, size: 32)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2839, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2839, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2839, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2839, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2839, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2839, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2839, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2839, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2839, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2839, file: !116, line: 348, baseType: !658, size: 64, offset: 320)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2839, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2839, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2839, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2839, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2839, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2839, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2839, file: !116, line: 355, baseType: !658, size: 64, offset: 576)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2839, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2839, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2839, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2839, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2839, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2839, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2839, file: !116, line: 362, baseType: !658, size: 64, offset: 832)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2839, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2839, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2839, file: !116, line: 365, baseType: !658, size: 64, offset: 960)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2839, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2839, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2839, file: !116, line: 368, baseType: !679, size: 32, offset: 1088)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2839, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!2873 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2874, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2875, splitDebugInlining: false, nameTableKind: None)
!2874 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2875 = !{!102, !200}
!2876 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2877, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2878, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2877 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2878 = !{!2879, !2886, !30}
!2879 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2880, line: 14, baseType: !32, size: 32, elements: !2881)
!2880 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2881 = !{!2882, !2883, !2884, !2885}
!2882 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2883 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2884 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2885 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2886 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2880, line: 42, baseType: !32, size: 32, elements: !2887)
!2887 = !{!2888, !2889, !2890, !2891, !2892, !2893}
!2888 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2889 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2890 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2891 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2892 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2893 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2894 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2895, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2895 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2896 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2897, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2898, splitDebugInlining: false, nameTableKind: None)
!2897 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2898 = !{!22, !102, !103}
!2899 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2900, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2900 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!2901 = !{!"Ubuntu clang version 14.0.6"}
!2902 = !{i32 7, !"Dwarf Version", i32 4}
!2903 = !{i32 2, !"Debug Info Version", i32 3}
!2904 = !{i32 1, !"wchar_size", i32 4}
!2905 = !{i32 1, !"min_enum_size", i32 4}
!2906 = !{i32 1, !"branch-target-enforcement", i32 0}
!2907 = !{i32 1, !"sign-return-address", i32 0}
!2908 = !{i32 1, !"sign-return-address-all", i32 0}
!2909 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2910 = !{i32 7, !"frame-pointer", i32 2}
!2911 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2912, file: !2912, line: 26, type: !2913, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2152, retainedNodes: !322)
!2912 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2913 = !DISubroutineType(types: !2914)
!2914 = !{null}
!2915 = !DILocation(line: 28, column: 1, scope: !2911)
!2916 = !{i64 2154340242, i64 2154340262, i64 2154340325}
!2917 = !DILocation(line: 29, column: 1, scope: !2911)
!2918 = !{i64 2154340657, i64 2154340677, i64 2154340740}
!2919 = !DILocation(line: 30, column: 1, scope: !2911)
!2920 = !{i64 2154341076, i64 2154341096, i64 2154341159}
!2921 = !DILocation(line: 31, column: 1, scope: !2911)
!2922 = !{i64 2154341495, i64 2154341515, i64 2154341578}
!2923 = !DILocation(line: 33, column: 1, scope: !2911)
!2924 = !{i64 2154341787, i64 2154341807, i64 2154341870}
!2925 = !DILocation(line: 35, column: 1, scope: !2911)
!2926 = !{i64 2154342112, i64 2154342132, i64 2154342195}
!2927 = !DILocation(line: 50, column: 1, scope: !2911)
!2928 = !{i64 2154342539, i64 2154342559, i64 2154342622}
!2929 = !DILocation(line: 54, column: 1, scope: !2911)
!2930 = !{i64 2154342978, i64 2154342998, i64 2154343061}
!2931 = !DILocation(line: 61, column: 1, scope: !2911)
!2932 = !{i64 2154343295, i64 2154343315, i64 2154343378}
!2933 = !DILocation(line: 63, column: 1, scope: !2911)
!2934 = !{i64 2154343675, i64 2154343695, i64 2154343758}
!2935 = !DILocation(line: 64, column: 1, scope: !2911)
!2936 = !{i64 2154344197, i64 2154344217, i64 2154344280}
!2937 = !DILocation(line: 65, column: 1, scope: !2911)
!2938 = !{i64 2154344695, i64 2154344715, i64 2154344778}
!2939 = !DILocation(line: 66, column: 1, scope: !2911)
!2940 = !{i64 2154345177, i64 2154345197, i64 2154345260}
!2941 = !DILocation(line: 67, column: 1, scope: !2911)
!2942 = !{i64 2154345684, i64 2154345704, i64 2154345767}
!2943 = !DILocation(line: 68, column: 1, scope: !2911)
!2944 = !{i64 2154346172, i64 2154346192, i64 2154346255}
!2945 = !DILocation(line: 70, column: 1, scope: !2911)
!2946 = !{i64 2154346640, i64 2154346660, i64 2154346723}
!2947 = !DILocation(line: 71, column: 1, scope: !2911)
!2948 = !{i64 2154347082, i64 2154347102, i64 2154347165}
!2949 = !DILocation(line: 72, column: 1, scope: !2911)
!2950 = !{i64 2154347540, i64 2154347560, i64 2154347623}
!2951 = !DILocation(line: 79, column: 1, scope: !2911)
!2952 = !{i64 2154347994, i64 2154348014, i64 2154348077}
!2953 = !DILocation(line: 80, column: 1, scope: !2911)
!2954 = !{i64 2154348505, i64 2154348525, i64 2154348588}
!2955 = !DILocation(line: 82, column: 1, scope: !2911)
!2956 = !{i64 2154353057, i64 2154353077, i64 2154353140}
!2957 = !DILocation(line: 97, column: 1, scope: !2911)
!2958 = !{i64 2154353394, i64 2154353414, i64 2154353477}
!2959 = !DILocation(line: 99, column: 1, scope: !2911)
!2960 = !{i64 2154353612, i64 2154353632, i64 2154353695}
!2961 = !DILocation(line: 102, column: 1, scope: !2911)
!2962 = !{i64 2154353869, i64 2154353889, i64 2154353952}
!2963 = !DILocation(line: 105, column: 1, scope: !2911)
!2964 = !{i64 2154354109, i64 2154354129, i64 2154354192}
!2965 = !DILocation(line: 115, column: 1, scope: !2911)
!2966 = !{i64 2154354448, i64 2154354468, i64 2154354531}
!2967 = !DILocation(line: 118, column: 1, scope: !2911)
!2968 = !{i64 2154354792, i64 2154354812, i64 2154354875}
!2969 = !DILocation(line: 32, column: 1, scope: !2970)
!2970 = !DILexicalBlockFile(scope: !2911, file: !2971, discriminator: 0)
!2971 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2972 = !{i64 2154355148, i64 2154355168, i64 2154355231}
!2973 = !DILocation(line: 33, column: 1, scope: !2970)
!2974 = !{i64 2154355660, i64 2154355680, i64 2154355743}
!2975 = !DILocation(line: 53, column: 1, scope: !2970)
!2976 = !{i64 2154356168, i64 2154356188, i64 2154356251}
!2977 = !DILocation(line: 54, column: 1, scope: !2970)
!2978 = !{i64 2154356586, i64 2154356606, i64 2154356669}
!2979 = !DILocation(line: 55, column: 1, scope: !2970)
!2980 = !{i64 2154357004, i64 2154357024, i64 2154357087}
!2981 = !DILocation(line: 56, column: 1, scope: !2970)
!2982 = !{i64 2154357422, i64 2154357442, i64 2154357505}
!2983 = !DILocation(line: 57, column: 1, scope: !2970)
!2984 = !{i64 2154357840, i64 2154357860, i64 2154357923}
!2985 = !DILocation(line: 58, column: 1, scope: !2970)
!2986 = !{i64 2154358258, i64 2154358278, i64 2154358341}
!2987 = !DILocation(line: 59, column: 1, scope: !2970)
!2988 = !{i64 2154358676, i64 2154358696, i64 2154358759}
!2989 = !DILocation(line: 60, column: 1, scope: !2970)
!2990 = !{i64 2154359100, i64 2154359120, i64 2154359183}
!2991 = !DILocation(line: 61, column: 1, scope: !2970)
!2992 = !{i64 2154359417, i64 2154359437, i64 2154359500}
!2993 = !DILocation(line: 70, column: 1, scope: !2970)
!2994 = !{i64 2154359646, i64 2154359666, i64 2154359729}
!2995 = !DILocation(line: 72, column: 1, scope: !2970)
!2996 = !{i64 2154359978, i64 2154359998, i64 2154360061}
!2997 = !DILocation(line: 73, column: 1, scope: !2970)
!2998 = !{i64 2154360428, i64 2154360448, i64 2154360511}
!2999 = !DILocation(line: 74, column: 1, scope: !2970)
!3000 = !{i64 2154360878, i64 2154360898, i64 2154360961}
!3001 = !DILocation(line: 75, column: 1, scope: !2970)
!3002 = !{i64 2154361328, i64 2154361348, i64 2154361411}
!3003 = !DILocation(line: 76, column: 1, scope: !2970)
!3004 = !{i64 2154361778, i64 2154361798, i64 2154361861}
!3005 = !DILocation(line: 77, column: 1, scope: !2970)
!3006 = !{i64 2154362228, i64 2154362248, i64 2154362311}
!3007 = !DILocation(line: 78, column: 1, scope: !2970)
!3008 = !{i64 2154366739, i64 2154366759, i64 2154366822}
!3009 = !DILocation(line: 79, column: 1, scope: !2970)
!3010 = !{i64 2154367189, i64 2154367209, i64 2154367272}
!3011 = !DILocation(line: 80, column: 1, scope: !2970)
!3012 = !{i64 2154367642, i64 2154367662, i64 2154367725}
!3013 = !DILocation(line: 84, column: 1, scope: !2970)
!3014 = !{i64 2154367974, i64 2154367994, i64 2154368057}
!3015 = !DILocation(line: 91, column: 1, scope: !2970)
!3016 = !{i64 2154368371, i64 2154368391, i64 2154368454}
!3017 = !DILocation(line: 93, column: 1, scope: !2970)
!3018 = !{i64 2154368738, i64 2154368758, i64 2154368821}
!3019 = !DILocation(line: 106, column: 1, scope: !2970)
!3020 = !{i64 2154369008, i64 2154369028, i64 2154369091}
!3021 = !DILocation(line: 11, column: 1, scope: !3022)
!3022 = !DILexicalBlockFile(scope: !2911, file: !3023, discriminator: 0)
!3023 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3024 = distinct !DISubprogram(name: "main", scope: !2322, file: !2322, line: 54, type: !2913, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2154, retainedNodes: !3025)
!3025 = !{!3026, !3027, !3029}
!3026 = !DILocalVariable(name: "ret", scope: !3024, file: !2322, line: 56, type: !103)
!3027 = !DILocalVariable(name: "i", scope: !3028, file: !2322, line: 58, type: !200)
!3028 = distinct !DILexicalBlock(scope: !3024, file: !2322, line: 58, column: 2)
!3029 = !DILocalVariable(name: "i", scope: !3030, file: !2322, line: 66, type: !200)
!3030 = distinct !DILexicalBlock(scope: !3031, file: !2322, line: 66, column: 3)
!3031 = distinct !DILexicalBlock(scope: !3024, file: !2322, line: 65, column: 12)
!3032 = !DILocation(line: 72, column: 3, scope: !3031)
!3033 = !DILocation(line: 65, column: 2, scope: !3024)
!3034 = distinct !{!3034, !3033, !3035}
!3035 = !DILocation(line: 73, column: 2, scope: !3024)
!3036 = distinct !DISubprogram(name: "k_msleep", scope: !307, file: !307, line: 439, type: !3037, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2154, retainedNodes: !3039)
!3037 = !DISubroutineType(types: !3038)
!3038 = !{!566, !566}
!3039 = !{!3040}
!3040 = !DILocalVariable(name: "ms", arg: 1, scope: !3036, file: !307, line: 439, type: !566)
!3041 = !DILocation(line: 0, scope: !3036)
!3042 = !DILocation(line: 441, column: 9, scope: !3036)
!3043 = !DILocation(line: 441, column: 2, scope: !3036)
!3044 = distinct !DISubprogram(name: "k_sleep", scope: !3045, file: !3045, line: 91, type: !3046, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2154, retainedNodes: !3052)
!3045 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!3046 = !DISubroutineType(types: !3047)
!3047 = !{!566, !3048}
!3048 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1359, line: 67, baseType: !3049)
!3049 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1359, line: 65, size: 64, elements: !3050)
!3050 = !{!3051}
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3049, file: !1359, line: 66, baseType: !1358, size: 64)
!3052 = !{!3053}
!3053 = !DILocalVariable(name: "timeout", arg: 1, scope: !3044, file: !3045, line: 91, type: !3048)
!3054 = !DILocation(line: 0, scope: !3044)
!3055 = !DILocation(line: 99, column: 2, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3044, file: !3045, line: 99, column: 2)
!3057 = !{i64 2154292632}
!3058 = !DILocation(line: 100, column: 9, scope: !3044)
!3059 = !DILocation(line: 100, column: 2, scope: !3044)
!3060 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3061)
!3061 = !{!3062}
!3062 = !DILocalVariable(name: "c", arg: 1, scope: !3060, file: !105, line: 45, type: !103)
!3063 = !DILocation(line: 0, scope: !3060)
!3064 = !DILocation(line: 50, column: 2, scope: !3060)
!3065 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !3066, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3068)
!3066 = !DISubroutineType(types: !3067)
!3067 = !{null, !106}
!3068 = !{!3069}
!3069 = !DILocalVariable(name: "fn", arg: 1, scope: !3065, file: !105, line: 63, type: !106)
!3070 = !DILocation(line: 0, scope: !3065)
!3071 = !DILocation(line: 65, column: 12, scope: !3065)
!3072 = !DILocation(line: 66, column: 1, scope: !3065)
!3073 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !3074, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !322)
!3074 = !DISubroutineType(types: !3075)
!3075 = !{!102}
!3076 = !DILocation(line: 78, column: 9, scope: !3073)
!3077 = !DILocation(line: 78, column: 2, scope: !3073)
!3078 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !3079, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3088)
!3079 = !DISubroutineType(types: !3080)
!3080 = !{null, !144, !3081}
!3081 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3082, line: 99, baseType: !3083)
!3082 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3083 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3082, line: 40, baseType: !3084)
!3084 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !3085)
!3085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3086)
!3086 = !{!3087}
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3085, file: !105, line: 79, baseType: !102, size: 32)
!3088 = !{!3089, !3090, !3091}
!3089 = !DILocalVariable(name: "fmt", arg: 1, scope: !3078, file: !105, line: 113, type: !144)
!3090 = !DILocalVariable(name: "ap", arg: 2, scope: !3078, file: !105, line: 113, type: !3081)
!3091 = !DILocalVariable(name: "ctx", scope: !3092, file: !105, line: 121, type: !3094)
!3092 = distinct !DILexicalBlock(scope: !3093, file: !105, line: 120, column: 27)
!3093 = distinct !DILexicalBlock(scope: !3078, file: !105, line: 120, column: 6)
!3094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !3095)
!3095 = !{!3096, !3097}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3094, file: !105, line: 85, baseType: !32, size: 32)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3094, file: !105, line: 86, baseType: !3098, offset: 32)
!3098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, elements: !2325)
!3099 = !DILocation(line: 0, scope: !3078)
!3100 = !DILocation(line: 148, column: 3, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3093, file: !105, line: 138, column: 9)
!3102 = !DILocation(line: 155, column: 1, scope: !3078)
!3103 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !3104, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3106)
!3104 = !DISubroutineType(types: !3105)
!3105 = !{!103, !103, !102}
!3106 = !{!3107, !3108}
!3107 = !DILocalVariable(name: "c", arg: 1, scope: !3103, file: !105, line: 107, type: !103)
!3108 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3103, file: !105, line: 107, type: !102)
!3109 = !DILocation(line: 0, scope: !3103)
!3110 = !DILocation(line: 110, column: 9, scope: !3103)
!3111 = !DILocation(line: 110, column: 2, scope: !3103)
!3112 = distinct !DISubprogram(name: "cbvprintf", scope: !3113, file: !3113, line: 739, type: !3114, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3120)
!3113 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3114 = !DISubroutineType(types: !3115)
!3115 = !{!103, !3116, !102, !144, !3081}
!3116 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3113, line: 297, baseType: !3117)
!3117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3118, size: 32)
!3118 = !DISubroutineType(types: !3119)
!3119 = !{!103, null}
!3120 = !{!3121, !3122, !3123, !3124}
!3121 = !DILocalVariable(name: "out", arg: 1, scope: !3112, file: !3113, line: 739, type: !3116)
!3122 = !DILocalVariable(name: "ctx", arg: 2, scope: !3112, file: !3113, line: 739, type: !102)
!3123 = !DILocalVariable(name: "format", arg: 3, scope: !3112, file: !3113, line: 739, type: !144)
!3124 = !DILocalVariable(name: "ap", arg: 4, scope: !3112, file: !3113, line: 739, type: !3081)
!3125 = !DILocation(line: 0, scope: !3112)
!3126 = !DILocation(line: 741, column: 9, scope: !3112)
!3127 = !DILocation(line: 741, column: 2, scope: !3112)
!3128 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !3129, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3131)
!3129 = !DISubroutineType(types: !3130)
!3130 = !{null, !957, !200}
!3131 = !{!3132, !3133, !3134}
!3132 = !DILocalVariable(name: "c", arg: 1, scope: !3128, file: !105, line: 157, type: !957)
!3133 = !DILocalVariable(name: "n", arg: 2, scope: !3128, file: !105, line: 157, type: !200)
!3134 = !DILocalVariable(name: "i", scope: !3128, file: !105, line: 159, type: !200)
!3135 = !DILocation(line: 0, scope: !3128)
!3136 = !DILocation(line: 164, column: 16, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3138, file: !105, line: 164, column: 2)
!3138 = distinct !DILexicalBlock(scope: !3128, file: !105, line: 164, column: 2)
!3139 = !DILocation(line: 164, column: 2, scope: !3138)
!3140 = !DILocation(line: 165, column: 3, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3137, file: !105, line: 164, column: 26)
!3142 = !DILocation(line: 165, column: 13, scope: !3141)
!3143 = !DILocation(line: 164, column: 22, scope: !3137)
!3144 = distinct !{!3144, !3139, !3145}
!3145 = !DILocation(line: 166, column: 2, scope: !3138)
!3146 = !DILocation(line: 171, column: 1, scope: !3128)
!3147 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !3148, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3150)
!3148 = !DISubroutineType(types: !3149)
!3149 = !{null, !144, null}
!3150 = !{!3151, !3152}
!3151 = !DILocalVariable(name: "fmt", arg: 1, scope: !3147, file: !105, line: 203, type: !144)
!3152 = !DILocalVariable(name: "ap", scope: !3147, file: !105, line: 205, type: !3081)
!3153 = !DILocation(line: 0, scope: !3147)
!3154 = !DILocation(line: 205, column: 2, scope: !3147)
!3155 = !DILocation(line: 205, column: 10, scope: !3147)
!3156 = !DILocation(line: 207, column: 2, scope: !3147)
!3157 = !DILocation(line: 209, column: 2, scope: !3147)
!3158 = !DILocation(line: 211, column: 2, scope: !3147)
!3159 = !DILocation(line: 212, column: 1, scope: !3147)
!3160 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !3161, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3163)
!3161 = !DISubroutineType(types: !3162)
!3162 = !{!103, !957, !200, !144, null}
!3163 = !{!3164, !3165, !3166, !3167, !3168}
!3164 = !DILocalVariable(name: "str", arg: 1, scope: !3160, file: !105, line: 239, type: !957)
!3165 = !DILocalVariable(name: "size", arg: 2, scope: !3160, file: !105, line: 239, type: !200)
!3166 = !DILocalVariable(name: "fmt", arg: 3, scope: !3160, file: !105, line: 239, type: !144)
!3167 = !DILocalVariable(name: "ap", scope: !3160, file: !105, line: 241, type: !3081)
!3168 = !DILocalVariable(name: "ret", scope: !3160, file: !105, line: 242, type: !103)
!3169 = !DILocation(line: 0, scope: !3160)
!3170 = !DILocation(line: 241, column: 2, scope: !3160)
!3171 = !DILocation(line: 241, column: 10, scope: !3160)
!3172 = !DILocation(line: 244, column: 2, scope: !3160)
!3173 = !DILocation(line: 245, column: 8, scope: !3160)
!3174 = !DILocation(line: 246, column: 2, scope: !3160)
!3175 = !DILocation(line: 249, column: 1, scope: !3160)
!3176 = !DILocation(line: 248, column: 2, scope: !3160)
!3177 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !3178, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3180)
!3178 = !DISubroutineType(types: !3179)
!3179 = !{!103, !957, !200, !144, !3081}
!3180 = !{!3181, !3182, !3183, !3184, !3185}
!3181 = !DILocalVariable(name: "str", arg: 1, scope: !3177, file: !105, line: 251, type: !957)
!3182 = !DILocalVariable(name: "size", arg: 2, scope: !3177, file: !105, line: 251, type: !200)
!3183 = !DILocalVariable(name: "fmt", arg: 3, scope: !3177, file: !105, line: 251, type: !144)
!3184 = !DILocalVariable(name: "ap", arg: 4, scope: !3177, file: !105, line: 251, type: !3081)
!3185 = !DILocalVariable(name: "ctx", scope: !3177, file: !105, line: 253, type: !3186)
!3186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !3187)
!3187 = !{!3188, !3189, !3190}
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3186, file: !105, line: 218, baseType: !957, size: 32)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3186, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3186, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!3191 = !DILocation(line: 0, scope: !3177)
!3192 = !DILocation(line: 253, column: 2, scope: !3177)
!3193 = !DILocation(line: 253, column: 21, scope: !3177)
!3194 = !DILocation(line: 253, column: 27, scope: !3177)
!3195 = !DILocation(line: 255, column: 2, scope: !3177)
!3196 = !DILocation(line: 257, column: 10, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3177, file: !105, line: 257, column: 6)
!3198 = !DILocation(line: 257, column: 22, scope: !3197)
!3199 = !DILocation(line: 257, column: 16, scope: !3197)
!3200 = !DILocation(line: 257, column: 6, scope: !3177)
!3201 = !DILocation(line: 258, column: 3, scope: !3202)
!3202 = distinct !DILexicalBlock(scope: !3197, file: !105, line: 257, column: 27)
!3203 = !DILocation(line: 258, column: 18, scope: !3202)
!3204 = !DILocation(line: 259, column: 2, scope: !3202)
!3205 = !DILocation(line: 262, column: 1, scope: !3177)
!3206 = !DILocation(line: 261, column: 2, scope: !3177)
!3207 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !3208, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3211)
!3208 = !DISubroutineType(types: !3209)
!3209 = !{!103, !103, !3210}
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3186, size: 32)
!3211 = !{!3212, !3213}
!3212 = !DILocalVariable(name: "c", arg: 1, scope: !3207, file: !105, line: 223, type: !103)
!3213 = !DILocalVariable(name: "ctx", arg: 2, scope: !3207, file: !105, line: 223, type: !3210)
!3214 = !DILocation(line: 0, scope: !3207)
!3215 = !DILocation(line: 225, column: 11, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3207, file: !105, line: 225, column: 6)
!3217 = !DILocation(line: 225, column: 15, scope: !3216)
!3218 = !DILocation(line: 0, scope: !3216)
!3219 = !DILocation(line: 225, column: 23, scope: !3216)
!3220 = !DILocation(line: 225, column: 45, scope: !3216)
!3221 = !DILocation(line: 225, column: 37, scope: !3216)
!3222 = !DILocation(line: 225, column: 6, scope: !3207)
!3223 = !DILocation(line: 226, column: 8, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3216, file: !105, line: 225, column: 50)
!3225 = !DILocation(line: 226, column: 13, scope: !3224)
!3226 = !DILocation(line: 227, column: 3, scope: !3224)
!3227 = !DILocation(line: 230, column: 29, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3207, file: !105, line: 230, column: 6)
!3229 = !DILocation(line: 230, column: 17, scope: !3228)
!3230 = !DILocation(line: 230, column: 6, scope: !3207)
!3231 = !DILocation(line: 231, column: 22, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3228, file: !105, line: 230, column: 34)
!3233 = !DILocation(line: 231, column: 3, scope: !3232)
!3234 = !DILocation(line: 231, column: 26, scope: !3232)
!3235 = !DILocation(line: 232, column: 2, scope: !3232)
!3236 = !DILocation(line: 233, column: 28, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3228, file: !105, line: 232, column: 9)
!3238 = !DILocation(line: 233, column: 22, scope: !3237)
!3239 = !DILocation(line: 233, column: 3, scope: !3237)
!3240 = !DILocation(line: 233, column: 26, scope: !3237)
!3241 = !DILocation(line: 237, column: 1, scope: !3207)
!3242 = distinct !DISubprogram(name: "z_thread_entry", scope: !3243, file: !3243, line: 30, type: !3244, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !3251)
!3243 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3244 = !DISubroutineType(types: !3245)
!3245 = !{null, !3246, !102, !102, !102}
!3246 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3247, line: 46, baseType: !3248)
!3247 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3249, size: 32)
!3249 = !DISubroutineType(types: !3250)
!3250 = !{null, !102, !102, !102}
!3251 = !{!3252, !3253, !3254, !3255}
!3252 = !DILocalVariable(name: "entry", arg: 1, scope: !3242, file: !3243, line: 30, type: !3246)
!3253 = !DILocalVariable(name: "p1", arg: 2, scope: !3242, file: !3243, line: 31, type: !102)
!3254 = !DILocalVariable(name: "p2", arg: 3, scope: !3242, file: !3243, line: 31, type: !102)
!3255 = !DILocalVariable(name: "p3", arg: 4, scope: !3242, file: !3243, line: 31, type: !102)
!3256 = !DILocation(line: 0, scope: !3242)
!3257 = !DILocation(line: 36, column: 2, scope: !3242)
!3258 = !DILocation(line: 38, column: 17, scope: !3242)
!3259 = !DILocation(line: 38, column: 2, scope: !3242)
!3260 = !DILocation(line: 45, column: 2, scope: !3242)
!3261 = distinct !DISubprogram(name: "k_current_get", scope: !307, file: !307, line: 530, type: !3262, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !322)
!3262 = !DISubroutineType(types: !3263)
!3263 = !{!3264}
!3264 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !3265)
!3265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3266, size: 32)
!3266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !3267)
!3267 = !{!3268, !3326, !3338, !3339, !3340, !3341, !3347, !3360}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3266, file: !211, line: 247, baseType: !3269, size: 384)
!3269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !3270)
!3270 = !{!3271, !3295, !3302, !3303, !3304, !3313, !3314, !3315}
!3271 = !DIDerivedType(tag: DW_TAG_member, scope: !3269, file: !211, line: 60, baseType: !3272, size: 64)
!3272 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3269, file: !211, line: 60, size: 64, elements: !3273)
!3273 = !{!3274, !3289}
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3272, file: !211, line: 61, baseType: !3275, size: 64)
!3275 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !3276)
!3276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !3277)
!3277 = !{!3278, !3284}
!3278 = !DIDerivedType(tag: DW_TAG_member, scope: !3276, file: !221, line: 38, baseType: !3279, size: 32)
!3279 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3276, file: !221, line: 38, size: 32, elements: !3280)
!3280 = !{!3281, !3283}
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3279, file: !221, line: 39, baseType: !3282, size: 32)
!3282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3276, size: 32)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3279, file: !221, line: 40, baseType: !3282, size: 32)
!3284 = !DIDerivedType(tag: DW_TAG_member, scope: !3276, file: !221, line: 42, baseType: !3285, size: 32, offset: 32)
!3285 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3276, file: !221, line: 42, size: 32, elements: !3286)
!3286 = !{!3287, !3288}
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3285, file: !221, line: 43, baseType: !3282, size: 32)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3285, file: !221, line: 44, baseType: !3282, size: 32)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3272, file: !211, line: 62, baseType: !3290, size: 64)
!3290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !3291)
!3291 = !{!3292}
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3290, file: !237, line: 50, baseType: !3293, size: 64)
!3293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3294, size: 64, elements: !242)
!3294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3290, size: 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3269, file: !211, line: 68, baseType: !3296, size: 32, offset: 64)
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3297, size: 32)
!3297 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !3298)
!3298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !3299)
!3299 = !{!3300}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3298, file: !247, line: 232, baseType: !3301, size: 64)
!3301 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !3276)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3269, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3269, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!3304 = !DIDerivedType(tag: DW_TAG_member, scope: !3269, file: !211, line: 90, baseType: !3305, size: 16, offset: 112)
!3305 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3269, file: !211, line: 90, size: 16, elements: !3306)
!3306 = !{!3307, !3312}
!3307 = !DIDerivedType(tag: DW_TAG_member, scope: !3305, file: !211, line: 91, baseType: !3308, size: 16)
!3308 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3305, file: !211, line: 91, size: 16, elements: !3309)
!3309 = !{!3310, !3311}
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3308, file: !211, line: 96, baseType: !261, size: 8)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3308, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3305, file: !211, line: 100, baseType: !265, size: 16)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3269, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3269, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3269, file: !211, line: 131, baseType: !3316, size: 192, offset: 192)
!3316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !3317)
!3317 = !{!3318, !3319, !3325}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3316, file: !247, line: 245, baseType: !3275, size: 64)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3316, file: !247, line: 246, baseType: !3320, size: 32, offset: 64)
!3320 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !3321)
!3321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3322, size: 32)
!3322 = !DISubroutineType(types: !3323)
!3323 = !{null, !3324}
!3324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3316, size: 32)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3316, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3266, file: !211, line: 250, baseType: !3327, size: 288, offset: 384)
!3327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !3328)
!3328 = !{!3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337}
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3327, file: !284, line: 26, baseType: !121, size: 32)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3327, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3327, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3327, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3327, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3327, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3327, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3327, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3327, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3266, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3266, file: !211, line: 256, baseType: !3297, size: 64, offset: 704)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3266, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3266, file: !211, line: 300, baseType: !3342, size: 96, offset: 800)
!3342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !3343)
!3343 = !{!3344, !3345, !3346}
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3342, file: !211, line: 153, baseType: !22, size: 32)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3342, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3342, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3266, file: !211, line: 325, baseType: !3348, size: 32, offset: 896)
!3348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3349, size: 32)
!3349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !3350)
!3350 = !{!3351, !3357, !3358}
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3349, file: !307, line: 5074, baseType: !3352, size: 96)
!3352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !3353)
!3353 = !{!3354, !3355, !3356}
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3352, file: !311, line: 57, baseType: !314, size: 32)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3352, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3352, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3349, file: !307, line: 5075, baseType: !3297, size: 64, offset: 96)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3349, file: !307, line: 5076, baseType: !3359, offset: 160)
!3359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3266, file: !211, line: 343, baseType: !3361, size: 64, offset: 928)
!3361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !3362)
!3362 = !{!3363, !3364}
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3361, file: !284, line: 63, baseType: !121, size: 32)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3361, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!3365 = !DILocation(line: 535, column: 9, scope: !3261)
!3366 = !DILocation(line: 535, column: 2, scope: !3261)
!3367 = distinct !DISubprogram(name: "k_thread_abort", scope: !3045, file: !3045, line: 188, type: !3368, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !3370)
!3368 = !DISubroutineType(types: !3369)
!3369 = !{null, !3264}
!3370 = !{!3371}
!3371 = !DILocalVariable(name: "thread", arg: 1, scope: !3367, file: !3045, line: 188, type: !3264)
!3372 = !DILocation(line: 0, scope: !3367)
!3373 = !DILocation(line: 197, column: 2, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3367, file: !3045, line: 197, column: 2)
!3375 = !{i64 2154061201}
!3376 = !DILocation(line: 198, column: 2, scope: !3367)
!3377 = !DILocation(line: 199, column: 1, scope: !3367)
!3378 = distinct !DISubprogram(name: "z_current_get", scope: !3045, file: !3045, line: 173, type: !3262, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !322)
!3379 = !DILocation(line: 180, column: 2, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3378, file: !3045, line: 180, column: 2)
!3381 = !{i64 2154061133}
!3382 = !DILocation(line: 181, column: 9, scope: !3378)
!3383 = !DILocation(line: 181, column: 2, scope: !3378)
!3384 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2337, file: !2337, line: 1338, type: !3385, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !3393)
!3385 = !DISubroutineType(types: !3386)
!3386 = !{!103, !3116, !102, !144, !3387, !121}
!3387 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3082, line: 99, baseType: !3388)
!3388 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3082, line: 40, baseType: !3389)
!3389 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2337, baseType: !3390)
!3390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3391)
!3391 = !{!3392}
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3390, file: !2337, baseType: !102, size: 32)
!3393 = !{!3394, !3395, !3396, !3397, !3398, !3399, !3403, !3404, !3405, !3407, !3412, !3456, !3459, !3462, !3463, !3464, !3465, !3466, !3467, !3468, !3471, !3472, !3473, !3477, !3480, !3482, !3485, !3486, !3487, !3492, !3498, !3501, !3505, !3508, !3513, !3517, !3522, !3526, !3529, !3532, !3535, !3537, !3542, !3546, !3549, !3551, !3554}
!3394 = !DILocalVariable(name: "out", arg: 1, scope: !3384, file: !2337, line: 1338, type: !3116)
!3395 = !DILocalVariable(name: "ctx", arg: 2, scope: !3384, file: !2337, line: 1338, type: !102)
!3396 = !DILocalVariable(name: "fp", arg: 3, scope: !3384, file: !2337, line: 1338, type: !144)
!3397 = !DILocalVariable(name: "ap", arg: 4, scope: !3384, file: !2337, line: 1339, type: !3387)
!3398 = !DILocalVariable(name: "flags", arg: 5, scope: !3384, file: !2337, line: 1339, type: !121)
!3399 = !DILocalVariable(name: "buf", scope: !3384, file: !2337, line: 1341, type: !3400)
!3400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 200, elements: !3401)
!3401 = !{!3402}
!3402 = !DISubrange(count: 25)
!3403 = !DILocalVariable(name: "count", scope: !3384, file: !2337, line: 1342, type: !200)
!3404 = !DILocalVariable(name: "sint", scope: !3384, file: !2337, line: 1343, type: !2356)
!3405 = !DILocalVariable(name: "tagged_ap", scope: !3384, file: !2337, line: 1345, type: !3406)
!3406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!3407 = !DILocalVariable(name: "rc", scope: !3408, file: !2337, line: 1377, type: !103)
!3408 = distinct !DILexicalBlock(scope: !3409, file: !2337, line: 1377, column: 4)
!3409 = distinct !DILexicalBlock(scope: !3410, file: !2337, line: 1376, column: 19)
!3410 = distinct !DILexicalBlock(scope: !3411, file: !2337, line: 1376, column: 7)
!3411 = distinct !DILexicalBlock(scope: !3384, file: !2337, line: 1375, column: 19)
!3412 = !DILocalVariable(name: "state", scope: !3411, file: !2337, line: 1395, type: !3413)
!3413 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3384, file: !2337, line: 1392, size: 192, elements: !3414)
!3414 = !{!3415, !3424}
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3413, file: !2337, line: 1393, baseType: !3416, size: 64)
!3416 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2337, line: 166, size: 64, elements: !3417)
!3417 = !{!3418, !3419, !3420, !3421, !3423}
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !3416, file: !2337, line: 168, baseType: !2356, size: 64)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !3416, file: !2337, line: 171, baseType: !2359, size: 64)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !3416, file: !2337, line: 174, baseType: !2318, size: 64)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !3416, file: !2337, line: 177, baseType: !3422, size: 64)
!3422 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3416, file: !2337, line: 180, baseType: !102, size: 32)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !3413, file: !2337, line: 1394, baseType: !3425, size: 96, offset: 64)
!3425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2337, line: 189, size: 96, elements: !3426)
!3426 = !{!3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3451}
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !3425, file: !2337, line: 191, baseType: !157, size: 1, flags: DIFlagBitField, extraData: i64 0)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !3425, file: !2337, line: 194, baseType: !157, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !3425, file: !2337, line: 197, baseType: !157, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !3425, file: !2337, line: 200, baseType: !157, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !3425, file: !2337, line: 203, baseType: !157, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !3425, file: !2337, line: 206, baseType: !157, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !3425, file: !2337, line: 209, baseType: !157, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !3425, file: !2337, line: 212, baseType: !157, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !3425, file: !2337, line: 219, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !3425, file: !2337, line: 222, baseType: !157, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !3425, file: !2337, line: 229, baseType: !157, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !3425, file: !2337, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !3425, file: !2337, line: 238, baseType: !157, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !3425, file: !2337, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !3425, file: !2337, line: 244, baseType: !157, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !3425, file: !2337, line: 247, baseType: !157, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !3425, file: !2337, line: 252, baseType: !157, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !3425, file: !2337, line: 257, baseType: !157, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !3425, file: !2337, line: 260, baseType: !155, size: 8, offset: 24)
!3446 = !DIDerivedType(tag: DW_TAG_member, scope: !3425, file: !2337, line: 262, baseType: !3447, size: 32, offset: 32)
!3447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3425, file: !2337, line: 262, size: 32, elements: !3448)
!3448 = !{!3449, !3450}
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !3447, file: !2337, line: 267, baseType: !103, size: 32)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !3447, file: !2337, line: 289, baseType: !103, size: 32)
!3451 = !DIDerivedType(tag: DW_TAG_member, scope: !3425, file: !2337, line: 292, baseType: !3452, size: 32, offset: 64)
!3452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3425, file: !2337, line: 292, size: 32, elements: !3453)
!3453 = !{!3454, !3455}
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !3452, file: !2337, line: 297, baseType: !103, size: 32)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !3452, file: !2337, line: 306, baseType: !103, size: 32)
!3456 = !DILocalVariable(name: "conv", scope: !3411, file: !2337, line: 1400, type: !3457)
!3457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3458)
!3458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3425, size: 32)
!3459 = !DILocalVariable(name: "value", scope: !3411, file: !2337, line: 1401, type: !3460)
!3460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3461)
!3461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3416, size: 32)
!3462 = !DILocalVariable(name: "sp", scope: !3411, file: !2337, line: 1402, type: !144)
!3463 = !DILocalVariable(name: "width", scope: !3411, file: !2337, line: 1403, type: !103)
!3464 = !DILocalVariable(name: "precision", scope: !3411, file: !2337, line: 1404, type: !103)
!3465 = !DILocalVariable(name: "bps", scope: !3411, file: !2337, line: 1405, type: !144)
!3466 = !DILocalVariable(name: "bpe", scope: !3411, file: !2337, line: 1406, type: !144)
!3467 = !DILocalVariable(name: "sign", scope: !3411, file: !2337, line: 1407, type: !146)
!3468 = !DILocalVariable(name: "arg", scope: !3469, file: !2337, line: 1432, type: !103)
!3469 = distinct !DILexicalBlock(scope: !3470, file: !2337, line: 1431, column: 24)
!3470 = distinct !DILexicalBlock(scope: !3411, file: !2337, line: 1431, column: 7)
!3471 = !DILocalVariable(name: "specifier_cat", scope: !3411, file: !2337, line: 1468, type: !2336)
!3472 = !DILocalVariable(name: "length_mod", scope: !3411, file: !2337, line: 1470, type: !2344)
!3473 = !DILocalVariable(name: "rc", scope: !3474, file: !2337, line: 1575, type: !103)
!3474 = distinct !DILexicalBlock(scope: !3475, file: !2337, line: 1575, column: 4)
!3475 = distinct !DILexicalBlock(scope: !3476, file: !2337, line: 1574, column: 43)
!3476 = distinct !DILexicalBlock(scope: !3411, file: !2337, line: 1574, column: 7)
!3477 = !DILocalVariable(name: "rc", scope: !3478, file: !2337, line: 1584, type: !103)
!3478 = distinct !DILexicalBlock(scope: !3479, file: !2337, line: 1584, column: 4)
!3479 = distinct !DILexicalBlock(scope: !3411, file: !2337, line: 1582, column: 28)
!3480 = !DILocalVariable(name: "len", scope: !3481, file: !2337, line: 1589, type: !200)
!3481 = distinct !DILexicalBlock(scope: !3479, file: !2337, line: 1586, column: 13)
!3482 = !DILocalVariable(name: "len", scope: !3483, file: !2337, line: 1641, type: !200)
!3483 = distinct !DILexicalBlock(scope: !3484, file: !2337, line: 1640, column: 24)
!3484 = distinct !DILexicalBlock(scope: !3479, file: !2337, line: 1640, column: 8)
!3485 = !DILocalVariable(name: "nj_len", scope: !3411, file: !2337, line: 1722, type: !200)
!3486 = !DILocalVariable(name: "pad_len", scope: !3411, file: !2337, line: 1723, type: !103)
!3487 = !DILocalVariable(name: "pad", scope: !3488, file: !2337, line: 1751, type: !146)
!3488 = distinct !DILexicalBlock(scope: !3489, file: !2337, line: 1750, column: 26)
!3489 = distinct !DILexicalBlock(scope: !3490, file: !2337, line: 1750, column: 8)
!3490 = distinct !DILexicalBlock(scope: !3491, file: !2337, line: 1747, column: 18)
!3491 = distinct !DILexicalBlock(scope: !3411, file: !2337, line: 1747, column: 7)
!3492 = !DILocalVariable(name: "rc", scope: !3493, file: !2337, line: 1758, type: !103)
!3493 = distinct !DILexicalBlock(scope: !3494, file: !2337, line: 1758, column: 7)
!3494 = distinct !DILexicalBlock(scope: !3495, file: !2337, line: 1757, column: 21)
!3495 = distinct !DILexicalBlock(scope: !3496, file: !2337, line: 1757, column: 10)
!3496 = distinct !DILexicalBlock(scope: !3497, file: !2337, line: 1756, column: 26)
!3497 = distinct !DILexicalBlock(scope: !3488, file: !2337, line: 1756, column: 9)
!3498 = !DILocalVariable(name: "rc", scope: !3499, file: !2337, line: 1765, type: !103)
!3499 = distinct !DILexicalBlock(scope: !3500, file: !2337, line: 1765, column: 6)
!3500 = distinct !DILexicalBlock(scope: !3488, file: !2337, line: 1764, column: 25)
!3501 = !DILocalVariable(name: "rc", scope: !3502, file: !2337, line: 1774, type: !103)
!3502 = distinct !DILexicalBlock(scope: !3503, file: !2337, line: 1774, column: 4)
!3503 = distinct !DILexicalBlock(scope: !3504, file: !2337, line: 1773, column: 18)
!3504 = distinct !DILexicalBlock(scope: !3411, file: !2337, line: 1773, column: 7)
!3505 = !DILocalVariable(name: "cp", scope: !3506, file: !2337, line: 1778, type: !144)
!3506 = distinct !DILexicalBlock(scope: !3507, file: !2337, line: 1777, column: 63)
!3507 = distinct !DILexicalBlock(scope: !3411, file: !2337, line: 1777, column: 7)
!3508 = !DILocalVariable(name: "rc", scope: !3509, file: !2337, line: 1783, type: !103)
!3509 = distinct !DILexicalBlock(scope: !3510, file: !2337, line: 1783, column: 6)
!3510 = distinct !DILexicalBlock(scope: !3511, file: !2337, line: 1782, column: 24)
!3511 = distinct !DILexicalBlock(scope: !3512, file: !2337, line: 1780, column: 27)
!3512 = distinct !DILexicalBlock(scope: !3506, file: !2337, line: 1780, column: 8)
!3513 = !DILocalVariable(name: "rc", scope: !3514, file: !2337, line: 1787, type: !103)
!3514 = distinct !DILexicalBlock(scope: !3515, file: !2337, line: 1787, column: 6)
!3515 = distinct !DILexicalBlock(scope: !3516, file: !2337, line: 1786, column: 41)
!3516 = distinct !DILexicalBlock(scope: !3512, file: !2337, line: 1785, column: 11)
!3517 = !DILocalVariable(name: "rc", scope: !3518, file: !2337, line: 1793, type: !103)
!3518 = distinct !DILexicalBlock(scope: !3519, file: !2337, line: 1793, column: 7)
!3519 = distinct !DILexicalBlock(scope: !3520, file: !2337, line: 1792, column: 28)
!3520 = distinct !DILexicalBlock(scope: !3521, file: !2337, line: 1791, column: 28)
!3521 = distinct !DILexicalBlock(scope: !3516, file: !2337, line: 1791, column: 9)
!3522 = !DILocalVariable(name: "rc", scope: !3523, file: !2337, line: 1798, type: !103)
!3523 = distinct !DILexicalBlock(scope: !3524, file: !2337, line: 1798, column: 6)
!3524 = distinct !DILexicalBlock(scope: !3525, file: !2337, line: 1797, column: 21)
!3525 = distinct !DILexicalBlock(scope: !3516, file: !2337, line: 1797, column: 9)
!3526 = !DILocalVariable(name: "rc", scope: !3527, file: !2337, line: 1803, type: !103)
!3527 = distinct !DILexicalBlock(scope: !3528, file: !2337, line: 1803, column: 7)
!3528 = distinct !DILexicalBlock(scope: !3524, file: !2337, line: 1802, column: 28)
!3529 = !DILocalVariable(name: "rc", scope: !3530, file: !2337, line: 1807, type: !103)
!3530 = distinct !DILexicalBlock(scope: !3531, file: !2337, line: 1807, column: 6)
!3531 = distinct !DILexicalBlock(scope: !3516, file: !2337, line: 1806, column: 41)
!3532 = !DILocalVariable(name: "rc", scope: !3533, file: !2337, line: 1813, type: !103)
!3533 = distinct !DILexicalBlock(scope: !3534, file: !2337, line: 1813, column: 5)
!3534 = distinct !DILexicalBlock(scope: !3506, file: !2337, line: 1812, column: 26)
!3535 = !DILocalVariable(name: "rc", scope: !3536, file: !2337, line: 1816, type: !103)
!3536 = distinct !DILexicalBlock(scope: !3506, file: !2337, line: 1816, column: 4)
!3537 = !DILocalVariable(name: "rc", scope: !3538, file: !2337, line: 1819, type: !103)
!3538 = distinct !DILexicalBlock(scope: !3539, file: !2337, line: 1819, column: 5)
!3539 = distinct !DILexicalBlock(scope: !3540, file: !2337, line: 1818, column: 44)
!3540 = distinct !DILexicalBlock(scope: !3541, file: !2337, line: 1818, column: 8)
!3541 = distinct !DILexicalBlock(scope: !3507, file: !2337, line: 1817, column: 10)
!3542 = !DILocalVariable(name: "rc", scope: !3543, file: !2337, line: 1823, type: !103)
!3543 = distinct !DILexicalBlock(scope: !3544, file: !2337, line: 1823, column: 5)
!3544 = distinct !DILexicalBlock(scope: !3545, file: !2337, line: 1822, column: 26)
!3545 = distinct !DILexicalBlock(scope: !3541, file: !2337, line: 1822, column: 8)
!3546 = !DILocalVariable(name: "rc", scope: !3547, file: !2337, line: 1828, type: !103)
!3547 = distinct !DILexicalBlock(scope: !3548, file: !2337, line: 1828, column: 5)
!3548 = distinct !DILexicalBlock(scope: !3541, file: !2337, line: 1827, column: 26)
!3549 = !DILocalVariable(name: "rc", scope: !3550, file: !2337, line: 1831, type: !103)
!3550 = distinct !DILexicalBlock(scope: !3541, file: !2337, line: 1831, column: 4)
!3551 = !DILocalVariable(name: "rc", scope: !3552, file: !2337, line: 1836, type: !103)
!3552 = distinct !DILexicalBlock(scope: !3553, file: !2337, line: 1836, column: 4)
!3553 = distinct !DILexicalBlock(scope: !3411, file: !2337, line: 1835, column: 21)
!3554 = !DILabel(scope: !3479, name: "prec_int_pad0", file: !2337, line: 1634)
!3555 = !DILocation(line: 0, scope: !3384)
!3556 = !DILocation(line: 1341, column: 2, scope: !3384)
!3557 = !DILocation(line: 1341, column: 7, scope: !3384)
!3558 = !DILocation(line: 1375, column: 2, scope: !3384)
!3559 = !DILocation(line: 1342, column: 9, scope: !3384)
!3560 = !DILocation(line: 1375, column: 9, scope: !3384)
!3561 = !DILocation(line: 1377, column: 4, scope: !3408)
!3562 = !DILocation(line: 0, scope: !3408)
!3563 = !DILocation(line: 1377, column: 4, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3408, file: !2337, line: 1377, column: 4)
!3565 = distinct !{!3565, !3558, !3566}
!3566 = !DILocation(line: 1839, column: 2, scope: !3384)
!3567 = !DILocation(line: 1392, column: 3, scope: !3411)
!3568 = !DILocation(line: 1395, column: 5, scope: !3411)
!3569 = !DILocation(line: 0, scope: !3411)
!3570 = !DILocation(line: 1406, column: 3, scope: !3411)
!3571 = !DILocation(line: 1406, column: 15, scope: !3411)
!3572 = !DILocation(line: 1407, column: 3, scope: !3411)
!3573 = !DILocation(line: 1407, column: 8, scope: !3411)
!3574 = !DILocation(line: 1409, column: 8, scope: !3411)
!3575 = !DILocation(line: 1414, column: 13, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3411, file: !2337, line: 1414, column: 7)
!3577 = !DILocation(line: 1414, column: 7, scope: !3411)
!3578 = !DILocation(line: 1415, column: 12, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3576, file: !2337, line: 1414, column: 25)
!3580 = !DILocation(line: 1417, column: 14, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3579, file: !2337, line: 1417, column: 8)
!3582 = !DILocation(line: 1417, column: 8, scope: !3579)
!3583 = !DILocation(line: 1418, column: 21, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3581, file: !2337, line: 1417, column: 19)
!3585 = !DILocation(line: 1419, column: 13, scope: !3584)
!3586 = !DILocation(line: 1420, column: 4, scope: !3584)
!3587 = !DILocation(line: 1421, column: 20, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3576, file: !2337, line: 1421, column: 14)
!3589 = !DILocation(line: 1421, column: 14, scope: !3576)
!3590 = !DILocation(line: 1431, column: 13, scope: !3470)
!3591 = !DILocation(line: 1431, column: 7, scope: !3411)
!3592 = !DILocation(line: 1432, column: 14, scope: !3469)
!3593 = !DILocation(line: 0, scope: !3469)
!3594 = !DILocation(line: 1434, column: 12, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3469, file: !2337, line: 1434, column: 8)
!3596 = !DILocation(line: 1434, column: 8, scope: !3469)
!3597 = !DILocation(line: 1435, column: 24, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3595, file: !2337, line: 1434, column: 17)
!3599 = !DILocation(line: 1436, column: 4, scope: !3598)
!3600 = !DILocation(line: 1439, column: 20, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3470, file: !2337, line: 1439, column: 14)
!3602 = !DILocation(line: 1439, column: 14, scope: !3470)
!3603 = !DILocation(line: 1453, column: 17, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3411, file: !2337, line: 1452, column: 7)
!3605 = !DILocation(line: 1448, column: 20, scope: !3411)
!3606 = !DILocation(line: 1449, column: 22, scope: !3411)
!3607 = !DILocation(line: 1454, column: 7, scope: !3604)
!3608 = !DILocation(line: 1469, column: 37, scope: !3411)
!3609 = !DILocation(line: 1471, column: 34, scope: !3411)
!3610 = !DILocation(line: 1478, column: 7, scope: !3411)
!3611 = !DILocation(line: 1479, column: 4, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3613, file: !2337, line: 1478, column: 40)
!3613 = distinct !DILexicalBlock(scope: !3411, file: !2337, line: 1478, column: 7)
!3614 = !DILocation(line: 1484, column: 19, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3612, file: !2337, line: 1479, column: 24)
!3616 = !DILocation(line: 1484, column: 17, scope: !3615)
!3617 = !DILocation(line: 1485, column: 5, scope: !3615)
!3618 = !DILocation(line: 1492, column: 20, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3620, file: !2337, line: 1491, column: 12)
!3620 = distinct !DILexicalBlock(scope: !3615, file: !2337, line: 1487, column: 9)
!3621 = !DILocation(line: 1492, column: 18, scope: !3619)
!3622 = !DILocation(line: 1494, column: 5, scope: !3615)
!3623 = !DILocation(line: 1497, column: 23, scope: !3615)
!3624 = !DILocation(line: 1496, column: 17, scope: !3615)
!3625 = !DILocation(line: 1498, column: 5, scope: !3615)
!3626 = !DILocation(line: 1501, column: 23, scope: !3615)
!3627 = !DILocation(line: 1500, column: 17, scope: !3615)
!3628 = !DILocation(line: 1502, column: 5, scope: !3615)
!3629 = !DILocation(line: 1513, column: 23, scope: !3615)
!3630 = !DILocation(line: 1513, column: 6, scope: !3615)
!3631 = !DILocation(line: 1512, column: 17, scope: !3615)
!3632 = !DILocation(line: 1514, column: 5, scope: !3615)
!3633 = !DILocation(line: 0, scope: !3615)
!3634 = !DILocation(line: 1516, column: 8, scope: !3612)
!3635 = !DILocation(line: 1517, column: 19, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3637, file: !2337, line: 1516, column: 33)
!3637 = distinct !DILexicalBlock(scope: !3612, file: !2337, line: 1516, column: 8)
!3638 = !DILocation(line: 1517, column: 17, scope: !3636)
!3639 = !DILocation(line: 1518, column: 4, scope: !3636)
!3640 = !DILocation(line: 1519, column: 19, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3642, file: !2337, line: 1518, column: 39)
!3642 = distinct !DILexicalBlock(scope: !3637, file: !2337, line: 1518, column: 15)
!3643 = !DILocation(line: 1519, column: 17, scope: !3641)
!3644 = !DILocation(line: 1520, column: 4, scope: !3641)
!3645 = !DILocation(line: 1522, column: 4, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3647, file: !2337, line: 1521, column: 47)
!3647 = distinct !DILexicalBlock(scope: !3613, file: !2337, line: 1521, column: 14)
!3648 = !DILocation(line: 1527, column: 19, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3646, file: !2337, line: 1522, column: 24)
!3650 = !DILocation(line: 1527, column: 17, scope: !3649)
!3651 = !DILocation(line: 1528, column: 5, scope: !3649)
!3652 = !DILocation(line: 0, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3649, file: !2337, line: 1530, column: 9)
!3654 = !DILocation(line: 1540, column: 23, scope: !3649)
!3655 = !DILocation(line: 1539, column: 17, scope: !3649)
!3656 = !DILocation(line: 1542, column: 5, scope: !3649)
!3657 = !DILocation(line: 1545, column: 23, scope: !3649)
!3658 = !DILocation(line: 1544, column: 17, scope: !3649)
!3659 = !DILocation(line: 1547, column: 5, scope: !3649)
!3660 = !DILocation(line: 1551, column: 23, scope: !3649)
!3661 = !DILocation(line: 1551, column: 6, scope: !3649)
!3662 = !DILocation(line: 1550, column: 17, scope: !3649)
!3663 = !DILocation(line: 1552, column: 5, scope: !3649)
!3664 = !DILocation(line: 0, scope: !3649)
!3665 = !DILocation(line: 1554, column: 8, scope: !3646)
!3666 = !DILocation(line: 1555, column: 19, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3668, file: !2337, line: 1554, column: 33)
!3668 = distinct !DILexicalBlock(scope: !3646, file: !2337, line: 1554, column: 8)
!3669 = !DILocation(line: 1555, column: 17, scope: !3667)
!3670 = !DILocation(line: 1556, column: 4, scope: !3667)
!3671 = !DILocation(line: 1557, column: 19, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3673, file: !2337, line: 1556, column: 39)
!3673 = distinct !DILexicalBlock(scope: !3668, file: !2337, line: 1556, column: 15)
!3674 = !DILocation(line: 1557, column: 17, scope: !3672)
!3675 = !DILocation(line: 1558, column: 4, scope: !3672)
!3676 = !DILocation(line: 0, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3678, file: !2337, line: 1560, column: 8)
!3678 = distinct !DILexicalBlock(scope: !3679, file: !2337, line: 1559, column: 45)
!3679 = distinct !DILexicalBlock(scope: !3647, file: !2337, line: 1559, column: 14)
!3680 = !DILocation(line: 1566, column: 17, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3682, file: !2337, line: 1565, column: 46)
!3682 = distinct !DILexicalBlock(scope: !3679, file: !2337, line: 1565, column: 14)
!3683 = !DILocation(line: 1566, column: 15, scope: !3681)
!3684 = !DILocation(line: 1567, column: 3, scope: !3681)
!3685 = !DILocation(line: 1574, column: 21, scope: !3476)
!3686 = !DILocation(line: 1575, column: 4, scope: !3474)
!3687 = !DILocation(line: 0, scope: !3474)
!3688 = !DILocation(line: 1575, column: 4, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !3474, file: !2337, line: 1575, column: 4)
!3690 = !DILocation(line: 1582, column: 17, scope: !3411)
!3691 = !DILocation(line: 1582, column: 3, scope: !3411)
!3692 = !DILocation(line: 1584, column: 4, scope: !3478)
!3693 = !DILocation(line: 0, scope: !3478)
!3694 = !DILocation(line: 1584, column: 4, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3478, file: !2337, line: 1584, column: 4)
!3696 = !DILocation(line: 1587, column: 31, scope: !3481)
!3697 = !DILocation(line: 1591, column: 18, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3481, file: !2337, line: 1591, column: 8)
!3699 = !DILocation(line: 1591, column: 8, scope: !3481)
!3700 = !DILocation(line: 1592, column: 11, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3698, file: !2337, line: 1591, column: 24)
!3702 = !DILocation(line: 0, scope: !3481)
!3703 = !DILocation(line: 1593, column: 4, scope: !3701)
!3704 = !DILocation(line: 1594, column: 11, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3698, file: !2337, line: 1593, column: 11)
!3706 = !DILocation(line: 1604, column: 51, scope: !3479)
!3707 = !DILocation(line: 1604, column: 13, scope: !3479)
!3708 = !DILocation(line: 1604, column: 11, scope: !3479)
!3709 = !DILocation(line: 1605, column: 8, scope: !3479)
!3710 = !DILocation(line: 1606, column: 4, scope: !3479)
!3711 = !DILocation(line: 1609, column: 14, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3479, file: !2337, line: 1609, column: 8)
!3713 = !DILocation(line: 1609, column: 8, scope: !3479)
!3714 = !DILocation(line: 1610, column: 10, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3712, file: !2337, line: 1609, column: 25)
!3716 = !DILocation(line: 1611, column: 4, scope: !3715)
!3717 = !DILocation(line: 1611, column: 21, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3712, file: !2337, line: 1611, column: 15)
!3719 = !DILocation(line: 1611, column: 15, scope: !3712)
!3720 = !DILocation(line: 1612, column: 10, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3718, file: !2337, line: 1611, column: 33)
!3722 = !DILocation(line: 1613, column: 4, scope: !3721)
!3723 = !DILocation(line: 1619, column: 18, scope: !3479)
!3724 = !DILocation(line: 1620, column: 13, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3479, file: !2337, line: 1620, column: 8)
!3726 = !DILocation(line: 1620, column: 8, scope: !3479)
!3727 = !DILocation(line: 1621, column: 10, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3725, file: !2337, line: 1620, column: 18)
!3729 = !DILocation(line: 1622, column: 36, scope: !3728)
!3730 = !DILocation(line: 1622, column: 17, scope: !3728)
!3731 = !DILocation(line: 1623, column: 4, scope: !3728)
!3732 = !DILocation(line: 1632, column: 29, scope: !3479)
!3733 = !DILocation(line: 1632, column: 10, scope: !3479)
!3734 = !DILocation(line: 1632, column: 4, scope: !3479)
!3735 = !DILocation(line: 0, scope: !3479)
!3736 = !DILocation(line: 1634, column: 3, scope: !3479)
!3737 = !DILocation(line: 1640, column: 18, scope: !3484)
!3738 = !DILocation(line: 1640, column: 8, scope: !3479)
!3739 = !DILocation(line: 1641, column: 22, scope: !3483)
!3740 = !DILocation(line: 0, scope: !3483)
!3741 = !DILocation(line: 1646, column: 21, scope: !3483)
!3742 = !DILocation(line: 1649, column: 13, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3483, file: !2337, line: 1649, column: 9)
!3744 = !DILocation(line: 1649, column: 9, scope: !3483)
!3745 = !DILocation(line: 1650, column: 35, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3743, file: !2337, line: 1649, column: 34)
!3747 = !DILocation(line: 1650, column: 23, scope: !3746)
!3748 = !DILocation(line: 1651, column: 5, scope: !3746)
!3749 = !DILocation(line: 1660, column: 15, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3479, file: !2337, line: 1660, column: 8)
!3751 = !DILocation(line: 1660, column: 19, scope: !3750)
!3752 = !DILocation(line: 1660, column: 8, scope: !3479)
!3753 = !DILocation(line: 1661, column: 23, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3750, file: !2337, line: 1660, column: 28)
!3755 = !DILocation(line: 1661, column: 11, scope: !3754)
!3756 = !DILocation(line: 1665, column: 22, scope: !3754)
!3757 = !DILocation(line: 1666, column: 21, scope: !3754)
!3758 = !DILocation(line: 1668, column: 5, scope: !3754)
!3759 = !DILocation(line: 1672, column: 8, scope: !3479)
!3760 = !DILocation(line: 1674, column: 4, scope: !3479)
!3761 = !DILocation(line: 1677, column: 30, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3763, file: !2337, line: 1676, column: 49)
!3763 = distinct !DILexicalBlock(scope: !3479, file: !2337, line: 1676, column: 8)
!3764 = !DILocation(line: 1677, column: 5, scope: !3762)
!3765 = !DILocation(line: 1680, column: 4, scope: !3479)
!3766 = !DILocation(line: 1684, column: 31, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3768, file: !2337, line: 1683, column: 48)
!3768 = distinct !DILexicalBlock(scope: !3479, file: !2337, line: 1683, column: 8)
!3769 = !DILocation(line: 1684, column: 11, scope: !3767)
!3770 = !DILocation(line: 1722, column: 20, scope: !3411)
!3771 = !DILocation(line: 1725, column: 7, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3411, file: !2337, line: 1725, column: 7)
!3773 = !DILocation(line: 1687, column: 4, scope: !3479)
!3774 = !DILocation(line: 0, scope: !3698)
!3775 = !DILocation(line: 1597, column: 14, scope: !3481)
!3776 = !DILocation(line: 1597, column: 8, scope: !3481)
!3777 = !DILocation(line: 1699, column: 11, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3411, file: !2337, line: 1699, column: 7)
!3779 = !DILocation(line: 1699, column: 7, scope: !3411)
!3780 = !DILocation(line: 1725, column: 12, scope: !3772)
!3781 = !DILocation(line: 1729, column: 13, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3411, file: !2337, line: 1729, column: 7)
!3783 = !DILocation(line: 1747, column: 13, scope: !3491)
!3784 = !DILocation(line: 1747, column: 7, scope: !3411)
!3785 = !DILocation(line: 1722, column: 24, scope: !3411)
!3786 = !DILocation(line: 1725, column: 7, scope: !3411)
!3787 = !DILocation(line: 1729, column: 7, scope: !3411)
!3788 = !DILocation(line: 1736, column: 13, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3411, file: !2337, line: 1736, column: 7)
!3790 = !DILocation(line: 1735, column: 19, scope: !3411)
!3791 = !DILocation(line: 1736, column: 7, scope: !3411)
!3792 = !DILocation(line: 1748, column: 10, scope: !3490)
!3793 = !DILocation(line: 1750, column: 15, scope: !3489)
!3794 = !DILocation(line: 1750, column: 8, scope: !3490)
!3795 = !DILocation(line: 0, scope: !3488)
!3796 = !DILocation(line: 1756, column: 15, scope: !3497)
!3797 = !DILocation(line: 1756, column: 9, scope: !3488)
!3798 = !DILocation(line: 1757, column: 10, scope: !3495)
!3799 = !DILocation(line: 1758, column: 7, scope: !3493)
!3800 = !DILocation(line: 0, scope: !3493)
!3801 = !DILocation(line: 1758, column: 7, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3493, file: !2337, line: 1758, column: 7)
!3803 = !DILocation(line: 1759, column: 12, scope: !3494)
!3804 = !DILocation(line: 1760, column: 6, scope: !3494)
!3805 = !DILocation(line: 1764, column: 5, scope: !3488)
!3806 = !DILocation(line: 0, scope: !3490)
!3807 = !DILocation(line: 1764, column: 20, scope: !3488)
!3808 = !DILocation(line: 1764, column: 17, scope: !3488)
!3809 = !DILocation(line: 1765, column: 6, scope: !3499)
!3810 = !DILocation(line: 0, scope: !3499)
!3811 = !DILocation(line: 1765, column: 6, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3499, file: !2337, line: 1765, column: 6)
!3813 = distinct !{!3813, !3805, !3814}
!3814 = !DILocation(line: 1766, column: 5, scope: !3488)
!3815 = !DILocation(line: 1773, column: 7, scope: !3504)
!3816 = !DILocation(line: 1773, column: 12, scope: !3504)
!3817 = !DILocation(line: 1773, column: 7, scope: !3411)
!3818 = !DILocation(line: 1774, column: 4, scope: !3502)
!3819 = !DILocation(line: 0, scope: !3502)
!3820 = !DILocation(line: 1774, column: 4, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3502, file: !2337, line: 1774, column: 4)
!3822 = !DILocation(line: 1777, column: 55, scope: !3507)
!3823 = !DILocation(line: 1777, column: 7, scope: !3411)
!3824 = !DILocation(line: 0, scope: !3506)
!3825 = !DILocation(line: 1780, column: 14, scope: !3512)
!3826 = !DILocation(line: 1780, column: 8, scope: !3506)
!3827 = !DILocation(line: 1782, column: 12, scope: !3511)
!3828 = !DILocation(line: 1782, column: 16, scope: !3511)
!3829 = !DILocation(line: 1782, column: 5, scope: !3511)
!3830 = !DILocation(line: 1783, column: 6, scope: !3509)
!3831 = !DILocation(line: 0, scope: !3509)
!3832 = !DILocation(line: 1783, column: 6, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3509, file: !2337, line: 1783, column: 6)
!3834 = distinct !{!3834, !3829, !3835}
!3835 = !DILocation(line: 1784, column: 5, scope: !3511)
!3836 = !DILocation(line: 1786, column: 35, scope: !3516)
!3837 = !DILocation(line: 1786, column: 20, scope: !3516)
!3838 = !DILocation(line: 1786, column: 12, scope: !3516)
!3839 = !DILocation(line: 1786, column: 5, scope: !3516)
!3840 = !DILocation(line: 1787, column: 6, scope: !3514)
!3841 = !DILocation(line: 0, scope: !3514)
!3842 = !DILocation(line: 1787, column: 6, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3514, file: !2337, line: 1787, column: 6)
!3844 = distinct !{!3844, !3839, !3845}
!3845 = !DILocation(line: 1788, column: 5, scope: !3516)
!3846 = !DILocation(line: 1790, column: 21, scope: !3516)
!3847 = !DILocation(line: 1791, column: 16, scope: !3521)
!3848 = !DILocation(line: 1791, column: 9, scope: !3516)
!3849 = !DILocation(line: 1792, column: 6, scope: !3520)
!3850 = !DILocation(line: 0, scope: !3516)
!3851 = !DILocation(line: 1792, column: 23, scope: !3520)
!3852 = !DILocation(line: 1792, column: 20, scope: !3520)
!3853 = !DILocation(line: 1793, column: 7, scope: !3518)
!3854 = !DILocation(line: 0, scope: !3518)
!3855 = !DILocation(line: 1793, column: 7, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3518, file: !2337, line: 1793, column: 7)
!3857 = distinct !{!3857, !3849, !3858}
!3858 = !DILocation(line: 1794, column: 6, scope: !3520)
!3859 = !DILocation(line: 1797, column: 9, scope: !3525)
!3860 = !DILocation(line: 1797, column: 13, scope: !3525)
!3861 = !DILocation(line: 1797, column: 9, scope: !3516)
!3862 = !DILocation(line: 1806, column: 5, scope: !3516)
!3863 = !DILocation(line: 1798, column: 6, scope: !3523)
!3864 = !DILocation(line: 0, scope: !3523)
!3865 = !DILocation(line: 1798, column: 6, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3523, file: !2337, line: 1798, column: 6)
!3867 = !DILocation(line: 1802, column: 23, scope: !3524)
!3868 = !DILocation(line: 1802, column: 6, scope: !3524)
!3869 = !DILocation(line: 1802, column: 20, scope: !3524)
!3870 = !DILocation(line: 1803, column: 7, scope: !3527)
!3871 = !DILocation(line: 0, scope: !3527)
!3872 = !DILocation(line: 1803, column: 7, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3527, file: !2337, line: 1803, column: 7)
!3874 = distinct !{!3874, !3868, !3875}
!3875 = !DILocation(line: 1804, column: 6, scope: !3524)
!3876 = !DILocation(line: 1806, column: 35, scope: !3516)
!3877 = !DILocation(line: 1806, column: 20, scope: !3516)
!3878 = !DILocation(line: 1806, column: 12, scope: !3516)
!3879 = !DILocation(line: 1807, column: 6, scope: !3530)
!3880 = !DILocation(line: 0, scope: !3530)
!3881 = !DILocation(line: 1807, column: 6, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3530, file: !2337, line: 1807, column: 6)
!3883 = distinct !{!3883, !3862, !3884}
!3884 = !DILocation(line: 1808, column: 5, scope: !3516)
!3885 = !DILocation(line: 1811, column: 20, scope: !3506)
!3886 = !DILocation(line: 1812, column: 4, scope: !3506)
!3887 = !DILocation(line: 1812, column: 21, scope: !3506)
!3888 = !DILocation(line: 1812, column: 18, scope: !3506)
!3889 = !DILocation(line: 1813, column: 5, scope: !3533)
!3890 = !DILocation(line: 0, scope: !3533)
!3891 = !DILocation(line: 1813, column: 5, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3533, file: !2337, line: 1813, column: 5)
!3893 = distinct !{!3893, !3886, !3894}
!3894 = !DILocation(line: 1814, column: 4, scope: !3506)
!3895 = !DILocation(line: 1816, column: 4, scope: !3536)
!3896 = !DILocation(line: 0, scope: !3536)
!3897 = !DILocation(line: 1816, column: 4, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3536, file: !2337, line: 1816, column: 4)
!3899 = !DILocation(line: 1818, column: 8, scope: !3540)
!3900 = !DILocation(line: 1818, column: 27, scope: !3540)
!3901 = !DILocation(line: 1818, column: 25, scope: !3540)
!3902 = !DILocation(line: 1818, column: 8, scope: !3541)
!3903 = !DILocation(line: 1819, column: 5, scope: !3538)
!3904 = !DILocation(line: 0, scope: !3538)
!3905 = !DILocation(line: 1819, column: 5, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3538, file: !2337, line: 1819, column: 5)
!3907 = !DILocation(line: 1822, column: 14, scope: !3545)
!3908 = !DILocation(line: 1822, column: 8, scope: !3541)
!3909 = !DILocation(line: 1823, column: 5, scope: !3543)
!3910 = !DILocation(line: 0, scope: !3543)
!3911 = !DILocation(line: 1823, column: 5, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3543, file: !2337, line: 1823, column: 5)
!3913 = !DILocation(line: 1826, column: 20, scope: !3541)
!3914 = !DILocation(line: 1827, column: 4, scope: !3541)
!3915 = !DILocation(line: 0, scope: !3541)
!3916 = !DILocation(line: 1827, column: 21, scope: !3541)
!3917 = !DILocation(line: 1827, column: 18, scope: !3541)
!3918 = !DILocation(line: 1828, column: 5, scope: !3547)
!3919 = !DILocation(line: 0, scope: !3547)
!3920 = !DILocation(line: 1828, column: 5, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3547, file: !2337, line: 1828, column: 5)
!3922 = distinct !{!3922, !3914, !3923}
!3923 = !DILocation(line: 1829, column: 4, scope: !3541)
!3924 = !DILocation(line: 1831, column: 4, scope: !3550)
!3925 = !DILocation(line: 0, scope: !3550)
!3926 = !DILocation(line: 1831, column: 4, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3550, file: !2337, line: 1831, column: 4)
!3928 = !DILocation(line: 1835, column: 16, scope: !3411)
!3929 = !DILocation(line: 1835, column: 3, scope: !3411)
!3930 = !DILocation(line: 1836, column: 4, scope: !3552)
!3931 = !DILocation(line: 0, scope: !3552)
!3932 = !DILocation(line: 1836, column: 4, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3552, file: !2337, line: 1836, column: 4)
!3934 = !DILocation(line: 1837, column: 4, scope: !3553)
!3935 = distinct !{!3935, !3929, !3936}
!3936 = !DILocation(line: 1838, column: 3, scope: !3411)
!3937 = !DILocation(line: 1844, column: 1, scope: !3384)
!3938 = distinct !DISubprogram(name: "extract_conversion", scope: !2337, file: !2337, line: 642, type: !3939, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !3941)
!3939 = !DISubroutineType(types: !3940)
!3940 = !{!144, !3458, !144}
!3941 = !{!3942, !3943}
!3942 = !DILocalVariable(name: "conv", arg: 1, scope: !3938, file: !2337, line: 642, type: !3458)
!3943 = !DILocalVariable(name: "sp", arg: 2, scope: !3938, file: !2337, line: 643, type: !144)
!3944 = !DILocation(line: 0, scope: !3938)
!3945 = !DILocation(line: 645, column: 10, scope: !3938)
!3946 = !DILocation(line: 653, column: 2, scope: !3938)
!3947 = !DILocation(line: 654, column: 6, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3938, file: !2337, line: 654, column: 6)
!3949 = !DILocation(line: 654, column: 10, scope: !3948)
!3950 = !DILocation(line: 654, column: 6, scope: !3938)
!3951 = !DILocation(line: 655, column: 24, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3948, file: !2337, line: 654, column: 18)
!3953 = !DILocation(line: 655, column: 19, scope: !3952)
!3954 = !DILocation(line: 656, column: 3, scope: !3952)
!3955 = !DILocation(line: 659, column: 7, scope: !3938)
!3956 = !DILocation(line: 660, column: 7, scope: !3938)
!3957 = !DILocation(line: 661, column: 7, scope: !3938)
!3958 = !DILocation(line: 662, column: 7, scope: !3938)
!3959 = !DILocation(line: 663, column: 7, scope: !3938)
!3960 = !DILocation(line: 665, column: 2, scope: !3938)
!3961 = !DILocation(line: 666, column: 1, scope: !3938)
!3962 = distinct !DISubprogram(name: "outs", scope: !2337, file: !2337, line: 1319, type: !3963, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !3965)
!3963 = !DISubroutineType(types: !3964)
!3964 = !{!103, !3116, !102, !144, !144}
!3965 = !{!3966, !3967, !3968, !3969, !3970, !3971}
!3966 = !DILocalVariable(name: "out", arg: 1, scope: !3962, file: !2337, line: 1319, type: !3116)
!3967 = !DILocalVariable(name: "ctx", arg: 2, scope: !3962, file: !2337, line: 1320, type: !102)
!3968 = !DILocalVariable(name: "sp", arg: 3, scope: !3962, file: !2337, line: 1321, type: !144)
!3969 = !DILocalVariable(name: "ep", arg: 4, scope: !3962, file: !2337, line: 1322, type: !144)
!3970 = !DILocalVariable(name: "count", scope: !3962, file: !2337, line: 1324, type: !200)
!3971 = !DILocalVariable(name: "rc", scope: !3972, file: !2337, line: 1327, type: !103)
!3972 = distinct !DILexicalBlock(scope: !3962, file: !2337, line: 1326, column: 45)
!3973 = !DILocation(line: 0, scope: !3962)
!3974 = !DILocation(line: 1326, column: 2, scope: !3962)
!3975 = !DILocation(line: 1324, column: 9, scope: !3962)
!3976 = !DILocation(line: 1326, column: 13, scope: !3962)
!3977 = !DILocation(line: 1326, column: 19, scope: !3962)
!3978 = !DILocation(line: 1327, column: 21, scope: !3972)
!3979 = !DILocation(line: 1326, column: 36, scope: !3962)
!3980 = !DILocation(line: 1326, column: 39, scope: !3962)
!3981 = !DILocation(line: 1327, column: 24, scope: !3972)
!3982 = !DILocation(line: 1327, column: 16, scope: !3972)
!3983 = !DILocation(line: 1327, column: 12, scope: !3972)
!3984 = !DILocation(line: 0, scope: !3972)
!3985 = !DILocation(line: 1329, column: 10, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3972, file: !2337, line: 1329, column: 7)
!3987 = !DILocation(line: 1329, column: 7, scope: !3972)
!3988 = distinct !{!3988, !3974, !3989}
!3989 = !DILocation(line: 1333, column: 2, scope: !3962)
!3990 = !DILocation(line: 1336, column: 1, scope: !3962)
!3991 = distinct !DISubprogram(name: "encode_uint", scope: !2337, file: !2337, line: 788, type: !3992, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !3994)
!3992 = !DISubroutineType(types: !3993)
!3993 = !{!957, !2359, !3458, !957, !144}
!3994 = !{!3995, !3996, !3997, !3998, !3999, !4000, !4002, !4003}
!3995 = !DILocalVariable(name: "value", arg: 1, scope: !3991, file: !2337, line: 788, type: !2359)
!3996 = !DILocalVariable(name: "conv", arg: 2, scope: !3991, file: !2337, line: 789, type: !3458)
!3997 = !DILocalVariable(name: "bps", arg: 3, scope: !3991, file: !2337, line: 790, type: !957)
!3998 = !DILocalVariable(name: "bpe", arg: 4, scope: !3991, file: !2337, line: 791, type: !144)
!3999 = !DILocalVariable(name: "upcase", scope: !3991, file: !2337, line: 793, type: !157)
!4000 = !DILocalVariable(name: "radix", scope: !3991, file: !2337, line: 794, type: !4001)
!4001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4002 = !DILocalVariable(name: "bp", scope: !3991, file: !2337, line: 795, type: !957)
!4003 = !DILocalVariable(name: "lsv", scope: !4004, file: !2337, line: 798, type: !32)
!4004 = distinct !DILexicalBlock(scope: !3991, file: !2337, line: 797, column: 5)
!4005 = !DILocation(line: 0, scope: !3991)
!4006 = !DILocation(line: 793, column: 35, scope: !3991)
!4007 = !DILocation(line: 793, column: 24, scope: !3991)
!4008 = !DILocation(line: 793, column: 16, scope: !3991)
!4009 = !DILocation(line: 794, column: 29, scope: !3991)
!4010 = !DILocation(line: 795, column: 24, scope: !3991)
!4011 = !DILocation(line: 795, column: 17, scope: !3991)
!4012 = !DILocation(line: 797, column: 2, scope: !3991)
!4013 = !DILocation(line: 802, column: 9, scope: !4004)
!4014 = !DILocation(line: 798, column: 22, scope: !4004)
!4015 = !DILocation(line: 0, scope: !4004)
!4016 = !DILocation(line: 800, column: 16, scope: !4004)
!4017 = !DILocation(line: 800, column: 11, scope: !4004)
!4018 = !DILocation(line: 800, column: 4, scope: !4004)
!4019 = !DILocation(line: 800, column: 9, scope: !4004)
!4020 = !DILocation(line: 803, column: 18, scope: !3991)
!4021 = !DILocation(line: 803, column: 24, scope: !3991)
!4022 = !DILocation(line: 803, column: 2, scope: !4004)
!4023 = distinct !{!4023, !4012, !4024}
!4024 = !DILocation(line: 803, column: 37, scope: !3991)
!4025 = !DILocation(line: 808, column: 12, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !3991, file: !2337, line: 808, column: 6)
!4027 = !DILocation(line: 808, column: 6, scope: !3991)
!4028 = !DILocation(line: 809, column: 7, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !4026, file: !2337, line: 808, column: 23)
!4030 = !DILocation(line: 813, column: 3, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4032, file: !2337, line: 811, column: 27)
!4032 = distinct !DILexicalBlock(scope: !4033, file: !2337, line: 811, column: 14)
!4033 = distinct !DILexicalBlock(scope: !4029, file: !2337, line: 809, column: 7)
!4034 = !DILocation(line: 0, scope: !4033)
!4035 = !DILocation(line: 818, column: 2, scope: !3991)
!4036 = distinct !DISubprogram(name: "store_count", scope: !2337, file: !2337, line: 1280, type: !4037, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !4041)
!4037 = !DISubroutineType(types: !4038)
!4038 = !{null, !4039, !102, !103}
!4039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4040, size: 32)
!4040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3425)
!4041 = !{!4042, !4043, !4044}
!4042 = !DILocalVariable(name: "conv", arg: 1, scope: !4036, file: !2337, line: 1280, type: !4039)
!4043 = !DILocalVariable(name: "dp", arg: 2, scope: !4036, file: !2337, line: 1281, type: !102)
!4044 = !DILocalVariable(name: "count", arg: 3, scope: !4036, file: !2337, line: 1282, type: !103)
!4045 = !DILocation(line: 0, scope: !4036)
!4046 = !DILocation(line: 1284, column: 38, scope: !4036)
!4047 = !DILocation(line: 1284, column: 2, scope: !4036)
!4048 = !DILocation(line: 1286, column: 4, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4036, file: !2337, line: 1284, column: 50)
!4050 = !DILocation(line: 1286, column: 14, scope: !4049)
!4051 = !DILocation(line: 1287, column: 3, scope: !4049)
!4052 = !DILocation(line: 1289, column: 24, scope: !4049)
!4053 = !DILocation(line: 1289, column: 22, scope: !4049)
!4054 = !DILocation(line: 1290, column: 3, scope: !4049)
!4055 = !DILocation(line: 1292, column: 18, scope: !4049)
!4056 = !DILocation(line: 1292, column: 4, scope: !4049)
!4057 = !DILocation(line: 1292, column: 16, scope: !4049)
!4058 = !DILocation(line: 1293, column: 3, scope: !4049)
!4059 = !DILocation(line: 1295, column: 4, scope: !4049)
!4060 = !DILocation(line: 1295, column: 15, scope: !4049)
!4061 = !DILocation(line: 1296, column: 3, scope: !4049)
!4062 = !DILocation(line: 1298, column: 22, scope: !4049)
!4063 = !DILocation(line: 1298, column: 4, scope: !4049)
!4064 = !DILocation(line: 1298, column: 20, scope: !4049)
!4065 = !DILocation(line: 1299, column: 3, scope: !4049)
!4066 = !DILocation(line: 1301, column: 21, scope: !4049)
!4067 = !DILocation(line: 1301, column: 4, scope: !4049)
!4068 = !DILocation(line: 1301, column: 19, scope: !4049)
!4069 = !DILocation(line: 1302, column: 3, scope: !4049)
!4070 = !DILocation(line: 1304, column: 4, scope: !4049)
!4071 = !DILocation(line: 1304, column: 17, scope: !4049)
!4072 = !DILocation(line: 1305, column: 3, scope: !4049)
!4073 = !DILocation(line: 1307, column: 4, scope: !4049)
!4074 = !DILocation(line: 1307, column: 20, scope: !4049)
!4075 = !DILocation(line: 1308, column: 3, scope: !4049)
!4076 = !DILocation(line: 1316, column: 1, scope: !4036)
!4077 = distinct !DISubprogram(name: "encode_float", scope: !2337, file: !2337, line: 866, type: !4078, scopeLine: 872, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !4081)
!4078 = !DISubroutineType(types: !4079)
!4079 = !{!957, !2318, !3458, !103, !957, !957, !4080}
!4080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!4081 = !{!4082, !4083, !4084, !4085, !4086, !4087, !4088, !4093, !4094, !4095, !4096, !4097, !4098, !4099, !4100, !4101, !4102}
!4082 = !DILocalVariable(name: "value", arg: 1, scope: !4077, file: !2337, line: 866, type: !2318)
!4083 = !DILocalVariable(name: "conv", arg: 2, scope: !4077, file: !2337, line: 867, type: !3458)
!4084 = !DILocalVariable(name: "precision", arg: 3, scope: !4077, file: !2337, line: 868, type: !103)
!4085 = !DILocalVariable(name: "sign", arg: 4, scope: !4077, file: !2337, line: 869, type: !957)
!4086 = !DILocalVariable(name: "bps", arg: 5, scope: !4077, file: !2337, line: 870, type: !957)
!4087 = !DILocalVariable(name: "bpe", arg: 6, scope: !4077, file: !2337, line: 871, type: !4080)
!4088 = !DILocalVariable(name: "u", scope: !4077, file: !2337, line: 876, type: !4089)
!4089 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4077, file: !2337, line: 873, size: 64, elements: !4090)
!4090 = !{!4091, !4092}
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "u64", scope: !4089, file: !2337, line: 874, baseType: !1270, size: 64)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4089, file: !2337, line: 875, baseType: !2318, size: 64)
!4093 = !DILocalVariable(name: "prune_zero", scope: !4077, file: !2337, line: 879, type: !157)
!4094 = !DILocalVariable(name: "buf", scope: !4077, file: !2337, line: 880, type: !957)
!4095 = !DILocalVariable(name: "c", scope: !4077, file: !2337, line: 898, type: !146)
!4096 = !DILocalVariable(name: "expo", scope: !4077, file: !2337, line: 899, type: !103)
!4097 = !DILocalVariable(name: "fract", scope: !4077, file: !2337, line: 900, type: !1270)
!4098 = !DILocalVariable(name: "is_subnormal", scope: !4077, file: !2337, line: 901, type: !157)
!4099 = !DILocalVariable(name: "decexp", scope: !4077, file: !2337, line: 1083, type: !103)
!4100 = !DILocalVariable(name: "decimals", scope: !4077, file: !2337, line: 1145, type: !103)
!4101 = !DILocalVariable(name: "digit_count", scope: !4077, file: !2337, line: 1155, type: !103)
!4102 = !DILocalVariable(name: "round", scope: !4077, file: !2337, line: 1162, type: !1270)
!4103 = !DILocation(line: 0, scope: !4077)
!4104 = !DILocation(line: 876, column: 8, scope: !4077)
!4105 = !DILocation(line: 885, column: 26, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4077, file: !2337, line: 885, column: 6)
!4107 = !DILocation(line: 885, column: 6, scope: !4077)
!4108 = !DILocation(line: 887, column: 19, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4106, file: !2337, line: 887, column: 13)
!4110 = !DILocation(line: 887, column: 13, scope: !4106)
!4111 = !DILocation(line: 889, column: 19, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4109, file: !2337, line: 889, column: 13)
!4113 = !DILocation(line: 889, column: 13, scope: !4109)
!4114 = !DILocation(line: 0, scope: !4106)
!4115 = !DILocation(line: 898, column: 17, scope: !4077)
!4116 = !DILocation(line: 899, column: 20, scope: !4077)
!4117 = !DILocation(line: 899, column: 13, scope: !4077)
!4118 = !DILocation(line: 900, column: 2, scope: !4077)
!4119 = !DILocation(line: 900, column: 25, scope: !4077)
!4120 = !DILocation(line: 901, column: 28, scope: !4077)
!4121 = !DILocation(line: 901, column: 34, scope: !4077)
!4122 = !DILocation(line: 906, column: 11, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4077, file: !2337, line: 906, column: 6)
!4124 = !DILocation(line: 906, column: 6, scope: !4077)
!4125 = !DILocation(line: 907, column: 13, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4127, file: !2337, line: 907, column: 7)
!4127 = distinct !DILexicalBlock(scope: !4123, file: !2337, line: 906, column: 39)
!4128 = !DILocation(line: 0, scope: !4126)
!4129 = !DILocation(line: 907, column: 7, scope: !4127)
!4130 = !DILocation(line: 930, column: 9, scope: !4127)
!4131 = !DILocation(line: 930, column: 19, scope: !4127)
!4132 = !DILocation(line: 932, column: 8, scope: !4127)
!4133 = !DILocation(line: 933, column: 3, scope: !4127)
!4134 = !DILocation(line: 937, column: 8, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4077, file: !2337, line: 937, column: 6)
!4136 = !DILocation(line: 937, column: 6, scope: !4077)
!4137 = !DILocation(line: 1054, column: 8, scope: !4077)
!4138 = !DILocation(line: 1058, column: 7, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4077, file: !2337, line: 1058, column: 6)
!4140 = !DILocation(line: 1058, column: 12, scope: !4139)
!4141 = !DILocation(line: 1058, column: 21, scope: !4139)
!4142 = !DILocation(line: 1058, column: 6, scope: !4077)
!4143 = !DILocation(line: 1059, column: 7, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4139, file: !2337, line: 1058, column: 27)
!4145 = !DILocation(line: 1063, column: 19, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4147, file: !2337, line: 1059, column: 21)
!4147 = distinct !DILexicalBlock(scope: !4144, file: !2337, line: 1059, column: 7)
!4148 = !DILocation(line: 1063, column: 36, scope: !4146)
!4149 = !DILocation(line: 1064, column: 9, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4146, file: !2337, line: 1063, column: 42)
!4151 = !DILocation(line: 1063, column: 4, scope: !4146)
!4152 = distinct !{!4152, !4151, !4153}
!4153 = !DILocation(line: 1065, column: 4, scope: !4146)
!4154 = !DILocation(line: 1072, column: 9, scope: !4144)
!4155 = !DILocation(line: 899, column: 6, scope: !4077)
!4156 = !DILocation(line: 1071, column: 8, scope: !4144)
!4157 = !DILocation(line: 1085, column: 14, scope: !4077)
!4158 = !DILocation(line: 1085, column: 2, scope: !4077)
!4159 = !DILocation(line: 1090, column: 3, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4077, file: !2337, line: 1085, column: 20)
!4161 = !DILocation(line: 1101, column: 14, scope: !4077)
!4162 = !DILocation(line: 1101, column: 2, scope: !4077)
!4163 = !DILocation(line: 1091, column: 10, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4160, file: !2337, line: 1090, column: 6)
!4165 = !DILocation(line: 1092, column: 8, scope: !4164)
!4166 = !DILocation(line: 1093, column: 29, scope: !4160)
!4167 = !DILocation(line: 1093, column: 12, scope: !4160)
!4168 = !DILocation(line: 1093, column: 36, scope: !4160)
!4169 = !DILocation(line: 1093, column: 3, scope: !4164)
!4170 = distinct !{!4170, !4159, !4171}
!4171 = !DILocation(line: 1093, column: 56, scope: !4160)
!4172 = !DILocation(line: 1096, column: 9, scope: !4160)
!4173 = !DILocation(line: 1097, column: 7, scope: !4160)
!4174 = !DILocation(line: 1098, column: 9, scope: !4160)
!4175 = distinct !{!4175, !4158, !4176}
!4176 = !DILocation(line: 1099, column: 2, scope: !4077)
!4177 = !DILocation(line: 1110, column: 9, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4077, file: !2337, line: 1101, column: 19)
!4179 = !DILocation(line: 1114, column: 10, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4178, file: !2337, line: 1113, column: 6)
!4181 = distinct !{!4181, !4162, !4182}
!4182 = !DILocation(line: 1117, column: 2, scope: !4077)
!4183 = !DILocation(line: 1107, column: 9, scope: !4178)
!4184 = !DILocation(line: 1108, column: 3, scope: !4178)
!4185 = !DILocation(line: 1109, column: 7, scope: !4178)
!4186 = !DILocation(line: 1113, column: 3, scope: !4178)
!4187 = !DILocation(line: 0, scope: !4178)
!4188 = !DILocation(line: 1115, column: 8, scope: !4180)
!4189 = !DILocation(line: 1116, column: 12, scope: !4178)
!4190 = !DILocation(line: 1116, column: 3, scope: !4180)
!4191 = !DILocation(line: 1124, column: 8, scope: !4077)
!4192 = !DILocation(line: 1124, column: 15, scope: !4077)
!4193 = !DILocation(line: 1126, column: 17, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4077, file: !2337, line: 1126, column: 6)
!4195 = !DILocation(line: 1131, column: 14, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4197, file: !2337, line: 1131, column: 7)
!4197 = distinct !DILexicalBlock(scope: !4194, file: !2337, line: 1126, column: 32)
!4198 = !DILocation(line: 1131, column: 25, scope: !4196)
!4199 = !DILocation(line: 1132, column: 6, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4196, file: !2337, line: 1131, column: 48)
!4201 = !DILocation(line: 1133, column: 18, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4200, file: !2337, line: 1133, column: 8)
!4203 = !DILocation(line: 1133, column: 8, scope: !4200)
!4204 = !DILocation(line: 1138, column: 14, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4196, file: !2337, line: 1136, column: 10)
!4206 = !DILocation(line: 0, scope: !4196)
!4207 = !DILocation(line: 1140, column: 14, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4197, file: !2337, line: 1140, column: 7)
!4209 = !DILocation(line: 1140, column: 24, scope: !4208)
!4210 = !DILocation(line: 1146, column: 8, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4077, file: !2337, line: 1146, column: 6)
!4212 = !DILocation(line: 1146, column: 6, scope: !4077)
!4213 = !DILocation(line: 1155, column: 2, scope: !4077)
!4214 = !DILocation(line: 1155, column: 6, scope: !4077)
!4215 = !DILocation(line: 1157, column: 6, scope: !4077)
!4216 = !DILocation(line: 1162, column: 2, scope: !4077)
!4217 = !DILocation(line: 1162, column: 11, scope: !4077)
!4218 = !DILocation(line: 1163, column: 2, scope: !4077)
!4219 = !DILocation(line: 1163, column: 17, scope: !4077)
!4220 = !DILocation(line: 1164, column: 3, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4077, file: !2337, line: 1163, column: 21)
!4222 = distinct !{!4222, !4218, !4223}
!4223 = !DILocation(line: 1165, column: 2, scope: !4077)
!4224 = !DILocation(line: 1166, column: 11, scope: !4077)
!4225 = !DILocation(line: 1166, column: 8, scope: !4077)
!4226 = !DILocation(line: 1168, column: 12, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4077, file: !2337, line: 1168, column: 6)
!4228 = !DILocation(line: 1168, column: 6, scope: !4077)
!4229 = !DILocation(line: 1169, column: 3, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4227, file: !2337, line: 1168, column: 26)
!4231 = !DILocation(line: 1170, column: 9, scope: !4230)
!4232 = !DILocation(line: 1171, column: 2, scope: !4230)
!4233 = !DILocation(line: 1173, column: 6, scope: !4077)
!4234 = !DILocation(line: 1174, column: 14, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4236, file: !2337, line: 1174, column: 7)
!4236 = distinct !DILexicalBlock(scope: !4237, file: !2337, line: 1173, column: 16)
!4237 = distinct !DILexicalBlock(scope: !4077, file: !2337, line: 1173, column: 6)
!4238 = !DILocation(line: 1174, column: 7, scope: !4236)
!4239 = !DILocation(line: 1177, column: 14, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4241, file: !2337, line: 1176, column: 42)
!4241 = distinct !DILexicalBlock(scope: !4235, file: !2337, line: 1174, column: 19)
!4242 = !DILocation(line: 1177, column: 9, scope: !4240)
!4243 = !DILocation(line: 1177, column: 12, scope: !4240)
!4244 = !DILocation(line: 1178, column: 11, scope: !4240)
!4245 = !DILocation(line: 1176, column: 18, scope: !4241)
!4246 = !DILocation(line: 1176, column: 22, scope: !4241)
!4247 = !DILocation(line: 1176, column: 4, scope: !4241)
!4248 = distinct !{!4248, !4247, !4249}
!4249 = !DILocation(line: 1179, column: 4, scope: !4241)
!4250 = !DILocation(line: 1181, column: 10, scope: !4241)
!4251 = !DILocation(line: 1181, column: 21, scope: !4241)
!4252 = !DILocation(line: 1184, column: 3, scope: !4241)
!4253 = !DILocation(line: 1185, column: 8, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4235, file: !2337, line: 1184, column: 10)
!4255 = !DILocation(line: 1185, column: 11, scope: !4254)
!4256 = !DILocation(line: 1191, column: 13, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4236, file: !2337, line: 1191, column: 7)
!4258 = !DILocation(line: 1191, column: 23, scope: !4257)
!4259 = !DILocation(line: 1192, column: 8, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4257, file: !2337, line: 1191, column: 43)
!4261 = !DILocation(line: 1192, column: 11, scope: !4260)
!4262 = !DILocation(line: 1193, column: 3, scope: !4260)
!4263 = !DILocation(line: 1195, column: 14, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4236, file: !2337, line: 1195, column: 7)
!4265 = !DILocation(line: 1195, column: 18, scope: !4264)
!4266 = !DILocation(line: 1196, column: 23, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4264, file: !2337, line: 1195, column: 36)
!4268 = !DILocation(line: 1196, column: 10, scope: !4267)
!4269 = !DILocation(line: 1197, column: 25, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4267, file: !2337, line: 1197, column: 8)
!4271 = !DILocation(line: 1197, column: 8, scope: !4267)
!4272 = !DILocation(line: 0, scope: !4267)
!4273 = !DILocation(line: 1201, column: 14, scope: !4267)
!4274 = !DILocation(line: 1202, column: 21, scope: !4267)
!4275 = !DILocation(line: 1203, column: 3, scope: !4267)
!4276 = !DILocation(line: 1208, column: 10, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4237, file: !2337, line: 1204, column: 9)
!4278 = !DILocation(line: 1208, column: 8, scope: !4277)
!4279 = !DILocation(line: 1209, column: 11, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4277, file: !2337, line: 1209, column: 7)
!4281 = !DILocation(line: 1209, column: 14, scope: !4280)
!4282 = !DILocation(line: 1209, column: 7, scope: !4277)
!4283 = !DILocation(line: 1216, column: 13, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4277, file: !2337, line: 1216, column: 7)
!4285 = !DILocation(line: 1216, column: 23, scope: !4284)
!4286 = !DILocation(line: 1217, column: 8, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4284, file: !2337, line: 1216, column: 43)
!4288 = !DILocation(line: 1217, column: 11, scope: !4287)
!4289 = !DILocation(line: 1218, column: 3, scope: !4287)
!4290 = !DILocation(line: 0, scope: !4237)
!4291 = !DILocation(line: 1221, column: 19, scope: !4077)
!4292 = !DILocation(line: 1221, column: 23, scope: !4077)
!4293 = !DILocation(line: 1221, column: 2, scope: !4077)
!4294 = !DILocation(line: 1222, column: 12, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4077, file: !2337, line: 1221, column: 43)
!4296 = !DILocation(line: 1222, column: 7, scope: !4295)
!4297 = !DILocation(line: 1222, column: 10, scope: !4295)
!4298 = !DILocation(line: 1223, column: 12, scope: !4295)
!4299 = distinct !{!4299, !4293, !4300}
!4300 = !DILocation(line: 1224, column: 2, scope: !4077)
!4301 = !DILocation(line: 1226, column: 8, scope: !4077)
!4302 = !DILocation(line: 1226, column: 21, scope: !4077)
!4303 = !DILocation(line: 1228, column: 6, scope: !4077)
!4304 = !DILocation(line: 1229, column: 22, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4306, file: !2337, line: 1228, column: 18)
!4306 = distinct !DILexicalBlock(scope: !4077, file: !2337, line: 1228, column: 6)
!4307 = !DILocation(line: 1230, column: 3, scope: !4305)
!4308 = !DILocation(line: 1230, column: 11, scope: !4305)
!4309 = !DILocation(line: 1230, column: 10, scope: !4305)
!4310 = !DILocation(line: 1239, column: 17, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4077, file: !2337, line: 1239, column: 6)
!4312 = !DILocation(line: 1240, column: 7, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4311, file: !2337, line: 1239, column: 32)
!4314 = !DILocation(line: 1240, column: 10, scope: !4313)
!4315 = !DILocation(line: 1241, column: 14, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4313, file: !2337, line: 1241, column: 7)
!4317 = !DILocation(line: 1241, column: 7, scope: !4313)
!4318 = !DILocation(line: 0, scope: !4316)
!4319 = !DILocation(line: 1249, column: 14, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4313, file: !2337, line: 1249, column: 7)
!4321 = !DILocation(line: 1249, column: 7, scope: !4313)
!4322 = !DILocation(line: 1250, column: 21, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4320, file: !2337, line: 1249, column: 22)
!4324 = !DILocation(line: 1250, column: 13, scope: !4323)
!4325 = !DILocation(line: 1250, column: 8, scope: !4323)
!4326 = !DILocation(line: 1250, column: 11, scope: !4323)
!4327 = !DILocation(line: 1252, column: 3, scope: !4323)
!4328 = !DILocation(line: 0, scope: !4313)
!4329 = !DILocation(line: 1254, column: 20, scope: !4313)
!4330 = !DILocation(line: 1254, column: 12, scope: !4313)
!4331 = !DILocation(line: 1254, column: 7, scope: !4313)
!4332 = !DILocation(line: 1254, column: 10, scope: !4313)
!4333 = !DILocation(line: 1255, column: 12, scope: !4313)
!4334 = !DILocation(line: 1255, column: 7, scope: !4313)
!4335 = !DILocation(line: 1255, column: 10, scope: !4313)
!4336 = !DILocation(line: 1256, column: 2, scope: !4313)
!4337 = !DILocation(line: 1259, column: 24, scope: !4077)
!4338 = !DILocation(line: 1259, column: 35, scope: !4077)
!4339 = !DILocation(line: 1260, column: 3, scope: !4077)
!4340 = !DILocation(line: 1260, column: 13, scope: !4077)
!4341 = !DILocation(line: 1260, column: 26, scope: !4077)
!4342 = !DILocation(line: 1259, column: 8, scope: !4077)
!4343 = !DILocation(line: 1259, column: 15, scope: !4077)
!4344 = !DILocation(line: 1266, column: 7, scope: !4077)
!4345 = !DILocation(line: 1267, column: 7, scope: !4077)
!4346 = !DILocation(line: 1269, column: 1, scope: !4077)
!4347 = distinct !DISubprogram(name: "isdigit", scope: !4348, file: !4348, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !4349)
!4348 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4349 = !{!4350}
!4350 = !DILocalVariable(name: "a", arg: 1, scope: !4347, file: !4348, line: 43, type: !103)
!4351 = !DILocation(line: 0, scope: !4347)
!4352 = !DILocation(line: 45, column: 29, scope: !4347)
!4353 = !DILocation(line: 45, column: 45, scope: !4347)
!4354 = !DILocation(line: 45, column: 2, scope: !4347)
!4355 = distinct !DISubprogram(name: "isupper", scope: !4348, file: !4348, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !4356)
!4356 = !{!4357}
!4357 = !DILocalVariable(name: "a", arg: 1, scope: !4355, file: !4348, line: 16, type: !103)
!4358 = !DILocation(line: 0, scope: !4355)
!4359 = !DILocation(line: 18, column: 29, scope: !4355)
!4360 = !DILocation(line: 18, column: 45, scope: !4355)
!4361 = !DILocation(line: 18, column: 2, scope: !4355)
!4362 = distinct !DISubprogram(name: "_ldiv5", scope: !2337, file: !2337, line: 702, type: !4363, scopeLine: 703, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !4366)
!4363 = !DISubroutineType(types: !4364)
!4364 = !{null, !4365}
!4365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 32)
!4366 = !{!4367, !4368, !4369, !4370, !4371}
!4367 = !DILocalVariable(name: "v", arg: 1, scope: !4362, file: !2337, line: 702, type: !4365)
!4368 = !DILocalVariable(name: "v_lo", scope: !4362, file: !2337, line: 704, type: !121)
!4369 = !DILocalVariable(name: "v_hi", scope: !4362, file: !2337, line: 705, type: !121)
!4370 = !DILocalVariable(name: "m", scope: !4362, file: !2337, line: 706, type: !121)
!4371 = !DILocalVariable(name: "result", scope: !4362, file: !2337, line: 707, type: !1270)
!4372 = !DILocation(line: 0, scope: !4362)
!4373 = !DILocation(line: 704, column: 18, scope: !4362)
!4374 = !DILocation(line: 705, column: 21, scope: !4362)
!4375 = !DILocation(line: 714, column: 2, scope: !4362)
!4376 = !{i64 17322}
!4377 = !DILocation(line: 720, column: 12, scope: !4362)
!4378 = !DILocation(line: 720, column: 31, scope: !4362)
!4379 = !DILocation(line: 723, column: 12, scope: !4362)
!4380 = !DILocation(line: 723, column: 27, scope: !4362)
!4381 = !DILocation(line: 723, column: 9, scope: !4362)
!4382 = !DILocation(line: 724, column: 9, scope: !4362)
!4383 = !DILocation(line: 726, column: 27, scope: !4362)
!4384 = !DILocation(line: 725, column: 9, scope: !4362)
!4385 = !DILocation(line: 726, column: 9, scope: !4362)
!4386 = !DILocation(line: 727, column: 9, scope: !4362)
!4387 = !DILocation(line: 728, column: 9, scope: !4362)
!4388 = !DILocation(line: 730, column: 5, scope: !4362)
!4389 = !DILocation(line: 731, column: 1, scope: !4362)
!4390 = distinct !DISubprogram(name: "_ldiv10", scope: !2337, file: !2337, line: 736, type: !4363, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !4391)
!4391 = !{!4392}
!4392 = !DILocalVariable(name: "v", arg: 1, scope: !4390, file: !2337, line: 736, type: !4365)
!4393 = !DILocation(line: 0, scope: !4390)
!4394 = !DILocation(line: 738, column: 5, scope: !4390)
!4395 = !DILocation(line: 739, column: 2, scope: !4390)
!4396 = !DILocation(line: 740, column: 1, scope: !4390)
!4397 = distinct !DISubprogram(name: "_get_digit", scope: !2337, file: !2337, line: 745, type: !4398, scopeLine: 746, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !4400)
!4398 = !DISubroutineType(types: !4399)
!4399 = !{!146, !4365, !2361}
!4400 = !{!4401, !4402, !4403}
!4401 = !DILocalVariable(name: "fr", arg: 1, scope: !4397, file: !2337, line: 745, type: !4365)
!4402 = !DILocalVariable(name: "digit_count", arg: 2, scope: !4397, file: !2337, line: 745, type: !2361)
!4403 = !DILocalVariable(name: "rval", scope: !4397, file: !2337, line: 747, type: !146)
!4404 = !DILocation(line: 0, scope: !4397)
!4405 = !DILocation(line: 749, column: 6, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4397, file: !2337, line: 749, column: 6)
!4407 = !DILocation(line: 749, column: 19, scope: !4406)
!4408 = !DILocation(line: 749, column: 6, scope: !4397)
!4409 = !DILocation(line: 750, column: 3, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4406, file: !2337, line: 749, column: 24)
!4411 = !DILocation(line: 751, column: 7, scope: !4410)
!4412 = !DILocation(line: 752, column: 16, scope: !4410)
!4413 = !DILocation(line: 752, column: 10, scope: !4410)
!4414 = !DILocation(line: 753, column: 7, scope: !4410)
!4415 = !DILocation(line: 754, column: 2, scope: !4410)
!4416 = !DILocation(line: 0, scope: !4406)
!4417 = !DILocation(line: 758, column: 2, scope: !4397)
!4418 = distinct !DISubprogram(name: "conversion_radix", scope: !2337, file: !2337, line: 761, type: !4419, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !4421)
!4419 = !DISubroutineType(types: !4420)
!4420 = !{!200, !146}
!4421 = !{!4422}
!4422 = !DILocalVariable(name: "specifier", arg: 1, scope: !4418, file: !2337, line: 761, type: !146)
!4423 = !DILocation(line: 0, scope: !4418)
!4424 = !DILocation(line: 763, column: 2, scope: !4418)
!4425 = !DILocation(line: 770, column: 3, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4418, file: !2337, line: 763, column: 21)
!4427 = !DILocation(line: 774, column: 3, scope: !4426)
!4428 = !DILocation(line: 0, scope: !4426)
!4429 = !DILocation(line: 776, column: 1, scope: !4418)
!4430 = distinct !DISubprogram(name: "extract_flags", scope: !2337, file: !2337, line: 339, type: !3939, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !4431)
!4431 = !{!4432, !4433, !4434}
!4432 = !DILocalVariable(name: "conv", arg: 1, scope: !4430, file: !2337, line: 339, type: !3458)
!4433 = !DILocalVariable(name: "sp", arg: 2, scope: !4430, file: !2337, line: 340, type: !144)
!4434 = !DILocalVariable(name: "loop", scope: !4430, file: !2337, line: 342, type: !157)
!4435 = !DILocation(line: 0, scope: !4430)
!4436 = !DILocation(line: 344, column: 2, scope: !4430)
!4437 = !DILocation(line: 345, column: 11, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4430, file: !2337, line: 344, column: 5)
!4439 = !DILocation(line: 345, column: 3, scope: !4438)
!4440 = !DILocation(line: 351, column: 4, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4438, file: !2337, line: 345, column: 16)
!4442 = !DILocation(line: 354, column: 4, scope: !4441)
!4443 = !DILocation(line: 357, column: 4, scope: !4441)
!4444 = !DILocation(line: 360, column: 4, scope: !4441)
!4445 = !DILocation(line: 0, scope: !4441)
!4446 = !DILocation(line: 370, column: 12, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4430, file: !2337, line: 370, column: 6)
!4448 = !DILocation(line: 370, column: 22, scope: !4447)
!4449 = !DILocation(line: 371, column: 19, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4447, file: !2337, line: 370, column: 42)
!4451 = !DILocation(line: 372, column: 2, scope: !4450)
!4452 = !DILocation(line: 376, column: 2, scope: !4430)
!4453 = distinct !DISubprogram(name: "extract_width", scope: !2337, file: !2337, line: 388, type: !3939, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !4454)
!4454 = !{!4455, !4456, !4457, !4458}
!4455 = !DILocalVariable(name: "conv", arg: 1, scope: !4453, file: !2337, line: 388, type: !3458)
!4456 = !DILocalVariable(name: "sp", arg: 2, scope: !4453, file: !2337, line: 389, type: !144)
!4457 = !DILocalVariable(name: "wp", scope: !4453, file: !2337, line: 398, type: !144)
!4458 = !DILocalVariable(name: "width", scope: !4453, file: !2337, line: 399, type: !200)
!4459 = !DILocation(line: 0, scope: !4453)
!4460 = !DILocation(line: 391, column: 8, scope: !4453)
!4461 = !DILocation(line: 391, column: 22, scope: !4453)
!4462 = !DILocation(line: 393, column: 6, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4453, file: !2337, line: 393, column: 6)
!4464 = !DILocation(line: 393, column: 10, scope: !4463)
!4465 = !DILocation(line: 393, column: 6, scope: !4453)
!4466 = !DILocation(line: 394, column: 20, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4463, file: !2337, line: 393, column: 18)
!4468 = !DILocation(line: 395, column: 10, scope: !4467)
!4469 = !DILocation(line: 395, column: 3, scope: !4467)
!4470 = !DILocation(line: 399, column: 17, scope: !4453)
!4471 = !DILocation(line: 401, column: 6, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4453, file: !2337, line: 401, column: 6)
!4473 = !DILocation(line: 401, column: 9, scope: !4472)
!4474 = !DILocation(line: 401, column: 6, scope: !4453)
!4475 = !DILocation(line: 402, column: 23, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4472, file: !2337, line: 401, column: 16)
!4477 = !DILocation(line: 403, column: 9, scope: !4476)
!4478 = !DILocation(line: 403, column: 21, scope: !4476)
!4479 = !DILocation(line: 405, column: 11, scope: !4476)
!4480 = !DILocation(line: 404, column: 21, scope: !4476)
!4481 = !DILocation(line: 406, column: 2, scope: !4476)
!4482 = !DILocation(line: 409, column: 1, scope: !4453)
!4483 = distinct !DISubprogram(name: "extract_prec", scope: !2337, file: !2337, line: 420, type: !3939, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !4484)
!4484 = !{!4485, !4486, !4487}
!4485 = !DILocalVariable(name: "conv", arg: 1, scope: !4483, file: !2337, line: 420, type: !3458)
!4486 = !DILocalVariable(name: "sp", arg: 2, scope: !4483, file: !2337, line: 421, type: !144)
!4487 = !DILocalVariable(name: "prec", scope: !4483, file: !2337, line: 435, type: !200)
!4488 = !DILocation(line: 0, scope: !4483)
!4489 = !DILocation(line: 423, column: 24, scope: !4483)
!4490 = !DILocation(line: 423, column: 28, scope: !4483)
!4491 = !DILocation(line: 423, column: 8, scope: !4483)
!4492 = !DILocation(line: 423, column: 21, scope: !4483)
!4493 = !DILocation(line: 425, column: 6, scope: !4483)
!4494 = !DILocation(line: 428, column: 2, scope: !4483)
!4495 = !DILocation(line: 430, column: 6, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4483, file: !2337, line: 430, column: 6)
!4497 = !DILocation(line: 430, column: 10, scope: !4496)
!4498 = !DILocation(line: 430, column: 6, scope: !4483)
!4499 = !DILocation(line: 431, column: 19, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4496, file: !2337, line: 430, column: 18)
!4501 = !DILocation(line: 432, column: 10, scope: !4500)
!4502 = !DILocation(line: 432, column: 3, scope: !4500)
!4503 = !DILocation(line: 435, column: 16, scope: !4483)
!4504 = !DILocation(line: 437, column: 8, scope: !4483)
!4505 = !DILocation(line: 437, column: 19, scope: !4483)
!4506 = !DILocation(line: 439, column: 10, scope: !4483)
!4507 = !DILocation(line: 438, column: 20, scope: !4483)
!4508 = !DILocation(line: 441, column: 9, scope: !4483)
!4509 = !DILocation(line: 442, column: 1, scope: !4483)
!4510 = distinct !DISubprogram(name: "extract_length", scope: !2337, file: !2337, line: 453, type: !3939, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !4511)
!4511 = !{!4512, !4513}
!4512 = !DILocalVariable(name: "conv", arg: 1, scope: !4510, file: !2337, line: 453, type: !3458)
!4513 = !DILocalVariable(name: "sp", arg: 2, scope: !4510, file: !2337, line: 454, type: !144)
!4514 = !DILocation(line: 0, scope: !4510)
!4515 = !DILocation(line: 456, column: 10, scope: !4510)
!4516 = !DILocation(line: 456, column: 2, scope: !4510)
!4517 = !DILocation(line: 458, column: 8, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4519, file: !2337, line: 458, column: 7)
!4519 = distinct !DILexicalBlock(scope: !4510, file: !2337, line: 456, column: 15)
!4520 = !DILocation(line: 458, column: 7, scope: !4518)
!4521 = !DILocation(line: 458, column: 13, scope: !4518)
!4522 = !DILocation(line: 0, scope: !4518)
!4523 = !DILocation(line: 458, column: 7, scope: !4519)
!4524 = !DILocation(line: 459, column: 21, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4518, file: !2337, line: 458, column: 21)
!4526 = !DILocation(line: 460, column: 4, scope: !4525)
!4527 = !DILocation(line: 461, column: 3, scope: !4525)
!4528 = !DILocation(line: 462, column: 21, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4518, file: !2337, line: 461, column: 10)
!4530 = !DILocation(line: 466, column: 8, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4519, file: !2337, line: 466, column: 7)
!4532 = !DILocation(line: 466, column: 7, scope: !4531)
!4533 = !DILocation(line: 466, column: 13, scope: !4531)
!4534 = !DILocation(line: 0, scope: !4531)
!4535 = !DILocation(line: 466, column: 7, scope: !4519)
!4536 = !DILocation(line: 467, column: 21, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4531, file: !2337, line: 466, column: 21)
!4538 = !DILocation(line: 468, column: 4, scope: !4537)
!4539 = !DILocation(line: 469, column: 3, scope: !4537)
!4540 = !DILocation(line: 470, column: 21, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4531, file: !2337, line: 469, column: 10)
!4542 = !DILocation(line: 474, column: 9, scope: !4519)
!4543 = !DILocation(line: 474, column: 20, scope: !4519)
!4544 = !DILocation(line: 475, column: 3, scope: !4519)
!4545 = !DILocation(line: 476, column: 3, scope: !4519)
!4546 = !DILocation(line: 478, column: 9, scope: !4519)
!4547 = !DILocation(line: 478, column: 20, scope: !4519)
!4548 = !DILocation(line: 479, column: 3, scope: !4519)
!4549 = !DILocation(line: 480, column: 3, scope: !4519)
!4550 = !DILocation(line: 482, column: 9, scope: !4519)
!4551 = !DILocation(line: 482, column: 20, scope: !4519)
!4552 = !DILocation(line: 483, column: 3, scope: !4519)
!4553 = !DILocation(line: 484, column: 3, scope: !4519)
!4554 = !DILocation(line: 486, column: 9, scope: !4519)
!4555 = !DILocation(line: 486, column: 20, scope: !4519)
!4556 = !DILocation(line: 487, column: 3, scope: !4519)
!4557 = !DILocation(line: 492, column: 21, scope: !4519)
!4558 = !DILocation(line: 493, column: 3, scope: !4519)
!4559 = !DILocation(line: 495, column: 9, scope: !4519)
!4560 = !DILocation(line: 495, column: 20, scope: !4519)
!4561 = !DILocation(line: 496, column: 3, scope: !4519)
!4562 = !DILocation(line: 498, column: 2, scope: !4510)
!4563 = distinct !DISubprogram(name: "extract_specifier", scope: !2337, file: !2337, line: 513, type: !3939, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !4564)
!4564 = !{!4565, !4566, !4567, !4568}
!4565 = !DILocalVariable(name: "conv", arg: 1, scope: !4563, file: !2337, line: 513, type: !3458)
!4566 = !DILocalVariable(name: "sp", arg: 2, scope: !4563, file: !2337, line: 514, type: !144)
!4567 = !DILocalVariable(name: "unsupported", scope: !4563, file: !2337, line: 516, type: !157)
!4568 = !DILabel(scope: !4569, name: "int_conv", file: !2337, line: 526)
!4569 = distinct !DILexicalBlock(scope: !4563, file: !2337, line: 520, column: 27)
!4570 = !DILocation(line: 0, scope: !4563)
!4571 = !DILocation(line: 518, column: 20, scope: !4563)
!4572 = !DILocation(line: 518, column: 8, scope: !4563)
!4573 = !DILocation(line: 518, column: 18, scope: !4563)
!4574 = !DILocation(line: 520, column: 2, scope: !4563)
!4575 = !DILocation(line: 525, column: 3, scope: !4569)
!4576 = !DILocation(line: 0, scope: !4569)
!4577 = !DILocation(line: 526, column: 1, scope: !4569)
!4578 = !DILocation(line: 528, column: 24, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4569, file: !2337, line: 528, column: 7)
!4580 = !DILocation(line: 528, column: 7, scope: !4569)
!4581 = !DILocation(line: 535, column: 23, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4569, file: !2337, line: 535, column: 7)
!4583 = !DILocation(line: 535, column: 7, scope: !4569)
!4584 = !DILocation(line: 536, column: 36, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4582, file: !2337, line: 535, column: 31)
!4586 = !DILocation(line: 537, column: 3, scope: !4585)
!4587 = !DILocation(line: 570, column: 9, scope: !4569)
!4588 = !DILocation(line: 570, column: 23, scope: !4569)
!4589 = !DILocation(line: 580, column: 4, scope: !4569)
!4590 = !DILocation(line: 579, column: 21, scope: !4569)
!4591 = !DILocation(line: 581, column: 7, scope: !4569)
!4592 = !DILocation(line: 590, column: 13, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4569, file: !2337, line: 590, column: 7)
!4594 = !DILocation(line: 590, column: 7, scope: !4569)
!4595 = !DILocation(line: 591, column: 21, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4593, file: !2337, line: 590, column: 37)
!4597 = !DILocation(line: 592, column: 3, scope: !4596)
!4598 = !DILocation(line: 594, column: 18, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4600, file: !2337, line: 593, column: 48)
!4600 = distinct !DILexicalBlock(scope: !4593, file: !2337, line: 592, column: 14)
!4601 = !DILocation(line: 595, column: 3, scope: !4599)
!4602 = !DILocation(line: 603, column: 9, scope: !4569)
!4603 = !DILocation(line: 603, column: 23, scope: !4569)
!4604 = !DILocation(line: 605, column: 24, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4569, file: !2337, line: 605, column: 7)
!4606 = !DILocation(line: 605, column: 7, scope: !4569)
!4607 = !DILocation(line: 612, column: 9, scope: !4569)
!4608 = !DILocation(line: 612, column: 23, scope: !4569)
!4609 = !DILocation(line: 619, column: 24, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4569, file: !2337, line: 619, column: 7)
!4611 = !DILocation(line: 619, column: 7, scope: !4569)
!4612 = !DILocation(line: 625, column: 9, scope: !4569)
!4613 = !DILocation(line: 625, column: 17, scope: !4569)
!4614 = !DILocation(line: 626, column: 3, scope: !4569)
!4615 = !DILocation(line: 629, column: 20, scope: !4563)
!4616 = !DILocation(line: 629, column: 8, scope: !4563)
!4617 = !DILocation(line: 518, column: 23, scope: !4563)
!4618 = !DILocation(line: 631, column: 2, scope: !4563)
!4619 = distinct !DISubprogram(name: "extract_decimal", scope: !2337, file: !2337, line: 318, type: !4620, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !4622)
!4620 = !DISubroutineType(types: !4621)
!4621 = !{!200, !4080}
!4622 = !{!4623, !4624, !4625}
!4623 = !DILocalVariable(name: "str", arg: 1, scope: !4619, file: !2337, line: 318, type: !4080)
!4624 = !DILocalVariable(name: "sp", scope: !4619, file: !2337, line: 320, type: !144)
!4625 = !DILocalVariable(name: "val", scope: !4619, file: !2337, line: 321, type: !200)
!4626 = !DILocation(line: 0, scope: !4619)
!4627 = !DILocation(line: 320, column: 19, scope: !4619)
!4628 = !DILocation(line: 323, column: 37, scope: !4619)
!4629 = !DILocation(line: 323, column: 17, scope: !4619)
!4630 = !DILocation(line: 323, column: 9, scope: !4619)
!4631 = !DILocation(line: 323, column: 2, scope: !4619)
!4632 = !DILocation(line: 324, column: 13, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4619, file: !2337, line: 323, column: 43)
!4634 = !DILocation(line: 324, column: 24, scope: !4633)
!4635 = !DILocation(line: 324, column: 19, scope: !4633)
!4636 = !DILocation(line: 324, column: 27, scope: !4633)
!4637 = distinct !{!4637, !4631, !4638}
!4638 = !DILocation(line: 325, column: 2, scope: !4619)
!4639 = !DILocation(line: 326, column: 7, scope: !4619)
!4640 = !DILocation(line: 327, column: 2, scope: !4619)
!4641 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !4642, file: !4642, line: 9, type: !2913, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2371, retainedNodes: !322)
!4642 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!4643 = !DILocation(line: 11, column: 1, scope: !4641)
!4644 = !{i64 2147561117, i64 2147561160, i64 2147561200}
!4645 = !DILocation(line: 12, column: 1, scope: !4641)
!4646 = !{i64 2147565344, i64 2147565387, i64 2147565427}
!4647 = !DILocation(line: 13, column: 1, scope: !4641)
!4648 = !{i64 2147565553, i64 2147565596, i64 2147565636}
!4649 = !DILocation(line: 14, column: 1, scope: !4641)
!4650 = !{i64 2147565725, i64 2147565768, i64 2147565808}
!4651 = !DILocation(line: 15, column: 1, scope: !4641)
!4652 = !{i64 2147565894, i64 2147565937, i64 2147565977}
!4653 = !DILocation(line: 16, column: 1, scope: !4641)
!4654 = !{i64 2147566057, i64 2147566100, i64 2147566140}
!4655 = !DILocation(line: 17, column: 1, scope: !4641)
!4656 = !{i64 2147566241, i64 2147566284, i64 2147566324}
!4657 = !DILocation(line: 18, column: 1, scope: !4641)
!4658 = !{i64 2147566420, i64 2147566463, i64 2147566503}
!4659 = !DILocation(line: 19, column: 1, scope: !4641)
!4660 = !{i64 2147566662, i64 2147566705, i64 2147566745}
!4661 = !DILocation(line: 20, column: 1, scope: !4641)
!4662 = !{i64 2147566897, i64 2147566940, i64 2147566980}
!4663 = !DILocation(line: 21, column: 1, scope: !4641)
!4664 = !{i64 2147567083, i64 2147567126, i64 2147567166}
!4665 = !DILocation(line: 22, column: 1, scope: !4641)
!4666 = !{i64 2147567299, i64 2147567342, i64 2147567382}
!4667 = !DILocation(line: 23, column: 1, scope: !4641)
!4668 = !{i64 2147567502, i64 2147567545, i64 2147567585}
!4669 = !DILocation(line: 24, column: 1, scope: !4641)
!4670 = !{i64 2147567705, i64 2147567748, i64 2147567788}
!4671 = !DILocation(line: 25, column: 1, scope: !4641)
!4672 = !{i64 2147567880, i64 2147567923, i64 2147567963}
!4673 = !DILocation(line: 26, column: 1, scope: !4641)
!4674 = !{i64 2147568088, i64 2147568131, i64 2147568171}
!4675 = !DILocation(line: 27, column: 1, scope: !4641)
!4676 = !{i64 2147568292, i64 2147568335, i64 2147568375}
!4677 = !DILocation(line: 28, column: 1, scope: !4641)
!4678 = !{i64 2147568485, i64 2147568528, i64 2147568568}
!4679 = !DILocation(line: 29, column: 1, scope: !4641)
!4680 = !{i64 2147568687, i64 2147568730, i64 2147568770}
!4681 = !DILocation(line: 30, column: 1, scope: !4641)
!4682 = !{i64 2147568914, i64 2147568957, i64 2147568997}
!4683 = !DILocation(line: 31, column: 1, scope: !4641)
!4684 = !{i64 2147569116, i64 2147569159, i64 2147569199}
!4685 = !DILocation(line: 32, column: 1, scope: !4641)
!4686 = !{i64 2147569331, i64 2147569374, i64 2147569414}
!4687 = !DILocation(line: 33, column: 1, scope: !4641)
!4688 = !{i64 2147569503, i64 2147569546, i64 2147569586}
!4689 = !DILocation(line: 34, column: 1, scope: !4641)
!4690 = !{i64 2147569705, i64 2147569748, i64 2147569788}
!4691 = !DILocation(line: 35, column: 1, scope: !4641)
!4692 = !{i64 2147569931, i64 2147569974, i64 2147570014}
!4693 = !DILocation(line: 36, column: 1, scope: !4641)
!4694 = !{i64 2147570130, i64 2147570173, i64 2147570213}
!4695 = !DILocation(line: 37, column: 1, scope: !4641)
!4696 = !{i64 2147570305, i64 2147570348, i64 2147570388}
!4697 = !DILocation(line: 38, column: 1, scope: !4641)
!4698 = !{i64 2147570558, i64 2147570601, i64 2147570641}
!4699 = !DILocation(line: 39, column: 1, scope: !4641)
!4700 = !{i64 2147570799, i64 2147570842, i64 2147570882}
!4701 = !DILocation(line: 40, column: 1, scope: !4641)
!4702 = !{i64 2147571034, i64 2147571077, i64 2147571117}
!4703 = !DILocation(line: 41, column: 1, scope: !4641)
!4704 = !{i64 2147571266, i64 2147571309, i64 2147571349}
!4705 = !DILocation(line: 42, column: 1, scope: !4641)
!4706 = !{i64 2147571492, i64 2147571535, i64 2147571575}
!4707 = !DILocation(line: 43, column: 1, scope: !4641)
!4708 = !{i64 2147571718, i64 2147571761, i64 2147571801}
!4709 = !DILocation(line: 44, column: 1, scope: !4641)
!4710 = !{i64 2147571944, i64 2147571987, i64 2147572027}
!4711 = !DILocation(line: 45, column: 1, scope: !4641)
!4712 = !{i64 2147572179, i64 2147572222, i64 2147572262}
!4713 = !DILocation(line: 46, column: 1, scope: !4641)
!4714 = !{i64 2147572417, i64 2147572460, i64 2147572500}
!4715 = !DILocation(line: 47, column: 1, scope: !4641)
!4716 = !{i64 2147572691, i64 2147572734, i64 2147572774}
!4717 = !DILocation(line: 48, column: 1, scope: !4641)
!4718 = !{i64 2147572929, i64 2147572972, i64 2147573012}
!4719 = !DILocation(line: 49, column: 1, scope: !4641)
!4720 = !{i64 2147573173, i64 2147573216, i64 2147573256}
!4721 = !DILocation(line: 50, column: 1, scope: !4641)
!4722 = !{i64 2147573423, i64 2147573466, i64 2147573506}
!4723 = !DILocation(line: 51, column: 1, scope: !4641)
!4724 = !{i64 2147573670, i64 2147573713, i64 2147573753}
!4725 = !DILocation(line: 52, column: 1, scope: !4641)
!4726 = !{i64 2147573905, i64 2147573948, i64 2147573988}
!4727 = !DILocation(line: 53, column: 1, scope: !4641)
!4728 = !{i64 2147578201, i64 2147578244, i64 2147578284}
!4729 = !DILocation(line: 54, column: 1, scope: !4641)
!4730 = !{i64 2147578436, i64 2147578479, i64 2147578519}
!4731 = !DILocation(line: 55, column: 1, scope: !4641)
!4732 = !{i64 2147578674, i64 2147578717, i64 2147578757}
!4733 = !DILocation(line: 56, column: 1, scope: !4641)
!4734 = !{i64 2147578915, i64 2147578958, i64 2147578998}
!4735 = !DILocation(line: 57, column: 1, scope: !4641)
!4736 = !{i64 2147579195, i64 2147579238, i64 2147579278}
!4737 = !DILocation(line: 58, column: 1, scope: !4641)
!4738 = !{i64 2147579454, i64 2147579497, i64 2147579537}
!4739 = !DILocation(line: 59, column: 1, scope: !4641)
!4740 = !{i64 2147579680, i64 2147579723, i64 2147579763}
!4741 = !DILocation(line: 60, column: 1, scope: !4641)
!4742 = !{i64 2147579918, i64 2147579961, i64 2147580001}
!4743 = !DILocation(line: 61, column: 1, scope: !4641)
!4744 = !{i64 2147580147, i64 2147580190, i64 2147580230}
!4745 = !DILocation(line: 62, column: 1, scope: !4641)
!4746 = !{i64 2147580355, i64 2147580398, i64 2147580438}
!4747 = !DILocation(line: 63, column: 1, scope: !4641)
!4748 = !{i64 2147580566, i64 2147580609, i64 2147580649}
!4749 = !DILocation(line: 64, column: 1, scope: !4641)
!4750 = !{i64 2147580801, i64 2147580844, i64 2147580884}
!4751 = !DILocation(line: 65, column: 1, scope: !4641)
!4752 = !{i64 2147581030, i64 2147581073, i64 2147581113}
!4753 = !DILocation(line: 66, column: 1, scope: !4641)
!4754 = !{i64 2147581268, i64 2147581311, i64 2147581351}
!4755 = !DILocation(line: 67, column: 1, scope: !4641)
!4756 = !{i64 2147581500, i64 2147581543, i64 2147581583}
!4757 = !DILocation(line: 68, column: 1, scope: !4641)
!4758 = !{i64 2147581726, i64 2147581769, i64 2147581809}
!4759 = !DILocation(line: 69, column: 1, scope: !4641)
!4760 = !{i64 2147581943, i64 2147581986, i64 2147582026}
!4761 = !DILocation(line: 70, column: 1, scope: !4641)
!4762 = !{i64 2147582175, i64 2147582218, i64 2147582258}
!4763 = !DILocation(line: 71, column: 1, scope: !4641)
!4764 = !{i64 2147582401, i64 2147582444, i64 2147582484}
!4765 = !DILocation(line: 72, column: 1, scope: !4641)
!4766 = !{i64 2147582615, i64 2147582658, i64 2147582698}
!4767 = !DILocation(line: 73, column: 1, scope: !4641)
!4768 = !{i64 2147582835, i64 2147582878, i64 2147582918}
!4769 = !DILocation(line: 74, column: 1, scope: !4641)
!4770 = !{i64 2147583067, i64 2147583110, i64 2147583150}
!4771 = !DILocation(line: 75, column: 1, scope: !4641)
!4772 = !{i64 2147583275, i64 2147583318, i64 2147583358}
!4773 = !DILocation(line: 76, column: 1, scope: !4641)
!4774 = !{i64 2147583480, i64 2147583523, i64 2147583563}
!4775 = !DILocation(line: 77, column: 1, scope: !4641)
!4776 = !{i64 2147583697, i64 2147583740, i64 2147583780}
!4777 = !DILocation(line: 78, column: 1, scope: !4641)
!4778 = !{i64 2147583911, i64 2147583954, i64 2147583994}
!4779 = !DILocation(line: 79, column: 1, scope: !4641)
!4780 = !{i64 2147584137, i64 2147584180, i64 2147584220}
!4781 = !DILocation(line: 80, column: 1, scope: !4641)
!4782 = !{i64 2147584357, i64 2147584400, i64 2147584440}
!4783 = !DILocation(line: 81, column: 1, scope: !4641)
!4784 = !{i64 2147584562, i64 2147584605, i64 2147584645}
!4785 = !DILocation(line: 82, column: 1, scope: !4641)
!4786 = !{i64 2147584794, i64 2147584837, i64 2147584877}
!4787 = !DILocation(line: 83, column: 1, scope: !4641)
!4788 = !{i64 2147585029, i64 2147585072, i64 2147585112}
!4789 = !DILocation(line: 84, column: 1, scope: !4641)
!4790 = !{i64 2147585279, i64 2147585322, i64 2147585362}
!4791 = !DILocation(line: 85, column: 1, scope: !4641)
!4792 = !{i64 2147585529, i64 2147585572, i64 2147585612}
!4793 = !DILocation(line: 86, column: 1, scope: !4641)
!4794 = !{i64 2147585767, i64 2147585810, i64 2147585850}
!4795 = !DILocation(line: 87, column: 1, scope: !4641)
!4796 = !{i64 2147585978, i64 2147586021, i64 2147586061}
!4797 = !DILocation(line: 88, column: 1, scope: !4641)
!4798 = !{i64 2147586195, i64 2147586238, i64 2147586278}
!4799 = !DILocation(line: 89, column: 1, scope: !4641)
!4800 = !{i64 2147586391, i64 2147586434, i64 2147586474}
!4801 = !DILocation(line: 90, column: 1, scope: !4641)
!4802 = !{i64 2147590654, i64 2147590697, i64 2147590737}
!4803 = !DILocation(line: 91, column: 1, scope: !4641)
!4804 = !{i64 2147590847, i64 2147590890, i64 2147590930}
!4805 = !DILocation(line: 92, column: 1, scope: !4641)
!4806 = !{i64 2147591055, i64 2147591098, i64 2147591138}
!4807 = !DILocation(line: 93, column: 1, scope: !4641)
!4808 = !{i64 2147591251, i64 2147591294, i64 2147591334}
!4809 = !DILocation(line: 94, column: 1, scope: !4641)
!4810 = !{i64 2147591456, i64 2147591499, i64 2147591539}
!4811 = !DILocation(line: 95, column: 1, scope: !4641)
!4812 = !{i64 2147591667, i64 2147591710, i64 2147591750}
!4813 = !DILocation(line: 96, column: 1, scope: !4641)
!4814 = !{i64 2147591866, i64 2147591909, i64 2147591949}
!4815 = !DILocation(line: 97, column: 1, scope: !4641)
!4816 = !{i64 2147592041, i64 2147592084, i64 2147592124}
!4817 = !DILocation(line: 98, column: 1, scope: !4641)
!4818 = !{i64 2147592225, i64 2147592268, i64 2147592308}
!4819 = !DILocation(line: 99, column: 1, scope: !4641)
!4820 = !{i64 2147592427, i64 2147592470, i64 2147592510}
!4821 = !DILocation(line: 100, column: 1, scope: !4641)
!4822 = !{i64 2147592626, i64 2147592669, i64 2147592709}
!4823 = !DILocation(line: 101, column: 1, scope: !4641)
!4824 = !{i64 2147592792, i64 2147592835, i64 2147592875}
!4825 = !DILocation(line: 102, column: 1, scope: !4641)
!4826 = !{i64 2147592976, i64 2147593019, i64 2147593059}
!4827 = !DILocation(line: 103, column: 1, scope: !4641)
!4828 = !{i64 2147593166, i64 2147593209, i64 2147593249}
!4829 = !DILocation(line: 104, column: 1, scope: !4641)
!4830 = !{i64 2147593350, i64 2147593393, i64 2147593433}
!4831 = !DILocation(line: 105, column: 1, scope: !4641)
!4832 = !{i64 2147593564, i64 2147593607, i64 2147593647}
!4833 = !DILocation(line: 106, column: 1, scope: !4641)
!4834 = !{i64 2147593775, i64 2147593818, i64 2147593858}
!4835 = !DILocation(line: 107, column: 1, scope: !4641)
!4836 = !{i64 2147593998, i64 2147594041, i64 2147594081}
!4837 = !DILocation(line: 108, column: 1, scope: !4641)
!4838 = !{i64 2147594182, i64 2147594225, i64 2147594265}
!4839 = !DILocation(line: 109, column: 1, scope: !4641)
!4840 = !{i64 2147594396, i64 2147594439, i64 2147594479}
!4841 = !DILocation(line: 110, column: 1, scope: !4641)
!4842 = !{i64 2147594562, i64 2147594605, i64 2147594645}
!4843 = !DILocation(line: 111, column: 1, scope: !4641)
!4844 = !{i64 2147594743, i64 2147594786, i64 2147594826}
!4845 = !DILocation(line: 112, column: 1, scope: !4641)
!4846 = !{i64 2147594936, i64 2147594979, i64 2147595019}
!4847 = !DILocation(line: 113, column: 1, scope: !4641)
!4848 = !{i64 2147595162, i64 2147595205, i64 2147595245}
!4849 = !DILocation(line: 114, column: 1, scope: !4641)
!4850 = !{i64 2147595376, i64 2147595419, i64 2147595459}
!4851 = !DILocation(line: 115, column: 1, scope: !4641)
!4852 = !{i64 2147595602, i64 2147595645, i64 2147595685}
!4853 = !DILocation(line: 116, column: 1, scope: !4641)
!4854 = !{i64 2147595819, i64 2147595862, i64 2147595902}
!4855 = !DILocation(line: 117, column: 1, scope: !4641)
!4856 = !{i64 2147596096, i64 2147596139, i64 2147596179}
!4857 = !DILocation(line: 118, column: 1, scope: !4641)
!4858 = !{i64 2147596322, i64 2147596365, i64 2147596405}
!4859 = !DILocation(line: 119, column: 1, scope: !4641)
!4860 = !{i64 2147596530, i64 2147596573, i64 2147596613}
!4861 = !DILocation(line: 120, column: 1, scope: !4641)
!4862 = !{i64 2147596726, i64 2147596769, i64 2147596809}
!4863 = !DILocation(line: 121, column: 1, scope: !4641)
!4864 = !{i64 2147596991, i64 2147597034, i64 2147597074}
!4865 = !DILocation(line: 122, column: 1, scope: !4641)
!4866 = !{i64 2147597205, i64 2147597248, i64 2147597288}
!4867 = !DILocation(line: 123, column: 1, scope: !4641)
!4868 = !{i64 2147597380, i64 2147597423, i64 2147597463}
!4869 = !DILocation(line: 124, column: 1, scope: !4641)
!4870 = !{i64 2147597634, i64 2147597677, i64 2147597717}
!4871 = !DILocation(line: 125, column: 1, scope: !4641)
!4872 = !{i64 2147597833, i64 2147597876, i64 2147597916}
!4873 = !DILocation(line: 126, column: 1, scope: !4641)
!4874 = !{i64 2147598075, i64 2147598118, i64 2147598158}
!4875 = !DILocation(line: 127, column: 1, scope: !4641)
!4876 = !{i64 2147598238, i64 2147598281, i64 2147598321}
!4877 = !DILocation(line: 128, column: 1, scope: !4641)
!4878 = !{i64 2147598425, i64 2147598468, i64 2147598508}
!4879 = !DILocation(line: 129, column: 1, scope: !4641)
!4880 = !{i64 2147598618, i64 2147598661, i64 2147598701}
!4881 = !DILocation(line: 130, column: 1, scope: !4641)
!4882 = !{i64 2147598801, i64 2147598844, i64 2147598884}
!4883 = !DILocation(line: 131, column: 1, scope: !4641)
!4884 = !{i64 2147599015, i64 2147599058, i64 2147599098}
!4885 = !DILocation(line: 132, column: 1, scope: !4641)
!4886 = !{i64 2147599226, i64 2147599269, i64 2147599309}
!4887 = !DILocation(line: 133, column: 1, scope: !4641)
!4888 = !{i64 2147599446, i64 2147599489, i64 2147599529}
!4889 = !DILocation(line: 134, column: 1, scope: !4641)
!4890 = !{i64 2147599653, i64 2147599696, i64 2147599736}
!4891 = !DILocation(line: 135, column: 1, scope: !4641)
!4892 = !{i64 2147603987, i64 2147604030, i64 2147604070}
!4893 = !DILocation(line: 136, column: 1, scope: !4641)
!4894 = !{i64 2147604235, i64 2147604278, i64 2147604318}
!4895 = !DILocation(line: 137, column: 1, scope: !4641)
!4896 = !{i64 2147604434, i64 2147604477, i64 2147604517}
!4897 = !DILocation(line: 138, column: 1, scope: !4641)
!4898 = !{i64 2147604669, i64 2147604712, i64 2147604752}
!4899 = !DILocation(line: 139, column: 1, scope: !4641)
!4900 = !{i64 2147604919, i64 2147604962, i64 2147605002}
!4901 = !DILocation(line: 140, column: 1, scope: !4641)
!4902 = !{i64 2147605121, i64 2147605164, i64 2147605204}
!4903 = !DILocation(line: 141, column: 1, scope: !4641)
!4904 = !{i64 2147605344, i64 2147605387, i64 2147605427}
!4905 = !DILocation(line: 142, column: 1, scope: !4641)
!4906 = !{i64 2147605558, i64 2147605601, i64 2147605641}
!4907 = !DILocation(line: 143, column: 1, scope: !4641)
!4908 = !{i64 2147605802, i64 2147605845, i64 2147605885}
!4909 = !DILocation(line: 144, column: 1, scope: !4641)
!4910 = !{i64 2147606031, i64 2147606074, i64 2147606114}
!4911 = !DILocation(line: 145, column: 1, scope: !4641)
!4912 = !{i64 2147606260, i64 2147606303, i64 2147606343}
!4913 = !DILocation(line: 146, column: 1, scope: !4641)
!4914 = !{i64 2147606468, i64 2147606511, i64 2147606551}
!4915 = !DILocation(line: 147, column: 1, scope: !4641)
!4916 = !{i64 2147606706, i64 2147606749, i64 2147606789}
!4917 = !DILocation(line: 148, column: 1, scope: !4641)
!4918 = !{i64 2147606932, i64 2147606975, i64 2147607015}
!4919 = !DILocation(line: 149, column: 1, scope: !4641)
!4920 = !{i64 2147607191, i64 2147607234, i64 2147607274}
!4921 = !DILocation(line: 150, column: 1, scope: !4641)
!4922 = !{i64 2147607411, i64 2147607454, i64 2147607494}
!4923 = !DILocation(line: 151, column: 1, scope: !4641)
!4924 = !{i64 2147607643, i64 2147607686, i64 2147607726}
!4925 = !DILocation(line: 152, column: 1, scope: !4641)
!4926 = !{i64 2147607884, i64 2147607927, i64 2147607967}
!4927 = !DILocation(line: 153, column: 1, scope: !4641)
!4928 = !{i64 2147608125, i64 2147608168, i64 2147608208}
!4929 = !DILocation(line: 154, column: 1, scope: !4641)
!4930 = !{i64 2147608348, i64 2147608391, i64 2147608431}
!4931 = !DILocation(line: 155, column: 1, scope: !4641)
!4932 = !{i64 2147608565, i64 2147608608, i64 2147608648}
!4933 = !DILocation(line: 156, column: 1, scope: !4641)
!4934 = !{i64 2147608806, i64 2147608849, i64 2147608889}
!4935 = !DILocation(line: 157, column: 1, scope: !4641)
!4936 = !{i64 2147608993, i64 2147609036, i64 2147609076}
!4937 = !DILocation(line: 158, column: 1, scope: !4641)
!4938 = !{i64 2147609180, i64 2147609223, i64 2147609263}
!4939 = !DILocation(line: 159, column: 1, scope: !4641)
!4940 = !{i64 2147609343, i64 2147609386, i64 2147609426}
!4941 = !DILocation(line: 160, column: 1, scope: !4641)
!4942 = !{i64 2147609602, i64 2147609645, i64 2147609685}
!4943 = !DILocation(line: 161, column: 1, scope: !4641)
!4944 = !{i64 2147609825, i64 2147609868, i64 2147609908}
!4945 = !DILocation(line: 162, column: 1, scope: !4641)
!4946 = !{i64 2147610054, i64 2147610097, i64 2147610137}
!4947 = !DILocation(line: 163, column: 1, scope: !4641)
!4948 = !{i64 2147610250, i64 2147610293, i64 2147610333}
!4949 = !DILocation(line: 164, column: 1, scope: !4641)
!4950 = !{i64 2147610462, i64 2147610505, i64 2147610545}
!4951 = !DILocation(line: 165, column: 1, scope: !4641)
!4952 = !{i64 2147610683, i64 2147610726, i64 2147610766}
!4953 = !DILocation(line: 166, column: 1, scope: !4641)
!4954 = !{i64 2147610897, i64 2147610940, i64 2147610980}
!4955 = !DILocation(line: 167, column: 1, scope: !4641)
!4956 = !{i64 2147611087, i64 2147611130, i64 2147611170}
!4957 = !DILocation(line: 168, column: 1, scope: !4641)
!4958 = !{i64 2147611286, i64 2147611329, i64 2147611369}
!4959 = !DILocation(line: 169, column: 1, scope: !4641)
!4960 = !{i64 2147611491, i64 2147611534, i64 2147611574}
!4961 = !DILocation(line: 170, column: 1, scope: !4641)
!4962 = !{i64 2147611711, i64 2147611754, i64 2147611794}
!4963 = !DILocation(line: 171, column: 1, scope: !4641)
!4964 = !{i64 2147611912, i64 2147611955, i64 2147611995}
!4965 = !DILocation(line: 172, column: 1, scope: !4641)
!4966 = !{i64 2147612111, i64 2147612154, i64 2147612194}
!4967 = !DILocation(line: 173, column: 1, scope: !4641)
!4968 = !{i64 2147612316, i64 2147612359, i64 2147612399}
!4969 = !DILocation(line: 174, column: 1, scope: !4641)
!4970 = !{i64 2147616546, i64 2147616589, i64 2147616629}
!4971 = !DILocation(line: 175, column: 1, scope: !4641)
!4972 = !{i64 2147616730, i64 2147616773, i64 2147616813}
!4973 = !DILocation(line: 176, column: 1, scope: !4641)
!4974 = !{i64 2147616914, i64 2147616957, i64 2147616997}
!4975 = !DILocation(line: 177, column: 1, scope: !4641)
!4976 = !{i64 2147617101, i64 2147617144, i64 2147617184}
!4977 = !DILocation(line: 178, column: 1, scope: !4641)
!4978 = !{i64 2147617285, i64 2147617328, i64 2147617368}
!4979 = !DILocation(line: 179, column: 1, scope: !4641)
!4980 = !{i64 2147617523, i64 2147617566, i64 2147617606}
!4981 = !DILocation(line: 180, column: 1, scope: !4641)
!4982 = !{i64 2147617753, i64 2147617796, i64 2147617836}
!4983 = !DILocation(line: 181, column: 1, scope: !4641)
!4984 = !{i64 2147617982, i64 2147618025, i64 2147618065}
!4985 = !DILocation(line: 182, column: 1, scope: !4641)
!4986 = !{i64 2147618169, i64 2147618212, i64 2147618252}
!4987 = !DILocation(line: 183, column: 1, scope: !4641)
!4988 = !{i64 2147618365, i64 2147618408, i64 2147618448}
!4989 = !DILocation(line: 184, column: 1, scope: !4641)
!4990 = !{i64 2147618573, i64 2147618616, i64 2147618656}
!4991 = !DILocation(line: 185, column: 1, scope: !4641)
!4992 = !{i64 2147618785, i64 2147618828, i64 2147618868}
!4993 = !DILocation(line: 186, column: 1, scope: !4641)
!4994 = !{i64 2147618984, i64 2147619027, i64 2147619067}
!4995 = !DILocation(line: 187, column: 1, scope: !4641)
!4996 = !{i64 2147619222, i64 2147619265, i64 2147619305}
!4997 = !DILocation(line: 188, column: 1, scope: !4641)
!4998 = !{i64 2147619418, i64 2147619461, i64 2147619501}
!4999 = !DILocation(line: 189, column: 1, scope: !4641)
!5000 = !{i64 2147619620, i64 2147619663, i64 2147619703}
!5001 = !DILocation(line: 190, column: 1, scope: !4641)
!5002 = !{i64 2147619813, i64 2147619856, i64 2147619896}
!5003 = !DILocation(line: 191, column: 1, scope: !4641)
!5004 = !{i64 2147620047, i64 2147620090, i64 2147620130}
!5005 = !DILocation(line: 192, column: 1, scope: !4641)
!5006 = !{i64 2147620210, i64 2147620253, i64 2147620293}
!5007 = !DILocation(line: 193, column: 1, scope: !4641)
!5008 = !{i64 2147620449, i64 2147620492, i64 2147620532}
!5009 = !DILocation(line: 194, column: 1, scope: !4641)
!5010 = !{i64 2147620688, i64 2147620731, i64 2147620771}
!5011 = !DILocation(line: 195, column: 1, scope: !4641)
!5012 = !{i64 2147620924, i64 2147620967, i64 2147621007}
!5013 = !DILocation(line: 196, column: 1, scope: !4641)
!5014 = !{i64 2147621154, i64 2147621197, i64 2147621237}
!5015 = !DILocation(line: 197, column: 1, scope: !4641)
!5016 = !{i64 2147621341, i64 2147621384, i64 2147621424}
!5017 = !DILocation(line: 198, column: 1, scope: !4641)
!5018 = !{i64 2147621540, i64 2147621583, i64 2147621623}
!5019 = !DILocation(line: 199, column: 1, scope: !4641)
!5020 = !{i64 2147621811, i64 2147621854, i64 2147621894}
!5021 = !DILocation(line: 200, column: 1, scope: !4641)
!5022 = !{i64 2147621986, i64 2147622029, i64 2147622069}
!5023 = !DILocation(line: 201, column: 1, scope: !4641)
!5024 = !{i64 2147622220, i64 2147622263, i64 2147622303}
!5025 = !DILocation(line: 202, column: 1, scope: !4641)
!5026 = !{i64 2147622428, i64 2147622471, i64 2147622511}
!5027 = !DILocation(line: 203, column: 1, scope: !4641)
!5028 = !{i64 2147622646, i64 2147622689, i64 2147622729}
!5029 = !DILocation(line: 204, column: 1, scope: !4641)
!5030 = !{i64 2147622836, i64 2147622879, i64 2147622919}
!5031 = !DILocation(line: 205, column: 1, scope: !4641)
!5032 = !{i64 2147623032, i64 2147623075, i64 2147623115}
!5033 = !DILocation(line: 206, column: 1, scope: !4641)
!5034 = !{i64 2147623238, i64 2147623281, i64 2147623321}
!5035 = !DILocation(line: 207, column: 1, scope: !4641)
!5036 = !{i64 2147623443, i64 2147623486, i64 2147623526}
!5037 = !DILocation(line: 208, column: 1, scope: !4641)
!5038 = !{i64 2147623669, i64 2147623712, i64 2147623752}
!5039 = !DILocation(line: 209, column: 1, scope: !4641)
!5040 = !{i64 2147623901, i64 2147623944, i64 2147623984}
!5041 = !DILocation(line: 210, column: 1, scope: !4641)
!5042 = !{i64 2147624085, i64 2147624128, i64 2147624168}
!5043 = !DILocation(line: 211, column: 1, scope: !4641)
!5044 = !{i64 2147624294, i64 2147624337, i64 2147624377}
!5045 = !DILocation(line: 212, column: 1, scope: !4641)
!5046 = !{i64 2147624478, i64 2147624521, i64 2147624561}
!5047 = !DILocation(line: 213, column: 1, scope: !4641)
!5048 = !{i64 2147624704, i64 2147624747, i64 2147624787}
!5049 = !DILocation(line: 214, column: 1, scope: !4641)
!5050 = !{i64 2147624930, i64 2147624973, i64 2147625013}
!5051 = !DILocation(line: 215, column: 1, scope: !4641)
!5052 = !{i64 2147625156, i64 2147625199, i64 2147625239}
!5053 = !DILocation(line: 216, column: 1, scope: !4641)
!5054 = !{i64 2147625382, i64 2147625425, i64 2147625465}
!5055 = !DILocation(line: 217, column: 1, scope: !4641)
!5056 = !{i64 2147629669, i64 2147629712, i64 2147629752}
!5057 = !DILocation(line: 218, column: 1, scope: !4641)
!5058 = !{i64 2147629901, i64 2147629944, i64 2147629984}
!5059 = !DILocation(line: 219, column: 1, scope: !4641)
!5060 = !{i64 2147630139, i64 2147630182, i64 2147630222}
!5061 = !DILocation(line: 220, column: 1, scope: !4641)
!5062 = !{i64 2147630359, i64 2147630402, i64 2147630442}
!5063 = !DILocation(line: 221, column: 1, scope: !4641)
!5064 = !{i64 2147630603, i64 2147630646, i64 2147630686}
!5065 = !DILocation(line: 222, column: 1, scope: !4641)
!5066 = !{i64 2147630844, i64 2147630887, i64 2147630927}
!5067 = !DILocation(line: 223, column: 1, scope: !4641)
!5068 = !{i64 2147631079, i64 2147631122, i64 2147631162}
!5069 = !DILocation(line: 224, column: 1, scope: !4641)
!5070 = !{i64 2147631311, i64 2147631354, i64 2147631394}
!5071 = !DILocation(line: 225, column: 1, scope: !4641)
!5072 = !{i64 2147631513, i64 2147631556, i64 2147631596}
!5073 = !DILocation(line: 226, column: 1, scope: !4641)
!5074 = !{i64 2147631763, i64 2147631806, i64 2147631846}
!5075 = !DILocation(line: 227, column: 1, scope: !4641)
!5076 = !{i64 2147632001, i64 2147632044, i64 2147632084}
!5077 = !DILocation(line: 228, column: 1, scope: !4641)
!5078 = !{i64 2147632185, i64 2147632228, i64 2147632268}
!5079 = !DILocation(line: 229, column: 1, scope: !4641)
!5080 = !{i64 2147632408, i64 2147632451, i64 2147632491}
!5081 = !DILocation(line: 230, column: 1, scope: !4641)
!5082 = !{i64 2147632646, i64 2147632689, i64 2147632729}
!5083 = !DILocation(line: 231, column: 1, scope: !4641)
!5084 = !{i64 2147632884, i64 2147632927, i64 2147632967}
!5085 = !DILocation(line: 232, column: 1, scope: !4641)
!5086 = !{i64 2147633099, i64 2147633142, i64 2147633182}
!5087 = !DILocation(line: 233, column: 1, scope: !4641)
!5088 = !{i64 2147633328, i64 2147633371, i64 2147633411}
!5089 = !DILocation(line: 234, column: 1, scope: !4641)
!5090 = !{i64 2147633581, i64 2147633624, i64 2147633664}
!5091 = !DILocation(line: 235, column: 1, scope: !4641)
!5092 = !{i64 2147633774, i64 2147633817, i64 2147633857}
!5093 = !DILocation(line: 236, column: 1, scope: !4641)
!5094 = !{i64 2147634027, i64 2147634070, i64 2147634110}
!5095 = !DILocation(line: 237, column: 1, scope: !4641)
!5096 = !{i64 2147634241, i64 2147634284, i64 2147634324}
!5097 = !DILocation(line: 238, column: 1, scope: !4641)
!5098 = !{i64 2147634449, i64 2147634492, i64 2147634532}
!5099 = !DILocation(line: 239, column: 1, scope: !4641)
!5100 = !{i64 2147634639, i64 2147634682, i64 2147634722}
!5101 = !DILocation(line: 240, column: 1, scope: !4641)
!5102 = !{i64 2147634853, i64 2147634896, i64 2147634936}
!5103 = !DILocation(line: 241, column: 1, scope: !4641)
!5104 = !{i64 2147635115, i64 2147635158, i64 2147635198}
!5105 = !DILocation(line: 242, column: 1, scope: !4641)
!5106 = !{i64 2147635326, i64 2147635369, i64 2147635409}
!5107 = !DILocation(line: 243, column: 1, scope: !4641)
!5108 = !{i64 2147635570, i64 2147635613, i64 2147635653}
!5109 = !DILocation(line: 244, column: 1, scope: !4641)
!5110 = !{i64 2147635781, i64 2147635824, i64 2147635864}
!5111 = !DILocation(line: 245, column: 1, scope: !4641)
!5112 = !{i64 2147636010, i64 2147636053, i64 2147636093}
!5113 = !DILocation(line: 246, column: 1, scope: !4641)
!5114 = !{i64 2147636275, i64 2147636318, i64 2147636358}
!5115 = !DILocation(line: 247, column: 1, scope: !4641)
!5116 = !{i64 2147636480, i64 2147636523, i64 2147636563}
!5117 = !DILocation(line: 248, column: 1, scope: !4641)
!5118 = !{i64 2147636676, i64 2147636719, i64 2147636759}
!5119 = !DILocation(line: 249, column: 1, scope: !4641)
!5120 = !{i64 2147636899, i64 2147636942, i64 2147636982}
!5121 = !DILocation(line: 250, column: 1, scope: !4641)
!5122 = !{i64 2147637062, i64 2147637105, i64 2147637145}
!5123 = !DILocation(line: 251, column: 1, scope: !4641)
!5124 = !{i64 2147637267, i64 2147637310, i64 2147637350}
!5125 = !DILocation(line: 252, column: 1, scope: !4641)
!5126 = !{i64 2147637487, i64 2147637530, i64 2147637570}
!5127 = !DILocation(line: 253, column: 1, scope: !4641)
!5128 = !{i64 2147637698, i64 2147637741, i64 2147637781}
!5129 = !DILocation(line: 254, column: 1, scope: !4641)
!5130 = !{i64 2147637912, i64 2147637955, i64 2147637995}
!5131 = !DILocation(line: 255, column: 1, scope: !4641)
!5132 = !{i64 2147642187, i64 2147642230, i64 2147642270}
!5133 = !DILocation(line: 256, column: 1, scope: !4641)
!5134 = !{i64 2147642398, i64 2147642441, i64 2147642481}
!5135 = !DILocation(line: 257, column: 1, scope: !4641)
!5136 = !{i64 2147642591, i64 2147642634, i64 2147642674}
!5137 = !DILocation(line: 258, column: 1, scope: !4641)
!5138 = !{i64 2147642790, i64 2147642833, i64 2147642873}
!5139 = !DILocation(line: 259, column: 1, scope: !4641)
!5140 = !{i64 2147642962, i64 2147643005, i64 2147643045}
!5141 = !DILocation(line: 260, column: 1, scope: !4641)
!5142 = !{i64 2147643155, i64 2147643198, i64 2147643238}
!5143 = !DILocation(line: 261, column: 1, scope: !4641)
!5144 = !{i64 2147643351, i64 2147643394, i64 2147643434}
!5145 = !DILocation(line: 262, column: 1, scope: !4641)
!5146 = !{i64 2147643578, i64 2147643621, i64 2147643661}
!5147 = !DILocation(line: 263, column: 1, scope: !4641)
!5148 = !{i64 2147643795, i64 2147643838, i64 2147643878}
!5149 = !DILocation(line: 264, column: 1, scope: !4641)
!5150 = !{i64 2147644087, i64 2147644130, i64 2147644170}
!5151 = !DILocation(line: 265, column: 1, scope: !4641)
!5152 = !{i64 2147644319, i64 2147644362, i64 2147644402}
!5153 = !DILocation(line: 266, column: 1, scope: !4641)
!5154 = !{i64 2147644536, i64 2147644579, i64 2147644619}
!5155 = !DILocation(line: 267, column: 1, scope: !4641)
!5156 = !{i64 2147644743, i64 2147644786, i64 2147644826}
!5157 = !DILocation(line: 268, column: 1, scope: !4641)
!5158 = !{i64 2147644944, i64 2147644987, i64 2147645027}
!5159 = !DILocation(line: 269, column: 1, scope: !4641)
!5160 = !{i64 2147645176, i64 2147645219, i64 2147645259}
!5161 = !DILocation(line: 270, column: 1, scope: !4641)
!5162 = !{i64 2147645384, i64 2147645427, i64 2147645467}
!5163 = !DILocation(line: 271, column: 1, scope: !4641)
!5164 = !{i64 2147645574, i64 2147645617, i64 2147645657}
!5165 = !DILocation(line: 272, column: 1, scope: !4641)
!5166 = !{i64 2147645800, i64 2147645843, i64 2147645883}
!5167 = !DILocation(line: 273, column: 1, scope: !4641)
!5168 = !{i64 2147645989, i64 2147646032, i64 2147646072}
!5169 = !DILocation(line: 274, column: 1, scope: !4641)
!5170 = !{i64 2147646260, i64 2147646303, i64 2147646343}
!5171 = !DILocation(line: 275, column: 1, scope: !4641)
!5172 = !{i64 2147646480, i64 2147646523, i64 2147646563}
!5173 = !DILocation(line: 276, column: 1, scope: !4641)
!5174 = !{i64 2147646733, i64 2147646776, i64 2147646816}
!5175 = !DILocation(line: 277, column: 1, scope: !4641)
!5176 = !{i64 2147646941, i64 2147646984, i64 2147647024}
!5177 = !DILocation(line: 278, column: 1, scope: !4641)
!5178 = !{i64 2147647173, i64 2147647216, i64 2147647256}
!5179 = !DILocation(line: 279, column: 1, scope: !4641)
!5180 = !{i64 2147647384, i64 2147647427, i64 2147647467}
!5181 = !DILocation(line: 280, column: 1, scope: !4641)
!5182 = !{i64 2147647574, i64 2147647617, i64 2147647657}
!5183 = !DILocation(line: 281, column: 1, scope: !4641)
!5184 = !{i64 2147647788, i64 2147647831, i64 2147647871}
!5185 = !DILocation(line: 282, column: 1, scope: !4641)
!5186 = !{i64 2147647987, i64 2147648030, i64 2147648070}
!5187 = !DILocation(line: 283, column: 1, scope: !4641)
!5188 = !{i64 2147648174, i64 2147648217, i64 2147648257}
!5189 = !DILocation(line: 284, column: 1, scope: !4641)
!5190 = !{i64 2147648382, i64 2147648425, i64 2147648465}
!5191 = !DILocation(line: 285, column: 1, scope: !4641)
!5192 = !{i64 2147648611, i64 2147648654, i64 2147648694}
!5193 = !DILocation(line: 286, column: 1, scope: !4641)
!5194 = !{i64 2147648813, i64 2147648856, i64 2147648896}
!5195 = !DILocation(line: 287, column: 1, scope: !4641)
!5196 = !{i64 2147649012, i64 2147649055, i64 2147649095}
!5197 = !DILocation(line: 288, column: 1, scope: !4641)
!5198 = !{i64 2147649229, i64 2147649272, i64 2147649312}
!5199 = !DILocation(line: 290, column: 1, scope: !4641)
!5200 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !129, file: !129, line: 30, type: !136, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5201)
!5201 = !{!5202, !5203}
!5202 = !DILocalVariable(name: "arg", arg: 1, scope: !5200, file: !129, line: 30, type: !138)
!5203 = !DILocalVariable(name: "key", scope: !5200, file: !129, line: 32, type: !121)
!5204 = !DILocation(line: 0, scope: !5200)
!5205 = !DILocation(line: 37, column: 2, scope: !5200)
!5206 = !DILocation(line: 38, column: 2, scope: !5200)
!5207 = !DILocation(line: 55, column: 2, scope: !5208, inlinedAt: !5215)
!5208 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5209, file: !5209, line: 42, type: !5210, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5212)
!5209 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5210 = !DISubroutineType(types: !5211)
!5211 = !{!32}
!5212 = !{!5213, !5214}
!5213 = !DILocalVariable(name: "key", scope: !5208, file: !5209, line: 44, type: !32)
!5214 = !DILocalVariable(name: "tmp", scope: !5208, file: !5209, line: 53, type: !32)
!5215 = distinct !DILocation(line: 40, column: 8, scope: !5200)
!5216 = !{i64 1826873}
!5217 = !DILocation(line: 0, scope: !5208, inlinedAt: !5215)
!5218 = !DILocalVariable(name: "key", arg: 1, scope: !5219, file: !5209, line: 84, type: !32)
!5219 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5209, file: !5209, line: 84, type: !5220, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5222)
!5220 = !DISubroutineType(types: !5221)
!5221 = !{null, !32}
!5222 = !{!5218}
!5223 = !DILocation(line: 0, scope: !5219, inlinedAt: !5224)
!5224 = distinct !DILocation(line: 47, column: 2, scope: !5200)
!5225 = !DILocation(line: 95, column: 2, scope: !5219, inlinedAt: !5224)
!5226 = !{i64 1827690}
!5227 = !DILocation(line: 51, column: 18, scope: !5200)
!5228 = !DILocation(line: 53, column: 2, scope: !5200)
!5229 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5230, file: !5230, line: 1609, type: !2913, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !322)
!5230 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5231 = !DILocation(line: 1611, column: 3, scope: !5229)
!5232 = !DILocation(line: 1612, column: 1, scope: !5229)
!5233 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5230, file: !5230, line: 1629, type: !2913, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !322)
!5234 = !DILocation(line: 1631, column: 3, scope: !5233)
!5235 = !DILocation(line: 1632, column: 1, scope: !5233)
!5236 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !171, file: !171, line: 26, type: !177, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !168, retainedNodes: !5237)
!5237 = !{!5238}
!5238 = !DILocalVariable(name: "dev", arg: 1, scope: !5236, file: !171, line: 26, type: !179)
!5239 = !DILocation(line: 0, scope: !5236)
!5240 = !DILocation(line: 68, column: 2, scope: !5236)
!5241 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5242, file: !5242, line: 57, type: !5243, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !5289)
!5242 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5243 = !DISubroutineType(types: !5244)
!5244 = !{null, !32, !5245}
!5245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5246, size: 32)
!5246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5247)
!5247 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2493, line: 141, baseType: !5248)
!5248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2493, line: 97, size: 256, elements: !5249)
!5249 = !{!5250}
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5248, file: !2493, line: 107, baseType: !5251, size: 256)
!5251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2493, line: 98, size: 256, elements: !5252)
!5252 = !{!5253, !5258, !5263, !5268, !5273, !5278, !5283, !5288}
!5253 = !DIDerivedType(tag: DW_TAG_member, scope: !5251, file: !2493, line: 99, baseType: !5254, size: 32)
!5254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5251, file: !2493, line: 99, size: 32, elements: !5255)
!5255 = !{!5256, !5257}
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5254, file: !2493, line: 99, baseType: !121, size: 32)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5254, file: !2493, line: 99, baseType: !121, size: 32)
!5258 = !DIDerivedType(tag: DW_TAG_member, scope: !5251, file: !2493, line: 100, baseType: !5259, size: 32, offset: 32)
!5259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5251, file: !2493, line: 100, size: 32, elements: !5260)
!5260 = !{!5261, !5262}
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5259, file: !2493, line: 100, baseType: !121, size: 32)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5259, file: !2493, line: 100, baseType: !121, size: 32)
!5263 = !DIDerivedType(tag: DW_TAG_member, scope: !5251, file: !2493, line: 101, baseType: !5264, size: 32, offset: 64)
!5264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5251, file: !2493, line: 101, size: 32, elements: !5265)
!5265 = !{!5266, !5267}
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5264, file: !2493, line: 101, baseType: !121, size: 32)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5264, file: !2493, line: 101, baseType: !121, size: 32)
!5268 = !DIDerivedType(tag: DW_TAG_member, scope: !5251, file: !2493, line: 102, baseType: !5269, size: 32, offset: 96)
!5269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5251, file: !2493, line: 102, size: 32, elements: !5270)
!5270 = !{!5271, !5272}
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5269, file: !2493, line: 102, baseType: !121, size: 32)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5269, file: !2493, line: 102, baseType: !121, size: 32)
!5273 = !DIDerivedType(tag: DW_TAG_member, scope: !5251, file: !2493, line: 103, baseType: !5274, size: 32, offset: 128)
!5274 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5251, file: !2493, line: 103, size: 32, elements: !5275)
!5275 = !{!5276, !5277}
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5274, file: !2493, line: 103, baseType: !121, size: 32)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5274, file: !2493, line: 103, baseType: !121, size: 32)
!5278 = !DIDerivedType(tag: DW_TAG_member, scope: !5251, file: !2493, line: 104, baseType: !5279, size: 32, offset: 160)
!5279 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5251, file: !2493, line: 104, size: 32, elements: !5280)
!5280 = !{!5281, !5282}
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5279, file: !2493, line: 104, baseType: !121, size: 32)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5279, file: !2493, line: 104, baseType: !121, size: 32)
!5283 = !DIDerivedType(tag: DW_TAG_member, scope: !5251, file: !2493, line: 105, baseType: !5284, size: 32, offset: 192)
!5284 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5251, file: !2493, line: 105, size: 32, elements: !5285)
!5285 = !{!5286, !5287}
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5284, file: !2493, line: 105, baseType: !121, size: 32)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5284, file: !2493, line: 105, baseType: !121, size: 32)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5251, file: !2493, line: 106, baseType: !121, size: 32, offset: 224)
!5289 = !{!5290, !5291}
!5290 = !DILocalVariable(name: "reason", arg: 1, scope: !5241, file: !5242, line: 57, type: !32)
!5291 = !DILocalVariable(name: "esf", arg: 2, scope: !5241, file: !5242, line: 57, type: !5245)
!5292 = !DILocation(line: 0, scope: !5241)
!5293 = !DILocation(line: 63, column: 2, scope: !5241)
!5294 = !DILocation(line: 64, column: 1, scope: !5241)
!5295 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5242, file: !5242, line: 82, type: !5296, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !5311)
!5296 = !DISubroutineType(types: !5297)
!5297 = !{null, !5245, !5298}
!5298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5299, size: 32)
!5299 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !284, line: 37, baseType: !5300)
!5300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !5301)
!5301 = !{!5302, !5303, !5304, !5305, !5306, !5307, !5308, !5309, !5310}
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5300, file: !284, line: 26, baseType: !121, size: 32)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5300, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5300, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5300, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5300, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5300, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5300, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5300, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5300, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!5311 = !{!5312, !5313, !5314}
!5312 = !DILocalVariable(name: "esf", arg: 1, scope: !5295, file: !5242, line: 82, type: !5245)
!5313 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !5295, file: !5242, line: 82, type: !5298)
!5314 = !DILocalVariable(name: "reason", scope: !5295, file: !5242, line: 88, type: !32)
!5315 = !DILocation(line: 0, scope: !5295)
!5316 = !DILocation(line: 88, column: 35, scope: !5295)
!5317 = !DILocation(line: 108, column: 2, scope: !5295)
!5318 = !DILocation(line: 131, column: 1, scope: !5295)
!5319 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5242, file: !5242, line: 133, type: !5320, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2373, retainedNodes: !5322)
!5320 = !DISubroutineType(types: !5321)
!5321 = !{null, !102}
!5322 = !{!5323, !5324, !5325}
!5323 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !5319, file: !5242, line: 133, type: !102)
!5324 = !DILocalVariable(name: "ssf_contents", scope: !5319, file: !5242, line: 135, type: !687)
!5325 = !DILocalVariable(name: "oops_esf", scope: !5319, file: !5242, line: 136, type: !5247)
!5326 = !DILocation(line: 0, scope: !5319)
!5327 = !DILocation(line: 136, column: 2, scope: !5319)
!5328 = !DILocation(line: 136, column: 15, scope: !5319)
!5329 = !DILocation(line: 139, column: 22, scope: !5319)
!5330 = !DILocation(line: 139, column: 17, scope: !5319)
!5331 = !DILocation(line: 139, column: 20, scope: !5319)
!5332 = !DILocation(line: 141, column: 2, scope: !5319)
!5333 = !DILocation(line: 142, column: 2, scope: !5319)
!5334 = distinct !DISubprogram(name: "arch_irq_enable", scope: !5335, file: !5335, line: 40, type: !5220, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !5336)
!5335 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5336 = !{!5337}
!5337 = !DILocalVariable(name: "irq", arg: 1, scope: !5334, file: !5335, line: 40, type: !32)
!5338 = !DILocation(line: 0, scope: !5334)
!5339 = !DILocation(line: 42, column: 2, scope: !5334)
!5340 = !DILocation(line: 43, column: 1, scope: !5334)
!5341 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !356, file: !356, line: 1684, type: !5342, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !5344)
!5342 = !DISubroutineType(types: !5343)
!5343 = !{null, !592}
!5344 = !{!5345}
!5345 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5341, file: !356, line: 1684, type: !592)
!5346 = !DILocation(line: 0, scope: !5341)
!5347 = !DILocation(line: 1686, column: 23, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5341, file: !356, line: 1686, column: 7)
!5349 = !DILocation(line: 1686, column: 7, scope: !5341)
!5350 = !DILocation(line: 1688, column: 5, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5348, file: !356, line: 1687, column: 3)
!5352 = !{i64 2150355455}
!5353 = !DILocation(line: 1689, column: 81, scope: !5351)
!5354 = !DILocation(line: 1689, column: 60, scope: !5351)
!5355 = !DILocation(line: 1689, column: 34, scope: !5351)
!5356 = !DILocation(line: 1689, column: 5, scope: !5351)
!5357 = !DILocation(line: 1689, column: 43, scope: !5351)
!5358 = !DILocation(line: 1690, column: 5, scope: !5351)
!5359 = !{i64 2150355569}
!5360 = !DILocation(line: 1691, column: 3, scope: !5351)
!5361 = !DILocation(line: 1692, column: 1, scope: !5341)
!5362 = distinct !DISubprogram(name: "arch_irq_disable", scope: !5335, file: !5335, line: 45, type: !5220, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !5363)
!5363 = !{!5364}
!5364 = !DILocalVariable(name: "irq", arg: 1, scope: !5362, file: !5335, line: 45, type: !32)
!5365 = !DILocation(line: 0, scope: !5362)
!5366 = !DILocation(line: 47, column: 2, scope: !5362)
!5367 = !DILocation(line: 48, column: 1, scope: !5362)
!5368 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !356, file: !356, line: 1722, type: !5342, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !5369)
!5369 = !{!5370}
!5370 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5368, file: !356, line: 1722, type: !592)
!5371 = !DILocation(line: 0, scope: !5368)
!5372 = !DILocation(line: 1724, column: 23, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5368, file: !356, line: 1724, column: 7)
!5374 = !DILocation(line: 1724, column: 7, scope: !5368)
!5375 = !DILocation(line: 1726, column: 81, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5373, file: !356, line: 1725, column: 3)
!5377 = !DILocation(line: 1726, column: 60, scope: !5376)
!5378 = !DILocation(line: 1726, column: 34, scope: !5376)
!5379 = !DILocation(line: 1726, column: 5, scope: !5376)
!5380 = !DILocation(line: 1726, column: 43, scope: !5376)
!5381 = !DILocation(line: 271, column: 3, scope: !5382, inlinedAt: !5384)
!5382 = distinct !DISubprogram(name: "__DSB", scope: !5383, file: !5383, line: 269, type: !2913, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !322)
!5383 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5384 = distinct !DILocation(line: 1727, column: 5, scope: !5376)
!5385 = !{i64 2809838}
!5386 = !DILocation(line: 260, column: 3, scope: !5387, inlinedAt: !5388)
!5387 = distinct !DISubprogram(name: "__ISB", scope: !5383, file: !5383, line: 258, type: !2913, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !322)
!5388 = distinct !DILocation(line: 1728, column: 5, scope: !5376)
!5389 = !{i64 2809555}
!5390 = !DILocation(line: 1729, column: 3, scope: !5376)
!5391 = !DILocation(line: 1730, column: 1, scope: !5368)
!5392 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !5335, file: !5335, line: 50, type: !5393, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !5395)
!5393 = !DISubroutineType(types: !5394)
!5394 = !{!103, !32}
!5395 = !{!5396}
!5396 = !DILocalVariable(name: "irq", arg: 1, scope: !5392, file: !5335, line: 50, type: !32)
!5397 = !DILocation(line: 0, scope: !5392)
!5398 = !DILocation(line: 52, column: 20, scope: !5392)
!5399 = !DILocation(line: 52, column: 9, scope: !5392)
!5400 = !DILocation(line: 52, column: 41, scope: !5392)
!5401 = !DILocation(line: 52, column: 39, scope: !5392)
!5402 = !DILocation(line: 52, column: 2, scope: !5392)
!5403 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !5335, file: !5335, line: 64, type: !5404, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !5406)
!5404 = !DISubroutineType(types: !5405)
!5405 = !{null, !32, !32, !121}
!5406 = !{!5407, !5408, !5409}
!5407 = !DILocalVariable(name: "irq", arg: 1, scope: !5403, file: !5335, line: 64, type: !32)
!5408 = !DILocalVariable(name: "prio", arg: 2, scope: !5403, file: !5335, line: 64, type: !32)
!5409 = !DILocalVariable(name: "flags", arg: 3, scope: !5403, file: !5335, line: 64, type: !121)
!5410 = !DILocation(line: 0, scope: !5403)
!5411 = !DILocation(line: 83, column: 8, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5413, file: !5335, line: 82, column: 9)
!5413 = distinct !DILexicalBlock(scope: !5403, file: !5335, line: 76, column: 6)
!5414 = !DILocation(line: 95, column: 2, scope: !5403)
!5415 = !DILocation(line: 96, column: 1, scope: !5403)
!5416 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !5417, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !5419)
!5417 = !DISubroutineType(types: !5418)
!5418 = !{null, !592, !121}
!5419 = !{!5420, !5421}
!5420 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5416, file: !356, line: 1814, type: !592)
!5421 = !DILocalVariable(name: "priority", arg: 2, scope: !5416, file: !356, line: 1814, type: !121)
!5422 = !DILocation(line: 0, scope: !5416)
!5423 = !DILocation(line: 0, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5416, file: !356, line: 1816, column: 7)
!5425 = !DILocation(line: 1816, column: 7, scope: !5416)
!5426 = !DILocation(line: 1824, column: 1, scope: !5416)
!5427 = distinct !DISubprogram(name: "z_irq_spurious", scope: !5335, file: !5335, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !5428)
!5428 = !{!5429}
!5429 = !DILocalVariable(name: "unused", arg: 1, scope: !5427, file: !5335, line: 155, type: !13)
!5430 = !DILocation(line: 0, scope: !5427)
!5431 = !DILocation(line: 159, column: 2, scope: !5427)
!5432 = !DILocation(line: 160, column: 1, scope: !5427)
!5433 = distinct !DISubprogram(name: "z_arm_nmi", scope: !5434, file: !5434, line: 87, type: !2913, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2430, retainedNodes: !322)
!5434 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5435 = !DILocation(line: 89, column: 2, scope: !5433)
!5436 = !DILocation(line: 90, column: 2, scope: !5433)
!5437 = !DILocation(line: 91, column: 1, scope: !5433)
!5438 = !DISubprogram(name: "z_SysNmiOnReset", scope: !5434, file: !5434, line: 23, type: !2913, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!5439 = !DISubprogram(name: "z_arm_int_exit", scope: !5440, file: !5440, line: 153, type: !2913, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!5440 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5441 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !5442, file: !5442, line: 256, type: !2913, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !322)
!5442 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5443 = !DILocation(line: 258, column: 2, scope: !5441)
!5444 = !DILocation(line: 260, column: 2, scope: !5441)
!5445 = !DILocation(line: 262, column: 2, scope: !5441)
!5446 = !DILocation(line: 263, column: 2, scope: !5441)
!5447 = !DILocation(line: 267, column: 2, scope: !5441)
!5448 = !DILocation(line: 268, column: 2, scope: !5441)
!5449 = distinct !DISubprogram(name: "relocate_vector_table", scope: !5442, file: !5442, line: 53, type: !2913, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !322)
!5450 = !DILocation(line: 55, column: 12, scope: !5449)
!5451 = !DILocation(line: 271, column: 3, scope: !5452, inlinedAt: !5453)
!5452 = distinct !DISubprogram(name: "__DSB", scope: !5383, file: !5383, line: 269, type: !2913, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !322)
!5453 = distinct !DILocation(line: 56, column: 2, scope: !5449)
!5454 = !{i64 2808509}
!5455 = !DILocation(line: 260, column: 3, scope: !5456, inlinedAt: !5457)
!5456 = distinct !DISubprogram(name: "__ISB", scope: !5383, file: !5383, line: 258, type: !2913, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !322)
!5457 = distinct !DILocation(line: 57, column: 2, scope: !5449)
!5458 = !{i64 2808226}
!5459 = !DILocation(line: 58, column: 1, scope: !5449)
!5460 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !5442, file: !5442, line: 96, type: !2913, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !322)
!5461 = !DILocation(line: 103, column: 13, scope: !5460)
!5462 = !DILocation(line: 975, column: 3, scope: !5463, inlinedAt: !5468)
!5463 = distinct !DISubprogram(name: "__get_CONTROL", scope: !5383, file: !5383, line: 971, type: !5464, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !5466)
!5464 = !DISubroutineType(types: !5465)
!5465 = !{!121}
!5466 = !{!5467}
!5467 = !DILocalVariable(name: "result", scope: !5463, file: !5383, line: 973, type: !121)
!5468 = distinct !DILocation(line: 189, column: 16, scope: !5460)
!5469 = !{i64 2829339}
!5470 = !DILocation(line: 0, scope: !5463, inlinedAt: !5468)
!5471 = !DILocation(line: 189, column: 32, scope: !5460)
!5472 = !DILocalVariable(name: "control", arg: 1, scope: !5473, file: !5383, line: 1001, type: !121)
!5473 = distinct !DISubprogram(name: "__set_CONTROL", scope: !5383, file: !5383, line: 1001, type: !5474, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2432, retainedNodes: !5476)
!5474 = !DISubroutineType(types: !5475)
!5475 = !{null, !121}
!5476 = !{!5472}
!5477 = !DILocation(line: 0, scope: !5473, inlinedAt: !5478)
!5478 = distinct !DILocation(line: 189, column: 2, scope: !5460)
!5479 = !DILocation(line: 1003, column: 3, scope: !5473, inlinedAt: !5478)
!5480 = !{i64 2830059}
!5481 = !DILocation(line: 260, column: 3, scope: !5456, inlinedAt: !5482)
!5482 = distinct !DILocation(line: 1004, column: 3, scope: !5473, inlinedAt: !5478)
!5483 = !DILocation(line: 191, column: 1, scope: !5460)
!5484 = distinct !DISubprogram(name: "arch_swap", scope: !5485, file: !5485, line: 33, type: !5393, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !5486)
!5485 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5486 = !{!5487}
!5487 = !DILocalVariable(name: "key", arg: 1, scope: !5484, file: !5485, line: 33, type: !32)
!5488 = !DILocation(line: 0, scope: !5484)
!5489 = !DILocation(line: 36, column: 2, scope: !5484)
!5490 = !DILocation(line: 36, column: 17, scope: !5484)
!5491 = !DILocation(line: 36, column: 25, scope: !5484)
!5492 = !DILocation(line: 37, column: 37, scope: !5484)
!5493 = !DILocation(line: 37, column: 17, scope: !5484)
!5494 = !DILocation(line: 37, column: 35, scope: !5484)
!5495 = !DILocation(line: 41, column: 12, scope: !5484)
!5496 = !DILocalVariable(name: "key", arg: 1, scope: !5497, file: !5209, line: 84, type: !32)
!5497 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5209, file: !5209, line: 84, type: !5220, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !5498)
!5498 = !{!5496}
!5499 = !DILocation(line: 0, scope: !5497, inlinedAt: !5500)
!5500 = distinct !DILocation(line: 44, column: 2, scope: !5484)
!5501 = !DILocation(line: 95, column: 2, scope: !5497, inlinedAt: !5500)
!5502 = !{i64 1947705}
!5503 = !DILocation(line: 53, column: 9, scope: !5484)
!5504 = !DILocation(line: 53, column: 24, scope: !5484)
!5505 = !DILocation(line: 53, column: 2, scope: !5484)
!5506 = distinct !DISubprogram(name: "arch_new_thread", scope: !5507, file: !5507, line: 56, type: !5508, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2488, retainedNodes: !5615)
!5507 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5508 = !DISubroutineType(types: !5509)
!5509 = !{null, !5510, !5610, !957, !3246, !102, !102, !102}
!5510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5511, size: 32)
!5511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !5512)
!5512 = !{!5513, !5571, !5583, !5584, !5585, !5586, !5592, !5605}
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5511, file: !211, line: 247, baseType: !5514, size: 384)
!5514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !5515)
!5515 = !{!5516, !5540, !5547, !5548, !5549, !5558, !5559, !5560}
!5516 = !DIDerivedType(tag: DW_TAG_member, scope: !5514, file: !211, line: 60, baseType: !5517, size: 64)
!5517 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5514, file: !211, line: 60, size: 64, elements: !5518)
!5518 = !{!5519, !5534}
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5517, file: !211, line: 61, baseType: !5520, size: 64)
!5520 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !5521)
!5521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !5522)
!5522 = !{!5523, !5529}
!5523 = !DIDerivedType(tag: DW_TAG_member, scope: !5521, file: !221, line: 38, baseType: !5524, size: 32)
!5524 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5521, file: !221, line: 38, size: 32, elements: !5525)
!5525 = !{!5526, !5528}
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5524, file: !221, line: 39, baseType: !5527, size: 32)
!5527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5521, size: 32)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5524, file: !221, line: 40, baseType: !5527, size: 32)
!5529 = !DIDerivedType(tag: DW_TAG_member, scope: !5521, file: !221, line: 42, baseType: !5530, size: 32, offset: 32)
!5530 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5521, file: !221, line: 42, size: 32, elements: !5531)
!5531 = !{!5532, !5533}
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5530, file: !221, line: 43, baseType: !5527, size: 32)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5530, file: !221, line: 44, baseType: !5527, size: 32)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5517, file: !211, line: 62, baseType: !5535, size: 64)
!5535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !5536)
!5536 = !{!5537}
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5535, file: !237, line: 50, baseType: !5538, size: 64)
!5538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5539, size: 64, elements: !242)
!5539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5535, size: 32)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5514, file: !211, line: 68, baseType: !5541, size: 32, offset: 64)
!5541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5542, size: 32)
!5542 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !5543)
!5543 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !5544)
!5544 = !{!5545}
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5543, file: !247, line: 232, baseType: !5546, size: 64)
!5546 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !5521)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5514, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5514, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!5549 = !DIDerivedType(tag: DW_TAG_member, scope: !5514, file: !211, line: 90, baseType: !5550, size: 16, offset: 112)
!5550 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5514, file: !211, line: 90, size: 16, elements: !5551)
!5551 = !{!5552, !5557}
!5552 = !DIDerivedType(tag: DW_TAG_member, scope: !5550, file: !211, line: 91, baseType: !5553, size: 16)
!5553 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5550, file: !211, line: 91, size: 16, elements: !5554)
!5554 = !{!5555, !5556}
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5553, file: !211, line: 96, baseType: !261, size: 8)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5553, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5550, file: !211, line: 100, baseType: !265, size: 16)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5514, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5514, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5514, file: !211, line: 131, baseType: !5561, size: 192, offset: 192)
!5561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !5562)
!5562 = !{!5563, !5564, !5570}
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5561, file: !247, line: 245, baseType: !5520, size: 64)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5561, file: !247, line: 246, baseType: !5565, size: 32, offset: 64)
!5565 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !5566)
!5566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5567, size: 32)
!5567 = !DISubroutineType(types: !5568)
!5568 = !{null, !5569}
!5569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5561, size: 32)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5561, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5511, file: !211, line: 250, baseType: !5572, size: 288, offset: 384)
!5572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !5573)
!5573 = !{!5574, !5575, !5576, !5577, !5578, !5579, !5580, !5581, !5582}
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5572, file: !284, line: 26, baseType: !121, size: 32)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5572, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5572, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5572, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5572, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5572, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5572, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5572, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5572, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5511, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5511, file: !211, line: 256, baseType: !5542, size: 64, offset: 704)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5511, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5511, file: !211, line: 300, baseType: !5587, size: 96, offset: 800)
!5587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !5588)
!5588 = !{!5589, !5590, !5591}
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5587, file: !211, line: 153, baseType: !22, size: 32)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5587, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5587, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5511, file: !211, line: 325, baseType: !5593, size: 32, offset: 896)
!5593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5594, size: 32)
!5594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !5595)
!5595 = !{!5596, !5602, !5603}
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5594, file: !307, line: 5074, baseType: !5597, size: 96)
!5597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !5598)
!5598 = !{!5599, !5600, !5601}
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5597, file: !311, line: 57, baseType: !314, size: 32)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5597, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5597, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5594, file: !307, line: 5075, baseType: !5542, size: 64, offset: 96)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5594, file: !307, line: 5076, baseType: !5604, offset: 160)
!5604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5511, file: !211, line: 343, baseType: !5606, size: 64, offset: 928)
!5606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !5607)
!5607 = !{!5608, !5609}
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5606, file: !284, line: 63, baseType: !121, size: 32)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5606, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!5610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5611, size: 32)
!5611 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3247, line: 44, baseType: !5612)
!5612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1828, line: 47, size: 8, elements: !5613)
!5613 = !{!5614}
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5612, file: !1828, line: 48, baseType: !146, size: 8)
!5615 = !{!5616, !5617, !5618, !5619, !5620, !5621, !5622, !5623}
!5616 = !DILocalVariable(name: "thread", arg: 1, scope: !5506, file: !5507, line: 56, type: !5510)
!5617 = !DILocalVariable(name: "stack", arg: 2, scope: !5506, file: !5507, line: 56, type: !5610)
!5618 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !5506, file: !5507, line: 57, type: !957)
!5619 = !DILocalVariable(name: "entry", arg: 4, scope: !5506, file: !5507, line: 57, type: !3246)
!5620 = !DILocalVariable(name: "p1", arg: 5, scope: !5506, file: !5507, line: 58, type: !102)
!5621 = !DILocalVariable(name: "p2", arg: 6, scope: !5506, file: !5507, line: 58, type: !102)
!5622 = !DILocalVariable(name: "p3", arg: 7, scope: !5506, file: !5507, line: 58, type: !102)
!5623 = !DILocalVariable(name: "iframe", scope: !5506, file: !5507, line: 60, type: !2491)
!5624 = !DILocation(line: 0, scope: !5506)
!5625 = !DILocation(line: 85, column: 11, scope: !5506)
!5626 = !DILocation(line: 93, column: 10, scope: !5506)
!5627 = !DILocation(line: 98, column: 13, scope: !5506)
!5628 = !DILocation(line: 100, column: 15, scope: !5506)
!5629 = !DILocation(line: 100, column: 10, scope: !5506)
!5630 = !DILocation(line: 100, column: 13, scope: !5506)
!5631 = !DILocation(line: 101, column: 15, scope: !5506)
!5632 = !DILocation(line: 101, column: 10, scope: !5506)
!5633 = !DILocation(line: 101, column: 13, scope: !5506)
!5634 = !DILocation(line: 102, column: 15, scope: !5506)
!5635 = !DILocation(line: 102, column: 10, scope: !5506)
!5636 = !DILocation(line: 102, column: 13, scope: !5506)
!5637 = !DILocation(line: 103, column: 15, scope: !5506)
!5638 = !DILocation(line: 103, column: 10, scope: !5506)
!5639 = !DILocation(line: 103, column: 13, scope: !5506)
!5640 = !DILocation(line: 106, column: 10, scope: !5506)
!5641 = !DILocation(line: 106, column: 15, scope: !5506)
!5642 = !DILocation(line: 122, column: 29, scope: !5506)
!5643 = !DILocation(line: 122, column: 23, scope: !5506)
!5644 = !DILocation(line: 122, column: 27, scope: !5506)
!5645 = !DILocation(line: 123, column: 15, scope: !5506)
!5646 = !DILocation(line: 123, column: 23, scope: !5506)
!5647 = !DILocation(line: 143, column: 1, scope: !5506)
!5648 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !5507, file: !5507, line: 385, type: !5649, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2488, retainedNodes: !5652)
!5649 = !DISubroutineType(types: !5650)
!5650 = !{!121, !5651, !5651}
!5651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!5652 = !{!5653, !5654, !5655, !5658}
!5653 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !5648, file: !5507, line: 385, type: !5651)
!5654 = !DILocalVariable(name: "psp", arg: 2, scope: !5648, file: !5507, line: 385, type: !5651)
!5655 = !DILocalVariable(name: "thread", scope: !5648, file: !5507, line: 388, type: !5656)
!5656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5657, size: 32)
!5657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5511)
!5658 = !DILocalVariable(name: "guard_len", scope: !5648, file: !5507, line: 405, type: !121)
!5659 = !DILocation(line: 0, scope: !5648)
!5660 = !DILocation(line: 388, column: 34, scope: !5648)
!5661 = !DILocation(line: 390, column: 13, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5648, file: !5507, line: 390, column: 6)
!5663 = !DILocation(line: 390, column: 6, scope: !5648)
!5664 = !DILocation(line: 438, column: 6, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5648, file: !5507, line: 438, column: 6)
!5666 = !DILocation(line: 438, column: 6, scope: !5648)
!5667 = !DILocation(line: 442, column: 3, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5665, file: !5507, line: 440, column: 22)
!5669 = !DILocation(line: 455, column: 1, scope: !5648)
!5670 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !5507, file: !5507, line: 530, type: !5671, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2488, retainedNodes: !5673)
!5671 = !DISubroutineType(types: !5672)
!5672 = !{null, !5510, !957, !3246}
!5673 = !{!5674, !5675, !5676}
!5674 = !DILocalVariable(name: "main_thread", arg: 1, scope: !5670, file: !5507, line: 530, type: !5510)
!5675 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !5670, file: !5507, line: 530, type: !957)
!5676 = !DILocalVariable(name: "_main", arg: 3, scope: !5670, file: !5507, line: 531, type: !3246)
!5677 = !DILocation(line: 0, scope: !5670)
!5678 = !DILocation(line: 535, column: 11, scope: !5670)
!5679 = !DILocation(line: 560, column: 2, scope: !5670)
!5680 = !DILocation(line: 576, column: 2, scope: !5670)
!5681 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!5682 = !DILocation(line: 603, column: 2, scope: !5670)
!5683 = distinct !DISubprogram(name: "z_arm_fault", scope: !5684, file: !5684, line: 1036, type: !5685, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !5700)
!5684 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5685 = !DISubroutineType(types: !5686)
!5686 = !{null, !121, !121, !121, !5687}
!5687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5688, size: 32)
!5688 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !284, line: 37, baseType: !5689)
!5689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !5690)
!5690 = !{!5691, !5692, !5693, !5694, !5695, !5696, !5697, !5698, !5699}
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5689, file: !284, line: 26, baseType: !121, size: 32)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5689, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5689, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5689, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5689, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5689, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5689, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5689, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5689, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!5700 = !{!5701, !5702, !5703, !5704, !5705, !5706, !5707, !5708, !5709, !5710}
!5701 = !DILocalVariable(name: "msp", arg: 1, scope: !5683, file: !5684, line: 1036, type: !121)
!5702 = !DILocalVariable(name: "psp", arg: 2, scope: !5683, file: !5684, line: 1036, type: !121)
!5703 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5683, file: !5684, line: 1036, type: !121)
!5704 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !5683, file: !5684, line: 1037, type: !5687)
!5705 = !DILocalVariable(name: "reason", scope: !5683, file: !5684, line: 1039, type: !121)
!5706 = !DILocalVariable(name: "fault", scope: !5683, file: !5684, line: 1040, type: !103)
!5707 = !DILocalVariable(name: "recoverable", scope: !5683, file: !5684, line: 1041, type: !157)
!5708 = !DILocalVariable(name: "nested_exc", scope: !5683, file: !5684, line: 1041, type: !157)
!5709 = !DILocalVariable(name: "esf", scope: !5683, file: !5684, line: 1042, type: !2559)
!5710 = !DILocalVariable(name: "esf_copy", scope: !5683, file: !5684, line: 1047, type: !2560)
!5711 = !DILocation(line: 0, scope: !5683)
!5712 = !DILocation(line: 1040, column: 19, scope: !5683)
!5713 = !DILocation(line: 1040, column: 24, scope: !5683)
!5714 = !DILocation(line: 1041, column: 2, scope: !5683)
!5715 = !DILocation(line: 1047, column: 2, scope: !5683)
!5716 = !DILocation(line: 1047, column: 15, scope: !5683)
!5717 = !DILocalVariable(name: "key", arg: 1, scope: !5718, file: !5209, line: 84, type: !32)
!5718 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5209, file: !5209, line: 84, type: !5220, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !5719)
!5719 = !{!5717}
!5720 = !DILocation(line: 0, scope: !5718, inlinedAt: !5721)
!5721 = distinct !DILocation(line: 1050, column: 2, scope: !5683)
!5722 = !DILocation(line: 95, column: 2, scope: !5718, inlinedAt: !5721)
!5723 = !{i64 1980949}
!5724 = !DILocation(line: 1055, column: 9, scope: !5683)
!5725 = !DILocation(line: 1063, column: 11, scope: !5683)
!5726 = !DILocation(line: 1064, column: 6, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5683, file: !5684, line: 1064, column: 6)
!5728 = !{i8 0, i8 2}
!5729 = !DILocation(line: 1064, column: 6, scope: !5683)
!5730 = !DILocation(line: 1070, column: 20, scope: !5683)
!5731 = !DILocation(line: 1070, column: 2, scope: !5683)
!5732 = !DILocation(line: 1089, column: 6, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5683, file: !5684, line: 1089, column: 6)
!5734 = !DILocation(line: 0, scope: !5733)
!5735 = !DILocation(line: 1089, column: 6, scope: !5683)
!5736 = !DILocation(line: 1090, column: 28, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5738, file: !5684, line: 1090, column: 7)
!5738 = distinct !DILexicalBlock(scope: !5733, file: !5684, line: 1089, column: 18)
!5739 = !DILocation(line: 1090, column: 44, scope: !5737)
!5740 = !DILocation(line: 1090, column: 7, scope: !5738)
!5741 = !DILocation(line: 1091, column: 24, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5737, file: !5684, line: 1090, column: 50)
!5743 = !DILocation(line: 1092, column: 3, scope: !5742)
!5744 = !DILocation(line: 1094, column: 23, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5733, file: !5684, line: 1093, column: 9)
!5746 = !DILocation(line: 1097, column: 2, scope: !5683)
!5747 = !DILocation(line: 1098, column: 1, scope: !5683)
!5748 = distinct !DISubprogram(name: "get_esf", scope: !5684, file: !5684, line: 894, type: !5749, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !5752)
!5749 = !DISubroutineType(types: !5750)
!5750 = !{!2559, !121, !121, !121, !5751}
!5751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!5752 = !{!5753, !5754, !5755, !5756, !5757, !5758}
!5753 = !DILocalVariable(name: "msp", arg: 1, scope: !5748, file: !5684, line: 894, type: !121)
!5754 = !DILocalVariable(name: "psp", arg: 2, scope: !5748, file: !5684, line: 894, type: !121)
!5755 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5748, file: !5684, line: 894, type: !121)
!5756 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !5748, file: !5684, line: 895, type: !5751)
!5757 = !DILocalVariable(name: "alternative_state_exc", scope: !5748, file: !5684, line: 897, type: !157)
!5758 = !DILocalVariable(name: "ptr_esf", scope: !5748, file: !5684, line: 898, type: !2559)
!5759 = !DILocation(line: 0, scope: !5748)
!5760 = !DILocation(line: 900, column: 14, scope: !5748)
!5761 = !DILocation(line: 902, column: 49, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5748, file: !5684, line: 902, column: 6)
!5763 = !DILocation(line: 902, column: 6, scope: !5748)
!5764 = !DILocation(line: 983, column: 18, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5748, file: !5684, line: 983, column: 6)
!5766 = !DILocation(line: 991, column: 7, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5768, file: !5684, line: 990, column: 30)
!5768 = distinct !DILexicalBlock(scope: !5748, file: !5684, line: 990, column: 6)
!5769 = !DILocation(line: 998, column: 16, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5771, file: !5684, line: 995, column: 10)
!5771 = distinct !DILexicalBlock(scope: !5767, file: !5684, line: 991, column: 7)
!5772 = !DILocation(line: 1002, column: 2, scope: !5748)
!5773 = !DILocation(line: 1003, column: 1, scope: !5748)
!5774 = distinct !DISubprogram(name: "fault_handle", scope: !5684, file: !5684, line: 786, type: !5775, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !5777)
!5775 = !DISubroutineType(types: !5776)
!5776 = !{!121, !2559, !103, !5751}
!5777 = !{!5778, !5779, !5780, !5781}
!5778 = !DILocalVariable(name: "esf", arg: 1, scope: !5774, file: !5684, line: 786, type: !2559)
!5779 = !DILocalVariable(name: "fault", arg: 2, scope: !5774, file: !5684, line: 786, type: !103)
!5780 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5774, file: !5684, line: 786, type: !5751)
!5781 = !DILocalVariable(name: "reason", scope: !5774, file: !5684, line: 788, type: !121)
!5782 = !DILocation(line: 0, scope: !5774)
!5783 = !DILocation(line: 790, column: 15, scope: !5774)
!5784 = !DILocation(line: 792, column: 2, scope: !5774)
!5785 = !DILocation(line: 794, column: 12, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5774, file: !5684, line: 792, column: 17)
!5787 = !DILocation(line: 795, column: 3, scope: !5786)
!5788 = !DILocation(line: 800, column: 12, scope: !5786)
!5789 = !DILocation(line: 801, column: 3, scope: !5786)
!5790 = !DILocation(line: 803, column: 12, scope: !5786)
!5791 = !DILocation(line: 804, column: 3, scope: !5786)
!5792 = !DILocation(line: 806, column: 12, scope: !5786)
!5793 = !DILocation(line: 807, column: 3, scope: !5786)
!5794 = !DILocation(line: 814, column: 3, scope: !5786)
!5795 = !DILocation(line: 815, column: 3, scope: !5786)
!5796 = !DILocation(line: 829, column: 2, scope: !5774)
!5797 = distinct !DISubprogram(name: "hard_fault", scope: !5684, file: !5684, line: 709, type: !5798, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !5800)
!5798 = !DISubroutineType(types: !5799)
!5799 = !{!121, !2559, !5751}
!5800 = !{!5801, !5802, !5803}
!5801 = !DILocalVariable(name: "esf", arg: 1, scope: !5797, file: !5684, line: 709, type: !2559)
!5802 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5797, file: !5684, line: 709, type: !5751)
!5803 = !DILocalVariable(name: "reason", scope: !5797, file: !5684, line: 711, type: !121)
!5804 = !DILocation(line: 0, scope: !5797)
!5805 = !DILocation(line: 732, column: 15, scope: !5797)
!5806 = !DILocation(line: 734, column: 12, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5797, file: !5684, line: 734, column: 6)
!5808 = !DILocation(line: 734, column: 17, scope: !5807)
!5809 = !DILocation(line: 734, column: 41, scope: !5807)
!5810 = !DILocation(line: 734, column: 6, scope: !5797)
!5811 = !DILocation(line: 736, column: 19, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5807, file: !5684, line: 736, column: 13)
!5813 = !DILocation(line: 736, column: 49, scope: !5812)
!5814 = !DILocation(line: 736, column: 13, scope: !5807)
!5815 = !DILocation(line: 738, column: 19, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5812, file: !5684, line: 738, column: 13)
!5817 = !DILocation(line: 738, column: 24, scope: !5816)
!5818 = !DILocation(line: 738, column: 47, scope: !5816)
!5819 = !DILocation(line: 738, column: 13, scope: !5812)
!5820 = !DILocation(line: 740, column: 7, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5822, file: !5684, line: 740, column: 7)
!5822 = distinct !DILexicalBlock(scope: !5816, file: !5684, line: 738, column: 53)
!5823 = !DILocation(line: 740, column: 7, scope: !5822)
!5824 = !DILocation(line: 742, column: 24, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5821, file: !5684, line: 740, column: 38)
!5826 = !DILocation(line: 743, column: 3, scope: !5825)
!5827 = !DILocation(line: 743, column: 20, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5821, file: !5684, line: 743, column: 14)
!5829 = !DILocation(line: 743, column: 25, scope: !5828)
!5830 = !DILocation(line: 743, column: 52, scope: !5828)
!5831 = !DILocation(line: 743, column: 14, scope: !5821)
!5832 = !DILocation(line: 744, column: 13, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5828, file: !5684, line: 743, column: 58)
!5834 = !DILocation(line: 745, column: 3, scope: !5833)
!5835 = !DILocation(line: 745, column: 20, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5828, file: !5684, line: 745, column: 14)
!5837 = !DILocation(line: 745, column: 25, scope: !5836)
!5838 = !DILocation(line: 745, column: 52, scope: !5836)
!5839 = !DILocation(line: 745, column: 14, scope: !5828)
!5840 = !DILocation(line: 746, column: 13, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5836, file: !5684, line: 745, column: 58)
!5842 = !DILocation(line: 747, column: 3, scope: !5841)
!5843 = !DILocation(line: 747, column: 20, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5836, file: !5684, line: 747, column: 14)
!5845 = !DILocation(line: 747, column: 52, scope: !5844)
!5846 = !DILocation(line: 747, column: 14, scope: !5836)
!5847 = !DILocation(line: 748, column: 13, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5844, file: !5684, line: 747, column: 58)
!5849 = !DILocation(line: 753, column: 3, scope: !5848)
!5850 = !DILocation(line: 766, column: 2, scope: !5797)
!5851 = distinct !DISubprogram(name: "mem_manage_fault", scope: !5684, file: !5684, line: 229, type: !5775, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !5852)
!5852 = !{!5853, !5854, !5855, !5856, !5857, !5858, !5861}
!5853 = !DILocalVariable(name: "esf", arg: 1, scope: !5851, file: !5684, line: 229, type: !2559)
!5854 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5851, file: !5684, line: 229, type: !103)
!5855 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5851, file: !5684, line: 230, type: !5751)
!5856 = !DILocalVariable(name: "reason", scope: !5851, file: !5684, line: 232, type: !121)
!5857 = !DILocalVariable(name: "mmfar", scope: !5851, file: !5684, line: 233, type: !121)
!5858 = !DILocalVariable(name: "temp", scope: !5859, file: !5684, line: 254, type: !121)
!5859 = distinct !DILexicalBlock(scope: !5860, file: !5684, line: 244, column: 48)
!5860 = distinct !DILexicalBlock(scope: !5851, file: !5684, line: 244, column: 6)
!5861 = !DILocalVariable(name: "min_stack_ptr", scope: !5862, file: !5684, line: 309, type: !121)
!5862 = distinct !DILexicalBlock(scope: !5863, file: !5684, line: 308, column: 43)
!5863 = distinct !DILexicalBlock(scope: !5864, file: !5684, line: 308, column: 7)
!5864 = distinct !DILexicalBlock(scope: !5865, file: !5684, line: 289, column: 40)
!5865 = distinct !DILexicalBlock(scope: !5851, file: !5684, line: 288, column: 6)
!5866 = !DILocation(line: 0, scope: !5851)
!5867 = !DILocation(line: 237, column: 12, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5851, file: !5684, line: 237, column: 6)
!5869 = !DILocation(line: 241, column: 12, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5851, file: !5684, line: 241, column: 6)
!5871 = !DILocation(line: 244, column: 12, scope: !5860)
!5872 = !DILocation(line: 244, column: 17, scope: !5860)
!5873 = !DILocation(line: 244, column: 42, scope: !5860)
!5874 = !DILocation(line: 244, column: 6, scope: !5851)
!5875 = !DILocation(line: 254, column: 24, scope: !5859)
!5876 = !DILocation(line: 0, scope: !5859)
!5877 = !DILocation(line: 256, column: 13, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5859, file: !5684, line: 256, column: 7)
!5879 = !DILocation(line: 256, column: 18, scope: !5878)
!5880 = !DILocation(line: 256, column: 44, scope: !5878)
!5881 = !DILocation(line: 256, column: 7, scope: !5859)
!5882 = !DILocation(line: 259, column: 24, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5884, file: !5684, line: 259, column: 8)
!5884 = distinct !DILexicalBlock(scope: !5878, file: !5684, line: 256, column: 50)
!5885 = !DILocation(line: 259, column: 8, scope: !5884)
!5886 = !DILocation(line: 261, column: 15, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5883, file: !5684, line: 259, column: 30)
!5888 = !DILocation(line: 262, column: 4, scope: !5887)
!5889 = !DILocation(line: 265, column: 12, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5851, file: !5684, line: 265, column: 6)
!5891 = !DILocation(line: 269, column: 12, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5851, file: !5684, line: 269, column: 6)
!5893 = !DILocation(line: 288, column: 12, scope: !5865)
!5894 = !DILocation(line: 288, column: 17, scope: !5865)
!5895 = !DILocation(line: 288, column: 41, scope: !5865)
!5896 = !DILocation(line: 289, column: 9, scope: !5865)
!5897 = !DILocation(line: 289, column: 14, scope: !5865)
!5898 = !DILocation(line: 288, column: 6, scope: !5851)
!5899 = !DILocation(line: 308, column: 12, scope: !5863)
!5900 = !DILocation(line: 308, column: 17, scope: !5863)
!5901 = !DILocation(line: 308, column: 7, scope: !5864)
!5902 = !DILocation(line: 310, column: 6, scope: !5862)
!5903 = !DILocation(line: 309, column: 29, scope: !5862)
!5904 = !DILocation(line: 0, scope: !5862)
!5905 = !DILocation(line: 312, column: 8, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5862, file: !5684, line: 312, column: 8)
!5907 = !DILocation(line: 312, column: 8, scope: !5862)
!5908 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !5909, file: !5383, line: 1099, type: !121)
!5909 = distinct !DISubprogram(name: "__set_PSP", scope: !5383, file: !5383, line: 1099, type: !5474, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !5910)
!5910 = !{!5908}
!5911 = !DILocation(line: 0, scope: !5909, inlinedAt: !5912)
!5912 = distinct !DILocation(line: 338, column: 5, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5906, file: !5684, line: 312, column: 23)
!5914 = !DILocation(line: 1101, column: 3, scope: !5909, inlinedAt: !5912)
!5915 = !{i64 2859478}
!5916 = !DILocation(line: 341, column: 4, scope: !5913)
!5917 = !DILocation(line: 360, column: 12, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5851, file: !5684, line: 360, column: 6)
!5919 = !DILocation(line: 360, column: 17, scope: !5918)
!5920 = !DILocation(line: 360, column: 41, scope: !5918)
!5921 = !DILocation(line: 360, column: 6, scope: !5851)
!5922 = !DILocation(line: 361, column: 14, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5918, file: !5684, line: 360, column: 47)
!5924 = !DILocation(line: 362, column: 2, scope: !5923)
!5925 = !DILocation(line: 366, column: 12, scope: !5851)
!5926 = !DILocation(line: 369, column: 15, scope: !5851)
!5927 = !DILocation(line: 371, column: 2, scope: !5851)
!5928 = distinct !DISubprogram(name: "bus_fault", scope: !5684, file: !5684, line: 383, type: !5929, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !5931)
!5929 = !DISubroutineType(types: !5930)
!5930 = !{!103, !2559, !103, !5751}
!5931 = !{!5932, !5933, !5934, !5935, !5936}
!5932 = !DILocalVariable(name: "esf", arg: 1, scope: !5928, file: !5684, line: 383, type: !2559)
!5933 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5928, file: !5684, line: 383, type: !103)
!5934 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5928, file: !5684, line: 383, type: !5751)
!5935 = !DILocalVariable(name: "reason", scope: !5928, file: !5684, line: 385, type: !121)
!5936 = !DILocalVariable(name: "bfar", scope: !5937, file: !5684, line: 405, type: !121)
!5937 = distinct !DILexicalBlock(scope: !5938, file: !5684, line: 395, column: 42)
!5938 = distinct !DILexicalBlock(scope: !5928, file: !5684, line: 395, column: 6)
!5939 = !DILocation(line: 0, scope: !5928)
!5940 = !DILocation(line: 389, column: 11, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5928, file: !5684, line: 389, column: 6)
!5942 = !DILocation(line: 392, column: 11, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5928, file: !5684, line: 392, column: 6)
!5944 = !DILocation(line: 395, column: 11, scope: !5938)
!5945 = !DILocation(line: 395, column: 16, scope: !5938)
!5946 = !DILocation(line: 395, column: 6, scope: !5928)
!5947 = !DILocation(line: 405, column: 3, scope: !5937)
!5948 = !DILocation(line: 0, scope: !5937)
!5949 = !DILocation(line: 407, column: 13, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5937, file: !5684, line: 407, column: 7)
!5951 = !DILocation(line: 407, column: 18, scope: !5950)
!5952 = !DILocation(line: 407, column: 44, scope: !5950)
!5953 = !DILocation(line: 407, column: 7, scope: !5937)
!5954 = !DILocation(line: 411, column: 15, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5956, file: !5684, line: 409, column: 30)
!5956 = distinct !DILexicalBlock(scope: !5957, file: !5684, line: 409, column: 8)
!5957 = distinct !DILexicalBlock(scope: !5950, file: !5684, line: 407, column: 50)
!5958 = !DILocation(line: 412, column: 4, scope: !5955)
!5959 = !DILocation(line: 415, column: 11, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5928, file: !5684, line: 415, column: 6)
!5961 = !DILocation(line: 418, column: 12, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5928, file: !5684, line: 418, column: 6)
!5963 = !DILocation(line: 418, column: 17, scope: !5962)
!5964 = !DILocation(line: 418, column: 41, scope: !5962)
!5965 = !DILocation(line: 418, column: 6, scope: !5928)
!5966 = !DILocation(line: 423, column: 18, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5962, file: !5684, line: 423, column: 13)
!5968 = !DILocation(line: 524, column: 12, scope: !5928)
!5969 = !DILocation(line: 526, column: 15, scope: !5928)
!5970 = !DILocation(line: 528, column: 2, scope: !5928)
!5971 = distinct !DISubprogram(name: "usage_fault", scope: !5684, file: !5684, line: 539, type: !5972, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !5976)
!5972 = !DISubroutineType(types: !5973)
!5973 = !{!121, !5974}
!5974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5975, size: 32)
!5975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2560)
!5976 = !{!5977, !5978}
!5977 = !DILocalVariable(name: "esf", arg: 1, scope: !5971, file: !5684, line: 539, type: !5974)
!5978 = !DILocalVariable(name: "reason", scope: !5971, file: !5684, line: 541, type: !121)
!5979 = !DILocation(line: 0, scope: !5971)
!5980 = !DILocation(line: 546, column: 12, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5971, file: !5684, line: 546, column: 6)
!5982 = !DILocation(line: 549, column: 12, scope: !5983)
!5983 = distinct !DILexicalBlock(scope: !5971, file: !5684, line: 549, column: 6)
!5984 = !DILocation(line: 567, column: 12, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5971, file: !5684, line: 567, column: 6)
!5986 = !DILocation(line: 570, column: 12, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5971, file: !5684, line: 570, column: 6)
!5988 = !DILocation(line: 573, column: 12, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5971, file: !5684, line: 573, column: 6)
!5990 = !DILocation(line: 576, column: 12, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5971, file: !5684, line: 576, column: 6)
!5992 = !DILocation(line: 581, column: 12, scope: !5971)
!5993 = !DILocation(line: 583, column: 2, scope: !5971)
!5994 = distinct !DISubprogram(name: "debug_monitor", scope: !5684, file: !5684, line: 632, type: !5995, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !5997)
!5995 = !DISubroutineType(types: !5996)
!5996 = !{null, !2559, !5751}
!5997 = !{!5998, !5999}
!5998 = !DILocalVariable(name: "esf", arg: 1, scope: !5994, file: !5684, line: 632, type: !2559)
!5999 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5994, file: !5684, line: 632, type: !5751)
!6000 = !DILocation(line: 0, scope: !5994)
!6001 = !DILocation(line: 634, column: 15, scope: !5994)
!6002 = !DILocation(line: 652, column: 1, scope: !5994)
!6003 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !5684, file: !5684, line: 658, type: !6004, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !6006)
!6004 = !DISubroutineType(types: !6005)
!6005 = !{!157, !2559}
!6006 = !{!6007, !6008, !6009}
!6007 = !DILocalVariable(name: "esf", arg: 1, scope: !6003, file: !5684, line: 658, type: !2559)
!6008 = !DILocalVariable(name: "ret_addr", scope: !6003, file: !5684, line: 660, type: !2602)
!6009 = !DILocalVariable(name: "fault_insn", scope: !6003, file: !5684, line: 686, type: !265)
!6010 = !DILocation(line: 0, scope: !6003)
!6011 = !DILocation(line: 660, column: 46, scope: !6003)
!6012 = !DILocation(line: 660, column: 23, scope: !6003)
!6013 = !DILocation(line: 682, column: 11, scope: !6003)
!6014 = !DILocation(line: 271, column: 3, scope: !6015, inlinedAt: !6016)
!6015 = distinct !DISubprogram(name: "__DSB", scope: !5383, file: !5383, line: 269, type: !2913, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !322)
!6016 = distinct !DILocation(line: 683, column: 2, scope: !6003)
!6017 = !{i64 2835613}
!6018 = !DILocation(line: 260, column: 3, scope: !6019, inlinedAt: !6020)
!6019 = distinct !DISubprogram(name: "__ISB", scope: !5383, file: !5383, line: 258, type: !2913, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !322)
!6020 = distinct !DILocation(line: 684, column: 2, scope: !6003)
!6021 = !{i64 2835330}
!6022 = !DILocation(line: 686, column: 35, scope: !6003)
!6023 = !DILocation(line: 686, column: 24, scope: !6003)
!6024 = !DILocation(line: 688, column: 11, scope: !6003)
!6025 = !DILocation(line: 271, column: 3, scope: !6015, inlinedAt: !6026)
!6026 = distinct !DILocation(line: 689, column: 2, scope: !6003)
!6027 = !DILocation(line: 260, column: 3, scope: !6019, inlinedAt: !6028)
!6028 = distinct !DILocation(line: 690, column: 2, scope: !6003)
!6029 = !DILocation(line: 693, column: 45, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6003, file: !5684, line: 693, column: 6)
!6031 = !DILocation(line: 699, column: 1, scope: !6003)
!6032 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !5684, file: !5684, line: 1107, type: !2913, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !322)
!6033 = !DILocation(line: 1111, column: 11, scope: !6032)
!6034 = !DILocation(line: 1136, column: 1, scope: !6032)
!6035 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6036, file: !6036, line: 26, type: !2913, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6037)
!6036 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6037 = !{!6038}
!6038 = !DILocalVariable(name: "irq", scope: !6035, file: !6036, line: 28, type: !103)
!6039 = !DILocation(line: 0, scope: !6035)
!6040 = !DILocation(line: 30, column: 2, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6035, file: !6036, line: 30, column: 2)
!6042 = !DILocation(line: 31, column: 3, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6044, file: !6036, line: 30, column: 39)
!6044 = distinct !DILexicalBlock(scope: !6041, file: !6036, line: 30, column: 2)
!6045 = !DILocation(line: 30, column: 35, scope: !6044)
!6046 = !DILocation(line: 30, column: 13, scope: !6044)
!6047 = distinct !{!6047, !6040, !6048}
!6048 = !DILocation(line: 32, column: 2, scope: !6041)
!6049 = !DILocation(line: 33, column: 1, scope: !6035)
!6050 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !5417, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6051)
!6051 = !{!6052, !6053}
!6052 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6050, file: !356, line: 1814, type: !592)
!6053 = !DILocalVariable(name: "priority", arg: 2, scope: !6050, file: !356, line: 1814, type: !121)
!6054 = !DILocation(line: 0, scope: !6050)
!6055 = !DILocation(line: 1816, column: 7, scope: !6050)
!6056 = !DILocation(line: 0, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6050, file: !356, line: 1816, column: 7)
!6058 = !DILocation(line: 1824, column: 1, scope: !6050)
!6059 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6060, file: !6060, line: 27, type: !6061, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !6164)
!6060 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6061 = !DISubroutineType(types: !6062)
!6062 = !{null, !6063}
!6063 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !6064)
!6064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6065, size: 32)
!6065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !6066)
!6066 = !{!6067, !6125, !6137, !6138, !6139, !6140, !6146, !6159}
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6065, file: !211, line: 247, baseType: !6068, size: 384)
!6068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !6069)
!6069 = !{!6070, !6094, !6101, !6102, !6103, !6112, !6113, !6114}
!6070 = !DIDerivedType(tag: DW_TAG_member, scope: !6068, file: !211, line: 60, baseType: !6071, size: 64)
!6071 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6068, file: !211, line: 60, size: 64, elements: !6072)
!6072 = !{!6073, !6088}
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6071, file: !211, line: 61, baseType: !6074, size: 64)
!6074 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !6075)
!6075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !6076)
!6076 = !{!6077, !6083}
!6077 = !DIDerivedType(tag: DW_TAG_member, scope: !6075, file: !221, line: 38, baseType: !6078, size: 32)
!6078 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6075, file: !221, line: 38, size: 32, elements: !6079)
!6079 = !{!6080, !6082}
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6078, file: !221, line: 39, baseType: !6081, size: 32)
!6081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6075, size: 32)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6078, file: !221, line: 40, baseType: !6081, size: 32)
!6083 = !DIDerivedType(tag: DW_TAG_member, scope: !6075, file: !221, line: 42, baseType: !6084, size: 32, offset: 32)
!6084 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6075, file: !221, line: 42, size: 32, elements: !6085)
!6085 = !{!6086, !6087}
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6084, file: !221, line: 43, baseType: !6081, size: 32)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6084, file: !221, line: 44, baseType: !6081, size: 32)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6071, file: !211, line: 62, baseType: !6089, size: 64)
!6089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !6090)
!6090 = !{!6091}
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6089, file: !237, line: 50, baseType: !6092, size: 64)
!6092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6093, size: 64, elements: !242)
!6093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6089, size: 32)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6068, file: !211, line: 68, baseType: !6095, size: 32, offset: 64)
!6095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6096, size: 32)
!6096 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !6097)
!6097 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !6098)
!6098 = !{!6099}
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6097, file: !247, line: 232, baseType: !6100, size: 64)
!6100 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !6075)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6068, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6068, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!6103 = !DIDerivedType(tag: DW_TAG_member, scope: !6068, file: !211, line: 90, baseType: !6104, size: 16, offset: 112)
!6104 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6068, file: !211, line: 90, size: 16, elements: !6105)
!6105 = !{!6106, !6111}
!6106 = !DIDerivedType(tag: DW_TAG_member, scope: !6104, file: !211, line: 91, baseType: !6107, size: 16)
!6107 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6104, file: !211, line: 91, size: 16, elements: !6108)
!6108 = !{!6109, !6110}
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6107, file: !211, line: 96, baseType: !261, size: 8)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6107, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6104, file: !211, line: 100, baseType: !265, size: 16)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6068, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6068, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6068, file: !211, line: 131, baseType: !6115, size: 192, offset: 192)
!6115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !6116)
!6116 = !{!6117, !6118, !6124}
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6115, file: !247, line: 245, baseType: !6074, size: 64)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6115, file: !247, line: 246, baseType: !6119, size: 32, offset: 64)
!6119 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !6120)
!6120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6121, size: 32)
!6121 = !DISubroutineType(types: !6122)
!6122 = !{null, !6123}
!6123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6115, size: 32)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6115, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6065, file: !211, line: 250, baseType: !6126, size: 288, offset: 384)
!6126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !6127)
!6127 = !{!6128, !6129, !6130, !6131, !6132, !6133, !6134, !6135, !6136}
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6126, file: !284, line: 26, baseType: !121, size: 32)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6126, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6126, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6126, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6126, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6126, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6126, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6126, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6126, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6065, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6065, file: !211, line: 256, baseType: !6096, size: 64, offset: 704)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6065, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6065, file: !211, line: 300, baseType: !6141, size: 96, offset: 800)
!6141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !6142)
!6142 = !{!6143, !6144, !6145}
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6141, file: !211, line: 153, baseType: !22, size: 32)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6141, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6141, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6065, file: !211, line: 325, baseType: !6147, size: 32, offset: 896)
!6147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6148, size: 32)
!6148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !6149)
!6149 = !{!6150, !6156, !6157}
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6148, file: !307, line: 5074, baseType: !6151, size: 96)
!6151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !6152)
!6152 = !{!6153, !6154, !6155}
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6151, file: !311, line: 57, baseType: !314, size: 32)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6151, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6151, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6148, file: !307, line: 5075, baseType: !6096, size: 64, offset: 96)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6148, file: !307, line: 5076, baseType: !6158, offset: 160)
!6158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6065, file: !211, line: 343, baseType: !6160, size: 64, offset: 928)
!6160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !6161)
!6161 = !{!6162, !6163}
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6160, file: !284, line: 63, baseType: !121, size: 32)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6160, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!6164 = !{!6165}
!6165 = !DILocalVariable(name: "thread", arg: 1, scope: !6059, file: !6060, line: 27, type: !6063)
!6166 = !DILocation(line: 0, scope: !6059)
!6167 = !DILocation(line: 29, column: 6, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6059, file: !6060, line: 29, column: 6)
!6169 = !DILocation(line: 29, column: 15, scope: !6168)
!6170 = !DILocation(line: 29, column: 6, scope: !6059)
!6171 = !DILocation(line: 1031, column: 3, scope: !6172, inlinedAt: !6175)
!6172 = distinct !DISubprogram(name: "__get_IPSR", scope: !5383, file: !5383, line: 1027, type: !5464, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !6173)
!6173 = !{!6174}
!6174 = !DILocalVariable(name: "result", scope: !6172, file: !5383, line: 1029, type: !121)
!6175 = distinct !DILocation(line: 48, column: 10, scope: !6176, inlinedAt: !6180)
!6176 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6177, file: !6177, line: 46, type: !6178, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !322)
!6177 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6178 = !DISubroutineType(types: !6179)
!6179 = !{!157}
!6180 = distinct !DILocation(line: 30, column: 7, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !6182, file: !6060, line: 30, column: 7)
!6182 = distinct !DILexicalBlock(scope: !6168, file: !6060, line: 29, column: 26)
!6183 = !{i64 2824461}
!6184 = !DILocation(line: 0, scope: !6172, inlinedAt: !6175)
!6185 = !DILocation(line: 48, column: 9, scope: !6176, inlinedAt: !6180)
!6186 = !DILocation(line: 30, column: 7, scope: !6182)
!6187 = !DILocation(line: 42, column: 14, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6181, file: !6060, line: 30, column: 25)
!6189 = !DILocation(line: 48, column: 15, scope: !6188)
!6190 = !DILocation(line: 49, column: 3, scope: !6188)
!6191 = !DILocation(line: 52, column: 2, scope: !6059)
!6192 = !DILocation(line: 53, column: 1, scope: !6059)
!6193 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !206, file: !206, line: 127, type: !2913, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !322)
!6194 = !DILocation(line: 134, column: 2, scope: !6193)
!6195 = !DILocation(line: 156, column: 1, scope: !6193)
!6196 = !DILocation(line: 0, scope: !205)
!6197 = !DILocation(line: 289, column: 36, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !205, file: !206, line: 285, column: 2)
!6199 = !DILocation(line: 289, column: 42, scope: !6198)
!6200 = !DILocation(line: 300, column: 36, scope: !205)
!6201 = !DILocation(line: 301, column: 35, scope: !205)
!6202 = !DILocation(line: 302, column: 37, scope: !205)
!6203 = !DILocation(line: 311, column: 2, scope: !205)
!6204 = !DILocation(line: 316, column: 1, scope: !205)
!6205 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !384, file: !384, line: 180, type: !2913, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!6206 = !DILocation(line: 188, column: 12, scope: !6205)
!6207 = !DILocation(line: 271, column: 3, scope: !6208, inlinedAt: !6209)
!6208 = distinct !DISubprogram(name: "__DSB", scope: !5383, file: !5383, line: 269, type: !2913, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!6209 = distinct !DILocation(line: 192, column: 2, scope: !6205)
!6210 = !{i64 2984608}
!6211 = !DILocation(line: 260, column: 3, scope: !6212, inlinedAt: !6213)
!6212 = distinct !DISubprogram(name: "__ISB", scope: !5383, file: !5383, line: 258, type: !2913, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!6213 = distinct !DILocation(line: 193, column: 2, scope: !6205)
!6214 = !{i64 2984325}
!6215 = !DILocation(line: 194, column: 1, scope: !6205)
!6216 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !384, file: !384, line: 199, type: !2913, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!6217 = !DILocation(line: 282, column: 3, scope: !6218, inlinedAt: !6219)
!6218 = distinct !DISubprogram(name: "__DMB", scope: !5383, file: !5383, line: 280, type: !2913, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!6219 = distinct !DILocation(line: 202, column: 2, scope: !6216)
!6220 = !{i64 2984884}
!6221 = !DILocation(line: 205, column: 12, scope: !6216)
!6222 = !DILocation(line: 206, column: 1, scope: !6216)
!6223 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !384, file: !384, line: 275, type: !6224, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6237)
!6224 = !DISubroutineType(types: !6225)
!6225 = !{null, !6226, !1603, !5651, !5651}
!6226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6227, size: 32)
!6227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6228)
!6228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !335, line: 52, size: 96, elements: !6229)
!6229 = !{!6230, !6231, !6232}
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6228, file: !335, line: 53, baseType: !22, size: 32)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6228, file: !335, line: 54, baseType: !200, size: 32, offset: 32)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6228, file: !335, line: 55, baseType: !6233, size: 32, offset: 64)
!6233 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !341, line: 151, baseType: !6234)
!6234 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !341, line: 149, size: 32, elements: !6235)
!6235 = !{!6236}
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !6234, file: !341, line: 150, baseType: !121, size: 32)
!6237 = !{!6238, !6239, !6240, !6241}
!6238 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6223, file: !384, line: 276, type: !6226)
!6239 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6223, file: !384, line: 276, type: !1603)
!6240 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !6223, file: !384, line: 277, type: !5651)
!6241 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6223, file: !384, line: 277, type: !5651)
!6242 = !DILocation(line: 0, scope: !6223)
!6243 = !DILocation(line: 279, column: 6, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6223, file: !384, line: 279, column: 6)
!6245 = !DILocation(line: 285, column: 1, scope: !6223)
!6246 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !6247, file: !6247, line: 220, type: !6248, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6250)
!6247 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6248 = !DISubroutineType(types: !6249)
!6249 = !{!103, !6226, !1603, !5651, !5651}
!6250 = !{!6251, !6252, !6253, !6254, !6255}
!6251 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6246, file: !6247, line: 221, type: !6226)
!6252 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6246, file: !6247, line: 221, type: !1603)
!6253 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !6246, file: !6247, line: 222, type: !5651)
!6254 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6246, file: !6247, line: 223, type: !5651)
!6255 = !DILocalVariable(name: "mpu_reg_index", scope: !6246, file: !6247, line: 225, type: !103)
!6256 = !DILocation(line: 0, scope: !6246)
!6257 = !DILocation(line: 225, column: 22, scope: !6246)
!6258 = !DILocation(line: 233, column: 18, scope: !6246)
!6259 = !DILocation(line: 236, column: 23, scope: !6246)
!6260 = !DILocation(line: 236, column: 21, scope: !6246)
!6261 = !DILocation(line: 238, column: 2, scope: !6246)
!6262 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !384, file: !384, line: 105, type: !6263, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6265)
!6263 = !DISubroutineType(types: !6264)
!6264 = !{!103, !6226, !154, !154, !157}
!6265 = !{!6266, !6267, !6268, !6269, !6270, !6271}
!6266 = !DILocalVariable(name: "regions", arg: 1, scope: !6262, file: !384, line: 106, type: !6226)
!6267 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6262, file: !384, line: 106, type: !154)
!6268 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !6262, file: !384, line: 106, type: !154)
!6269 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !6262, file: !384, line: 107, type: !157)
!6270 = !DILocalVariable(name: "i", scope: !6262, file: !384, line: 109, type: !103)
!6271 = !DILocalVariable(name: "reg_index", scope: !6262, file: !384, line: 110, type: !103)
!6272 = !DILocation(line: 0, scope: !6262)
!6273 = !DILocation(line: 110, column: 18, scope: !6262)
!6274 = !DILocation(line: 112, column: 16, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6276, file: !384, line: 112, column: 2)
!6276 = distinct !DILexicalBlock(scope: !6262, file: !384, line: 112, column: 2)
!6277 = !DILocation(line: 112, column: 2, scope: !6276)
!6278 = !DILocation(line: 113, column: 7, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6280, file: !384, line: 113, column: 7)
!6280 = distinct !DILexicalBlock(scope: !6275, file: !384, line: 112, column: 36)
!6281 = !DILocation(line: 113, column: 18, scope: !6279)
!6282 = !DILocation(line: 113, column: 23, scope: !6279)
!6283 = !DILocation(line: 113, column: 7, scope: !6280)
!6284 = !DILocation(line: 118, column: 23, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6280, file: !384, line: 118, column: 7)
!6286 = !DILocation(line: 119, column: 7, scope: !6285)
!6287 = !DILocation(line: 118, column: 7, scope: !6280)
!6288 = !DILocation(line: 124, column: 36, scope: !6280)
!6289 = !DILocation(line: 124, column: 15, scope: !6280)
!6290 = !DILocation(line: 126, column: 17, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6280, file: !384, line: 126, column: 7)
!6292 = !DILocation(line: 126, column: 7, scope: !6280)
!6293 = !DILocation(line: 131, column: 12, scope: !6280)
!6294 = !DILocation(line: 132, column: 2, scope: !6280)
!6295 = !DILocation(line: 112, column: 32, scope: !6275)
!6296 = distinct !{!6296, !6277, !6297}
!6297 = !DILocation(line: 132, column: 2, scope: !6276)
!6298 = !DILocation(line: 135, column: 1, scope: !6262)
!6299 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !6247, file: !6247, line: 63, type: !6300, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6302)
!6300 = !DISubroutineType(types: !6301)
!6301 = !{!103, !6226}
!6302 = !{!6303, !6304}
!6303 = !DILocalVariable(name: "part", arg: 1, scope: !6299, file: !6247, line: 63, type: !6226)
!6304 = !DILocalVariable(name: "partition_is_valid", scope: !6299, file: !6247, line: 70, type: !103)
!6305 = !DILocation(line: 0, scope: !6299)
!6306 = !DILocation(line: 71, column: 11, scope: !6299)
!6307 = !DILocation(line: 71, column: 37, scope: !6299)
!6308 = !{i32 0, i32 33}
!6309 = !DILocation(line: 72, column: 3, scope: !6299)
!6310 = !DILocation(line: 71, column: 30, scope: !6299)
!6311 = !DILocation(line: 75, column: 11, scope: !6299)
!6312 = !DILocation(line: 75, column: 17, scope: !6299)
!6313 = !DILocation(line: 75, column: 38, scope: !6299)
!6314 = !DILocation(line: 77, column: 2, scope: !6299)
!6315 = distinct !DISubprogram(name: "mpu_configure_region", scope: !384, file: !384, line: 79, type: !6316, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6318)
!6316 = !DISubroutineType(types: !6317)
!6317 = !{!103, !1603, !6226}
!6318 = !{!6319, !6320, !6321}
!6319 = !DILocalVariable(name: "index", arg: 1, scope: !6315, file: !384, line: 79, type: !1603)
!6320 = !DILocalVariable(name: "new_region", arg: 2, scope: !6315, file: !384, line: 80, type: !6226)
!6321 = !DILocalVariable(name: "region_conf", scope: !6315, file: !384, line: 82, type: !373)
!6322 = !DILocation(line: 0, scope: !6315)
!6323 = !DILocation(line: 82, column: 2, scope: !6315)
!6324 = !DILocation(line: 82, column: 24, scope: !6315)
!6325 = !DILocation(line: 87, column: 33, scope: !6315)
!6326 = !DILocation(line: 87, column: 14, scope: !6315)
!6327 = !DILocation(line: 87, column: 19, scope: !6315)
!6328 = !DILocation(line: 91, column: 55, scope: !6315)
!6329 = !DILocation(line: 92, column: 16, scope: !6315)
!6330 = !DILocation(line: 92, column: 53, scope: !6315)
!6331 = !DILocation(line: 91, column: 2, scope: !6315)
!6332 = !DILocation(line: 95, column: 9, scope: !6315)
!6333 = !DILocation(line: 97, column: 1, scope: !6315)
!6334 = !DILocation(line: 95, column: 2, scope: !6315)
!6335 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !6247, file: !6247, line: 113, type: !6336, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6341)
!6336 = !DISubroutineType(types: !6337)
!6337 = !{null, !6338, !6339, !121, !121}
!6338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 32)
!6339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6340, size: 32)
!6340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6233)
!6341 = !{!6342, !6343, !6344, !6345}
!6342 = !DILocalVariable(name: "p_attr", arg: 1, scope: !6335, file: !6247, line: 114, type: !6338)
!6343 = !DILocalVariable(name: "attr", arg: 2, scope: !6335, file: !6247, line: 115, type: !6339)
!6344 = !DILocalVariable(name: "base", arg: 3, scope: !6335, file: !6247, line: 115, type: !121)
!6345 = !DILocalVariable(name: "size", arg: 4, scope: !6335, file: !6247, line: 115, type: !121)
!6346 = !DILocation(line: 0, scope: !6335)
!6347 = !DILocation(line: 127, column: 23, scope: !6335)
!6348 = !DILocation(line: 127, column: 35, scope: !6335)
!6349 = !DILocation(line: 127, column: 33, scope: !6335)
!6350 = !DILocation(line: 127, column: 10, scope: !6335)
!6351 = !DILocation(line: 127, column: 15, scope: !6335)
!6352 = !DILocation(line: 129, column: 1, scope: !6335)
!6353 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !384, file: !384, line: 57, type: !6354, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6356)
!6354 = !DISubroutineType(types: !6355)
!6355 = !{!103, !1603, !371}
!6356 = !{!6357, !6358}
!6357 = !DILocalVariable(name: "index", arg: 1, scope: !6353, file: !384, line: 57, type: !1603)
!6358 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6353, file: !384, line: 58, type: !371)
!6359 = !DILocation(line: 0, scope: !6353)
!6360 = !DILocation(line: 61, column: 6, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6353, file: !384, line: 61, column: 6)
!6362 = !DILocation(line: 61, column: 12, scope: !6361)
!6363 = !DILocation(line: 61, column: 6, scope: !6353)
!6364 = !DILocation(line: 71, column: 2, scope: !6353)
!6365 = !DILocation(line: 73, column: 2, scope: !6353)
!6366 = !DILocation(line: 74, column: 1, scope: !6353)
!6367 = distinct !DISubprogram(name: "region_init", scope: !6247, file: !6247, line: 29, type: !6368, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6370)
!6368 = !DISubroutineType(types: !6369)
!6369 = !{null, !5651, !371}
!6370 = !{!6371, !6372}
!6371 = !DILocalVariable(name: "index", arg: 1, scope: !6367, file: !6247, line: 29, type: !5651)
!6372 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6367, file: !6247, line: 30, type: !371)
!6373 = !DILocation(line: 0, scope: !6367)
!6374 = !DILocation(line: 33, column: 2, scope: !6367)
!6375 = !DILocation(line: 47, column: 28, scope: !6367)
!6376 = !DILocation(line: 47, column: 33, scope: !6367)
!6377 = !DILocation(line: 48, column: 26, scope: !6367)
!6378 = !DILocation(line: 47, column: 12, scope: !6367)
!6379 = !DILocation(line: 49, column: 32, scope: !6367)
!6380 = !DILocation(line: 49, column: 37, scope: !6367)
!6381 = !DILocation(line: 49, column: 12, scope: !6367)
!6382 = !DILocation(line: 53, column: 1, scope: !6367)
!6383 = distinct !DISubprogram(name: "set_region_number", scope: !6384, file: !6384, line: 32, type: !5474, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6385)
!6384 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6385 = !{!6386}
!6386 = !DILocalVariable(name: "index", arg: 1, scope: !6383, file: !6384, line: 32, type: !121)
!6387 = !DILocation(line: 0, scope: !6383)
!6388 = !DILocation(line: 34, column: 11, scope: !6383)
!6389 = !DILocation(line: 35, column: 1, scope: !6383)
!6390 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !6247, file: !6247, line: 88, type: !6391, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6393)
!6391 = !DISubroutineType(types: !6392)
!6392 = !{!121, !121}
!6393 = !{!6394}
!6394 = !DILocalVariable(name: "size", arg: 1, scope: !6390, file: !6247, line: 88, type: !121)
!6395 = !DILocation(line: 0, scope: !6390)
!6396 = !DILocation(line: 91, column: 11, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6390, file: !6247, line: 91, column: 6)
!6398 = !DILocation(line: 91, column: 6, scope: !6390)
!6399 = !DILocation(line: 100, column: 11, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6390, file: !6247, line: 100, column: 6)
!6401 = !DILocation(line: 100, column: 6, scope: !6390)
!6402 = !DILocation(line: 104, column: 35, scope: !6390)
!6403 = !DILocation(line: 104, column: 16, scope: !6390)
!6404 = !DILocation(line: 104, column: 50, scope: !6390)
!6405 = !DILocation(line: 104, column: 72, scope: !6390)
!6406 = !DILocation(line: 104, column: 2, scope: !6390)
!6407 = !DILocation(line: 106, column: 1, scope: !6390)
!6408 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !384, file: !384, line: 307, type: !6409, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6411)
!6409 = !DISubroutineType(types: !6410)
!6410 = !{null, !6226, !154}
!6411 = !{!6412, !6413}
!6412 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6408, file: !384, line: 308, type: !6226)
!6413 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6408, file: !384, line: 308, type: !154)
!6414 = !DILocation(line: 0, scope: !6408)
!6415 = !DILocation(line: 310, column: 6, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6408, file: !384, line: 310, column: 6)
!6417 = !DILocation(line: 316, column: 1, scope: !6408)
!6418 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !6247, file: !6247, line: 249, type: !6419, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6421)
!6419 = !DISubroutineType(types: !6420)
!6420 = !{!103, !6226, !154}
!6421 = !{!6422, !6423, !6424, !6425}
!6422 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6418, file: !6247, line: 250, type: !6226)
!6423 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6418, file: !6247, line: 250, type: !154)
!6424 = !DILocalVariable(name: "mpu_reg_index", scope: !6418, file: !6247, line: 252, type: !103)
!6425 = !DILocalVariable(name: "i", scope: !6426, file: !6247, line: 264, type: !103)
!6426 = distinct !DILexicalBlock(scope: !6427, file: !6247, line: 264, column: 3)
!6427 = distinct !DILexicalBlock(scope: !6428, file: !6247, line: 261, column: 32)
!6428 = distinct !DILexicalBlock(scope: !6418, file: !6247, line: 261, column: 6)
!6429 = !DILocation(line: 0, scope: !6418)
!6430 = !DILocation(line: 252, column: 22, scope: !6418)
!6431 = !DILocation(line: 258, column: 18, scope: !6418)
!6432 = !DILocation(line: 261, column: 20, scope: !6428)
!6433 = !DILocation(line: 261, column: 6, scope: !6418)
!6434 = !DILocation(line: 0, scope: !6426)
!6435 = !DILocation(line: 265, column: 4, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6437, file: !6247, line: 264, column: 59)
!6437 = distinct !DILexicalBlock(scope: !6426, file: !6247, line: 264, column: 3)
!6438 = !DILocation(line: 264, column: 55, scope: !6437)
!6439 = !DILocation(line: 264, column: 33, scope: !6437)
!6440 = !DILocation(line: 264, column: 3, scope: !6426)
!6441 = distinct !{!6441, !6440, !6442}
!6442 = !DILocation(line: 266, column: 3, scope: !6426)
!6443 = !DILocation(line: 269, column: 2, scope: !6418)
!6444 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !6445, file: !6445, line: 218, type: !5474, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6446)
!6445 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6446 = !{!6447}
!6447 = !DILocalVariable(name: "rnr", arg: 1, scope: !6444, file: !6445, line: 218, type: !121)
!6448 = !DILocation(line: 0, scope: !6444)
!6449 = !DILocation(line: 220, column: 12, scope: !6444)
!6450 = !DILocation(line: 221, column: 13, scope: !6444)
!6451 = !DILocation(line: 222, column: 1, scope: !6444)
!6452 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !384, file: !384, line: 326, type: !6453, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6455)
!6453 = !DISubroutineType(types: !6454)
!6454 = !{!103}
!6455 = !{!6456}
!6456 = !DILocalVariable(name: "r_index", scope: !6452, file: !384, line: 328, type: !121)
!6457 = !DILocation(line: 330, column: 17, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6452, file: !384, line: 330, column: 6)
!6459 = !DILocation(line: 330, column: 29, scope: !6458)
!6460 = !DILocation(line: 330, column: 6, scope: !6452)
!6461 = !DILocation(line: 347, column: 2, scope: !6452)
!6462 = !DILocation(line: 0, scope: !6452)
!6463 = !DILocation(line: 364, column: 29, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6465, file: !384, line: 364, column: 2)
!6465 = distinct !DILexicalBlock(scope: !6452, file: !384, line: 364, column: 2)
!6466 = !DILocation(line: 364, column: 2, scope: !6465)
!6467 = !DILocation(line: 365, column: 25, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6464, file: !384, line: 364, column: 66)
!6469 = !DILocation(line: 365, column: 3, scope: !6468)
!6470 = !DILocation(line: 364, column: 62, scope: !6464)
!6471 = distinct !{!6471, !6466, !6472}
!6472 = !DILocation(line: 366, column: 2, scope: !6465)
!6473 = !DILocation(line: 369, column: 23, scope: !6452)
!6474 = !DILocation(line: 369, column: 21, scope: !6452)
!6475 = !DILocation(line: 372, column: 2, scope: !6452)
!6476 = !DILocation(line: 443, column: 2, scope: !6452)
!6477 = !DILocation(line: 444, column: 1, scope: !6452)
!6478 = distinct !DISubprogram(name: "strcpy", scope: !6479, file: !6479, line: 20, type: !6480, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2676, retainedNodes: !6484)
!6479 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6480 = !DISubroutineType(types: !6481)
!6481 = !{!957, !6482, !6483}
!6482 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !957)
!6483 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !144)
!6484 = !{!6485, !6486, !6487}
!6485 = !DILocalVariable(name: "d", arg: 1, scope: !6478, file: !6479, line: 20, type: !6482)
!6486 = !DILocalVariable(name: "s", arg: 2, scope: !6478, file: !6479, line: 20, type: !6483)
!6487 = !DILocalVariable(name: "dest", scope: !6478, file: !6479, line: 22, type: !957)
!6488 = !DILocation(line: 0, scope: !6478)
!6489 = !DILocation(line: 24, column: 9, scope: !6478)
!6490 = !DILocation(line: 24, column: 12, scope: !6478)
!6491 = !DILocation(line: 24, column: 2, scope: !6478)
!6492 = !DILocation(line: 25, column: 6, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6478, file: !6479, line: 24, column: 21)
!6494 = !DILocation(line: 26, column: 4, scope: !6493)
!6495 = !DILocation(line: 27, column: 4, scope: !6493)
!6496 = distinct !{!6496, !6491, !6497}
!6497 = !DILocation(line: 28, column: 2, scope: !6478)
!6498 = !DILocation(line: 30, column: 5, scope: !6478)
!6499 = !DILocation(line: 32, column: 2, scope: !6478)
!6500 = distinct !DISubprogram(name: "strncpy", scope: !6479, file: !6479, line: 42, type: !6501, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2676, retainedNodes: !6503)
!6501 = !DISubroutineType(types: !6502)
!6502 = !{!957, !6482, !6483, !200}
!6503 = !{!6504, !6505, !6506, !6507}
!6504 = !DILocalVariable(name: "d", arg: 1, scope: !6500, file: !6479, line: 42, type: !6482)
!6505 = !DILocalVariable(name: "s", arg: 2, scope: !6500, file: !6479, line: 42, type: !6483)
!6506 = !DILocalVariable(name: "n", arg: 3, scope: !6500, file: !6479, line: 42, type: !200)
!6507 = !DILocalVariable(name: "dest", scope: !6500, file: !6479, line: 44, type: !957)
!6508 = !DILocation(line: 0, scope: !6500)
!6509 = !DILocation(line: 46, column: 12, scope: !6500)
!6510 = !DILocation(line: 46, column: 17, scope: !6500)
!6511 = !DILocation(line: 46, column: 20, scope: !6500)
!6512 = !DILocation(line: 46, column: 23, scope: !6500)
!6513 = !DILocation(line: 46, column: 2, scope: !6500)
!6514 = !DILocation(line: 47, column: 6, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6500, file: !6479, line: 46, column: 32)
!6516 = !DILocation(line: 48, column: 4, scope: !6515)
!6517 = !DILocation(line: 49, column: 4, scope: !6515)
!6518 = !DILocation(line: 50, column: 4, scope: !6515)
!6519 = distinct !{!6519, !6513, !6520}
!6520 = !DILocation(line: 51, column: 2, scope: !6500)
!6521 = !DILocation(line: 54, column: 6, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6500, file: !6479, line: 53, column: 16)
!6523 = !DILocation(line: 55, column: 4, scope: !6522)
!6524 = !DILocation(line: 56, column: 4, scope: !6522)
!6525 = !DILocation(line: 53, column: 11, scope: !6500)
!6526 = !DILocation(line: 53, column: 2, scope: !6500)
!6527 = distinct !{!6527, !6526, !6528}
!6528 = !DILocation(line: 57, column: 2, scope: !6500)
!6529 = !DILocation(line: 59, column: 2, scope: !6500)
!6530 = distinct !DISubprogram(name: "strchr", scope: !6479, file: !6479, line: 69, type: !6531, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2676, retainedNodes: !6533)
!6531 = !DISubroutineType(types: !6532)
!6532 = !{!957, !144, !103}
!6533 = !{!6534, !6535, !6536}
!6534 = !DILocalVariable(name: "s", arg: 1, scope: !6530, file: !6479, line: 69, type: !144)
!6535 = !DILocalVariable(name: "c", arg: 2, scope: !6530, file: !6479, line: 69, type: !103)
!6536 = !DILocalVariable(name: "tmp", scope: !6530, file: !6479, line: 71, type: !146)
!6537 = !DILocation(line: 0, scope: !6530)
!6538 = !DILocation(line: 73, column: 2, scope: !6530)
!6539 = !DILocation(line: 73, column: 10, scope: !6530)
!6540 = !DILocation(line: 73, column: 13, scope: !6530)
!6541 = !DILocation(line: 73, column: 21, scope: !6530)
!6542 = !DILocation(line: 74, column: 4, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6530, file: !6479, line: 73, column: 38)
!6544 = distinct !{!6544, !6538, !6545}
!6545 = !DILocation(line: 75, column: 2, scope: !6530)
!6546 = !DILocation(line: 77, column: 9, scope: !6530)
!6547 = !DILocation(line: 77, column: 2, scope: !6530)
!6548 = distinct !DISubprogram(name: "strrchr", scope: !6479, file: !6479, line: 87, type: !6531, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2676, retainedNodes: !6549)
!6549 = !{!6550, !6551, !6552}
!6550 = !DILocalVariable(name: "s", arg: 1, scope: !6548, file: !6479, line: 87, type: !144)
!6551 = !DILocalVariable(name: "c", arg: 2, scope: !6548, file: !6479, line: 87, type: !103)
!6552 = !DILocalVariable(name: "match", scope: !6548, file: !6479, line: 89, type: !957)
!6553 = !DILocation(line: 0, scope: !6548)
!6554 = !DILocation(line: 91, column: 2, scope: !6548)
!6555 = !DILocation(line: 92, column: 7, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6557, file: !6479, line: 92, column: 7)
!6557 = distinct !DILexicalBlock(scope: !6548, file: !6479, line: 91, column: 5)
!6558 = !DILocation(line: 92, column: 10, scope: !6556)
!6559 = !DILocation(line: 92, column: 7, scope: !6557)
!6560 = !DILocation(line: 95, column: 13, scope: !6548)
!6561 = !DILocation(line: 95, column: 2, scope: !6557)
!6562 = distinct !{!6562, !6554, !6563}
!6563 = !DILocation(line: 95, column: 15, scope: !6548)
!6564 = !DILocation(line: 97, column: 2, scope: !6548)
!6565 = distinct !DISubprogram(name: "strlen", scope: !6479, file: !6479, line: 107, type: !6566, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2676, retainedNodes: !6568)
!6566 = !DISubroutineType(types: !6567)
!6567 = !{!200, !144}
!6568 = !{!6569, !6570}
!6569 = !DILocalVariable(name: "s", arg: 1, scope: !6565, file: !6479, line: 107, type: !144)
!6570 = !DILocalVariable(name: "n", scope: !6565, file: !6479, line: 109, type: !200)
!6571 = !DILocation(line: 0, scope: !6565)
!6572 = !DILocation(line: 111, column: 9, scope: !6565)
!6573 = !DILocation(line: 111, column: 12, scope: !6565)
!6574 = !DILocation(line: 111, column: 2, scope: !6565)
!6575 = !DILocation(line: 112, column: 4, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6565, file: !6479, line: 111, column: 21)
!6577 = !DILocation(line: 113, column: 4, scope: !6576)
!6578 = distinct !{!6578, !6574, !6579}
!6579 = !DILocation(line: 114, column: 2, scope: !6565)
!6580 = !DILocation(line: 116, column: 2, scope: !6565)
!6581 = distinct !DISubprogram(name: "strnlen", scope: !6479, file: !6479, line: 126, type: !6582, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2676, retainedNodes: !6584)
!6582 = !DISubroutineType(types: !6583)
!6583 = !{!200, !144, !200}
!6584 = !{!6585, !6586, !6587}
!6585 = !DILocalVariable(name: "s", arg: 1, scope: !6581, file: !6479, line: 126, type: !144)
!6586 = !DILocalVariable(name: "maxlen", arg: 2, scope: !6581, file: !6479, line: 126, type: !200)
!6587 = !DILocalVariable(name: "n", scope: !6581, file: !6479, line: 128, type: !200)
!6588 = !DILocation(line: 0, scope: !6581)
!6589 = !DILocation(line: 130, column: 9, scope: !6581)
!6590 = !DILocation(line: 130, column: 12, scope: !6581)
!6591 = !DILocation(line: 130, column: 20, scope: !6581)
!6592 = !DILocation(line: 130, column: 2, scope: !6581)
!6593 = !DILocation(line: 131, column: 4, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6581, file: !6479, line: 130, column: 35)
!6595 = !DILocation(line: 132, column: 4, scope: !6594)
!6596 = distinct !{!6596, !6592, !6597}
!6597 = !DILocation(line: 133, column: 2, scope: !6581)
!6598 = !DILocation(line: 135, column: 2, scope: !6581)
!6599 = distinct !DISubprogram(name: "strcmp", scope: !6479, file: !6479, line: 145, type: !6600, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2676, retainedNodes: !6602)
!6600 = !DISubroutineType(types: !6601)
!6601 = !{!103, !144, !144}
!6602 = !{!6603, !6604}
!6603 = !DILocalVariable(name: "s1", arg: 1, scope: !6599, file: !6479, line: 145, type: !144)
!6604 = !DILocalVariable(name: "s2", arg: 2, scope: !6599, file: !6479, line: 145, type: !144)
!6605 = !DILocation(line: 0, scope: !6599)
!6606 = !DILocation(line: 147, column: 10, scope: !6599)
!6607 = !DILocation(line: 147, column: 17, scope: !6599)
!6608 = !DILocation(line: 147, column: 14, scope: !6599)
!6609 = !DILocation(line: 147, column: 22, scope: !6599)
!6610 = !DILocation(line: 148, column: 5, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6599, file: !6479, line: 147, column: 40)
!6612 = !DILocation(line: 149, column: 5, scope: !6611)
!6613 = distinct !{!6613, !6614, !6615}
!6614 = !DILocation(line: 147, column: 2, scope: !6599)
!6615 = !DILocation(line: 150, column: 2, scope: !6599)
!6616 = !DILocation(line: 152, column: 9, scope: !6599)
!6617 = !DILocation(line: 152, column: 15, scope: !6599)
!6618 = !DILocation(line: 152, column: 13, scope: !6599)
!6619 = !DILocation(line: 152, column: 2, scope: !6599)
!6620 = distinct !DISubprogram(name: "strncmp", scope: !6479, file: !6479, line: 162, type: !6621, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2676, retainedNodes: !6623)
!6621 = !DISubroutineType(types: !6622)
!6622 = !{!103, !144, !144, !200}
!6623 = !{!6624, !6625, !6626}
!6624 = !DILocalVariable(name: "s1", arg: 1, scope: !6620, file: !6479, line: 162, type: !144)
!6625 = !DILocalVariable(name: "s2", arg: 2, scope: !6620, file: !6479, line: 162, type: !144)
!6626 = !DILocalVariable(name: "n", arg: 3, scope: !6620, file: !6479, line: 162, type: !200)
!6627 = !DILocation(line: 0, scope: !6620)
!6628 = !DILocation(line: 164, column: 17, scope: !6620)
!6629 = !DILocation(line: 164, column: 21, scope: !6620)
!6630 = !DILocation(line: 164, column: 28, scope: !6620)
!6631 = !DILocation(line: 164, column: 25, scope: !6620)
!6632 = !DILocation(line: 164, column: 33, scope: !6620)
!6633 = !DILocation(line: 165, column: 5, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6620, file: !6479, line: 164, column: 51)
!6635 = !DILocation(line: 166, column: 5, scope: !6634)
!6636 = !DILocation(line: 167, column: 4, scope: !6634)
!6637 = distinct !{!6637, !6638, !6639}
!6638 = !DILocation(line: 164, column: 2, scope: !6620)
!6639 = !DILocation(line: 168, column: 2, scope: !6620)
!6640 = !DILocation(line: 170, column: 25, scope: !6620)
!6641 = !DILocation(line: 170, column: 31, scope: !6620)
!6642 = !DILocation(line: 170, column: 29, scope: !6620)
!6643 = !DILocation(line: 170, column: 9, scope: !6620)
!6644 = !DILocation(line: 170, column: 2, scope: !6620)
!6645 = distinct !DISubprogram(name: "strtok_r", scope: !6479, file: !6479, line: 180, type: !6646, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2676, retainedNodes: !6649)
!6646 = !DISubroutineType(types: !6647)
!6647 = !{!957, !957, !144, !6648}
!6648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 32)
!6649 = !{!6650, !6651, !6652, !6653, !6654}
!6650 = !DILocalVariable(name: "str", arg: 1, scope: !6645, file: !6479, line: 180, type: !957)
!6651 = !DILocalVariable(name: "sep", arg: 2, scope: !6645, file: !6479, line: 180, type: !144)
!6652 = !DILocalVariable(name: "state", arg: 3, scope: !6645, file: !6479, line: 180, type: !6648)
!6653 = !DILocalVariable(name: "start", scope: !6645, file: !6479, line: 182, type: !957)
!6654 = !DILocalVariable(name: "end", scope: !6645, file: !6479, line: 182, type: !957)
!6655 = !DILocation(line: 0, scope: !6645)
!6656 = !DILocation(line: 184, column: 10, scope: !6645)
!6657 = !DILocation(line: 184, column: 22, scope: !6645)
!6658 = !DILocation(line: 187, column: 9, scope: !6645)
!6659 = !DILocation(line: 187, column: 16, scope: !6645)
!6660 = !DILocation(line: 187, column: 19, scope: !6645)
!6661 = !DILocation(line: 187, column: 2, scope: !6645)
!6662 = !DILocation(line: 188, column: 8, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6645, file: !6479, line: 187, column: 40)
!6664 = distinct !{!6664, !6661, !6665}
!6665 = !DILocation(line: 189, column: 2, scope: !6645)
!6666 = !DILocation(line: 198, column: 9, scope: !6645)
!6667 = !DILocation(line: 198, column: 18, scope: !6645)
!6668 = !DILocation(line: 198, column: 17, scope: !6645)
!6669 = !DILocation(line: 198, column: 2, scope: !6645)
!6670 = !DILocation(line: 199, column: 6, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6645, file: !6479, line: 198, column: 37)
!6672 = !DILocation(line: 198, column: 14, scope: !6645)
!6673 = distinct !{!6673, !6669, !6674}
!6674 = !DILocation(line: 200, column: 2, scope: !6645)
!6675 = !DILocation(line: 203, column: 8, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6677, file: !6479, line: 202, column: 20)
!6677 = distinct !DILexicalBlock(scope: !6645, file: !6479, line: 202, column: 6)
!6678 = !DILocation(line: 204, column: 16, scope: !6676)
!6679 = !DILocation(line: 205, column: 2, scope: !6676)
!6680 = !DILocation(line: 210, column: 1, scope: !6645)
!6681 = distinct !DISubprogram(name: "strcat", scope: !6479, file: !6479, line: 212, type: !6480, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2676, retainedNodes: !6682)
!6682 = !{!6683, !6684}
!6683 = !DILocalVariable(name: "dest", arg: 1, scope: !6681, file: !6479, line: 212, type: !6482)
!6684 = !DILocalVariable(name: "src", arg: 2, scope: !6681, file: !6479, line: 212, type: !6483)
!6685 = !DILocation(line: 0, scope: !6681)
!6686 = !DILocation(line: 214, column: 16, scope: !6681)
!6687 = !DILocation(line: 214, column: 14, scope: !6681)
!6688 = !DILocation(line: 214, column: 2, scope: !6681)
!6689 = !DILocation(line: 215, column: 2, scope: !6681)
!6690 = distinct !DISubprogram(name: "strncat", scope: !6479, file: !6479, line: 218, type: !6501, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2676, retainedNodes: !6691)
!6691 = !{!6692, !6693, !6694, !6695, !6696}
!6692 = !DILocalVariable(name: "dest", arg: 1, scope: !6690, file: !6479, line: 218, type: !6482)
!6693 = !DILocalVariable(name: "src", arg: 2, scope: !6690, file: !6479, line: 218, type: !6483)
!6694 = !DILocalVariable(name: "n", arg: 3, scope: !6690, file: !6479, line: 219, type: !200)
!6695 = !DILocalVariable(name: "orig_dest", scope: !6690, file: !6479, line: 221, type: !957)
!6696 = !DILocalVariable(name: "len", scope: !6690, file: !6479, line: 222, type: !200)
!6697 = !DILocation(line: 0, scope: !6690)
!6698 = !DILocation(line: 222, column: 15, scope: !6690)
!6699 = !DILocation(line: 224, column: 7, scope: !6690)
!6700 = !DILocation(line: 225, column: 14, scope: !6690)
!6701 = !DILocation(line: 225, column: 19, scope: !6690)
!6702 = !DILocation(line: 225, column: 11, scope: !6690)
!6703 = !DILocation(line: 225, column: 23, scope: !6690)
!6704 = !DILocation(line: 225, column: 28, scope: !6690)
!6705 = !DILocation(line: 225, column: 2, scope: !6690)
!6706 = !DILocation(line: 226, column: 17, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6690, file: !6479, line: 225, column: 38)
!6708 = !DILocation(line: 226, column: 8, scope: !6707)
!6709 = !DILocation(line: 226, column: 11, scope: !6707)
!6710 = distinct !{!6710, !6705, !6711}
!6711 = !DILocation(line: 227, column: 2, scope: !6690)
!6712 = !DILocation(line: 228, column: 8, scope: !6690)
!6713 = !DILocation(line: 230, column: 2, scope: !6690)
!6714 = distinct !DISubprogram(name: "memcmp", scope: !6479, file: !6479, line: 239, type: !6715, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2676, retainedNodes: !6717)
!6715 = !DISubroutineType(types: !6716)
!6716 = !{!103, !13, !13, !200}
!6717 = !{!6718, !6719, !6720, !6721, !6722}
!6718 = !DILocalVariable(name: "m1", arg: 1, scope: !6714, file: !6479, line: 239, type: !13)
!6719 = !DILocalVariable(name: "m2", arg: 2, scope: !6714, file: !6479, line: 239, type: !13)
!6720 = !DILocalVariable(name: "n", arg: 3, scope: !6714, file: !6479, line: 239, type: !200)
!6721 = !DILocalVariable(name: "c1", scope: !6714, file: !6479, line: 241, type: !144)
!6722 = !DILocalVariable(name: "c2", scope: !6714, file: !6479, line: 242, type: !144)
!6723 = !DILocation(line: 0, scope: !6714)
!6724 = !DILocation(line: 244, column: 7, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6714, file: !6479, line: 244, column: 6)
!6726 = !DILocation(line: 244, column: 6, scope: !6714)
!6727 = !DILocation(line: 248, column: 10, scope: !6714)
!6728 = !DILocation(line: 248, column: 14, scope: !6714)
!6729 = !DILocation(line: 248, column: 19, scope: !6714)
!6730 = !DILocation(line: 248, column: 2, scope: !6714)
!6731 = !DILocation(line: 248, column: 23, scope: !6714)
!6732 = !DILocation(line: 248, column: 30, scope: !6714)
!6733 = !DILocation(line: 248, column: 27, scope: !6714)
!6734 = !DILocation(line: 249, column: 5, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6714, file: !6479, line: 248, column: 36)
!6736 = !DILocation(line: 250, column: 5, scope: !6735)
!6737 = distinct !{!6737, !6730, !6738}
!6738 = !DILocation(line: 251, column: 2, scope: !6714)
!6739 = !DILocation(line: 253, column: 9, scope: !6714)
!6740 = !DILocation(line: 253, column: 15, scope: !6714)
!6741 = !DILocation(line: 253, column: 13, scope: !6714)
!6742 = !DILocation(line: 253, column: 2, scope: !6714)
!6743 = !DILocation(line: 254, column: 1, scope: !6714)
!6744 = distinct !DISubprogram(name: "memmove", scope: !6479, file: !6479, line: 263, type: !6745, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2676, retainedNodes: !6747)
!6745 = !DISubroutineType(types: !6746)
!6746 = !{!102, !102, !13, !200}
!6747 = !{!6748, !6749, !6750, !6751, !6752}
!6748 = !DILocalVariable(name: "d", arg: 1, scope: !6744, file: !6479, line: 263, type: !102)
!6749 = !DILocalVariable(name: "s", arg: 2, scope: !6744, file: !6479, line: 263, type: !13)
!6750 = !DILocalVariable(name: "n", arg: 3, scope: !6744, file: !6479, line: 263, type: !200)
!6751 = !DILocalVariable(name: "dest", scope: !6744, file: !6479, line: 265, type: !957)
!6752 = !DILocalVariable(name: "src", scope: !6744, file: !6479, line: 266, type: !144)
!6753 = !DILocation(line: 0, scope: !6744)
!6754 = !DILocation(line: 268, column: 21, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6744, file: !6479, line: 268, column: 6)
!6756 = !DILocation(line: 268, column: 28, scope: !6755)
!6757 = !DILocation(line: 268, column: 6, scope: !6744)
!6758 = !DILocation(line: 280, column: 12, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6755, file: !6479, line: 278, column: 9)
!6760 = !DILocation(line: 280, column: 3, scope: !6759)
!6761 = !DILocation(line: 275, column: 5, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6763, file: !6479, line: 274, column: 17)
!6763 = distinct !DILexicalBlock(scope: !6755, file: !6479, line: 268, column: 33)
!6764 = !DILocation(line: 276, column: 14, scope: !6762)
!6765 = !DILocation(line: 276, column: 4, scope: !6762)
!6766 = !DILocation(line: 276, column: 12, scope: !6762)
!6767 = !DILocation(line: 274, column: 12, scope: !6763)
!6768 = !DILocation(line: 274, column: 3, scope: !6763)
!6769 = distinct !{!6769, !6768, !6770}
!6770 = !DILocation(line: 277, column: 3, scope: !6763)
!6771 = !DILocation(line: 281, column: 12, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6759, file: !6479, line: 280, column: 17)
!6773 = !DILocation(line: 281, column: 10, scope: !6772)
!6774 = !DILocation(line: 282, column: 8, scope: !6772)
!6775 = !DILocation(line: 283, column: 7, scope: !6772)
!6776 = !DILocation(line: 284, column: 5, scope: !6772)
!6777 = distinct !{!6777, !6760, !6778}
!6778 = !DILocation(line: 285, column: 3, scope: !6759)
!6779 = !DILocation(line: 288, column: 2, scope: !6744)
!6780 = distinct !DISubprogram(name: "memcpy", scope: !6479, file: !6479, line: 298, type: !6781, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2676, retainedNodes: !6785)
!6781 = !DISubroutineType(types: !6782)
!6782 = !{!102, !6783, !6784, !200}
!6783 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!6784 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!6785 = !{!6786, !6787, !6788, !6789, !6790}
!6786 = !DILocalVariable(name: "d", arg: 1, scope: !6780, file: !6479, line: 298, type: !6783)
!6787 = !DILocalVariable(name: "s", arg: 2, scope: !6780, file: !6479, line: 298, type: !6784)
!6788 = !DILocalVariable(name: "n", arg: 3, scope: !6780, file: !6479, line: 298, type: !200)
!6789 = !DILocalVariable(name: "d_byte", scope: !6780, file: !6479, line: 302, type: !792)
!6790 = !DILocalVariable(name: "s_byte", scope: !6780, file: !6479, line: 303, type: !2679)
!6791 = !DILocation(line: 0, scope: !6780)
!6792 = !DILocation(line: 337, column: 11, scope: !6780)
!6793 = !DILocation(line: 337, column: 2, scope: !6780)
!6794 = !DILocation(line: 338, column: 25, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6780, file: !6479, line: 337, column: 16)
!6796 = !DILocation(line: 338, column: 17, scope: !6795)
!6797 = !DILocation(line: 338, column: 11, scope: !6795)
!6798 = !DILocation(line: 338, column: 15, scope: !6795)
!6799 = !DILocation(line: 339, column: 4, scope: !6795)
!6800 = distinct !{!6800, !6793, !6801}
!6801 = !DILocation(line: 340, column: 2, scope: !6780)
!6802 = !DILocation(line: 342, column: 2, scope: !6780)
!6803 = distinct !DISubprogram(name: "memset", scope: !6479, file: !6479, line: 352, type: !6804, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2676, retainedNodes: !6806)
!6804 = !DISubroutineType(types: !6805)
!6805 = !{!102, !102, !103, !200}
!6806 = !{!6807, !6808, !6809, !6810, !6811}
!6807 = !DILocalVariable(name: "buf", arg: 1, scope: !6803, file: !6479, line: 352, type: !102)
!6808 = !DILocalVariable(name: "c", arg: 2, scope: !6803, file: !6479, line: 352, type: !103)
!6809 = !DILocalVariable(name: "n", arg: 3, scope: !6803, file: !6479, line: 352, type: !200)
!6810 = !DILocalVariable(name: "d_byte", scope: !6803, file: !6479, line: 356, type: !792)
!6811 = !DILocalVariable(name: "c_byte", scope: !6803, file: !6479, line: 357, type: !155)
!6812 = !DILocation(line: 0, scope: !6803)
!6813 = !DILocation(line: 357, column: 25, scope: !6803)
!6814 = !DILocation(line: 389, column: 11, scope: !6803)
!6815 = !DILocation(line: 389, column: 2, scope: !6803)
!6816 = !DILocation(line: 390, column: 11, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6803, file: !6479, line: 389, column: 16)
!6818 = !DILocation(line: 390, column: 15, scope: !6817)
!6819 = !DILocation(line: 391, column: 4, scope: !6817)
!6820 = distinct !{!6820, !6815, !6821}
!6821 = !DILocation(line: 392, column: 2, scope: !6803)
!6822 = !DILocation(line: 394, column: 2, scope: !6803)
!6823 = distinct !DISubprogram(name: "memchr", scope: !6479, file: !6479, line: 404, type: !6824, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2676, retainedNodes: !6826)
!6824 = !DISubroutineType(types: !6825)
!6825 = !{!102, !13, !103, !200}
!6826 = !{!6827, !6828, !6829, !6830}
!6827 = !DILocalVariable(name: "s", arg: 1, scope: !6823, file: !6479, line: 404, type: !13)
!6828 = !DILocalVariable(name: "c", arg: 2, scope: !6823, file: !6479, line: 404, type: !103)
!6829 = !DILocalVariable(name: "n", arg: 3, scope: !6823, file: !6479, line: 404, type: !200)
!6830 = !DILocalVariable(name: "p", scope: !6831, file: !6479, line: 407, type: !2679)
!6831 = distinct !DILexicalBlock(scope: !6832, file: !6479, line: 406, column: 14)
!6832 = distinct !DILexicalBlock(scope: !6823, file: !6479, line: 406, column: 6)
!6833 = !DILocation(line: 0, scope: !6823)
!6834 = !DILocation(line: 406, column: 8, scope: !6832)
!6835 = !DILocation(line: 406, column: 6, scope: !6823)
!6836 = !DILocation(line: 409, column: 3, scope: !6831)
!6837 = !DILocation(line: 0, scope: !6831)
!6838 = !DILocation(line: 410, column: 8, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6840, file: !6479, line: 410, column: 8)
!6840 = distinct !DILexicalBlock(scope: !6831, file: !6479, line: 409, column: 6)
!6841 = !DILocation(line: 410, column: 13, scope: !6839)
!6842 = !DILocation(line: 410, column: 8, scope: !6840)
!6843 = distinct !{!6843, !6836, !6844}
!6844 = !DILocation(line: 414, column: 20, scope: !6831)
!6845 = !DILocation(line: 417, column: 2, scope: !6823)
!6846 = !DILocation(line: 418, column: 1, scope: !6823)
!6847 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !394, file: !394, line: 23, type: !3066, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6848)
!6848 = !{!6849}
!6849 = !DILocalVariable(name: "hook", arg: 1, scope: !6847, file: !394, line: 23, type: !106)
!6850 = !DILocation(line: 0, scope: !6847)
!6851 = !DILocation(line: 25, column: 15, scope: !6847)
!6852 = !DILocation(line: 26, column: 1, scope: !6847)
!6853 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !394, file: !394, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6854)
!6854 = !{!6855}
!6855 = !DILocalVariable(name: "c", arg: 1, scope: !6853, file: !394, line: 14, type: !103)
!6856 = !DILocation(line: 0, scope: !6853)
!6857 = !DILocation(line: 18, column: 2, scope: !6853)
!6858 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !394, file: !394, line: 28, type: !6859, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6861)
!6859 = !DISubroutineType(types: !6860)
!6860 = !{!103, !103, !390}
!6861 = !{!6862, !6863}
!6862 = !DILocalVariable(name: "c", arg: 1, scope: !6858, file: !394, line: 28, type: !103)
!6863 = !DILocalVariable(name: "stream", arg: 2, scope: !6858, file: !394, line: 28, type: !390)
!6864 = !DILocation(line: 0, scope: !6858)
!6865 = !DILocation(line: 30, column: 27, scope: !6858)
!6866 = !DILocation(line: 30, column: 50, scope: !6858)
!6867 = !DILocation(line: 30, column: 9, scope: !6858)
!6868 = !DILocation(line: 30, column: 2, scope: !6858)
!6869 = distinct !DISubprogram(name: "fputc", scope: !394, file: !394, line: 41, type: !6859, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6870)
!6870 = !{!6871, !6872}
!6871 = !DILocalVariable(name: "c", arg: 1, scope: !6869, file: !394, line: 41, type: !103)
!6872 = !DILocalVariable(name: "stream", arg: 2, scope: !6869, file: !394, line: 41, type: !390)
!6873 = !DILocation(line: 0, scope: !6869)
!6874 = !DILocation(line: 43, column: 9, scope: !6869)
!6875 = !DILocation(line: 43, column: 2, scope: !6869)
!6876 = distinct !DISubprogram(name: "zephyr_fputc", scope: !6877, file: !6877, line: 72, type: !6859, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6878)
!6877 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!6878 = !{!6879, !6880}
!6879 = !DILocalVariable(name: "c", arg: 1, scope: !6876, file: !6877, line: 72, type: !103)
!6880 = !DILocalVariable(name: "stream", arg: 2, scope: !6876, file: !6877, line: 72, type: !390)
!6881 = !DILocation(line: 0, scope: !6876)
!6882 = !DILocation(line: 81, column: 2, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6876, file: !6877, line: 81, column: 2)
!6884 = !{i64 2154126750}
!6885 = !DILocation(line: 82, column: 9, scope: !6876)
!6886 = !DILocation(line: 82, column: 2, scope: !6876)
!6887 = distinct !DISubprogram(name: "fputs", scope: !394, file: !394, line: 46, type: !6888, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6891)
!6888 = !DISubroutineType(types: !6889)
!6889 = !{!103, !6483, !6890}
!6890 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !390)
!6891 = !{!6892, !6893, !6894, !6895}
!6892 = !DILocalVariable(name: "s", arg: 1, scope: !6887, file: !394, line: 46, type: !6483)
!6893 = !DILocalVariable(name: "stream", arg: 2, scope: !6887, file: !394, line: 46, type: !6890)
!6894 = !DILocalVariable(name: "len", scope: !6887, file: !394, line: 48, type: !103)
!6895 = !DILocalVariable(name: "ret", scope: !6887, file: !394, line: 49, type: !103)
!6896 = !DILocation(line: 0, scope: !6887)
!6897 = !DILocation(line: 48, column: 12, scope: !6887)
!6898 = !DILocation(line: 51, column: 8, scope: !6887)
!6899 = !DILocation(line: 53, column: 13, scope: !6887)
!6900 = !DILocation(line: 53, column: 9, scope: !6887)
!6901 = !DILocation(line: 53, column: 2, scope: !6887)
!6902 = distinct !DISubprogram(name: "fwrite", scope: !394, file: !394, line: 99, type: !6903, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6905)
!6903 = !DISubroutineType(types: !6904)
!6904 = !{!200, !6784, !200, !200, !6890}
!6905 = !{!6906, !6907, !6908, !6909}
!6906 = !DILocalVariable(name: "ptr", arg: 1, scope: !6902, file: !394, line: 99, type: !6784)
!6907 = !DILocalVariable(name: "size", arg: 2, scope: !6902, file: !394, line: 99, type: !200)
!6908 = !DILocalVariable(name: "nitems", arg: 3, scope: !6902, file: !394, line: 99, type: !200)
!6909 = !DILocalVariable(name: "stream", arg: 4, scope: !6902, file: !394, line: 100, type: !6890)
!6910 = !DILocation(line: 0, scope: !6902)
!6911 = !DILocation(line: 102, column: 9, scope: !6902)
!6912 = !DILocation(line: 102, column: 2, scope: !6902)
!6913 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !6877, file: !6877, line: 96, type: !6903, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6914)
!6914 = !{!6915, !6916, !6917, !6918}
!6915 = !DILocalVariable(name: "ptr", arg: 1, scope: !6913, file: !6877, line: 96, type: !6784)
!6916 = !DILocalVariable(name: "size", arg: 2, scope: !6913, file: !6877, line: 96, type: !200)
!6917 = !DILocalVariable(name: "nitems", arg: 3, scope: !6913, file: !6877, line: 96, type: !200)
!6918 = !DILocalVariable(name: "stream", arg: 4, scope: !6913, file: !6877, line: 96, type: !6890)
!6919 = !DILocation(line: 0, scope: !6913)
!6920 = !DILocation(line: 107, column: 2, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6913, file: !6877, line: 107, column: 2)
!6922 = !{i64 2154126854}
!6923 = !DILocation(line: 108, column: 9, scope: !6913)
!6924 = !DILocation(line: 108, column: 2, scope: !6913)
!6925 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !394, file: !394, line: 56, type: !6903, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6926)
!6926 = !{!6927, !6928, !6929, !6930, !6931, !6932, !6933, !6934}
!6927 = !DILocalVariable(name: "ptr", arg: 1, scope: !6925, file: !394, line: 56, type: !6784)
!6928 = !DILocalVariable(name: "size", arg: 2, scope: !6925, file: !394, line: 56, type: !200)
!6929 = !DILocalVariable(name: "nitems", arg: 3, scope: !6925, file: !394, line: 57, type: !200)
!6930 = !DILocalVariable(name: "stream", arg: 4, scope: !6925, file: !394, line: 57, type: !6890)
!6931 = !DILocalVariable(name: "i", scope: !6925, file: !394, line: 59, type: !200)
!6932 = !DILocalVariable(name: "j", scope: !6925, file: !394, line: 60, type: !200)
!6933 = !DILocalVariable(name: "p", scope: !6925, file: !394, line: 61, type: !2679)
!6934 = !DILabel(scope: !6925, name: "done", file: !394, line: 82)
!6935 = !DILocation(line: 0, scope: !6925)
!6936 = !DILocation(line: 63, column: 14, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6925, file: !394, line: 63, column: 6)
!6938 = !DILocation(line: 63, column: 24, scope: !6937)
!6939 = !DILocation(line: 72, column: 3, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6925, file: !394, line: 70, column: 5)
!6941 = !DILocation(line: 0, scope: !6940)
!6942 = !DILocation(line: 73, column: 8, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6944, file: !394, line: 73, column: 8)
!6944 = distinct !DILexicalBlock(scope: !6940, file: !394, line: 72, column: 6)
!6945 = !DILocation(line: 73, column: 29, scope: !6943)
!6946 = !DILocation(line: 73, column: 27, scope: !6943)
!6947 = !DILocation(line: 73, column: 21, scope: !6943)
!6948 = !DILocation(line: 73, column: 33, scope: !6943)
!6949 = !DILocation(line: 73, column: 8, scope: !6944)
!6950 = !DILocation(line: 76, column: 5, scope: !6944)
!6951 = !DILocation(line: 77, column: 14, scope: !6940)
!6952 = !DILocation(line: 77, column: 3, scope: !6944)
!6953 = distinct !{!6953, !6939, !6954}
!6954 = !DILocation(line: 77, column: 17, scope: !6940)
!6955 = !DILocation(line: 79, column: 4, scope: !6940)
!6956 = !DILocation(line: 80, column: 13, scope: !6925)
!6957 = !DILocation(line: 80, column: 2, scope: !6940)
!6958 = distinct !{!6958, !6959, !6960}
!6959 = !DILocation(line: 70, column: 2, scope: !6925)
!6960 = !DILocation(line: 80, column: 16, scope: !6925)
!6961 = !DILocation(line: 82, column: 1, scope: !6925)
!6962 = !DILocation(line: 83, column: 17, scope: !6925)
!6963 = !DILocation(line: 83, column: 2, scope: !6925)
!6964 = !DILocation(line: 84, column: 1, scope: !6925)
!6965 = distinct !DISubprogram(name: "puts", scope: !394, file: !394, line: 106, type: !6966, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6968)
!6966 = !DISubroutineType(types: !6967)
!6967 = !{!103, !144}
!6968 = !{!6969}
!6969 = !DILocalVariable(name: "s", arg: 1, scope: !6965, file: !394, line: 106, type: !144)
!6970 = !DILocation(line: 0, scope: !6965)
!6971 = !DILocation(line: 108, column: 6, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6965, file: !394, line: 108, column: 6)
!6973 = !DILocation(line: 108, column: 23, scope: !6972)
!6974 = !DILocation(line: 108, column: 6, scope: !6965)
!6975 = !DILocation(line: 112, column: 9, scope: !6965)
!6976 = !DILocation(line: 112, column: 29, scope: !6965)
!6977 = !DILocation(line: 112, column: 2, scope: !6965)
!6978 = !DILocation(line: 113, column: 1, scope: !6965)
!6979 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !506, file: !506, line: 368, type: !559, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6980)
!6980 = !{!6981}
!6981 = !DILocalVariable(name: "dev", arg: 1, scope: !6979, file: !506, line: 368, type: !535)
!6982 = !DILocation(line: 0, scope: !6979)
!6983 = !DILocation(line: 370, column: 2, scope: !6979)
!6984 = !DILocation(line: 371, column: 1, scope: !6979)
!6985 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !506, file: !506, line: 243, type: !6986, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6988)
!6986 = !DISubroutineType(types: !6987)
!6987 = !{null, !103, !103, !535}
!6988 = !{!6989, !6990, !6991, !6992, !6994}
!6989 = !DILocalVariable(name: "min", arg: 1, scope: !6985, file: !506, line: 243, type: !103)
!6990 = !DILocalVariable(name: "max", arg: 2, scope: !6985, file: !506, line: 243, type: !103)
!6991 = !DILocalVariable(name: "dev", arg: 3, scope: !6985, file: !506, line: 243, type: !535)
!6992 = !DILocalVariable(name: "data", scope: !6985, file: !506, line: 245, type: !6993)
!6993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 32)
!6994 = !DILocalVariable(name: "line", scope: !6985, file: !506, line: 246, type: !103)
!6995 = !DILocation(line: 0, scope: !6985)
!6996 = !DILocation(line: 245, column: 38, scope: !6985)
!6997 = !DILocation(line: 249, column: 24, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6999, file: !506, line: 249, column: 2)
!6999 = distinct !DILexicalBlock(scope: !6985, file: !506, line: 249, column: 2)
!7000 = !DILocation(line: 249, column: 2, scope: !6999)
!7001 = !DILocation(line: 251, column: 7, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !7003, file: !506, line: 251, column: 7)
!7003 = distinct !DILexicalBlock(scope: !6998, file: !506, line: 249, column: 39)
!7004 = !DILocation(line: 251, column: 7, scope: !7003)
!7005 = !DILocation(line: 253, column: 4, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !7002, file: !506, line: 251, column: 36)
!7007 = !DILocation(line: 256, column: 24, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !7006, file: !506, line: 256, column: 8)
!7009 = !DILocation(line: 256, column: 9, scope: !7008)
!7010 = !DILocation(line: 256, column: 8, scope: !7006)
!7011 = !DILocation(line: 260, column: 43, scope: !7006)
!7012 = !DILocation(line: 260, column: 4, scope: !7006)
!7013 = !DILocation(line: 261, column: 3, scope: !7006)
!7014 = !DILocation(line: 249, column: 35, scope: !6998)
!7015 = distinct !{!7015, !7000, !7016}
!7016 = !DILocation(line: 262, column: 2, scope: !6999)
!7017 = !DILocation(line: 263, column: 1, scope: !6985)
!7018 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !506, file: !506, line: 158, type: !107, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7019)
!7019 = !{!7020}
!7020 = !DILocalVariable(name: "line", arg: 1, scope: !7018, file: !506, line: 158, type: !103)
!7021 = !DILocation(line: 0, scope: !7018)
!7022 = !DILocation(line: 170, column: 38, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7024, file: !506, line: 160, column: 17)
!7024 = distinct !DILexicalBlock(scope: !7018, file: !506, line: 160, column: 6)
!7025 = !DILocation(line: 170, column: 10, scope: !7023)
!7026 = !DILocation(line: 176, column: 1, scope: !7018)
!7027 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !506, file: !506, line: 183, type: !7028, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7030)
!7028 = !DISubroutineType(types: !7029)
!7029 = !{null, !103}
!7030 = !{!7031}
!7031 = !DILocalVariable(name: "line", arg: 1, scope: !7027, file: !506, line: 183, type: !103)
!7032 = !DILocation(line: 0, scope: !7027)
!7033 = !DILocation(line: 195, column: 28, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7035, file: !506, line: 185, column: 17)
!7035 = distinct !DILexicalBlock(scope: !7027, file: !506, line: 185, column: 6)
!7036 = !DILocation(line: 195, column: 3, scope: !7034)
!7037 = !DILocation(line: 200, column: 1, scope: !7027)
!7038 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7039, file: !7039, line: 910, type: !5474, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7040)
!7039 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7040 = !{!7041}
!7041 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7038, file: !7039, line: 910, type: !121)
!7042 = !DILocation(line: 0, scope: !7038)
!7043 = !DILocation(line: 912, column: 3, scope: !7038)
!7044 = !DILocation(line: 913, column: 1, scope: !7038)
!7045 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7039, file: !7039, line: 834, type: !6391, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7046)
!7046 = !{!7047}
!7047 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7045, file: !7039, line: 834, type: !121)
!7048 = !DILocation(line: 0, scope: !7045)
!7049 = !DILocation(line: 836, column: 11, scope: !7045)
!7050 = !DILocation(line: 836, column: 40, scope: !7045)
!7051 = !DILocation(line: 836, column: 3, scope: !7045)
!7052 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !506, file: !506, line: 304, type: !559, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7053)
!7053 = !{!7054}
!7054 = !DILocalVariable(name: "dev", arg: 1, scope: !7052, file: !506, line: 304, type: !535)
!7055 = !DILocation(line: 0, scope: !7052)
!7056 = !DILocation(line: 306, column: 2, scope: !7052)
!7057 = !DILocation(line: 307, column: 1, scope: !7052)
!7058 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !506, file: !506, line: 299, type: !559, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7059)
!7059 = !{!7060}
!7060 = !DILocalVariable(name: "dev", arg: 1, scope: !7058, file: !506, line: 299, type: !535)
!7061 = !DILocation(line: 0, scope: !7058)
!7062 = !DILocation(line: 301, column: 2, scope: !7058)
!7063 = !DILocation(line: 302, column: 1, scope: !7058)
!7064 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !506, file: !506, line: 294, type: !559, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7065)
!7065 = !{!7066}
!7066 = !DILocalVariable(name: "dev", arg: 1, scope: !7064, file: !506, line: 294, type: !535)
!7067 = !DILocation(line: 0, scope: !7064)
!7068 = !DILocation(line: 296, column: 2, scope: !7064)
!7069 = !DILocation(line: 297, column: 1, scope: !7064)
!7070 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !506, file: !506, line: 397, type: !559, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7071)
!7071 = !{!7072}
!7072 = !DILocalVariable(name: "dev", arg: 1, scope: !7070, file: !506, line: 397, type: !535)
!7073 = !DILocation(line: 0, scope: !7070)
!7074 = !DILocation(line: 399, column: 2, scope: !7070)
!7075 = !DILocation(line: 400, column: 1, scope: !7070)
!7076 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !506, file: !506, line: 392, type: !559, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7077)
!7077 = !{!7078}
!7078 = !DILocalVariable(name: "dev", arg: 1, scope: !7076, file: !506, line: 392, type: !535)
!7079 = !DILocation(line: 0, scope: !7076)
!7080 = !DILocation(line: 394, column: 2, scope: !7076)
!7081 = !DILocation(line: 395, column: 1, scope: !7076)
!7082 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !506, file: !506, line: 289, type: !559, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7083)
!7083 = !{!7084}
!7084 = !DILocalVariable(name: "dev", arg: 1, scope: !7082, file: !506, line: 289, type: !535)
!7085 = !DILocation(line: 0, scope: !7082)
!7086 = !DILocation(line: 291, column: 2, scope: !7082)
!7087 = !DILocation(line: 292, column: 1, scope: !7082)
!7088 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !506, file: !506, line: 387, type: !559, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7089)
!7089 = !{!7090}
!7090 = !DILocalVariable(name: "dev", arg: 1, scope: !7088, file: !506, line: 387, type: !535)
!7091 = !DILocation(line: 0, scope: !7088)
!7092 = !DILocation(line: 389, column: 2, scope: !7088)
!7093 = !DILocation(line: 390, column: 1, scope: !7088)
!7094 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !506, file: !506, line: 382, type: !559, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7095)
!7095 = !{!7096}
!7096 = !DILocalVariable(name: "dev", arg: 1, scope: !7094, file: !506, line: 382, type: !535)
!7097 = !DILocation(line: 0, scope: !7094)
!7098 = !DILocation(line: 384, column: 2, scope: !7094)
!7099 = !DILocation(line: 385, column: 1, scope: !7094)
!7100 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !506, file: !506, line: 373, type: !559, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7101)
!7101 = !{!7102}
!7102 = !DILocalVariable(name: "dev", arg: 1, scope: !7100, file: !506, line: 373, type: !535)
!7103 = !DILocation(line: 0, scope: !7100)
!7104 = !DILocation(line: 375, column: 2, scope: !7100)
!7105 = !DILocation(line: 376, column: 1, scope: !7100)
!7106 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !506, file: !506, line: 284, type: !559, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7107)
!7107 = !{!7108}
!7108 = !DILocalVariable(name: "dev", arg: 1, scope: !7106, file: !506, line: 284, type: !535)
!7109 = !DILocation(line: 0, scope: !7106)
!7110 = !DILocation(line: 286, column: 2, scope: !7106)
!7111 = !DILocation(line: 287, column: 1, scope: !7106)
!7112 = distinct !DISubprogram(name: "stm32_exti_init", scope: !506, file: !506, line: 416, type: !533, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7113)
!7113 = !{!7114}
!7114 = !DILocalVariable(name: "dev", arg: 1, scope: !7112, file: !506, line: 416, type: !535)
!7115 = !DILocation(line: 0, scope: !7112)
!7116 = !DILocation(line: 418, column: 2, scope: !7112)
!7117 = !DILocation(line: 420, column: 2, scope: !7112)
!7118 = !DILocation(line: 0, scope: !558)
!7119 = !DILocation(line: 493, column: 2, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !558, file: !506, line: 493, column: 2)
!7121 = !DILocation(line: 497, column: 2, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !558, file: !506, line: 497, column: 2)
!7123 = !DILocation(line: 507, column: 2, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !558, file: !506, line: 507, column: 2)
!7125 = !DILocation(line: 512, column: 2, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !558, file: !506, line: 512, column: 2)
!7127 = !DILocation(line: 516, column: 2, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !558, file: !506, line: 516, column: 2)
!7129 = !DILocation(line: 523, column: 2, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !558, file: !506, line: 523, column: 2)
!7131 = !DILocation(line: 527, column: 2, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !558, file: !506, line: 527, column: 2)
!7133 = !DILocation(line: 581, column: 2, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !558, file: !506, line: 581, column: 2)
!7135 = !DILocation(line: 586, column: 2, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !558, file: !506, line: 586, column: 2)
!7137 = !DILocation(line: 591, column: 2, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !558, file: !506, line: 591, column: 2)
!7139 = !DILocation(line: 595, column: 2, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !558, file: !506, line: 595, column: 2)
!7141 = !DILocation(line: 607, column: 1, scope: !558)
!7142 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !506, file: !506, line: 112, type: !7028, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7143)
!7143 = !{!7144, !7145}
!7144 = !DILocalVariable(name: "line", arg: 1, scope: !7142, file: !506, line: 112, type: !103)
!7145 = !DILocalVariable(name: "irqnum", scope: !7142, file: !506, line: 114, type: !103)
!7146 = !DILocation(line: 0, scope: !7142)
!7147 = !DILocation(line: 121, column: 11, scope: !7142)
!7148 = !DILocation(line: 130, column: 26, scope: !7142)
!7149 = !DILocation(line: 130, column: 2, scope: !7142)
!7150 = !DILocation(line: 134, column: 2, scope: !7142)
!7151 = !DILocation(line: 135, column: 1, scope: !7142)
!7152 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7039, file: !7039, line: 268, type: !5474, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7153)
!7153 = !{!7154}
!7154 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7152, file: !7039, line: 268, type: !121)
!7155 = !DILocation(line: 0, scope: !7152)
!7156 = !DILocation(line: 270, column: 3, scope: !7152)
!7157 = !DILocation(line: 271, column: 1, scope: !7152)
!7158 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !506, file: !506, line: 137, type: !7028, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7159)
!7159 = !{!7160}
!7160 = !DILocalVariable(name: "line", arg: 1, scope: !7158, file: !506, line: 137, type: !103)
!7161 = !DILocation(line: 0, scope: !7158)
!7162 = !DILocation(line: 141, column: 11, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7158, file: !506, line: 141, column: 6)
!7164 = !DILocation(line: 141, column: 6, scope: !7158)
!7165 = !DILocation(line: 145, column: 28, scope: !7166)
!7166 = distinct !DILexicalBlock(scope: !7163, file: !506, line: 141, column: 17)
!7167 = !DILocation(line: 145, column: 3, scope: !7166)
!7168 = !DILocation(line: 147, column: 2, scope: !7166)
!7169 = !DILocation(line: 151, column: 1, scope: !7158)
!7170 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7039, file: !7039, line: 309, type: !5474, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7171)
!7171 = !{!7172}
!7172 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7170, file: !7039, line: 309, type: !121)
!7173 = !DILocation(line: 0, scope: !7170)
!7174 = !DILocation(line: 311, column: 3, scope: !7170)
!7175 = !DILocation(line: 312, column: 1, scope: !7170)
!7176 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !506, file: !506, line: 202, type: !7177, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7179)
!7177 = !DISubroutineType(types: !7178)
!7178 = !{null, !103, !103}
!7179 = !{!7180, !7181}
!7180 = !DILocalVariable(name: "line", arg: 1, scope: !7176, file: !506, line: 202, type: !103)
!7181 = !DILocalVariable(name: "trigger", arg: 2, scope: !7176, file: !506, line: 202, type: !103)
!7182 = !DILocation(line: 0, scope: !7176)
!7183 = !DILocation(line: 211, column: 2, scope: !7176)
!7184 = !DILocation(line: 213, column: 36, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7176, file: !506, line: 211, column: 19)
!7186 = !DILocation(line: 213, column: 3, scope: !7185)
!7187 = !DILocation(line: 214, column: 3, scope: !7185)
!7188 = !DILocation(line: 215, column: 3, scope: !7185)
!7189 = !DILocation(line: 217, column: 35, scope: !7185)
!7190 = !DILocation(line: 217, column: 3, scope: !7185)
!7191 = !DILocation(line: 218, column: 3, scope: !7185)
!7192 = !DILocation(line: 219, column: 3, scope: !7185)
!7193 = !DILocation(line: 221, column: 36, scope: !7185)
!7194 = !DILocation(line: 221, column: 3, scope: !7185)
!7195 = !DILocation(line: 222, column: 3, scope: !7185)
!7196 = !DILocation(line: 223, column: 3, scope: !7185)
!7197 = !DILocation(line: 225, column: 35, scope: !7185)
!7198 = !DILocation(line: 225, column: 3, scope: !7185)
!7199 = !DILocation(line: 226, column: 3, scope: !7185)
!7200 = !DILocation(line: 227, column: 3, scope: !7185)
!7201 = !DILocation(line: 232, column: 1, scope: !7176)
!7202 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7039, file: !7039, line: 573, type: !5474, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7203)
!7203 = !{!7204}
!7204 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7202, file: !7039, line: 573, type: !121)
!7205 = !DILocation(line: 0, scope: !7202)
!7206 = !DILocation(line: 575, column: 3, scope: !7202)
!7207 = !DILocation(line: 577, column: 1, scope: !7202)
!7208 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7039, file: !7039, line: 703, type: !5474, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7209)
!7209 = !{!7210}
!7210 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7208, file: !7039, line: 703, type: !121)
!7211 = !DILocation(line: 0, scope: !7208)
!7212 = !DILocation(line: 705, column: 3, scope: !7208)
!7213 = !DILocation(line: 706, column: 1, scope: !7208)
!7214 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7039, file: !7039, line: 529, type: !5474, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7215)
!7215 = !{!7216}
!7216 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7214, file: !7039, line: 529, type: !121)
!7217 = !DILocation(line: 0, scope: !7214)
!7218 = !DILocation(line: 531, column: 3, scope: !7214)
!7219 = !DILocation(line: 533, column: 1, scope: !7214)
!7220 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7039, file: !7039, line: 661, type: !5474, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7221)
!7221 = !{!7222}
!7222 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7220, file: !7039, line: 661, type: !121)
!7223 = !DILocation(line: 0, scope: !7220)
!7224 = !DILocation(line: 663, column: 3, scope: !7220)
!7225 = !DILocation(line: 664, column: 1, scope: !7220)
!7226 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !506, file: !506, line: 433, type: !7227, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7229)
!7227 = !DISubroutineType(types: !7228)
!7228 = !{!103, !103, !546, !102}
!7229 = !{!7230, !7231, !7232, !7233, !7235}
!7230 = !DILocalVariable(name: "line", arg: 1, scope: !7226, file: !506, line: 433, type: !103)
!7231 = !DILocalVariable(name: "cb", arg: 2, scope: !7226, file: !506, line: 433, type: !546)
!7232 = !DILocalVariable(name: "arg", arg: 3, scope: !7226, file: !506, line: 433, type: !102)
!7233 = !DILocalVariable(name: "dev", scope: !7226, file: !506, line: 435, type: !7234)
!7234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !535)
!7235 = !DILocalVariable(name: "data", scope: !7226, file: !506, line: 436, type: !6993)
!7236 = !DILocation(line: 0, scope: !7226)
!7237 = !DILocation(line: 438, column: 21, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7226, file: !506, line: 438, column: 6)
!7239 = !DILocation(line: 438, column: 6, scope: !7238)
!7240 = !DILocation(line: 438, column: 6, scope: !7226)
!7241 = !DILocation(line: 442, column: 20, scope: !7226)
!7242 = !DILocation(line: 443, column: 17, scope: !7226)
!7243 = !DILocation(line: 443, column: 22, scope: !7226)
!7244 = !DILocation(line: 445, column: 2, scope: !7226)
!7245 = !DILocation(line: 446, column: 1, scope: !7226)
!7246 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !506, file: !506, line: 448, type: !7028, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7247)
!7247 = !{!7248, !7249, !7250}
!7248 = !DILocalVariable(name: "line", arg: 1, scope: !7246, file: !506, line: 448, type: !103)
!7249 = !DILocalVariable(name: "dev", scope: !7246, file: !506, line: 450, type: !7234)
!7250 = !DILocalVariable(name: "data", scope: !7246, file: !506, line: 451, type: !6993)
!7251 = !DILocation(line: 0, scope: !7246)
!7252 = !DILocation(line: 453, column: 17, scope: !7246)
!7253 = !DILocation(line: 453, column: 20, scope: !7246)
!7254 = !DILocation(line: 454, column: 17, scope: !7246)
!7255 = !DILocation(line: 454, column: 22, scope: !7246)
!7256 = !DILocation(line: 455, column: 1, scope: !7246)
!7257 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !691, file: !691, line: 183, type: !729, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7258)
!7258 = !{!7259, !7260, !7261, !7262, !7263}
!7259 = !DILocalVariable(name: "dev", arg: 1, scope: !7257, file: !691, line: 183, type: !720)
!7260 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7257, file: !691, line: 184, type: !731)
!7261 = !DILocalVariable(name: "pclken", scope: !7257, file: !691, line: 186, type: !681)
!7262 = !DILocalVariable(name: "reg", scope: !7257, file: !691, line: 187, type: !1272)
!7263 = !DILocalVariable(name: "reg_val", scope: !7257, file: !691, line: 188, type: !121)
!7264 = !DILocation(line: 0, scope: !7257)
!7265 = !DILocation(line: 192, column: 6, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7257, file: !691, line: 192, column: 6)
!7267 = !DILocation(line: 192, column: 6, scope: !7257)
!7268 = !DILocation(line: 197, column: 52, scope: !7257)
!7269 = !DILocation(line: 197, column: 8, scope: !7257)
!7270 = !DILocation(line: 198, column: 12, scope: !7257)
!7271 = !DILocation(line: 199, column: 21, scope: !7257)
!7272 = !DILocation(line: 199, column: 10, scope: !7257)
!7273 = !DILocation(line: 200, column: 7, scope: !7257)
!7274 = !DILocation(line: 202, column: 2, scope: !7257)
!7275 = !DILocation(line: 203, column: 1, scope: !7257)
!7276 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !691, file: !691, line: 205, type: !729, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7277)
!7277 = !{!7278, !7279, !7280, !7281, !7282}
!7278 = !DILocalVariable(name: "dev", arg: 1, scope: !7276, file: !691, line: 205, type: !720)
!7279 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7276, file: !691, line: 206, type: !731)
!7280 = !DILocalVariable(name: "pclken", scope: !7276, file: !691, line: 208, type: !681)
!7281 = !DILocalVariable(name: "reg", scope: !7276, file: !691, line: 209, type: !1272)
!7282 = !DILocalVariable(name: "reg_val", scope: !7276, file: !691, line: 210, type: !121)
!7283 = !DILocation(line: 0, scope: !7276)
!7284 = !DILocation(line: 214, column: 6, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7276, file: !691, line: 214, column: 6)
!7286 = !DILocation(line: 214, column: 6, scope: !7276)
!7287 = !DILocation(line: 219, column: 52, scope: !7276)
!7288 = !DILocation(line: 219, column: 8, scope: !7276)
!7289 = !DILocation(line: 220, column: 12, scope: !7276)
!7290 = !DILocation(line: 221, column: 22, scope: !7276)
!7291 = !DILocation(line: 221, column: 13, scope: !7276)
!7292 = !DILocation(line: 221, column: 10, scope: !7276)
!7293 = !DILocation(line: 222, column: 7, scope: !7276)
!7294 = !DILocation(line: 224, column: 2, scope: !7276)
!7295 = !DILocation(line: 225, column: 1, scope: !7276)
!7296 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !691, file: !691, line: 262, type: !745, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7297)
!7297 = !{!7298, !7299, !7300, !7301, !7302, !7303, !7304, !7305}
!7298 = !DILocalVariable(name: "clock", arg: 1, scope: !7296, file: !691, line: 262, type: !720)
!7299 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7296, file: !691, line: 263, type: !731)
!7300 = !DILocalVariable(name: "rate", arg: 3, scope: !7296, file: !691, line: 264, type: !687)
!7301 = !DILocalVariable(name: "pclken", scope: !7296, file: !691, line: 266, type: !681)
!7302 = !DILocalVariable(name: "ahb_clock", scope: !7296, file: !691, line: 273, type: !121)
!7303 = !DILocalVariable(name: "apb1_clock", scope: !7296, file: !691, line: 274, type: !121)
!7304 = !DILocalVariable(name: "apb2_clock", scope: !7296, file: !691, line: 276, type: !121)
!7305 = !DILocalVariable(name: "ahb3_clock", scope: !7296, file: !691, line: 286, type: !121)
!7306 = !DILocation(line: 0, scope: !7296)
!7307 = !DILocation(line: 273, column: 23, scope: !7296)
!7308 = !DILocation(line: 299, column: 18, scope: !7296)
!7309 = !DILocation(line: 299, column: 2, scope: !7296)
!7310 = !DILocation(line: 274, column: 24, scope: !7296)
!7311 = !DILocation(line: 319, column: 3, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7296, file: !691, line: 299, column: 23)
!7313 = !DILocation(line: 276, column: 24, scope: !7296)
!7314 = !DILocation(line: 323, column: 3, scope: !7312)
!7315 = !DILocation(line: 346, column: 33, scope: !7312)
!7316 = !DILocation(line: 346, column: 11, scope: !7312)
!7317 = !DILocation(line: 350, column: 3, scope: !7312)
!7318 = !DILocation(line: 374, column: 3, scope: !7312)
!7319 = !DILocation(line: 379, column: 3, scope: !7312)
!7320 = !DILocation(line: 0, scope: !7312)
!7321 = !DILocation(line: 396, column: 1, scope: !7296)
!7322 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !691, file: !691, line: 227, type: !761, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7323)
!7323 = !{!7324, !7325, !7326, !7327, !7328, !7329, !7330, !7331}
!7324 = !DILocalVariable(name: "dev", arg: 1, scope: !7322, file: !691, line: 227, type: !720)
!7325 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7322, file: !691, line: 228, type: !731)
!7326 = !DILocalVariable(name: "data", arg: 3, scope: !7322, file: !691, line: 229, type: !102)
!7327 = !DILocalVariable(name: "pclken", scope: !7322, file: !691, line: 233, type: !681)
!7328 = !DILocalVariable(name: "reg", scope: !7322, file: !691, line: 234, type: !1272)
!7329 = !DILocalVariable(name: "reg_val", scope: !7322, file: !691, line: 235, type: !121)
!7330 = !DILocalVariable(name: "dt_val", scope: !7322, file: !691, line: 235, type: !121)
!7331 = !DILocalVariable(name: "err", scope: !7322, file: !691, line: 236, type: !103)
!7332 = !DILocation(line: 0, scope: !7322)
!7333 = !DILocation(line: 241, column: 30, scope: !7322)
!7334 = !DILocation(line: 241, column: 8, scope: !7322)
!7335 = !DILocation(line: 242, column: 10, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7322, file: !691, line: 242, column: 6)
!7337 = !DILocation(line: 242, column: 6, scope: !7322)
!7338 = !DILocation(line: 247, column: 11, scope: !7322)
!7339 = !DILocation(line: 248, column: 6, scope: !7322)
!7340 = !DILocation(line: 247, column: 44, scope: !7322)
!7341 = !DILocation(line: 250, column: 6, scope: !7322)
!7342 = !DILocation(line: 249, column: 52, scope: !7322)
!7343 = !DILocation(line: 249, column: 8, scope: !7322)
!7344 = !DILocation(line: 251, column: 12, scope: !7322)
!7345 = !DILocation(line: 252, column: 10, scope: !7322)
!7346 = !DILocation(line: 253, column: 7, scope: !7322)
!7347 = !DILocation(line: 255, column: 2, scope: !7322)
!7348 = !DILocation(line: 260, column: 1, scope: !7322)
!7349 = distinct !DISubprogram(name: "enabled_clock", scope: !691, file: !691, line: 100, type: !7350, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7352)
!7350 = !DISubroutineType(types: !7351)
!7351 = !{!103, !121}
!7352 = !{!7353, !7354}
!7353 = !DILocalVariable(name: "src_clk", arg: 1, scope: !7349, file: !691, line: 100, type: !121)
!7354 = !DILocalVariable(name: "r", scope: !7349, file: !691, line: 102, type: !103)
!7355 = !DILocation(line: 0, scope: !7349)
!7356 = !DILocation(line: 104, column: 2, scope: !7349)
!7357 = !DILocation(line: 180, column: 2, scope: !7349)
!7358 = !DILocation(line: 181, column: 1, scope: !7349)
!7359 = distinct !DISubprogram(name: "get_bus_clock", scope: !691, file: !691, line: 79, type: !7360, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7362)
!7360 = !DISubroutineType(types: !7361)
!7361 = !{!121, !121, !121}
!7362 = !{!7363, !7364}
!7363 = !DILocalVariable(name: "clock", arg: 1, scope: !7359, file: !691, line: 79, type: !121)
!7364 = !DILocalVariable(name: "prescaler", arg: 2, scope: !7359, file: !691, line: 79, type: !121)
!7365 = !DILocation(line: 0, scope: !7359)
!7366 = !DILocation(line: 81, column: 15, scope: !7359)
!7367 = !DILocation(line: 81, column: 2, scope: !7359)
!7368 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !691, file: !691, line: 68, type: !7369, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7371)
!7369 = !DISubroutineType(types: !7370)
!7370 = !{!121, !121, !103, !103, !103}
!7371 = !{!7372, !7373, !7374, !7375}
!7372 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !7368, file: !691, line: 68, type: !121)
!7373 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !7368, file: !691, line: 69, type: !103)
!7374 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !7368, file: !691, line: 70, type: !103)
!7375 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !7368, file: !691, line: 71, type: !103)
!7376 = !DILocation(line: 0, scope: !7368)
!7377 = !DILocation(line: 75, column: 22, scope: !7368)
!7378 = !DILocation(line: 75, column: 34, scope: !7368)
!7379 = !DILocation(line: 75, column: 2, scope: !7368)
!7380 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !691, file: !691, line: 641, type: !718, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7381)
!7381 = !{!7382, !7383, !7384}
!7382 = !DILocalVariable(name: "dev", arg: 1, scope: !7380, file: !691, line: 641, type: !720)
!7383 = !DILocalVariable(name: "old_flash_freq", scope: !7380, file: !691, line: 664, type: !121)
!7384 = !DILocalVariable(name: "new_flash_freq", scope: !7380, file: !691, line: 665, type: !121)
!7385 = !DILocation(line: 0, scope: !7380)
!7386 = !DILocation(line: 646, column: 2, scope: !7380)
!7387 = !DILocation(line: 667, column: 19, scope: !7380)
!7388 = !DILocation(line: 674, column: 21, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7380, file: !691, line: 674, column: 6)
!7390 = !DILocation(line: 674, column: 6, scope: !7380)
!7391 = !DILocation(line: 675, column: 3, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7389, file: !691, line: 674, column: 59)
!7393 = !DILocation(line: 676, column: 2, scope: !7392)
!7394 = !DILocation(line: 680, column: 2, scope: !7380)
!7395 = !DILocation(line: 683, column: 2, scope: !7380)
!7396 = !DILocation(line: 690, column: 3, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7398, file: !691, line: 689, column: 9)
!7398 = distinct !DILexicalBlock(scope: !7380, file: !691, line: 685, column: 6)
!7399 = !DILocation(line: 695, column: 2, scope: !7380)
!7400 = !DILocation(line: 696, column: 2, scope: !7380)
!7401 = !DILocation(line: 696, column: 9, scope: !7380)
!7402 = !DILocation(line: 696, column: 34, scope: !7380)
!7403 = distinct !{!7403, !7400, !7404}
!7404 = !DILocation(line: 697, column: 2, scope: !7380)
!7405 = !DILocation(line: 720, column: 21, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7380, file: !691, line: 720, column: 6)
!7407 = !DILocation(line: 720, column: 6, scope: !7380)
!7408 = !DILocation(line: 721, column: 3, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7406, file: !691, line: 720, column: 60)
!7410 = !DILocation(line: 722, column: 2, scope: !7409)
!7411 = !DILocation(line: 725, column: 18, scope: !7380)
!7412 = !DILocation(line: 728, column: 2, scope: !7380)
!7413 = !DILocation(line: 730, column: 2, scope: !7380)
!7414 = !DILocation(line: 745, column: 2, scope: !7380)
!7415 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !7416, file: !7416, line: 3275, type: !5464, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7416 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7417 = !DILocation(line: 3277, column: 21, scope: !7415)
!7418 = !DILocation(line: 3277, column: 3, scope: !7415)
!7419 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !691, file: !691, line: 507, type: !2913, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7420 = !DILocation(line: 534, column: 7, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7422, file: !691, line: 534, column: 7)
!7422 = distinct !DILexicalBlock(scope: !7423, file: !691, line: 532, column: 37)
!7423 = distinct !DILexicalBlock(scope: !7419, file: !691, line: 532, column: 6)
!7424 = !DILocation(line: 534, column: 28, scope: !7421)
!7425 = !DILocation(line: 534, column: 7, scope: !7422)
!7426 = !DILocation(line: 536, column: 4, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7421, file: !691, line: 534, column: 34)
!7428 = !DILocation(line: 537, column: 4, scope: !7427)
!7429 = !DILocation(line: 537, column: 11, scope: !7427)
!7430 = !DILocation(line: 537, column: 32, scope: !7427)
!7431 = distinct !{!7431, !7428, !7432}
!7432 = !DILocation(line: 539, column: 4, scope: !7427)
!7433 = !DILocation(line: 583, column: 3, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7435, file: !691, line: 577, column: 37)
!7435 = distinct !DILexicalBlock(scope: !7419, file: !691, line: 577, column: 6)
!7436 = !DILocation(line: 584, column: 3, scope: !7434)
!7437 = !DILocation(line: 584, column: 10, scope: !7434)
!7438 = !DILocation(line: 584, column: 31, scope: !7434)
!7439 = distinct !{!7439, !7436, !7440}
!7440 = !DILocation(line: 585, column: 3, scope: !7434)
!7441 = !DILocation(line: 627, column: 1, scope: !7419)
!7442 = distinct !DISubprogram(name: "set_up_plls", scope: !691, file: !691, line: 448, type: !2913, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7443 = !DILocation(line: 460, column: 6, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7442, file: !691, line: 460, column: 6)
!7445 = !DILocation(line: 460, column: 31, scope: !7444)
!7446 = !DILocation(line: 460, column: 6, scope: !7442)
!7447 = !DILocation(line: 461, column: 3, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7444, file: !691, line: 460, column: 67)
!7449 = !DILocation(line: 462, column: 3, scope: !7448)
!7450 = !DILocation(line: 463, column: 2, scope: !7448)
!7451 = !DILocation(line: 464, column: 2, scope: !7442)
!7452 = !DILocation(line: 488, column: 2, scope: !7442)
!7453 = !DILocation(line: 496, column: 2, scope: !7442)
!7454 = !DILocation(line: 499, column: 2, scope: !7442)
!7455 = !DILocation(line: 500, column: 2, scope: !7442)
!7456 = !DILocation(line: 500, column: 9, scope: !7442)
!7457 = !DILocation(line: 500, column: 30, scope: !7442)
!7458 = distinct !{!7458, !7455, !7459}
!7459 = !DILocation(line: 502, column: 2, scope: !7442)
!7460 = !DILocation(line: 505, column: 1, scope: !7442)
!7461 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !7416, file: !7416, line: 3224, type: !5474, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7462)
!7462 = !{!7463}
!7463 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7461, file: !7416, line: 3224, type: !121)
!7464 = !DILocation(line: 0, scope: !7461)
!7465 = !DILocation(line: 3226, column: 3, scope: !7461)
!7466 = !DILocation(line: 3227, column: 1, scope: !7461)
!7467 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !7416, file: !7416, line: 3188, type: !5474, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7468)
!7468 = !{!7469}
!7469 = !DILocalVariable(name: "Source", arg: 1, scope: !7467, file: !7416, line: 3188, type: !121)
!7470 = !DILocation(line: 0, scope: !7467)
!7471 = !DILocation(line: 3190, column: 3, scope: !7467)
!7472 = !DILocation(line: 3191, column: 1, scope: !7467)
!7473 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !7416, file: !7416, line: 3204, type: !5464, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7474 = !DILocation(line: 3206, column: 21, scope: !7473)
!7475 = !DILocation(line: 3206, column: 3, scope: !7473)
!7476 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !7416, file: !7416, line: 3240, type: !5474, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7477)
!7477 = !{!7478}
!7478 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7476, file: !7416, line: 3240, type: !121)
!7479 = !DILocation(line: 0, scope: !7476)
!7480 = !DILocation(line: 3242, column: 3, scope: !7476)
!7481 = !DILocation(line: 3243, column: 1, scope: !7476)
!7482 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !7416, file: !7416, line: 3256, type: !5474, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !7483)
!7483 = !{!7484}
!7484 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7482, file: !7416, line: 3256, type: !121)
!7485 = !DILocation(line: 0, scope: !7482)
!7486 = !DILocation(line: 3258, column: 3, scope: !7482)
!7487 = !DILocation(line: 3259, column: 1, scope: !7482)
!7488 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !691, file: !691, line: 409, type: !2913, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7489 = !DILocation(line: 412, column: 6, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7488, file: !691, line: 412, column: 6)
!7491 = !DILocation(line: 412, column: 27, scope: !7490)
!7492 = !DILocation(line: 412, column: 6, scope: !7488)
!7493 = !DILocation(line: 414, column: 3, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7490, file: !691, line: 412, column: 33)
!7495 = !DILocation(line: 415, column: 3, scope: !7494)
!7496 = !DILocation(line: 415, column: 10, scope: !7494)
!7497 = !DILocation(line: 415, column: 31, scope: !7494)
!7498 = distinct !{!7498, !7495, !7499}
!7499 = !DILocation(line: 417, column: 3, scope: !7494)
!7500 = !DILocation(line: 421, column: 2, scope: !7488)
!7501 = !DILocation(line: 422, column: 2, scope: !7488)
!7502 = !DILocation(line: 422, column: 9, scope: !7488)
!7503 = !DILocation(line: 422, column: 34, scope: !7488)
!7504 = distinct !{!7504, !7501, !7505}
!7505 = !DILocation(line: 423, column: 2, scope: !7488)
!7506 = !DILocation(line: 424, column: 1, scope: !7488)
!7507 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !7416, file: !7416, line: 4195, type: !2913, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7508 = !DILocation(line: 4197, column: 3, scope: !7507)
!7509 = !DILocation(line: 4198, column: 1, scope: !7507)
!7510 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !7416, file: !7416, line: 4184, type: !2913, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7511 = !DILocation(line: 4186, column: 3, scope: !7510)
!7512 = !DILocation(line: 4187, column: 1, scope: !7510)
!7513 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !7416, file: !7416, line: 4205, type: !5464, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7514 = !DILocation(line: 4207, column: 11, scope: !7513)
!7515 = !DILocation(line: 4207, column: 44, scope: !7513)
!7516 = !DILocation(line: 4207, column: 3, scope: !7513)
!7517 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !7416, file: !7416, line: 3007, type: !5464, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7518 = !DILocation(line: 3009, column: 11, scope: !7517)
!7519 = !DILocation(line: 3009, column: 44, scope: !7517)
!7520 = !DILocation(line: 3009, column: 3, scope: !7517)
!7521 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !7416, file: !7416, line: 2987, type: !2913, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7522 = !DILocation(line: 2989, column: 3, scope: !7521)
!7523 = !DILocation(line: 2990, column: 1, scope: !7521)
!7524 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !7416, file: !7416, line: 3143, type: !2913, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7525 = !DILocation(line: 3145, column: 3, scope: !7524)
!7526 = !DILocation(line: 3146, column: 1, scope: !7524)
!7527 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !7416, file: !7416, line: 3163, type: !5464, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !627, retainedNodes: !322)
!7528 = !DILocation(line: 3165, column: 11, scope: !7527)
!7529 = !DILocation(line: 3165, column: 46, scope: !7527)
!7530 = !DILocation(line: 3165, column: 3, scope: !7527)
!7531 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !7532, file: !7532, line: 40, type: !5464, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2681, retainedNodes: !322)
!7532 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7533 = !DILocation(line: 43, column: 3, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7535, file: !7532, line: 42, column: 37)
!7535 = distinct !DILexicalBlock(scope: !7531, file: !7532, line: 42, column: 6)
!7536 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !7532, file: !7532, line: 56, type: !2913, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2681, retainedNodes: !322)
!7537 = !DILocation(line: 58, column: 2, scope: !7536)
!7538 = !DILocation(line: 62, column: 1, scope: !7536)
!7539 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !7416, file: !7416, line: 4304, type: !7540, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2681, retainedNodes: !7542)
!7540 = !DISubroutineType(types: !7541)
!7541 = !{null, !121, !121, !121, !121}
!7542 = !{!7543, !7544, !7545, !7546}
!7543 = !DILocalVariable(name: "Source", arg: 1, scope: !7539, file: !7416, line: 4304, type: !121)
!7544 = !DILocalVariable(name: "PLLM", arg: 2, scope: !7539, file: !7416, line: 4304, type: !121)
!7545 = !DILocalVariable(name: "PLLN", arg: 3, scope: !7539, file: !7416, line: 4304, type: !121)
!7546 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !7539, file: !7416, line: 4304, type: !121)
!7547 = !DILocation(line: 0, scope: !7539)
!7548 = !DILocation(line: 4306, column: 3, scope: !7539)
!7549 = !DILocation(line: 4308, column: 3, scope: !7539)
!7550 = !DILocation(line: 4312, column: 1, scope: !7539)
!7551 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !7532, file: !7532, line: 69, type: !2913, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2681, retainedNodes: !322)
!7552 = !DILocation(line: 72, column: 2, scope: !7551)
!7553 = !DILocation(line: 73, column: 1, scope: !7551)
!7554 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !7555, file: !7555, line: 1185, type: !5474, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2681, retainedNodes: !7556)
!7555 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7556 = !{!7557, !7558}
!7557 = !DILocalVariable(name: "Periphs", arg: 1, scope: !7554, file: !7555, line: 1185, type: !121)
!7558 = !DILocalVariable(name: "tmpreg", scope: !7554, file: !7555, line: 1187, type: !120)
!7559 = !DILocation(line: 0, scope: !7554)
!7560 = !DILocation(line: 1187, column: 3, scope: !7554)
!7561 = !DILocation(line: 1187, column: 17, scope: !7554)
!7562 = !DILocation(line: 1188, column: 3, scope: !7554)
!7563 = !DILocation(line: 1190, column: 12, scope: !7554)
!7564 = !DILocation(line: 1190, column: 10, scope: !7554)
!7565 = !DILocation(line: 1191, column: 9, scope: !7554)
!7566 = !DILocation(line: 1192, column: 1, scope: !7554)
!7567 = distinct !DISubprogram(name: "uart_console_init", scope: !822, file: !822, line: 588, type: !799, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !7568)
!7568 = !{!7569}
!7569 = !DILocalVariable(name: "arg", arg: 1, scope: !7567, file: !822, line: 588, type: !777)
!7570 = !DILocation(line: 0, scope: !7567)
!7571 = !DILocation(line: 593, column: 7, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7567, file: !822, line: 593, column: 6)
!7573 = !DILocation(line: 593, column: 6, scope: !7567)
!7574 = !DILocation(line: 597, column: 2, scope: !7567)
!7575 = !DILocation(line: 599, column: 2, scope: !7567)
!7576 = !DILocation(line: 600, column: 1, scope: !7567)
!7577 = distinct !DISubprogram(name: "device_is_ready", scope: !7578, file: !7578, line: 47, type: !7579, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !7581)
!7578 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!7579 = !DISubroutineType(types: !7580)
!7580 = !{!157, !777}
!7581 = !{!7582}
!7582 = !DILocalVariable(name: "dev", arg: 1, scope: !7577, file: !7578, line: 47, type: !777)
!7583 = !DILocation(line: 0, scope: !7577)
!7584 = !DILocation(line: 55, column: 2, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7577, file: !7578, line: 55, column: 2)
!7586 = !{i64 2154266149}
!7587 = !DILocation(line: 56, column: 9, scope: !7577)
!7588 = !DILocation(line: 56, column: 2, scope: !7577)
!7589 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !822, file: !822, line: 573, type: !2913, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !322)
!7590 = !DILocation(line: 576, column: 2, scope: !7589)
!7591 = !DILocation(line: 579, column: 2, scope: !7589)
!7592 = !DILocation(line: 581, column: 1, scope: !7589)
!7593 = distinct !DISubprogram(name: "console_out", scope: !822, file: !822, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !7594)
!7594 = !{!7595}
!7595 = !DILocalVariable(name: "c", arg: 1, scope: !7593, file: !822, line: 77, type: !103)
!7596 = !DILocation(line: 0, scope: !7593)
!7597 = !DILocation(line: 89, column: 11, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7593, file: !822, line: 89, column: 6)
!7599 = !DILocation(line: 89, column: 6, scope: !7593)
!7600 = !DILocation(line: 90, column: 3, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7598, file: !822, line: 89, column: 17)
!7602 = !DILocation(line: 91, column: 2, scope: !7601)
!7603 = !DILocation(line: 92, column: 34, scope: !7593)
!7604 = !DILocation(line: 92, column: 2, scope: !7593)
!7605 = !DILocation(line: 94, column: 2, scope: !7593)
!7606 = distinct !DISubprogram(name: "uart_poll_out", scope: !7607, file: !7607, line: 95, type: !795, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !7608)
!7607 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/accel_polling")
!7608 = !{!7609, !7610}
!7609 = !DILocalVariable(name: "dev", arg: 1, scope: !7606, file: !7607, line: 95, type: !777)
!7610 = !DILocalVariable(name: "out_char", arg: 2, scope: !7606, file: !7607, line: 95, type: !155)
!7611 = !DILocation(line: 0, scope: !7606)
!7612 = !DILocation(line: 105, column: 2, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7606, file: !7607, line: 105, column: 2)
!7614 = !{i64 2154349540}
!7615 = !DILocation(line: 106, column: 2, scope: !7606)
!7616 = !DILocation(line: 107, column: 1, scope: !7606)
!7617 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !771, file: !771, line: 574, type: !795, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !7618)
!7618 = !{!7619, !7620, !7621}
!7619 = !DILocalVariable(name: "dev", arg: 1, scope: !7617, file: !771, line: 574, type: !777)
!7620 = !DILocalVariable(name: "out_char", arg: 2, scope: !7617, file: !771, line: 575, type: !155)
!7621 = !DILocalVariable(name: "api", scope: !7617, file: !771, line: 577, type: !768)
!7622 = !DILocation(line: 0, scope: !7617)
!7623 = !DILocation(line: 578, column: 40, scope: !7617)
!7624 = !DILocation(line: 580, column: 7, scope: !7617)
!7625 = !DILocation(line: 580, column: 2, scope: !7617)
!7626 = !DILocation(line: 581, column: 1, scope: !7617)
!7627 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !7579, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !7628)
!7628 = !{!7629}
!7629 = !DILocalVariable(name: "dev", arg: 1, scope: !7627, file: !141, line: 730, type: !777)
!7630 = !DILocation(line: 0, scope: !7627)
!7631 = !DILocation(line: 732, column: 9, scope: !7627)
!7632 = !DILocation(line: 732, column: 2, scope: !7627)
!7633 = distinct !DISubprogram(name: "uart_register_input", scope: !822, file: !822, line: 560, type: !7634, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !7679)
!7634 = !DISubroutineType(types: !7635)
!7635 = !{null, !7636, !7636, !7676}
!7636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7637, size: 32)
!7637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !307, line: 2208, size: 128, elements: !7638)
!7638 = !{!7639}
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !7637, file: !307, line: 2209, baseType: !7640, size: 128)
!7640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !307, line: 1709, size: 128, elements: !7641)
!7641 = !{!7642, !7655, !7657}
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !7640, file: !307, line: 1710, baseType: !7643, size: 64)
!7643 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !7644, line: 46, baseType: !7645)
!7644 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !7644, line: 41, size: 64, elements: !7646)
!7646 = !{!7647, !7654}
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7645, file: !7644, line: 42, baseType: !7648, size: 32)
!7648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7649, size: 32)
!7649 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !7644, line: 39, baseType: !7650)
!7650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !7644, line: 35, size: 32, elements: !7651)
!7651 = !{!7652}
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !7650, file: !7644, line: 36, baseType: !7653, size: 32)
!7653 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !7644, line: 32, baseType: !121)
!7654 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7645, file: !7644, line: 43, baseType: !7648, size: 32, offset: 32)
!7655 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7640, file: !307, line: 1711, baseType: !7656, offset: 64)
!7656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!7657 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7640, file: !307, line: 1712, baseType: !7658, size: 64, offset: 64)
!7658 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !7659)
!7659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !7660)
!7660 = !{!7661}
!7661 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7659, file: !247, line: 232, baseType: !7662, size: 64)
!7662 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !7663)
!7663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !7664)
!7664 = !{!7665, !7671}
!7665 = !DIDerivedType(tag: DW_TAG_member, scope: !7663, file: !221, line: 38, baseType: !7666, size: 32)
!7666 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7663, file: !221, line: 38, size: 32, elements: !7667)
!7667 = !{!7668, !7670}
!7668 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7666, file: !221, line: 39, baseType: !7669, size: 32)
!7669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7663, size: 32)
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7666, file: !221, line: 40, baseType: !7669, size: 32)
!7671 = !DIDerivedType(tag: DW_TAG_member, scope: !7663, file: !221, line: 42, baseType: !7672, size: 32, offset: 32)
!7672 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7663, file: !221, line: 42, size: 32, elements: !7673)
!7673 = !{!7674, !7675}
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7672, file: !221, line: 43, baseType: !7669, size: 32)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7672, file: !221, line: 44, baseType: !7669, size: 32)
!7676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7677, size: 32)
!7677 = !DISubroutineType(types: !7678)
!7678 = !{!154, !957, !154}
!7679 = !{!7680, !7681, !7682}
!7680 = !DILocalVariable(name: "avail", arg: 1, scope: !7633, file: !822, line: 560, type: !7636)
!7681 = !DILocalVariable(name: "lines", arg: 2, scope: !7633, file: !822, line: 560, type: !7636)
!7682 = !DILocalVariable(name: "completion", arg: 3, scope: !7633, file: !822, line: 561, type: !7676)
!7683 = !DILocation(line: 0, scope: !7633)
!7684 = !DILocation(line: 566, column: 1, scope: !7633)
!7685 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1001, file: !1001, line: 523, type: !858, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7686)
!7686 = !{!7687, !7688, !7689, !7690, !7691}
!7687 = !DILocalVariable(name: "dev", arg: 1, scope: !7685, file: !1001, line: 523, type: !860)
!7688 = !DILocalVariable(name: "pin", arg: 2, scope: !7685, file: !1001, line: 524, type: !875)
!7689 = !DILocalVariable(name: "flags", arg: 3, scope: !7685, file: !1001, line: 524, type: !876)
!7690 = !DILocalVariable(name: "err", scope: !7685, file: !1001, line: 526, type: !103)
!7691 = !DILocalVariable(name: "pincfg", scope: !7685, file: !1001, line: 527, type: !103)
!7692 = !DILocation(line: 0, scope: !7685)
!7693 = !DILocation(line: 527, column: 2, scope: !7685)
!7694 = !DILocation(line: 532, column: 8, scope: !7685)
!7695 = !DILocation(line: 533, column: 10, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7685, file: !1001, line: 533, column: 6)
!7697 = !DILocation(line: 533, column: 6, scope: !7685)
!7698 = !DILocation(line: 543, column: 13, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7685, file: !1001, line: 543, column: 6)
!7700 = !DILocation(line: 543, column: 28, scope: !7699)
!7701 = !DILocation(line: 543, column: 6, scope: !7685)
!7702 = !DILocation(line: 544, column: 14, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7704, file: !1001, line: 544, column: 7)
!7704 = distinct !DILexicalBlock(scope: !7699, file: !1001, line: 543, column: 34)
!7705 = !DILocation(line: 544, column: 39, scope: !7703)
!7706 = !DILocation(line: 544, column: 7, scope: !7704)
!7707 = !DILocation(line: 545, column: 38, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7703, file: !1001, line: 544, column: 45)
!7709 = !DILocation(line: 545, column: 4, scope: !7708)
!7710 = !DILocation(line: 546, column: 3, scope: !7708)
!7711 = !DILocation(line: 546, column: 21, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7703, file: !1001, line: 546, column: 14)
!7713 = !DILocation(line: 546, column: 45, scope: !7712)
!7714 = !DILocation(line: 546, column: 14, scope: !7703)
!7715 = !DILocation(line: 547, column: 40, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7712, file: !1001, line: 546, column: 51)
!7717 = !DILocation(line: 547, column: 4, scope: !7716)
!7718 = !DILocation(line: 548, column: 3, scope: !7716)
!7719 = !DILocation(line: 551, column: 32, scope: !7685)
!7720 = !DILocation(line: 551, column: 37, scope: !7685)
!7721 = !DILocation(line: 551, column: 2, scope: !7685)
!7722 = !DILocation(line: 554, column: 6, scope: !7685)
!7723 = !DILocation(line: 562, column: 1, scope: !7685)
!7724 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1001, file: !1001, line: 410, type: !7725, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7727)
!7725 = !DISubroutineType(types: !7726)
!7726 = !{!103, !860, !687}
!7727 = !{!7728, !7729, !7730, !7732}
!7728 = !DILocalVariable(name: "dev", arg: 1, scope: !7724, file: !1001, line: 410, type: !860)
!7729 = !DILocalVariable(name: "value", arg: 2, scope: !7724, file: !1001, line: 410, type: !687)
!7730 = !DILocalVariable(name: "cfg", scope: !7724, file: !1001, line: 412, type: !7731)
!7731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 32)
!7732 = !DILocalVariable(name: "gpio", scope: !7724, file: !1001, line: 413, type: !933)
!7733 = !DILocation(line: 0, scope: !7724)
!7734 = !DILocation(line: 412, column: 45, scope: !7724)
!7735 = !DILocation(line: 413, column: 44, scope: !7724)
!7736 = !DILocation(line: 415, column: 11, scope: !7724)
!7737 = !DILocation(line: 415, column: 9, scope: !7724)
!7738 = !DILocation(line: 417, column: 2, scope: !7724)
!7739 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1001, file: !1001, line: 420, type: !885, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7740)
!7740 = !{!7741, !7742, !7743, !7744, !7745, !7746}
!7741 = !DILocalVariable(name: "dev", arg: 1, scope: !7739, file: !1001, line: 420, type: !860)
!7742 = !DILocalVariable(name: "mask", arg: 2, scope: !7739, file: !1001, line: 421, type: !887)
!7743 = !DILocalVariable(name: "value", arg: 3, scope: !7739, file: !1001, line: 422, type: !882)
!7744 = !DILocalVariable(name: "cfg", scope: !7739, file: !1001, line: 424, type: !7731)
!7745 = !DILocalVariable(name: "gpio", scope: !7739, file: !1001, line: 425, type: !933)
!7746 = !DILocalVariable(name: "port_value", scope: !7739, file: !1001, line: 426, type: !121)
!7747 = !DILocation(line: 0, scope: !7739)
!7748 = !DILocation(line: 424, column: 45, scope: !7739)
!7749 = !DILocation(line: 425, column: 44, scope: !7739)
!7750 = !DILocation(line: 430, column: 15, scope: !7739)
!7751 = !DILocation(line: 431, column: 46, scope: !7739)
!7752 = !DILocation(line: 431, column: 44, scope: !7739)
!7753 = !DILocation(line: 431, column: 61, scope: !7739)
!7754 = !DILocation(line: 431, column: 53, scope: !7739)
!7755 = !DILocation(line: 431, column: 2, scope: !7739)
!7756 = !DILocation(line: 435, column: 2, scope: !7739)
!7757 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1001, file: !1001, line: 438, type: !890, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7758)
!7758 = !{!7759, !7760, !7761, !7762}
!7759 = !DILocalVariable(name: "dev", arg: 1, scope: !7757, file: !1001, line: 438, type: !860)
!7760 = !DILocalVariable(name: "pins", arg: 2, scope: !7757, file: !1001, line: 439, type: !887)
!7761 = !DILocalVariable(name: "cfg", scope: !7757, file: !1001, line: 441, type: !7731)
!7762 = !DILocalVariable(name: "gpio", scope: !7757, file: !1001, line: 442, type: !933)
!7763 = !DILocation(line: 0, scope: !7757)
!7764 = !DILocation(line: 441, column: 45, scope: !7757)
!7765 = !DILocation(line: 442, column: 44, scope: !7757)
!7766 = !DILocation(line: 448, column: 2, scope: !7757)
!7767 = !DILocation(line: 450, column: 2, scope: !7757)
!7768 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1001, file: !1001, line: 453, type: !890, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7769)
!7769 = !{!7770, !7771, !7772, !7773}
!7770 = !DILocalVariable(name: "dev", arg: 1, scope: !7768, file: !1001, line: 453, type: !860)
!7771 = !DILocalVariable(name: "pins", arg: 2, scope: !7768, file: !1001, line: 454, type: !887)
!7772 = !DILocalVariable(name: "cfg", scope: !7768, file: !1001, line: 456, type: !7731)
!7773 = !DILocalVariable(name: "gpio", scope: !7768, file: !1001, line: 457, type: !933)
!7774 = !DILocation(line: 0, scope: !7768)
!7775 = !DILocation(line: 456, column: 45, scope: !7768)
!7776 = !DILocation(line: 457, column: 44, scope: !7768)
!7777 = !DILocation(line: 467, column: 2, scope: !7768)
!7778 = !DILocation(line: 470, column: 2, scope: !7768)
!7779 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1001, file: !1001, line: 473, type: !890, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7780)
!7780 = !{!7781, !7782, !7783, !7784}
!7781 = !DILocalVariable(name: "dev", arg: 1, scope: !7779, file: !1001, line: 473, type: !860)
!7782 = !DILocalVariable(name: "pins", arg: 2, scope: !7779, file: !1001, line: 474, type: !887)
!7783 = !DILocalVariable(name: "cfg", scope: !7779, file: !1001, line: 476, type: !7731)
!7784 = !DILocalVariable(name: "gpio", scope: !7779, file: !1001, line: 477, type: !933)
!7785 = !DILocation(line: 0, scope: !7779)
!7786 = !DILocation(line: 476, column: 45, scope: !7779)
!7787 = !DILocation(line: 477, column: 44, scope: !7779)
!7788 = !DILocation(line: 484, column: 2, scope: !7779)
!7789 = !DILocation(line: 487, column: 2, scope: !7779)
!7790 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1001, file: !1001, line: 594, type: !896, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7791)
!7791 = !{!7792, !7793, !7794, !7795, !7796, !7797, !7799, !7800, !7801}
!7792 = !DILocalVariable(name: "dev", arg: 1, scope: !7790, file: !1001, line: 594, type: !860)
!7793 = !DILocalVariable(name: "pin", arg: 2, scope: !7790, file: !1001, line: 595, type: !875)
!7794 = !DILocalVariable(name: "mode", arg: 3, scope: !7790, file: !1001, line: 596, type: !834)
!7795 = !DILocalVariable(name: "trig", arg: 4, scope: !7790, file: !1001, line: 597, type: !840)
!7796 = !DILocalVariable(name: "cfg", scope: !7790, file: !1001, line: 599, type: !7731)
!7797 = !DILocalVariable(name: "data", scope: !7790, file: !1001, line: 600, type: !7798)
!7798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 32)
!7799 = !DILocalVariable(name: "edge", scope: !7790, file: !1001, line: 601, type: !103)
!7800 = !DILocalVariable(name: "err", scope: !7790, file: !1001, line: 602, type: !103)
!7801 = !DILabel(scope: !7790, name: "exit", file: !1001, line: 643)
!7802 = !DILocation(line: 0, scope: !7790)
!7803 = !DILocation(line: 599, column: 45, scope: !7790)
!7804 = !DILocation(line: 604, column: 6, scope: !7790)
!7805 = !DILocation(line: 605, column: 34, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7807, file: !1001, line: 605, column: 7)
!7807 = distinct !DILexicalBlock(scope: !7808, file: !1001, line: 604, column: 38)
!7808 = distinct !DILexicalBlock(scope: !7790, file: !1001, line: 604, column: 6)
!7809 = !DILocation(line: 605, column: 7, scope: !7806)
!7810 = !DILocation(line: 605, column: 47, scope: !7806)
!7811 = !DILocation(line: 605, column: 39, scope: !7806)
!7812 = !DILocation(line: 605, column: 7, scope: !7807)
!7813 = !DILocation(line: 606, column: 4, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7806, file: !1001, line: 605, column: 53)
!7815 = !DILocation(line: 607, column: 4, scope: !7814)
!7816 = !DILocation(line: 608, column: 4, scope: !7814)
!7817 = !DILocation(line: 609, column: 3, scope: !7814)
!7818 = !DILocation(line: 600, column: 38, scope: !7790)
!7819 = !DILocation(line: 620, column: 30, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7790, file: !1001, line: 620, column: 6)
!7821 = !DILocation(line: 620, column: 6, scope: !7820)
!7822 = !DILocation(line: 620, column: 57, scope: !7820)
!7823 = !DILocation(line: 620, column: 6, scope: !7790)
!7824 = !DILocation(line: 625, column: 29, scope: !7790)
!7825 = !DILocation(line: 625, column: 2, scope: !7790)
!7826 = !DILocation(line: 627, column: 2, scope: !7790)
!7827 = !DILocation(line: 630, column: 3, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7790, file: !1001, line: 627, column: 16)
!7829 = !DILocation(line: 633, column: 3, scope: !7828)
!7830 = !DILocation(line: 636, column: 3, scope: !7828)
!7831 = !DILocation(line: 639, column: 2, scope: !7790)
!7832 = !DILocation(line: 641, column: 2, scope: !7790)
!7833 = !DILocation(line: 643, column: 1, scope: !7790)
!7834 = !DILocation(line: 644, column: 2, scope: !7790)
!7835 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1001, file: !1001, line: 647, type: !900, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7836)
!7836 = !{!7837, !7838, !7839, !7840}
!7837 = !DILocalVariable(name: "dev", arg: 1, scope: !7835, file: !1001, line: 647, type: !860)
!7838 = !DILocalVariable(name: "callback", arg: 2, scope: !7835, file: !1001, line: 648, type: !902)
!7839 = !DILocalVariable(name: "set", arg: 3, scope: !7835, file: !1001, line: 649, type: !157)
!7840 = !DILocalVariable(name: "data", scope: !7835, file: !1001, line: 651, type: !7798)
!7841 = !DILocation(line: 0, scope: !7835)
!7842 = !DILocation(line: 651, column: 38, scope: !7835)
!7843 = !DILocation(line: 653, column: 37, scope: !7835)
!7844 = !DILocation(line: 653, column: 9, scope: !7835)
!7845 = !DILocation(line: 653, column: 2, scope: !7835)
!7846 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !7847, file: !7847, line: 38, type: !7848, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7851)
!7847 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7848 = !DISubroutineType(types: !7849)
!7849 = !{!103, !7850, !902, !157}
!7850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!7851 = !{!7852, !7853, !7854}
!7852 = !DILocalVariable(name: "callbacks", arg: 1, scope: !7846, file: !7847, line: 38, type: !7850)
!7853 = !DILocalVariable(name: "callback", arg: 2, scope: !7846, file: !7847, line: 39, type: !902)
!7854 = !DILocalVariable(name: "set", arg: 3, scope: !7846, file: !7847, line: 40, type: !157)
!7855 = !DILocation(line: 0, scope: !7846)
!7856 = !DILocation(line: 45, column: 7, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7846, file: !7847, line: 45, column: 6)
!7858 = !DILocation(line: 45, column: 6, scope: !7846)
!7859 = !DILocation(line: 46, column: 56, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7861, file: !7847, line: 46, column: 7)
!7861 = distinct !DILexicalBlock(scope: !7857, file: !7847, line: 45, column: 38)
!7862 = !DILocation(line: 46, column: 8, scope: !7860)
!7863 = !DILocation(line: 46, column: 7, scope: !7861)
!7864 = !DILocation(line: 51, column: 13, scope: !7857)
!7865 = !DILocation(line: 56, column: 43, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7867, file: !7847, line: 55, column: 11)
!7867 = distinct !DILexicalBlock(scope: !7846, file: !7847, line: 55, column: 6)
!7868 = !DILocation(line: 56, column: 3, scope: !7866)
!7869 = !DILocation(line: 57, column: 2, scope: !7866)
!7870 = !DILocation(line: 60, column: 1, scope: !7846)
!7871 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !907, file: !907, line: 261, type: !7872, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7874)
!7872 = !DISubroutineType(types: !7873)
!7873 = !{!157, !7850}
!7874 = !{!7875}
!7875 = !DILocalVariable(name: "list", arg: 1, scope: !7871, file: !907, line: 261, type: !7850)
!7876 = !DILocation(line: 0, scope: !7871)
!7877 = !DILocation(line: 261, column: 1, scope: !7871)
!7878 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !907, file: !907, line: 417, type: !7879, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7881)
!7879 = !DISubroutineType(types: !7880)
!7880 = !{!157, !7850, !1074}
!7881 = !{!7882, !7883, !7884, !7885}
!7882 = !DILocalVariable(name: "list", arg: 1, scope: !7878, file: !907, line: 417, type: !7850)
!7883 = !DILocalVariable(name: "node", arg: 2, scope: !7878, file: !907, line: 417, type: !1074)
!7884 = !DILocalVariable(name: "prev", scope: !7878, file: !907, line: 417, type: !1074)
!7885 = !DILocalVariable(name: "test", scope: !7878, file: !907, line: 417, type: !1074)
!7886 = !DILocation(line: 0, scope: !7878)
!7887 = !DILocation(line: 417, column: 1, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7878, file: !907, line: 417, column: 1)
!7889 = !DILocation(line: 417, column: 1, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7888, file: !907, line: 417, column: 1)
!7891 = !DILocation(line: 417, column: 1, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7893, file: !907, line: 417, column: 1)
!7893 = distinct !DILexicalBlock(scope: !7890, file: !907, line: 417, column: 1)
!7894 = !DILocation(line: 417, column: 1, scope: !7893)
!7895 = distinct !{!7895, !7887, !7887}
!7896 = !DILocation(line: 417, column: 1, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7892, file: !907, line: 417, column: 1)
!7898 = !DILocation(line: 417, column: 1, scope: !7878)
!7899 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !907, file: !907, line: 298, type: !7900, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7902)
!7900 = !DISubroutineType(types: !7901)
!7901 = !{null, !7850, !1074}
!7902 = !{!7903, !7904}
!7903 = !DILocalVariable(name: "list", arg: 1, scope: !7899, file: !907, line: 298, type: !7850)
!7904 = !DILocalVariable(name: "node", arg: 2, scope: !7899, file: !907, line: 298, type: !1074)
!7905 = !DILocation(line: 0, scope: !7899)
!7906 = !DILocation(line: 298, column: 1, scope: !7899)
!7907 = !DILocation(line: 298, column: 1, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7899, file: !907, line: 298, column: 1)
!7909 = !DILocation(line: 298, column: 1, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7908, file: !907, line: 298, column: 1)
!7911 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !907, file: !907, line: 231, type: !7912, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7914)
!7912 = !DISubroutineType(types: !7913)
!7913 = !{!1074, !7850}
!7914 = !{!7915}
!7915 = !DILocalVariable(name: "list", arg: 1, scope: !7911, file: !907, line: 231, type: !7850)
!7916 = !DILocation(line: 0, scope: !7911)
!7917 = !DILocation(line: 233, column: 15, scope: !7911)
!7918 = !DILocation(line: 233, column: 2, scope: !7911)
!7919 = distinct !DISubprogram(name: "z_snode_next_set", scope: !907, file: !907, line: 209, type: !7920, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7922)
!7920 = !DISubroutineType(types: !7921)
!7921 = !{null, !1074, !1074}
!7922 = !{!7923, !7924}
!7923 = !DILocalVariable(name: "parent", arg: 1, scope: !7919, file: !907, line: 209, type: !1074)
!7924 = !DILocalVariable(name: "child", arg: 2, scope: !7919, file: !907, line: 209, type: !1074)
!7925 = !DILocation(line: 0, scope: !7919)
!7926 = !DILocation(line: 211, column: 10, scope: !7919)
!7927 = !DILocation(line: 211, column: 15, scope: !7919)
!7928 = !DILocation(line: 212, column: 1, scope: !7919)
!7929 = distinct !DISubprogram(name: "z_slist_head_set", scope: !907, file: !907, line: 214, type: !7900, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7930)
!7930 = !{!7931, !7932}
!7931 = !DILocalVariable(name: "list", arg: 1, scope: !7929, file: !907, line: 214, type: !7850)
!7932 = !DILocalVariable(name: "node", arg: 2, scope: !7929, file: !907, line: 214, type: !1074)
!7933 = !DILocation(line: 0, scope: !7929)
!7934 = !DILocation(line: 216, column: 8, scope: !7929)
!7935 = !DILocation(line: 216, column: 13, scope: !7929)
!7936 = !DILocation(line: 217, column: 1, scope: !7929)
!7937 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !907, file: !907, line: 243, type: !7912, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7938)
!7938 = !{!7939}
!7939 = !DILocalVariable(name: "list", arg: 1, scope: !7937, file: !907, line: 243, type: !7850)
!7940 = !DILocation(line: 0, scope: !7937)
!7941 = !DILocation(line: 245, column: 15, scope: !7937)
!7942 = !DILocation(line: 245, column: 2, scope: !7937)
!7943 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !907, file: !907, line: 219, type: !7900, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7944)
!7944 = !{!7945, !7946}
!7945 = !DILocalVariable(name: "list", arg: 1, scope: !7943, file: !907, line: 219, type: !7850)
!7946 = !DILocalVariable(name: "node", arg: 2, scope: !7943, file: !907, line: 219, type: !1074)
!7947 = !DILocation(line: 0, scope: !7943)
!7948 = !DILocation(line: 221, column: 8, scope: !7943)
!7949 = !DILocation(line: 221, column: 13, scope: !7943)
!7950 = !DILocation(line: 222, column: 1, scope: !7943)
!7951 = distinct !DISubprogram(name: "sys_slist_remove", scope: !907, file: !907, line: 401, type: !7952, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7954)
!7952 = !DISubroutineType(types: !7953)
!7953 = !{null, !7850, !1074, !1074}
!7954 = !{!7955, !7956, !7957}
!7955 = !DILocalVariable(name: "list", arg: 1, scope: !7951, file: !907, line: 401, type: !7850)
!7956 = !DILocalVariable(name: "prev_node", arg: 2, scope: !7951, file: !907, line: 401, type: !1074)
!7957 = !DILocalVariable(name: "node", arg: 3, scope: !7951, file: !907, line: 401, type: !1074)
!7958 = !DILocation(line: 0, scope: !7951)
!7959 = !DILocation(line: 401, column: 1, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7951, file: !907, line: 401, column: 1)
!7961 = !DILocation(line: 0, scope: !7960)
!7962 = !DILocation(line: 401, column: 1, scope: !7951)
!7963 = !DILocation(line: 401, column: 1, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7960, file: !907, line: 401, column: 1)
!7965 = !DILocation(line: 401, column: 1, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7964, file: !907, line: 401, column: 1)
!7967 = !DILocation(line: 401, column: 1, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7966, file: !907, line: 401, column: 1)
!7969 = !DILocation(line: 401, column: 1, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7960, file: !907, line: 401, column: 1)
!7971 = !DILocation(line: 401, column: 1, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7970, file: !907, line: 401, column: 1)
!7973 = !DILocation(line: 401, column: 1, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7972, file: !907, line: 401, column: 1)
!7975 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !907, file: !907, line: 285, type: !7976, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7978)
!7976 = !DISubroutineType(types: !7977)
!7977 = !{!1074, !1074}
!7978 = !{!7979}
!7979 = !DILocalVariable(name: "node", arg: 1, scope: !7975, file: !907, line: 285, type: !1074)
!7980 = !DILocation(line: 0, scope: !7975)
!7981 = !DILocation(line: 285, column: 1, scope: !7975)
!7982 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !907, file: !907, line: 274, type: !7976, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7983)
!7983 = !{!7984}
!7984 = !DILocalVariable(name: "node", arg: 1, scope: !7982, file: !907, line: 274, type: !1074)
!7985 = !DILocation(line: 0, scope: !7982)
!7986 = !DILocation(line: 274, column: 1, scope: !7982)
!7987 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !907, file: !907, line: 204, type: !7976, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7988)
!7988 = !{!7989}
!7989 = !DILocalVariable(name: "node", arg: 1, scope: !7987, file: !907, line: 204, type: !1074)
!7990 = !DILocation(line: 0, scope: !7987)
!7991 = !DILocation(line: 206, column: 15, scope: !7987)
!7992 = !DILocation(line: 206, column: 2, scope: !7987)
!7993 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1001, file: !1001, line: 342, type: !107, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7994)
!7994 = !{!7995, !7996, !7997}
!7995 = !DILocalVariable(name: "pin", arg: 1, scope: !7993, file: !1001, line: 342, type: !103)
!7996 = !DILocalVariable(name: "line", scope: !7993, file: !1001, line: 344, type: !121)
!7997 = !DILocalVariable(name: "port", scope: !7993, file: !1001, line: 345, type: !103)
!7998 = !DILocation(line: 0, scope: !7993)
!7999 = !DILocation(line: 344, column: 18, scope: !7993)
!8000 = !{i32 983040, i32 0}
!8001 = !DILocation(line: 356, column: 9, scope: !7993)
!8002 = !DILocation(line: 370, column: 2, scope: !7993)
!8003 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1001, file: !1001, line: 37, type: !549, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8004)
!8004 = !{!8005, !8006, !8007}
!8005 = !DILocalVariable(name: "line", arg: 1, scope: !8003, file: !1001, line: 37, type: !103)
!8006 = !DILocalVariable(name: "arg", arg: 2, scope: !8003, file: !1001, line: 37, type: !102)
!8007 = !DILocalVariable(name: "data", scope: !8003, file: !1001, line: 39, type: !7798)
!8008 = !DILocation(line: 0, scope: !8003)
!8009 = !DILocation(line: 41, column: 29, scope: !8003)
!8010 = !DILocation(line: 41, column: 39, scope: !8003)
!8011 = !DILocation(line: 41, column: 44, scope: !8003)
!8012 = !DILocation(line: 41, column: 2, scope: !8003)
!8013 = !DILocation(line: 42, column: 1, scope: !8003)
!8014 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1001, file: !1001, line: 376, type: !8015, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8017)
!8015 = !DISubroutineType(types: !8016)
!8016 = !{!103, !103, !103}
!8017 = !{!8018, !8019, !8020, !8022, !8023}
!8018 = !DILocalVariable(name: "port", arg: 1, scope: !8014, file: !1001, line: 376, type: !103)
!8019 = !DILocalVariable(name: "pin", arg: 2, scope: !8014, file: !1001, line: 376, type: !103)
!8020 = !DILocalVariable(name: "clk", scope: !8014, file: !1001, line: 386, type: !8021)
!8021 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !860)
!8022 = !DILocalVariable(name: "pclken", scope: !8014, file: !1001, line: 387, type: !1117)
!8023 = !DILocalVariable(name: "ret", scope: !8014, file: !1001, line: 396, type: !103)
!8024 = !DILocation(line: 0, scope: !8014)
!8025 = !DILocation(line: 387, column: 2, scope: !8014)
!8026 = !DILocation(line: 387, column: 22, scope: !8014)
!8027 = !DILocation(line: 399, column: 8, scope: !8014)
!8028 = !DILocation(line: 400, column: 10, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !8014, file: !1001, line: 400, column: 6)
!8030 = !DILocation(line: 400, column: 6, scope: !8014)
!8031 = !DILocation(line: 405, column: 2, scope: !8014)
!8032 = !DILocation(line: 407, column: 2, scope: !8014)
!8033 = !DILocation(line: 408, column: 1, scope: !8014)
!8034 = distinct !DISubprogram(name: "clock_control_on", scope: !636, file: !636, line: 123, type: !966, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8035)
!8035 = !{!8036, !8037, !8038}
!8036 = !DILocalVariable(name: "dev", arg: 1, scope: !8034, file: !636, line: 123, type: !860)
!8037 = !DILocalVariable(name: "sys", arg: 2, scope: !8034, file: !636, line: 124, type: !731)
!8038 = !DILocalVariable(name: "api", scope: !8034, file: !636, line: 126, type: !959)
!8039 = !DILocation(line: 0, scope: !8034)
!8040 = !DILocation(line: 127, column: 49, scope: !8034)
!8041 = !DILocation(line: 129, column: 14, scope: !8034)
!8042 = !DILocation(line: 129, column: 9, scope: !8034)
!8043 = !DILocation(line: 129, column: 2, scope: !8034)
!8044 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1001, file: !1001, line: 311, type: !7177, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8045)
!8045 = !{!8046, !8047, !8048}
!8046 = !DILocalVariable(name: "port", arg: 1, scope: !8044, file: !1001, line: 311, type: !103)
!8047 = !DILocalVariable(name: "pin", arg: 2, scope: !8044, file: !1001, line: 311, type: !103)
!8048 = !DILocalVariable(name: "line", scope: !8044, file: !1001, line: 313, type: !121)
!8049 = !DILocation(line: 0, scope: !8044)
!8050 = !DILocation(line: 313, column: 18, scope: !8044)
!8051 = !DILocation(line: 337, column: 2, scope: !8044)
!8052 = !DILocation(line: 340, column: 1, scope: !8044)
!8053 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1001, file: !1001, line: 295, type: !8054, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8056)
!8054 = !DISubroutineType(types: !8055)
!8055 = !{!121, !103}
!8056 = !{!8057}
!8057 = !DILocalVariable(name: "pin", arg: 1, scope: !8053, file: !1001, line: 295, type: !103)
!8058 = !DILocation(line: 0, scope: !8053)
!8059 = !DILocation(line: 307, column: 46, scope: !8053)
!8060 = !DILocation(line: 307, column: 27, scope: !8053)
!8061 = !DILocation(line: 307, column: 32, scope: !8053)
!8062 = !DILocation(line: 307, column: 14, scope: !8053)
!8063 = !DILocation(line: 307, column: 39, scope: !8053)
!8064 = !DILocation(line: 307, column: 2, scope: !8053)
!8065 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5230, file: !5230, line: 671, type: !8066, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8068)
!8066 = !DISubroutineType(types: !8067)
!8067 = !{null, !121, !121}
!8068 = !{!8069, !8070}
!8069 = !DILocalVariable(name: "Port", arg: 1, scope: !8065, file: !5230, line: 671, type: !121)
!8070 = !DILocalVariable(name: "Line", arg: 2, scope: !8065, file: !5230, line: 671, type: !121)
!8071 = !DILocation(line: 0, scope: !8065)
!8072 = !DILocation(line: 673, column: 3, scope: !8065)
!8073 = !DILocalVariable(name: "value", arg: 1, scope: !8074, file: !5383, line: 373, type: !121)
!8074 = distinct !DISubprogram(name: "__RBIT", scope: !5383, file: !5383, line: 373, type: !6391, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8075)
!8075 = !{!8073, !8076}
!8076 = !DILocalVariable(name: "result", scope: !8074, file: !5383, line: 375, type: !121)
!8077 = !DILocation(line: 0, scope: !8074, inlinedAt: !8078)
!8078 = distinct !DILocation(line: 673, column: 3, scope: !8065)
!8079 = !DILocation(line: 380, column: 4, scope: !8074, inlinedAt: !8078)
!8080 = !{i64 2831761}
!8081 = !DILocalVariable(name: "value", arg: 1, scope: !8082, file: !5383, line: 403, type: !121)
!8082 = distinct !DISubprogram(name: "__CLZ", scope: !5383, file: !5383, line: 403, type: !8083, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8085)
!8083 = !DISubroutineType(types: !8084)
!8084 = !{!154, !121}
!8085 = !{!8081}
!8086 = !DILocation(line: 0, scope: !8082, inlinedAt: !8087)
!8087 = distinct !DILocation(line: 673, column: 3, scope: !8065)
!8088 = !DILocation(line: 414, column: 7, scope: !8082, inlinedAt: !8087)
!8089 = !DILocation(line: 674, column: 1, scope: !8065)
!8090 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !7847, file: !7847, line: 69, type: !8091, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8093)
!8091 = !DISubroutineType(types: !8092)
!8092 = !{null, !7850, !860, !121}
!8093 = !{!8094, !8095, !8096, !8097, !8098}
!8094 = !DILocalVariable(name: "list", arg: 1, scope: !8090, file: !7847, line: 69, type: !7850)
!8095 = !DILocalVariable(name: "port", arg: 2, scope: !8090, file: !7847, line: 70, type: !860)
!8096 = !DILocalVariable(name: "pins", arg: 3, scope: !8090, file: !7847, line: 71, type: !121)
!8097 = !DILocalVariable(name: "cb", scope: !8090, file: !7847, line: 73, type: !902)
!8098 = !DILocalVariable(name: "tmp", scope: !8090, file: !7847, line: 73, type: !902)
!8099 = !DILocation(line: 0, scope: !8090)
!8100 = !DILocation(line: 75, column: 2, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8090, file: !7847, line: 75, column: 2)
!8102 = !DILocation(line: 0, scope: !8101)
!8103 = !DILocation(line: 76, column: 11, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8105, file: !7847, line: 76, column: 7)
!8105 = distinct !DILexicalBlock(scope: !8106, file: !7847, line: 75, column: 57)
!8106 = distinct !DILexicalBlock(scope: !8101, file: !7847, line: 75, column: 2)
!8107 = !DILocation(line: 76, column: 20, scope: !8104)
!8108 = !DILocation(line: 76, column: 7, scope: !8105)
!8109 = !DILocation(line: 78, column: 8, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8104, file: !7847, line: 76, column: 28)
!8111 = !DILocation(line: 78, column: 4, scope: !8110)
!8112 = !DILocation(line: 79, column: 3, scope: !8110)
!8113 = !DILocation(line: 75, column: 2, scope: !8106)
!8114 = !DILocation(line: 81, column: 1, scope: !8090)
!8115 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5230, file: !5230, line: 710, type: !6391, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8116)
!8116 = !{!8117}
!8117 = !DILocalVariable(name: "Line", arg: 1, scope: !8115, file: !5230, line: 710, type: !121)
!8118 = !DILocation(line: 0, scope: !8115)
!8119 = !DILocation(line: 712, column: 21, scope: !8115)
!8120 = !DILocation(line: 0, scope: !8074, inlinedAt: !8121)
!8121 = distinct !DILocation(line: 712, column: 76, scope: !8115)
!8122 = !DILocation(line: 380, column: 4, scope: !8074, inlinedAt: !8121)
!8123 = !DILocation(line: 0, scope: !8082, inlinedAt: !8124)
!8124 = distinct !DILocation(line: 712, column: 76, scope: !8115)
!8125 = !DILocation(line: 414, column: 7, scope: !8082, inlinedAt: !8124)
!8126 = !DILocation(line: 712, column: 73, scope: !8115)
!8127 = !DILocation(line: 712, column: 3, scope: !8115)
!8128 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !8129, file: !8129, line: 910, type: !8130, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8132)
!8129 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8130 = !DISubroutineType(types: !8131)
!8131 = !{null, !933, !121}
!8132 = !{!8133, !8134}
!8133 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8128, file: !8129, line: 910, type: !933)
!8134 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8128, file: !8129, line: 910, type: !121)
!8135 = !DILocation(line: 0, scope: !8128)
!8136 = !DILocation(line: 912, column: 3, scope: !8128)
!8137 = !DILocation(line: 913, column: 1, scope: !8128)
!8138 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !8129, file: !8129, line: 823, type: !8139, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8141)
!8139 = !DISubroutineType(types: !8140)
!8140 = !{!121, !933}
!8141 = !{!8142}
!8142 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8138, file: !8129, line: 823, type: !933)
!8143 = !DILocation(line: 0, scope: !8138)
!8144 = !DILocation(line: 825, column: 21, scope: !8138)
!8145 = !DILocation(line: 825, column: 3, scope: !8138)
!8146 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !8129, file: !8129, line: 812, type: !8130, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8147)
!8147 = !{!8148, !8149}
!8148 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8146, file: !8129, line: 812, type: !933)
!8149 = !DILocalVariable(name: "PortValue", arg: 2, scope: !8146, file: !8129, line: 812, type: !121)
!8150 = !DILocation(line: 0, scope: !8146)
!8151 = !DILocation(line: 814, column: 3, scope: !8146)
!8152 = !DILocation(line: 815, column: 1, scope: !8146)
!8153 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !8129, file: !8129, line: 771, type: !8139, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8154)
!8154 = !{!8155}
!8155 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8153, file: !8129, line: 771, type: !933)
!8156 = !DILocation(line: 0, scope: !8153)
!8157 = !DILocation(line: 773, column: 21, scope: !8153)
!8158 = !DILocation(line: 773, column: 3, scope: !8153)
!8159 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1001, file: !1001, line: 47, type: !8160, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8162)
!8160 = !DISubroutineType(types: !8161)
!8161 = !{!103, !876, !2361}
!8162 = !{!8163, !8164}
!8163 = !DILocalVariable(name: "flags", arg: 1, scope: !8159, file: !1001, line: 47, type: !876)
!8164 = !DILocalVariable(name: "pincfg", arg: 2, scope: !8159, file: !1001, line: 47, type: !2361)
!8165 = !DILocation(line: 0, scope: !8159)
!8166 = !DILocation(line: 50, column: 13, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8159, file: !1001, line: 50, column: 6)
!8168 = !DILocation(line: 50, column: 28, scope: !8167)
!8169 = !DILocation(line: 50, column: 6, scope: !8159)
!8170 = !DILocation(line: 53, column: 11, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8167, file: !1001, line: 50, column: 34)
!8172 = !DILocation(line: 55, column: 14, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8171, file: !1001, line: 55, column: 7)
!8174 = !DILocation(line: 55, column: 35, scope: !8173)
!8175 = !DILocation(line: 55, column: 7, scope: !8171)
!8176 = !DILocation(line: 56, column: 14, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8178, file: !1001, line: 56, column: 8)
!8178 = distinct !DILexicalBlock(scope: !8173, file: !1001, line: 55, column: 41)
!8179 = !DILocation(line: 56, column: 8, scope: !8178)
!8180 = !DILocation(line: 0, scope: !8173)
!8181 = !DILocation(line: 66, column: 14, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8171, file: !1001, line: 66, column: 7)
!8183 = !DILocation(line: 66, column: 30, scope: !8182)
!8184 = !DILocation(line: 66, column: 7, scope: !8171)
!8185 = !DILocation(line: 67, column: 12, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8182, file: !1001, line: 66, column: 36)
!8187 = !DILocation(line: 68, column: 3, scope: !8186)
!8188 = !DILocation(line: 68, column: 21, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8182, file: !1001, line: 68, column: 14)
!8190 = !DILocation(line: 68, column: 39, scope: !8189)
!8191 = !DILocation(line: 68, column: 14, scope: !8182)
!8192 = !DILocation(line: 69, column: 12, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8189, file: !1001, line: 68, column: 45)
!8194 = !DILocation(line: 70, column: 3, scope: !8193)
!8195 = !DILocation(line: 72, column: 21, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8167, file: !1001, line: 72, column: 14)
!8197 = !DILocation(line: 72, column: 35, scope: !8196)
!8198 = !DILocation(line: 72, column: 14, scope: !8167)
!8199 = !DILocation(line: 77, column: 14, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8201, file: !1001, line: 77, column: 7)
!8201 = distinct !DILexicalBlock(scope: !8196, file: !1001, line: 72, column: 41)
!8202 = !DILocation(line: 77, column: 30, scope: !8200)
!8203 = !DILocation(line: 77, column: 7, scope: !8201)
!8204 = !DILocation(line: 0, scope: !8167)
!8205 = !DILocation(line: 90, column: 1, scope: !8159)
!8206 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1001, file: !1001, line: 157, type: !8207, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8209)
!8207 = !DISubroutineType(types: !8208)
!8208 = !{null, !860, !103, !103, !103}
!8209 = !{!8210, !8211, !8212, !8213, !8214, !8215, !8216, !8217, !8218, !8219, !8220}
!8210 = !DILocalVariable(name: "dev", arg: 1, scope: !8206, file: !1001, line: 157, type: !860)
!8211 = !DILocalVariable(name: "pin", arg: 2, scope: !8206, file: !1001, line: 157, type: !103)
!8212 = !DILocalVariable(name: "conf", arg: 3, scope: !8206, file: !1001, line: 158, type: !103)
!8213 = !DILocalVariable(name: "func", arg: 4, scope: !8206, file: !1001, line: 158, type: !103)
!8214 = !DILocalVariable(name: "cfg", scope: !8206, file: !1001, line: 160, type: !7731)
!8215 = !DILocalVariable(name: "gpio", scope: !8206, file: !1001, line: 161, type: !933)
!8216 = !DILocalVariable(name: "pin_ll", scope: !8206, file: !1001, line: 163, type: !103)
!8217 = !DILocalVariable(name: "mode", scope: !8206, file: !1001, line: 227, type: !32)
!8218 = !DILocalVariable(name: "otype", scope: !8206, file: !1001, line: 227, type: !32)
!8219 = !DILocalVariable(name: "ospeed", scope: !8206, file: !1001, line: 227, type: !32)
!8220 = !DILocalVariable(name: "pupd", scope: !8206, file: !1001, line: 227, type: !32)
!8221 = !DILocation(line: 0, scope: !8206)
!8222 = !DILocation(line: 160, column: 45, scope: !8206)
!8223 = !DILocation(line: 161, column: 44, scope: !8206)
!8224 = !DILocation(line: 163, column: 15, scope: !8206)
!8225 = !DILocation(line: 229, column: 14, scope: !8206)
!8226 = !DILocation(line: 246, column: 47, scope: !8206)
!8227 = !DILocation(line: 246, column: 2, scope: !8206)
!8228 = !DILocation(line: 248, column: 43, scope: !8206)
!8229 = !DILocation(line: 248, column: 2, scope: !8206)
!8230 = !DILocation(line: 250, column: 40, scope: !8206)
!8231 = !DILocation(line: 250, column: 2, scope: !8206)
!8232 = !DILocation(line: 252, column: 11, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8206, file: !1001, line: 252, column: 6)
!8234 = !DILocation(line: 252, column: 6, scope: !8206)
!8235 = !DILocation(line: 253, column: 11, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8237, file: !1001, line: 253, column: 7)
!8237 = distinct !DILexicalBlock(scope: !8233, file: !1001, line: 252, column: 36)
!8238 = !DILocation(line: 253, column: 7, scope: !8237)
!8239 = !DILocation(line: 254, column: 4, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8236, file: !1001, line: 253, column: 16)
!8241 = !DILocation(line: 255, column: 3, scope: !8240)
!8242 = !DILocation(line: 256, column: 4, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8236, file: !1001, line: 255, column: 10)
!8244 = !DILocation(line: 260, column: 40, scope: !8206)
!8245 = !DILocation(line: 260, column: 2, scope: !8206)
!8246 = !DILocation(line: 265, column: 1, scope: !8206)
!8247 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1001, file: !1001, line: 137, type: !8054, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8248)
!8248 = !{!8249, !8250}
!8249 = !DILocalVariable(name: "pin", arg: 1, scope: !8247, file: !1001, line: 137, type: !103)
!8250 = !DILocalVariable(name: "pinval", scope: !8247, file: !1001, line: 139, type: !121)
!8251 = !DILocation(line: 0, scope: !8247)
!8252 = !DILocation(line: 149, column: 13, scope: !8247)
!8253 = !DILocation(line: 151, column: 2, scope: !8247)
!8254 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !8129, file: !8129, line: 342, type: !8255, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8257)
!8255 = !DISubroutineType(types: !8256)
!8256 = !{null, !933, !121, !121}
!8257 = !{!8258, !8259, !8260}
!8258 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8254, file: !8129, line: 342, type: !933)
!8259 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8254, file: !8129, line: 342, type: !121)
!8260 = !DILocalVariable(name: "OutputType", arg: 3, scope: !8254, file: !8129, line: 342, type: !121)
!8261 = !DILocation(line: 0, scope: !8254)
!8262 = !DILocation(line: 344, column: 3, scope: !8254)
!8263 = !DILocation(line: 345, column: 1, scope: !8254)
!8264 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !8129, file: !8129, line: 413, type: !8255, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8265)
!8265 = !{!8266, !8267, !8268}
!8266 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8264, file: !8129, line: 413, type: !933)
!8267 = !DILocalVariable(name: "Pin", arg: 2, scope: !8264, file: !8129, line: 413, type: !121)
!8268 = !DILocalVariable(name: "Speed", arg: 3, scope: !8264, file: !8129, line: 413, type: !121)
!8269 = !DILocation(line: 0, scope: !8264)
!8270 = !DILocation(line: 415, column: 3, scope: !8264)
!8271 = !DILocation(line: 0, scope: !8074, inlinedAt: !8272)
!8272 = distinct !DILocation(line: 415, column: 3, scope: !8264)
!8273 = !DILocation(line: 380, column: 4, scope: !8074, inlinedAt: !8272)
!8274 = !DILocation(line: 0, scope: !8082, inlinedAt: !8275)
!8275 = distinct !DILocation(line: 415, column: 3, scope: !8264)
!8276 = !DILocation(line: 414, column: 7, scope: !8082, inlinedAt: !8275)
!8277 = !DILocation(line: 0, scope: !8074, inlinedAt: !8278)
!8278 = distinct !DILocation(line: 415, column: 3, scope: !8264)
!8279 = !DILocation(line: 0, scope: !8082, inlinedAt: !8280)
!8280 = distinct !DILocation(line: 415, column: 3, scope: !8264)
!8281 = !DILocation(line: 417, column: 1, scope: !8264)
!8282 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !8129, file: !8129, line: 484, type: !8255, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8283)
!8283 = !{!8284, !8285, !8286}
!8284 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8282, file: !8129, line: 484, type: !933)
!8285 = !DILocalVariable(name: "Pin", arg: 2, scope: !8282, file: !8129, line: 484, type: !121)
!8286 = !DILocalVariable(name: "Pull", arg: 3, scope: !8282, file: !8129, line: 484, type: !121)
!8287 = !DILocation(line: 0, scope: !8282)
!8288 = !DILocation(line: 486, column: 3, scope: !8282)
!8289 = !DILocation(line: 0, scope: !8074, inlinedAt: !8290)
!8290 = distinct !DILocation(line: 486, column: 3, scope: !8282)
!8291 = !DILocation(line: 380, column: 4, scope: !8074, inlinedAt: !8290)
!8292 = !DILocation(line: 0, scope: !8082, inlinedAt: !8293)
!8293 = distinct !DILocation(line: 486, column: 3, scope: !8282)
!8294 = !DILocation(line: 414, column: 7, scope: !8082, inlinedAt: !8293)
!8295 = !DILocation(line: 0, scope: !8074, inlinedAt: !8296)
!8296 = distinct !DILocation(line: 486, column: 3, scope: !8282)
!8297 = !DILocation(line: 0, scope: !8082, inlinedAt: !8298)
!8298 = distinct !DILocation(line: 486, column: 3, scope: !8282)
!8299 = !DILocation(line: 487, column: 1, scope: !8282)
!8300 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !8129, file: !8129, line: 556, type: !8255, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8301)
!8301 = !{!8302, !8303, !8304}
!8302 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8300, file: !8129, line: 556, type: !933)
!8303 = !DILocalVariable(name: "Pin", arg: 2, scope: !8300, file: !8129, line: 556, type: !121)
!8304 = !DILocalVariable(name: "Alternate", arg: 3, scope: !8300, file: !8129, line: 556, type: !121)
!8305 = !DILocation(line: 0, scope: !8300)
!8306 = !DILocation(line: 558, column: 3, scope: !8300)
!8307 = !DILocation(line: 0, scope: !8074, inlinedAt: !8308)
!8308 = distinct !DILocation(line: 558, column: 3, scope: !8300)
!8309 = !DILocation(line: 380, column: 4, scope: !8074, inlinedAt: !8308)
!8310 = !DILocation(line: 0, scope: !8082, inlinedAt: !8311)
!8311 = distinct !DILocation(line: 558, column: 3, scope: !8300)
!8312 = !DILocation(line: 414, column: 7, scope: !8082, inlinedAt: !8311)
!8313 = !DILocation(line: 0, scope: !8074, inlinedAt: !8314)
!8314 = distinct !DILocation(line: 558, column: 3, scope: !8300)
!8315 = !DILocation(line: 0, scope: !8082, inlinedAt: !8316)
!8316 = distinct !DILocation(line: 558, column: 3, scope: !8300)
!8317 = !DILocation(line: 560, column: 1, scope: !8300)
!8318 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !8129, file: !8129, line: 633, type: !8255, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8319)
!8319 = !{!8320, !8321, !8322}
!8320 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8318, file: !8129, line: 633, type: !933)
!8321 = !DILocalVariable(name: "Pin", arg: 2, scope: !8318, file: !8129, line: 633, type: !121)
!8322 = !DILocalVariable(name: "Alternate", arg: 3, scope: !8318, file: !8129, line: 633, type: !121)
!8323 = !DILocation(line: 0, scope: !8318)
!8324 = !DILocation(line: 635, column: 3, scope: !8318)
!8325 = !DILocation(line: 0, scope: !8074, inlinedAt: !8326)
!8326 = distinct !DILocation(line: 635, column: 3, scope: !8318)
!8327 = !DILocation(line: 380, column: 4, scope: !8074, inlinedAt: !8326)
!8328 = !DILocation(line: 0, scope: !8082, inlinedAt: !8329)
!8329 = distinct !DILocation(line: 635, column: 3, scope: !8318)
!8330 = !DILocation(line: 414, column: 7, scope: !8082, inlinedAt: !8329)
!8331 = !DILocation(line: 0, scope: !8074, inlinedAt: !8332)
!8332 = distinct !DILocation(line: 635, column: 3, scope: !8318)
!8333 = !DILocation(line: 0, scope: !8082, inlinedAt: !8334)
!8334 = distinct !DILocation(line: 635, column: 3, scope: !8318)
!8335 = !DILocation(line: 637, column: 1, scope: !8318)
!8336 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !8129, file: !8129, line: 273, type: !8255, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8337)
!8337 = !{!8338, !8339, !8340}
!8338 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8336, file: !8129, line: 273, type: !933)
!8339 = !DILocalVariable(name: "Pin", arg: 2, scope: !8336, file: !8129, line: 273, type: !121)
!8340 = !DILocalVariable(name: "Mode", arg: 3, scope: !8336, file: !8129, line: 273, type: !121)
!8341 = !DILocation(line: 0, scope: !8336)
!8342 = !DILocation(line: 275, column: 3, scope: !8336)
!8343 = !DILocation(line: 0, scope: !8074, inlinedAt: !8344)
!8344 = distinct !DILocation(line: 275, column: 3, scope: !8336)
!8345 = !DILocation(line: 380, column: 4, scope: !8074, inlinedAt: !8344)
!8346 = !DILocation(line: 0, scope: !8082, inlinedAt: !8347)
!8347 = distinct !DILocation(line: 275, column: 3, scope: !8336)
!8348 = !DILocation(line: 414, column: 7, scope: !8082, inlinedAt: !8347)
!8349 = !DILocation(line: 0, scope: !8074, inlinedAt: !8350)
!8350 = distinct !DILocation(line: 275, column: 3, scope: !8336)
!8351 = !DILocation(line: 0, scope: !8082, inlinedAt: !8352)
!8352 = distinct !DILocation(line: 275, column: 3, scope: !8336)
!8353 = !DILocation(line: 276, column: 1, scope: !8336)
!8354 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1001, file: !1001, line: 698, type: !1014, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8355)
!8355 = !{!8356, !8357, !8358}
!8356 = !DILocalVariable(name: "dev", arg: 1, scope: !8354, file: !1001, line: 698, type: !860)
!8357 = !DILocalVariable(name: "data", scope: !8354, file: !1001, line: 700, type: !7798)
!8358 = !DILocalVariable(name: "ret", scope: !8354, file: !1001, line: 701, type: !103)
!8359 = !DILocation(line: 0, scope: !8354)
!8360 = !DILocation(line: 700, column: 38, scope: !8354)
!8361 = !DILocation(line: 703, column: 8, scope: !8354)
!8362 = !DILocation(line: 703, column: 12, scope: !8354)
!8363 = !DILocation(line: 705, column: 7, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8354, file: !1001, line: 705, column: 6)
!8365 = !DILocation(line: 705, column: 6, scope: !8354)
!8366 = !DILocation(line: 722, column: 8, scope: !8354)
!8367 = !DILocation(line: 723, column: 10, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8354, file: !1001, line: 723, column: 6)
!8369 = !DILocation(line: 723, column: 6, scope: !8354)
!8370 = !DILocation(line: 731, column: 1, scope: !8354)
!8371 = distinct !DISubprogram(name: "device_is_ready", scope: !7578, file: !7578, line: 47, type: !8372, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8374)
!8372 = !DISubroutineType(types: !8373)
!8373 = !{!157, !860}
!8374 = !{!8375}
!8375 = !DILocalVariable(name: "dev", arg: 1, scope: !8371, file: !7578, line: 47, type: !860)
!8376 = !DILocation(line: 0, scope: !8371)
!8377 = !DILocation(line: 55, column: 2, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8371, file: !7578, line: 55, column: 2)
!8379 = !{i64 2154257356}
!8380 = !DILocation(line: 56, column: 9, scope: !8371)
!8381 = !DILocation(line: 56, column: 2, scope: !8371)
!8382 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1001, file: !1001, line: 270, type: !8383, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8385)
!8383 = !DISubroutineType(types: !8384)
!8384 = !{!103, !860, !157}
!8385 = !{!8386, !8387, !8388, !8389, !8390}
!8386 = !DILocalVariable(name: "dev", arg: 1, scope: !8382, file: !1001, line: 270, type: !860)
!8387 = !DILocalVariable(name: "on", arg: 2, scope: !8382, file: !1001, line: 270, type: !157)
!8388 = !DILocalVariable(name: "cfg", scope: !8382, file: !1001, line: 272, type: !7731)
!8389 = !DILocalVariable(name: "ret", scope: !8382, file: !1001, line: 273, type: !103)
!8390 = !DILocalVariable(name: "clk", scope: !8382, file: !1001, line: 278, type: !8021)
!8391 = !DILocation(line: 0, scope: !8382)
!8392 = !DILocation(line: 272, column: 45, scope: !8382)
!8393 = !DILocation(line: 282, column: 38, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8395, file: !1001, line: 280, column: 10)
!8395 = distinct !DILexicalBlock(scope: !8382, file: !1001, line: 280, column: 6)
!8396 = !DILocation(line: 282, column: 6, scope: !8394)
!8397 = !DILocation(line: 281, column: 9, scope: !8394)
!8398 = !DILocation(line: 293, column: 1, scope: !8382)
!8399 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !8372, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8400)
!8400 = !{!8401}
!8401 = !DILocalVariable(name: "dev", arg: 1, scope: !8399, file: !141, line: 730, type: !860)
!8402 = !DILocation(line: 0, scope: !8399)
!8403 = !DILocation(line: 732, column: 9, scope: !8399)
!8404 = !DILocation(line: 732, column: 2, scope: !8399)
!8405 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1001, file: !1001, line: 496, type: !8406, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !8408)
!8406 = !DISubroutineType(types: !8407)
!8407 = !{!103, !860, !103, !103, !103}
!8408 = !{!8409, !8410, !8411, !8412, !8413, !8414}
!8409 = !DILocalVariable(name: "dev", arg: 1, scope: !8405, file: !1001, line: 496, type: !860)
!8410 = !DILocalVariable(name: "pin", arg: 2, scope: !8405, file: !1001, line: 496, type: !103)
!8411 = !DILocalVariable(name: "conf", arg: 3, scope: !8405, file: !1001, line: 496, type: !103)
!8412 = !DILocalVariable(name: "func", arg: 4, scope: !8405, file: !1001, line: 496, type: !103)
!8413 = !DILocalVariable(name: "ret", scope: !8405, file: !1001, line: 498, type: !103)
!8414 = !DILocalVariable(name: "gpio_out", scope: !8415, file: !1001, line: 508, type: !121)
!8415 = distinct !DILexicalBlock(scope: !8416, file: !1001, line: 507, column: 27)
!8416 = distinct !DILexicalBlock(scope: !8405, file: !1001, line: 507, column: 6)
!8417 = !DILocation(line: 0, scope: !8405)
!8418 = !DILocation(line: 505, column: 2, scope: !8405)
!8419 = !DILocation(line: 507, column: 11, scope: !8416)
!8420 = !DILocation(line: 507, column: 6, scope: !8405)
!8421 = !DILocation(line: 508, column: 28, scope: !8415)
!8422 = !DILocation(line: 0, scope: !8415)
!8423 = !DILocation(line: 510, column: 16, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8415, file: !1001, line: 510, column: 7)
!8425 = !DILocation(line: 0, scope: !8424)
!8426 = !DILocation(line: 510, column: 7, scope: !8415)
!8427 = !DILocation(line: 511, column: 4, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8424, file: !1001, line: 510, column: 32)
!8429 = !DILocation(line: 512, column: 3, scope: !8428)
!8430 = !DILocation(line: 513, column: 4, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8432, file: !1001, line: 512, column: 39)
!8432 = distinct !DILexicalBlock(scope: !8424, file: !1001, line: 512, column: 14)
!8433 = !DILocation(line: 514, column: 3, scope: !8431)
!8434 = !DILocation(line: 518, column: 1, scope: !8405)
!8435 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1276, file: !1276, line: 526, type: !1177, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8436)
!8436 = !{!8437, !8438, !8439}
!8437 = !DILocalVariable(name: "dev", arg: 1, scope: !8435, file: !1276, line: 526, type: !1179)
!8438 = !DILocalVariable(name: "c", arg: 2, scope: !8435, file: !1276, line: 526, type: !792)
!8439 = !DILocalVariable(name: "config", scope: !8435, file: !1276, line: 528, type: !8440)
!8440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 32)
!8441 = !DILocation(line: 0, scope: !8435)
!8442 = !DILocation(line: 528, column: 48, scope: !8435)
!8443 = !DILocation(line: 531, column: 40, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8435, file: !1276, line: 531, column: 6)
!8445 = !DILocation(line: 531, column: 6, scope: !8444)
!8446 = !DILocation(line: 531, column: 6, scope: !8435)
!8447 = !DILocation(line: 532, column: 34, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8444, file: !1276, line: 531, column: 48)
!8449 = !DILocation(line: 532, column: 3, scope: !8448)
!8450 = !DILocation(line: 533, column: 2, scope: !8448)
!8451 = !DILocation(line: 539, column: 42, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8435, file: !1276, line: 539, column: 6)
!8453 = !DILocation(line: 539, column: 7, scope: !8452)
!8454 = !DILocation(line: 539, column: 6, scope: !8435)
!8455 = !DILocation(line: 543, column: 52, scope: !8435)
!8456 = !DILocation(line: 543, column: 22, scope: !8435)
!8457 = !DILocation(line: 543, column: 5, scope: !8435)
!8458 = !DILocation(line: 545, column: 2, scope: !8435)
!8459 = !DILocation(line: 546, column: 1, scope: !8435)
!8460 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1276, file: !1276, line: 548, type: !1196, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8461)
!8461 = !{!8462, !8463, !8464, !8465}
!8462 = !DILocalVariable(name: "dev", arg: 1, scope: !8460, file: !1276, line: 548, type: !1179)
!8463 = !DILocalVariable(name: "c", arg: 2, scope: !8460, file: !1276, line: 549, type: !155)
!8464 = !DILocalVariable(name: "config", scope: !8460, file: !1276, line: 551, type: !8440)
!8465 = !DILocalVariable(name: "key", scope: !8460, file: !1276, line: 555, type: !32)
!8466 = !DILocation(line: 0, scope: !8460)
!8467 = !DILocation(line: 551, column: 48, scope: !8460)
!8468 = !DILocation(line: 562, column: 2, scope: !8460)
!8469 = !DILocation(line: 563, column: 41, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8471, file: !1276, line: 563, column: 7)
!8471 = distinct !DILexicalBlock(scope: !8460, file: !1276, line: 562, column: 12)
!8472 = !DILocation(line: 563, column: 7, scope: !8470)
!8473 = !DILocation(line: 563, column: 7, scope: !8471)
!8474 = !DILocation(line: 55, column: 2, scope: !8475, inlinedAt: !8479)
!8475 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5209, file: !5209, line: 42, type: !5210, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8476)
!8476 = !{!8477, !8478}
!8477 = !DILocalVariable(name: "key", scope: !8475, file: !5209, line: 44, type: !32)
!8478 = !DILocalVariable(name: "tmp", scope: !8475, file: !5209, line: 53, type: !32)
!8479 = distinct !DILocation(line: 564, column: 10, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8470, file: !1276, line: 563, column: 49)
!8481 = !{i64 1997306}
!8482 = !DILocation(line: 0, scope: !8475, inlinedAt: !8479)
!8483 = !DILocation(line: 565, column: 42, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8480, file: !1276, line: 565, column: 8)
!8485 = !DILocation(line: 565, column: 8, scope: !8484)
!8486 = !DILocation(line: 565, column: 8, scope: !8480)
!8487 = !DILocalVariable(name: "key", arg: 1, scope: !8488, file: !5209, line: 84, type: !32)
!8488 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5209, file: !5209, line: 84, type: !5220, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8489)
!8489 = !{!8487}
!8490 = !DILocation(line: 0, scope: !8488, inlinedAt: !8491)
!8491 = distinct !DILocation(line: 568, column: 4, scope: !8480)
!8492 = !DILocation(line: 95, column: 2, scope: !8488, inlinedAt: !8491)
!8493 = !{i64 1998123}
!8494 = !DILocation(line: 569, column: 3, scope: !8480)
!8495 = distinct !{!8495, !8468, !8496}
!8496 = !DILocation(line: 570, column: 2, scope: !8460)
!8497 = !DILocation(line: 592, column: 33, scope: !8460)
!8498 = !DILocation(line: 592, column: 2, scope: !8460)
!8499 = !DILocation(line: 0, scope: !8488, inlinedAt: !8500)
!8500 = distinct !DILocation(line: 593, column: 2, scope: !8460)
!8501 = !DILocation(line: 95, column: 2, scope: !8488, inlinedAt: !8500)
!8502 = !DILocation(line: 594, column: 1, scope: !8460)
!8503 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1276, file: !1276, line: 596, type: !1200, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8504)
!8504 = !{!8505, !8506, !8507}
!8505 = !DILocalVariable(name: "dev", arg: 1, scope: !8503, file: !1276, line: 596, type: !1179)
!8506 = !DILocalVariable(name: "config", scope: !8503, file: !1276, line: 598, type: !8440)
!8507 = !DILocalVariable(name: "err", scope: !8503, file: !1276, line: 599, type: !121)
!8508 = !DILocation(line: 0, scope: !8503)
!8509 = !DILocation(line: 598, column: 48, scope: !8503)
!8510 = !DILocation(line: 606, column: 40, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8503, file: !1276, line: 606, column: 6)
!8512 = !DILocation(line: 606, column: 6, scope: !8511)
!8513 = !DILocation(line: 606, column: 6, scope: !8503)
!8514 = !DILocation(line: 610, column: 39, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8503, file: !1276, line: 610, column: 6)
!8516 = !DILocation(line: 610, column: 6, scope: !8515)
!8517 = !DILocation(line: 610, column: 6, scope: !8503)
!8518 = !DILocation(line: 614, column: 39, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !8503, file: !1276, line: 614, column: 6)
!8520 = !DILocation(line: 614, column: 6, scope: !8519)
!8521 = !DILocation(line: 614, column: 6, scope: !8503)
!8522 = !DILocation(line: 619, column: 40, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !8503, file: !1276, line: 619, column: 6)
!8524 = !DILocation(line: 619, column: 6, scope: !8523)
!8525 = !DILocation(line: 619, column: 6, scope: !8503)
!8526 = !DILocation(line: 623, column: 10, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8503, file: !1276, line: 623, column: 6)
!8528 = !DILocation(line: 623, column: 6, scope: !8503)
!8529 = !DILocation(line: 624, column: 34, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8527, file: !1276, line: 623, column: 24)
!8531 = !DILocation(line: 624, column: 3, scope: !8530)
!8532 = !DILocation(line: 625, column: 2, scope: !8530)
!8533 = !DILocation(line: 632, column: 10, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8503, file: !1276, line: 632, column: 6)
!8535 = !DILocation(line: 632, column: 6, scope: !8503)
!8536 = !DILocation(line: 633, column: 34, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8534, file: !1276, line: 632, column: 32)
!8538 = !DILocation(line: 633, column: 3, scope: !8537)
!8539 = !DILocation(line: 634, column: 2, scope: !8537)
!8540 = !DILocation(line: 636, column: 10, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8503, file: !1276, line: 636, column: 6)
!8542 = !DILocation(line: 636, column: 6, scope: !8503)
!8543 = !DILocation(line: 637, column: 33, scope: !8544)
!8544 = distinct !DILexicalBlock(scope: !8541, file: !1276, line: 636, column: 31)
!8545 = !DILocation(line: 637, column: 3, scope: !8544)
!8546 = !DILocation(line: 638, column: 2, scope: !8544)
!8547 = !DILocation(line: 640, column: 10, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8503, file: !1276, line: 640, column: 6)
!8549 = !DILocation(line: 640, column: 6, scope: !8503)
!8550 = !DILocation(line: 641, column: 33, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8548, file: !1276, line: 640, column: 32)
!8552 = !DILocation(line: 641, column: 3, scope: !8551)
!8553 = !DILocation(line: 642, column: 2, scope: !8551)
!8554 = !DILocation(line: 646, column: 32, scope: !8503)
!8555 = !DILocation(line: 646, column: 2, scope: !8503)
!8556 = !DILocation(line: 648, column: 2, scope: !8503)
!8557 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1276, file: !1276, line: 419, type: !1204, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8558)
!8558 = !{!8559, !8560, !8561, !8562, !8564, !8565, !8566, !8567}
!8559 = !DILocalVariable(name: "dev", arg: 1, scope: !8557, file: !1276, line: 419, type: !1179)
!8560 = !DILocalVariable(name: "cfg", arg: 2, scope: !8557, file: !1276, line: 420, type: !1206)
!8561 = !DILocalVariable(name: "config", scope: !8557, file: !1276, line: 422, type: !8440)
!8562 = !DILocalVariable(name: "data", scope: !8557, file: !1276, line: 423, type: !8563)
!8563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 32)
!8564 = !DILocalVariable(name: "parity", scope: !8557, file: !1276, line: 424, type: !5651)
!8565 = !DILocalVariable(name: "stopbits", scope: !8557, file: !1276, line: 425, type: !5651)
!8566 = !DILocalVariable(name: "databits", scope: !8557, file: !1276, line: 426, type: !5651)
!8567 = !DILocalVariable(name: "flowctrl", scope: !8557, file: !1276, line: 428, type: !5651)
!8568 = !DILocation(line: 0, scope: !8557)
!8569 = !DILocation(line: 422, column: 48, scope: !8557)
!8570 = !DILocation(line: 423, column: 38, scope: !8557)
!8571 = !DILocation(line: 424, column: 56, scope: !8557)
!8572 = !DILocation(line: 424, column: 51, scope: !8557)
!8573 = !DILocation(line: 424, column: 26, scope: !8557)
!8574 = !DILocation(line: 425, column: 60, scope: !8557)
!8575 = !DILocation(line: 425, column: 55, scope: !8557)
!8576 = !DILocation(line: 425, column: 28, scope: !8557)
!8577 = !DILocation(line: 426, column: 60, scope: !8557)
!8578 = !DILocation(line: 426, column: 55, scope: !8557)
!8579 = !DILocation(line: 426, column: 28, scope: !8557)
!8580 = !DILocation(line: 428, column: 58, scope: !8557)
!8581 = !DILocation(line: 428, column: 53, scope: !8557)
!8582 = !DILocation(line: 428, column: 28, scope: !8557)
!8583 = !DILocation(line: 431, column: 44, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8557, file: !1276, line: 431, column: 6)
!8585 = !DILocation(line: 438, column: 22, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8557, file: !1276, line: 437, column: 6)
!8587 = !DILocation(line: 437, column: 6, scope: !8557)
!8588 = !DILocation(line: 448, column: 6, scope: !8557)
!8589 = !DILocation(line: 465, column: 47, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8557, file: !1276, line: 465, column: 6)
!8591 = !DILocation(line: 475, column: 21, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8557, file: !1276, line: 475, column: 6)
!8593 = !DILocation(line: 475, column: 6, scope: !8557)
!8594 = !DILocation(line: 476, column: 8, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8596, file: !1276, line: 476, column: 7)
!8596 = distinct !DILexicalBlock(scope: !8592, file: !1276, line: 475, column: 49)
!8597 = !DILocation(line: 477, column: 34, scope: !8595)
!8598 = !DILocation(line: 476, column: 7, scope: !8596)
!8599 = !DILocation(line: 482, column: 27, scope: !8557)
!8600 = !DILocation(line: 482, column: 2, scope: !8557)
!8601 = !DILocation(line: 484, column: 16, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8557, file: !1276, line: 484, column: 6)
!8603 = !DILocation(line: 484, column: 13, scope: !8602)
!8604 = !DILocation(line: 484, column: 6, scope: !8557)
!8605 = !DILocation(line: 485, column: 3, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8602, file: !1276, line: 484, column: 44)
!8607 = !DILocation(line: 486, column: 2, scope: !8606)
!8608 = !DILocation(line: 488, column: 18, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8557, file: !1276, line: 488, column: 6)
!8610 = !DILocation(line: 488, column: 15, scope: !8609)
!8611 = !DILocation(line: 488, column: 6, scope: !8557)
!8612 = !DILocation(line: 489, column: 3, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8609, file: !1276, line: 488, column: 48)
!8614 = !DILocation(line: 490, column: 2, scope: !8613)
!8615 = !DILocation(line: 492, column: 18, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8557, file: !1276, line: 492, column: 6)
!8617 = !DILocation(line: 492, column: 15, scope: !8616)
!8618 = !DILocation(line: 492, column: 6, scope: !8557)
!8619 = !DILocation(line: 493, column: 3, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8616, file: !1276, line: 492, column: 48)
!8621 = !DILocation(line: 494, column: 2, scope: !8620)
!8622 = !DILocation(line: 496, column: 18, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8557, file: !1276, line: 496, column: 6)
!8624 = !DILocation(line: 496, column: 15, scope: !8623)
!8625 = !DILocation(line: 496, column: 6, scope: !8557)
!8626 = !DILocation(line: 497, column: 3, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8623, file: !1276, line: 496, column: 46)
!8628 = !DILocation(line: 498, column: 2, scope: !8627)
!8629 = !DILocation(line: 500, column: 11, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8557, file: !1276, line: 500, column: 6)
!8631 = !DILocation(line: 500, column: 29, scope: !8630)
!8632 = !DILocation(line: 500, column: 20, scope: !8630)
!8633 = !DILocation(line: 500, column: 6, scope: !8557)
!8634 = !DILocation(line: 501, column: 3, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8630, file: !1276, line: 500, column: 40)
!8636 = !DILocation(line: 502, column: 26, scope: !8635)
!8637 = !DILocation(line: 502, column: 19, scope: !8635)
!8638 = !DILocation(line: 503, column: 2, scope: !8635)
!8639 = !DILocation(line: 505, column: 26, scope: !8557)
!8640 = !DILocation(line: 505, column: 2, scope: !8557)
!8641 = !DILocation(line: 506, column: 2, scope: !8557)
!8642 = !DILocation(line: 507, column: 1, scope: !8557)
!8643 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1276, file: !1276, line: 509, type: !1217, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8644)
!8644 = !{!8645, !8646, !8647}
!8645 = !DILocalVariable(name: "dev", arg: 1, scope: !8643, file: !1276, line: 509, type: !1179)
!8646 = !DILocalVariable(name: "cfg", arg: 2, scope: !8643, file: !1276, line: 510, type: !1219)
!8647 = !DILocalVariable(name: "data", scope: !8643, file: !1276, line: 512, type: !8563)
!8648 = !DILocation(line: 0, scope: !8643)
!8649 = !DILocation(line: 512, column: 38, scope: !8643)
!8650 = !DILocation(line: 514, column: 24, scope: !8643)
!8651 = !DILocation(line: 514, column: 7, scope: !8643)
!8652 = !DILocation(line: 514, column: 16, scope: !8643)
!8653 = !DILocation(line: 515, column: 41, scope: !8643)
!8654 = !{i32 0, i32 1537}
!8655 = !DILocation(line: 515, column: 16, scope: !8643)
!8656 = !DILocation(line: 515, column: 7, scope: !8643)
!8657 = !DILocation(line: 515, column: 14, scope: !8643)
!8658 = !DILocation(line: 517, column: 3, scope: !8643)
!8659 = !{i32 0, i32 12289}
!8660 = !DILocation(line: 516, column: 19, scope: !8643)
!8661 = !DILocation(line: 516, column: 7, scope: !8643)
!8662 = !DILocation(line: 516, column: 17, scope: !8643)
!8663 = !DILocation(line: 519, column: 3, scope: !8643)
!8664 = !DILocation(line: 519, column: 33, scope: !8643)
!8665 = !DILocation(line: 518, column: 19, scope: !8643)
!8666 = !DILocation(line: 518, column: 7, scope: !8643)
!8667 = !DILocation(line: 518, column: 17, scope: !8643)
!8668 = !DILocation(line: 521, column: 3, scope: !8643)
!8669 = !{i32 0, i32 769}
!8670 = !DILocation(line: 520, column: 19, scope: !8643)
!8671 = !DILocation(line: 520, column: 7, scope: !8643)
!8672 = !DILocation(line: 520, column: 17, scope: !8643)
!8673 = !DILocation(line: 522, column: 2, scope: !8643)
!8674 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1276, file: !1276, line: 205, type: !8675, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8677)
!8675 = !DISubroutineType(types: !8676)
!8676 = !{!121, !1179}
!8677 = !{!8678, !8679}
!8678 = !DILocalVariable(name: "dev", arg: 1, scope: !8674, file: !1276, line: 205, type: !1179)
!8679 = !DILocalVariable(name: "config", scope: !8674, file: !1276, line: 207, type: !8440)
!8680 = !DILocation(line: 0, scope: !8674)
!8681 = !DILocation(line: 207, column: 48, scope: !8674)
!8682 = !DILocation(line: 209, column: 36, scope: !8674)
!8683 = !DILocation(line: 209, column: 9, scope: !8674)
!8684 = !DILocation(line: 209, column: 2, scope: !8674)
!8685 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1276, file: !1276, line: 270, type: !8686, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8688)
!8686 = !DISubroutineType(types: !8687)
!8687 = !{!1145, !121}
!8688 = !{!8689}
!8689 = !DILocalVariable(name: "parity", arg: 1, scope: !8685, file: !1276, line: 270, type: !121)
!8690 = !DILocation(line: 0, scope: !8685)
!8691 = !DILocation(line: 272, column: 2, scope: !8685)
!8692 = !DILocation(line: 281, column: 1, scope: !8685)
!8693 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1276, file: !1276, line: 220, type: !8675, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8694)
!8694 = !{!8695, !8696}
!8695 = !DILocalVariable(name: "dev", arg: 1, scope: !8693, file: !1276, line: 220, type: !1179)
!8696 = !DILocalVariable(name: "config", scope: !8693, file: !1276, line: 222, type: !8440)
!8697 = !DILocation(line: 0, scope: !8693)
!8698 = !DILocation(line: 222, column: 48, scope: !8693)
!8699 = !DILocation(line: 224, column: 44, scope: !8693)
!8700 = !DILocation(line: 224, column: 9, scope: !8693)
!8701 = !DILocation(line: 224, column: 2, scope: !8693)
!8702 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1276, file: !1276, line: 304, type: !8703, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8705)
!8703 = !DISubroutineType(types: !8704)
!8704 = !{!1159, !121}
!8705 = !{!8706}
!8706 = !DILocalVariable(name: "sb", arg: 1, scope: !8702, file: !1276, line: 304, type: !121)
!8707 = !DILocation(line: 0, scope: !8702)
!8708 = !DILocation(line: 306, column: 2, scope: !8702)
!8709 = !DILocation(line: 0, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8702, file: !1276, line: 306, column: 14)
!8711 = !DILocation(line: 323, column: 1, scope: !8702)
!8712 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1276, file: !1276, line: 235, type: !8675, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8713)
!8713 = !{!8714, !8715}
!8714 = !DILocalVariable(name: "dev", arg: 1, scope: !8712, file: !1276, line: 235, type: !1179)
!8715 = !DILocalVariable(name: "config", scope: !8712, file: !1276, line: 237, type: !8440)
!8716 = !DILocation(line: 0, scope: !8712)
!8717 = !DILocation(line: 237, column: 48, scope: !8712)
!8718 = !DILocation(line: 239, column: 39, scope: !8712)
!8719 = !DILocation(line: 239, column: 9, scope: !8712)
!8720 = !DILocation(line: 239, column: 2, scope: !8712)
!8721 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1276, file: !1276, line: 355, type: !8722, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8724)
!8722 = !DISubroutineType(types: !8723)
!8723 = !{!1152, !121, !121}
!8724 = !{!8725, !8726}
!8725 = !DILocalVariable(name: "db", arg: 1, scope: !8721, file: !1276, line: 355, type: !121)
!8726 = !DILocalVariable(name: "p", arg: 2, scope: !8721, file: !1276, line: 356, type: !121)
!8727 = !DILocation(line: 0, scope: !8721)
!8728 = !DILocation(line: 358, column: 2, scope: !8721)
!8729 = !DILocation(line: 384, column: 1, scope: !8721)
!8730 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1276, file: !1276, line: 250, type: !8675, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8731)
!8731 = !{!8732, !8733}
!8732 = !DILocalVariable(name: "dev", arg: 1, scope: !8730, file: !1276, line: 250, type: !1179)
!8733 = !DILocalVariable(name: "config", scope: !8730, file: !1276, line: 252, type: !8440)
!8734 = !DILocation(line: 0, scope: !8730)
!8735 = !DILocation(line: 252, column: 48, scope: !8730)
!8736 = !DILocation(line: 254, column: 40, scope: !8730)
!8737 = !DILocation(line: 254, column: 9, scope: !8730)
!8738 = !DILocation(line: 254, column: 2, scope: !8730)
!8739 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1276, file: !1276, line: 409, type: !8740, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8742)
!8740 = !DISubroutineType(types: !8741)
!8741 = !{!1165, !121}
!8742 = !{!8743}
!8743 = !DILocalVariable(name: "fc", arg: 1, scope: !8739, file: !1276, line: 409, type: !121)
!8744 = !DILocation(line: 0, scope: !8739)
!8745 = !DILocation(line: 411, column: 9, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8739, file: !1276, line: 411, column: 6)
!8747 = !DILocation(line: 416, column: 1, scope: !8739)
!8748 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !8749, file: !8749, line: 967, type: !8750, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8752)
!8749 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8750 = !DISubroutineType(types: !8751)
!8751 = !{!121, !1220}
!8752 = !{!8753}
!8753 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8748, file: !8749, line: 967, type: !1220)
!8754 = !DILocation(line: 0, scope: !8748)
!8755 = !DILocation(line: 969, column: 21, scope: !8748)
!8756 = !DILocation(line: 969, column: 3, scope: !8748)
!8757 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !8749, file: !8749, line: 601, type: !8750, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8758)
!8758 = !{!8759}
!8759 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8757, file: !8749, line: 601, type: !1220)
!8760 = !DILocation(line: 0, scope: !8757)
!8761 = !DILocation(line: 603, column: 21, scope: !8757)
!8762 = !DILocation(line: 603, column: 3, scope: !8757)
!8763 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !8749, file: !8749, line: 820, type: !8750, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8764)
!8764 = !{!8765}
!8765 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8763, file: !8749, line: 820, type: !1220)
!8766 = !DILocation(line: 0, scope: !8763)
!8767 = !DILocation(line: 822, column: 21, scope: !8763)
!8768 = !DILocation(line: 822, column: 3, scope: !8763)
!8769 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !8749, file: !8749, line: 547, type: !8750, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8770)
!8770 = !{!8771}
!8771 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8769, file: !8749, line: 547, type: !1220)
!8772 = !DILocation(line: 0, scope: !8769)
!8773 = !DILocation(line: 549, column: 21, scope: !8769)
!8774 = !DILocation(line: 549, column: 3, scope: !8769)
!8775 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1276, file: !1276, line: 257, type: !8776, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8778)
!8776 = !DISubroutineType(types: !8777)
!8777 = !{!121, !1145}
!8778 = !{!8779}
!8779 = !DILocalVariable(name: "parity", arg: 1, scope: !8775, file: !1276, line: 257, type: !1145)
!8780 = !DILocation(line: 0, scope: !8775)
!8781 = !DILocation(line: 259, column: 2, scope: !8775)
!8782 = !DILocation(line: 268, column: 1, scope: !8775)
!8783 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1276, file: !1276, line: 283, type: !8784, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8786)
!8784 = !DISubroutineType(types: !8785)
!8785 = !{!121, !1159}
!8786 = !{!8787}
!8787 = !DILocalVariable(name: "sb", arg: 1, scope: !8783, file: !1276, line: 283, type: !1159)
!8788 = !DILocation(line: 0, scope: !8783)
!8789 = !DILocation(line: 285, column: 2, scope: !8783)
!8790 = !DILocation(line: 0, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8783, file: !1276, line: 285, column: 14)
!8792 = !DILocation(line: 302, column: 1, scope: !8783)
!8793 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1276, file: !1276, line: 325, type: !8794, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8796)
!8794 = !DISubroutineType(types: !8795)
!8795 = !{!121, !1152, !1145}
!8796 = !{!8797, !8798}
!8797 = !DILocalVariable(name: "db", arg: 1, scope: !8793, file: !1276, line: 325, type: !1152)
!8798 = !DILocalVariable(name: "p", arg: 2, scope: !8793, file: !1276, line: 326, type: !1145)
!8799 = !DILocation(line: 0, scope: !8793)
!8800 = !DILocation(line: 328, column: 2, scope: !8793)
!8801 = !DILocation(line: 353, column: 1, scope: !8793)
!8802 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1276, file: !1276, line: 393, type: !8803, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8805)
!8803 = !DISubroutineType(types: !8804)
!8804 = !{!121, !1165}
!8805 = !{!8806}
!8806 = !DILocalVariable(name: "fc", arg: 1, scope: !8802, file: !1276, line: 393, type: !1165)
!8807 = !DILocation(line: 0, scope: !8802)
!8808 = !DILocation(line: 395, column: 9, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8802, file: !1276, line: 395, column: 6)
!8810 = !DILocation(line: 400, column: 1, scope: !8802)
!8811 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !8749, file: !8749, line: 424, type: !8812, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8814)
!8812 = !DISubroutineType(types: !8813)
!8813 = !{null, !1220}
!8814 = !{!8815}
!8815 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8811, file: !8749, line: 424, type: !1220)
!8816 = !DILocation(line: 0, scope: !8811)
!8817 = !DILocation(line: 426, column: 3, scope: !8811)
!8818 = !DILocation(line: 427, column: 1, scope: !8811)
!8819 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1276, file: !1276, line: 197, type: !8820, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8822)
!8820 = !DISubroutineType(types: !8821)
!8821 = !{null, !1179, !121}
!8822 = !{!8823, !8824, !8825}
!8823 = !DILocalVariable(name: "dev", arg: 1, scope: !8819, file: !1276, line: 197, type: !1179)
!8824 = !DILocalVariable(name: "parity", arg: 2, scope: !8819, file: !1276, line: 198, type: !121)
!8825 = !DILocalVariable(name: "config", scope: !8819, file: !1276, line: 200, type: !8440)
!8826 = !DILocation(line: 0, scope: !8819)
!8827 = !DILocation(line: 200, column: 48, scope: !8819)
!8828 = !DILocation(line: 202, column: 29, scope: !8819)
!8829 = !DILocation(line: 202, column: 2, scope: !8819)
!8830 = !DILocation(line: 203, column: 1, scope: !8819)
!8831 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1276, file: !1276, line: 212, type: !8820, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8832)
!8832 = !{!8833, !8834, !8835}
!8833 = !DILocalVariable(name: "dev", arg: 1, scope: !8831, file: !1276, line: 212, type: !1179)
!8834 = !DILocalVariable(name: "stopbits", arg: 2, scope: !8831, file: !1276, line: 213, type: !121)
!8835 = !DILocalVariable(name: "config", scope: !8831, file: !1276, line: 215, type: !8440)
!8836 = !DILocation(line: 0, scope: !8831)
!8837 = !DILocation(line: 215, column: 48, scope: !8831)
!8838 = !DILocation(line: 217, column: 37, scope: !8831)
!8839 = !DILocation(line: 217, column: 2, scope: !8831)
!8840 = !DILocation(line: 218, column: 1, scope: !8831)
!8841 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1276, file: !1276, line: 227, type: !8820, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8842)
!8842 = !{!8843, !8844, !8845}
!8843 = !DILocalVariable(name: "dev", arg: 1, scope: !8841, file: !1276, line: 227, type: !1179)
!8844 = !DILocalVariable(name: "databits", arg: 2, scope: !8841, file: !1276, line: 228, type: !121)
!8845 = !DILocalVariable(name: "config", scope: !8841, file: !1276, line: 230, type: !8440)
!8846 = !DILocation(line: 0, scope: !8841)
!8847 = !DILocation(line: 230, column: 48, scope: !8841)
!8848 = !DILocation(line: 232, column: 32, scope: !8841)
!8849 = !DILocation(line: 232, column: 2, scope: !8841)
!8850 = !DILocation(line: 233, column: 1, scope: !8841)
!8851 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1276, file: !1276, line: 242, type: !8820, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8852)
!8852 = !{!8853, !8854, !8855}
!8853 = !DILocalVariable(name: "dev", arg: 1, scope: !8851, file: !1276, line: 242, type: !1179)
!8854 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !8851, file: !1276, line: 243, type: !121)
!8855 = !DILocalVariable(name: "config", scope: !8851, file: !1276, line: 245, type: !8440)
!8856 = !DILocation(line: 0, scope: !8851)
!8857 = !DILocation(line: 245, column: 48, scope: !8851)
!8858 = !DILocation(line: 247, column: 33, scope: !8851)
!8859 = !DILocation(line: 247, column: 2, scope: !8851)
!8860 = !DILocation(line: 248, column: 1, scope: !8851)
!8861 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1276, file: !1276, line: 107, type: !8820, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8862)
!8862 = !{!8863, !8864, !8865, !8866, !8867}
!8863 = !DILocalVariable(name: "dev", arg: 1, scope: !8861, file: !1276, line: 107, type: !1179)
!8864 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !8861, file: !1276, line: 107, type: !121)
!8865 = !DILocalVariable(name: "config", scope: !8861, file: !1276, line: 109, type: !8440)
!8866 = !DILocalVariable(name: "data", scope: !8861, file: !1276, line: 110, type: !8563)
!8867 = !DILocalVariable(name: "clock_rate", scope: !8861, file: !1276, line: 112, type: !121)
!8868 = !DILocation(line: 0, scope: !8861)
!8869 = !DILocation(line: 109, column: 48, scope: !8861)
!8870 = !DILocation(line: 110, column: 38, scope: !8861)
!8871 = !DILocation(line: 112, column: 2, scope: !8861)
!8872 = !DILocation(line: 123, column: 36, scope: !8873)
!8873 = distinct !DILexicalBlock(scope: !8874, file: !1276, line: 123, column: 7)
!8874 = distinct !DILexicalBlock(scope: !8875, file: !1276, line: 122, column: 9)
!8875 = distinct !DILexicalBlock(scope: !8861, file: !1276, line: 115, column: 6)
!8876 = !DILocation(line: 124, column: 42, scope: !8873)
!8877 = !DILocation(line: 123, column: 7, scope: !8873)
!8878 = !DILocation(line: 125, column: 22, scope: !8873)
!8879 = !DILocation(line: 123, column: 7, scope: !8874)
!8880 = !DILocation(line: 176, column: 36, scope: !8861)
!8881 = !DILocation(line: 176, column: 3, scope: !8861)
!8882 = !DILocation(line: 179, column: 32, scope: !8861)
!8883 = !DILocation(line: 180, column: 10, scope: !8861)
!8884 = !DILocation(line: 179, column: 3, scope: !8861)
!8885 = !DILocation(line: 195, column: 1, scope: !8861)
!8886 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !8749, file: !8749, line: 410, type: !8812, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8887)
!8887 = !{!8888}
!8888 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8886, file: !8749, line: 410, type: !1220)
!8889 = !DILocation(line: 0, scope: !8886)
!8890 = !DILocation(line: 412, column: 3, scope: !8886)
!8891 = !DILocation(line: 413, column: 1, scope: !8886)
!8892 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !636, file: !636, line: 216, type: !1253, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8893)
!8893 = !{!8894, !8895, !8896, !8897}
!8894 = !DILocalVariable(name: "dev", arg: 1, scope: !8892, file: !636, line: 216, type: !1179)
!8895 = !DILocalVariable(name: "sys", arg: 2, scope: !8892, file: !636, line: 217, type: !731)
!8896 = !DILocalVariable(name: "rate", arg: 3, scope: !8892, file: !636, line: 218, type: !687)
!8897 = !DILocalVariable(name: "api", scope: !8892, file: !636, line: 220, type: !1231)
!8898 = !DILocation(line: 0, scope: !8892)
!8899 = !DILocation(line: 221, column: 49, scope: !8892)
!8900 = !DILocation(line: 223, column: 11, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8892, file: !636, line: 223, column: 6)
!8902 = !DILocation(line: 223, column: 20, scope: !8901)
!8903 = !DILocation(line: 223, column: 6, scope: !8892)
!8904 = !DILocation(line: 227, column: 9, scope: !8892)
!8905 = !DILocation(line: 227, column: 2, scope: !8892)
!8906 = !DILocation(line: 228, column: 1, scope: !8892)
!8907 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !8749, file: !8749, line: 615, type: !8908, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8910)
!8908 = !DISubroutineType(types: !8909)
!8909 = !{null, !1220, !121}
!8910 = !{!8911, !8912}
!8911 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8907, file: !8749, line: 615, type: !1220)
!8912 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !8907, file: !8749, line: 615, type: !121)
!8913 = !DILocation(line: 0, scope: !8907)
!8914 = !DILocation(line: 617, column: 3, scope: !8907)
!8915 = !DILocation(line: 618, column: 1, scope: !8907)
!8916 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !8749, file: !8749, line: 1020, type: !8917, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8919)
!8917 = !DISubroutineType(types: !8918)
!8918 = !{null, !1220, !121, !121, !121}
!8919 = !{!8920, !8921, !8922, !8923}
!8920 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8916, file: !8749, line: 1020, type: !1220)
!8921 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !8916, file: !8749, line: 1020, type: !121)
!8922 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !8916, file: !8749, line: 1020, type: !121)
!8923 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !8916, file: !8749, line: 1021, type: !121)
!8924 = !DILocation(line: 0, scope: !8916)
!8925 = !DILocation(line: 1029, column: 30, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8927, file: !8749, line: 1028, column: 3)
!8927 = distinct !DILexicalBlock(scope: !8916, file: !8749, line: 1023, column: 7)
!8928 = !DILocation(line: 1029, column: 19, scope: !8926)
!8929 = !DILocation(line: 1029, column: 13, scope: !8926)
!8930 = !DILocation(line: 1029, column: 17, scope: !8926)
!8931 = !DILocation(line: 1031, column: 1, scope: !8916)
!8932 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !8749, file: !8749, line: 949, type: !8908, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8933)
!8933 = !{!8934, !8935}
!8934 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8932, file: !8749, line: 949, type: !1220)
!8935 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !8932, file: !8749, line: 949, type: !121)
!8936 = !DILocation(line: 0, scope: !8932)
!8937 = !DILocation(line: 951, column: 3, scope: !8932)
!8938 = !DILocation(line: 952, column: 1, scope: !8932)
!8939 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !8749, file: !8749, line: 588, type: !8908, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8940)
!8940 = !{!8941, !8942}
!8941 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8939, file: !8749, line: 588, type: !1220)
!8942 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8939, file: !8749, line: 588, type: !121)
!8943 = !DILocation(line: 0, scope: !8939)
!8944 = !DILocation(line: 590, column: 3, scope: !8939)
!8945 = !DILocation(line: 591, column: 1, scope: !8939)
!8946 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !8749, file: !8749, line: 805, type: !8908, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8947)
!8947 = !{!8948, !8949}
!8948 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8946, file: !8749, line: 805, type: !1220)
!8949 = !DILocalVariable(name: "StopBits", arg: 2, scope: !8946, file: !8749, line: 805, type: !121)
!8950 = !DILocation(line: 0, scope: !8946)
!8951 = !DILocation(line: 807, column: 3, scope: !8946)
!8952 = !DILocation(line: 808, column: 1, scope: !8946)
!8953 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !8749, file: !8749, line: 532, type: !8908, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8954)
!8954 = !{!8955, !8956}
!8955 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8953, file: !8749, line: 532, type: !1220)
!8956 = !DILocalVariable(name: "Parity", arg: 2, scope: !8953, file: !8749, line: 532, type: !121)
!8957 = !DILocation(line: 0, scope: !8953)
!8958 = !DILocation(line: 534, column: 3, scope: !8953)
!8959 = !DILocation(line: 535, column: 1, scope: !8953)
!8960 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !8749, file: !8749, line: 1770, type: !8750, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8961)
!8961 = !{!8962}
!8962 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8960, file: !8749, line: 1770, type: !1220)
!8963 = !DILocation(line: 0, scope: !8960)
!8964 = !DILocation(line: 1772, column: 11, scope: !8960)
!8965 = !DILocation(line: 1772, column: 46, scope: !8960)
!8966 = !DILocation(line: 1772, column: 3, scope: !8960)
!8967 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !8749, file: !8749, line: 1737, type: !8750, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8968)
!8968 = !{!8969}
!8969 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8967, file: !8749, line: 1737, type: !1220)
!8970 = !DILocation(line: 0, scope: !8967)
!8971 = !DILocation(line: 1739, column: 11, scope: !8967)
!8972 = !DILocation(line: 1739, column: 3, scope: !8967)
!8973 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !8749, file: !8749, line: 1748, type: !8750, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8974)
!8974 = !{!8975}
!8975 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8973, file: !8749, line: 1748, type: !1220)
!8976 = !DILocation(line: 0, scope: !8973)
!8977 = !DILocation(line: 1750, column: 11, scope: !8973)
!8978 = !DILocation(line: 1750, column: 45, scope: !8973)
!8979 = !DILocation(line: 1750, column: 3, scope: !8973)
!8980 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !8749, file: !8749, line: 1827, type: !8750, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8981)
!8981 = !{!8982}
!8982 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8980, file: !8749, line: 1827, type: !1220)
!8983 = !DILocation(line: 0, scope: !8980)
!8984 = !DILocation(line: 1829, column: 11, scope: !8980)
!8985 = !DILocation(line: 1829, column: 46, scope: !8980)
!8986 = !DILocation(line: 1829, column: 3, scope: !8980)
!8987 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !8749, file: !8749, line: 1992, type: !8812, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8988)
!8988 = !{!8989}
!8989 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8987, file: !8749, line: 1992, type: !1220)
!8990 = !DILocation(line: 0, scope: !8987)
!8991 = !DILocation(line: 1994, column: 3, scope: !8987)
!8992 = !DILocation(line: 1995, column: 1, scope: !8987)
!8993 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !8749, file: !8749, line: 1934, type: !8812, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !8994)
!8994 = !{!8995, !8996}
!8995 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8993, file: !8749, line: 1934, type: !1220)
!8996 = !DILocalVariable(name: "tmpreg", scope: !8993, file: !8749, line: 1936, type: !120)
!8997 = !DILocation(line: 0, scope: !8993)
!8998 = !DILocation(line: 1936, column: 3, scope: !8993)
!8999 = !DILocation(line: 1936, column: 17, scope: !8993)
!9000 = !DILocation(line: 1937, column: 20, scope: !8993)
!9001 = !DILocation(line: 1937, column: 10, scope: !8993)
!9002 = !DILocation(line: 1938, column: 10, scope: !8993)
!9003 = !DILocation(line: 1939, column: 20, scope: !8993)
!9004 = !DILocation(line: 1939, column: 10, scope: !8993)
!9005 = !DILocation(line: 1940, column: 10, scope: !8993)
!9006 = !DILocation(line: 1941, column: 1, scope: !8993)
!9007 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !8749, file: !8749, line: 1877, type: !8812, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9008)
!9008 = !{!9009, !9010}
!9009 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9007, file: !8749, line: 1877, type: !1220)
!9010 = !DILocalVariable(name: "tmpreg", scope: !9007, file: !8749, line: 1879, type: !120)
!9011 = !DILocation(line: 0, scope: !9007)
!9012 = !DILocation(line: 1879, column: 3, scope: !9007)
!9013 = !DILocation(line: 1879, column: 17, scope: !9007)
!9014 = !DILocation(line: 1880, column: 20, scope: !9007)
!9015 = !DILocation(line: 1880, column: 10, scope: !9007)
!9016 = !DILocation(line: 1881, column: 10, scope: !9007)
!9017 = !DILocation(line: 1882, column: 20, scope: !9007)
!9018 = !DILocation(line: 1882, column: 10, scope: !9007)
!9019 = !DILocation(line: 1883, column: 10, scope: !9007)
!9020 = !DILocation(line: 1884, column: 1, scope: !9007)
!9021 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !8749, file: !8749, line: 1896, type: !8812, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9022)
!9022 = !{!9023, !9024}
!9023 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9021, file: !8749, line: 1896, type: !1220)
!9024 = !DILocalVariable(name: "tmpreg", scope: !9021, file: !8749, line: 1898, type: !120)
!9025 = !DILocation(line: 0, scope: !9021)
!9026 = !DILocation(line: 1898, column: 3, scope: !9021)
!9027 = !DILocation(line: 1898, column: 17, scope: !9021)
!9028 = !DILocation(line: 1899, column: 20, scope: !9021)
!9029 = !DILocation(line: 1899, column: 10, scope: !9021)
!9030 = !DILocation(line: 1900, column: 10, scope: !9021)
!9031 = !DILocation(line: 1901, column: 20, scope: !9021)
!9032 = !DILocation(line: 1901, column: 10, scope: !9021)
!9033 = !DILocation(line: 1902, column: 10, scope: !9021)
!9034 = !DILocation(line: 1903, column: 1, scope: !9021)
!9035 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !8749, file: !8749, line: 1915, type: !8812, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9036)
!9036 = !{!9037, !9038}
!9037 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9035, file: !8749, line: 1915, type: !1220)
!9038 = !DILocalVariable(name: "tmpreg", scope: !9035, file: !8749, line: 1917, type: !120)
!9039 = !DILocation(line: 0, scope: !9035)
!9040 = !DILocation(line: 1917, column: 3, scope: !9035)
!9041 = !DILocation(line: 1917, column: 17, scope: !9035)
!9042 = !DILocation(line: 1918, column: 20, scope: !9035)
!9043 = !DILocation(line: 1918, column: 10, scope: !9035)
!9044 = !DILocation(line: 1919, column: 10, scope: !9035)
!9045 = !DILocation(line: 1920, column: 20, scope: !9035)
!9046 = !DILocation(line: 1920, column: 10, scope: !9035)
!9047 = !DILocation(line: 1921, column: 10, scope: !9035)
!9048 = !DILocation(line: 1922, column: 1, scope: !9035)
!9049 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !8749, file: !8749, line: 1814, type: !8750, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9050)
!9050 = !{!9051}
!9051 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9049, file: !8749, line: 1814, type: !1220)
!9052 = !DILocation(line: 0, scope: !9049)
!9053 = !DILocation(line: 1816, column: 11, scope: !9049)
!9054 = !DILocation(line: 1816, column: 46, scope: !9049)
!9055 = !DILocation(line: 1816, column: 3, scope: !9049)
!9056 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !8749, file: !8749, line: 2426, type: !9057, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9059)
!9057 = !DISubroutineType(types: !9058)
!9058 = !{null, !1220, !154}
!9059 = !{!9060, !9061}
!9060 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9056, file: !8749, line: 2426, type: !1220)
!9061 = !DILocalVariable(name: "Value", arg: 2, scope: !9056, file: !8749, line: 2426, type: !154)
!9062 = !DILocation(line: 0, scope: !9056)
!9063 = !DILocation(line: 2428, column: 16, scope: !9056)
!9064 = !DILocation(line: 2428, column: 11, scope: !9056)
!9065 = !DILocation(line: 2428, column: 14, scope: !9056)
!9066 = !DILocation(line: 2429, column: 1, scope: !9056)
!9067 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !8749, file: !8749, line: 1792, type: !8750, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9068)
!9068 = !{!9069}
!9069 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9067, file: !8749, line: 1792, type: !1220)
!9070 = !DILocation(line: 0, scope: !9067)
!9071 = !DILocation(line: 1794, column: 11, scope: !9067)
!9072 = !DILocation(line: 1794, column: 47, scope: !9067)
!9073 = !DILocation(line: 1794, column: 3, scope: !9067)
!9074 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !8749, file: !8749, line: 2403, type: !9075, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9077)
!9075 = !DISubroutineType(types: !9076)
!9076 = !{!154, !1220}
!9077 = !{!9078}
!9078 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9074, file: !8749, line: 2403, type: !1220)
!9079 = !DILocation(line: 0, scope: !9074)
!9080 = !DILocation(line: 2405, column: 20, scope: !9074)
!9081 = !DILocation(line: 2405, column: 10, scope: !9074)
!9082 = !DILocation(line: 2405, column: 3, scope: !9074)
!9083 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1276, file: !1276, line: 1583, type: !1200, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9084)
!9084 = !{!9085, !9086, !9087, !9088, !9089, !9090}
!9085 = !DILocalVariable(name: "dev", arg: 1, scope: !9083, file: !1276, line: 1583, type: !1179)
!9086 = !DILocalVariable(name: "config", scope: !9083, file: !1276, line: 1585, type: !8440)
!9087 = !DILocalVariable(name: "data", scope: !9083, file: !1276, line: 1586, type: !8563)
!9088 = !DILocalVariable(name: "ll_parity", scope: !9083, file: !1276, line: 1587, type: !121)
!9089 = !DILocalVariable(name: "ll_datawidth", scope: !9083, file: !1276, line: 1588, type: !121)
!9090 = !DILocalVariable(name: "err", scope: !9083, file: !1276, line: 1589, type: !103)
!9091 = !DILocation(line: 0, scope: !9083)
!9092 = !DILocation(line: 1585, column: 48, scope: !9083)
!9093 = !DILocation(line: 1586, column: 38, scope: !9083)
!9094 = !DILocation(line: 1591, column: 2, scope: !9083)
!9095 = !DILocation(line: 1593, column: 29, scope: !9096)
!9096 = distinct !DILexicalBlock(scope: !9083, file: !1276, line: 1593, column: 6)
!9097 = !DILocation(line: 1593, column: 7, scope: !9096)
!9098 = !DILocation(line: 1593, column: 6, scope: !9083)
!9099 = !DILocation(line: 1599, column: 31, scope: !9083)
!9100 = !DILocation(line: 1599, column: 71, scope: !9083)
!9101 = !DILocation(line: 1599, column: 8, scope: !9083)
!9102 = !DILocation(line: 1600, column: 10, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9083, file: !1276, line: 1600, column: 6)
!9104 = !DILocation(line: 1600, column: 6, scope: !9083)
!9105 = !DILocation(line: 1616, column: 36, scope: !9083)
!9106 = !DILocation(line: 1616, column: 8, scope: !9083)
!9107 = !DILocation(line: 1617, column: 10, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9083, file: !1276, line: 1617, column: 6)
!9109 = !DILocation(line: 1617, column: 6, scope: !9083)
!9110 = !DILocation(line: 1621, column: 27, scope: !9083)
!9111 = !DILocation(line: 1621, column: 2, scope: !9083)
!9112 = !DILocation(line: 1624, column: 40, scope: !9083)
!9113 = !DILocation(line: 1624, column: 2, scope: !9083)
!9114 = !DILocation(line: 1630, column: 14, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9083, file: !1276, line: 1630, column: 6)
!9116 = !DILocation(line: 1630, column: 6, scope: !9083)
!9117 = !DILocation(line: 1638, column: 2, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9119, file: !1276, line: 1634, column: 34)
!9119 = distinct !DILexicalBlock(scope: !9115, file: !1276, line: 1634, column: 13)
!9120 = !DILocation(line: 0, scope: !9115)
!9121 = !DILocation(line: 1649, column: 35, scope: !9083)
!9122 = !DILocation(line: 1649, column: 2, scope: !9083)
!9123 = !DILocation(line: 1654, column: 14, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9083, file: !1276, line: 1654, column: 6)
!9125 = !DILocation(line: 1654, column: 6, scope: !9083)
!9126 = !DILocation(line: 1655, column: 3, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9124, file: !1276, line: 1654, column: 31)
!9128 = !DILocation(line: 1656, column: 2, scope: !9127)
!9129 = !DILocation(line: 1659, column: 37, scope: !9083)
!9130 = !DILocation(line: 1659, column: 2, scope: !9083)
!9131 = !DILocation(line: 1662, column: 14, scope: !9132)
!9132 = distinct !DILexicalBlock(scope: !9083, file: !1276, line: 1662, column: 6)
!9133 = !DILocation(line: 1662, column: 6, scope: !9083)
!9134 = !DILocation(line: 1663, column: 37, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9132, file: !1276, line: 1662, column: 27)
!9136 = !DILocation(line: 1663, column: 3, scope: !9135)
!9137 = !DILocation(line: 1664, column: 2, scope: !9135)
!9138 = !DILocation(line: 1684, column: 26, scope: !9083)
!9139 = !DILocation(line: 1684, column: 2, scope: !9083)
!9140 = !DILocation(line: 1722, column: 2, scope: !9083)
!9141 = !DILocation(line: 1724, column: 1, scope: !9083)
!9142 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1276, file: !1276, line: 651, type: !9143, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9145)
!9143 = !DISubroutineType(types: !9144)
!9144 = !{null, !1179}
!9145 = !{!9146, !9147, !9148}
!9146 = !DILocalVariable(name: "dev", arg: 1, scope: !9142, file: !1276, line: 651, type: !1179)
!9147 = !DILocalVariable(name: "data", scope: !9142, file: !1276, line: 653, type: !8563)
!9148 = !DILocalVariable(name: "clk", scope: !9142, file: !1276, line: 654, type: !9149)
!9149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1179)
!9150 = !DILocation(line: 0, scope: !9142)
!9151 = !DILocation(line: 653, column: 38, scope: !9142)
!9152 = !DILocation(line: 656, column: 8, scope: !9142)
!9153 = !DILocation(line: 656, column: 14, scope: !9142)
!9154 = !DILocation(line: 657, column: 1, scope: !9142)
!9155 = distinct !DISubprogram(name: "device_is_ready", scope: !7578, file: !7578, line: 47, type: !9156, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9158)
!9156 = !DISubroutineType(types: !9157)
!9157 = !{!157, !1179}
!9158 = !{!9159}
!9159 = !DILocalVariable(name: "dev", arg: 1, scope: !9155, file: !7578, line: 47, type: !1179)
!9160 = !DILocation(line: 0, scope: !9155)
!9161 = !DILocation(line: 55, column: 2, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9155, file: !7578, line: 55, column: 2)
!9163 = !{i64 2154348519}
!9164 = !DILocation(line: 56, column: 9, scope: !9155)
!9165 = !DILocation(line: 56, column: 2, scope: !9155)
!9166 = distinct !DISubprogram(name: "clock_control_on", scope: !636, file: !636, line: 123, type: !1238, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9167)
!9167 = !{!9168, !9169, !9170}
!9168 = !DILocalVariable(name: "dev", arg: 1, scope: !9166, file: !636, line: 123, type: !1179)
!9169 = !DILocalVariable(name: "sys", arg: 2, scope: !9166, file: !636, line: 124, type: !731)
!9170 = !DILocalVariable(name: "api", scope: !9166, file: !636, line: 126, type: !1231)
!9171 = !DILocation(line: 0, scope: !9166)
!9172 = !DILocation(line: 127, column: 49, scope: !9166)
!9173 = !DILocation(line: 129, column: 14, scope: !9166)
!9174 = !DILocation(line: 129, column: 9, scope: !9166)
!9175 = !DILocation(line: 129, column: 2, scope: !9166)
!9176 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1303, file: !1303, line: 342, type: !9177, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9179)
!9177 = !DISubroutineType(types: !9178)
!9178 = !{!103, !1351, !154}
!9179 = !{!9180, !9181, !9182, !9183}
!9180 = !DILocalVariable(name: "config", arg: 1, scope: !9176, file: !1303, line: 342, type: !1351)
!9181 = !DILocalVariable(name: "id", arg: 2, scope: !9176, file: !1303, line: 343, type: !154)
!9182 = !DILocalVariable(name: "ret", scope: !9176, file: !1303, line: 345, type: !103)
!9183 = !DILocalVariable(name: "state", scope: !9176, file: !1303, line: 346, type: !1306)
!9184 = !DILocation(line: 0, scope: !9176)
!9185 = !DILocation(line: 346, column: 2, scope: !9176)
!9186 = !DILocation(line: 348, column: 8, scope: !9176)
!9187 = !DILocation(line: 349, column: 10, scope: !9188)
!9188 = distinct !DILexicalBlock(scope: !9176, file: !1303, line: 349, column: 6)
!9189 = !DILocation(line: 349, column: 6, scope: !9176)
!9190 = !DILocation(line: 353, column: 44, scope: !9176)
!9191 = !DILocation(line: 353, column: 9, scope: !9176)
!9192 = !DILocation(line: 353, column: 2, scope: !9176)
!9193 = !DILocation(line: 354, column: 1, scope: !9176)
!9194 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !8749, file: !8749, line: 497, type: !8908, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9195)
!9195 = !{!9196, !9197, !9198}
!9196 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9194, file: !8749, line: 497, type: !1220)
!9197 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !9194, file: !8749, line: 497, type: !121)
!9198 = !DILocalVariable(name: "val", scope: !9199, file: !8749, line: 499, type: !121)
!9199 = distinct !DILexicalBlock(scope: !9194, file: !8749, line: 499, column: 3)
!9200 = !DILocation(line: 0, scope: !9194)
!9201 = !DILocation(line: 499, column: 3, scope: !9199)
!9202 = !DILocalVariable(name: "addr", arg: 1, scope: !9203, file: !5383, line: 476, type: !1272)
!9203 = distinct !DISubprogram(name: "__LDREXW", scope: !5383, file: !5383, line: 476, type: !9204, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9206)
!9204 = !DISubroutineType(types: !9205)
!9205 = !{!121, !1272}
!9206 = !{!9202, !9207}
!9207 = !DILocalVariable(name: "result", scope: !9203, file: !5383, line: 478, type: !121)
!9208 = !DILocation(line: 0, scope: !9203, inlinedAt: !9209)
!9209 = distinct !DILocation(line: 499, column: 3, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9199, file: !8749, line: 499, column: 3)
!9211 = !DILocation(line: 480, column: 4, scope: !9203, inlinedAt: !9209)
!9212 = !{i64 2859368}
!9213 = !DILocation(line: 499, column: 3, scope: !9210)
!9214 = !DILocation(line: 0, scope: !9199)
!9215 = !DILocalVariable(name: "value", arg: 1, scope: !9216, file: !5383, line: 527, type: !121)
!9216 = distinct !DISubprogram(name: "__STREXW", scope: !5383, file: !5383, line: 527, type: !9217, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9219)
!9217 = !DISubroutineType(types: !9218)
!9218 = !{!121, !121, !1272}
!9219 = !{!9215, !9220, !9221}
!9220 = !DILocalVariable(name: "addr", arg: 2, scope: !9216, file: !5383, line: 527, type: !1272)
!9221 = !DILocalVariable(name: "result", scope: !9216, file: !5383, line: 529, type: !121)
!9222 = !DILocation(line: 0, scope: !9216, inlinedAt: !9223)
!9223 = distinct !DILocation(line: 499, column: 3, scope: !9199)
!9224 = !DILocation(line: 531, column: 4, scope: !9216, inlinedAt: !9223)
!9225 = !{i64 2860804}
!9226 = distinct !{!9226, !9201, !9201}
!9227 = !DILocation(line: 500, column: 1, scope: !9194)
!9228 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !8749, file: !8749, line: 850, type: !8917, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9229)
!9229 = !{!9230, !9231, !9232, !9233}
!9230 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9228, file: !8749, line: 850, type: !1220)
!9231 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !9228, file: !8749, line: 850, type: !121)
!9232 = !DILocalVariable(name: "Parity", arg: 3, scope: !9228, file: !8749, line: 850, type: !121)
!9233 = !DILocalVariable(name: "StopBits", arg: 4, scope: !9228, file: !8749, line: 851, type: !121)
!9234 = !DILocation(line: 0, scope: !9228)
!9235 = !DILocation(line: 853, column: 3, scope: !9228)
!9236 = !DILocation(line: 854, column: 3, scope: !9228)
!9237 = !DILocation(line: 855, column: 1, scope: !9228)
!9238 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !8749, file: !8749, line: 1337, type: !8812, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9239)
!9239 = !{!9240}
!9240 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9238, file: !8749, line: 1337, type: !1220)
!9241 = !DILocation(line: 0, scope: !9238)
!9242 = !DILocation(line: 1339, column: 3, scope: !9238)
!9243 = !DILocation(line: 1340, column: 1, scope: !9238)
!9244 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1303, file: !1303, line: 316, type: !9245, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9247)
!9245 = !DISubroutineType(types: !9246)
!9246 = !{!103, !1351, !1306}
!9247 = !{!9248, !9249, !9250}
!9248 = !DILocalVariable(name: "config", arg: 1, scope: !9244, file: !1303, line: 317, type: !1351)
!9249 = !DILocalVariable(name: "state", arg: 2, scope: !9244, file: !1303, line: 318, type: !1306)
!9250 = !DILocalVariable(name: "reg", scope: !9244, file: !1303, line: 320, type: !22)
!9251 = !DILocation(line: 0, scope: !9244)
!9252 = !DILocation(line: 329, column: 39, scope: !9244)
!9253 = !DILocation(line: 329, column: 52, scope: !9244)
!9254 = !DILocation(line: 329, column: 9, scope: !9244)
!9255 = !DILocation(line: 329, column: 2, scope: !9244)
!9256 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !9156, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1135, retainedNodes: !9257)
!9257 = !{!9258}
!9258 = !DILocalVariable(name: "dev", arg: 1, scope: !9256, file: !141, line: 730, type: !1179)
!9259 = !DILocation(line: 0, scope: !9256)
!9260 = !DILocation(line: 732, column: 9, scope: !9256)
!9261 = !DILocation(line: 732, column: 2, scope: !9256)
!9262 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1432, file: !1432, line: 270, type: !1438, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9263)
!9263 = !{!9264}
!9264 = !DILocalVariable(name: "dev", arg: 1, scope: !9262, file: !1432, line: 270, type: !1440)
!9265 = !DILocation(line: 0, scope: !9262)
!9266 = !DILocation(line: 274, column: 2, scope: !9262)
!9267 = !DILocation(line: 275, column: 12, scope: !9262)
!9268 = !DILocation(line: 276, column: 15, scope: !9262)
!9269 = !DILocation(line: 277, column: 16, scope: !9262)
!9270 = !DILocation(line: 278, column: 15, scope: !9262)
!9271 = !DILocation(line: 279, column: 16, scope: !9262)
!9272 = !DILocation(line: 282, column: 2, scope: !9262)
!9273 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !5417, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9274)
!9274 = !{!9275, !9276}
!9275 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9273, file: !356, line: 1814, type: !592)
!9276 = !DILocalVariable(name: "priority", arg: 2, scope: !9273, file: !356, line: 1814, type: !121)
!9277 = !DILocation(line: 0, scope: !9273)
!9278 = !DILocation(line: 1822, column: 46, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9280, file: !356, line: 1821, column: 3)
!9280 = distinct !DILexicalBlock(scope: !9273, file: !356, line: 1816, column: 7)
!9281 = !DILocation(line: 1824, column: 1, scope: !9273)
!9282 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1432, file: !1432, line: 118, type: !5320, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9283)
!9283 = !{!9284, !9285}
!9284 = !DILocalVariable(name: "arg", arg: 1, scope: !9282, file: !1432, line: 118, type: !102)
!9285 = !DILocalVariable(name: "dticks", scope: !9282, file: !1432, line: 121, type: !121)
!9286 = !DILocation(line: 0, scope: !9282)
!9287 = !DILocation(line: 124, column: 2, scope: !9282)
!9288 = !DILocation(line: 129, column: 17, scope: !9282)
!9289 = !DILocation(line: 129, column: 14, scope: !9282)
!9290 = !DILocation(line: 130, column: 15, scope: !9282)
!9291 = !DILocation(line: 145, column: 27, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9293, file: !1432, line: 132, column: 16)
!9293 = distinct !DILexicalBlock(scope: !9282, file: !1432, line: 132, column: 6)
!9294 = !DILocation(line: 145, column: 25, scope: !9292)
!9295 = !DILocation(line: 145, column: 45, scope: !9292)
!9296 = !DILocation(line: 146, column: 30, scope: !9292)
!9297 = !DILocation(line: 146, column: 20, scope: !9292)
!9298 = !DILocation(line: 147, column: 3, scope: !9292)
!9299 = !DILocation(line: 151, column: 2, scope: !9282)
!9300 = !DILocation(line: 152, column: 1, scope: !9282)
!9301 = distinct !DISubprogram(name: "elapsed", scope: !1432, file: !1432, line: 85, type: !5464, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9302)
!9302 = !{!9303, !9304, !9305}
!9303 = !DILocalVariable(name: "val1", scope: !9301, file: !1432, line: 87, type: !121)
!9304 = !DILocalVariable(name: "ctrl", scope: !9301, file: !1432, line: 88, type: !121)
!9305 = !DILocalVariable(name: "val2", scope: !9301, file: !1432, line: 89, type: !121)
!9306 = !DILocation(line: 87, column: 27, scope: !9301)
!9307 = !DILocation(line: 0, scope: !9301)
!9308 = !DILocation(line: 88, column: 27, scope: !9301)
!9309 = !DILocation(line: 89, column: 27, scope: !9301)
!9310 = !DILocation(line: 105, column: 12, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9301, file: !1432, line: 105, column: 6)
!9312 = !DILocation(line: 106, column: 6, scope: !9311)
!9313 = !DILocation(line: 107, column: 16, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9311, file: !1432, line: 106, column: 24)
!9315 = !DILocation(line: 111, column: 18, scope: !9314)
!9316 = !DILocation(line: 112, column: 2, scope: !9314)
!9317 = !DILocation(line: 114, column: 20, scope: !9301)
!9318 = !DILocation(line: 114, column: 30, scope: !9301)
!9319 = !DILocation(line: 114, column: 28, scope: !9301)
!9320 = !DILocation(line: 114, column: 2, scope: !9301)
!9321 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1432, file: !1432, line: 154, type: !9322, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9324)
!9322 = !DISubroutineType(types: !9323)
!9323 = !{null, !566, !157}
!9324 = !{!9325, !9326, !9327, !9328, !9329, !9330, !9331, !9336, !9337}
!9325 = !DILocalVariable(name: "ticks", arg: 1, scope: !9321, file: !1432, line: 154, type: !566)
!9326 = !DILocalVariable(name: "idle", arg: 2, scope: !9321, file: !1432, line: 154, type: !157)
!9327 = !DILocalVariable(name: "delay", scope: !9321, file: !1432, line: 169, type: !121)
!9328 = !DILocalVariable(name: "val1", scope: !9321, file: !1432, line: 170, type: !121)
!9329 = !DILocalVariable(name: "val2", scope: !9321, file: !1432, line: 170, type: !121)
!9330 = !DILocalVariable(name: "last_load_", scope: !9321, file: !1432, line: 171, type: !121)
!9331 = !DILocalVariable(name: "key", scope: !9321, file: !1432, line: 176, type: !9332)
!9332 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !9333)
!9333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !9334)
!9334 = !{!9335}
!9335 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9333, file: !321, line: 33, baseType: !103, size: 32)
!9336 = !DILocalVariable(name: "pending", scope: !9321, file: !1432, line: 178, type: !121)
!9337 = !DILocalVariable(name: "unannounced", scope: !9321, file: !1432, line: 185, type: !121)
!9338 = !DILocation(line: 0, scope: !9321)
!9339 = !DILocation(line: 162, column: 49, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9321, file: !1432, line: 162, column: 6)
!9341 = !DILocation(line: 163, column: 17, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9340, file: !1432, line: 162, column: 78)
!9343 = !DILocation(line: 164, column: 13, scope: !9342)
!9344 = !DILocation(line: 165, column: 3, scope: !9342)
!9345 = !DILocation(line: 171, column: 24, scope: !9321)
!9346 = !DILocation(line: 173, column: 10, scope: !9321)
!9347 = !DILocation(line: 174, column: 10, scope: !9321)
!9348 = !DILocalVariable(name: "l", arg: 1, scope: !9349, file: !321, line: 136, type: !9352)
!9349 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !9350, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9353)
!9350 = !DISubroutineType(types: !9351)
!9351 = !{!9332, !9352}
!9352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 32)
!9353 = !{!9348, !9354}
!9354 = !DILocalVariable(name: "k", scope: !9349, file: !321, line: 139, type: !9332)
!9355 = !DILocation(line: 0, scope: !9349, inlinedAt: !9356)
!9356 = distinct !DILocation(line: 176, column: 25, scope: !9321)
!9357 = !DILocation(line: 55, column: 2, scope: !9358, inlinedAt: !9362)
!9358 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5209, file: !5209, line: 42, type: !5210, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9359)
!9359 = !{!9360, !9361}
!9360 = !DILocalVariable(name: "key", scope: !9358, file: !5209, line: 44, type: !32)
!9361 = !DILocalVariable(name: "tmp", scope: !9358, file: !5209, line: 53, type: !32)
!9362 = distinct !DILocation(line: 145, column: 10, scope: !9349, inlinedAt: !9356)
!9363 = !{i64 1921160}
!9364 = !DILocation(line: 0, scope: !9358, inlinedAt: !9362)
!9365 = !DILocation(line: 178, column: 21, scope: !9321)
!9366 = !DILocation(line: 180, column: 18, scope: !9321)
!9367 = !DILocation(line: 182, column: 14, scope: !9321)
!9368 = !DILocation(line: 183, column: 15, scope: !9321)
!9369 = !DILocation(line: 185, column: 39, scope: !9321)
!9370 = !DILocation(line: 185, column: 37, scope: !9321)
!9371 = !DILocation(line: 187, column: 27, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9321, file: !1432, line: 187, column: 6)
!9373 = !DILocation(line: 187, column: 6, scope: !9321)
!9374 = !DILocation(line: 202, column: 27, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9372, file: !1432, line: 195, column: 9)
!9376 = !DILocation(line: 202, column: 48, scope: !9375)
!9377 = !DILocation(line: 203, column: 9, scope: !9375)
!9378 = !DILocation(line: 204, column: 11, scope: !9375)
!9379 = !DILocation(line: 205, column: 13, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9375, file: !1432, line: 205, column: 7)
!9381 = !DILocation(line: 205, column: 7, scope: !9375)
!9382 = !DILocation(line: 0, scope: !9372)
!9383 = !DILocation(line: 212, column: 18, scope: !9321)
!9384 = !DILocation(line: 214, column: 28, scope: !9321)
!9385 = !DILocation(line: 214, column: 16, scope: !9321)
!9386 = !DILocation(line: 215, column: 15, scope: !9321)
!9387 = !DILocation(line: 227, column: 11, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9321, file: !1432, line: 227, column: 6)
!9389 = !DILocation(line: 227, column: 6, scope: !9321)
!9390 = !DILocation(line: 228, column: 15, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9388, file: !1432, line: 227, column: 19)
!9392 = !DILocation(line: 228, column: 38, scope: !9391)
!9393 = !DILocation(line: 228, column: 24, scope: !9391)
!9394 = !DILocation(line: 229, column: 2, scope: !9391)
!9395 = !DILocation(line: 230, column: 24, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9388, file: !1432, line: 229, column: 9)
!9397 = !DILocation(line: 230, column: 15, scope: !9396)
!9398 = !DILocation(line: 0, scope: !9388)
!9399 = !DILocalVariable(name: "key", arg: 2, scope: !9400, file: !321, line: 190, type: !9332)
!9400 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !9401, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9403)
!9401 = !DISubroutineType(types: !9402)
!9402 = !{null, !9352, !9332}
!9403 = !{!9404, !9399}
!9404 = !DILocalVariable(name: "l", arg: 1, scope: !9400, file: !321, line: 189, type: !9352)
!9405 = !DILocation(line: 0, scope: !9400, inlinedAt: !9406)
!9406 = distinct !DILocation(line: 232, column: 2, scope: !9321)
!9407 = !DILocalVariable(name: "key", arg: 1, scope: !9408, file: !5209, line: 84, type: !32)
!9408 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5209, file: !5209, line: 84, type: !5220, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9409)
!9409 = !{!9407}
!9410 = !DILocation(line: 0, scope: !9408, inlinedAt: !9411)
!9411 = distinct !DILocation(line: 215, column: 2, scope: !9400, inlinedAt: !9406)
!9412 = !DILocation(line: 95, column: 2, scope: !9408, inlinedAt: !9411)
!9413 = !{i64 1921977}
!9414 = !DILocation(line: 234, column: 1, scope: !9321)
!9415 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1432, file: !1432, line: 236, type: !5464, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9416)
!9416 = !{!9417, !9418}
!9417 = !DILocalVariable(name: "key", scope: !9415, file: !1432, line: 242, type: !9332)
!9418 = !DILocalVariable(name: "cyc", scope: !9415, file: !1432, line: 243, type: !121)
!9419 = !DILocation(line: 0, scope: !9349, inlinedAt: !9420)
!9420 = distinct !DILocation(line: 242, column: 25, scope: !9415)
!9421 = !DILocation(line: 55, column: 2, scope: !9358, inlinedAt: !9422)
!9422 = distinct !DILocation(line: 145, column: 10, scope: !9349, inlinedAt: !9420)
!9423 = !DILocation(line: 0, scope: !9358, inlinedAt: !9422)
!9424 = !DILocation(line: 0, scope: !9415)
!9425 = !DILocation(line: 243, column: 17, scope: !9415)
!9426 = !DILocation(line: 243, column: 29, scope: !9415)
!9427 = !DILocation(line: 243, column: 27, scope: !9415)
!9428 = !DILocation(line: 243, column: 43, scope: !9415)
!9429 = !DILocation(line: 243, column: 41, scope: !9415)
!9430 = !DILocation(line: 0, scope: !9400, inlinedAt: !9431)
!9431 = distinct !DILocation(line: 245, column: 2, scope: !9415)
!9432 = !DILocation(line: 0, scope: !9408, inlinedAt: !9433)
!9433 = distinct !DILocation(line: 215, column: 2, scope: !9400, inlinedAt: !9431)
!9434 = !DILocation(line: 95, column: 2, scope: !9408, inlinedAt: !9433)
!9435 = !DILocation(line: 246, column: 13, scope: !9415)
!9436 = !DILocation(line: 246, column: 2, scope: !9415)
!9437 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1432, file: !1432, line: 249, type: !5464, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9438)
!9438 = !{!9439, !9440}
!9439 = !DILocalVariable(name: "key", scope: !9437, file: !1432, line: 251, type: !9332)
!9440 = !DILocalVariable(name: "ret", scope: !9437, file: !1432, line: 252, type: !121)
!9441 = !DILocation(line: 0, scope: !9349, inlinedAt: !9442)
!9442 = distinct !DILocation(line: 251, column: 25, scope: !9437)
!9443 = !DILocation(line: 55, column: 2, scope: !9358, inlinedAt: !9444)
!9444 = distinct !DILocation(line: 145, column: 10, scope: !9349, inlinedAt: !9442)
!9445 = !DILocation(line: 0, scope: !9358, inlinedAt: !9444)
!9446 = !DILocation(line: 0, scope: !9437)
!9447 = !DILocation(line: 252, column: 17, scope: !9437)
!9448 = !DILocation(line: 252, column: 29, scope: !9437)
!9449 = !DILocation(line: 252, column: 27, scope: !9437)
!9450 = !DILocation(line: 0, scope: !9400, inlinedAt: !9451)
!9451 = distinct !DILocation(line: 254, column: 2, scope: !9437)
!9452 = !DILocation(line: 0, scope: !9408, inlinedAt: !9453)
!9453 = distinct !DILocation(line: 215, column: 2, scope: !9400, inlinedAt: !9451)
!9454 = !DILocation(line: 95, column: 2, scope: !9408, inlinedAt: !9453)
!9455 = !DILocation(line: 255, column: 2, scope: !9437)
!9456 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1432, file: !1432, line: 258, type: !2913, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !322)
!9457 = !DILocation(line: 260, column: 6, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9456, file: !1432, line: 260, column: 6)
!9459 = !DILocation(line: 260, column: 16, scope: !9458)
!9460 = !DILocation(line: 260, column: 6, scope: !9456)
!9461 = !DILocation(line: 261, column: 17, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9458, file: !1432, line: 260, column: 34)
!9463 = !DILocation(line: 262, column: 2, scope: !9462)
!9464 = !DILocation(line: 263, column: 1, scope: !9456)
!9465 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1432, file: !1432, line: 265, type: !2913, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !322)
!9466 = !DILocation(line: 267, column: 16, scope: !9465)
!9467 = !DILocation(line: 268, column: 1, scope: !9465)
!9468 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !9469, file: !9469, line: 9, type: !9470, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !9493)
!9469 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9470 = !DISubroutineType(types: !9471)
!9471 = !{!103, !9472, !154, !9492}
!9472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9473, size: 32)
!9473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9474)
!9474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1303, line: 60, size: 64, elements: !9475)
!9475 = !{!9476, !9491}
!9476 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !9474, file: !1303, line: 69, baseType: !9477, size: 32)
!9477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9478, size: 32)
!9478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9479)
!9479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1303, line: 50, size: 64, elements: !9480)
!9480 = !{!9481, !9489, !9490}
!9481 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !9479, file: !1303, line: 52, baseType: !9482, size: 32)
!9482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9483, size: 32)
!9483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9484)
!9484 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1314, line: 37, baseType: !9485)
!9485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1314, line: 32, size: 64, elements: !9486)
!9486 = !{!9487, !9488}
!9487 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9485, file: !1314, line: 34, baseType: !121, size: 32)
!9488 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !9485, file: !1314, line: 36, baseType: !121, size: 32, offset: 32)
!9489 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !9479, file: !1303, line: 54, baseType: !154, size: 8, offset: 32)
!9490 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9479, file: !1303, line: 56, baseType: !154, size: 8, offset: 40)
!9491 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !9474, file: !1303, line: 71, baseType: !154, size: 8, offset: 32)
!9492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9477, size: 32)
!9493 = !{!9494, !9495, !9496}
!9494 = !DILocalVariable(name: "config", arg: 1, scope: !9468, file: !9469, line: 9, type: !9472)
!9495 = !DILocalVariable(name: "id", arg: 2, scope: !9468, file: !9469, line: 9, type: !154)
!9496 = !DILocalVariable(name: "state", arg: 3, scope: !9468, file: !9469, line: 10, type: !9492)
!9497 = !DILocation(line: 0, scope: !9468)
!9498 = !DILocation(line: 12, column: 20, scope: !9468)
!9499 = !DILocation(line: 13, column: 27, scope: !9468)
!9500 = !DILocation(line: 13, column: 42, scope: !9468)
!9501 = !DILocation(line: 13, column: 19, scope: !9468)
!9502 = !DILocation(line: 13, column: 16, scope: !9468)
!9503 = !DILocation(line: 13, column: 2, scope: !9468)
!9504 = distinct !{!9504, !9503, !9505}
!9505 = !DILocation(line: 19, column: 2, scope: !9468)
!9506 = !DILocation(line: 14, column: 23, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9508, file: !9469, line: 14, column: 7)
!9508 = distinct !DILexicalBlock(scope: !9468, file: !9469, line: 13, column: 54)
!9509 = !DILocation(line: 14, column: 10, scope: !9507)
!9510 = !DILocation(line: 18, column: 11, scope: !9508)
!9511 = !DILocation(line: 14, column: 7, scope: !9508)
!9512 = !DILocation(line: 22, column: 1, scope: !9468)
!9513 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1549, file: !1549, line: 193, type: !9514, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1467, retainedNodes: !9523)
!9514 = !DISubroutineType(types: !9515)
!9515 = !{!103, !9516, !154, !22}
!9516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9517, size: 32)
!9517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9518)
!9518 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1314, line: 37, baseType: !9519)
!9519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1314, line: 32, size: 64, elements: !9520)
!9520 = !{!9521, !9522}
!9521 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9519, file: !1314, line: 34, baseType: !121, size: 32)
!9522 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !9519, file: !1314, line: 36, baseType: !121, size: 32, offset: 32)
!9523 = !{!9524, !9525, !9526, !9527, !9528, !9529, !9530, !9531, !9533}
!9524 = !DILocalVariable(name: "pins", arg: 1, scope: !9513, file: !1549, line: 193, type: !9516)
!9525 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !9513, file: !1549, line: 193, type: !154)
!9526 = !DILocalVariable(name: "reg", arg: 3, scope: !9513, file: !1549, line: 194, type: !22)
!9527 = !DILocalVariable(name: "pin", scope: !9513, file: !1549, line: 196, type: !121)
!9528 = !DILocalVariable(name: "mux", scope: !9513, file: !1549, line: 196, type: !121)
!9529 = !DILocalVariable(name: "pin_cgf", scope: !9513, file: !1549, line: 197, type: !121)
!9530 = !DILocalVariable(name: "ret", scope: !9513, file: !1549, line: 198, type: !103)
!9531 = !DILocalVariable(name: "i", scope: !9532, file: !1549, line: 209, type: !154)
!9532 = distinct !DILexicalBlock(scope: !9513, file: !1549, line: 209, column: 2)
!9533 = !DILocalVariable(name: "gpio_out", scope: !9534, file: !1549, line: 239, type: !121)
!9534 = distinct !DILexicalBlock(scope: !9535, file: !1549, line: 238, column: 55)
!9535 = distinct !DILexicalBlock(scope: !9536, file: !1549, line: 238, column: 14)
!9536 = distinct !DILexicalBlock(scope: !9537, file: !1549, line: 236, column: 14)
!9537 = distinct !DILexicalBlock(scope: !9538, file: !1549, line: 234, column: 7)
!9538 = distinct !DILexicalBlock(scope: !9539, file: !1549, line: 209, column: 41)
!9539 = distinct !DILexicalBlock(scope: !9532, file: !1549, line: 209, column: 2)
!9540 = !DILocation(line: 0, scope: !9513)
!9541 = !DILocation(line: 0, scope: !9532)
!9542 = !DILocation(line: 209, column: 25, scope: !9539)
!9543 = !DILocation(line: 209, column: 2, scope: !9532)
!9544 = distinct !{!9544, !9543, !9545}
!9545 = !DILocation(line: 259, column: 2, scope: !9532)
!9546 = !DILocation(line: 210, column: 17, scope: !9538)
!9547 = !DILocation(line: 234, column: 7, scope: !9537)
!9548 = !DILocation(line: 234, column: 33, scope: !9537)
!9549 = !DILocation(line: 234, column: 7, scope: !9538)
!9550 = !DILocation(line: 235, column: 22, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9537, file: !1549, line: 234, column: 49)
!9552 = !DILocation(line: 235, column: 29, scope: !9551)
!9553 = !DILocation(line: 236, column: 3, scope: !9551)
!9554 = !DILocation(line: 236, column: 14, scope: !9537)
!9555 = !DILocation(line: 239, column: 32, scope: !9534)
!9556 = !DILocation(line: 0, scope: !9534)
!9557 = !DILocation(line: 241, column: 8, scope: !9534)
!9558 = !DILocation(line: 246, column: 3, scope: !9534)
!9559 = !DILocation(line: 252, column: 9, scope: !9538)
!9560 = !DILocation(line: 255, column: 9, scope: !9538)
!9561 = !DILocation(line: 256, column: 11, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9538, file: !1549, line: 256, column: 7)
!9563 = !DILocation(line: 209, column: 37, scope: !9539)
!9564 = !DILocation(line: 256, column: 7, scope: !9538)
!9565 = !DILocation(line: 262, column: 1, scope: !9513)
!9566 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1549, file: !1549, line: 176, type: !9567, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1467, retainedNodes: !9569)
!9567 = !DISubroutineType(types: !9568)
!9568 = !{!103, !121, !121, !121}
!9569 = !{!9570, !9571, !9572, !9573}
!9570 = !DILocalVariable(name: "pin", arg: 1, scope: !9566, file: !1549, line: 176, type: !121)
!9571 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !9566, file: !1549, line: 176, type: !121)
!9572 = !DILocalVariable(name: "pin_func", arg: 3, scope: !9566, file: !1549, line: 176, type: !121)
!9573 = !DILocalVariable(name: "port_device", scope: !9566, file: !1549, line: 178, type: !1479)
!9574 = !DILocation(line: 0, scope: !9566)
!9575 = !DILocation(line: 180, column: 22, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9566, file: !1549, line: 180, column: 6)
!9577 = !DILocation(line: 180, column: 6, scope: !9566)
!9578 = !DILocation(line: 180, column: 6, scope: !9576)
!9579 = !DILocation(line: 184, column: 16, scope: !9566)
!9580 = !DILocation(line: 186, column: 19, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9566, file: !1549, line: 186, column: 6)
!9582 = !DILocation(line: 186, column: 28, scope: !9581)
!9583 = !DILocation(line: 186, column: 33, scope: !9581)
!9584 = !DILocation(line: 186, column: 6, scope: !9566)
!9585 = !DILocation(line: 190, column: 43, scope: !9566)
!9586 = !DILocation(line: 190, column: 9, scope: !9566)
!9587 = !DILocation(line: 190, column: 2, scope: !9566)
!9588 = !DILocation(line: 191, column: 1, scope: !9566)
!9589 = distinct !DISubprogram(name: "device_is_ready", scope: !7578, file: !7578, line: 47, type: !9590, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1467, retainedNodes: !9592)
!9590 = !DISubroutineType(types: !9591)
!9591 = !{!157, !1479}
!9592 = !{!9593}
!9593 = !DILocalVariable(name: "dev", arg: 1, scope: !9589, file: !7578, line: 47, type: !1479)
!9594 = !DILocation(line: 0, scope: !9589)
!9595 = !DILocation(line: 55, column: 2, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9589, file: !7578, line: 55, column: 2)
!9597 = !{i64 2149155169}
!9598 = !DILocation(line: 56, column: 9, scope: !9589)
!9599 = !DILocation(line: 56, column: 2, scope: !9589)
!9600 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !9590, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1467, retainedNodes: !9601)
!9601 = !{!9602}
!9602 = !DILocalVariable(name: "dev", arg: 1, scope: !9600, file: !141, line: 730, type: !1479)
!9603 = !DILocation(line: 0, scope: !9600)
!9604 = !DILocation(line: 732, column: 9, scope: !9600)
!9605 = !DILocation(line: 732, column: 2, scope: !9600)
!9606 = distinct !DISubprogram(name: "SystemInit", scope: !1599, file: !1599, line: 167, type: !2913, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1557, retainedNodes: !322)
!9607 = !DILocation(line: 182, column: 1, scope: !9606)
!9608 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1599, file: !1599, line: 220, type: !2913, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1557, retainedNodes: !9609)
!9609 = !{!9610, !9611, !9612, !9613, !9614}
!9610 = !DILocalVariable(name: "tmp", scope: !9608, file: !1599, line: 222, type: !121)
!9611 = !DILocalVariable(name: "pllvco", scope: !9608, file: !1599, line: 222, type: !121)
!9612 = !DILocalVariable(name: "pllp", scope: !9608, file: !1599, line: 222, type: !121)
!9613 = !DILocalVariable(name: "pllsource", scope: !9608, file: !1599, line: 222, type: !121)
!9614 = !DILocalVariable(name: "pllm", scope: !9608, file: !1599, line: 222, type: !121)
!9615 = !DILocation(line: 0, scope: !9608)
!9616 = !DILocation(line: 225, column: 14, scope: !9608)
!9617 = !DILocation(line: 225, column: 19, scope: !9608)
!9618 = !DILocation(line: 227, column: 3, scope: !9608)
!9619 = !DILocation(line: 234, column: 7, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9608, file: !1599, line: 228, column: 3)
!9621 = !DILocation(line: 240, column: 25, scope: !9620)
!9622 = !DILocation(line: 241, column: 19, scope: !9620)
!9623 = !DILocation(line: 241, column: 27, scope: !9620)
!9624 = !DILocation(line: 243, column: 21, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9620, file: !1599, line: 243, column: 11)
!9626 = !DILocation(line: 0, scope: !9625)
!9627 = !DILocation(line: 254, column: 22, scope: !9620)
!9628 = !DILocation(line: 254, column: 62, scope: !9620)
!9629 = !DILocation(line: 255, column: 31, scope: !9620)
!9630 = !DILocation(line: 256, column: 7, scope: !9620)
!9631 = !DILocation(line: 0, scope: !9620)
!9632 = !DILocation(line: 263, column: 30, scope: !9608)
!9633 = !DILocation(line: 263, column: 52, scope: !9608)
!9634 = !DILocation(line: 263, column: 9, scope: !9608)
!9635 = !DILocation(line: 265, column: 19, scope: !9608)
!9636 = !DILocation(line: 266, column: 1, scope: !9608)
!9637 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !9638, file: !9638, line: 200, type: !9639, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !322)
!9638 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9639 = !DISubroutineType(types: !9640)
!9640 = !{!9641}
!9641 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2726, line: 44, baseType: !2725)
!9642 = !DILocation(line: 202, column: 3, scope: !9637)
!9643 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !9638, file: !9638, line: 219, type: !9644, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !9668)
!9644 = !DISubroutineType(types: !9645)
!9645 = !{!9641, !9646}
!9646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9647, size: 32)
!9647 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !9648, line: 70, baseType: !9649)
!9648 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9649 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9648, line: 49, size: 384, elements: !9650)
!9650 = !{!9651, !9652, !9653, !9654, !9655, !9656, !9657}
!9651 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !9649, file: !9648, line: 51, baseType: !121, size: 32)
!9652 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !9649, file: !9648, line: 54, baseType: !121, size: 32, offset: 32)
!9653 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !9649, file: !9648, line: 57, baseType: !121, size: 32, offset: 64)
!9654 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !9649, file: !9648, line: 60, baseType: !121, size: 32, offset: 96)
!9655 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !9649, file: !9648, line: 63, baseType: !121, size: 32, offset: 128)
!9656 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !9649, file: !9648, line: 66, baseType: !121, size: 32, offset: 160)
!9657 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !9649, file: !9648, line: 69, baseType: !9658, size: 192, offset: 192)
!9658 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !9659, line: 73, baseType: !9660)
!9659 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9660 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9659, line: 45, size: 192, elements: !9661)
!9661 = !{!9662, !9663, !9664, !9665, !9666, !9667}
!9662 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !9660, file: !9659, line: 47, baseType: !121, size: 32)
!9663 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !9660, file: !9659, line: 50, baseType: !121, size: 32, offset: 32)
!9664 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !9660, file: !9659, line: 53, baseType: !121, size: 32, offset: 64)
!9665 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !9660, file: !9659, line: 56, baseType: !121, size: 32, offset: 96)
!9666 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !9660, file: !9659, line: 60, baseType: !121, size: 32, offset: 128)
!9667 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !9660, file: !9659, line: 63, baseType: !121, size: 32, offset: 160)
!9668 = !{!9669, !9670, !9671, !9672, !9676}
!9669 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !9643, file: !9638, line: 219, type: !9646)
!9670 = !DILocalVariable(name: "tickstart", scope: !9643, file: !9638, line: 221, type: !121)
!9671 = !DILocalVariable(name: "pll_config", scope: !9643, file: !9638, line: 221, type: !121)
!9672 = !DILocalVariable(name: "pwrclkchanged", scope: !9673, file: !9638, line: 391, type: !9675)
!9673 = distinct !DILexicalBlock(scope: !9674, file: !9638, line: 390, column: 3)
!9674 = distinct !DILexicalBlock(scope: !9643, file: !9638, line: 389, column: 6)
!9675 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !631, line: 188, baseType: !2732)
!9676 = !DILocalVariable(name: "tmpreg", scope: !9677, file: !9638, line: 400, type: !120)
!9677 = distinct !DILexicalBlock(scope: !9678, file: !9638, line: 400, column: 7)
!9678 = distinct !DILexicalBlock(scope: !9679, file: !9638, line: 399, column: 5)
!9679 = distinct !DILexicalBlock(scope: !9673, file: !9638, line: 398, column: 8)
!9680 = !DILocation(line: 0, scope: !9643)
!9681 = !DILocation(line: 224, column: 24, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9643, file: !9638, line: 224, column: 6)
!9683 = !DILocation(line: 224, column: 6, scope: !9643)
!9684 = !DILocation(line: 232, column: 27, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9643, file: !9638, line: 232, column: 6)
!9686 = !DILocation(line: 232, column: 43, scope: !9685)
!9687 = !DILocation(line: 232, column: 69, scope: !9685)
!9688 = !DILocation(line: 232, column: 6, scope: !9643)
!9689 = !DILocation(line: 237, column: 9, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9691, file: !9638, line: 237, column: 8)
!9691 = distinct !DILexicalBlock(scope: !9685, file: !9638, line: 233, column: 3)
!9692 = !DILocation(line: 237, column: 39, scope: !9690)
!9693 = !DILocation(line: 237, column: 60, scope: !9690)
!9694 = !DILocation(line: 238, column: 9, scope: !9690)
!9695 = !DILocation(line: 238, column: 39, scope: !9690)
!9696 = !DILocation(line: 238, column: 60, scope: !9690)
!9697 = !DILocation(line: 238, column: 70, scope: !9690)
!9698 = !DILocation(line: 238, column: 78, scope: !9690)
!9699 = !DILocation(line: 238, column: 100, scope: !9690)
!9700 = !DILocation(line: 237, column: 8, scope: !9691)
!9701 = !DILocation(line: 240, column: 11, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9703, file: !9638, line: 240, column: 10)
!9703 = distinct !DILexicalBlock(scope: !9690, file: !9638, line: 239, column: 5)
!9704 = !DILocation(line: 240, column: 57, scope: !9702)
!9705 = !DILocation(line: 240, column: 80, scope: !9702)
!9706 = !DILocation(line: 240, column: 89, scope: !9702)
!9707 = !DILocation(line: 240, column: 10, scope: !9703)
!9708 = !DILocation(line: 248, column: 7, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9710, file: !9638, line: 248, column: 7)
!9710 = distinct !DILexicalBlock(scope: !9711, file: !9638, line: 248, column: 7)
!9711 = distinct !DILexicalBlock(scope: !9690, file: !9638, line: 246, column: 5)
!9712 = !DILocation(line: 248, column: 7, scope: !9710)
!9713 = !DILocation(line: 248, column: 7, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9709, file: !9638, line: 248, column: 7)
!9715 = !DILocation(line: 248, column: 7, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9717, file: !9638, line: 248, column: 7)
!9717 = distinct !DILexicalBlock(scope: !9709, file: !9638, line: 248, column: 7)
!9718 = !DILocation(line: 248, column: 7, scope: !9719)
!9719 = distinct !DILexicalBlock(scope: !9717, file: !9638, line: 248, column: 7)
!9720 = !DILocation(line: 0, scope: !9709)
!9721 = !DILocation(line: 251, column: 30, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !9711, file: !9638, line: 251, column: 10)
!9723 = !DILocation(line: 251, column: 40, scope: !9722)
!9724 = !DILocation(line: 0, scope: !9722)
!9725 = !DILocation(line: 251, column: 10, scope: !9711)
!9726 = !DILocation(line: 257, column: 15, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9722, file: !9638, line: 252, column: 7)
!9728 = !DILocation(line: 257, column: 51, scope: !9727)
!9729 = !DILocation(line: 257, column: 9, scope: !9727)
!9730 = !DILocation(line: 259, column: 15, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9732, file: !9638, line: 259, column: 14)
!9732 = distinct !DILexicalBlock(scope: !9727, file: !9638, line: 258, column: 9)
!9733 = !DILocation(line: 259, column: 29, scope: !9731)
!9734 = !DILocation(line: 259, column: 43, scope: !9731)
!9735 = !DILocation(line: 259, column: 14, scope: !9732)
!9736 = distinct !{!9736, !9729, !9737}
!9737 = !DILocation(line: 263, column: 9, scope: !9727)
!9738 = !DILocation(line: 271, column: 15, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9722, file: !9638, line: 266, column: 7)
!9740 = !DILocation(line: 271, column: 9, scope: !9739)
!9741 = !DILocation(line: 273, column: 15, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9743, file: !9638, line: 273, column: 14)
!9743 = distinct !DILexicalBlock(scope: !9739, file: !9638, line: 272, column: 9)
!9744 = !DILocation(line: 273, column: 29, scope: !9742)
!9745 = !DILocation(line: 273, column: 43, scope: !9742)
!9746 = !DILocation(line: 273, column: 14, scope: !9743)
!9747 = distinct !{!9747, !9740, !9748}
!9748 = !DILocation(line: 277, column: 9, scope: !9739)
!9749 = !DILocation(line: 282, column: 27, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !9643, file: !9638, line: 282, column: 6)
!9751 = !DILocation(line: 282, column: 43, scope: !9750)
!9752 = !DILocation(line: 282, column: 69, scope: !9750)
!9753 = !DILocation(line: 282, column: 6, scope: !9643)
!9754 = !DILocation(line: 289, column: 9, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9756, file: !9638, line: 289, column: 8)
!9756 = distinct !DILexicalBlock(scope: !9750, file: !9638, line: 283, column: 3)
!9757 = !DILocation(line: 289, column: 39, scope: !9755)
!9758 = !DILocation(line: 289, column: 60, scope: !9755)
!9759 = !DILocation(line: 290, column: 9, scope: !9755)
!9760 = !DILocation(line: 290, column: 39, scope: !9755)
!9761 = !DILocation(line: 290, column: 60, scope: !9755)
!9762 = !DILocation(line: 290, column: 70, scope: !9755)
!9763 = !DILocation(line: 290, column: 78, scope: !9755)
!9764 = !DILocation(line: 290, column: 100, scope: !9755)
!9765 = !DILocation(line: 289, column: 8, scope: !9756)
!9766 = !DILocation(line: 293, column: 11, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !9768, file: !9638, line: 293, column: 10)
!9768 = distinct !DILexicalBlock(scope: !9755, file: !9638, line: 291, column: 5)
!9769 = !DILocation(line: 293, column: 57, scope: !9767)
!9770 = !DILocation(line: 293, column: 80, scope: !9767)
!9771 = !DILocation(line: 293, column: 89, scope: !9767)
!9772 = !DILocation(line: 293, column: 10, scope: !9768)
!9773 = !DILocation(line: 307, column: 30, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9775, file: !9638, line: 307, column: 10)
!9775 = distinct !DILexicalBlock(scope: !9755, file: !9638, line: 305, column: 5)
!9776 = !DILocation(line: 307, column: 39, scope: !9774)
!9777 = !DILocation(line: 307, column: 10, scope: !9775)
!9778 = !DILocation(line: 310, column: 9, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9774, file: !9638, line: 308, column: 7)
!9780 = !DILocation(line: 313, column: 21, scope: !9779)
!9781 = !DILocation(line: 316, column: 9, scope: !9779)
!9782 = !DILocation(line: 316, column: 15, scope: !9779)
!9783 = !DILocation(line: 316, column: 51, scope: !9779)
!9784 = !DILocation(line: 318, column: 15, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9786, file: !9638, line: 318, column: 14)
!9786 = distinct !DILexicalBlock(scope: !9779, file: !9638, line: 317, column: 9)
!9787 = !DILocation(line: 318, column: 29, scope: !9785)
!9788 = !DILocation(line: 318, column: 43, scope: !9785)
!9789 = !DILocation(line: 318, column: 14, scope: !9786)
!9790 = distinct !{!9790, !9781, !9791}
!9791 = !DILocation(line: 322, column: 9, scope: !9779)
!9792 = !DILocation(line: 330, column: 9, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9774, file: !9638, line: 328, column: 7)
!9794 = !DILocation(line: 333, column: 21, scope: !9793)
!9795 = !DILocation(line: 336, column: 9, scope: !9793)
!9796 = !DILocation(line: 336, column: 15, scope: !9793)
!9797 = !DILocation(line: 338, column: 15, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9799, file: !9638, line: 338, column: 14)
!9799 = distinct !DILexicalBlock(scope: !9793, file: !9638, line: 337, column: 9)
!9800 = !DILocation(line: 338, column: 29, scope: !9798)
!9801 = !DILocation(line: 338, column: 43, scope: !9798)
!9802 = !DILocation(line: 338, column: 14, scope: !9799)
!9803 = distinct !{!9803, !9795, !9804}
!9804 = !DILocation(line: 342, column: 9, scope: !9793)
!9805 = !DILocation(line: 0, scope: !9755)
!9806 = !DILocation(line: 347, column: 27, scope: !9807)
!9807 = distinct !DILexicalBlock(scope: !9643, file: !9638, line: 347, column: 6)
!9808 = !DILocation(line: 347, column: 43, scope: !9807)
!9809 = !DILocation(line: 347, column: 69, scope: !9807)
!9810 = !DILocation(line: 347, column: 6, scope: !9643)
!9811 = !DILocation(line: 353, column: 28, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9813, file: !9638, line: 353, column: 8)
!9813 = distinct !DILexicalBlock(scope: !9807, file: !9638, line: 348, column: 3)
!9814 = !DILocation(line: 353, column: 37, scope: !9812)
!9815 = !DILocation(line: 353, column: 8, scope: !9813)
!9816 = !DILocation(line: 356, column: 7, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9812, file: !9638, line: 354, column: 5)
!9818 = !DILocation(line: 359, column: 19, scope: !9817)
!9819 = !DILocation(line: 362, column: 7, scope: !9817)
!9820 = !DILocation(line: 362, column: 13, scope: !9817)
!9821 = !DILocation(line: 362, column: 49, scope: !9817)
!9822 = !DILocation(line: 364, column: 13, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9824, file: !9638, line: 364, column: 12)
!9824 = distinct !DILexicalBlock(scope: !9817, file: !9638, line: 363, column: 7)
!9825 = !DILocation(line: 364, column: 27, scope: !9823)
!9826 = !DILocation(line: 364, column: 41, scope: !9823)
!9827 = !DILocation(line: 364, column: 12, scope: !9824)
!9828 = distinct !{!9828, !9819, !9829}
!9829 = !DILocation(line: 368, column: 7, scope: !9817)
!9830 = !DILocation(line: 373, column: 7, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9812, file: !9638, line: 371, column: 5)
!9832 = !DILocation(line: 376, column: 19, scope: !9831)
!9833 = !DILocation(line: 379, column: 7, scope: !9831)
!9834 = !DILocation(line: 379, column: 13, scope: !9831)
!9835 = !DILocation(line: 381, column: 13, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9837, file: !9638, line: 381, column: 12)
!9837 = distinct !DILexicalBlock(scope: !9831, file: !9638, line: 380, column: 7)
!9838 = !DILocation(line: 381, column: 27, scope: !9836)
!9839 = !DILocation(line: 381, column: 41, scope: !9836)
!9840 = !DILocation(line: 381, column: 12, scope: !9837)
!9841 = distinct !{!9841, !9833, !9842}
!9842 = !DILocation(line: 385, column: 7, scope: !9831)
!9843 = !DILocation(line: 389, column: 27, scope: !9674)
!9844 = !DILocation(line: 389, column: 43, scope: !9674)
!9845 = !DILocation(line: 389, column: 69, scope: !9674)
!9846 = !DILocation(line: 389, column: 6, scope: !9643)
!9847 = !DILocation(line: 0, scope: !9673)
!9848 = !DILocation(line: 398, column: 8, scope: !9679)
!9849 = !DILocation(line: 398, column: 8, scope: !9673)
!9850 = !DILocation(line: 400, column: 7, scope: !9677)
!9851 = !DILocation(line: 400, column: 7, scope: !9678)
!9852 = !DILocation(line: 402, column: 5, scope: !9678)
!9853 = !DILocation(line: 404, column: 8, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9673, file: !9638, line: 404, column: 8)
!9855 = !DILocation(line: 404, column: 8, scope: !9673)
!9856 = !DILocation(line: 407, column: 7, scope: !9857)
!9857 = distinct !DILexicalBlock(scope: !9854, file: !9638, line: 405, column: 5)
!9858 = !DILocation(line: 410, column: 19, scope: !9857)
!9859 = !DILocation(line: 412, column: 7, scope: !9857)
!9860 = !DILocation(line: 412, column: 13, scope: !9857)
!9861 = !DILocation(line: 414, column: 13, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9863, file: !9638, line: 414, column: 12)
!9863 = distinct !DILexicalBlock(scope: !9857, file: !9638, line: 413, column: 7)
!9864 = !DILocation(line: 414, column: 27, scope: !9862)
!9865 = !DILocation(line: 414, column: 40, scope: !9862)
!9866 = !DILocation(line: 414, column: 12, scope: !9863)
!9867 = distinct !{!9867, !9859, !9868}
!9868 = !DILocation(line: 418, column: 7, scope: !9857)
!9869 = !DILocation(line: 422, column: 5, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9871, file: !9638, line: 422, column: 5)
!9871 = distinct !DILexicalBlock(scope: !9673, file: !9638, line: 422, column: 5)
!9872 = !DILocation(line: 422, column: 5, scope: !9871)
!9873 = !DILocation(line: 422, column: 5, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9870, file: !9638, line: 422, column: 5)
!9875 = !DILocation(line: 422, column: 5, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9877, file: !9638, line: 422, column: 5)
!9877 = distinct !DILexicalBlock(scope: !9870, file: !9638, line: 422, column: 5)
!9878 = !DILocation(line: 422, column: 5, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9877, file: !9638, line: 422, column: 5)
!9880 = !DILocation(line: 0, scope: !9870)
!9881 = !DILocation(line: 424, column: 28, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9673, file: !9638, line: 424, column: 8)
!9883 = !DILocation(line: 424, column: 38, scope: !9882)
!9884 = !DILocation(line: 0, scope: !9882)
!9885 = !DILocation(line: 424, column: 8, scope: !9673)
!9886 = !DILocation(line: 430, column: 13, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9882, file: !9638, line: 425, column: 5)
!9888 = !DILocation(line: 430, column: 49, scope: !9887)
!9889 = !DILocation(line: 430, column: 7, scope: !9887)
!9890 = !DILocation(line: 432, column: 13, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9892, file: !9638, line: 432, column: 12)
!9892 = distinct !DILexicalBlock(scope: !9887, file: !9638, line: 431, column: 7)
!9893 = !DILocation(line: 432, column: 27, scope: !9891)
!9894 = !DILocation(line: 432, column: 41, scope: !9891)
!9895 = !DILocation(line: 432, column: 12, scope: !9892)
!9896 = distinct !{!9896, !9889, !9897}
!9897 = !DILocation(line: 436, column: 7, scope: !9887)
!9898 = !DILocation(line: 444, column: 13, scope: !9899)
!9899 = distinct !DILexicalBlock(scope: !9882, file: !9638, line: 439, column: 5)
!9900 = !DILocation(line: 444, column: 7, scope: !9899)
!9901 = !DILocation(line: 446, column: 13, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9903, file: !9638, line: 446, column: 12)
!9903 = distinct !DILexicalBlock(scope: !9899, file: !9638, line: 445, column: 7)
!9904 = !DILocation(line: 446, column: 27, scope: !9902)
!9905 = !DILocation(line: 446, column: 41, scope: !9902)
!9906 = !DILocation(line: 446, column: 12, scope: !9903)
!9907 = distinct !{!9907, !9900, !9908}
!9908 = !DILocation(line: 450, column: 7, scope: !9899)
!9909 = !DILocation(line: 454, column: 8, scope: !9673)
!9910 = !DILocation(line: 456, column: 7, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9912, file: !9638, line: 455, column: 5)
!9912 = distinct !DILexicalBlock(scope: !9673, file: !9638, line: 454, column: 8)
!9913 = !DILocation(line: 457, column: 5, scope: !9911)
!9914 = !DILocation(line: 462, column: 31, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9643, file: !9638, line: 462, column: 7)
!9916 = !DILocation(line: 462, column: 41, scope: !9915)
!9917 = !DILocation(line: 462, column: 7, scope: !9643)
!9918 = !DILocation(line: 465, column: 8, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9920, file: !9638, line: 465, column: 8)
!9920 = distinct !DILexicalBlock(scope: !9915, file: !9638, line: 463, column: 3)
!9921 = !DILocation(line: 465, column: 38, scope: !9919)
!9922 = !DILocation(line: 465, column: 8, scope: !9920)
!9923 = !DILocation(line: 467, column: 44, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9925, file: !9638, line: 467, column: 10)
!9925 = distinct !DILexicalBlock(scope: !9919, file: !9638, line: 466, column: 5)
!9926 = !DILocation(line: 0, scope: !9924)
!9927 = !DILocation(line: 467, column: 10, scope: !9925)
!9928 = !DILocation(line: 483, column: 15, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !9924, file: !9638, line: 468, column: 7)
!9930 = !DILocation(line: 483, column: 9, scope: !9929)
!9931 = !DILocation(line: 485, column: 15, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9933, file: !9638, line: 485, column: 14)
!9933 = distinct !DILexicalBlock(scope: !9929, file: !9638, line: 484, column: 9)
!9934 = !DILocation(line: 485, column: 29, scope: !9932)
!9935 = !DILocation(line: 485, column: 43, scope: !9932)
!9936 = !DILocation(line: 485, column: 14, scope: !9933)
!9937 = distinct !{!9937, !9930, !9938}
!9938 = !DILocation(line: 489, column: 9, scope: !9929)
!9939 = !DILocation(line: 492, column: 9, scope: !9929)
!9940 = !DILocation(line: 498, column: 9, scope: !9929)
!9941 = !DILocation(line: 501, column: 21, scope: !9929)
!9942 = !DILocation(line: 504, column: 9, scope: !9929)
!9943 = !DILocation(line: 504, column: 15, scope: !9929)
!9944 = !DILocation(line: 504, column: 51, scope: !9929)
!9945 = !DILocation(line: 506, column: 15, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9947, file: !9638, line: 506, column: 14)
!9947 = distinct !DILexicalBlock(scope: !9929, file: !9638, line: 505, column: 9)
!9948 = !DILocation(line: 506, column: 29, scope: !9946)
!9949 = !DILocation(line: 506, column: 43, scope: !9946)
!9950 = !DILocation(line: 506, column: 14, scope: !9947)
!9951 = distinct !{!9951, !9942, !9952}
!9952 = !DILocation(line: 510, column: 9, scope: !9929)
!9953 = !DILocation(line: 521, column: 15, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9924, file: !9638, line: 513, column: 7)
!9955 = !DILocation(line: 521, column: 9, scope: !9954)
!9956 = !DILocation(line: 523, column: 15, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9958, file: !9638, line: 523, column: 14)
!9958 = distinct !DILexicalBlock(scope: !9954, file: !9638, line: 522, column: 9)
!9959 = !DILocation(line: 523, column: 29, scope: !9957)
!9960 = !DILocation(line: 523, column: 43, scope: !9957)
!9961 = !DILocation(line: 523, column: 14, scope: !9958)
!9962 = distinct !{!9962, !9955, !9963}
!9963 = !DILocation(line: 527, column: 9, scope: !9954)
!9964 = !DILocation(line: 533, column: 44, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9966, file: !9638, line: 533, column: 10)
!9966 = distinct !DILexicalBlock(scope: !9919, file: !9638, line: 531, column: 5)
!9967 = !DILocation(line: 533, column: 10, scope: !9966)
!9968 = !DILocation(line: 540, column: 27, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9965, file: !9638, line: 538, column: 7)
!9970 = !DILocation(line: 551, column: 14, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9969, file: !9638, line: 550, column: 13)
!9972 = !DILocation(line: 551, column: 81, scope: !9971)
!9973 = !DILocation(line: 551, column: 55, scope: !9971)
!9974 = !DILocation(line: 551, column: 92, scope: !9971)
!9975 = !DILocation(line: 552, column: 14, scope: !9971)
!9976 = !DILocation(line: 552, column: 80, scope: !9971)
!9977 = !DILocation(line: 552, column: 53, scope: !9971)
!9978 = !DILocation(line: 552, column: 111, scope: !9971)
!9979 = !DILocation(line: 553, column: 14, scope: !9971)
!9980 = !DILocation(line: 553, column: 80, scope: !9971)
!9981 = !DILocation(line: 553, column: 86, scope: !9971)
!9982 = !DILocation(line: 553, column: 53, scope: !9971)
!9983 = !DILocation(line: 553, column: 111, scope: !9971)
!9984 = !DILocation(line: 554, column: 14, scope: !9971)
!9985 = !DILocation(line: 554, column: 82, scope: !9971)
!9986 = !DILocation(line: 554, column: 101, scope: !9971)
!9987 = !DILocation(line: 554, column: 53, scope: !9971)
!9988 = !DILocation(line: 554, column: 126, scope: !9971)
!9989 = !DILocation(line: 555, column: 14, scope: !9971)
!9990 = !DILocation(line: 555, column: 80, scope: !9971)
!9991 = !DILocation(line: 555, column: 85, scope: !9971)
!9992 = !DILocation(line: 555, column: 53, scope: !9971)
!9993 = !DILocation(line: 550, column: 13, scope: !9969)
!9994 = !DILocation(line: 563, column: 3, scope: !9643)
!9995 = !DILocation(line: 564, column: 1, scope: !9643)
!9996 = !DISubprogram(name: "HAL_GetTick", scope: !9997, file: !9997, line: 234, type: !5464, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!9997 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9998 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !9638, file: !9638, line: 591, type: !9999, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !10010)
!9999 = !DISubroutineType(types: !10000)
!10000 = !{!9641, !10001, !121}
!10001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10002, size: 32)
!10002 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !9648, line: 92, baseType: !10003)
!10003 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9648, line: 75, size: 160, elements: !10004)
!10004 = !{!10005, !10006, !10007, !10008, !10009}
!10005 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !10003, file: !9648, line: 77, baseType: !121, size: 32)
!10006 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !10003, file: !9648, line: 80, baseType: !121, size: 32, offset: 32)
!10007 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10003, file: !9648, line: 83, baseType: !121, size: 32, offset: 64)
!10008 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10003, file: !9648, line: 86, baseType: !121, size: 32, offset: 96)
!10009 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10003, file: !9648, line: 89, baseType: !121, size: 32, offset: 128)
!10010 = !{!10011, !10012, !10013}
!10011 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !9998, file: !9638, line: 591, type: !10001)
!10012 = !DILocalVariable(name: "FLatency", arg: 2, scope: !9998, file: !9638, line: 591, type: !121)
!10013 = !DILocalVariable(name: "tickstart", scope: !9998, file: !9638, line: 593, type: !121)
!10014 = !DILocation(line: 0, scope: !9998)
!10015 = !DILocation(line: 596, column: 24, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !9998, file: !9638, line: 596, column: 6)
!10017 = !DILocation(line: 596, column: 6, scope: !9998)
!10018 = !DILocation(line: 610, column: 17, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !9998, file: !9638, line: 610, column: 6)
!10020 = !DILocation(line: 610, column: 15, scope: !10019)
!10021 = !DILocation(line: 610, column: 6, scope: !9998)
!10022 = !DILocation(line: 613, column: 5, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10019, file: !9638, line: 611, column: 3)
!10024 = !DILocation(line: 617, column: 8, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10023, file: !9638, line: 617, column: 8)
!10026 = !DILocation(line: 617, column: 34, scope: !10025)
!10027 = !DILocation(line: 617, column: 8, scope: !10023)
!10028 = !DILocation(line: 624, column: 27, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !9998, file: !9638, line: 624, column: 6)
!10030 = !DILocation(line: 624, column: 38, scope: !10029)
!10031 = !DILocation(line: 624, column: 60, scope: !10029)
!10032 = !DILocation(line: 624, column: 6, scope: !9998)
!10033 = !DILocation(line: 628, column: 40, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !10035, file: !9638, line: 628, column: 8)
!10035 = distinct !DILexicalBlock(scope: !10029, file: !9638, line: 625, column: 3)
!10036 = !DILocation(line: 628, column: 63, scope: !10034)
!10037 = !DILocation(line: 628, column: 8, scope: !10035)
!10038 = !DILocation(line: 630, column: 7, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !10034, file: !9638, line: 629, column: 5)
!10040 = !DILocation(line: 633, column: 29, scope: !10041)
!10041 = distinct !DILexicalBlock(scope: !10035, file: !9638, line: 633, column: 8)
!10042 = !DILocation(line: 631, column: 5, scope: !10039)
!10043 = !DILocation(line: 633, column: 40, scope: !10041)
!10044 = !DILocation(line: 633, column: 63, scope: !10041)
!10045 = !DILocation(line: 633, column: 8, scope: !10035)
!10046 = !DILocation(line: 635, column: 7, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !10041, file: !9638, line: 634, column: 5)
!10048 = !DILocation(line: 636, column: 5, scope: !10047)
!10049 = !DILocation(line: 639, column: 5, scope: !10035)
!10050 = !DILocation(line: 643, column: 27, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !9998, file: !9638, line: 643, column: 6)
!10052 = !DILocation(line: 640, column: 3, scope: !10035)
!10053 = !DILocation(line: 643, column: 38, scope: !10051)
!10054 = !DILocation(line: 643, column: 62, scope: !10051)
!10055 = !DILocation(line: 643, column: 6, scope: !9998)
!10056 = !DILocation(line: 648, column: 27, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10058, file: !9638, line: 648, column: 8)
!10058 = distinct !DILexicalBlock(scope: !10051, file: !9638, line: 644, column: 3)
!10059 = !DILocation(line: 648, column: 8, scope: !10058)
!10060 = !DILocation(line: 651, column: 10, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10062, file: !9638, line: 651, column: 10)
!10062 = distinct !DILexicalBlock(scope: !10057, file: !9638, line: 649, column: 5)
!10063 = !DILocation(line: 651, column: 46, scope: !10061)
!10064 = !DILocation(line: 651, column: 10, scope: !10062)
!10065 = !DILocation(line: 661, column: 10, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10067, file: !9638, line: 661, column: 10)
!10067 = distinct !DILexicalBlock(scope: !10068, file: !9638, line: 659, column: 5)
!10068 = distinct !DILexicalBlock(scope: !10057, file: !9638, line: 657, column: 13)
!10069 = !DILocation(line: 661, column: 46, scope: !10066)
!10070 = !DILocation(line: 661, column: 10, scope: !10067)
!10071 = !DILocation(line: 670, column: 10, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !10073, file: !9638, line: 670, column: 10)
!10073 = distinct !DILexicalBlock(scope: !10068, file: !9638, line: 668, column: 5)
!10074 = !DILocation(line: 670, column: 46, scope: !10072)
!10075 = !DILocation(line: 670, column: 10, scope: !10073)
!10076 = !DILocation(line: 676, column: 5, scope: !10058)
!10077 = !DILocation(line: 679, column: 17, scope: !10058)
!10078 = !DILocation(line: 681, column: 5, scope: !10058)
!10079 = !DILocation(line: 681, column: 12, scope: !10058)
!10080 = !DILocation(line: 681, column: 65, scope: !10058)
!10081 = !DILocation(line: 681, column: 78, scope: !10058)
!10082 = !DILocation(line: 681, column: 42, scope: !10058)
!10083 = !DILocation(line: 683, column: 12, scope: !10084)
!10084 = distinct !DILexicalBlock(scope: !10085, file: !9638, line: 683, column: 11)
!10085 = distinct !DILexicalBlock(scope: !10058, file: !9638, line: 682, column: 5)
!10086 = !DILocation(line: 683, column: 26, scope: !10084)
!10087 = !DILocation(line: 683, column: 39, scope: !10084)
!10088 = !DILocation(line: 683, column: 11, scope: !10085)
!10089 = distinct !{!10089, !10078, !10090}
!10090 = !DILocation(line: 687, column: 5, scope: !10058)
!10091 = !DILocation(line: 691, column: 17, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !9998, file: !9638, line: 691, column: 6)
!10093 = !DILocation(line: 691, column: 15, scope: !10092)
!10094 = !DILocation(line: 691, column: 6, scope: !9998)
!10095 = !DILocation(line: 694, column: 5, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10092, file: !9638, line: 692, column: 3)
!10097 = !DILocation(line: 698, column: 8, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10096, file: !9638, line: 698, column: 8)
!10099 = !DILocation(line: 698, column: 34, scope: !10098)
!10100 = !DILocation(line: 698, column: 8, scope: !10096)
!10101 = !DILocation(line: 705, column: 27, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !9998, file: !9638, line: 705, column: 6)
!10103 = !DILocation(line: 705, column: 38, scope: !10102)
!10104 = !DILocation(line: 705, column: 61, scope: !10102)
!10105 = !DILocation(line: 705, column: 6, scope: !9998)
!10106 = !DILocation(line: 708, column: 5, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !10102, file: !9638, line: 706, column: 3)
!10108 = !DILocation(line: 712, column: 27, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !9998, file: !9638, line: 712, column: 6)
!10110 = !DILocation(line: 709, column: 3, scope: !10107)
!10111 = !DILocation(line: 712, column: 38, scope: !10109)
!10112 = !DILocation(line: 712, column: 61, scope: !10109)
!10113 = !DILocation(line: 712, column: 6, scope: !9998)
!10114 = !DILocation(line: 715, column: 5, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !10109, file: !9638, line: 713, column: 3)
!10116 = !DILocation(line: 716, column: 3, scope: !10115)
!10117 = !DILocation(line: 719, column: 21, scope: !9998)
!10118 = !DILocation(line: 719, column: 70, scope: !9998)
!10119 = !DILocation(line: 719, column: 91, scope: !9998)
!10120 = !DILocation(line: 719, column: 50, scope: !9998)
!10121 = !DILocation(line: 719, column: 47, scope: !9998)
!10122 = !DILocation(line: 719, column: 19, scope: !9998)
!10123 = !DILocation(line: 722, column: 17, scope: !9998)
!10124 = !DILocation(line: 722, column: 3, scope: !9998)
!10125 = !DILocation(line: 724, column: 3, scope: !9998)
!10126 = !DILocation(line: 725, column: 1, scope: !9998)
!10127 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !9638, file: !9638, line: 885, type: !5464, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !10128)
!10128 = !{!10129, !10130, !10131, !10132}
!10129 = !DILocalVariable(name: "pllm", scope: !10127, file: !9638, line: 887, type: !121)
!10130 = !DILocalVariable(name: "pllvco", scope: !10127, file: !9638, line: 887, type: !121)
!10131 = !DILocalVariable(name: "pllp", scope: !10127, file: !9638, line: 887, type: !121)
!10132 = !DILocalVariable(name: "sysclockfreq", scope: !10127, file: !9638, line: 888, type: !121)
!10133 = !DILocation(line: 0, scope: !10127)
!10134 = !DILocation(line: 891, column: 16, scope: !10127)
!10135 = !DILocation(line: 891, column: 21, scope: !10127)
!10136 = !DILocation(line: 891, column: 3, scope: !10127)
!10137 = !DILocation(line: 901, column: 7, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10139, file: !9638, line: 899, column: 5)
!10139 = distinct !DILexicalBlock(scope: !10127, file: !9638, line: 892, column: 3)
!10140 = !DILocation(line: 907, column: 19, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10139, file: !9638, line: 904, column: 5)
!10142 = !DILocation(line: 907, column: 27, scope: !10141)
!10143 = !DILocation(line: 908, column: 10, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10141, file: !9638, line: 908, column: 10)
!10145 = !DILocation(line: 908, column: 40, scope: !10144)
!10146 = !DILocation(line: 0, scope: !10144)
!10147 = !DILocation(line: 908, column: 10, scope: !10141)
!10148 = !DILocation(line: 911, column: 53, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10144, file: !9638, line: 909, column: 7)
!10150 = !DILocation(line: 911, column: 130, scope: !10149)
!10151 = !DILocation(line: 912, column: 7, scope: !10149)
!10152 = !DILocation(line: 916, column: 56, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10144, file: !9638, line: 914, column: 7)
!10154 = !DILocation(line: 916, column: 53, scope: !10153)
!10155 = !DILocation(line: 916, column: 132, scope: !10153)
!10156 = !DILocation(line: 916, column: 130, scope: !10153)
!10157 = !DILocation(line: 916, column: 18, scope: !10153)
!10158 = !DILocation(line: 918, column: 23, scope: !10141)
!10159 = !DILocation(line: 918, column: 82, scope: !10141)
!10160 = !DILocation(line: 920, column: 28, scope: !10141)
!10161 = !DILocation(line: 921, column: 7, scope: !10141)
!10162 = !DILocation(line: 0, scope: !10139)
!10163 = !DILocation(line: 929, column: 3, scope: !10127)
!10164 = !DISubprogram(name: "HAL_InitTick", scope: !9997, file: !9997, line: 223, type: !10165, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!10165 = !DISubroutineType(types: !10166)
!10166 = !{!9641, !121}
!10167 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !9638, file: !9638, line: 775, type: !10168, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !10170)
!10168 = !DISubroutineType(types: !10169)
!10169 = !{null, !121, !121, !121}
!10170 = !{!10171, !10172, !10173, !10174, !10184, !10188}
!10171 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !10167, file: !9638, line: 775, type: !121)
!10172 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !10167, file: !9638, line: 775, type: !121)
!10173 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !10167, file: !9638, line: 775, type: !121)
!10174 = !DILocalVariable(name: "GPIO_InitStruct", scope: !10167, file: !9638, line: 777, type: !10175)
!10175 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !10176, line: 62, baseType: !10177)
!10176 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10177 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10176, line: 46, size: 160, elements: !10178)
!10178 = !{!10179, !10180, !10181, !10182, !10183}
!10179 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !10177, file: !10176, line: 48, baseType: !121, size: 32)
!10180 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !10177, file: !10176, line: 51, baseType: !121, size: 32, offset: 32)
!10181 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !10177, file: !10176, line: 54, baseType: !121, size: 32, offset: 64)
!10182 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !10177, file: !10176, line: 57, baseType: !121, size: 32, offset: 96)
!10183 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !10177, file: !10176, line: 60, baseType: !121, size: 32, offset: 128)
!10184 = !DILocalVariable(name: "tmpreg", scope: !10185, file: !9638, line: 787, type: !120)
!10185 = distinct !DILexicalBlock(scope: !10186, file: !9638, line: 787, column: 5)
!10186 = distinct !DILexicalBlock(scope: !10187, file: !9638, line: 783, column: 3)
!10187 = distinct !DILexicalBlock(scope: !10167, file: !9638, line: 782, column: 6)
!10188 = !DILocalVariable(name: "tmpreg", scope: !10189, file: !9638, line: 811, type: !120)
!10189 = distinct !DILexicalBlock(scope: !10190, file: !9638, line: 811, column: 5)
!10190 = distinct !DILexicalBlock(scope: !10187, file: !9638, line: 807, column: 3)
!10191 = !DILocation(line: 0, scope: !10167)
!10192 = !DILocation(line: 777, column: 3, scope: !10167)
!10193 = !DILocation(line: 777, column: 20, scope: !10167)
!10194 = !DILocation(line: 782, column: 15, scope: !10187)
!10195 = !DILocation(line: 782, column: 6, scope: !10167)
!10196 = !DILocation(line: 787, column: 5, scope: !10185)
!10197 = !DILocation(line: 787, column: 5, scope: !10186)
!10198 = !DILocation(line: 790, column: 21, scope: !10186)
!10199 = !DILocation(line: 790, column: 25, scope: !10186)
!10200 = !DILocation(line: 791, column: 21, scope: !10186)
!10201 = !DILocation(line: 791, column: 26, scope: !10186)
!10202 = !DILocation(line: 792, column: 21, scope: !10186)
!10203 = !DILocation(line: 792, column: 27, scope: !10186)
!10204 = !DILocation(line: 793, column: 21, scope: !10186)
!10205 = !DILocation(line: 793, column: 26, scope: !10186)
!10206 = !DILocation(line: 794, column: 21, scope: !10186)
!10207 = !DILocation(line: 794, column: 31, scope: !10186)
!10208 = !DILocation(line: 795, column: 5, scope: !10186)
!10209 = !DILocation(line: 798, column: 5, scope: !10186)
!10210 = !DILocation(line: 804, column: 3, scope: !10186)
!10211 = !DILocation(line: 811, column: 5, scope: !10189)
!10212 = !DILocation(line: 811, column: 5, scope: !10190)
!10213 = !DILocation(line: 814, column: 21, scope: !10190)
!10214 = !DILocation(line: 814, column: 25, scope: !10190)
!10215 = !DILocation(line: 815, column: 21, scope: !10190)
!10216 = !DILocation(line: 815, column: 26, scope: !10190)
!10217 = !DILocation(line: 816, column: 21, scope: !10190)
!10218 = !DILocation(line: 816, column: 27, scope: !10190)
!10219 = !DILocation(line: 817, column: 21, scope: !10190)
!10220 = !DILocation(line: 817, column: 26, scope: !10190)
!10221 = !DILocation(line: 818, column: 21, scope: !10190)
!10222 = !DILocation(line: 818, column: 31, scope: !10190)
!10223 = !DILocation(line: 819, column: 5, scope: !10190)
!10224 = !DILocation(line: 822, column: 5, scope: !10190)
!10225 = !DILocation(line: 0, scope: !10187)
!10226 = !DILocation(line: 830, column: 1, scope: !10167)
!10227 = !DISubprogram(name: "HAL_GPIO_Init", scope: !10176, file: !10176, line: 224, type: !10228, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!10228 = !DISubroutineType(types: !10229)
!10229 = !{null, !2795, !10230}
!10230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10175, size: 32)
!10231 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !9638, file: !9638, line: 841, type: !2913, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !322)
!10232 = !DILocation(line: 843, column: 38, scope: !10231)
!10233 = !DILocation(line: 844, column: 1, scope: !10231)
!10234 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !9638, file: !9638, line: 850, type: !2913, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !322)
!10235 = !DILocation(line: 852, column: 38, scope: !10234)
!10236 = !DILocation(line: 853, column: 1, scope: !10234)
!10237 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !9638, file: !9638, line: 941, type: !5464, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !322)
!10238 = !DILocation(line: 943, column: 10, scope: !10237)
!10239 = !DILocation(line: 943, column: 3, scope: !10237)
!10240 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !9638, file: !9638, line: 952, type: !5464, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !322)
!10241 = !DILocation(line: 955, column: 11, scope: !10240)
!10242 = !DILocation(line: 955, column: 56, scope: !10240)
!10243 = !DILocation(line: 955, column: 78, scope: !10240)
!10244 = !DILocation(line: 955, column: 36, scope: !10240)
!10245 = !DILocation(line: 955, column: 33, scope: !10240)
!10246 = !DILocation(line: 955, column: 3, scope: !10240)
!10247 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !9638, file: !9638, line: 964, type: !5464, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !322)
!10248 = !DILocation(line: 967, column: 11, scope: !10247)
!10249 = !DILocation(line: 967, column: 55, scope: !10247)
!10250 = !DILocation(line: 967, column: 77, scope: !10247)
!10251 = !DILocation(line: 967, column: 35, scope: !10247)
!10252 = !DILocation(line: 967, column: 32, scope: !10247)
!10253 = !DILocation(line: 967, column: 3, scope: !10247)
!10254 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !9638, file: !9638, line: 977, type: !10255, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !10257)
!10255 = !DISubroutineType(types: !10256)
!10256 = !{null, !9646}
!10257 = !{!10258}
!10258 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10254, file: !9638, line: 977, type: !9646)
!10259 = !DILocation(line: 0, scope: !10254)
!10260 = !DILocation(line: 980, column: 22, scope: !10254)
!10261 = !DILocation(line: 980, column: 37, scope: !10254)
!10262 = !DILocation(line: 983, column: 12, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10254, file: !9638, line: 983, column: 6)
!10264 = !DILocation(line: 983, column: 15, scope: !10263)
!10265 = !DILocation(line: 983, column: 31, scope: !10263)
!10266 = !DILocation(line: 983, column: 6, scope: !10254)
!10267 = !DILocation(line: 985, column: 24, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10263, file: !9638, line: 984, column: 3)
!10269 = !DILocation(line: 985, column: 33, scope: !10268)
!10270 = !DILocation(line: 986, column: 3, scope: !10268)
!10271 = !DILocation(line: 987, column: 17, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10263, file: !9638, line: 987, column: 11)
!10273 = !DILocation(line: 987, column: 20, scope: !10272)
!10274 = !DILocation(line: 987, column: 35, scope: !10272)
!10275 = !DILocation(line: 0, scope: !10272)
!10276 = !DILocation(line: 987, column: 11, scope: !10263)
!10277 = !DILocation(line: 989, column: 33, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10272, file: !9638, line: 988, column: 3)
!10279 = !DILocation(line: 990, column: 3, scope: !10278)
!10280 = !DILocation(line: 993, column: 33, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10272, file: !9638, line: 992, column: 3)
!10282 = !DILocation(line: 997, column: 12, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10254, file: !9638, line: 997, column: 6)
!10284 = !DILocation(line: 997, column: 15, scope: !10283)
!10285 = !DILocation(line: 1003, column: 24, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10283, file: !9638, line: 1002, column: 3)
!10287 = !DILocation(line: 1003, column: 33, scope: !10286)
!10288 = !DILocation(line: 1006, column: 61, scope: !10254)
!10289 = !DILocation(line: 1006, column: 81, scope: !10254)
!10290 = !DILocation(line: 1006, column: 22, scope: !10254)
!10291 = !DILocation(line: 1006, column: 42, scope: !10254)
!10292 = !DILocation(line: 1009, column: 12, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10254, file: !9638, line: 1009, column: 6)
!10294 = !DILocation(line: 1009, column: 17, scope: !10293)
!10295 = !DILocation(line: 1009, column: 35, scope: !10293)
!10296 = !DILocation(line: 1009, column: 6, scope: !10254)
!10297 = !DILocation(line: 1011, column: 24, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10293, file: !9638, line: 1010, column: 3)
!10299 = !DILocation(line: 1011, column: 33, scope: !10298)
!10300 = !DILocation(line: 1012, column: 3, scope: !10298)
!10301 = !DILocation(line: 1013, column: 17, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10293, file: !9638, line: 1013, column: 11)
!10303 = !DILocation(line: 1013, column: 22, scope: !10302)
!10304 = !DILocation(line: 1013, column: 39, scope: !10302)
!10305 = !DILocation(line: 0, scope: !10302)
!10306 = !DILocation(line: 1013, column: 11, scope: !10293)
!10307 = !DILocation(line: 1015, column: 33, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10302, file: !9638, line: 1014, column: 3)
!10309 = !DILocation(line: 1016, column: 3, scope: !10308)
!10310 = !DILocation(line: 1019, column: 33, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10302, file: !9638, line: 1018, column: 3)
!10312 = !DILocation(line: 1023, column: 12, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10254, file: !9638, line: 1023, column: 6)
!10314 = !DILocation(line: 1023, column: 16, scope: !10313)
!10315 = !DILocation(line: 1029, column: 24, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10313, file: !9638, line: 1028, column: 3)
!10317 = !DILocation(line: 1029, column: 33, scope: !10316)
!10318 = !DILocation(line: 1033, column: 12, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10254, file: !9638, line: 1033, column: 6)
!10320 = !DILocation(line: 1033, column: 15, scope: !10319)
!10321 = !DILocation(line: 1033, column: 30, scope: !10319)
!10322 = !DILocation(line: 1033, column: 6, scope: !10254)
!10323 = !DILocation(line: 1039, column: 28, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10319, file: !9638, line: 1038, column: 3)
!10325 = !DILocation(line: 1039, column: 37, scope: !10324)
!10326 = !DILocation(line: 1041, column: 54, scope: !10254)
!10327 = !DILocation(line: 1041, column: 62, scope: !10254)
!10328 = !DILocation(line: 1041, column: 26, scope: !10254)
!10329 = !DILocation(line: 1041, column: 36, scope: !10254)
!10330 = !DILocation(line: 1042, column: 49, scope: !10254)
!10331 = !DILocation(line: 1042, column: 57, scope: !10254)
!10332 = !DILocation(line: 1042, column: 26, scope: !10254)
!10333 = !DILocation(line: 1042, column: 31, scope: !10254)
!10334 = !DILocation(line: 1043, column: 50, scope: !10254)
!10335 = !DILocation(line: 1043, column: 78, scope: !10254)
!10336 = !DILocation(line: 1043, column: 26, scope: !10254)
!10337 = !DILocation(line: 1043, column: 31, scope: !10254)
!10338 = !DILocation(line: 1044, column: 52, scope: !10254)
!10339 = !DILocation(line: 1044, column: 102, scope: !10254)
!10340 = !DILocation(line: 1044, column: 109, scope: !10254)
!10341 = !DILocation(line: 1044, column: 26, scope: !10254)
!10342 = !DILocation(line: 1044, column: 31, scope: !10254)
!10343 = !DILocation(line: 1045, column: 50, scope: !10254)
!10344 = !DILocation(line: 1045, column: 78, scope: !10254)
!10345 = !DILocation(line: 1045, column: 26, scope: !10254)
!10346 = !DILocation(line: 1045, column: 31, scope: !10254)
!10347 = !DILocation(line: 1046, column: 1, scope: !10254)
!10348 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !9638, file: !9638, line: 1056, type: !10349, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !10351)
!10349 = !DISubroutineType(types: !10350)
!10350 = !{null, !10001, !687}
!10351 = !{!10352, !10353}
!10352 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !10348, file: !9638, line: 1056, type: !10001)
!10353 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !10348, file: !9638, line: 1056, type: !687)
!10354 = !DILocation(line: 0, scope: !10348)
!10355 = !DILocation(line: 1059, column: 22, scope: !10348)
!10356 = !DILocation(line: 1059, column: 32, scope: !10348)
!10357 = !DILocation(line: 1062, column: 53, scope: !10348)
!10358 = !DILocation(line: 1062, column: 58, scope: !10348)
!10359 = !DILocation(line: 1062, column: 22, scope: !10348)
!10360 = !DILocation(line: 1062, column: 35, scope: !10348)
!10361 = !DILocation(line: 1065, column: 54, scope: !10348)
!10362 = !DILocation(line: 1065, column: 59, scope: !10348)
!10363 = !DILocation(line: 1065, column: 22, scope: !10348)
!10364 = !DILocation(line: 1065, column: 36, scope: !10348)
!10365 = !DILocation(line: 1068, column: 55, scope: !10348)
!10366 = !DILocation(line: 1068, column: 60, scope: !10348)
!10367 = !DILocation(line: 1068, column: 22, scope: !10348)
!10368 = !DILocation(line: 1068, column: 37, scope: !10348)
!10369 = !DILocation(line: 1071, column: 56, scope: !10348)
!10370 = !DILocation(line: 1071, column: 79, scope: !10348)
!10371 = !DILocation(line: 1071, column: 22, scope: !10348)
!10372 = !DILocation(line: 1071, column: 37, scope: !10348)
!10373 = !DILocation(line: 1074, column: 34, scope: !10348)
!10374 = !DILocation(line: 1074, column: 38, scope: !10348)
!10375 = !DILocation(line: 1074, column: 14, scope: !10348)
!10376 = !DILocation(line: 1075, column: 1, scope: !10348)
!10377 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !9638, file: !9638, line: 1082, type: !2913, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !322)
!10378 = !DILocation(line: 1085, column: 6, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10377, file: !9638, line: 1085, column: 6)
!10380 = !DILocation(line: 1085, column: 6, scope: !10377)
!10381 = !DILocation(line: 1088, column: 5, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10379, file: !9638, line: 1086, column: 3)
!10383 = !DILocation(line: 1091, column: 5, scope: !10382)
!10384 = !DILocation(line: 1092, column: 3, scope: !10382)
!10385 = !DILocation(line: 1093, column: 1, scope: !10377)
!10386 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !9638, file: !9638, line: 1099, type: !2913, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !322)
!10387 = !DILocation(line: 1104, column: 1, scope: !10386)
!10388 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !10389, file: !10389, line: 257, type: !5474, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !10390)
!10389 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10390 = !{!10391}
!10391 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10388, file: !10389, line: 257, type: !121)
!10392 = !DILocation(line: 0, scope: !10388)
!10393 = !DILocation(line: 260, column: 3, scope: !10388)
!10394 = !DILocation(line: 261, column: 1, scope: !10388)
!10395 = distinct !DISubprogram(name: "LL_InitTick", scope: !10396, file: !10396, line: 260, type: !8066, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !10397)
!10396 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10397 = !{!10398, !10399}
!10398 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10395, file: !10396, line: 260, type: !121)
!10399 = !DILocalVariable(name: "Ticks", arg: 2, scope: !10395, file: !10396, line: 260, type: !121)
!10400 = !DILocation(line: 0, scope: !10395)
!10401 = !DILocation(line: 263, column: 46, scope: !10395)
!10402 = !DILocation(line: 263, column: 55, scope: !10395)
!10403 = !DILocation(line: 263, column: 18, scope: !10395)
!10404 = !DILocation(line: 264, column: 18, scope: !10395)
!10405 = !DILocation(line: 265, column: 18, scope: !10395)
!10406 = !DILocation(line: 267, column: 1, scope: !10395)
!10407 = distinct !DISubprogram(name: "LL_mDelay", scope: !10389, file: !10389, line: 273, type: !5474, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !10408)
!10408 = !{!10409, !10410}
!10409 = !DILocalVariable(name: "Delay", arg: 1, scope: !10407, file: !10389, line: 273, type: !121)
!10410 = !DILocalVariable(name: "tmp", scope: !10407, file: !10389, line: 275, type: !120)
!10411 = !DILocation(line: 0, scope: !10407)
!10412 = !DILocation(line: 275, column: 3, scope: !10407)
!10413 = !DILocation(line: 275, column: 18, scope: !10407)
!10414 = !DILocation(line: 275, column: 33, scope: !10407)
!10415 = !DILocation(line: 277, column: 10, scope: !10407)
!10416 = !DILocation(line: 280, column: 12, scope: !10417)
!10417 = distinct !DILexicalBlock(scope: !10407, file: !10389, line: 280, column: 6)
!10418 = !DILocation(line: 285, column: 3, scope: !10407)
!10419 = !DILocation(line: 287, column: 18, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10421, file: !10389, line: 287, column: 8)
!10421 = distinct !DILexicalBlock(scope: !10407, file: !10389, line: 286, column: 3)
!10422 = !DILocation(line: 292, column: 1, scope: !10407)
!10423 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !10389, file: !10389, line: 323, type: !5474, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !10424)
!10424 = !{!10425}
!10425 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10423, file: !10389, line: 323, type: !121)
!10426 = !DILocation(line: 0, scope: !10423)
!10427 = !DILocation(line: 326, column: 19, scope: !10423)
!10428 = !DILocation(line: 327, column: 1, scope: !10423)
!10429 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !10389, file: !10389, line: 338, type: !10430, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !10433)
!10430 = !DISubroutineType(types: !10431)
!10431 = !{!10432, !121}
!10432 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !631, line: 201, baseType: !630)
!10433 = !{!10434, !10435, !10436, !10437, !10438}
!10434 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !10429, file: !10389, line: 338, type: !121)
!10435 = !DILocalVariable(name: "timeout", scope: !10429, file: !10389, line: 340, type: !121)
!10436 = !DILocalVariable(name: "getlatency", scope: !10429, file: !10389, line: 341, type: !121)
!10437 = !DILocalVariable(name: "latency", scope: !10429, file: !10389, line: 342, type: !121)
!10438 = !DILocalVariable(name: "status", scope: !10429, file: !10389, line: 343, type: !10432)
!10439 = !DILocation(line: 0, scope: !10429)
!10440 = !DILocation(line: 347, column: 21, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10429, file: !10389, line: 347, column: 6)
!10442 = !DILocation(line: 347, column: 6, scope: !10429)
!10443 = !DILocation(line: 353, column: 8, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10445, file: !10389, line: 353, column: 8)
!10445 = distinct !DILexicalBlock(scope: !10441, file: !10389, line: 352, column: 3)
!10446 = !DILocation(line: 353, column: 40, scope: !10444)
!10447 = !DILocation(line: 353, column: 8, scope: !10445)
!10448 = !DILocation(line: 374, column: 55, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10450, file: !10389, line: 374, column: 10)
!10450 = distinct !DILexicalBlock(scope: !10444, file: !10389, line: 354, column: 5)
!10451 = !DILocation(line: 368, column: 26, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10450, file: !10389, line: 368, column: 10)
!10453 = !DILocation(line: 368, column: 55, scope: !10452)
!10454 = !DILocation(line: 380, column: 57, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10456, file: !10389, line: 380, column: 12)
!10456 = distinct !DILexicalBlock(scope: !10449, file: !10389, line: 379, column: 7)
!10457 = !DILocation(line: 387, column: 8, scope: !10458)
!10458 = distinct !DILexicalBlock(scope: !10445, file: !10389, line: 387, column: 8)
!10459 = !DILocation(line: 387, column: 40, scope: !10458)
!10460 = !DILocation(line: 387, column: 8, scope: !10445)
!10461 = !DILocation(line: 407, column: 26, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10463, file: !10389, line: 407, column: 10)
!10463 = distinct !DILexicalBlock(scope: !10458, file: !10389, line: 388, column: 5)
!10464 = !DILocation(line: 407, column: 55, scope: !10462)
!10465 = !DILocation(line: 413, column: 28, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10467, file: !10389, line: 413, column: 12)
!10467 = distinct !DILexicalBlock(scope: !10462, file: !10389, line: 412, column: 7)
!10468 = !DILocation(line: 413, column: 57, scope: !10466)
!10469 = !DILocation(line: 0, scope: !10445)
!10470 = !DILocation(line: 420, column: 8, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10445, file: !10389, line: 420, column: 8)
!10472 = !DILocation(line: 420, column: 40, scope: !10471)
!10473 = !DILocation(line: 420, column: 8, scope: !10445)
!10474 = !DILocation(line: 429, column: 26, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10476, file: !10389, line: 429, column: 10)
!10476 = distinct !DILexicalBlock(scope: !10471, file: !10389, line: 421, column: 5)
!10477 = !DILocation(line: 429, column: 55, scope: !10475)
!10478 = !DILocation(line: 435, column: 28, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10480, file: !10389, line: 435, column: 12)
!10480 = distinct !DILexicalBlock(scope: !10475, file: !10389, line: 434, column: 7)
!10481 = !DILocation(line: 435, column: 57, scope: !10479)
!10482 = !DILocation(line: 444, column: 5, scope: !10445)
!10483 = !DILocation(line: 448, column: 5, scope: !10445)
!10484 = !DILocation(line: 451, column: 18, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10445, file: !10389, line: 449, column: 5)
!10486 = !DILocation(line: 452, column: 12, scope: !10485)
!10487 = !DILocation(line: 453, column: 26, scope: !10445)
!10488 = !DILocation(line: 453, column: 38, scope: !10445)
!10489 = !DILocation(line: 453, column: 5, scope: !10485)
!10490 = distinct !{!10490, !10483, !10491}
!10491 = !DILocation(line: 453, column: 54, scope: !10445)
!10492 = !DILocation(line: 0, scope: !10441)
!10493 = !DILocation(line: 464, column: 3, scope: !10429)
!10494 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !10495, file: !10495, line: 519, type: !5464, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !322)
!10495 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10496 = !DILocation(line: 521, column: 21, scope: !10494)
!10497 = !DILocation(line: 521, column: 3, scope: !10494)
!10498 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5230, file: !5230, line: 1543, type: !5474, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !10499)
!10499 = !{!10500}
!10500 = !DILocalVariable(name: "Latency", arg: 1, scope: !10498, file: !5230, line: 1543, type: !121)
!10501 = !DILocation(line: 0, scope: !10498)
!10502 = !DILocation(line: 1545, column: 3, scope: !10498)
!10503 = !DILocation(line: 1546, column: 1, scope: !10498)
!10504 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5230, file: !5230, line: 1569, type: !5464, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !322)
!10505 = !DILocation(line: 1571, column: 21, scope: !10504)
!10506 = !DILocation(line: 1571, column: 3, scope: !10504)
!10507 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !10389, file: !10389, line: 483, type: !10508, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !10524)
!10508 = !DISubroutineType(types: !10509)
!10509 = !{!10432, !10510, !10517}
!10510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10511, size: 32)
!10511 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !10396, line: 114, baseType: !10512)
!10512 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10396, line: 94, size: 96, elements: !10513)
!10513 = !{!10514, !10515, !10516}
!10514 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10512, file: !10396, line: 96, baseType: !121, size: 32)
!10515 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10512, file: !10396, line: 102, baseType: !121, size: 32, offset: 32)
!10516 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10512, file: !10396, line: 109, baseType: !121, size: 32, offset: 64)
!10517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10518, size: 32)
!10518 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !10396, line: 139, baseType: !10519)
!10519 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10396, line: 119, size: 96, elements: !10520)
!10520 = !{!10521, !10522, !10523}
!10521 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10519, file: !10396, line: 121, baseType: !121, size: 32)
!10522 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10519, file: !10396, line: 127, baseType: !121, size: 32, offset: 32)
!10523 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10519, file: !10396, line: 133, baseType: !121, size: 32, offset: 64)
!10524 = !{!10525, !10526, !10527, !10528}
!10525 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !10507, file: !10389, line: 483, type: !10510)
!10526 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10507, file: !10389, line: 484, type: !10517)
!10527 = !DILocalVariable(name: "status", scope: !10507, file: !10389, line: 486, type: !10432)
!10528 = !DILocalVariable(name: "pllfreq", scope: !10507, file: !10389, line: 487, type: !121)
!10529 = !DILocation(line: 0, scope: !10507)
!10530 = !DILocation(line: 490, column: 6, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10507, file: !10389, line: 490, column: 6)
!10532 = !DILocation(line: 490, column: 25, scope: !10531)
!10533 = !DILocation(line: 490, column: 6, scope: !10507)
!10534 = !DILocation(line: 493, column: 15, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10531, file: !10389, line: 491, column: 3)
!10536 = !DILocation(line: 496, column: 8, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10535, file: !10389, line: 496, column: 8)
!10538 = !DILocation(line: 496, column: 29, scope: !10537)
!10539 = !DILocation(line: 496, column: 8, scope: !10535)
!10540 = !DILocation(line: 498, column: 7, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10537, file: !10389, line: 497, column: 5)
!10542 = !DILocation(line: 499, column: 7, scope: !10541)
!10543 = !DILocation(line: 499, column: 14, scope: !10541)
!10544 = !DILocation(line: 499, column: 35, scope: !10541)
!10545 = distinct !{!10545, !10542, !10546}
!10546 = !DILocation(line: 502, column: 7, scope: !10541)
!10547 = !DILocation(line: 506, column: 76, scope: !10535)
!10548 = !DILocation(line: 506, column: 103, scope: !10535)
!10549 = !DILocation(line: 507, column: 54, scope: !10535)
!10550 = !DILocation(line: 506, column: 5, scope: !10535)
!10551 = !DILocation(line: 510, column: 14, scope: !10535)
!10552 = !DILocation(line: 511, column: 3, scope: !10535)
!10553 = !DILocation(line: 0, scope: !10531)
!10554 = !DILocation(line: 518, column: 3, scope: !10507)
!10555 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !10389, file: !10389, line: 642, type: !10556, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !10558)
!10556 = !DISubroutineType(types: !10557)
!10557 = !{!10432}
!10558 = !{!10559}
!10559 = !DILocalVariable(name: "status", scope: !10555, file: !10389, line: 644, type: !10432)
!10560 = !DILocation(line: 0, scope: !10555)
!10561 = !DILocation(line: 647, column: 6, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10555, file: !10389, line: 647, column: 6)
!10563 = !DILocation(line: 647, column: 27, scope: !10562)
!10564 = !DILocation(line: 663, column: 6, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10555, file: !10389, line: 663, column: 6)
!10566 = !DILocation(line: 663, column: 30, scope: !10565)
!10567 = !DILocation(line: 663, column: 6, scope: !10555)
!10568 = !DILocation(line: 669, column: 3, scope: !10555)
!10569 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !10389, file: !10389, line: 611, type: !10570, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !10572)
!10570 = !DISubroutineType(types: !10571)
!10571 = !{!121, !121, !10510}
!10572 = !{!10573, !10574, !10575}
!10573 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !10569, file: !10389, line: 611, type: !121)
!10574 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !10569, file: !10389, line: 611, type: !10510)
!10575 = !DILocalVariable(name: "pllfreq", scope: !10569, file: !10389, line: 613, type: !121)
!10576 = !DILocation(line: 0, scope: !10569)
!10577 = !DILocation(line: 622, column: 56, scope: !10569)
!10578 = !DILocation(line: 622, column: 61, scope: !10569)
!10579 = !DILocation(line: 622, column: 32, scope: !10569)
!10580 = !DILocation(line: 626, column: 45, scope: !10569)
!10581 = !DILocation(line: 626, column: 50, scope: !10569)
!10582 = !DILocation(line: 626, column: 21, scope: !10569)
!10583 = !DILocation(line: 630, column: 47, scope: !10569)
!10584 = !DILocation(line: 630, column: 82, scope: !10569)
!10585 = !DILocation(line: 630, column: 21, scope: !10569)
!10586 = !DILocation(line: 633, column: 3, scope: !10569)
!10587 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !7416, file: !7416, line: 3007, type: !5464, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !322)
!10588 = !DILocation(line: 3009, column: 11, scope: !10587)
!10589 = !DILocation(line: 3009, column: 44, scope: !10587)
!10590 = !DILocation(line: 3009, column: 3, scope: !10587)
!10591 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !7416, file: !7416, line: 2987, type: !2913, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !322)
!10592 = !DILocation(line: 2989, column: 3, scope: !10591)
!10593 = !DILocation(line: 2990, column: 1, scope: !10591)
!10594 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !7416, file: !7416, line: 4304, type: !7540, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !10595)
!10595 = !{!10596, !10597, !10598, !10599}
!10596 = !DILocalVariable(name: "Source", arg: 1, scope: !10594, file: !7416, line: 4304, type: !121)
!10597 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10594, file: !7416, line: 4304, type: !121)
!10598 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10594, file: !7416, line: 4304, type: !121)
!10599 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10594, file: !7416, line: 4304, type: !121)
!10600 = !DILocation(line: 0, scope: !10594)
!10601 = !DILocation(line: 4306, column: 3, scope: !10594)
!10602 = !DILocation(line: 4308, column: 3, scope: !10594)
!10603 = !DILocation(line: 4312, column: 1, scope: !10594)
!10604 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !10389, file: !10389, line: 681, type: !10605, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !10607)
!10605 = !DISubroutineType(types: !10606)
!10606 = !{!10432, !121, !10517}
!10607 = !{!10608, !10609, !10610, !10611}
!10608 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !10604, file: !10389, line: 681, type: !121)
!10609 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10604, file: !10389, line: 681, type: !10517)
!10610 = !DILocalVariable(name: "status", scope: !10604, file: !10389, line: 683, type: !10432)
!10611 = !DILocalVariable(name: "hclk_frequency", scope: !10604, file: !10389, line: 684, type: !121)
!10612 = !DILocation(line: 0, scope: !10604)
!10613 = !DILocation(line: 691, column: 20, scope: !10604)
!10614 = !DILocation(line: 694, column: 6, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10604, file: !10389, line: 694, column: 6)
!10616 = !DILocation(line: 694, column: 22, scope: !10615)
!10617 = !DILocation(line: 694, column: 6, scope: !10604)
!10618 = !DILocation(line: 697, column: 14, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10615, file: !10389, line: 695, column: 3)
!10620 = !DILocation(line: 701, column: 13, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10604, file: !10389, line: 701, column: 6)
!10622 = !DILocation(line: 701, column: 6, scope: !10604)
!10623 = !DILocation(line: 704, column: 5, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10621, file: !10389, line: 702, column: 3)
!10625 = !DILocation(line: 705, column: 5, scope: !10624)
!10626 = !DILocation(line: 705, column: 12, scope: !10624)
!10627 = !DILocation(line: 705, column: 33, scope: !10624)
!10628 = distinct !{!10628, !10625, !10629}
!10629 = !DILocation(line: 708, column: 5, scope: !10624)
!10630 = !DILocation(line: 711, column: 49, scope: !10624)
!10631 = !DILocation(line: 711, column: 5, scope: !10624)
!10632 = !DILocation(line: 712, column: 5, scope: !10624)
!10633 = !DILocation(line: 713, column: 5, scope: !10624)
!10634 = !DILocation(line: 713, column: 12, scope: !10624)
!10635 = !DILocation(line: 713, column: 37, scope: !10624)
!10636 = distinct !{!10636, !10633, !10637}
!10637 = !DILocation(line: 716, column: 5, scope: !10624)
!10638 = !DILocation(line: 719, column: 50, scope: !10624)
!10639 = !DILocation(line: 719, column: 5, scope: !10624)
!10640 = !DILocation(line: 720, column: 50, scope: !10624)
!10641 = !DILocation(line: 720, column: 5, scope: !10624)
!10642 = !DILocation(line: 721, column: 3, scope: !10624)
!10643 = !DILocation(line: 724, column: 6, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10604, file: !10389, line: 724, column: 6)
!10645 = !DILocation(line: 724, column: 22, scope: !10644)
!10646 = !DILocation(line: 724, column: 6, scope: !10604)
!10647 = !DILocation(line: 727, column: 14, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10644, file: !10389, line: 725, column: 3)
!10649 = !DILocation(line: 728, column: 3, scope: !10648)
!10650 = !DILocation(line: 731, column: 13, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10604, file: !10389, line: 731, column: 6)
!10652 = !DILocation(line: 731, column: 6, scope: !10604)
!10653 = !DILocation(line: 733, column: 5, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10651, file: !10389, line: 732, column: 3)
!10655 = !DILocation(line: 734, column: 3, scope: !10654)
!10656 = !DILocation(line: 736, column: 3, scope: !10604)
!10657 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !7416, file: !7416, line: 4184, type: !2913, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !322)
!10658 = !DILocation(line: 4186, column: 3, scope: !10657)
!10659 = !DILocation(line: 4187, column: 1, scope: !10657)
!10660 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !7416, file: !7416, line: 4205, type: !5464, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !322)
!10661 = !DILocation(line: 4207, column: 11, scope: !10660)
!10662 = !DILocation(line: 4207, column: 44, scope: !10660)
!10663 = !DILocation(line: 4207, column: 3, scope: !10660)
!10664 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !7416, file: !7416, line: 3224, type: !5474, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !10665)
!10665 = !{!10666}
!10666 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10664, file: !7416, line: 3224, type: !121)
!10667 = !DILocation(line: 0, scope: !10664)
!10668 = !DILocation(line: 3226, column: 3, scope: !10664)
!10669 = !DILocation(line: 3227, column: 1, scope: !10664)
!10670 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !7416, file: !7416, line: 3188, type: !5474, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !10671)
!10671 = !{!10672}
!10672 = !DILocalVariable(name: "Source", arg: 1, scope: !10670, file: !7416, line: 3188, type: !121)
!10673 = !DILocation(line: 0, scope: !10670)
!10674 = !DILocation(line: 3190, column: 3, scope: !10670)
!10675 = !DILocation(line: 3191, column: 1, scope: !10670)
!10676 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !7416, file: !7416, line: 3204, type: !5464, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !322)
!10677 = !DILocation(line: 3206, column: 21, scope: !10676)
!10678 = !DILocation(line: 3206, column: 3, scope: !10676)
!10679 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !7416, file: !7416, line: 3240, type: !5474, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !10680)
!10680 = !{!10681}
!10681 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10679, file: !7416, line: 3240, type: !121)
!10682 = !DILocation(line: 0, scope: !10679)
!10683 = !DILocation(line: 3242, column: 3, scope: !10679)
!10684 = !DILocation(line: 3243, column: 1, scope: !10679)
!10685 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !7416, file: !7416, line: 3256, type: !5474, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !10686)
!10686 = !{!10687}
!10687 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10685, file: !7416, line: 3256, type: !121)
!10688 = !DILocation(line: 0, scope: !10685)
!10689 = !DILocation(line: 3258, column: 3, scope: !10685)
!10690 = !DILocation(line: 3259, column: 1, scope: !10685)
!10691 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !7416, file: !7416, line: 5153, type: !5464, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !322)
!10692 = !DILocation(line: 5155, column: 11, scope: !10691)
!10693 = !DILocation(line: 5155, column: 47, scope: !10691)
!10694 = !DILocation(line: 5155, column: 3, scope: !10691)
!10695 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !10389, file: !10389, line: 540, type: !10696, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !10698)
!10696 = !DISubroutineType(types: !10697)
!10697 = !{!10432, !121, !121, !10510, !10517}
!10698 = !{!10699, !10700, !10701, !10702, !10703, !10704}
!10699 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !10695, file: !10389, line: 540, type: !121)
!10700 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !10695, file: !10389, line: 540, type: !121)
!10701 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !10695, file: !10389, line: 541, type: !10510)
!10702 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !10695, file: !10389, line: 541, type: !10517)
!10703 = !DILocalVariable(name: "status", scope: !10695, file: !10389, line: 543, type: !10432)
!10704 = !DILocalVariable(name: "pllfreq", scope: !10695, file: !10389, line: 544, type: !121)
!10705 = !DILocation(line: 0, scope: !10695)
!10706 = !DILocation(line: 551, column: 6, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10695, file: !10389, line: 551, column: 6)
!10708 = !DILocation(line: 551, column: 25, scope: !10707)
!10709 = !DILocation(line: 551, column: 6, scope: !10695)
!10710 = !DILocation(line: 554, column: 15, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10707, file: !10389, line: 552, column: 3)
!10712 = !DILocation(line: 557, column: 8, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10711, file: !10389, line: 557, column: 8)
!10714 = !DILocation(line: 557, column: 29, scope: !10713)
!10715 = !DILocation(line: 557, column: 8, scope: !10711)
!10716 = !DILocation(line: 560, column: 20, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10718, file: !10389, line: 560, column: 10)
!10718 = distinct !DILexicalBlock(scope: !10713, file: !10389, line: 558, column: 5)
!10719 = !DILocation(line: 560, column: 10, scope: !10718)
!10720 = !DILocation(line: 562, column: 9, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10717, file: !10389, line: 561, column: 7)
!10722 = !DILocation(line: 563, column: 7, scope: !10721)
!10723 = !DILocation(line: 566, column: 9, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10717, file: !10389, line: 565, column: 7)
!10725 = !DILocation(line: 570, column: 7, scope: !10718)
!10726 = !DILocation(line: 571, column: 7, scope: !10718)
!10727 = !DILocation(line: 571, column: 14, scope: !10718)
!10728 = !DILocation(line: 571, column: 35, scope: !10718)
!10729 = distinct !{!10729, !10726, !10730}
!10730 = !DILocation(line: 574, column: 7, scope: !10718)
!10731 = !DILocation(line: 578, column: 76, scope: !10711)
!10732 = !DILocation(line: 578, column: 103, scope: !10711)
!10733 = !DILocation(line: 579, column: 54, scope: !10711)
!10734 = !DILocation(line: 578, column: 5, scope: !10711)
!10735 = !DILocation(line: 582, column: 14, scope: !10711)
!10736 = !DILocation(line: 583, column: 3, scope: !10711)
!10737 = !DILocation(line: 0, scope: !10707)
!10738 = !DILocation(line: 590, column: 3, scope: !10695)
!10739 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !7416, file: !7416, line: 2969, type: !5464, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !322)
!10740 = !DILocation(line: 2971, column: 11, scope: !10739)
!10741 = !DILocation(line: 2971, column: 44, scope: !10739)
!10742 = !DILocation(line: 2971, column: 3, scope: !10739)
!10743 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !7416, file: !7416, line: 2929, type: !2913, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !322)
!10744 = !DILocation(line: 2931, column: 3, scope: !10743)
!10745 = !DILocation(line: 2932, column: 1, scope: !10743)
!10746 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !7416, file: !7416, line: 2939, type: !2913, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !322)
!10747 = !DILocation(line: 2941, column: 3, scope: !10746)
!10748 = !DILocation(line: 2942, column: 1, scope: !10746)
!10749 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !7416, file: !7416, line: 2949, type: !2913, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !322)
!10750 = !DILocation(line: 2951, column: 3, scope: !10749)
!10751 = !DILocation(line: 2952, column: 1, scope: !10749)
!10752 = distinct !DISubprogram(name: "z_device_state_init", scope: !10753, file: !10753, line: 23, type: !2913, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !10754)
!10753 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10754 = !{!10755}
!10755 = !DILocalVariable(name: "dev", scope: !10752, file: !10753, line: 25, type: !10756)
!10756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10757, size: 32)
!10757 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10758)
!10758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !10759)
!10759 = !{!10760, !10761, !10762, !10763, !10769, !10770}
!10760 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10758, file: !141, line: 380, baseType: !144, size: 32)
!10761 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !10758, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!10762 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !10758, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!10763 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10758, file: !141, line: 386, baseType: !10764, size: 32, offset: 96)
!10764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10765, size: 32)
!10765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !10766)
!10766 = !{!10767, !10768}
!10767 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !10765, file: !141, line: 359, baseType: !154, size: 8)
!10768 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !10765, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!10769 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10758, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!10770 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !10758, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!10771 = !DILocation(line: 0, scope: !10752)
!10772 = !DILocation(line: 31, column: 1, scope: !10752)
!10773 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !10753, file: !10753, line: 33, type: !10774, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !10776)
!10774 = !DISubroutineType(types: !10775)
!10775 = !{!10756, !144}
!10776 = !{!10777, !10778}
!10777 = !DILocalVariable(name: "name", arg: 1, scope: !10773, file: !10753, line: 33, type: !144)
!10778 = !DILocalVariable(name: "dev", scope: !10773, file: !10753, line: 35, type: !10756)
!10779 = !DILocation(line: 0, scope: !10773)
!10780 = !DILocation(line: 40, column: 12, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10773, file: !10753, line: 40, column: 6)
!10782 = !DILocation(line: 40, column: 21, scope: !10781)
!10783 = !DILocation(line: 40, column: 25, scope: !10781)
!10784 = !DILocation(line: 40, column: 33, scope: !10781)
!10785 = !DILocation(line: 40, column: 6, scope: !10773)
!10786 = !DILocation(line: 55, column: 2, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10773, file: !10753, line: 55, column: 2)
!10788 = !DILocation(line: 50, column: 7, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10790, file: !10753, line: 50, column: 7)
!10790 = distinct !DILexicalBlock(scope: !10791, file: !10753, line: 49, column: 57)
!10791 = distinct !DILexicalBlock(scope: !10792, file: !10753, line: 49, column: 2)
!10792 = distinct !DILexicalBlock(scope: !10773, file: !10753, line: 49, column: 2)
!10793 = !DILocation(line: 50, column: 30, scope: !10789)
!10794 = !DILocation(line: 50, column: 39, scope: !10789)
!10795 = !DILocation(line: 50, column: 44, scope: !10789)
!10796 = !DILocation(line: 50, column: 7, scope: !10790)
!10797 = !DILocation(line: 49, column: 53, scope: !10791)
!10798 = !DILocation(line: 49, column: 33, scope: !10791)
!10799 = !DILocation(line: 49, column: 2, scope: !10792)
!10800 = distinct !{!10800, !10799, !10801}
!10801 = !DILocation(line: 53, column: 2, scope: !10792)
!10802 = !DILocation(line: 56, column: 7, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10804, file: !10753, line: 56, column: 7)
!10804 = distinct !DILexicalBlock(scope: !10805, file: !10753, line: 55, column: 57)
!10805 = distinct !DILexicalBlock(scope: !10787, file: !10753, line: 55, column: 2)
!10806 = !DILocation(line: 56, column: 30, scope: !10803)
!10807 = !DILocation(line: 56, column: 52, scope: !10803)
!10808 = !DILocation(line: 56, column: 34, scope: !10803)
!10809 = !DILocation(line: 56, column: 58, scope: !10803)
!10810 = !DILocation(line: 56, column: 7, scope: !10804)
!10811 = !DILocation(line: 55, column: 53, scope: !10805)
!10812 = !DILocation(line: 55, column: 33, scope: !10805)
!10813 = distinct !{!10813, !10786, !10814}
!10814 = !DILocation(line: 59, column: 2, scope: !10787)
!10815 = !DILocation(line: 62, column: 1, scope: !10773)
!10816 = distinct !DISubprogram(name: "z_device_is_ready", scope: !10753, file: !10753, line: 93, type: !10817, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !10819)
!10817 = !DISubroutineType(types: !10818)
!10818 = !{!157, !10756}
!10819 = !{!10820}
!10820 = !DILocalVariable(name: "dev", arg: 1, scope: !10816, file: !10753, line: 93, type: !10756)
!10821 = !DILocation(line: 0, scope: !10816)
!10822 = !DILocation(line: 99, column: 10, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10816, file: !10753, line: 99, column: 6)
!10824 = !DILocation(line: 99, column: 6, scope: !10816)
!10825 = !DILocation(line: 103, column: 14, scope: !10816)
!10826 = !DILocation(line: 103, column: 21, scope: !10816)
!10827 = !DILocation(line: 103, column: 33, scope: !10816)
!10828 = !DILocation(line: 103, column: 49, scope: !10816)
!10829 = !DILocation(line: 103, column: 58, scope: !10816)
!10830 = !DILocation(line: 104, column: 1, scope: !10816)
!10831 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !10753, file: !10753, line: 87, type: !10832, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !10835)
!10832 = !DISubroutineType(types: !10833)
!10833 = !{!200, !10834}
!10834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10756, size: 32)
!10835 = !{!10836}
!10836 = !DILocalVariable(name: "devices", arg: 1, scope: !10831, file: !10753, line: 87, type: !10834)
!10837 = !DILocation(line: 0, scope: !10831)
!10838 = !DILocation(line: 89, column: 11, scope: !10831)
!10839 = !DILocation(line: 90, column: 2, scope: !10831)
!10840 = distinct !DISubprogram(name: "device_required_foreach", scope: !10753, file: !10753, line: 125, type: !10841, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !10847)
!10841 = !DISubroutineType(types: !10842)
!10842 = !{!103, !10756, !10843, !102}
!10843 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !141, line: 471, baseType: !10844)
!10844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10845, size: 32)
!10845 = !DISubroutineType(types: !10846)
!10846 = !{!103, !10756, !102}
!10847 = !{!10848, !10849, !10850, !10851, !10852}
!10848 = !DILocalVariable(name: "dev", arg: 1, scope: !10840, file: !10753, line: 125, type: !10756)
!10849 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10840, file: !10753, line: 126, type: !10843)
!10850 = !DILocalVariable(name: "context", arg: 3, scope: !10840, file: !10753, line: 127, type: !102)
!10851 = !DILocalVariable(name: "handle_count", scope: !10840, file: !10753, line: 129, type: !200)
!10852 = !DILocalVariable(name: "handles", scope: !10840, file: !10753, line: 130, type: !160)
!10853 = !DILocation(line: 0, scope: !10840)
!10854 = !DILocation(line: 129, column: 2, scope: !10840)
!10855 = !DILocation(line: 129, column: 9, scope: !10840)
!10856 = !DILocation(line: 130, column: 35, scope: !10840)
!10857 = !DILocation(line: 132, column: 33, scope: !10840)
!10858 = !DILocation(line: 132, column: 9, scope: !10840)
!10859 = !DILocation(line: 133, column: 1, scope: !10840)
!10860 = !DILocation(line: 132, column: 2, scope: !10840)
!10861 = distinct !DISubprogram(name: "device_required_handles_get", scope: !141, file: !141, line: 493, type: !10862, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !10864)
!10862 = !DISubroutineType(types: !10863)
!10863 = !{!160, !10756, !2368}
!10864 = !{!10865, !10866, !10867, !10868}
!10865 = !DILocalVariable(name: "dev", arg: 1, scope: !10861, file: !141, line: 493, type: !10756)
!10866 = !DILocalVariable(name: "count", arg: 2, scope: !10861, file: !141, line: 493, type: !2368)
!10867 = !DILocalVariable(name: "rv", scope: !10861, file: !141, line: 495, type: !160)
!10868 = !DILocalVariable(name: "i", scope: !10869, file: !141, line: 498, type: !200)
!10869 = distinct !DILexicalBlock(scope: !10870, file: !141, line: 497, column: 18)
!10870 = distinct !DILexicalBlock(scope: !10861, file: !141, line: 497, column: 6)
!10871 = !DILocation(line: 0, scope: !10861)
!10872 = !DILocation(line: 495, column: 35, scope: !10861)
!10873 = !DILocation(line: 497, column: 9, scope: !10870)
!10874 = !DILocation(line: 497, column: 6, scope: !10861)
!10875 = !DILocation(line: 0, scope: !10869)
!10876 = !DILocation(line: 500, column: 11, scope: !10869)
!10877 = !DILocation(line: 500, column: 40, scope: !10869)
!10878 = !DILocation(line: 502, column: 4, scope: !10879)
!10879 = distinct !DILexicalBlock(scope: !10869, file: !141, line: 501, column: 40)
!10880 = distinct !{!10880, !10881, !10882}
!10881 = !DILocation(line: 500, column: 3, scope: !10869)
!10882 = !DILocation(line: 503, column: 3, scope: !10869)
!10883 = !DILocation(line: 504, column: 10, scope: !10869)
!10884 = !DILocation(line: 505, column: 2, scope: !10869)
!10885 = !DILocation(line: 507, column: 2, scope: !10861)
!10886 = distinct !DISubprogram(name: "device_visitor", scope: !10753, file: !10753, line: 106, type: !10887, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !10889)
!10887 = !DISubroutineType(types: !10888)
!10888 = !{!103, !160, !200, !10843, !102}
!10889 = !{!10890, !10891, !10892, !10893, !10894, !10896, !10899, !10900}
!10890 = !DILocalVariable(name: "handles", arg: 1, scope: !10886, file: !10753, line: 106, type: !160)
!10891 = !DILocalVariable(name: "handle_count", arg: 2, scope: !10886, file: !10753, line: 107, type: !200)
!10892 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !10886, file: !10753, line: 108, type: !10843)
!10893 = !DILocalVariable(name: "context", arg: 4, scope: !10886, file: !10753, line: 109, type: !102)
!10894 = !DILocalVariable(name: "i", scope: !10895, file: !10753, line: 112, type: !200)
!10895 = distinct !DILexicalBlock(scope: !10886, file: !10753, line: 112, column: 2)
!10896 = !DILocalVariable(name: "dh", scope: !10897, file: !10753, line: 113, type: !162)
!10897 = distinct !DILexicalBlock(scope: !10898, file: !10753, line: 112, column: 44)
!10898 = distinct !DILexicalBlock(scope: !10895, file: !10753, line: 112, column: 2)
!10899 = !DILocalVariable(name: "rdev", scope: !10897, file: !10753, line: 114, type: !10756)
!10900 = !DILocalVariable(name: "rc", scope: !10897, file: !10753, line: 115, type: !103)
!10901 = !DILocation(line: 0, scope: !10886)
!10902 = !DILocation(line: 0, scope: !10895)
!10903 = !DILocation(line: 112, column: 23, scope: !10898)
!10904 = !DILocation(line: 112, column: 2, scope: !10895)
!10905 = distinct !{!10905, !10904, !10906}
!10906 = !DILocation(line: 120, column: 2, scope: !10895)
!10907 = !DILocation(line: 113, column: 24, scope: !10897)
!10908 = !DILocation(line: 0, scope: !10897)
!10909 = !DILocation(line: 114, column: 31, scope: !10897)
!10910 = !DILocation(line: 115, column: 12, scope: !10897)
!10911 = !DILocation(line: 117, column: 10, scope: !10912)
!10912 = distinct !DILexicalBlock(scope: !10897, file: !10753, line: 117, column: 7)
!10913 = !DILocation(line: 112, column: 39, scope: !10898)
!10914 = !DILocation(line: 123, column: 1, scope: !10886)
!10915 = distinct !DISubprogram(name: "device_from_handle", scope: !141, file: !141, line: 439, type: !10916, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !10918)
!10916 = !DISubroutineType(types: !10917)
!10917 = !{!10756, !162}
!10918 = !{!10919, !10920, !10921}
!10919 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !10915, file: !141, line: 439, type: !162)
!10920 = !DILocalVariable(name: "dev", scope: !10915, file: !141, line: 443, type: !10756)
!10921 = !DILocalVariable(name: "numdev", scope: !10915, file: !141, line: 444, type: !200)
!10922 = !DILocation(line: 0, scope: !10915)
!10923 = !DILocation(line: 446, column: 7, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !10915, file: !141, line: 446, column: 6)
!10925 = !DILocation(line: 446, column: 18, scope: !10924)
!10926 = !DILocation(line: 446, column: 23, scope: !10924)
!10927 = !DILocation(line: 450, column: 2, scope: !10915)
!10928 = distinct !DISubprogram(name: "device_supported_foreach", scope: !10753, file: !10753, line: 135, type: !10841, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !10929)
!10929 = !{!10930, !10931, !10932, !10933, !10934}
!10930 = !DILocalVariable(name: "dev", arg: 1, scope: !10928, file: !10753, line: 135, type: !10756)
!10931 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10928, file: !10753, line: 136, type: !10843)
!10932 = !DILocalVariable(name: "context", arg: 3, scope: !10928, file: !10753, line: 137, type: !102)
!10933 = !DILocalVariable(name: "handle_count", scope: !10928, file: !10753, line: 139, type: !200)
!10934 = !DILocalVariable(name: "handles", scope: !10928, file: !10753, line: 140, type: !160)
!10935 = !DILocation(line: 0, scope: !10928)
!10936 = !DILocation(line: 139, column: 2, scope: !10928)
!10937 = !DILocation(line: 139, column: 9, scope: !10928)
!10938 = !DILocation(line: 140, column: 35, scope: !10928)
!10939 = !DILocation(line: 142, column: 33, scope: !10928)
!10940 = !DILocation(line: 142, column: 9, scope: !10928)
!10941 = !DILocation(line: 143, column: 1, scope: !10928)
!10942 = !DILocation(line: 142, column: 2, scope: !10928)
!10943 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !141, file: !141, line: 573, type: !10862, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2873, retainedNodes: !10944)
!10944 = !{!10945, !10946, !10947, !10948, !10949}
!10945 = !DILocalVariable(name: "dev", arg: 1, scope: !10943, file: !141, line: 573, type: !10756)
!10946 = !DILocalVariable(name: "count", arg: 2, scope: !10943, file: !141, line: 573, type: !2368)
!10947 = !DILocalVariable(name: "rv", scope: !10943, file: !141, line: 575, type: !160)
!10948 = !DILocalVariable(name: "region", scope: !10943, file: !141, line: 576, type: !200)
!10949 = !DILocalVariable(name: "i", scope: !10943, file: !141, line: 577, type: !200)
!10950 = !DILocation(line: 0, scope: !10943)
!10951 = !DILocation(line: 575, column: 35, scope: !10943)
!10952 = !DILocation(line: 579, column: 9, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10943, file: !141, line: 579, column: 6)
!10954 = !DILocation(line: 579, column: 6, scope: !10943)
!10955 = !DILocation(line: 582, column: 8, scope: !10956)
!10956 = distinct !DILexicalBlock(scope: !10957, file: !141, line: 582, column: 8)
!10957 = distinct !DILexicalBlock(scope: !10958, file: !141, line: 581, column: 23)
!10958 = distinct !DILexicalBlock(scope: !10953, file: !141, line: 579, column: 18)
!10959 = !DILocation(line: 582, column: 12, scope: !10956)
!10960 = !DILocation(line: 585, column: 6, scope: !10957)
!10961 = !DILocation(line: 0, scope: !10958)
!10962 = !DILocation(line: 581, column: 17, scope: !10958)
!10963 = !DILocation(line: 581, column: 3, scope: !10958)
!10964 = !DILocation(line: 588, column: 10, scope: !10958)
!10965 = !DILocation(line: 588, column: 16, scope: !10958)
!10966 = !DILocation(line: 589, column: 4, scope: !10967)
!10967 = distinct !DILexicalBlock(scope: !10958, file: !141, line: 588, column: 39)
!10968 = !DILocation(line: 588, column: 3, scope: !10958)
!10969 = distinct !{!10969, !10968, !10970}
!10970 = !DILocation(line: 590, column: 3, scope: !10958)
!10971 = !DILocation(line: 591, column: 10, scope: !10958)
!10972 = !DILocation(line: 592, column: 2, scope: !10958)
!10973 = !DILocation(line: 575, column: 25, scope: !10943)
!10974 = !DILocation(line: 594, column: 2, scope: !10943)
!10975 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1612, file: !1612, line: 49, type: !10976, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1609, retainedNodes: !322)
!10976 = !DISubroutineType(types: !10977)
!10977 = !{!2361}
!10978 = !DILocation(line: 51, column: 10, scope: !10975)
!10979 = !DILocation(line: 51, column: 20, scope: !10975)
!10980 = !DILocation(line: 51, column: 2, scope: !10975)
!10981 = distinct !DISubprogram(name: "coredump", scope: !2880, file: !2880, line: 209, type: !10982, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !11128)
!10982 = !DISubroutineType(types: !10983)
!10983 = !{null, !32, !10984, !11028}
!10984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10985, size: 32)
!10985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10986)
!10986 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2493, line: 141, baseType: !10987)
!10987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2493, line: 97, size: 256, elements: !10988)
!10988 = !{!10989}
!10989 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !10987, file: !2493, line: 107, baseType: !10990, size: 256)
!10990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2493, line: 98, size: 256, elements: !10991)
!10991 = !{!10992, !10997, !11002, !11007, !11012, !11017, !11022, !11027}
!10992 = !DIDerivedType(tag: DW_TAG_member, scope: !10990, file: !2493, line: 99, baseType: !10993, size: 32)
!10993 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10990, file: !2493, line: 99, size: 32, elements: !10994)
!10994 = !{!10995, !10996}
!10995 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !10993, file: !2493, line: 99, baseType: !121, size: 32)
!10996 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !10993, file: !2493, line: 99, baseType: !121, size: 32)
!10997 = !DIDerivedType(tag: DW_TAG_member, scope: !10990, file: !2493, line: 100, baseType: !10998, size: 32, offset: 32)
!10998 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10990, file: !2493, line: 100, size: 32, elements: !10999)
!10999 = !{!11000, !11001}
!11000 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !10998, file: !2493, line: 100, baseType: !121, size: 32)
!11001 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !10998, file: !2493, line: 100, baseType: !121, size: 32)
!11002 = !DIDerivedType(tag: DW_TAG_member, scope: !10990, file: !2493, line: 101, baseType: !11003, size: 32, offset: 64)
!11003 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10990, file: !2493, line: 101, size: 32, elements: !11004)
!11004 = !{!11005, !11006}
!11005 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11003, file: !2493, line: 101, baseType: !121, size: 32)
!11006 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11003, file: !2493, line: 101, baseType: !121, size: 32)
!11007 = !DIDerivedType(tag: DW_TAG_member, scope: !10990, file: !2493, line: 102, baseType: !11008, size: 32, offset: 96)
!11008 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10990, file: !2493, line: 102, size: 32, elements: !11009)
!11009 = !{!11010, !11011}
!11010 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11008, file: !2493, line: 102, baseType: !121, size: 32)
!11011 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11008, file: !2493, line: 102, baseType: !121, size: 32)
!11012 = !DIDerivedType(tag: DW_TAG_member, scope: !10990, file: !2493, line: 103, baseType: !11013, size: 32, offset: 128)
!11013 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10990, file: !2493, line: 103, size: 32, elements: !11014)
!11014 = !{!11015, !11016}
!11015 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11013, file: !2493, line: 103, baseType: !121, size: 32)
!11016 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11013, file: !2493, line: 103, baseType: !121, size: 32)
!11017 = !DIDerivedType(tag: DW_TAG_member, scope: !10990, file: !2493, line: 104, baseType: !11018, size: 32, offset: 160)
!11018 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10990, file: !2493, line: 104, size: 32, elements: !11019)
!11019 = !{!11020, !11021}
!11020 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11018, file: !2493, line: 104, baseType: !121, size: 32)
!11021 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11018, file: !2493, line: 104, baseType: !121, size: 32)
!11022 = !DIDerivedType(tag: DW_TAG_member, scope: !10990, file: !2493, line: 105, baseType: !11023, size: 32, offset: 192)
!11023 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10990, file: !2493, line: 105, size: 32, elements: !11024)
!11024 = !{!11025, !11026}
!11025 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11023, file: !2493, line: 105, baseType: !121, size: 32)
!11026 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11023, file: !2493, line: 105, baseType: !121, size: 32)
!11027 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !10990, file: !2493, line: 106, baseType: !121, size: 32, offset: 224)
!11028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11029, size: 32)
!11029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !11030)
!11030 = !{!11031, !11089, !11101, !11102, !11103, !11104, !11110, !11123}
!11031 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11029, file: !211, line: 247, baseType: !11032, size: 384)
!11032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !11033)
!11033 = !{!11034, !11058, !11065, !11066, !11067, !11076, !11077, !11078}
!11034 = !DIDerivedType(tag: DW_TAG_member, scope: !11032, file: !211, line: 60, baseType: !11035, size: 64)
!11035 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11032, file: !211, line: 60, size: 64, elements: !11036)
!11036 = !{!11037, !11052}
!11037 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11035, file: !211, line: 61, baseType: !11038, size: 64)
!11038 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !11039)
!11039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !11040)
!11040 = !{!11041, !11047}
!11041 = !DIDerivedType(tag: DW_TAG_member, scope: !11039, file: !221, line: 38, baseType: !11042, size: 32)
!11042 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11039, file: !221, line: 38, size: 32, elements: !11043)
!11043 = !{!11044, !11046}
!11044 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11042, file: !221, line: 39, baseType: !11045, size: 32)
!11045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11039, size: 32)
!11046 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11042, file: !221, line: 40, baseType: !11045, size: 32)
!11047 = !DIDerivedType(tag: DW_TAG_member, scope: !11039, file: !221, line: 42, baseType: !11048, size: 32, offset: 32)
!11048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11039, file: !221, line: 42, size: 32, elements: !11049)
!11049 = !{!11050, !11051}
!11050 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11048, file: !221, line: 43, baseType: !11045, size: 32)
!11051 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11048, file: !221, line: 44, baseType: !11045, size: 32)
!11052 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11035, file: !211, line: 62, baseType: !11053, size: 64)
!11053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !11054)
!11054 = !{!11055}
!11055 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11053, file: !237, line: 50, baseType: !11056, size: 64)
!11056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11057, size: 64, elements: !242)
!11057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11053, size: 32)
!11058 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11032, file: !211, line: 68, baseType: !11059, size: 32, offset: 64)
!11059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11060, size: 32)
!11060 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !11061)
!11061 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !11062)
!11062 = !{!11063}
!11063 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11061, file: !247, line: 232, baseType: !11064, size: 64)
!11064 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !11039)
!11065 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11032, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!11066 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11032, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!11067 = !DIDerivedType(tag: DW_TAG_member, scope: !11032, file: !211, line: 90, baseType: !11068, size: 16, offset: 112)
!11068 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11032, file: !211, line: 90, size: 16, elements: !11069)
!11069 = !{!11070, !11075}
!11070 = !DIDerivedType(tag: DW_TAG_member, scope: !11068, file: !211, line: 91, baseType: !11071, size: 16)
!11071 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11068, file: !211, line: 91, size: 16, elements: !11072)
!11072 = !{!11073, !11074}
!11073 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11071, file: !211, line: 96, baseType: !261, size: 8)
!11074 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11071, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!11075 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11068, file: !211, line: 100, baseType: !265, size: 16)
!11076 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11032, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!11077 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11032, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!11078 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11032, file: !211, line: 131, baseType: !11079, size: 192, offset: 192)
!11079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !11080)
!11080 = !{!11081, !11082, !11088}
!11081 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11079, file: !247, line: 245, baseType: !11038, size: 64)
!11082 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11079, file: !247, line: 246, baseType: !11083, size: 32, offset: 64)
!11083 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !11084)
!11084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11085, size: 32)
!11085 = !DISubroutineType(types: !11086)
!11086 = !{null, !11087}
!11087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11079, size: 32)
!11088 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11079, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!11089 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11029, file: !211, line: 250, baseType: !11090, size: 288, offset: 384)
!11090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !11091)
!11091 = !{!11092, !11093, !11094, !11095, !11096, !11097, !11098, !11099, !11100}
!11092 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !11090, file: !284, line: 26, baseType: !121, size: 32)
!11093 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !11090, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!11094 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !11090, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!11095 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !11090, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!11096 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !11090, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!11097 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !11090, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!11098 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !11090, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!11099 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !11090, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!11100 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !11090, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!11101 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11029, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!11102 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11029, file: !211, line: 256, baseType: !11060, size: 64, offset: 704)
!11103 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11029, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!11104 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !11029, file: !211, line: 300, baseType: !11105, size: 96, offset: 800)
!11105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !11106)
!11106 = !{!11107, !11108, !11109}
!11107 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !11105, file: !211, line: 153, baseType: !22, size: 32)
!11108 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !11105, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!11109 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !11105, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!11110 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11029, file: !211, line: 325, baseType: !11111, size: 32, offset: 896)
!11111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11112, size: 32)
!11112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !11113)
!11113 = !{!11114, !11120, !11121}
!11114 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11112, file: !307, line: 5074, baseType: !11115, size: 96)
!11115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !11116)
!11116 = !{!11117, !11118, !11119}
!11117 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11115, file: !311, line: 57, baseType: !314, size: 32)
!11118 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !11115, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!11119 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !11115, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!11120 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11112, file: !307, line: 5075, baseType: !11060, size: 64, offset: 96)
!11121 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11112, file: !307, line: 5076, baseType: !11122, offset: 160)
!11122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!11123 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11029, file: !211, line: 343, baseType: !11124, size: 64, offset: 928)
!11124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !11125)
!11125 = !{!11126, !11127}
!11126 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !11124, file: !284, line: 63, baseType: !121, size: 32)
!11127 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !11124, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!11128 = !{!11129, !11130, !11131}
!11129 = !DILocalVariable(name: "reason", arg: 1, scope: !10981, file: !2880, line: 209, type: !32)
!11130 = !DILocalVariable(name: "esf", arg: 2, scope: !10981, file: !2880, line: 209, type: !10984)
!11131 = !DILocalVariable(name: "thread", arg: 3, scope: !10981, file: !2880, line: 210, type: !11028)
!11132 = !DILocation(line: 0, scope: !10981)
!11133 = !DILocation(line: 212, column: 1, scope: !10981)
!11134 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2880, file: !2880, line: 214, type: !11135, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !11137)
!11135 = !DISubroutineType(types: !11136)
!11136 = !{null, !22, !22}
!11137 = !{!11138, !11139}
!11138 = !DILocalVariable(name: "start_addr", arg: 1, scope: !11134, file: !2880, line: 214, type: !22)
!11139 = !DILocalVariable(name: "end_addr", arg: 2, scope: !11134, file: !2880, line: 214, type: !22)
!11140 = !DILocation(line: 0, scope: !11134)
!11141 = !DILocation(line: 216, column: 1, scope: !11134)
!11142 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2880, file: !2880, line: 218, type: !11143, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !11145)
!11143 = !DISubroutineType(types: !11144)
!11144 = !{null, !1653, !200}
!11145 = !{!11146, !11147}
!11146 = !DILocalVariable(name: "buf", arg: 1, scope: !11142, file: !2880, line: 218, type: !1653)
!11147 = !DILocalVariable(name: "buflen", arg: 2, scope: !11142, file: !2880, line: 218, type: !200)
!11148 = !DILocation(line: 0, scope: !11142)
!11149 = !DILocation(line: 220, column: 1, scope: !11142)
!11150 = distinct !DISubprogram(name: "coredump_query", scope: !2880, file: !2880, line: 222, type: !11151, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !11153)
!11151 = !DISubroutineType(types: !11152)
!11152 = !{!103, !2879, !102}
!11153 = !{!11154, !11155}
!11154 = !DILocalVariable(name: "query_id", arg: 1, scope: !11150, file: !2880, line: 222, type: !2879)
!11155 = !DILocalVariable(name: "arg", arg: 2, scope: !11150, file: !2880, line: 222, type: !102)
!11156 = !DILocation(line: 0, scope: !11150)
!11157 = !DILocation(line: 224, column: 2, scope: !11150)
!11158 = distinct !DISubprogram(name: "coredump_cmd", scope: !2880, file: !2880, line: 227, type: !11159, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !11161)
!11159 = !DISubroutineType(types: !11160)
!11160 = !{!103, !2886, !102}
!11161 = !{!11162, !11163}
!11162 = !DILocalVariable(name: "query_id", arg: 1, scope: !11158, file: !2880, line: 227, type: !2886)
!11163 = !DILocalVariable(name: "arg", arg: 2, scope: !11158, file: !2880, line: 227, type: !102)
!11164 = !DILocation(line: 0, scope: !11158)
!11165 = !DILocation(line: 229, column: 2, scope: !11158)
!11166 = distinct !DISubprogram(name: "arch_system_halt", scope: !11167, file: !11167, line: 23, type: !5220, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !11168)
!11167 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11168 = !{!11169}
!11169 = !DILocalVariable(name: "reason", arg: 1, scope: !11166, file: !11167, line: 23, type: !32)
!11170 = !DILocation(line: 0, scope: !11166)
!11171 = !DILocation(line: 55, column: 2, scope: !11172, inlinedAt: !11176)
!11172 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5209, file: !5209, line: 42, type: !5210, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !11173)
!11173 = !{!11174, !11175}
!11174 = !DILocalVariable(name: "key", scope: !11172, file: !5209, line: 44, type: !32)
!11175 = !DILocalVariable(name: "tmp", scope: !11172, file: !5209, line: 53, type: !32)
!11176 = distinct !DILocation(line: 31, column: 8, scope: !11166)
!11177 = !{i64 1949866}
!11178 = !DILocation(line: 0, scope: !11172, inlinedAt: !11176)
!11179 = !DILocation(line: 32, column: 2, scope: !11166)
!11180 = !DILocation(line: 32, column: 2, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11182, file: !11167, line: 32, column: 2)
!11182 = distinct !DILexicalBlock(scope: !11166, file: !11167, line: 32, column: 2)
!11183 = distinct !{!11183, !11184, !11185}
!11184 = !DILocation(line: 32, column: 2, scope: !11182)
!11185 = !DILocation(line: 34, column: 2, scope: !11182)
!11186 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !11167, file: !11167, line: 39, type: !11187, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !11189)
!11187 = !DISubroutineType(types: !11188)
!11188 = !{null, !32, !10984}
!11189 = !{!11190, !11191}
!11190 = !DILocalVariable(name: "reason", arg: 1, scope: !11186, file: !11167, line: 39, type: !32)
!11191 = !DILocalVariable(name: "esf", arg: 2, scope: !11186, file: !11167, line: 40, type: !10984)
!11192 = !DILocation(line: 0, scope: !11186)
!11193 = !DILocation(line: 46, column: 2, scope: !11186)
!11194 = distinct !DISubprogram(name: "k_fatal_halt", scope: !11167, file: !11167, line: 81, type: !5220, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !11195)
!11195 = !{!11196}
!11196 = !DILocalVariable(name: "reason", arg: 1, scope: !11194, file: !11167, line: 81, type: !32)
!11197 = !DILocation(line: 0, scope: !11194)
!11198 = !DILocation(line: 83, column: 2, scope: !11194)
!11199 = distinct !DISubprogram(name: "z_fatal_error", scope: !11167, file: !11167, line: 96, type: !11187, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !11200)
!11200 = !{!11201, !11202, !11203, !11204}
!11201 = !DILocalVariable(name: "reason", arg: 1, scope: !11199, file: !11167, line: 96, type: !32)
!11202 = !DILocalVariable(name: "esf", arg: 2, scope: !11199, file: !11167, line: 96, type: !10984)
!11203 = !DILocalVariable(name: "key", scope: !11199, file: !11167, line: 102, type: !32)
!11204 = !DILocalVariable(name: "thread", scope: !11199, file: !11167, line: 103, type: !11028)
!11205 = !DILocation(line: 0, scope: !11199)
!11206 = !DILocation(line: 55, column: 2, scope: !11172, inlinedAt: !11207)
!11207 = distinct !DILocation(line: 102, column: 21, scope: !11199)
!11208 = !DILocation(line: 0, scope: !11172, inlinedAt: !11207)
!11209 = !DILocation(line: 119, column: 11, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11199, file: !11167, line: 119, column: 6)
!11211 = !DILocation(line: 119, column: 20, scope: !11210)
!11212 = !DILocation(line: 131, column: 2, scope: !11199)
!11213 = !DILocation(line: 151, column: 7, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11215, file: !11167, line: 146, column: 32)
!11215 = distinct !DILexicalBlock(scope: !11199, file: !11167, line: 146, column: 6)
!11216 = !DILocation(line: 151, column: 21, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11214, file: !11167, line: 151, column: 7)
!11218 = !DILocation(line: 104, column: 4, scope: !11199)
!11219 = !DILocalVariable(name: "key", arg: 1, scope: !11220, file: !5209, line: 84, type: !32)
!11220 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5209, file: !5209, line: 84, type: !5220, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !11221)
!11221 = !{!11219}
!11222 = !DILocation(line: 0, scope: !11220, inlinedAt: !11223)
!11223 = distinct !DILocation(line: 186, column: 2, scope: !11199)
!11224 = !DILocation(line: 95, column: 2, scope: !11220, inlinedAt: !11223)
!11225 = !{i64 1950683}
!11226 = !DILocation(line: 189, column: 3, scope: !11227)
!11227 = distinct !DILexicalBlock(scope: !11228, file: !11167, line: 188, column: 41)
!11228 = distinct !DILexicalBlock(scope: !11199, file: !11167, line: 188, column: 6)
!11229 = !DILocation(line: 191, column: 1, scope: !11199)
!11230 = distinct !DISubprogram(name: "k_current_get", scope: !307, file: !307, line: 530, type: !11231, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !322)
!11231 = !DISubroutineType(types: !11232)
!11232 = !{!11233}
!11233 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !11028)
!11234 = !DILocation(line: 535, column: 9, scope: !11230)
!11235 = !DILocation(line: 535, column: 2, scope: !11230)
!11236 = distinct !DISubprogram(name: "k_thread_abort", scope: !3045, file: !3045, line: 188, type: !11237, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !11239)
!11237 = !DISubroutineType(types: !11238)
!11238 = !{null, !11233}
!11239 = !{!11240}
!11240 = !DILocalVariable(name: "thread", arg: 1, scope: !11236, file: !3045, line: 188, type: !11233)
!11241 = !DILocation(line: 0, scope: !11236)
!11242 = !DILocation(line: 197, column: 2, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11236, file: !3045, line: 197, column: 2)
!11244 = !{i64 2154064906}
!11245 = !DILocation(line: 198, column: 2, scope: !11236)
!11246 = !DILocation(line: 199, column: 1, scope: !11236)
!11247 = distinct !DISubprogram(name: "z_current_get", scope: !3045, file: !3045, line: 173, type: !11231, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2876, retainedNodes: !322)
!11248 = !DILocation(line: 180, column: 2, scope: !11249)
!11249 = distinct !DILexicalBlock(scope: !11247, file: !3045, line: 180, column: 2)
!11250 = !{i64 2154064838}
!11251 = !DILocation(line: 181, column: 9, scope: !11247)
!11252 = !DILocation(line: 181, column: 2, scope: !11247)
!11253 = distinct !DISubprogram(name: "z_early_memset", scope: !1620, file: !1620, line: 108, type: !11254, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11256)
!11254 = !DISubroutineType(types: !11255)
!11255 = !{null, !102, !103, !200}
!11256 = !{!11257, !11258, !11259}
!11257 = !DILocalVariable(name: "dst", arg: 1, scope: !11253, file: !1620, line: 108, type: !102)
!11258 = !DILocalVariable(name: "c", arg: 2, scope: !11253, file: !1620, line: 108, type: !103)
!11259 = !DILocalVariable(name: "n", arg: 3, scope: !11253, file: !1620, line: 108, type: !200)
!11260 = !DILocation(line: 0, scope: !11253)
!11261 = !DILocation(line: 110, column: 9, scope: !11253)
!11262 = !DILocation(line: 111, column: 1, scope: !11253)
!11263 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1620, file: !1620, line: 121, type: !11264, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11266)
!11264 = !DISubroutineType(types: !11265)
!11265 = !{null, !102, !13, !200}
!11266 = !{!11267, !11268, !11269}
!11267 = !DILocalVariable(name: "dst", arg: 1, scope: !11263, file: !1620, line: 121, type: !102)
!11268 = !DILocalVariable(name: "src", arg: 2, scope: !11263, file: !1620, line: 121, type: !13)
!11269 = !DILocalVariable(name: "n", arg: 3, scope: !11263, file: !1620, line: 121, type: !200)
!11270 = !DILocation(line: 0, scope: !11263)
!11271 = !DILocation(line: 123, column: 9, scope: !11263)
!11272 = !DILocation(line: 124, column: 1, scope: !11263)
!11273 = distinct !DISubprogram(name: "z_bss_zero", scope: !1620, file: !1620, line: 132, type: !2913, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !322)
!11274 = !DILocation(line: 143, column: 2, scope: !11273)
!11275 = !DILocation(line: 168, column: 1, scope: !11273)
!11276 = distinct !DISubprogram(name: "z_init_cpu", scope: !1620, file: !1620, line: 372, type: !7028, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11277)
!11277 = !{!11278}
!11278 = !DILocalVariable(name: "id", arg: 1, scope: !11276, file: !1620, line: 372, type: !103)
!11279 = !DILocation(line: 0, scope: !11276)
!11280 = !DILocation(line: 374, column: 2, scope: !11276)
!11281 = !DILocation(line: 375, column: 34, scope: !11276)
!11282 = !DILocation(line: 375, column: 19, scope: !11276)
!11283 = !DILocation(line: 375, column: 31, scope: !11276)
!11284 = !DILocation(line: 376, column: 24, scope: !11276)
!11285 = !DILocation(line: 376, column: 19, scope: !11276)
!11286 = !DILocation(line: 376, column: 22, scope: !11276)
!11287 = !DILocation(line: 378, column: 26, scope: !11276)
!11288 = !DILocation(line: 378, column: 4, scope: !11276)
!11289 = !DILocation(line: 378, column: 50, scope: !11276)
!11290 = !DILocation(line: 377, column: 19, scope: !11276)
!11291 = !DILocation(line: 377, column: 29, scope: !11276)
!11292 = !DILocation(line: 384, column: 1, scope: !11276)
!11293 = distinct !DISubprogram(name: "init_idle_thread", scope: !1620, file: !1620, line: 343, type: !7028, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11294)
!11294 = !{!11295, !11296, !11297, !11300}
!11295 = !DILocalVariable(name: "i", arg: 1, scope: !11293, file: !1620, line: 343, type: !103)
!11296 = !DILocalVariable(name: "thread", scope: !11293, file: !1620, line: 345, type: !1713)
!11297 = !DILocalVariable(name: "stack", scope: !11293, file: !1620, line: 346, type: !11298)
!11298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11299, size: 32)
!11299 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3247, line: 44, baseType: !1827)
!11300 = !DILocalVariable(name: "tname", scope: !11293, file: !1620, line: 358, type: !957)
!11301 = !DILocation(line: 0, scope: !11293)
!11302 = !DILocation(line: 345, column: 29, scope: !11293)
!11303 = !DILocation(line: 346, column: 28, scope: !11293)
!11304 = !DILocation(line: 362, column: 37, scope: !11293)
!11305 = !DILocation(line: 362, column: 36, scope: !11293)
!11306 = !DILocation(line: 361, column: 2, scope: !11293)
!11307 = !DILocation(line: 365, column: 2, scope: !11293)
!11308 = !DILocation(line: 370, column: 1, scope: !11293)
!11309 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1828, file: !1828, line: 331, type: !11310, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11312)
!11310 = !DISubroutineType(types: !11311)
!11311 = !{!957, !11298}
!11312 = !{!11313}
!11313 = !DILocalVariable(name: "sym", arg: 1, scope: !11309, file: !1828, line: 331, type: !11298)
!11314 = !DILocation(line: 0, scope: !11309)
!11315 = !DILocation(line: 333, column: 21, scope: !11309)
!11316 = !DILocation(line: 333, column: 2, scope: !11309)
!11317 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11318, file: !11318, line: 155, type: !11319, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11321)
!11318 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11319 = !DISubroutineType(types: !11320)
!11320 = !{null, !1713}
!11321 = !{!11322}
!11322 = !DILocalVariable(name: "thread", arg: 1, scope: !11317, file: !11318, line: 155, type: !1713)
!11323 = !DILocation(line: 0, scope: !11317)
!11324 = !DILocation(line: 157, column: 15, scope: !11317)
!11325 = !DILocation(line: 157, column: 28, scope: !11317)
!11326 = !DILocation(line: 158, column: 1, scope: !11317)
!11327 = distinct !DISubprogram(name: "z_cstart", scope: !1620, file: !1620, line: 501, type: !2913, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11328)
!11328 = !{!11329}
!11329 = !DILocalVariable(name: "dummy_thread", scope: !11327, file: !1620, line: 518, type: !1714)
!11330 = !DILocation(line: 507, column: 2, scope: !11327)
!11331 = !DILocation(line: 43, column: 14, scope: !11332, inlinedAt: !11336)
!11332 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !11333, file: !11333, line: 40, type: !2913, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11334)
!11333 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11334 = !{!11335}
!11335 = !DILocalVariable(name: "msp", scope: !11332, file: !11333, line: 42, type: !121)
!11336 = distinct !DILocation(line: 44, column: 2, scope: !11337, inlinedAt: !11339)
!11337 = distinct !DISubprogram(name: "arch_kernel_init", scope: !11338, file: !11338, line: 42, type: !2913, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !322)
!11338 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11339 = distinct !DILocation(line: 510, column: 2, scope: !11327)
!11340 = !DILocation(line: 43, column: 3, scope: !11332, inlinedAt: !11336)
!11341 = !DILocation(line: 43, column: 60, scope: !11332, inlinedAt: !11336)
!11342 = !DILocation(line: 0, scope: !11332, inlinedAt: !11336)
!11343 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !11344, file: !5383, line: 1153, type: !121)
!11344 = distinct !DISubprogram(name: "__set_MSP", scope: !5383, file: !5383, line: 1153, type: !5474, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11345)
!11345 = !{!11343}
!11346 = !DILocation(line: 0, scope: !11344, inlinedAt: !11347)
!11347 = distinct !DILocation(line: 46, column: 2, scope: !11332, inlinedAt: !11336)
!11348 = !DILocation(line: 1155, column: 3, scope: !11344, inlinedAt: !11347)
!11349 = !{i64 2847110}
!11350 = !DILocation(line: 62, column: 11, scope: !11332, inlinedAt: !11336)
!11351 = !DILocation(line: 102, column: 2, scope: !11352, inlinedAt: !11353)
!11352 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6177, file: !6177, line: 97, type: !2913, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !322)
!11353 = distinct !DILocation(line: 45, column: 2, scope: !11337, inlinedAt: !11339)
!11354 = !DILocation(line: 108, column: 2, scope: !11352, inlinedAt: !11353)
!11355 = !DILocation(line: 112, column: 2, scope: !11352, inlinedAt: !11353)
!11356 = !DILocation(line: 113, column: 2, scope: !11352, inlinedAt: !11353)
!11357 = !DILocation(line: 114, column: 2, scope: !11352, inlinedAt: !11353)
!11358 = !DILocation(line: 116, column: 2, scope: !11352, inlinedAt: !11353)
!11359 = !DILocation(line: 123, column: 13, scope: !11352, inlinedAt: !11353)
!11360 = !DILocation(line: 46, column: 2, scope: !11337, inlinedAt: !11339)
!11361 = !DILocation(line: 47, column: 2, scope: !11337, inlinedAt: !11339)
!11362 = !DILocation(line: 174, column: 12, scope: !11363, inlinedAt: !11364)
!11363 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6177, file: !6177, line: 169, type: !2913, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !322)
!11364 = distinct !DILocation(line: 48, column: 2, scope: !11337, inlinedAt: !11339)
!11365 = !DILocation(line: 179, column: 12, scope: !11363, inlinedAt: !11364)
!11366 = !DILocation(line: 50, column: 2, scope: !11337, inlinedAt: !11339)
!11367 = !DILocation(line: 57, column: 2, scope: !11337, inlinedAt: !11339)
!11368 = !DILocation(line: 518, column: 2, scope: !11327)
!11369 = !DILocation(line: 518, column: 18, scope: !11327)
!11370 = !DILocation(line: 520, column: 2, scope: !11327)
!11371 = !DILocation(line: 523, column: 2, scope: !11327)
!11372 = !DILocation(line: 526, column: 2, scope: !11327)
!11373 = !DILocation(line: 527, column: 2, scope: !11327)
!11374 = !DILocation(line: 543, column: 24, scope: !11327)
!11375 = !DILocation(line: 543, column: 2, scope: !11327)
!11376 = !DILocation(line: 0, scope: !1847)
!11377 = !DILocation(line: 246, column: 15, scope: !1865)
!11378 = !DILocation(line: 246, column: 36, scope: !1864)
!11379 = !DILocation(line: 246, column: 2, scope: !1865)
!11380 = !DILocation(line: 247, column: 37, scope: !1863)
!11381 = !DILocation(line: 0, scope: !1863)
!11382 = !DILocation(line: 248, column: 19, scope: !1863)
!11383 = !DILocation(line: 248, column: 12, scope: !1863)
!11384 = !DILocation(line: 250, column: 11, scope: !11385)
!11385 = distinct !DILexicalBlock(scope: !1863, file: !1620, line: 250, column: 7)
!11386 = !DILocation(line: 250, column: 7, scope: !1863)
!11387 = !DILocation(line: 254, column: 11, scope: !11388)
!11388 = distinct !DILexicalBlock(scope: !11389, file: !1620, line: 254, column: 8)
!11389 = distinct !DILexicalBlock(scope: !11385, file: !1620, line: 250, column: 20)
!11390 = !DILocation(line: 254, column: 8, scope: !11389)
!11391 = !DILocation(line: 255, column: 9, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11388, file: !1620, line: 254, column: 17)
!11393 = !DILocation(line: 258, column: 9, scope: !11392)
!11394 = !DILocation(line: 261, column: 28, scope: !11392)
!11395 = !DILocation(line: 261, column: 10, scope: !11392)
!11396 = !DILocation(line: 261, column: 17, scope: !11392)
!11397 = !DILocation(line: 261, column: 26, scope: !11392)
!11398 = !DILocation(line: 262, column: 4, scope: !11392)
!11399 = !DILocation(line: 263, column: 9, scope: !11389)
!11400 = !DILocation(line: 263, column: 16, scope: !11389)
!11401 = !DILocation(line: 263, column: 28, scope: !11389)
!11402 = !DILocation(line: 264, column: 3, scope: !11389)
!11403 = !DILocation(line: 246, column: 60, scope: !1864)
!11404 = distinct !{!11404, !11379, !11405}
!11405 = !DILocation(line: 265, column: 2, scope: !1865)
!11406 = !DILocation(line: 266, column: 1, scope: !1847)
!11407 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !5417, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11408)
!11408 = !{!11409, !11410}
!11409 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11407, file: !356, line: 1814, type: !592)
!11410 = !DILocalVariable(name: "priority", arg: 2, scope: !11407, file: !356, line: 1814, type: !121)
!11411 = !DILocation(line: 0, scope: !11407)
!11412 = !DILocation(line: 1822, column: 48, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11414, file: !356, line: 1821, column: 3)
!11414 = distinct !DILexicalBlock(scope: !11407, file: !356, line: 1816, column: 7)
!11415 = !DILocation(line: 1822, column: 32, scope: !11413)
!11416 = !DILocation(line: 1822, column: 40, scope: !11413)
!11417 = !DILocation(line: 1822, column: 5, scope: !11413)
!11418 = !DILocation(line: 1822, column: 46, scope: !11413)
!11419 = !DILocation(line: 1824, column: 1, scope: !11407)
!11420 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !11338, file: !11338, line: 32, type: !2913, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!11421 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !11422, file: !11422, line: 215, type: !11319, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11423)
!11422 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11423 = !{!11424}
!11424 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !11421, file: !11422, line: 215, type: !1713)
!11425 = !DILocation(line: 0, scope: !11421)
!11426 = !DILocation(line: 217, column: 21, scope: !11421)
!11427 = !DILocation(line: 217, column: 34, scope: !11421)
!11428 = !DILocation(line: 221, column: 21, scope: !11421)
!11429 = !DILocation(line: 221, column: 34, scope: !11421)
!11430 = !DILocation(line: 223, column: 27, scope: !11421)
!11431 = !DILocation(line: 223, column: 33, scope: !11421)
!11432 = !DILocation(line: 224, column: 27, scope: !11421)
!11433 = !DILocation(line: 224, column: 32, scope: !11421)
!11434 = !DILocation(line: 232, column: 16, scope: !11421)
!11435 = !DILocation(line: 232, column: 30, scope: !11421)
!11436 = !DILocation(line: 239, column: 24, scope: !11421)
!11437 = !DILocation(line: 240, column: 1, scope: !11421)
!11438 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1620, file: !1620, line: 399, type: !11439, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11441)
!11439 = !DISubroutineType(types: !11440)
!11440 = !{!957}
!11441 = !{!11442}
!11442 = !DILocalVariable(name: "stack_ptr", scope: !11438, file: !1620, line: 401, type: !957)
!11443 = !DILocation(line: 404, column: 2, scope: !11438)
!11444 = !DILocation(line: 416, column: 24, scope: !11438)
!11445 = !DILocation(line: 418, column: 14, scope: !11438)
!11446 = !DILocation(line: 0, scope: !11438)
!11447 = !DILocation(line: 423, column: 2, scope: !11438)
!11448 = !DILocation(line: 424, column: 2, scope: !11438)
!11449 = !DILocation(line: 426, column: 2, scope: !11438)
!11450 = !DILocation(line: 428, column: 2, scope: !11438)
!11451 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1620, file: !1620, line: 432, type: !11452, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11454)
!11452 = !DISubroutineType(types: !11453)
!11453 = !{null, !957}
!11454 = !{!11455}
!11455 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !11451, file: !1620, line: 432, type: !957)
!11456 = !DILocation(line: 0, scope: !11451)
!11457 = !DILocation(line: 435, column: 2, scope: !11451)
!11458 = !DILocation(line: 445, column: 2, scope: !11451)
!11459 = distinct !DISubprogram(name: "bg_thread_main", scope: !1620, file: !1620, line: 277, type: !3249, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1616, retainedNodes: !11460)
!11460 = !{!11461, !11462, !11463}
!11461 = !DILocalVariable(name: "unused1", arg: 1, scope: !11459, file: !1620, line: 277, type: !102)
!11462 = !DILocalVariable(name: "unused2", arg: 2, scope: !11459, file: !1620, line: 277, type: !102)
!11463 = !DILocalVariable(name: "unused3", arg: 3, scope: !11459, file: !1620, line: 277, type: !102)
!11464 = !DILocation(line: 0, scope: !11459)
!11465 = !DILocation(line: 291, column: 20, scope: !11459)
!11466 = !DILocation(line: 293, column: 2, scope: !11459)
!11467 = !DILocation(line: 297, column: 2, scope: !11459)
!11468 = !DILocation(line: 305, column: 2, scope: !11459)
!11469 = !DILocation(line: 307, column: 2, scope: !11459)
!11470 = !DILocation(line: 330, column: 8, scope: !11459)
!11471 = !DILocation(line: 333, column: 34, scope: !11459)
!11472 = !DILocation(line: 339, column: 1, scope: !11459)
!11473 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1876, file: !1876, line: 45, type: !11474, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11482)
!11474 = !DISubroutineType(types: !11475)
!11475 = !{null, !11476, !102}
!11476 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !307, line: 103, baseType: !11477)
!11477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11478, size: 32)
!11478 = !DISubroutineType(types: !11479)
!11479 = !{null, !11480, !102}
!11480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11481, size: 32)
!11481 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1881)
!11482 = !{!11483, !11484}
!11483 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11473, file: !1876, line: 45, type: !11476)
!11484 = !DILocalVariable(name: "user_data", arg: 2, scope: !11473, file: !1876, line: 45, type: !102)
!11485 = !DILocation(line: 0, scope: !11473)
!11486 = !DILocation(line: 71, column: 1, scope: !11473)
!11487 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1876, file: !1876, line: 73, type: !11474, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11488)
!11488 = !{!11489, !11490}
!11489 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11487, file: !1876, line: 73, type: !11476)
!11490 = !DILocalVariable(name: "user_data", arg: 2, scope: !11487, file: !1876, line: 73, type: !102)
!11491 = !DILocation(line: 0, scope: !11487)
!11492 = !DILocation(line: 95, column: 1, scope: !11487)
!11493 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1876, file: !1876, line: 97, type: !6178, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !322)
!11494 = !DILocation(line: 1031, column: 3, scope: !11495, inlinedAt: !11498)
!11495 = distinct !DISubprogram(name: "__get_IPSR", scope: !5383, file: !5383, line: 1027, type: !5464, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11496)
!11496 = !{!11497}
!11497 = !DILocalVariable(name: "result", scope: !11495, file: !5383, line: 1029, type: !121)
!11498 = distinct !DILocation(line: 48, column: 10, scope: !11499, inlinedAt: !11500)
!11499 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6177, file: !6177, line: 46, type: !6178, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !322)
!11500 = distinct !DILocation(line: 99, column: 9, scope: !11493)
!11501 = !{i64 2852761}
!11502 = !DILocation(line: 0, scope: !11495, inlinedAt: !11498)
!11503 = !DILocation(line: 48, column: 9, scope: !11499, inlinedAt: !11500)
!11504 = !DILocation(line: 99, column: 2, scope: !11493)
!11505 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1876, file: !1876, line: 106, type: !2913, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !322)
!11506 = !DILocation(line: 108, column: 2, scope: !11505)
!11507 = !DILocation(line: 108, column: 17, scope: !11505)
!11508 = !DILocation(line: 108, column: 30, scope: !11505)
!11509 = !DILocation(line: 109, column: 1, scope: !11505)
!11510 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1876, file: !1876, line: 116, type: !2913, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !322)
!11511 = !DILocation(line: 118, column: 2, scope: !11510)
!11512 = !DILocation(line: 118, column: 17, scope: !11510)
!11513 = !DILocation(line: 118, column: 30, scope: !11510)
!11514 = !DILocation(line: 119, column: 1, scope: !11510)
!11515 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1876, file: !1876, line: 126, type: !6178, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !322)
!11516 = !DILocation(line: 128, column: 10, scope: !11515)
!11517 = !DILocation(line: 128, column: 25, scope: !11515)
!11518 = !DILocation(line: 128, column: 38, scope: !11515)
!11519 = !DILocation(line: 128, column: 53, scope: !11515)
!11520 = !DILocation(line: 128, column: 2, scope: !11515)
!11521 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1876, file: !1876, line: 187, type: !11522, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11524)
!11522 = !DISubroutineType(types: !11523)
!11523 = !{!103, !1880, !144}
!11524 = !{!11525, !11526}
!11525 = !DILocalVariable(name: "thread", arg: 1, scope: !11521, file: !1876, line: 187, type: !1880)
!11526 = !DILocalVariable(name: "value", arg: 2, scope: !11521, file: !1876, line: 187, type: !144)
!11527 = !DILocation(line: 0, scope: !11521)
!11528 = !DILocation(line: 206, column: 2, scope: !11521)
!11529 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1876, file: !1876, line: 238, type: !11530, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11532)
!11530 = !DISubroutineType(types: !11531)
!11531 = !{!144, !1880}
!11532 = !{!11533}
!11533 = !DILocalVariable(name: "thread", arg: 1, scope: !11529, file: !1876, line: 238, type: !1880)
!11534 = !DILocation(line: 0, scope: !11529)
!11535 = !DILocation(line: 244, column: 2, scope: !11529)
!11536 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1876, file: !1876, line: 248, type: !11537, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11539)
!11537 = !DISubroutineType(types: !11538)
!11538 = !{!103, !1879, !957, !200}
!11539 = !{!11540, !11541, !11542}
!11540 = !DILocalVariable(name: "thread", arg: 1, scope: !11536, file: !1876, line: 248, type: !1879)
!11541 = !DILocalVariable(name: "buf", arg: 2, scope: !11536, file: !1876, line: 248, type: !957)
!11542 = !DILocalVariable(name: "size", arg: 3, scope: !11536, file: !1876, line: 248, type: !200)
!11543 = !DILocation(line: 0, scope: !11536)
!11544 = !DILocation(line: 257, column: 2, scope: !11536)
!11545 = !DILocation(line: 0, scope: !1875)
!11546 = !DILocation(line: 281, column: 11, scope: !11547)
!11547 = distinct !DILexicalBlock(scope: !1875, file: !1876, line: 281, column: 6)
!11548 = !DILocation(line: 281, column: 20, scope: !11547)
!11549 = !DILocation(line: 275, column: 45, scope: !1875)
!11550 = !DILocation(line: 285, column: 10, scope: !1875)
!11551 = !DILocation(line: 0, scope: !1996)
!11552 = !DILocation(line: 293, column: 39, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !1996, file: !1876, line: 293, column: 2)
!11554 = !DILocation(line: 293, column: 2, scope: !1996)
!11555 = !DILocation(line: 273, column: 14, scope: !1875)
!11556 = !DILocation(line: 309, column: 2, scope: !1875)
!11557 = !DILocation(line: 309, column: 11, scope: !1875)
!11558 = !DILocation(line: 311, column: 2, scope: !1875)
!11559 = !DILocation(line: 293, column: 26, scope: !11553)
!11560 = !DILocation(line: 294, column: 9, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11553, file: !1876, line: 293, column: 54)
!11562 = !DILocation(line: 295, column: 21, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11561, file: !1876, line: 295, column: 7)
!11564 = !DILocation(line: 295, column: 28, scope: !11563)
!11565 = !DILocation(line: 295, column: 7, scope: !11561)
!11566 = !DILocation(line: 299, column: 25, scope: !11561)
!11567 = !DILocation(line: 299, column: 41, scope: !11561)
!11568 = !DILocation(line: 300, column: 7, scope: !11561)
!11569 = !DILocation(line: 300, column: 26, scope: !11561)
!11570 = !DILocation(line: 299, column: 10, scope: !11561)
!11571 = !DILocation(line: 299, column: 7, scope: !11561)
!11572 = !DILocation(line: 302, column: 16, scope: !11561)
!11573 = !DILocation(line: 304, column: 20, scope: !11574)
!11574 = distinct !DILexicalBlock(scope: !11561, file: !1876, line: 304, column: 7)
!11575 = !DILocation(line: 304, column: 7, scope: !11561)
!11576 = !DILocation(line: 305, column: 26, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11574, file: !1876, line: 304, column: 26)
!11578 = !DILocation(line: 305, column: 42, scope: !11577)
!11579 = !DILocation(line: 305, column: 11, scope: !11577)
!11580 = !DILocation(line: 305, column: 8, scope: !11577)
!11581 = !DILocation(line: 306, column: 3, scope: !11577)
!11582 = !DILocation(line: 293, column: 50, scope: !11553)
!11583 = !DILocation(line: 312, column: 1, scope: !1875)
!11584 = distinct !DISubprogram(name: "copy_bytes", scope: !1876, file: !1876, line: 261, type: !11585, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11587)
!11585 = !DISubroutineType(types: !11586)
!11586 = !{!200, !957, !200, !144, !200}
!11587 = !{!11588, !11589, !11590, !11591, !11592}
!11588 = !DILocalVariable(name: "dest", arg: 1, scope: !11584, file: !1876, line: 261, type: !957)
!11589 = !DILocalVariable(name: "dest_size", arg: 2, scope: !11584, file: !1876, line: 261, type: !200)
!11590 = !DILocalVariable(name: "src", arg: 3, scope: !11584, file: !1876, line: 261, type: !144)
!11591 = !DILocalVariable(name: "src_size", arg: 4, scope: !11584, file: !1876, line: 261, type: !200)
!11592 = !DILocalVariable(name: "bytes_to_copy", scope: !11584, file: !1876, line: 263, type: !200)
!11593 = !DILocation(line: 0, scope: !11584)
!11594 = !DILocation(line: 265, column: 18, scope: !11584)
!11595 = !DILocation(line: 266, column: 2, scope: !11584)
!11596 = !DILocation(line: 268, column: 2, scope: !11584)
!11597 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1876, file: !1876, line: 383, type: !11598, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11600)
!11598 = !DISubroutineType(types: !11599)
!11599 = !{null, !1880}
!11600 = !{!11601}
!11601 = !DILocalVariable(name: "thread", arg: 1, scope: !11597, file: !1876, line: 383, type: !1880)
!11602 = !DILocation(line: 0, scope: !11597)
!11603 = !DILocation(line: 387, column: 2, scope: !11597)
!11604 = !DILocation(line: 388, column: 1, scope: !11597)
!11605 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1876, file: !1876, line: 528, type: !11606, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11613)
!11606 = !DISubroutineType(types: !11607)
!11607 = !{!957, !1880, !11608, !200, !3246, !102, !102, !102, !103, !121, !144}
!11608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11609, size: 32)
!11609 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3247, line: 44, baseType: !11610)
!11610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1828, line: 47, size: 8, elements: !11611)
!11611 = !{!11612}
!11612 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11610, file: !1828, line: 48, baseType: !146, size: 8)
!11613 = !{!11614, !11615, !11616, !11617, !11618, !11619, !11620, !11621, !11622, !11623, !11624}
!11614 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11605, file: !1876, line: 528, type: !1880)
!11615 = !DILocalVariable(name: "stack", arg: 2, scope: !11605, file: !1876, line: 529, type: !11608)
!11616 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11605, file: !1876, line: 529, type: !200)
!11617 = !DILocalVariable(name: "entry", arg: 4, scope: !11605, file: !1876, line: 530, type: !3246)
!11618 = !DILocalVariable(name: "p1", arg: 5, scope: !11605, file: !1876, line: 531, type: !102)
!11619 = !DILocalVariable(name: "p2", arg: 6, scope: !11605, file: !1876, line: 531, type: !102)
!11620 = !DILocalVariable(name: "p3", arg: 7, scope: !11605, file: !1876, line: 531, type: !102)
!11621 = !DILocalVariable(name: "prio", arg: 8, scope: !11605, file: !1876, line: 532, type: !103)
!11622 = !DILocalVariable(name: "options", arg: 9, scope: !11605, file: !1876, line: 532, type: !121)
!11623 = !DILocalVariable(name: "name", arg: 10, scope: !11605, file: !1876, line: 532, type: !144)
!11624 = !DILocalVariable(name: "stack_ptr", scope: !11605, file: !1876, line: 534, type: !957)
!11625 = !DILocation(line: 0, scope: !11605)
!11626 = !DILocation(line: 550, column: 28, scope: !11605)
!11627 = !DILocation(line: 550, column: 2, scope: !11605)
!11628 = !DILocation(line: 553, column: 34, scope: !11605)
!11629 = !DILocation(line: 553, column: 2, scope: !11605)
!11630 = !DILocation(line: 554, column: 14, scope: !11605)
!11631 = !DILocation(line: 564, column: 2, scope: !11605)
!11632 = !DILocation(line: 567, column: 14, scope: !11605)
!11633 = !DILocation(line: 567, column: 24, scope: !11605)
!11634 = !DILocation(line: 612, column: 7, scope: !11635)
!11635 = distinct !DILexicalBlock(scope: !11605, file: !1876, line: 612, column: 6)
!11636 = !DILocation(line: 612, column: 6, scope: !11605)
!11637 = !DILocation(line: 627, column: 40, scope: !11605)
!11638 = !DILocation(line: 637, column: 2, scope: !11605)
!11639 = !DILocation(line: 613, column: 15, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11635, file: !1876, line: 612, column: 17)
!11641 = !DILocation(line: 613, column: 29, scope: !11640)
!11642 = !DILocation(line: 638, column: 1, scope: !11605)
!11643 = distinct !DISubprogram(name: "z_waitq_init", scope: !11644, file: !11644, line: 47, type: !11645, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11647)
!11644 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11645 = !DISubroutineType(types: !11646)
!11646 = !{null, !1911}
!11647 = !{!11648}
!11648 = !DILocalVariable(name: "w", arg: 1, scope: !11643, file: !11644, line: 47, type: !1911)
!11649 = !DILocation(line: 0, scope: !11643)
!11650 = !DILocation(line: 49, column: 21, scope: !11643)
!11651 = !DILocation(line: 49, column: 2, scope: !11643)
!11652 = !DILocation(line: 50, column: 1, scope: !11643)
!11653 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1876, file: !1876, line: 791, type: !11654, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11657)
!11654 = !DISubroutineType(types: !11655)
!11655 = !{null, !11656, !103, !121, !32}
!11656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 32)
!11657 = !{!11658, !11659, !11660, !11661}
!11658 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11653, file: !1876, line: 791, type: !11656)
!11659 = !DILocalVariable(name: "priority", arg: 2, scope: !11653, file: !1876, line: 791, type: !103)
!11660 = !DILocalVariable(name: "initial_state", arg: 3, scope: !11653, file: !1876, line: 792, type: !121)
!11661 = !DILocalVariable(name: "options", arg: 4, scope: !11653, file: !1876, line: 792, type: !32)
!11662 = !DILocation(line: 0, scope: !11653)
!11663 = !DILocation(line: 795, column: 15, scope: !11653)
!11664 = !DILocation(line: 795, column: 25, scope: !11653)
!11665 = !DILocation(line: 796, column: 30, scope: !11653)
!11666 = !DILocation(line: 796, column: 15, scope: !11653)
!11667 = !DILocation(line: 796, column: 28, scope: !11653)
!11668 = !DILocation(line: 797, column: 30, scope: !11653)
!11669 = !DILocation(line: 797, column: 15, scope: !11653)
!11670 = !DILocation(line: 797, column: 28, scope: !11653)
!11671 = !DILocation(line: 799, column: 22, scope: !11653)
!11672 = !DILocation(line: 799, column: 15, scope: !11653)
!11673 = !DILocation(line: 799, column: 20, scope: !11653)
!11674 = !DILocation(line: 801, column: 15, scope: !11653)
!11675 = !DILocation(line: 801, column: 28, scope: !11653)
!11676 = !DILocation(line: 814, column: 2, scope: !11653)
!11677 = !DILocation(line: 815, column: 1, scope: !11653)
!11678 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1876, file: !1876, line: 449, type: !11679, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11681)
!11679 = !DISubroutineType(types: !11680)
!11680 = !{!957, !1880, !11608, !200}
!11681 = !{!11682, !11683, !11684, !11685, !11686, !11687, !11688, !11689}
!11682 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11678, file: !1876, line: 449, type: !1880)
!11683 = !DILocalVariable(name: "stack", arg: 2, scope: !11678, file: !1876, line: 450, type: !11608)
!11684 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11678, file: !1876, line: 450, type: !200)
!11685 = !DILocalVariable(name: "stack_obj_size", scope: !11678, file: !1876, line: 452, type: !200)
!11686 = !DILocalVariable(name: "stack_buf_size", scope: !11678, file: !1876, line: 452, type: !200)
!11687 = !DILocalVariable(name: "stack_ptr", scope: !11678, file: !1876, line: 453, type: !957)
!11688 = !DILocalVariable(name: "stack_buf_start", scope: !11678, file: !1876, line: 453, type: !957)
!11689 = !DILocalVariable(name: "delta", scope: !11678, file: !1876, line: 454, type: !200)
!11690 = !DILocation(line: 0, scope: !11678)
!11691 = !DILocation(line: 465, column: 20, scope: !11692)
!11692 = distinct !DILexicalBlock(scope: !11678, file: !1876, line: 463, column: 2)
!11693 = !DILocation(line: 466, column: 21, scope: !11692)
!11694 = !DILocation(line: 473, column: 28, scope: !11678)
!11695 = !DILocation(line: 514, column: 33, scope: !11678)
!11696 = !DILocation(line: 514, column: 25, scope: !11678)
!11697 = !DILocation(line: 514, column: 31, scope: !11678)
!11698 = !DILocation(line: 515, column: 25, scope: !11678)
!11699 = !DILocation(line: 515, column: 30, scope: !11678)
!11700 = !DILocation(line: 516, column: 25, scope: !11678)
!11701 = !DILocation(line: 516, column: 31, scope: !11678)
!11702 = !DILocation(line: 520, column: 2, scope: !11678)
!11703 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1828, file: !1828, line: 331, type: !11704, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11706)
!11704 = !DISubroutineType(types: !11705)
!11705 = !{!957, !11608}
!11706 = !{!11707}
!11707 = !DILocalVariable(name: "sym", arg: 1, scope: !11703, file: !1828, line: 331, type: !11608)
!11708 = !DILocation(line: 0, scope: !11703)
!11709 = !DILocation(line: 333, column: 21, scope: !11703)
!11710 = !DILocation(line: 333, column: 2, scope: !11703)
!11711 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !11712, file: !11712, line: 40, type: !11713, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11715)
!11712 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11713 = !DISubroutineType(types: !11714)
!11714 = !{null, !11656}
!11715 = !{!11716}
!11716 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11711, file: !11712, line: 40, type: !11656)
!11717 = !DILocation(line: 0, scope: !11711)
!11718 = !DILocation(line: 42, column: 31, scope: !11711)
!11719 = !DILocation(line: 42, column: 2, scope: !11711)
!11720 = !DILocation(line: 43, column: 1, scope: !11711)
!11721 = distinct !DISubprogram(name: "z_init_timeout", scope: !11712, file: !11712, line: 25, type: !1937, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11722)
!11722 = !{!11723}
!11723 = !DILocalVariable(name: "to", arg: 1, scope: !11721, file: !11712, line: 25, type: !1939)
!11724 = !DILocation(line: 0, scope: !11721)
!11725 = !DILocation(line: 27, column: 22, scope: !11721)
!11726 = !DILocation(line: 27, column: 2, scope: !11721)
!11727 = !DILocation(line: 28, column: 1, scope: !11721)
!11728 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !11729, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11731)
!11729 = !DISubroutineType(types: !11730)
!11730 = !{null, !1983}
!11731 = !{!11732}
!11732 = !DILocalVariable(name: "node", arg: 1, scope: !11728, file: !221, line: 211, type: !1983)
!11733 = !DILocation(line: 0, scope: !11728)
!11734 = !DILocation(line: 213, column: 8, scope: !11728)
!11735 = !DILocation(line: 213, column: 13, scope: !11728)
!11736 = !DILocation(line: 214, column: 8, scope: !11728)
!11737 = !DILocation(line: 214, column: 13, scope: !11728)
!11738 = !DILocation(line: 215, column: 1, scope: !11728)
!11739 = distinct !DISubprogram(name: "sys_dlist_init", scope: !221, file: !221, line: 197, type: !11740, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11743)
!11740 = !DISubroutineType(types: !11741)
!11741 = !{null, !11742}
!11742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 32)
!11743 = !{!11744}
!11744 = !DILocalVariable(name: "list", arg: 1, scope: !11739, file: !221, line: 197, type: !11742)
!11745 = !DILocation(line: 0, scope: !11739)
!11746 = !DILocation(line: 199, column: 8, scope: !11739)
!11747 = !DILocation(line: 199, column: 13, scope: !11739)
!11748 = !DILocation(line: 200, column: 8, scope: !11739)
!11749 = !DILocation(line: 200, column: 13, scope: !11739)
!11750 = !DILocation(line: 201, column: 1, scope: !11739)
!11751 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1876, file: !1876, line: 641, type: !11752, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11758)
!11752 = !DISubroutineType(types: !11753)
!11753 = !{!1879, !1880, !11608, !200, !3246, !102, !102, !102, !103, !121, !11754}
!11754 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1359, line: 67, baseType: !11755)
!11755 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1359, line: 65, size: 64, elements: !11756)
!11756 = !{!11757}
!11757 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11755, file: !1359, line: 66, baseType: !1358, size: 64)
!11758 = !{!11759, !11760, !11761, !11762, !11763, !11764, !11765, !11766, !11767, !11768}
!11759 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11751, file: !1876, line: 641, type: !1880)
!11760 = !DILocalVariable(name: "stack", arg: 2, scope: !11751, file: !1876, line: 642, type: !11608)
!11761 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11751, file: !1876, line: 643, type: !200)
!11762 = !DILocalVariable(name: "entry", arg: 4, scope: !11751, file: !1876, line: 643, type: !3246)
!11763 = !DILocalVariable(name: "p1", arg: 5, scope: !11751, file: !1876, line: 644, type: !102)
!11764 = !DILocalVariable(name: "p2", arg: 6, scope: !11751, file: !1876, line: 644, type: !102)
!11765 = !DILocalVariable(name: "p3", arg: 7, scope: !11751, file: !1876, line: 644, type: !102)
!11766 = !DILocalVariable(name: "prio", arg: 8, scope: !11751, file: !1876, line: 645, type: !103)
!11767 = !DILocalVariable(name: "options", arg: 9, scope: !11751, file: !1876, line: 645, type: !121)
!11768 = !DILocalVariable(name: "delay", arg: 10, scope: !11751, file: !1876, line: 645, type: !11754)
!11769 = !DILocation(line: 0, scope: !11751)
!11770 = !DILocation(line: 649, column: 2, scope: !11751)
!11771 = !DILocation(line: 652, column: 7, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11751, file: !1876, line: 652, column: 6)
!11773 = !DILocation(line: 652, column: 6, scope: !11751)
!11774 = !DILocation(line: 653, column: 3, scope: !11775)
!11775 = distinct !DILexicalBlock(scope: !11772, file: !1876, line: 652, column: 39)
!11776 = !DILocation(line: 654, column: 2, scope: !11775)
!11777 = !DILocation(line: 656, column: 2, scope: !11751)
!11778 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1876, file: !1876, line: 401, type: !11779, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11781)
!11779 = !DISubroutineType(types: !11780)
!11780 = !{null, !1880, !11754}
!11781 = !{!11782, !11783}
!11782 = !DILocalVariable(name: "thread", arg: 1, scope: !11778, file: !1876, line: 401, type: !1880)
!11783 = !DILocalVariable(name: "delay", arg: 2, scope: !11778, file: !1876, line: 401, type: !11754)
!11784 = !DILocation(line: 0, scope: !11778)
!11785 = !DILocation(line: 404, column: 6, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11778, file: !1876, line: 404, column: 6)
!11787 = !DILocation(line: 404, column: 6, scope: !11778)
!11788 = !DILocation(line: 405, column: 3, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11786, file: !1876, line: 404, column: 38)
!11790 = !DILocation(line: 406, column: 2, scope: !11789)
!11791 = !DILocation(line: 407, column: 3, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11786, file: !1876, line: 406, column: 9)
!11793 = !DILocation(line: 413, column: 1, scope: !11778)
!11794 = distinct !DISubprogram(name: "k_thread_start", scope: !3045, file: !3045, line: 205, type: !11795, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11797)
!11795 = !DISubroutineType(types: !11796)
!11796 = !{null, !1879}
!11797 = !{!11798}
!11798 = !DILocalVariable(name: "thread", arg: 1, scope: !11794, file: !3045, line: 205, type: !1879)
!11799 = !DILocation(line: 0, scope: !11794)
!11800 = !DILocation(line: 214, column: 2, scope: !11801)
!11801 = distinct !DILexicalBlock(scope: !11794, file: !3045, line: 214, column: 2)
!11802 = !{i64 2154090130}
!11803 = !DILocation(line: 215, column: 2, scope: !11794)
!11804 = !DILocation(line: 216, column: 1, scope: !11794)
!11805 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11712, file: !11712, line: 47, type: !11779, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11806)
!11806 = !{!11807, !11808}
!11807 = !DILocalVariable(name: "thread", arg: 1, scope: !11805, file: !11712, line: 47, type: !1880)
!11808 = !DILocalVariable(name: "ticks", arg: 2, scope: !11805, file: !11712, line: 47, type: !11754)
!11809 = !DILocation(line: 0, scope: !11805)
!11810 = !DILocation(line: 49, column: 30, scope: !11805)
!11811 = !DILocation(line: 49, column: 2, scope: !11805)
!11812 = !DILocation(line: 50, column: 1, scope: !11805)
!11813 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1876, file: !1876, line: 748, type: !2913, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11814)
!11814 = !{!11815, !11833}
!11815 = !DILocalVariable(name: "thread_data", scope: !11816, file: !1876, line: 750, type: !11817)
!11816 = distinct !DILexicalBlock(scope: !11813, file: !1876, line: 750, column: 2)
!11817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11818, size: 32)
!11818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !307, line: 620, size: 384, elements: !11819)
!11819 = !{!11820, !11821, !11822, !11823, !11824, !11825, !11826, !11827, !11828, !11829, !11830, !11832}
!11820 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !11818, file: !307, line: 621, baseType: !1880, size: 32)
!11821 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !11818, file: !307, line: 622, baseType: !11608, size: 32, offset: 32)
!11822 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !11818, file: !307, line: 623, baseType: !32, size: 32, offset: 64)
!11823 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !11818, file: !307, line: 624, baseType: !3246, size: 32, offset: 96)
!11824 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !11818, file: !307, line: 625, baseType: !102, size: 32, offset: 128)
!11825 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !11818, file: !307, line: 626, baseType: !102, size: 32, offset: 160)
!11826 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !11818, file: !307, line: 627, baseType: !102, size: 32, offset: 192)
!11827 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !11818, file: !307, line: 628, baseType: !103, size: 32, offset: 224)
!11828 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !11818, file: !307, line: 629, baseType: !121, size: 32, offset: 256)
!11829 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !11818, file: !307, line: 630, baseType: !566, size: 32, offset: 288)
!11830 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !11818, file: !307, line: 631, baseType: !11831, size: 32, offset: 320)
!11831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2913, size: 32)
!11832 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !11818, file: !307, line: 632, baseType: !144, size: 32, offset: 352)
!11833 = !DILocalVariable(name: "thread_data", scope: !11834, file: !1876, line: 781, type: !11817)
!11834 = distinct !DILexicalBlock(scope: !11813, file: !1876, line: 781, column: 2)
!11835 = !DILocation(line: 0, scope: !11816)
!11836 = !DILocation(line: 750, column: 2, scope: !11816)
!11837 = !DILocation(line: 780, column: 2, scope: !11813)
!11838 = !DILocation(line: 0, scope: !11834)
!11839 = !DILocation(line: 781, column: 2, scope: !11834)
!11840 = !DILocation(line: 752, column: 17, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11842, file: !1876, line: 750, column: 38)
!11842 = distinct !DILexicalBlock(scope: !11816, file: !1876, line: 750, column: 2)
!11843 = !DILocation(line: 753, column: 17, scope: !11841)
!11844 = !DILocation(line: 754, column: 17, scope: !11841)
!11845 = !DILocation(line: 755, column: 17, scope: !11841)
!11846 = !DILocation(line: 756, column: 17, scope: !11841)
!11847 = !DILocation(line: 757, column: 17, scope: !11841)
!11848 = !DILocation(line: 758, column: 17, scope: !11841)
!11849 = !DILocation(line: 759, column: 17, scope: !11841)
!11850 = !DILocation(line: 760, column: 17, scope: !11841)
!11851 = !DILocation(line: 751, column: 3, scope: !11841)
!11852 = !DILocation(line: 763, column: 16, scope: !11841)
!11853 = !DILocation(line: 763, column: 29, scope: !11841)
!11854 = !DILocation(line: 763, column: 39, scope: !11841)
!11855 = !DILocation(line: 750, column: 2, scope: !11842)
!11856 = !DILocation(line: 750, column: 2, scope: !11857)
!11857 = distinct !DILexicalBlock(scope: !11842, file: !1876, line: 750, column: 2)
!11858 = distinct !{!11858, !11836, !11859}
!11859 = !DILocation(line: 764, column: 2, scope: !11816)
!11860 = !DILocation(line: 787, column: 2, scope: !11813)
!11861 = !DILocation(line: 788, column: 1, scope: !11813)
!11862 = !DILocation(line: 782, column: 20, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11864, file: !1876, line: 782, column: 7)
!11864 = distinct !DILexicalBlock(scope: !11865, file: !1876, line: 781, column: 38)
!11865 = distinct !DILexicalBlock(scope: !11834, file: !1876, line: 781, column: 2)
!11866 = !DILocation(line: 782, column: 31, scope: !11863)
!11867 = !DILocation(line: 782, column: 7, scope: !11864)
!11868 = !DILocation(line: 783, column: 37, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11863, file: !1876, line: 782, column: 51)
!11870 = !DILocation(line: 784, column: 10, scope: !11869)
!11871 = !DILocation(line: 783, column: 4, scope: !11869)
!11872 = !DILocation(line: 785, column: 3, scope: !11869)
!11873 = !DILocation(line: 781, column: 2, scope: !11865)
!11874 = !DILocation(line: 781, column: 2, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11865, file: !1876, line: 781, column: 2)
!11876 = distinct !{!11876, !11839, !11877}
!11877 = !DILocation(line: 786, column: 2, scope: !11834)
!11878 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !11879, file: !11879, line: 403, type: !11880, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11882)
!11879 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11880 = !DISubroutineType(types: !11881)
!11881 = !{!1270, !1270}
!11882 = !{!11883}
!11883 = !DILocalVariable(name: "t", arg: 1, scope: !11878, file: !11879, line: 403, type: !1270)
!11884 = !DILocation(line: 0, scope: !11878)
!11885 = !DILocalVariable(name: "t", arg: 1, scope: !11886, file: !11879, line: 102, type: !1270)
!11886 = distinct !DISubprogram(name: "z_tmcvt", scope: !11879, file: !11879, line: 102, type: !11887, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11889)
!11887 = !DISubroutineType(types: !11888)
!11888 = !{!1270, !1270, !121, !121, !157, !157, !157, !157}
!11889 = !{!11885, !11890, !11891, !11892, !11893, !11894, !11895, !11896, !11897, !11898, !11899}
!11890 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11886, file: !11879, line: 102, type: !121)
!11891 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11886, file: !11879, line: 103, type: !121)
!11892 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11886, file: !11879, line: 103, type: !157)
!11893 = !DILocalVariable(name: "result32", arg: 5, scope: !11886, file: !11879, line: 104, type: !157)
!11894 = !DILocalVariable(name: "round_up", arg: 6, scope: !11886, file: !11879, line: 104, type: !157)
!11895 = !DILocalVariable(name: "round_off", arg: 7, scope: !11886, file: !11879, line: 105, type: !157)
!11896 = !DILocalVariable(name: "mul_ratio", scope: !11886, file: !11879, line: 107, type: !157)
!11897 = !DILocalVariable(name: "div_ratio", scope: !11886, file: !11879, line: 109, type: !157)
!11898 = !DILocalVariable(name: "off", scope: !11886, file: !11879, line: 116, type: !1270)
!11899 = !DILocalVariable(name: "rdivisor", scope: !11900, file: !11879, line: 119, type: !121)
!11900 = distinct !DILexicalBlock(scope: !11901, file: !11879, line: 118, column: 18)
!11901 = distinct !DILexicalBlock(scope: !11886, file: !11879, line: 118, column: 6)
!11902 = !DILocation(line: 0, scope: !11886, inlinedAt: !11903)
!11903 = distinct !DILocation(line: 406, column: 9, scope: !11878)
!11904 = !DILocation(line: 145, column: 13, scope: !11905, inlinedAt: !11903)
!11905 = distinct !DILexicalBlock(scope: !11906, file: !11879, line: 144, column: 10)
!11906 = distinct !DILexicalBlock(scope: !11907, file: !11879, line: 142, column: 7)
!11907 = distinct !DILexicalBlock(scope: !11908, file: !11879, line: 141, column: 24)
!11908 = distinct !DILexicalBlock(scope: !11909, file: !11879, line: 141, column: 13)
!11909 = distinct !DILexicalBlock(scope: !11886, file: !11879, line: 134, column: 6)
!11910 = !DILocation(line: 406, column: 2, scope: !11878)
!11911 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1876, file: !1876, line: 817, type: !3244, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11912)
!11912 = !{!11913, !11914, !11915, !11916}
!11913 = !DILocalVariable(name: "entry", arg: 1, scope: !11911, file: !1876, line: 817, type: !3246)
!11914 = !DILocalVariable(name: "p1", arg: 2, scope: !11911, file: !1876, line: 818, type: !102)
!11915 = !DILocalVariable(name: "p2", arg: 3, scope: !11911, file: !1876, line: 818, type: !102)
!11916 = !DILocalVariable(name: "p3", arg: 4, scope: !11911, file: !1876, line: 818, type: !102)
!11917 = !DILocation(line: 0, scope: !11911)
!11918 = !DILocation(line: 822, column: 2, scope: !11911)
!11919 = !DILocation(line: 822, column: 17, scope: !11911)
!11920 = !DILocation(line: 822, column: 30, scope: !11911)
!11921 = !DILocation(line: 823, column: 2, scope: !11911)
!11922 = !DILocation(line: 845, column: 2, scope: !11911)
!11923 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1876, file: !1876, line: 888, type: !11924, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11926)
!11924 = !DISubroutineType(types: !11925)
!11925 = !{!103, !1880}
!11926 = !{!11927}
!11927 = !DILocalVariable(name: "thread", arg: 1, scope: !11923, file: !1876, line: 888, type: !1880)
!11928 = !DILocation(line: 0, scope: !11923)
!11929 = !DILocation(line: 893, column: 2, scope: !11923)
!11930 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1876, file: !1876, line: 897, type: !11931, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11933)
!11931 = !DISubroutineType(types: !11932)
!11932 = !{!103, !1880, !32}
!11933 = !{!11934, !11935}
!11934 = !DILocalVariable(name: "thread", arg: 1, scope: !11930, file: !1876, line: 897, type: !1880)
!11935 = !DILocalVariable(name: "options", arg: 2, scope: !11930, file: !1876, line: 897, type: !32)
!11936 = !DILocation(line: 0, scope: !11930)
!11937 = !DILocation(line: 902, column: 2, scope: !11930)
!11938 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1876, file: !1876, line: 1072, type: !11939, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11944)
!11939 = !DISubroutineType(types: !11940)
!11940 = !{!103, !1879, !11941}
!11941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11942, size: 32)
!11942 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !211, line: 234, baseType: !11943)
!11943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !211, line: 192, elements: !322)
!11944 = !{!11945, !11946}
!11945 = !DILocalVariable(name: "thread", arg: 1, scope: !11938, file: !1876, line: 1072, type: !1879)
!11946 = !DILocalVariable(name: "stats", arg: 2, scope: !11938, file: !1876, line: 1073, type: !11941)
!11947 = !DILocation(line: 0, scope: !11938)
!11948 = !DILocation(line: 1075, column: 14, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11938, file: !1876, line: 1075, column: 6)
!11950 = !DILocation(line: 1075, column: 23, scope: !11949)
!11951 = !DILocation(line: 1086, column: 1, scope: !11938)
!11952 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1876, file: !1876, line: 1088, type: !11953, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1980, retainedNodes: !11955)
!11953 = !DISubroutineType(types: !11954)
!11954 = !{!103, !11941}
!11955 = !{!11956}
!11956 = !DILocalVariable(name: "stats", arg: 1, scope: !11952, file: !1876, line: 1088, type: !11941)
!11957 = !DILocation(line: 0, scope: !11952)
!11958 = !DILocation(line: 1094, column: 12, scope: !11959)
!11959 = distinct !DILexicalBlock(scope: !11952, file: !1876, line: 1094, column: 6)
!11960 = !DILocation(line: 1120, column: 1, scope: !11952)
!11961 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !11962, file: !11962, line: 20, type: !2913, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2894, retainedNodes: !322)
!11962 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11963 = !DILocation(line: 30, column: 2, scope: !11961)
!11964 = !DILocation(line: 31, column: 1, scope: !11961)
!11965 = distinct !DISubprogram(name: "idle", scope: !11962, file: !11962, line: 33, type: !3249, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2894, retainedNodes: !11966)
!11966 = !{!11967, !11968, !11969}
!11967 = !DILocalVariable(name: "unused1", arg: 1, scope: !11965, file: !11962, line: 33, type: !102)
!11968 = !DILocalVariable(name: "unused2", arg: 2, scope: !11965, file: !11962, line: 33, type: !102)
!11969 = !DILocalVariable(name: "unused3", arg: 3, scope: !11965, file: !11962, line: 33, type: !102)
!11970 = !DILocation(line: 0, scope: !11965)
!11971 = !DILocation(line: 41, column: 2, scope: !11965)
!11972 = !DILocation(line: 55, column: 2, scope: !11973, inlinedAt: !11977)
!11973 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5209, file: !5209, line: 42, type: !5210, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2894, retainedNodes: !11974)
!11974 = !{!11975, !11976}
!11975 = !DILocalVariable(name: "key", scope: !11973, file: !5209, line: 44, type: !32)
!11976 = !DILocalVariable(name: "tmp", scope: !11973, file: !5209, line: 53, type: !32)
!11977 = distinct !DILocation(line: 62, column: 10, scope: !11978)
!11978 = distinct !DILexicalBlock(scope: !11965, file: !11962, line: 41, column: 15)
!11979 = !{i64 1948208}
!11980 = !DILocation(line: 0, scope: !11973, inlinedAt: !11977)
!11981 = !DILocation(line: 86, column: 3, scope: !11978)
!11982 = distinct !{!11982, !11971, !11983}
!11983 = !DILocation(line: 105, column: 2, scope: !11965)
!11984 = distinct !DISubprogram(name: "k_cpu_idle", scope: !307, file: !307, line: 5627, type: !2913, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2894, retainedNodes: !322)
!11985 = !DILocation(line: 5629, column: 2, scope: !11984)
!11986 = !DILocation(line: 5630, column: 1, scope: !11984)
!11987 = !DISubprogram(name: "arch_cpu_idle", scope: !3247, file: !3247, line: 167, type: !2913, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!11988 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2108, file: !2108, line: 93, type: !11989, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11991)
!11989 = !DISubroutineType(types: !11990)
!11990 = !{!566, !2003, !2003}
!11991 = !{!11992, !11993, !11994, !11995}
!11992 = !DILocalVariable(name: "thread_1", arg: 1, scope: !11988, file: !2108, line: 93, type: !2003)
!11993 = !DILocalVariable(name: "thread_2", arg: 2, scope: !11988, file: !2108, line: 94, type: !2003)
!11994 = !DILocalVariable(name: "b1", scope: !11988, file: !2108, line: 97, type: !566)
!11995 = !DILocalVariable(name: "b2", scope: !11988, file: !2108, line: 98, type: !566)
!11996 = !DILocation(line: 0, scope: !11988)
!11997 = !DILocation(line: 97, column: 30, scope: !11988)
!11998 = !DILocation(line: 98, column: 30, scope: !11988)
!11999 = !DILocation(line: 100, column: 9, scope: !12000)
!12000 = distinct !DILexicalBlock(scope: !11988, file: !2108, line: 100, column: 6)
!12001 = !DILocation(line: 100, column: 6, scope: !11988)
!12002 = !DILocation(line: 125, column: 1, scope: !11988)
!12003 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2108, file: !2108, line: 428, type: !12004, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12006)
!12004 = !DISubroutineType(types: !12005)
!12005 = !{null, !2003}
!12006 = !{!12007}
!12007 = !DILocalVariable(name: "curr", arg: 1, scope: !12003, file: !2108, line: 428, type: !2003)
!12008 = !DILocation(line: 0, scope: !12003)
!12009 = !DILocation(line: 434, column: 6, scope: !12010)
!12010 = distinct !DILexicalBlock(scope: !12003, file: !2108, line: 434, column: 6)
!12011 = !DILocation(line: 434, column: 23, scope: !12010)
!12012 = !DILocation(line: 434, column: 6, scope: !12003)
!12013 = !DILocation(line: 435, column: 50, scope: !12014)
!12014 = distinct !DILexicalBlock(scope: !12010, file: !2108, line: 434, column: 29)
!12015 = !DILocation(line: 435, column: 48, scope: !12014)
!12016 = !DILocation(line: 435, column: 29, scope: !12014)
!12017 = !DILocation(line: 436, column: 24, scope: !12014)
!12018 = !DILocation(line: 436, column: 3, scope: !12014)
!12019 = !DILocation(line: 437, column: 2, scope: !12014)
!12020 = !DILocation(line: 438, column: 1, scope: !12003)
!12021 = distinct !DISubprogram(name: "slice_time", scope: !2108, file: !2108, line: 407, type: !12022, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12024)
!12022 = !DISubroutineType(types: !12023)
!12023 = !{!103, !2003}
!12024 = !{!12025, !12026}
!12025 = !DILocalVariable(name: "curr", arg: 1, scope: !12021, file: !2108, line: 407, type: !2003)
!12026 = !DILocalVariable(name: "ret", scope: !12021, file: !2108, line: 409, type: !103)
!12027 = !DILocation(line: 0, scope: !12021)
!12028 = !DILocation(line: 409, column: 12, scope: !12021)
!12029 = !DILocation(line: 416, column: 2, scope: !12021)
!12030 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2108, file: !2108, line: 440, type: !12031, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12033)
!12031 = !DISubroutineType(types: !12032)
!12032 = !{null, !566, !103}
!12033 = !{!12034, !12035, !12036, !12042}
!12034 = !DILocalVariable(name: "slice", arg: 1, scope: !12030, file: !2108, line: 440, type: !566)
!12035 = !DILocalVariable(name: "prio", arg: 2, scope: !12030, file: !2108, line: 440, type: !103)
!12036 = !DILocalVariable(name: "__i", scope: !12037, file: !2108, line: 442, type: !12038)
!12037 = distinct !DILexicalBlock(scope: !12030, file: !2108, line: 442, column: 2)
!12038 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !12039)
!12039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !12040)
!12040 = !{!12041}
!12041 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12039, file: !321, line: 33, baseType: !103, size: 32)
!12042 = !DILocalVariable(name: "__key", scope: !12037, file: !2108, line: 442, type: !12038)
!12043 = !DILocation(line: 0, scope: !12030)
!12044 = !DILocation(line: 0, scope: !12037)
!12045 = !DILocalVariable(name: "l", arg: 1, scope: !12046, file: !321, line: 136, type: !12049)
!12046 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !12047, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12050)
!12047 = !DISubroutineType(types: !12048)
!12048 = !{!12038, !12049}
!12049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 32)
!12050 = !{!12045, !12051}
!12051 = !DILocalVariable(name: "k", scope: !12046, file: !321, line: 139, type: !12038)
!12052 = !DILocation(line: 0, scope: !12046, inlinedAt: !12053)
!12053 = distinct !DILocation(line: 442, column: 2, scope: !12037)
!12054 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !12059)
!12055 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5209, file: !5209, line: 42, type: !5210, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12056)
!12056 = !{!12057, !12058}
!12057 = !DILocalVariable(name: "key", scope: !12055, file: !5209, line: 44, type: !32)
!12058 = !DILocalVariable(name: "tmp", scope: !12055, file: !5209, line: 53, type: !32)
!12059 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !12053)
!12060 = !{i64 1992179}
!12061 = !DILocation(line: 0, scope: !12055, inlinedAt: !12059)
!12062 = !DILocation(line: 443, column: 29, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12064, file: !2108, line: 442, column: 26)
!12064 = distinct !DILexicalBlock(scope: !12037, file: !2108, line: 442, column: 2)
!12065 = !DILocation(line: 444, column: 17, scope: !12063)
!12066 = !DILocation(line: 445, column: 51, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !12063, file: !2108, line: 445, column: 7)
!12068 = !DILocation(line: 445, column: 7, scope: !12063)
!12069 = !DILocation(line: 0, scope: !12063)
!12070 = !DILocation(line: 451, column: 18, scope: !12063)
!12071 = !DILocation(line: 452, column: 3, scope: !12063)
!12072 = !DILocalVariable(name: "key", arg: 2, scope: !12073, file: !321, line: 190, type: !12038)
!12073 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !12074, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12076)
!12074 = !DISubroutineType(types: !12075)
!12075 = !{null, !12049, !12038}
!12076 = !{!12077, !12072}
!12077 = !DILocalVariable(name: "l", arg: 1, scope: !12073, file: !321, line: 189, type: !12049)
!12078 = !DILocation(line: 0, scope: !12073, inlinedAt: !12079)
!12079 = distinct !DILocation(line: 442, column: 2, scope: !12064)
!12080 = !DILocalVariable(name: "key", arg: 1, scope: !12081, file: !5209, line: 84, type: !32)
!12081 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5209, file: !5209, line: 84, type: !5220, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12082)
!12082 = !{!12080}
!12083 = !DILocation(line: 0, scope: !12081, inlinedAt: !12084)
!12084 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !12079)
!12085 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !12084)
!12086 = !{i64 1992996}
!12087 = !DILocation(line: 454, column: 1, scope: !12030)
!12088 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !11879, file: !11879, line: 389, type: !6391, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12089)
!12089 = !{!12090}
!12090 = !DILocalVariable(name: "t", arg: 1, scope: !12088, file: !11879, line: 389, type: !121)
!12091 = !DILocation(line: 0, scope: !12088)
!12092 = !DILocalVariable(name: "t", arg: 1, scope: !12093, file: !11879, line: 102, type: !1270)
!12093 = distinct !DISubprogram(name: "z_tmcvt", scope: !11879, file: !11879, line: 102, type: !11887, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12094)
!12094 = !{!12092, !12095, !12096, !12097, !12098, !12099, !12100, !12101, !12102, !12103, !12104}
!12095 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12093, file: !11879, line: 102, type: !121)
!12096 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12093, file: !11879, line: 103, type: !121)
!12097 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12093, file: !11879, line: 103, type: !157)
!12098 = !DILocalVariable(name: "result32", arg: 5, scope: !12093, file: !11879, line: 104, type: !157)
!12099 = !DILocalVariable(name: "round_up", arg: 6, scope: !12093, file: !11879, line: 104, type: !157)
!12100 = !DILocalVariable(name: "round_off", arg: 7, scope: !12093, file: !11879, line: 105, type: !157)
!12101 = !DILocalVariable(name: "mul_ratio", scope: !12093, file: !11879, line: 107, type: !157)
!12102 = !DILocalVariable(name: "div_ratio", scope: !12093, file: !11879, line: 109, type: !157)
!12103 = !DILocalVariable(name: "off", scope: !12093, file: !11879, line: 116, type: !1270)
!12104 = !DILocalVariable(name: "rdivisor", scope: !12105, file: !11879, line: 119, type: !121)
!12105 = distinct !DILexicalBlock(scope: !12106, file: !11879, line: 118, column: 18)
!12106 = distinct !DILexicalBlock(scope: !12093, file: !11879, line: 118, column: 6)
!12107 = !DILocation(line: 0, scope: !12093, inlinedAt: !12108)
!12108 = distinct !DILocation(line: 392, column: 9, scope: !12088)
!12109 = !DILocation(line: 143, column: 25, scope: !12110, inlinedAt: !12108)
!12110 = distinct !DILexicalBlock(scope: !12111, file: !11879, line: 142, column: 17)
!12111 = distinct !DILexicalBlock(scope: !12112, file: !11879, line: 142, column: 7)
!12112 = distinct !DILexicalBlock(scope: !12113, file: !11879, line: 141, column: 24)
!12113 = distinct !DILexicalBlock(scope: !12114, file: !11879, line: 141, column: 13)
!12114 = distinct !DILexicalBlock(scope: !12093, file: !11879, line: 134, column: 6)
!12115 = !DILocation(line: 392, column: 2, scope: !12088)
!12116 = distinct !DISubprogram(name: "z_time_slice", scope: !2108, file: !2108, line: 502, type: !7028, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12117)
!12117 = !{!12118, !12119}
!12118 = !DILocalVariable(name: "ticks", arg: 1, scope: !12116, file: !2108, line: 502, type: !103)
!12119 = !DILocalVariable(name: "key", scope: !12116, file: !2108, line: 511, type: !12038)
!12120 = !DILocation(line: 0, scope: !12116)
!12121 = !DILocation(line: 0, scope: !12046, inlinedAt: !12122)
!12122 = distinct !DILocation(line: 511, column: 25, scope: !12116)
!12123 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !12124)
!12124 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !12122)
!12125 = !DILocation(line: 0, scope: !12055, inlinedAt: !12124)
!12126 = !DILocation(line: 514, column: 6, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !12116, file: !2108, line: 514, column: 6)
!12128 = !DILocation(line: 514, column: 25, scope: !12127)
!12129 = !DILocation(line: 514, column: 22, scope: !12127)
!12130 = !DILocation(line: 514, column: 6, scope: !12116)
!12131 = !DILocation(line: 515, column: 3, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12127, file: !2108, line: 514, column: 35)
!12133 = !DILocation(line: 0, scope: !12073, inlinedAt: !12134)
!12134 = distinct !DILocation(line: 516, column: 3, scope: !12132)
!12135 = !DILocation(line: 0, scope: !12081, inlinedAt: !12136)
!12136 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !12134)
!12137 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !12136)
!12138 = !DILocation(line: 517, column: 3, scope: !12132)
!12139 = !DILocation(line: 519, column: 18, scope: !12116)
!12140 = !DILocation(line: 522, column: 6, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !12116, file: !2108, line: 522, column: 6)
!12142 = !DILocation(line: 522, column: 27, scope: !12141)
!12143 = !DILocation(line: 522, column: 30, scope: !12141)
!12144 = !DILocation(line: 522, column: 6, scope: !12116)
!12145 = !DILocation(line: 523, column: 30, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12147, file: !2108, line: 523, column: 7)
!12147 = distinct !DILexicalBlock(scope: !12141, file: !2108, line: 522, column: 51)
!12148 = !DILocation(line: 523, column: 13, scope: !12146)
!12149 = !DILocation(line: 523, column: 7, scope: !12147)
!12150 = !DILocation(line: 530, column: 10, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12146, file: !2108, line: 523, column: 43)
!12152 = !DILocation(line: 531, column: 3, scope: !12151)
!12153 = !DILocation(line: 532, column: 30, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12146, file: !2108, line: 531, column: 10)
!12155 = !DILocation(line: 535, column: 29, scope: !12156)
!12156 = distinct !DILexicalBlock(scope: !12141, file: !2108, line: 534, column: 9)
!12157 = !DILocation(line: 0, scope: !12073, inlinedAt: !12158)
!12158 = distinct !DILocation(line: 537, column: 2, scope: !12116)
!12159 = !DILocation(line: 0, scope: !12081, inlinedAt: !12160)
!12160 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !12158)
!12161 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !12160)
!12162 = !DILocation(line: 538, column: 1, scope: !12116)
!12163 = distinct !DISubprogram(name: "sliceable", scope: !2108, file: !2108, line: 468, type: !12164, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12166)
!12164 = !DISubroutineType(types: !12165)
!12165 = !{!157, !2003}
!12166 = !{!12167, !12168}
!12167 = !DILocalVariable(name: "thread", arg: 1, scope: !12163, file: !2108, line: 468, type: !2003)
!12168 = !DILocalVariable(name: "ret", scope: !12163, file: !2108, line: 470, type: !157)
!12169 = !DILocation(line: 0, scope: !12163)
!12170 = !DILocation(line: 470, column: 13, scope: !12163)
!12171 = !DILocation(line: 471, column: 3, scope: !12163)
!12172 = !DILocation(line: 471, column: 7, scope: !12163)
!12173 = !DILocation(line: 472, column: 3, scope: !12163)
!12174 = !DILocation(line: 472, column: 37, scope: !12163)
!12175 = !DILocation(line: 472, column: 24, scope: !12163)
!12176 = !DILocation(line: 472, column: 43, scope: !12163)
!12177 = !DILocation(line: 472, column: 7, scope: !12163)
!12178 = !DILocation(line: 473, column: 3, scope: !12163)
!12179 = !DILocation(line: 473, column: 7, scope: !12163)
!12180 = !DILocation(line: 473, column: 6, scope: !12163)
!12181 = !DILocation(line: 479, column: 2, scope: !12163)
!12182 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2108, file: !2108, line: 482, type: !12183, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12185)
!12183 = !DISubroutineType(types: !12184)
!12184 = !{!12038, !12038}
!12185 = !{!12186, !12187}
!12186 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !12182, file: !2108, line: 482, type: !12038)
!12187 = !DILocalVariable(name: "curr", scope: !12182, file: !2108, line: 484, type: !2003)
!12188 = !DILocation(line: 0, scope: !12182)
!12189 = !DILocation(line: 484, column: 26, scope: !12182)
!12190 = !DILocation(line: 493, column: 7, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12182, file: !2108, line: 493, column: 6)
!12192 = !DILocation(line: 493, column: 6, scope: !12182)
!12193 = !DILocation(line: 494, column: 3, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12191, file: !2108, line: 493, column: 49)
!12195 = !DILocation(line: 495, column: 2, scope: !12194)
!12196 = !DILocation(line: 496, column: 2, scope: !12182)
!12197 = !DILocation(line: 499, column: 1, scope: !12182)
!12198 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !11318, file: !11318, line: 106, type: !12164, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12199)
!12199 = !{!12200, !12201}
!12200 = !DILocalVariable(name: "thread", arg: 1, scope: !12198, file: !11318, line: 106, type: !2003)
!12201 = !DILocalVariable(name: "state", scope: !12198, file: !11318, line: 108, type: !154)
!12202 = !DILocation(line: 0, scope: !12198)
!12203 = !DILocation(line: 108, column: 31, scope: !12198)
!12204 = !DILocation(line: 110, column: 16, scope: !12198)
!12205 = !DILocation(line: 111, column: 41, scope: !12198)
!12206 = !DILocation(line: 110, column: 2, scope: !12198)
!12207 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2108, file: !2108, line: 393, type: !12004, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12208)
!12208 = !{!12209}
!12209 = !DILocalVariable(name: "thread", arg: 1, scope: !12207, file: !2108, line: 393, type: !2003)
!12210 = !DILocation(line: 0, scope: !12207)
!12211 = !DILocation(line: 395, column: 6, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12207, file: !2108, line: 395, column: 6)
!12213 = !DILocation(line: 395, column: 6, scope: !12207)
!12214 = !DILocalVariable(name: "thread", arg: 1, scope: !12215, file: !2108, line: 264, type: !2003)
!12215 = distinct !DISubprogram(name: "dequeue_thread", scope: !2108, file: !2108, line: 264, type: !12004, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12216)
!12216 = !{!12214}
!12217 = !DILocation(line: 0, scope: !12215, inlinedAt: !12218)
!12218 = distinct !DILocation(line: 396, column: 3, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12212, file: !2108, line: 395, column: 34)
!12220 = !DILocation(line: 266, column: 15, scope: !12215, inlinedAt: !12218)
!12221 = !DILocation(line: 266, column: 28, scope: !12215, inlinedAt: !12218)
!12222 = !DILocalVariable(name: "thread", arg: 1, scope: !12223, file: !2108, line: 232, type: !2003)
!12223 = distinct !DISubprogram(name: "runq_remove", scope: !2108, file: !2108, line: 232, type: !12004, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12224)
!12224 = !{!12222}
!12225 = !DILocation(line: 0, scope: !12223, inlinedAt: !12226)
!12226 = distinct !DILocation(line: 268, column: 3, scope: !12227, inlinedAt: !12218)
!12227 = distinct !DILexicalBlock(scope: !12228, file: !2108, line: 267, column: 35)
!12228 = distinct !DILexicalBlock(scope: !12215, file: !2108, line: 267, column: 6)
!12229 = !DILocation(line: 234, column: 2, scope: !12223, inlinedAt: !12226)
!12230 = !DILocation(line: 397, column: 2, scope: !12219)
!12231 = !DILocalVariable(name: "thread", arg: 1, scope: !12232, file: !2108, line: 250, type: !2003)
!12232 = distinct !DISubprogram(name: "queue_thread", scope: !2108, file: !2108, line: 250, type: !12004, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12233)
!12233 = !{!12231}
!12234 = !DILocation(line: 0, scope: !12232, inlinedAt: !12235)
!12235 = distinct !DILocation(line: 398, column: 2, scope: !12207)
!12236 = !DILocation(line: 252, column: 15, scope: !12232, inlinedAt: !12235)
!12237 = !DILocation(line: 252, column: 28, scope: !12232, inlinedAt: !12235)
!12238 = !DILocalVariable(name: "thread", arg: 1, scope: !12239, file: !2108, line: 227, type: !2003)
!12239 = distinct !DISubprogram(name: "runq_add", scope: !2108, file: !2108, line: 227, type: !12004, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12240)
!12240 = !{!12238}
!12241 = !DILocation(line: 0, scope: !12239, inlinedAt: !12242)
!12242 = distinct !DILocation(line: 254, column: 3, scope: !12243, inlinedAt: !12235)
!12243 = distinct !DILexicalBlock(scope: !12244, file: !2108, line: 253, column: 35)
!12244 = distinct !DILexicalBlock(scope: !12232, file: !2108, line: 253, column: 6)
!12245 = !DILocalVariable(name: "pq", arg: 1, scope: !12246, file: !2108, line: 181, type: !12249)
!12246 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2108, file: !2108, line: 181, type: !12247, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12250)
!12247 = !DISubroutineType(types: !12248)
!12248 = !{null, !12249, !2003}
!12249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 32)
!12250 = !{!12245, !12251, !12252}
!12251 = !DILocalVariable(name: "thread", arg: 2, scope: !12246, file: !2108, line: 182, type: !2003)
!12252 = !DILocalVariable(name: "t", scope: !12246, file: !2108, line: 184, type: !2003)
!12253 = !DILocation(line: 0, scope: !12246, inlinedAt: !12254)
!12254 = distinct !DILocation(line: 229, column: 2, scope: !12239, inlinedAt: !12242)
!12255 = !DILocation(line: 188, column: 2, scope: !12256, inlinedAt: !12254)
!12256 = distinct !DILexicalBlock(scope: !12246, file: !2108, line: 188, column: 2)
!12257 = !DILocation(line: 188, column: 2, scope: !12258, inlinedAt: !12254)
!12258 = distinct !DILexicalBlock(scope: !12256, file: !2108, line: 188, column: 2)
!12259 = !DILocation(line: 0, scope: !12256, inlinedAt: !12254)
!12260 = !DILocation(line: 189, column: 7, scope: !12261, inlinedAt: !12254)
!12261 = distinct !DILexicalBlock(scope: !12262, file: !2108, line: 189, column: 7)
!12262 = distinct !DILexicalBlock(scope: !12258, file: !2108, line: 188, column: 56)
!12263 = !DILocation(line: 189, column: 35, scope: !12261, inlinedAt: !12254)
!12264 = !DILocation(line: 189, column: 7, scope: !12262, inlinedAt: !12254)
!12265 = !DILocation(line: 191, column: 21, scope: !12266, inlinedAt: !12254)
!12266 = distinct !DILexicalBlock(scope: !12261, file: !2108, line: 189, column: 40)
!12267 = !DILocation(line: 190, column: 4, scope: !12266, inlinedAt: !12254)
!12268 = !DILocation(line: 192, column: 4, scope: !12266, inlinedAt: !12254)
!12269 = distinct !{!12269, !12255, !12270}
!12270 = !DILocation(line: 194, column: 2, scope: !12256, inlinedAt: !12254)
!12271 = !DILocation(line: 196, column: 37, scope: !12246, inlinedAt: !12254)
!12272 = !DILocation(line: 196, column: 2, scope: !12246, inlinedAt: !12254)
!12273 = !DILocation(line: 197, column: 1, scope: !12246, inlinedAt: !12254)
!12274 = !DILocation(line: 399, column: 25, scope: !12207)
!12275 = !DILocation(line: 399, column: 22, scope: !12207)
!12276 = !DILocation(line: 399, column: 2, scope: !12207)
!12277 = !DILocation(line: 400, column: 1, scope: !12207)
!12278 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !11318, file: !11318, line: 136, type: !12164, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12279)
!12279 = !{!12280}
!12280 = !DILocalVariable(name: "thread", arg: 1, scope: !12278, file: !11318, line: 136, type: !2003)
!12281 = !DILocation(line: 0, scope: !12278)
!12282 = !DILocation(line: 138, column: 9, scope: !12278)
!12283 = !DILocation(line: 138, column: 2, scope: !12278)
!12284 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2108, file: !2108, line: 1137, type: !12247, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12285)
!12285 = !{!12286, !12287}
!12286 = !DILocalVariable(name: "pq", arg: 1, scope: !12284, file: !2108, line: 1137, type: !12249)
!12287 = !DILocalVariable(name: "thread", arg: 2, scope: !12284, file: !2108, line: 1137, type: !2003)
!12288 = !DILocation(line: 0, scope: !12284)
!12289 = !DILocation(line: 1141, column: 33, scope: !12284)
!12290 = !DILocation(line: 1141, column: 2, scope: !12284)
!12291 = !DILocation(line: 1142, column: 1, scope: !12284)
!12292 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !221, file: !221, line: 294, type: !12293, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12295)
!12293 = !DISubroutineType(types: !12294)
!12294 = !{!2104, !12249}
!12295 = !{!12296}
!12296 = !DILocalVariable(name: "list", arg: 1, scope: !12292, file: !221, line: 294, type: !12249)
!12297 = !DILocation(line: 0, scope: !12292)
!12298 = !DILocation(line: 296, column: 9, scope: !12292)
!12299 = !DILocation(line: 296, column: 49, scope: !12292)
!12300 = !DILocation(line: 296, column: 2, scope: !12292)
!12301 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !221, file: !221, line: 443, type: !12302, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12304)
!12302 = !DISubroutineType(types: !12303)
!12303 = !{null, !2104, !2104}
!12304 = !{!12305, !12306, !12307}
!12305 = !DILocalVariable(name: "successor", arg: 1, scope: !12301, file: !221, line: 443, type: !2104)
!12306 = !DILocalVariable(name: "node", arg: 2, scope: !12301, file: !221, line: 443, type: !2104)
!12307 = !DILocalVariable(name: "prev", scope: !12301, file: !221, line: 445, type: !12308)
!12308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2104)
!12309 = !DILocation(line: 0, scope: !12301)
!12310 = !DILocation(line: 445, column: 39, scope: !12301)
!12311 = !DILocation(line: 447, column: 8, scope: !12301)
!12312 = !DILocation(line: 447, column: 13, scope: !12301)
!12313 = !DILocation(line: 448, column: 8, scope: !12301)
!12314 = !DILocation(line: 448, column: 13, scope: !12301)
!12315 = !DILocation(line: 449, column: 8, scope: !12301)
!12316 = !DILocation(line: 449, column: 13, scope: !12301)
!12317 = !DILocation(line: 450, column: 18, scope: !12301)
!12318 = !DILocation(line: 451, column: 1, scope: !12301)
!12319 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !221, file: !221, line: 341, type: !12320, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12322)
!12320 = !DISubroutineType(types: !12321)
!12321 = !{!2104, !12249, !2104}
!12322 = !{!12323, !12324}
!12323 = !DILocalVariable(name: "list", arg: 1, scope: !12319, file: !221, line: 341, type: !12249)
!12324 = !DILocalVariable(name: "node", arg: 2, scope: !12319, file: !221, line: 342, type: !2104)
!12325 = !DILocation(line: 0, scope: !12319)
!12326 = !DILocation(line: 344, column: 15, scope: !12319)
!12327 = !DILocation(line: 344, column: 9, scope: !12319)
!12328 = !DILocation(line: 344, column: 26, scope: !12319)
!12329 = !DILocation(line: 344, column: 2, scope: !12319)
!12330 = distinct !DISubprogram(name: "sys_dlist_append", scope: !221, file: !221, line: 404, type: !12331, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12333)
!12331 = !DISubroutineType(types: !12332)
!12332 = !{null, !12249, !2104}
!12333 = !{!12334, !12335, !12336}
!12334 = !DILocalVariable(name: "list", arg: 1, scope: !12330, file: !221, line: 404, type: !12249)
!12335 = !DILocalVariable(name: "node", arg: 2, scope: !12330, file: !221, line: 404, type: !2104)
!12336 = !DILocalVariable(name: "tail", scope: !12330, file: !221, line: 406, type: !12308)
!12337 = !DILocation(line: 0, scope: !12330)
!12338 = !DILocation(line: 406, column: 34, scope: !12330)
!12339 = !DILocation(line: 408, column: 8, scope: !12330)
!12340 = !DILocation(line: 408, column: 13, scope: !12330)
!12341 = !DILocation(line: 409, column: 8, scope: !12330)
!12342 = !DILocation(line: 409, column: 13, scope: !12330)
!12343 = !DILocation(line: 411, column: 8, scope: !12330)
!12344 = !DILocation(line: 411, column: 13, scope: !12330)
!12345 = !DILocation(line: 412, column: 13, scope: !12330)
!12346 = !DILocation(line: 413, column: 1, scope: !12330)
!12347 = distinct !DISubprogram(name: "update_cache", scope: !2108, file: !2108, line: 559, type: !7028, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12348)
!12348 = !{!12349, !12350}
!12349 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !12347, file: !2108, line: 559, type: !103)
!12350 = !DILocalVariable(name: "thread", scope: !12347, file: !2108, line: 562, type: !2003)
!12351 = !DILocation(line: 0, scope: !12347)
!12352 = !DILocation(line: 239, column: 9, scope: !12353, inlinedAt: !12356)
!12353 = distinct !DISubprogram(name: "runq_best", scope: !2108, file: !2108, line: 237, type: !12354, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!12354 = !DISubroutineType(types: !12355)
!12355 = !{!2003}
!12356 = distinct !DILocation(line: 314, column: 28, scope: !12357, inlinedAt: !12360)
!12357 = distinct !DISubprogram(name: "next_up", scope: !2108, file: !2108, line: 312, type: !12354, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12358)
!12358 = !{!12359}
!12359 = !DILocalVariable(name: "thread", scope: !12357, file: !2108, line: 314, type: !2003)
!12360 = distinct !DILocation(line: 562, column: 28, scope: !12347)
!12361 = !DILocation(line: 0, scope: !12357, inlinedAt: !12360)
!12362 = !DILocation(line: 340, column: 17, scope: !12357, inlinedAt: !12360)
!12363 = !DILocation(line: 340, column: 9, scope: !12357, inlinedAt: !12360)
!12364 = !DILocalVariable(name: "thread", arg: 1, scope: !12365, file: !2108, line: 127, type: !2003)
!12365 = distinct !DISubprogram(name: "should_preempt", scope: !2108, file: !2108, line: 127, type: !12366, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12368)
!12366 = !DISubroutineType(types: !12367)
!12367 = !{!157, !2003, !103}
!12368 = !{!12364, !12369}
!12369 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !12365, file: !2108, line: 128, type: !103)
!12370 = !DILocation(line: 0, scope: !12365, inlinedAt: !12371)
!12371 = distinct !DILocation(line: 564, column: 6, scope: !12372)
!12372 = distinct !DILexicalBlock(scope: !12347, file: !2108, line: 564, column: 6)
!12373 = !DILocation(line: 133, column: 17, scope: !12374, inlinedAt: !12371)
!12374 = distinct !DILexicalBlock(scope: !12365, file: !2108, line: 133, column: 6)
!12375 = !DILocation(line: 0, scope: !12372)
!12376 = !DILocation(line: 133, column: 6, scope: !12365, inlinedAt: !12371)
!12377 = !DILocation(line: 140, column: 6, scope: !12378, inlinedAt: !12371)
!12378 = distinct !DILexicalBlock(scope: !12365, file: !2108, line: 140, column: 6)
!12379 = !DILocation(line: 140, column: 6, scope: !12365, inlinedAt: !12371)
!12380 = !DILocation(line: 150, column: 9, scope: !12381, inlinedAt: !12371)
!12381 = distinct !DILexicalBlock(scope: !12365, file: !2108, line: 149, column: 6)
!12382 = !DILocation(line: 149, column: 6, scope: !12365, inlinedAt: !12371)
!12383 = !DILocation(line: 157, column: 6, scope: !12384, inlinedAt: !12371)
!12384 = distinct !DILexicalBlock(scope: !12365, file: !2108, line: 157, column: 6)
!12385 = !DILocation(line: 564, column: 6, scope: !12347)
!12386 = !DILocation(line: 566, column: 14, scope: !12387)
!12387 = distinct !DILexicalBlock(scope: !12388, file: !2108, line: 566, column: 7)
!12388 = distinct !DILexicalBlock(scope: !12372, file: !2108, line: 564, column: 42)
!12389 = !DILocation(line: 566, column: 7, scope: !12388)
!12390 = !DILocation(line: 567, column: 4, scope: !12391)
!12391 = distinct !DILexicalBlock(scope: !12387, file: !2108, line: 566, column: 27)
!12392 = !DILocation(line: 568, column: 3, scope: !12391)
!12393 = !DILocation(line: 585, column: 1, scope: !12347)
!12394 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2108, file: !2108, line: 1144, type: !12395, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12397)
!12395 = !DISubroutineType(types: !12396)
!12396 = !{!2003, !12249}
!12397 = !{!12398, !12399, !12400}
!12398 = !DILocalVariable(name: "pq", arg: 1, scope: !12394, file: !2108, line: 1144, type: !12249)
!12399 = !DILocalVariable(name: "thread", scope: !12394, file: !2108, line: 1146, type: !2003)
!12400 = !DILocalVariable(name: "n", scope: !12394, file: !2108, line: 1147, type: !2104)
!12401 = !DILocation(line: 0, scope: !12394)
!12402 = !DILocation(line: 1147, column: 19, scope: !12394)
!12403 = !DILocation(line: 1152, column: 2, scope: !12394)
!12404 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !11318, file: !11318, line: 115, type: !12164, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12405)
!12405 = !{!12406}
!12406 = !DILocalVariable(name: "thread", arg: 1, scope: !12404, file: !11318, line: 115, type: !2003)
!12407 = !DILocation(line: 0, scope: !12404)
!12408 = !DILocation(line: 117, column: 46, scope: !12404)
!12409 = !DILocation(line: 117, column: 10, scope: !12404)
!12410 = !DILocation(line: 117, column: 9, scope: !12404)
!12411 = !DILocation(line: 117, column: 2, scope: !12404)
!12412 = distinct !DISubprogram(name: "is_preempt", scope: !2108, file: !2108, line: 62, type: !12022, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12413)
!12413 = !{!12414}
!12414 = !DILocalVariable(name: "thread", arg: 1, scope: !12412, file: !2108, line: 62, type: !2003)
!12415 = !DILocation(line: 0, scope: !12412)
!12416 = !DILocation(line: 65, column: 22, scope: !12412)
!12417 = !DILocation(line: 65, column: 30, scope: !12412)
!12418 = !DILocation(line: 65, column: 2, scope: !12412)
!12419 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11712, file: !11712, line: 35, type: !12420, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12424)
!12420 = !DISubroutineType(types: !12421)
!12421 = !{!157, !12422}
!12422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12423, size: 32)
!12423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2054)
!12424 = !{!12425}
!12425 = !DILocalVariable(name: "to", arg: 1, scope: !12419, file: !11712, line: 35, type: !12422)
!12426 = !DILocation(line: 0, scope: !12419)
!12427 = !DILocation(line: 37, column: 35, scope: !12419)
!12428 = !DILocation(line: 37, column: 10, scope: !12419)
!12429 = !DILocation(line: 37, column: 9, scope: !12419)
!12430 = !DILocation(line: 37, column: 2, scope: !12419)
!12431 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !221, file: !221, line: 225, type: !12432, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12436)
!12432 = !DISubroutineType(types: !12433)
!12433 = !{!157, !12434}
!12434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12435, size: 32)
!12435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2013)
!12436 = !{!12437}
!12437 = !DILocalVariable(name: "node", arg: 1, scope: !12431, file: !221, line: 225, type: !12434)
!12438 = !DILocation(line: 0, scope: !12431)
!12439 = !DILocation(line: 227, column: 15, scope: !12431)
!12440 = !DILocation(line: 227, column: 20, scope: !12431)
!12441 = !DILocation(line: 227, column: 2, scope: !12431)
!12442 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !221, file: !221, line: 325, type: !12320, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12443)
!12443 = !{!12444, !12445}
!12444 = !DILocalVariable(name: "list", arg: 1, scope: !12442, file: !221, line: 325, type: !12249)
!12445 = !DILocalVariable(name: "node", arg: 2, scope: !12442, file: !221, line: 326, type: !2104)
!12446 = !DILocation(line: 0, scope: !12442)
!12447 = !DILocation(line: 328, column: 24, scope: !12442)
!12448 = !DILocation(line: 328, column: 15, scope: !12442)
!12449 = !DILocation(line: 328, column: 9, scope: !12442)
!12450 = !DILocation(line: 328, column: 45, scope: !12442)
!12451 = !DILocation(line: 328, column: 2, scope: !12442)
!12452 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !221, file: !221, line: 266, type: !12453, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12455)
!12453 = !DISubroutineType(types: !12454)
!12454 = !{!157, !12249}
!12455 = !{!12456}
!12456 = !DILocalVariable(name: "list", arg: 1, scope: !12452, file: !221, line: 266, type: !12249)
!12457 = !DILocation(line: 0, scope: !12452)
!12458 = !DILocation(line: 268, column: 15, scope: !12452)
!12459 = !DILocation(line: 268, column: 20, scope: !12452)
!12460 = !DILocation(line: 268, column: 2, scope: !12452)
!12461 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !221, file: !221, line: 496, type: !12462, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12464)
!12462 = !DISubroutineType(types: !12463)
!12463 = !{null, !2104}
!12464 = !{!12465, !12466, !12467}
!12465 = !DILocalVariable(name: "node", arg: 1, scope: !12461, file: !221, line: 496, type: !2104)
!12466 = !DILocalVariable(name: "prev", scope: !12461, file: !221, line: 498, type: !12308)
!12467 = !DILocalVariable(name: "next", scope: !12461, file: !221, line: 499, type: !12308)
!12468 = !DILocation(line: 0, scope: !12461)
!12469 = !DILocation(line: 498, column: 34, scope: !12461)
!12470 = !DILocation(line: 499, column: 34, scope: !12461)
!12471 = !DILocation(line: 501, column: 8, scope: !12461)
!12472 = !DILocation(line: 501, column: 13, scope: !12461)
!12473 = !DILocation(line: 502, column: 8, scope: !12461)
!12474 = !DILocation(line: 502, column: 13, scope: !12461)
!12475 = !DILocation(line: 503, column: 2, scope: !12461)
!12476 = !DILocation(line: 504, column: 1, scope: !12461)
!12477 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !12462, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12478)
!12478 = !{!12479}
!12479 = !DILocalVariable(name: "node", arg: 1, scope: !12477, file: !221, line: 211, type: !2104)
!12480 = !DILocation(line: 0, scope: !12477)
!12481 = !DILocation(line: 213, column: 8, scope: !12477)
!12482 = !DILocation(line: 213, column: 13, scope: !12477)
!12483 = !DILocation(line: 214, column: 8, scope: !12477)
!12484 = !DILocation(line: 214, column: 13, scope: !12477)
!12485 = !DILocation(line: 215, column: 1, scope: !12477)
!12486 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !11318, file: !11318, line: 131, type: !12487, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12489)
!12487 = !DISubroutineType(types: !12488)
!12488 = !{!157, !2003, !121}
!12489 = !{!12490, !12491}
!12490 = !DILocalVariable(name: "thread", arg: 1, scope: !12486, file: !11318, line: 131, type: !2003)
!12491 = !DILocalVariable(name: "state", arg: 2, scope: !12486, file: !11318, line: 131, type: !121)
!12492 = !DILocation(line: 0, scope: !12486)
!12493 = !DILocation(line: 133, column: 23, scope: !12486)
!12494 = !DILocation(line: 133, column: 45, scope: !12486)
!12495 = !DILocation(line: 133, column: 2, scope: !12486)
!12496 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !11318, file: !11318, line: 211, type: !12497, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12499)
!12497 = !DISubroutineType(types: !12498)
!12498 = !{!157, !103, !103}
!12499 = !{!12500, !12501}
!12500 = !DILocalVariable(name: "prio", arg: 1, scope: !12496, file: !11318, line: 211, type: !103)
!12501 = !DILocalVariable(name: "test_prio", arg: 2, scope: !12496, file: !11318, line: 211, type: !103)
!12502 = !DILocation(line: 0, scope: !12496)
!12503 = !DILocation(line: 213, column: 9, scope: !12496)
!12504 = !DILocation(line: 213, column: 2, scope: !12496)
!12505 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !11318, file: !11318, line: 83, type: !12164, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12506)
!12506 = !{!12507}
!12507 = !DILocalVariable(name: "thread", arg: 1, scope: !12505, file: !11318, line: 83, type: !2003)
!12508 = !DILocation(line: 0, scope: !12505)
!12509 = !DILocation(line: 89, column: 16, scope: !12505)
!12510 = !DILocation(line: 89, column: 2, scope: !12505)
!12511 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !11318, file: !11318, line: 206, type: !12497, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12512)
!12512 = !{!12513, !12514}
!12513 = !DILocalVariable(name: "prio1", arg: 1, scope: !12511, file: !11318, line: 206, type: !103)
!12514 = !DILocalVariable(name: "prio2", arg: 2, scope: !12511, file: !11318, line: 206, type: !103)
!12515 = !DILocation(line: 0, scope: !12511)
!12516 = !DILocation(line: 208, column: 15, scope: !12511)
!12517 = !DILocation(line: 208, column: 2, scope: !12511)
!12518 = distinct !DISubprogram(name: "z_ready_thread", scope: !2108, file: !2108, line: 635, type: !12004, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12519)
!12519 = !{!12520, !12521, !12523}
!12520 = !DILocalVariable(name: "thread", arg: 1, scope: !12518, file: !2108, line: 635, type: !2003)
!12521 = !DILocalVariable(name: "__i", scope: !12522, file: !2108, line: 637, type: !12038)
!12522 = distinct !DILexicalBlock(scope: !12518, file: !2108, line: 637, column: 2)
!12523 = !DILocalVariable(name: "__key", scope: !12522, file: !2108, line: 637, type: !12038)
!12524 = !DILocation(line: 0, scope: !12518)
!12525 = !DILocation(line: 0, scope: !12522)
!12526 = !DILocation(line: 0, scope: !12046, inlinedAt: !12527)
!12527 = distinct !DILocation(line: 637, column: 2, scope: !12522)
!12528 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !12529)
!12529 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !12527)
!12530 = !DILocation(line: 0, scope: !12055, inlinedAt: !12529)
!12531 = !DILocation(line: 639, column: 4, scope: !12532)
!12532 = distinct !DILexicalBlock(scope: !12533, file: !2108, line: 638, column: 41)
!12533 = distinct !DILexicalBlock(scope: !12534, file: !2108, line: 638, column: 7)
!12534 = distinct !DILexicalBlock(scope: !12535, file: !2108, line: 637, column: 26)
!12535 = distinct !DILexicalBlock(scope: !12522, file: !2108, line: 637, column: 2)
!12536 = !DILocation(line: 0, scope: !12073, inlinedAt: !12537)
!12537 = distinct !DILocation(line: 637, column: 2, scope: !12535)
!12538 = !DILocation(line: 0, scope: !12081, inlinedAt: !12539)
!12539 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !12537)
!12540 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !12539)
!12541 = !DILocation(line: 642, column: 1, scope: !12518)
!12542 = distinct !DISubprogram(name: "ready_thread", scope: !2108, file: !2108, line: 617, type: !12004, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12543)
!12543 = !{!12544}
!12544 = !DILocalVariable(name: "thread", arg: 1, scope: !12542, file: !2108, line: 617, type: !2003)
!12545 = !DILocation(line: 0, scope: !12542)
!12546 = !DILocation(line: 626, column: 7, scope: !12547)
!12547 = distinct !DILexicalBlock(scope: !12542, file: !2108, line: 626, column: 6)
!12548 = !DILocation(line: 626, column: 34, scope: !12547)
!12549 = !DILocation(line: 626, column: 37, scope: !12547)
!12550 = !DILocation(line: 626, column: 6, scope: !12542)
!12551 = !DILocation(line: 0, scope: !12232, inlinedAt: !12552)
!12552 = distinct !DILocation(line: 629, column: 3, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12547, file: !2108, line: 626, column: 64)
!12554 = !DILocation(line: 252, column: 15, scope: !12232, inlinedAt: !12552)
!12555 = !DILocation(line: 252, column: 28, scope: !12232, inlinedAt: !12552)
!12556 = !DILocation(line: 0, scope: !12239, inlinedAt: !12557)
!12557 = distinct !DILocation(line: 254, column: 3, scope: !12243, inlinedAt: !12552)
!12558 = !DILocation(line: 0, scope: !12246, inlinedAt: !12559)
!12559 = distinct !DILocation(line: 229, column: 2, scope: !12239, inlinedAt: !12557)
!12560 = !DILocation(line: 188, column: 2, scope: !12256, inlinedAt: !12559)
!12561 = !DILocation(line: 188, column: 2, scope: !12258, inlinedAt: !12559)
!12562 = !DILocation(line: 0, scope: !12256, inlinedAt: !12559)
!12563 = !DILocation(line: 189, column: 7, scope: !12261, inlinedAt: !12559)
!12564 = !DILocation(line: 189, column: 35, scope: !12261, inlinedAt: !12559)
!12565 = !DILocation(line: 189, column: 7, scope: !12262, inlinedAt: !12559)
!12566 = !DILocation(line: 191, column: 21, scope: !12266, inlinedAt: !12559)
!12567 = !DILocation(line: 190, column: 4, scope: !12266, inlinedAt: !12559)
!12568 = !DILocation(line: 192, column: 4, scope: !12266, inlinedAt: !12559)
!12569 = distinct !{!12569, !12560, !12570}
!12570 = !DILocation(line: 194, column: 2, scope: !12256, inlinedAt: !12559)
!12571 = !DILocation(line: 196, column: 37, scope: !12246, inlinedAt: !12559)
!12572 = !DILocation(line: 196, column: 2, scope: !12246, inlinedAt: !12559)
!12573 = !DILocation(line: 197, column: 1, scope: !12246, inlinedAt: !12559)
!12574 = !DILocation(line: 630, column: 3, scope: !12553)
!12575 = !DILocation(line: 632, column: 2, scope: !12553)
!12576 = !DILocation(line: 633, column: 1, scope: !12542)
!12577 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !11318, file: !11318, line: 120, type: !12164, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12578)
!12578 = !{!12579}
!12579 = !DILocalVariable(name: "thread", arg: 1, scope: !12577, file: !11318, line: 120, type: !2003)
!12580 = !DILocation(line: 0, scope: !12577)
!12581 = !DILocation(line: 122, column: 12, scope: !12577)
!12582 = !DILocation(line: 122, column: 62, scope: !12577)
!12583 = !DILocation(line: 123, column: 4, scope: !12577)
!12584 = !DILocation(line: 122, column: 2, scope: !12577)
!12585 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2108, file: !2108, line: 644, type: !12004, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12586)
!12586 = !{!12587, !12588, !12590}
!12587 = !DILocalVariable(name: "thread", arg: 1, scope: !12585, file: !2108, line: 644, type: !2003)
!12588 = !DILocalVariable(name: "__i", scope: !12589, file: !2108, line: 646, type: !12038)
!12589 = distinct !DILexicalBlock(scope: !12585, file: !2108, line: 646, column: 2)
!12590 = !DILocalVariable(name: "__key", scope: !12589, file: !2108, line: 646, type: !12038)
!12591 = !DILocation(line: 0, scope: !12585)
!12592 = !DILocation(line: 0, scope: !12589)
!12593 = !DILocation(line: 0, scope: !12046, inlinedAt: !12594)
!12594 = distinct !DILocation(line: 646, column: 2, scope: !12589)
!12595 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !12596)
!12596 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !12594)
!12597 = !DILocation(line: 0, scope: !12055, inlinedAt: !12596)
!12598 = !DILocation(line: 647, column: 3, scope: !12599)
!12599 = distinct !DILexicalBlock(scope: !12600, file: !2108, line: 646, column: 26)
!12600 = distinct !DILexicalBlock(scope: !12589, file: !2108, line: 646, column: 2)
!12601 = !DILocation(line: 0, scope: !12073, inlinedAt: !12602)
!12602 = distinct !DILocation(line: 646, column: 2, scope: !12600)
!12603 = !DILocation(line: 0, scope: !12081, inlinedAt: !12604)
!12604 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !12602)
!12605 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !12604)
!12606 = !DILocation(line: 649, column: 1, scope: !12585)
!12607 = distinct !DISubprogram(name: "z_sched_start", scope: !2108, file: !2108, line: 651, type: !12004, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12608)
!12608 = !{!12609, !12610}
!12609 = !DILocalVariable(name: "thread", arg: 1, scope: !12607, file: !2108, line: 651, type: !2003)
!12610 = !DILocalVariable(name: "key", scope: !12607, file: !2108, line: 653, type: !12038)
!12611 = !DILocation(line: 0, scope: !12607)
!12612 = !DILocation(line: 0, scope: !12046, inlinedAt: !12613)
!12613 = distinct !DILocation(line: 653, column: 25, scope: !12607)
!12614 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !12615)
!12615 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !12613)
!12616 = !DILocation(line: 0, scope: !12055, inlinedAt: !12615)
!12617 = !DILocation(line: 655, column: 6, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12607, file: !2108, line: 655, column: 6)
!12619 = !DILocation(line: 655, column: 6, scope: !12607)
!12620 = !DILocation(line: 0, scope: !12073, inlinedAt: !12621)
!12621 = distinct !DILocation(line: 656, column: 3, scope: !12622)
!12622 = distinct !DILexicalBlock(scope: !12618, file: !2108, line: 655, column: 36)
!12623 = !DILocation(line: 0, scope: !12081, inlinedAt: !12624)
!12624 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !12621)
!12625 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !12624)
!12626 = !DILocation(line: 657, column: 3, scope: !12622)
!12627 = !DILocation(line: 660, column: 2, scope: !12607)
!12628 = !DILocation(line: 661, column: 2, scope: !12607)
!12629 = !DILocation(line: 662, column: 2, scope: !12607)
!12630 = !DILocation(line: 663, column: 1, scope: !12607)
!12631 = distinct !DISubprogram(name: "z_has_thread_started", scope: !11318, file: !11318, line: 126, type: !12164, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12632)
!12632 = !{!12633}
!12633 = !DILocalVariable(name: "thread", arg: 1, scope: !12631, file: !11318, line: 126, type: !2003)
!12634 = !DILocation(line: 0, scope: !12631)
!12635 = !DILocation(line: 128, column: 23, scope: !12631)
!12636 = !DILocation(line: 128, column: 36, scope: !12631)
!12637 = !DILocation(line: 128, column: 56, scope: !12631)
!12638 = !DILocation(line: 128, column: 2, scope: !12631)
!12639 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11318, file: !11318, line: 155, type: !12004, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12640)
!12640 = !{!12641}
!12641 = !DILocalVariable(name: "thread", arg: 1, scope: !12639, file: !11318, line: 155, type: !2003)
!12642 = !DILocation(line: 0, scope: !12639)
!12643 = !DILocation(line: 157, column: 15, scope: !12639)
!12644 = !DILocation(line: 157, column: 28, scope: !12639)
!12645 = !DILocation(line: 158, column: 1, scope: !12639)
!12646 = distinct !DISubprogram(name: "z_reschedule", scope: !2108, file: !2108, line: 967, type: !12074, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12647)
!12647 = !{!12648, !12649}
!12648 = !DILocalVariable(name: "lock", arg: 1, scope: !12646, file: !2108, line: 967, type: !12049)
!12649 = !DILocalVariable(name: "key", arg: 2, scope: !12646, file: !2108, line: 967, type: !12038)
!12650 = !DILocation(line: 0, scope: !12646)
!12651 = !DILocation(line: 969, column: 6, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12646, file: !2108, line: 969, column: 6)
!12653 = !DILocation(line: 969, column: 23, scope: !12652)
!12654 = !DILocation(line: 969, column: 26, scope: !12652)
!12655 = !DILocation(line: 969, column: 6, scope: !12646)
!12656 = !DILocalVariable(name: "key", arg: 2, scope: !12657, file: !11422, line: 193, type: !12038)
!12657 = distinct !DISubprogram(name: "z_swap", scope: !11422, file: !11422, line: 193, type: !12658, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12660)
!12658 = !DISubroutineType(types: !12659)
!12659 = !{!103, !12049, !12038}
!12660 = !{!12661, !12656}
!12661 = !DILocalVariable(name: "lock", arg: 1, scope: !12657, file: !11422, line: 193, type: !12049)
!12662 = !DILocation(line: 0, scope: !12657, inlinedAt: !12663)
!12663 = distinct !DILocation(line: 970, column: 3, scope: !12664)
!12664 = distinct !DILexicalBlock(scope: !12652, file: !2108, line: 969, column: 39)
!12665 = !DILocation(line: 196, column: 9, scope: !12657, inlinedAt: !12663)
!12666 = !DILocation(line: 971, column: 2, scope: !12664)
!12667 = !DILocation(line: 0, scope: !12073, inlinedAt: !12668)
!12668 = distinct !DILocation(line: 972, column: 3, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12652, file: !2108, line: 971, column: 9)
!12670 = !DILocation(line: 0, scope: !12081, inlinedAt: !12671)
!12671 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !12668)
!12672 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !12671)
!12673 = !DILocation(line: 975, column: 1, scope: !12646)
!12674 = distinct !DISubprogram(name: "resched", scope: !2108, file: !2108, line: 940, type: !12675, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12677)
!12675 = !DISubroutineType(types: !12676)
!12676 = !{!157, !121}
!12677 = !{!12678}
!12678 = !DILocalVariable(name: "key", arg: 1, scope: !12674, file: !2108, line: 940, type: !121)
!12679 = !DILocation(line: 0, scope: !12674)
!12680 = !DILocalVariable(name: "key", arg: 1, scope: !12681, file: !5209, line: 112, type: !32)
!12681 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5209, file: !5209, line: 112, type: !12682, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12684)
!12682 = !DISubroutineType(types: !12683)
!12683 = !{!157, !32}
!12684 = !{!12680}
!12685 = !DILocation(line: 0, scope: !12681, inlinedAt: !12686)
!12686 = distinct !DILocation(line: 946, column: 9, scope: !12674)
!12687 = !DILocation(line: 115, column: 13, scope: !12681, inlinedAt: !12686)
!12688 = !DILocation(line: 946, column: 32, scope: !12674)
!12689 = !DILocation(line: 1031, column: 3, scope: !12690, inlinedAt: !12693)
!12690 = distinct !DISubprogram(name: "__get_IPSR", scope: !5383, file: !5383, line: 1027, type: !5464, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12691)
!12691 = !{!12692}
!12692 = !DILocalVariable(name: "result", scope: !12690, file: !5383, line: 1029, type: !121)
!12693 = distinct !DILocation(line: 48, column: 10, scope: !12694, inlinedAt: !12695)
!12694 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6177, file: !6177, line: 46, type: !6178, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!12695 = distinct !DILocation(line: 946, column: 36, scope: !12674)
!12696 = !{i64 2869918}
!12697 = !DILocation(line: 0, scope: !12690, inlinedAt: !12693)
!12698 = !DILocation(line: 48, column: 9, scope: !12694, inlinedAt: !12695)
!12699 = !DILocation(line: 946, column: 2, scope: !12674)
!12700 = distinct !DISubprogram(name: "need_swap", scope: !2108, file: !2108, line: 953, type: !6178, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12701)
!12701 = !{!12702}
!12702 = !DILocalVariable(name: "new_thread", scope: !12700, file: !2108, line: 959, type: !2003)
!12703 = !DILocation(line: 962, column: 31, scope: !12700)
!12704 = !DILocation(line: 0, scope: !12700)
!12705 = !DILocation(line: 963, column: 23, scope: !12700)
!12706 = !DILocation(line: 963, column: 20, scope: !12700)
!12707 = !DILocation(line: 963, column: 2, scope: !12700)
!12708 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !11422, file: !11422, line: 181, type: !5393, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12709)
!12709 = !{!12710, !12711}
!12710 = !DILocalVariable(name: "key", arg: 1, scope: !12708, file: !11422, line: 181, type: !32)
!12711 = !DILocalVariable(name: "ret", scope: !12708, file: !11422, line: 183, type: !103)
!12712 = !DILocation(line: 0, scope: !12708)
!12713 = !DILocation(line: 185, column: 8, scope: !12708)
!12714 = !DILocation(line: 186, column: 2, scope: !12708)
!12715 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2108, file: !2108, line: 665, type: !12004, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12716)
!12716 = !{!12717, !12718, !12720}
!12717 = !DILocalVariable(name: "thread", arg: 1, scope: !12715, file: !2108, line: 665, type: !2003)
!12718 = !DILocalVariable(name: "__i", scope: !12719, file: !2108, line: 671, type: !12038)
!12719 = distinct !DILexicalBlock(scope: !12715, file: !2108, line: 671, column: 2)
!12720 = !DILocalVariable(name: "__key", scope: !12719, file: !2108, line: 671, type: !12038)
!12721 = !DILocation(line: 0, scope: !12715)
!12722 = !DILocation(line: 669, column: 8, scope: !12715)
!12723 = !DILocation(line: 0, scope: !12719)
!12724 = !DILocation(line: 0, scope: !12046, inlinedAt: !12725)
!12725 = distinct !DILocation(line: 671, column: 2, scope: !12719)
!12726 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !12727)
!12727 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !12725)
!12728 = !DILocation(line: 0, scope: !12055, inlinedAt: !12727)
!12729 = !DILocation(line: 672, column: 7, scope: !12730)
!12730 = distinct !DILexicalBlock(scope: !12731, file: !2108, line: 672, column: 7)
!12731 = distinct !DILexicalBlock(scope: !12732, file: !2108, line: 671, column: 26)
!12732 = distinct !DILexicalBlock(scope: !12719, file: !2108, line: 671, column: 2)
!12733 = !DILocation(line: 672, column: 7, scope: !12731)
!12734 = !DILocation(line: 0, scope: !12215, inlinedAt: !12735)
!12735 = distinct !DILocation(line: 673, column: 4, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12730, file: !2108, line: 672, column: 35)
!12737 = !DILocation(line: 266, column: 15, scope: !12215, inlinedAt: !12735)
!12738 = !DILocation(line: 266, column: 28, scope: !12215, inlinedAt: !12735)
!12739 = !DILocation(line: 0, scope: !12223, inlinedAt: !12740)
!12740 = distinct !DILocation(line: 268, column: 3, scope: !12227, inlinedAt: !12735)
!12741 = !DILocation(line: 234, column: 2, scope: !12223, inlinedAt: !12740)
!12742 = !DILocation(line: 674, column: 3, scope: !12736)
!12743 = !DILocation(line: 675, column: 3, scope: !12731)
!12744 = !DILocation(line: 676, column: 26, scope: !12731)
!12745 = !DILocation(line: 676, column: 23, scope: !12731)
!12746 = !DILocation(line: 676, column: 3, scope: !12731)
!12747 = !DILocation(line: 0, scope: !12073, inlinedAt: !12748)
!12748 = distinct !DILocation(line: 671, column: 2, scope: !12732)
!12749 = !DILocation(line: 0, scope: !12081, inlinedAt: !12750)
!12750 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !12748)
!12751 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !12750)
!12752 = !DILocation(line: 679, column: 16, scope: !12753)
!12753 = distinct !DILexicalBlock(scope: !12715, file: !2108, line: 679, column: 6)
!12754 = !DILocation(line: 679, column: 13, scope: !12753)
!12755 = !DILocation(line: 679, column: 6, scope: !12715)
!12756 = !DILocation(line: 680, column: 3, scope: !12757)
!12757 = distinct !DILexicalBlock(scope: !12753, file: !2108, line: 679, column: 26)
!12758 = !DILocation(line: 681, column: 2, scope: !12757)
!12759 = !DILocation(line: 684, column: 1, scope: !12715)
!12760 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !11712, file: !11712, line: 52, type: !12022, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12761)
!12761 = !{!12762}
!12762 = !DILocalVariable(name: "thread", arg: 1, scope: !12760, file: !11712, line: 52, type: !2003)
!12763 = !DILocation(line: 0, scope: !12760)
!12764 = !DILocation(line: 54, column: 39, scope: !12760)
!12765 = !DILocation(line: 54, column: 9, scope: !12760)
!12766 = !DILocation(line: 54, column: 2, scope: !12760)
!12767 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !11318, file: !11318, line: 141, type: !12004, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12768)
!12768 = !{!12769}
!12769 = !DILocalVariable(name: "thread", arg: 1, scope: !12767, file: !11318, line: 141, type: !2003)
!12770 = !DILocation(line: 0, scope: !12767)
!12771 = !DILocation(line: 143, column: 15, scope: !12767)
!12772 = !DILocation(line: 143, column: 28, scope: !12767)
!12773 = !DILocation(line: 146, column: 1, scope: !12767)
!12774 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !11318, file: !11318, line: 73, type: !2913, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!12775 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !12776)
!12776 = distinct !DILocation(line: 75, column: 30, scope: !12774)
!12777 = !DILocation(line: 0, scope: !12055, inlinedAt: !12776)
!12778 = !DILocation(line: 75, column: 9, scope: !12774)
!12779 = !DILocation(line: 76, column: 1, scope: !12774)
!12780 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2108, file: !2108, line: 977, type: !5474, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12781)
!12781 = !{!12782}
!12782 = !DILocalVariable(name: "key", arg: 1, scope: !12780, file: !2108, line: 977, type: !121)
!12783 = !DILocation(line: 0, scope: !12780)
!12784 = !DILocation(line: 979, column: 6, scope: !12785)
!12785 = distinct !DILexicalBlock(scope: !12780, file: !2108, line: 979, column: 6)
!12786 = !DILocation(line: 979, column: 6, scope: !12780)
!12787 = !DILocation(line: 980, column: 3, scope: !12788)
!12788 = distinct !DILexicalBlock(scope: !12785, file: !2108, line: 979, column: 20)
!12789 = !DILocation(line: 981, column: 2, scope: !12788)
!12790 = !DILocation(line: 0, scope: !12081, inlinedAt: !12791)
!12791 = distinct !DILocation(line: 982, column: 3, scope: !12792)
!12792 = distinct !DILexicalBlock(scope: !12785, file: !2108, line: 981, column: 9)
!12793 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !12791)
!12794 = !DILocation(line: 985, column: 1, scope: !12780)
!12795 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2108, file: !2108, line: 695, type: !12004, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12796)
!12796 = !{!12797, !12798}
!12797 = !DILocalVariable(name: "thread", arg: 1, scope: !12795, file: !2108, line: 695, type: !2003)
!12798 = !DILocalVariable(name: "key", scope: !12795, file: !2108, line: 699, type: !12038)
!12799 = !DILocation(line: 0, scope: !12795)
!12800 = !DILocation(line: 0, scope: !12046, inlinedAt: !12801)
!12801 = distinct !DILocation(line: 699, column: 25, scope: !12795)
!12802 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !12803)
!12803 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !12801)
!12804 = !DILocation(line: 0, scope: !12055, inlinedAt: !12803)
!12805 = !DILocation(line: 702, column: 7, scope: !12806)
!12806 = distinct !DILexicalBlock(scope: !12795, file: !2108, line: 702, column: 6)
!12807 = !DILocation(line: 702, column: 6, scope: !12795)
!12808 = !DILocation(line: 0, scope: !12073, inlinedAt: !12809)
!12809 = distinct !DILocation(line: 703, column: 3, scope: !12810)
!12810 = distinct !DILexicalBlock(scope: !12806, file: !2108, line: 702, column: 38)
!12811 = !DILocation(line: 0, scope: !12081, inlinedAt: !12812)
!12812 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !12809)
!12813 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !12812)
!12814 = !DILocation(line: 704, column: 3, scope: !12810)
!12815 = !DILocation(line: 707, column: 2, scope: !12795)
!12816 = !DILocation(line: 708, column: 2, scope: !12795)
!12817 = !DILocation(line: 710, column: 2, scope: !12795)
!12818 = !DILocation(line: 713, column: 1, scope: !12795)
!12819 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !11318, file: !11318, line: 96, type: !12164, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12820)
!12820 = !{!12821}
!12821 = !DILocalVariable(name: "thread", arg: 1, scope: !12819, file: !11318, line: 96, type: !2003)
!12822 = !DILocation(line: 0, scope: !12819)
!12823 = !DILocation(line: 98, column: 23, scope: !12819)
!12824 = !DILocation(line: 98, column: 36, scope: !12819)
!12825 = !DILocation(line: 98, column: 57, scope: !12819)
!12826 = !DILocation(line: 98, column: 2, scope: !12819)
!12827 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !11318, file: !11318, line: 148, type: !12004, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12828)
!12828 = !{!12829}
!12829 = !DILocalVariable(name: "thread", arg: 1, scope: !12827, file: !11318, line: 148, type: !2003)
!12830 = !DILocation(line: 0, scope: !12827)
!12831 = !DILocation(line: 150, column: 15, scope: !12827)
!12832 = !DILocation(line: 150, column: 28, scope: !12827)
!12833 = !DILocation(line: 153, column: 1, scope: !12827)
!12834 = distinct !DISubprogram(name: "z_pend_thread", scope: !2108, file: !2108, line: 770, type: !12835, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12841)
!12835 = !DISubroutineType(types: !12836)
!12836 = !{null, !2003, !2034, !12837}
!12837 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1359, line: 67, baseType: !12838)
!12838 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1359, line: 65, size: 64, elements: !12839)
!12839 = !{!12840}
!12840 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12838, file: !1359, line: 66, baseType: !1358, size: 64)
!12841 = !{!12842, !12843, !12844, !12845, !12847}
!12842 = !DILocalVariable(name: "thread", arg: 1, scope: !12834, file: !2108, line: 770, type: !2003)
!12843 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12834, file: !2108, line: 770, type: !2034)
!12844 = !DILocalVariable(name: "timeout", arg: 3, scope: !12834, file: !2108, line: 771, type: !12837)
!12845 = !DILocalVariable(name: "__i", scope: !12846, file: !2108, line: 774, type: !12038)
!12846 = distinct !DILexicalBlock(scope: !12834, file: !2108, line: 774, column: 2)
!12847 = !DILocalVariable(name: "__key", scope: !12846, file: !2108, line: 774, type: !12038)
!12848 = !DILocation(line: 0, scope: !12834)
!12849 = !DILocation(line: 0, scope: !12846)
!12850 = !DILocation(line: 0, scope: !12046, inlinedAt: !12851)
!12851 = distinct !DILocation(line: 774, column: 2, scope: !12846)
!12852 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !12853)
!12853 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !12851)
!12854 = !DILocation(line: 0, scope: !12055, inlinedAt: !12853)
!12855 = !DILocation(line: 775, column: 3, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !12857, file: !2108, line: 774, column: 26)
!12857 = distinct !DILexicalBlock(scope: !12846, file: !2108, line: 774, column: 2)
!12858 = !DILocation(line: 0, scope: !12073, inlinedAt: !12859)
!12859 = distinct !DILocation(line: 774, column: 2, scope: !12857)
!12860 = !DILocation(line: 0, scope: !12081, inlinedAt: !12861)
!12861 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !12859)
!12862 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !12861)
!12863 = !DILocation(line: 777, column: 1, scope: !12834)
!12864 = distinct !DISubprogram(name: "pend_locked", scope: !2108, file: !2108, line: 760, type: !12835, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12865)
!12865 = !{!12866, !12867, !12868}
!12866 = !DILocalVariable(name: "thread", arg: 1, scope: !12864, file: !2108, line: 760, type: !2003)
!12867 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12864, file: !2108, line: 760, type: !2034)
!12868 = !DILocalVariable(name: "timeout", arg: 3, scope: !12864, file: !2108, line: 761, type: !12837)
!12869 = !DILocation(line: 0, scope: !12864)
!12870 = !DILocation(line: 766, column: 2, scope: !12864)
!12871 = !DILocation(line: 767, column: 2, scope: !12864)
!12872 = !DILocation(line: 768, column: 1, scope: !12864)
!12873 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2108, file: !2108, line: 740, type: !12874, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12876)
!12874 = !DISubroutineType(types: !12875)
!12875 = !{null, !2003, !2034}
!12876 = !{!12877, !12878}
!12877 = !DILocalVariable(name: "thread", arg: 1, scope: !12873, file: !2108, line: 740, type: !2003)
!12878 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12873, file: !2108, line: 740, type: !2034)
!12879 = !DILocation(line: 0, scope: !12873)
!12880 = !DILocation(line: 742, column: 2, scope: !12873)
!12881 = !DILocation(line: 743, column: 2, scope: !12873)
!12882 = !DILocation(line: 747, column: 13, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12873, file: !2108, line: 747, column: 6)
!12884 = !DILocation(line: 747, column: 6, scope: !12873)
!12885 = !DILocation(line: 748, column: 16, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12883, file: !2108, line: 747, column: 22)
!12887 = !DILocation(line: 748, column: 26, scope: !12886)
!12888 = !DILocation(line: 749, column: 28, scope: !12886)
!12889 = !DILocation(line: 0, scope: !12246, inlinedAt: !12890)
!12890 = distinct !DILocation(line: 749, column: 3, scope: !12886)
!12891 = !DILocation(line: 188, column: 2, scope: !12256, inlinedAt: !12890)
!12892 = !DILocation(line: 188, column: 2, scope: !12258, inlinedAt: !12890)
!12893 = !DILocation(line: 0, scope: !12256, inlinedAt: !12890)
!12894 = !DILocation(line: 189, column: 7, scope: !12261, inlinedAt: !12890)
!12895 = !DILocation(line: 189, column: 35, scope: !12261, inlinedAt: !12890)
!12896 = !DILocation(line: 189, column: 7, scope: !12262, inlinedAt: !12890)
!12897 = !DILocation(line: 191, column: 21, scope: !12266, inlinedAt: !12890)
!12898 = !DILocation(line: 190, column: 4, scope: !12266, inlinedAt: !12890)
!12899 = !DILocation(line: 192, column: 4, scope: !12266, inlinedAt: !12890)
!12900 = distinct !{!12900, !12891, !12901}
!12901 = !DILocation(line: 194, column: 2, scope: !12256, inlinedAt: !12890)
!12902 = !DILocation(line: 196, column: 37, scope: !12246, inlinedAt: !12890)
!12903 = !DILocation(line: 196, column: 2, scope: !12246, inlinedAt: !12890)
!12904 = !DILocation(line: 197, column: 1, scope: !12246, inlinedAt: !12890)
!12905 = !DILocation(line: 751, column: 1, scope: !12873)
!12906 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2108, file: !2108, line: 753, type: !12907, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12909)
!12907 = !DISubroutineType(types: !12908)
!12908 = !{null, !2003, !12837}
!12909 = !{!12910, !12911}
!12910 = !DILocalVariable(name: "thread", arg: 1, scope: !12906, file: !2108, line: 753, type: !2003)
!12911 = !DILocalVariable(name: "timeout", arg: 2, scope: !12906, file: !2108, line: 753, type: !12837)
!12912 = !DILocation(line: 0, scope: !12906)
!12913 = !DILocation(line: 755, column: 7, scope: !12914)
!12914 = distinct !DILexicalBlock(scope: !12906, file: !2108, line: 755, column: 6)
!12915 = !DILocation(line: 755, column: 6, scope: !12906)
!12916 = !DILocation(line: 756, column: 3, scope: !12917)
!12917 = distinct !DILexicalBlock(scope: !12914, file: !2108, line: 755, column: 41)
!12918 = !DILocation(line: 757, column: 2, scope: !12917)
!12919 = !DILocation(line: 758, column: 1, scope: !12906)
!12920 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11712, file: !11712, line: 47, type: !12907, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12921)
!12921 = !{!12922, !12923}
!12922 = !DILocalVariable(name: "thread", arg: 1, scope: !12920, file: !11712, line: 47, type: !2003)
!12923 = !DILocalVariable(name: "ticks", arg: 2, scope: !12920, file: !11712, line: 47, type: !12837)
!12924 = !DILocation(line: 0, scope: !12920)
!12925 = !DILocation(line: 49, column: 30, scope: !12920)
!12926 = !DILocation(line: 49, column: 2, scope: !12920)
!12927 = !DILocation(line: 50, column: 1, scope: !12920)
!12928 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2108, file: !2108, line: 795, type: !2060, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12929)
!12929 = !{!12930, !12931, !12932, !12934, !12935}
!12930 = !DILocalVariable(name: "timeout", arg: 1, scope: !12928, file: !2108, line: 795, type: !2062)
!12931 = !DILocalVariable(name: "thread", scope: !12928, file: !2108, line: 797, type: !2003)
!12932 = !DILocalVariable(name: "__i", scope: !12933, file: !2108, line: 800, type: !12038)
!12933 = distinct !DILexicalBlock(scope: !12928, file: !2108, line: 800, column: 2)
!12934 = !DILocalVariable(name: "__key", scope: !12933, file: !2108, line: 800, type: !12038)
!12935 = !DILocalVariable(name: "killed", scope: !12936, file: !2108, line: 801, type: !157)
!12936 = distinct !DILexicalBlock(scope: !12937, file: !2108, line: 800, column: 26)
!12937 = distinct !DILexicalBlock(scope: !12933, file: !2108, line: 800, column: 2)
!12938 = !DILocation(line: 0, scope: !12928)
!12939 = !DILocation(line: 797, column: 28, scope: !12928)
!12940 = !DILocation(line: 0, scope: !12933)
!12941 = !DILocation(line: 0, scope: !12046, inlinedAt: !12942)
!12942 = distinct !DILocation(line: 800, column: 2, scope: !12933)
!12943 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !12944)
!12944 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !12942)
!12945 = !DILocation(line: 0, scope: !12055, inlinedAt: !12944)
!12946 = !DILocation(line: 801, column: 27, scope: !12936)
!12947 = !DILocation(line: 801, column: 32, scope: !12936)
!12948 = !DILocation(line: 801, column: 61, scope: !12936)
!12949 = !DILocation(line: 0, scope: !12936)
!12950 = !DILocation(line: 804, column: 7, scope: !12936)
!12951 = !DILocation(line: 805, column: 21, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !12953, file: !2108, line: 805, column: 8)
!12953 = distinct !DILexicalBlock(scope: !12954, file: !2108, line: 804, column: 16)
!12954 = distinct !DILexicalBlock(scope: !12936, file: !2108, line: 804, column: 7)
!12955 = !DILocation(line: 805, column: 31, scope: !12952)
!12956 = !DILocation(line: 805, column: 8, scope: !12953)
!12957 = !DILocation(line: 806, column: 5, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12952, file: !2108, line: 805, column: 40)
!12959 = !DILocation(line: 807, column: 4, scope: !12958)
!12960 = !DILocation(line: 808, column: 4, scope: !12953)
!12961 = !DILocation(line: 809, column: 4, scope: !12953)
!12962 = !DILocation(line: 810, column: 4, scope: !12953)
!12963 = !DILocation(line: 811, column: 3, scope: !12953)
!12964 = !DILocation(line: 0, scope: !12073, inlinedAt: !12965)
!12965 = distinct !DILocation(line: 800, column: 2, scope: !12937)
!12966 = !DILocation(line: 0, scope: !12081, inlinedAt: !12967)
!12967 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !12965)
!12968 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !12967)
!12969 = !DILocation(line: 813, column: 1, scope: !12928)
!12970 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2108, file: !2108, line: 779, type: !12004, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12971)
!12971 = !{!12972}
!12972 = !DILocalVariable(name: "thread", arg: 1, scope: !12970, file: !2108, line: 779, type: !2003)
!12973 = !DILocation(line: 0, scope: !12970)
!12974 = !DILocation(line: 781, column: 2, scope: !12970)
!12975 = !DILocation(line: 782, column: 2, scope: !12970)
!12976 = !DILocation(line: 783, column: 15, scope: !12970)
!12977 = !DILocation(line: 783, column: 25, scope: !12970)
!12978 = !DILocation(line: 784, column: 1, scope: !12970)
!12979 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !11318, file: !11318, line: 165, type: !12004, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12980)
!12980 = !{!12981}
!12981 = !DILocalVariable(name: "thread", arg: 1, scope: !12979, file: !11318, line: 165, type: !2003)
!12982 = !DILocation(line: 0, scope: !12979)
!12983 = !DILocation(line: 167, column: 15, scope: !12979)
!12984 = !DILocation(line: 167, column: 28, scope: !12979)
!12985 = !DILocation(line: 168, column: 1, scope: !12979)
!12986 = distinct !DISubprogram(name: "unready_thread", scope: !2108, file: !2108, line: 731, type: !12004, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !12987)
!12987 = !{!12988}
!12988 = !DILocalVariable(name: "thread", arg: 1, scope: !12986, file: !2108, line: 731, type: !2003)
!12989 = !DILocation(line: 0, scope: !12986)
!12990 = !DILocation(line: 733, column: 6, scope: !12991)
!12991 = distinct !DILexicalBlock(scope: !12986, file: !2108, line: 733, column: 6)
!12992 = !DILocation(line: 733, column: 6, scope: !12986)
!12993 = !DILocation(line: 0, scope: !12215, inlinedAt: !12994)
!12994 = distinct !DILocation(line: 734, column: 3, scope: !12995)
!12995 = distinct !DILexicalBlock(scope: !12991, file: !2108, line: 733, column: 34)
!12996 = !DILocation(line: 266, column: 15, scope: !12215, inlinedAt: !12994)
!12997 = !DILocation(line: 266, column: 28, scope: !12215, inlinedAt: !12994)
!12998 = !DILocation(line: 0, scope: !12223, inlinedAt: !12999)
!12999 = distinct !DILocation(line: 268, column: 3, scope: !12227, inlinedAt: !12994)
!13000 = !DILocation(line: 234, column: 2, scope: !12223, inlinedAt: !12999)
!13001 = !DILocation(line: 735, column: 2, scope: !12995)
!13002 = !DILocation(line: 736, column: 25, scope: !12986)
!13003 = !DILocation(line: 736, column: 22, scope: !12986)
!13004 = !DILocation(line: 736, column: 2, scope: !12986)
!13005 = !DILocation(line: 737, column: 1, scope: !12986)
!13006 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !11318, file: !11318, line: 160, type: !12004, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13007)
!13007 = !{!13008}
!13008 = !DILocalVariable(name: "thread", arg: 1, scope: !13006, file: !11318, line: 160, type: !2003)
!13009 = !DILocation(line: 0, scope: !13006)
!13010 = !DILocation(line: 162, column: 15, scope: !13006)
!13011 = !DILocation(line: 162, column: 28, scope: !13006)
!13012 = !DILocation(line: 163, column: 1, scope: !13006)
!13013 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2108, file: !2108, line: 786, type: !12004, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13014)
!13014 = !{!13015, !13016, !13018}
!13015 = !DILocalVariable(name: "thread", arg: 1, scope: !13013, file: !2108, line: 786, type: !2003)
!13016 = !DILocalVariable(name: "__i", scope: !13017, file: !2108, line: 788, type: !12038)
!13017 = distinct !DILexicalBlock(scope: !13013, file: !2108, line: 788, column: 2)
!13018 = !DILocalVariable(name: "__key", scope: !13017, file: !2108, line: 788, type: !12038)
!13019 = !DILocation(line: 0, scope: !13013)
!13020 = !DILocation(line: 0, scope: !13017)
!13021 = !DILocation(line: 0, scope: !12046, inlinedAt: !13022)
!13022 = distinct !DILocation(line: 788, column: 2, scope: !13017)
!13023 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !13024)
!13024 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !13022)
!13025 = !DILocation(line: 0, scope: !12055, inlinedAt: !13024)
!13026 = !DILocation(line: 789, column: 3, scope: !13027)
!13027 = distinct !DILexicalBlock(scope: !13028, file: !2108, line: 788, column: 26)
!13028 = distinct !DILexicalBlock(scope: !13017, file: !2108, line: 788, column: 2)
!13029 = !DILocation(line: 0, scope: !12073, inlinedAt: !13030)
!13030 = distinct !DILocation(line: 788, column: 2, scope: !13028)
!13031 = !DILocation(line: 0, scope: !12081, inlinedAt: !13032)
!13032 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !13030)
!13033 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !13032)
!13034 = !DILocation(line: 791, column: 1, scope: !13013)
!13035 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2108, file: !2108, line: 816, type: !13036, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13038)
!13036 = !DISubroutineType(types: !13037)
!13037 = !{!103, !121, !2034, !12837}
!13038 = !{!13039, !13040, !13041, !13042, !13043, !13045}
!13039 = !DILocalVariable(name: "key", arg: 1, scope: !13035, file: !2108, line: 816, type: !121)
!13040 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13035, file: !2108, line: 816, type: !2034)
!13041 = !DILocalVariable(name: "timeout", arg: 3, scope: !13035, file: !2108, line: 816, type: !12837)
!13042 = !DILocalVariable(name: "ret", scope: !13035, file: !2108, line: 828, type: !103)
!13043 = !DILocalVariable(name: "__i", scope: !13044, file: !2108, line: 829, type: !12038)
!13044 = distinct !DILexicalBlock(scope: !13035, file: !2108, line: 829, column: 2)
!13045 = !DILocalVariable(name: "__key", scope: !13044, file: !2108, line: 829, type: !12038)
!13046 = !DILocation(line: 0, scope: !13035)
!13047 = !DILocation(line: 823, column: 14, scope: !13035)
!13048 = !DILocation(line: 823, column: 2, scope: !13035)
!13049 = !DILocation(line: 826, column: 20, scope: !13035)
!13050 = !DILocation(line: 826, column: 18, scope: !13035)
!13051 = !DILocation(line: 828, column: 12, scope: !13035)
!13052 = !DILocation(line: 0, scope: !13044)
!13053 = !DILocation(line: 0, scope: !12046, inlinedAt: !13054)
!13054 = distinct !DILocation(line: 829, column: 2, scope: !13044)
!13055 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !13056)
!13056 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !13054)
!13057 = !DILocation(line: 0, scope: !12055, inlinedAt: !13056)
!13058 = !DILocation(line: 830, column: 7, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !13060, file: !2108, line: 830, column: 7)
!13060 = distinct !DILexicalBlock(scope: !13061, file: !2108, line: 829, column: 26)
!13061 = distinct !DILexicalBlock(scope: !13044, file: !2108, line: 829, column: 2)
!13062 = !DILocation(line: 830, column: 26, scope: !13059)
!13063 = !DILocation(line: 830, column: 23, scope: !13059)
!13064 = !DILocation(line: 830, column: 7, scope: !13060)
!13065 = !DILocation(line: 831, column: 20, scope: !13066)
!13066 = distinct !DILexicalBlock(scope: !13059, file: !2108, line: 830, column: 36)
!13067 = !DILocation(line: 832, column: 3, scope: !13066)
!13068 = !DILocation(line: 0, scope: !12073, inlinedAt: !13069)
!13069 = distinct !DILocation(line: 829, column: 2, scope: !13061)
!13070 = !DILocation(line: 0, scope: !12081, inlinedAt: !13071)
!13071 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !13069)
!13072 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !13071)
!13073 = !DILocation(line: 834, column: 2, scope: !13035)
!13074 = distinct !DISubprogram(name: "z_pend_curr", scope: !2108, file: !2108, line: 840, type: !13075, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13077)
!13075 = !DISubroutineType(types: !13076)
!13076 = !{!103, !12049, !12038, !2034, !12837}
!13077 = !{!13078, !13079, !13080, !13081}
!13078 = !DILocalVariable(name: "lock", arg: 1, scope: !13074, file: !2108, line: 840, type: !12049)
!13079 = !DILocalVariable(name: "key", arg: 2, scope: !13074, file: !2108, line: 840, type: !12038)
!13080 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13074, file: !2108, line: 841, type: !2034)
!13081 = !DILocalVariable(name: "timeout", arg: 4, scope: !13074, file: !2108, line: 841, type: !12837)
!13082 = !DILocation(line: 0, scope: !13074)
!13083 = !DILocation(line: 844, column: 20, scope: !13074)
!13084 = !DILocation(line: 844, column: 18, scope: !13074)
!13085 = !DILocation(line: 0, scope: !12046, inlinedAt: !13086)
!13086 = distinct !DILocation(line: 856, column: 9, scope: !13074)
!13087 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !13088)
!13088 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !13086)
!13089 = !DILocation(line: 0, scope: !12055, inlinedAt: !13088)
!13090 = !DILocation(line: 857, column: 14, scope: !13074)
!13091 = !DILocation(line: 857, column: 2, scope: !13074)
!13092 = !DILocation(line: 0, scope: !12657, inlinedAt: !13093)
!13093 = distinct !DILocation(line: 859, column: 9, scope: !13074)
!13094 = !DILocation(line: 196, column: 9, scope: !12657, inlinedAt: !13093)
!13095 = !DILocation(line: 859, column: 2, scope: !13074)
!13096 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2108, file: !2108, line: 862, type: !13097, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13099)
!13097 = !DISubroutineType(types: !13098)
!13098 = !{!2003, !2034}
!13099 = !{!13100, !13101, !13102, !13104}
!13100 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13096, file: !2108, line: 862, type: !2034)
!13101 = !DILocalVariable(name: "thread", scope: !13096, file: !2108, line: 864, type: !2003)
!13102 = !DILocalVariable(name: "__i", scope: !13103, file: !2108, line: 866, type: !12038)
!13103 = distinct !DILexicalBlock(scope: !13096, file: !2108, line: 866, column: 2)
!13104 = !DILocalVariable(name: "__key", scope: !13103, file: !2108, line: 866, type: !12038)
!13105 = !DILocation(line: 0, scope: !13096)
!13106 = !DILocation(line: 0, scope: !13103)
!13107 = !DILocation(line: 0, scope: !12046, inlinedAt: !13108)
!13108 = distinct !DILocation(line: 866, column: 2, scope: !13103)
!13109 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !13110)
!13110 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !13108)
!13111 = !DILocation(line: 0, scope: !12055, inlinedAt: !13110)
!13112 = !DILocation(line: 867, column: 12, scope: !13113)
!13113 = distinct !DILexicalBlock(scope: !13114, file: !2108, line: 866, column: 26)
!13114 = distinct !DILexicalBlock(scope: !13103, file: !2108, line: 866, column: 2)
!13115 = !DILocation(line: 869, column: 14, scope: !13116)
!13116 = distinct !DILexicalBlock(scope: !13113, file: !2108, line: 869, column: 7)
!13117 = !DILocation(line: 869, column: 7, scope: !13113)
!13118 = !DILocation(line: 870, column: 4, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13116, file: !2108, line: 869, column: 23)
!13120 = !DILocation(line: 871, column: 3, scope: !13119)
!13121 = !DILocation(line: 0, scope: !12073, inlinedAt: !13122)
!13122 = distinct !DILocation(line: 866, column: 2, scope: !13114)
!13123 = !DILocation(line: 0, scope: !12081, inlinedAt: !13124)
!13124 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !13122)
!13125 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !13124)
!13126 = !DILocation(line: 874, column: 2, scope: !13096)
!13127 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2108, file: !2108, line: 877, type: !13097, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13128)
!13128 = !{!13129, !13130, !13131, !13133}
!13129 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13127, file: !2108, line: 877, type: !2034)
!13130 = !DILocalVariable(name: "thread", scope: !13127, file: !2108, line: 879, type: !2003)
!13131 = !DILocalVariable(name: "__i", scope: !13132, file: !2108, line: 881, type: !12038)
!13132 = distinct !DILexicalBlock(scope: !13127, file: !2108, line: 881, column: 2)
!13133 = !DILocalVariable(name: "__key", scope: !13132, file: !2108, line: 881, type: !12038)
!13134 = !DILocation(line: 0, scope: !13127)
!13135 = !DILocation(line: 0, scope: !13132)
!13136 = !DILocation(line: 0, scope: !12046, inlinedAt: !13137)
!13137 = distinct !DILocation(line: 881, column: 2, scope: !13132)
!13138 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !13139)
!13139 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !13137)
!13140 = !DILocation(line: 0, scope: !12055, inlinedAt: !13139)
!13141 = !DILocation(line: 882, column: 12, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !13143, file: !2108, line: 881, column: 26)
!13143 = distinct !DILexicalBlock(scope: !13132, file: !2108, line: 881, column: 2)
!13144 = !DILocation(line: 884, column: 14, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13142, file: !2108, line: 884, column: 7)
!13146 = !DILocation(line: 884, column: 7, scope: !13142)
!13147 = !DILocation(line: 885, column: 4, scope: !13148)
!13148 = distinct !DILexicalBlock(scope: !13145, file: !2108, line: 884, column: 23)
!13149 = !DILocation(line: 886, column: 10, scope: !13148)
!13150 = !DILocation(line: 887, column: 3, scope: !13148)
!13151 = !DILocation(line: 0, scope: !12073, inlinedAt: !13152)
!13152 = distinct !DILocation(line: 881, column: 2, scope: !13143)
!13153 = !DILocation(line: 0, scope: !12081, inlinedAt: !13154)
!13154 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !13152)
!13155 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !13154)
!13156 = !DILocation(line: 890, column: 2, scope: !13127)
!13157 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2108, file: !2108, line: 893, type: !12004, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13158)
!13158 = !{!13159}
!13159 = !DILocalVariable(name: "thread", arg: 1, scope: !13157, file: !2108, line: 893, type: !2003)
!13160 = !DILocation(line: 0, scope: !13157)
!13161 = !DILocation(line: 0, scope: !13013, inlinedAt: !13162)
!13162 = distinct !DILocation(line: 895, column: 2, scope: !13157)
!13163 = !DILocation(line: 0, scope: !13017, inlinedAt: !13162)
!13164 = !DILocation(line: 0, scope: !12046, inlinedAt: !13165)
!13165 = distinct !DILocation(line: 788, column: 2, scope: !13017, inlinedAt: !13162)
!13166 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !13167)
!13167 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !13165)
!13168 = !DILocation(line: 0, scope: !12055, inlinedAt: !13167)
!13169 = !DILocation(line: 789, column: 3, scope: !13027, inlinedAt: !13162)
!13170 = !DILocation(line: 0, scope: !12073, inlinedAt: !13171)
!13171 = distinct !DILocation(line: 788, column: 2, scope: !13028, inlinedAt: !13162)
!13172 = !DILocation(line: 0, scope: !12081, inlinedAt: !13173)
!13173 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !13171)
!13174 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !13173)
!13175 = !DILocation(line: 896, column: 8, scope: !13157)
!13176 = !DILocation(line: 897, column: 1, scope: !13157)
!13177 = distinct !DISubprogram(name: "z_set_prio", scope: !2108, file: !2108, line: 902, type: !12366, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13178)
!13178 = !{!13179, !13180, !13181, !13182, !13184}
!13179 = !DILocalVariable(name: "thread", arg: 1, scope: !13177, file: !2108, line: 902, type: !2003)
!13180 = !DILocalVariable(name: "prio", arg: 2, scope: !13177, file: !2108, line: 902, type: !103)
!13181 = !DILocalVariable(name: "need_sched", scope: !13177, file: !2108, line: 904, type: !157)
!13182 = !DILocalVariable(name: "__i", scope: !13183, file: !2108, line: 906, type: !12038)
!13183 = distinct !DILexicalBlock(scope: !13177, file: !2108, line: 906, column: 2)
!13184 = !DILocalVariable(name: "__key", scope: !13183, file: !2108, line: 906, type: !12038)
!13185 = !DILocation(line: 0, scope: !13177)
!13186 = !DILocation(line: 0, scope: !13183)
!13187 = !DILocation(line: 0, scope: !12046, inlinedAt: !13188)
!13188 = distinct !DILocation(line: 906, column: 2, scope: !13183)
!13189 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !13190)
!13190 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !13188)
!13191 = !DILocation(line: 0, scope: !12055, inlinedAt: !13190)
!13192 = !DILocation(line: 907, column: 16, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13194, file: !2108, line: 906, column: 26)
!13194 = distinct !DILexicalBlock(scope: !13183, file: !2108, line: 906, column: 2)
!13195 = !DILocation(line: 909, column: 7, scope: !13193)
!13196 = !DILocation(line: 0, scope: !12215, inlinedAt: !13197)
!13197 = distinct !DILocation(line: 912, column: 5, scope: !13198)
!13198 = distinct !DILexicalBlock(scope: !13199, file: !2108, line: 911, column: 63)
!13199 = distinct !DILexicalBlock(scope: !13200, file: !2108, line: 911, column: 8)
!13200 = distinct !DILexicalBlock(scope: !13201, file: !2108, line: 909, column: 19)
!13201 = distinct !DILexicalBlock(scope: !13193, file: !2108, line: 909, column: 7)
!13202 = !DILocation(line: 266, column: 28, scope: !12215, inlinedAt: !13197)
!13203 = !DILocation(line: 0, scope: !12223, inlinedAt: !13204)
!13204 = distinct !DILocation(line: 268, column: 3, scope: !12227, inlinedAt: !13197)
!13205 = !DILocation(line: 234, column: 2, scope: !12223, inlinedAt: !13204)
!13206 = !DILocation(line: 913, column: 23, scope: !13198)
!13207 = !DILocation(line: 0, scope: !12232, inlinedAt: !13208)
!13208 = distinct !DILocation(line: 914, column: 5, scope: !13198)
!13209 = !DILocation(line: 252, column: 28, scope: !12232, inlinedAt: !13208)
!13210 = !DILocation(line: 0, scope: !12239, inlinedAt: !13211)
!13211 = distinct !DILocation(line: 254, column: 3, scope: !12243, inlinedAt: !13208)
!13212 = !DILocation(line: 0, scope: !12246, inlinedAt: !13213)
!13213 = distinct !DILocation(line: 229, column: 2, scope: !12239, inlinedAt: !13211)
!13214 = !DILocation(line: 188, column: 2, scope: !12256, inlinedAt: !13213)
!13215 = !DILocation(line: 188, column: 2, scope: !12258, inlinedAt: !13213)
!13216 = !DILocation(line: 0, scope: !12256, inlinedAt: !13213)
!13217 = !DILocation(line: 189, column: 7, scope: !12261, inlinedAt: !13213)
!13218 = !DILocation(line: 189, column: 35, scope: !12261, inlinedAt: !13213)
!13219 = !DILocation(line: 189, column: 7, scope: !12262, inlinedAt: !13213)
!13220 = !DILocation(line: 190, column: 4, scope: !12266, inlinedAt: !13213)
!13221 = !DILocation(line: 192, column: 4, scope: !12266, inlinedAt: !13213)
!13222 = distinct !{!13222, !13214, !13223}
!13223 = !DILocation(line: 194, column: 2, scope: !12256, inlinedAt: !13213)
!13224 = !DILocation(line: 196, column: 2, scope: !12246, inlinedAt: !13213)
!13225 = !DILocation(line: 197, column: 1, scope: !12246, inlinedAt: !13213)
!13226 = !DILocation(line: 918, column: 4, scope: !13200)
!13227 = !DILocation(line: 919, column: 3, scope: !13200)
!13228 = !DILocation(line: 920, column: 22, scope: !13229)
!13229 = distinct !DILexicalBlock(scope: !13201, file: !2108, line: 919, column: 10)
!13230 = !DILocation(line: 0, scope: !12073, inlinedAt: !13231)
!13231 = distinct !DILocation(line: 906, column: 2, scope: !13194)
!13232 = !DILocation(line: 0, scope: !12081, inlinedAt: !13233)
!13233 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !13231)
!13234 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !13233)
!13235 = !DILocation(line: 926, column: 2, scope: !13177)
!13236 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2108, file: !2108, line: 929, type: !13237, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13239)
!13237 = !DISubroutineType(types: !13238)
!13238 = !{null, !2003, !103}
!13239 = !{!13240, !13241, !13242}
!13240 = !DILocalVariable(name: "thread", arg: 1, scope: !13236, file: !2108, line: 929, type: !2003)
!13241 = !DILocalVariable(name: "prio", arg: 2, scope: !13236, file: !2108, line: 929, type: !103)
!13242 = !DILocalVariable(name: "need_sched", scope: !13236, file: !2108, line: 931, type: !157)
!13243 = !DILocation(line: 0, scope: !13236)
!13244 = !DILocation(line: 931, column: 20, scope: !13236)
!13245 = !DILocation(line: 935, column: 17, scope: !13246)
!13246 = distinct !DILexicalBlock(scope: !13236, file: !2108, line: 935, column: 6)
!13247 = !DILocation(line: 935, column: 20, scope: !13246)
!13248 = !DILocation(line: 935, column: 35, scope: !13246)
!13249 = !DILocation(line: 935, column: 48, scope: !13246)
!13250 = !DILocation(line: 935, column: 6, scope: !13236)
!13251 = !DILocation(line: 936, column: 3, scope: !13252)
!13252 = distinct !DILexicalBlock(scope: !13246, file: !2108, line: 935, column: 55)
!13253 = !DILocation(line: 937, column: 2, scope: !13252)
!13254 = !DILocation(line: 938, column: 1, scope: !13236)
!13255 = distinct !DISubprogram(name: "k_sched_lock", scope: !2108, file: !2108, line: 987, type: !2913, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13256)
!13256 = !{!13257, !13259}
!13257 = !DILocalVariable(name: "__i", scope: !13258, file: !2108, line: 989, type: !12038)
!13258 = distinct !DILexicalBlock(scope: !13255, file: !2108, line: 989, column: 2)
!13259 = !DILocalVariable(name: "__key", scope: !13258, file: !2108, line: 989, type: !12038)
!13260 = !DILocation(line: 0, scope: !13258)
!13261 = !DILocation(line: 0, scope: !12046, inlinedAt: !13262)
!13262 = distinct !DILocation(line: 989, column: 2, scope: !13258)
!13263 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !13264)
!13264 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !13262)
!13265 = !DILocation(line: 0, scope: !12055, inlinedAt: !13264)
!13266 = !DILocation(line: 992, column: 3, scope: !13267)
!13267 = distinct !DILexicalBlock(scope: !13268, file: !2108, line: 989, column: 26)
!13268 = distinct !DILexicalBlock(scope: !13258, file: !2108, line: 989, column: 2)
!13269 = !DILocation(line: 0, scope: !12073, inlinedAt: !13270)
!13270 = distinct !DILocation(line: 989, column: 2, scope: !13268)
!13271 = !DILocation(line: 0, scope: !12081, inlinedAt: !13272)
!13272 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !13270)
!13273 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !13272)
!13274 = !DILocation(line: 994, column: 1, scope: !13255)
!13275 = distinct !DISubprogram(name: "z_sched_lock", scope: !11318, file: !11318, line: 251, type: !2913, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!13276 = !DILocation(line: 256, column: 4, scope: !13275)
!13277 = !DILocation(line: 256, column: 19, scope: !13275)
!13278 = !DILocation(line: 256, column: 2, scope: !13275)
!13279 = !DILocation(line: 258, column: 2, scope: !13280)
!13280 = distinct !DILexicalBlock(scope: !13275, file: !11318, line: 258, column: 2)
!13281 = !{i64 2154189306}
!13282 = !DILocation(line: 259, column: 1, scope: !13275)
!13283 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2108, file: !2108, line: 996, type: !2913, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13284)
!13284 = !{!13285, !13287}
!13285 = !DILocalVariable(name: "__i", scope: !13286, file: !2108, line: 998, type: !12038)
!13286 = distinct !DILexicalBlock(scope: !13283, file: !2108, line: 998, column: 2)
!13287 = !DILocalVariable(name: "__key", scope: !13286, file: !2108, line: 998, type: !12038)
!13288 = !DILocation(line: 0, scope: !13286)
!13289 = !DILocation(line: 0, scope: !12046, inlinedAt: !13290)
!13290 = distinct !DILocation(line: 998, column: 2, scope: !13286)
!13291 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !13292)
!13292 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !13290)
!13293 = !DILocation(line: 0, scope: !12055, inlinedAt: !13292)
!13294 = !DILocation(line: 1002, column: 5, scope: !13295)
!13295 = distinct !DILexicalBlock(scope: !13296, file: !2108, line: 998, column: 26)
!13296 = distinct !DILexicalBlock(scope: !13286, file: !2108, line: 998, column: 2)
!13297 = !DILocation(line: 1002, column: 20, scope: !13295)
!13298 = !DILocation(line: 1002, column: 3, scope: !13295)
!13299 = !DILocation(line: 1003, column: 3, scope: !13295)
!13300 = !DILocation(line: 0, scope: !12073, inlinedAt: !13301)
!13301 = distinct !DILocation(line: 998, column: 2, scope: !13296)
!13302 = !DILocation(line: 0, scope: !12081, inlinedAt: !13303)
!13303 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !13301)
!13304 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !13303)
!13305 = !DILocation(line: 1011, column: 2, scope: !13283)
!13306 = !DILocation(line: 1012, column: 1, scope: !13283)
!13307 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2108, file: !2108, line: 1014, type: !12354, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!13308 = !DILocation(line: 1028, column: 25, scope: !13307)
!13309 = !DILocation(line: 1028, column: 2, scope: !13307)
!13310 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2108, file: !2108, line: 1155, type: !13311, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13313)
!13311 = !DISubroutineType(types: !13312)
!13312 = !{!157, !2032, !2032}
!13313 = !{!13314, !13315, !13316, !13317, !13318}
!13314 = !DILocalVariable(name: "a", arg: 1, scope: !13310, file: !2108, line: 1155, type: !2032)
!13315 = !DILocalVariable(name: "b", arg: 2, scope: !13310, file: !2108, line: 1155, type: !2032)
!13316 = !DILocalVariable(name: "thread_a", scope: !13310, file: !2108, line: 1157, type: !2003)
!13317 = !DILocalVariable(name: "thread_b", scope: !13310, file: !2108, line: 1157, type: !2003)
!13318 = !DILocalVariable(name: "cmp", scope: !13310, file: !2108, line: 1158, type: !566)
!13319 = !DILocation(line: 0, scope: !13310)
!13320 = !DILocation(line: 1160, column: 13, scope: !13310)
!13321 = !DILocation(line: 1161, column: 13, scope: !13310)
!13322 = !DILocation(line: 1163, column: 8, scope: !13310)
!13323 = !DILocation(line: 1165, column: 10, scope: !13324)
!13324 = distinct !DILexicalBlock(scope: !13310, file: !2108, line: 1165, column: 6)
!13325 = !DILocation(line: 1165, column: 6, scope: !13310)
!13326 = !DILocation(line: 1167, column: 17, scope: !13327)
!13327 = distinct !DILexicalBlock(scope: !13324, file: !2108, line: 1167, column: 13)
!13328 = !DILocation(line: 1167, column: 13, scope: !13324)
!13329 = !DILocation(line: 1170, column: 25, scope: !13330)
!13330 = distinct !DILexicalBlock(scope: !13327, file: !2108, line: 1169, column: 9)
!13331 = !DILocation(line: 1170, column: 52, scope: !13330)
!13332 = !DILocation(line: 1170, column: 35, scope: !13330)
!13333 = !DILocation(line: 1170, column: 3, scope: !13330)
!13334 = !DILocation(line: 0, scope: !13324)
!13335 = !DILocation(line: 1173, column: 1, scope: !13310)
!13336 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2108, file: !2108, line: 1175, type: !13337, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13352)
!13337 = !DISubroutineType(types: !13338)
!13338 = !{null, !13339, !2003}
!13339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13340, size: 32)
!13340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !13341, line: 37, size: 128, elements: !13342)
!13341 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13342 = !{!13343, !13351}
!13343 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !13340, file: !13341, line: 38, baseType: !13344, size: 96)
!13344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !237, line: 83, size: 96, elements: !13345)
!13345 = !{!13346, !13347, !13350}
!13346 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !13344, file: !237, line: 84, baseType: !2032, size: 32)
!13347 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !13344, file: !237, line: 85, baseType: !13348, size: 32, offset: 32)
!13348 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !237, line: 81, baseType: !13349)
!13349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13311, size: 32)
!13350 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !13344, file: !237, line: 86, baseType: !103, size: 32, offset: 64)
!13351 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !13340, file: !13341, line: 39, baseType: !103, size: 32, offset: 96)
!13352 = !{!13353, !13354, !13355, !13356, !13365}
!13353 = !DILocalVariable(name: "pq", arg: 1, scope: !13336, file: !2108, line: 1175, type: !13339)
!13354 = !DILocalVariable(name: "thread", arg: 2, scope: !13336, file: !2108, line: 1175, type: !2003)
!13355 = !DILocalVariable(name: "t", scope: !13336, file: !2108, line: 1177, type: !2003)
!13356 = !DILocalVariable(name: "__f", scope: !13357, file: !2108, line: 1190, type: !13360)
!13357 = distinct !DILexicalBlock(scope: !13358, file: !2108, line: 1190, column: 3)
!13358 = distinct !DILexicalBlock(scope: !13359, file: !2108, line: 1189, column: 27)
!13359 = distinct !DILexicalBlock(scope: !13336, file: !2108, line: 1189, column: 6)
!13360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !237, line: 155, size: 96, elements: !13361)
!13361 = !{!13362, !13363, !13364}
!13362 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !13360, file: !237, line: 156, baseType: !2103, size: 32)
!13363 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !13360, file: !237, line: 157, baseType: !1653, size: 32, offset: 32)
!13364 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !13360, file: !237, line: 158, baseType: !566, size: 32, offset: 64)
!13365 = !DILocalVariable(name: "n", scope: !13366, file: !2108, line: 1190, type: !2032)
!13366 = distinct !DILexicalBlock(scope: !13367, file: !2108, line: 1190, column: 3)
!13367 = distinct !DILexicalBlock(scope: !13357, file: !2108, line: 1190, column: 3)
!13368 = !DILocation(line: 0, scope: !13336)
!13369 = !DILocation(line: 1181, column: 31, scope: !13336)
!13370 = !DILocation(line: 1181, column: 45, scope: !13336)
!13371 = !DILocation(line: 1181, column: 15, scope: !13336)
!13372 = !DILocation(line: 1181, column: 25, scope: !13336)
!13373 = !DILocation(line: 1189, column: 11, scope: !13359)
!13374 = !DILocation(line: 1189, column: 7, scope: !13359)
!13375 = !DILocation(line: 1189, column: 6, scope: !13336)
!13376 = !DILocation(line: 1190, column: 3, scope: !13357)
!13377 = !DILocation(line: 1190, column: 3, scope: !13366)
!13378 = !DILocation(line: 0, scope: !13366)
!13379 = !DILocation(line: 1190, column: 3, scope: !13367)
!13380 = !DILocation(line: 1193, column: 2, scope: !13358)
!13381 = !DILocation(line: 1191, column: 42, scope: !13382)
!13382 = distinct !DILexicalBlock(scope: !13367, file: !2108, line: 1190, column: 54)
!13383 = !DILocation(line: 1191, column: 12, scope: !13382)
!13384 = !DILocation(line: 1191, column: 22, scope: !13382)
!13385 = distinct !{!13385, !13376, !13386}
!13386 = !DILocation(line: 1192, column: 3, scope: !13357)
!13387 = !DILocation(line: 1195, column: 17, scope: !13336)
!13388 = !DILocation(line: 1195, column: 37, scope: !13336)
!13389 = !DILocation(line: 1195, column: 2, scope: !13336)
!13390 = !DILocation(line: 1196, column: 1, scope: !13336)
!13391 = !DISubprogram(name: "z_rb_foreach_next", scope: !237, file: !237, line: 176, type: !13392, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13392 = !DISubroutineType(types: !13393)
!13393 = !{!2032, !13394, !13395}
!13394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13344, size: 32)
!13395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13360, size: 32)
!13396 = !DISubprogram(name: "rb_insert", scope: !237, file: !237, line: 105, type: !13397, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13397 = !DISubroutineType(types: !13398)
!13398 = !{null, !13394, !2032}
!13399 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2108, file: !2108, line: 1198, type: !13337, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13400)
!13400 = !{!13401, !13402}
!13401 = !DILocalVariable(name: "pq", arg: 1, scope: !13399, file: !2108, line: 1198, type: !13339)
!13402 = !DILocalVariable(name: "thread", arg: 2, scope: !13399, file: !2108, line: 1198, type: !2003)
!13403 = !DILocation(line: 0, scope: !13399)
!13404 = !DILocation(line: 1202, column: 17, scope: !13399)
!13405 = !DILocation(line: 1202, column: 37, scope: !13399)
!13406 = !DILocation(line: 1202, column: 2, scope: !13399)
!13407 = !DILocation(line: 1204, column: 16, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13399, file: !2108, line: 1204, column: 6)
!13409 = !DILocation(line: 1204, column: 7, scope: !13408)
!13410 = !DILocation(line: 1204, column: 6, scope: !13399)
!13411 = !DILocation(line: 1205, column: 7, scope: !13412)
!13412 = distinct !DILexicalBlock(scope: !13408, file: !2108, line: 1204, column: 22)
!13413 = !DILocation(line: 1205, column: 22, scope: !13412)
!13414 = !DILocation(line: 1206, column: 2, scope: !13412)
!13415 = !DILocation(line: 1207, column: 1, scope: !13399)
!13416 = !DISubprogram(name: "rb_remove", scope: !237, file: !237, line: 110, type: !13397, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13417 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2108, file: !2108, line: 1209, type: !13418, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13420)
!13418 = !DISubroutineType(types: !13419)
!13419 = !{!2003, !13339}
!13420 = !{!13421, !13422, !13423}
!13421 = !DILocalVariable(name: "pq", arg: 1, scope: !13417, file: !2108, line: 1209, type: !13339)
!13422 = !DILocalVariable(name: "thread", scope: !13417, file: !2108, line: 1211, type: !2003)
!13423 = !DILocalVariable(name: "n", scope: !13417, file: !2108, line: 1212, type: !2032)
!13424 = !DILocation(line: 0, scope: !13417)
!13425 = !DILocation(line: 1212, column: 37, scope: !13417)
!13426 = !DILocation(line: 1212, column: 21, scope: !13417)
!13427 = !DILocation(line: 1217, column: 2, scope: !13417)
!13428 = distinct !DISubprogram(name: "rb_get_min", scope: !237, file: !237, line: 115, type: !13429, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13431)
!13429 = !DISubroutineType(types: !13430)
!13430 = !{!2032, !13394}
!13431 = !{!13432}
!13432 = !DILocalVariable(name: "tree", arg: 1, scope: !13428, file: !237, line: 115, type: !13394)
!13433 = !DILocation(line: 0, scope: !13428)
!13434 = !DILocation(line: 117, column: 9, scope: !13428)
!13435 = !DILocation(line: 117, column: 2, scope: !13428)
!13436 = !DISubprogram(name: "z_rb_get_minmax", scope: !237, file: !237, line: 100, type: !13437, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13437 = !DISubroutineType(types: !13438)
!13438 = !{!2032, !13394, !154}
!13439 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2108, file: !2108, line: 1246, type: !13440, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13450)
!13440 = !DISubroutineType(types: !13441)
!13441 = !{!2003, !13442}
!13442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13443, size: 32)
!13443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !13341, line: 53, size: 2080, elements: !13444)
!13444 = !{!13445, !13449}
!13445 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !13443, file: !13341, line: 54, baseType: !13446, size: 2048)
!13446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2039, size: 2048, elements: !13447)
!13447 = !{!13448}
!13448 = !DISubrange(count: 32)
!13449 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !13443, file: !13341, line: 55, baseType: !32, size: 32, offset: 2048)
!13450 = !{!13451, !13452, !13453, !13454}
!13451 = !DILocalVariable(name: "pq", arg: 1, scope: !13439, file: !2108, line: 1246, type: !13442)
!13452 = !DILocalVariable(name: "thread", scope: !13439, file: !2108, line: 1252, type: !2003)
!13453 = !DILocalVariable(name: "l", scope: !13439, file: !2108, line: 1253, type: !12249)
!13454 = !DILocalVariable(name: "n", scope: !13439, file: !2108, line: 1254, type: !2104)
!13455 = !DILocation(line: 0, scope: !13439)
!13456 = !DILocation(line: 1248, column: 11, scope: !13457)
!13457 = distinct !DILexicalBlock(scope: !13439, file: !2108, line: 1248, column: 6)
!13458 = !DILocation(line: 1248, column: 7, scope: !13457)
!13459 = !DILocation(line: 1248, column: 6, scope: !13439)
!13460 = !DILocation(line: 1253, column: 31, scope: !13439)
!13461 = !DILocation(line: 1253, column: 20, scope: !13439)
!13462 = !DILocation(line: 1254, column: 19, scope: !13439)
!13463 = !DILocation(line: 1260, column: 1, scope: !13439)
!13464 = distinct !DISubprogram(name: "z_unpend_all", scope: !2108, file: !2108, line: 1262, type: !13465, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13467)
!13465 = !DISubroutineType(types: !13466)
!13466 = !{!103, !2034}
!13467 = !{!13468, !13469, !13470}
!13468 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13464, file: !2108, line: 1262, type: !2034)
!13469 = !DILocalVariable(name: "need_sched", scope: !13464, file: !2108, line: 1264, type: !103)
!13470 = !DILocalVariable(name: "thread", scope: !13464, file: !2108, line: 1265, type: !2003)
!13471 = !DILocation(line: 0, scope: !13464)
!13472 = !DILocation(line: 1267, column: 19, scope: !13464)
!13473 = !DILocation(line: 1267, column: 41, scope: !13464)
!13474 = !DILocation(line: 1267, column: 2, scope: !13464)
!13475 = !DILocation(line: 1268, column: 3, scope: !13476)
!13476 = distinct !DILexicalBlock(scope: !13464, file: !2108, line: 1267, column: 50)
!13477 = !DILocation(line: 1269, column: 3, scope: !13476)
!13478 = distinct !{!13478, !13474, !13479}
!13479 = !DILocation(line: 1271, column: 2, scope: !13464)
!13480 = !DILocation(line: 1273, column: 2, scope: !13464)
!13481 = distinct !DISubprogram(name: "z_waitq_head", scope: !11644, file: !11644, line: 52, type: !13097, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13482)
!13482 = !{!13483}
!13483 = !DILocalVariable(name: "w", arg: 1, scope: !13481, file: !11644, line: 52, type: !2034)
!13484 = !DILocation(line: 0, scope: !13481)
!13485 = !DILocation(line: 54, column: 52, scope: !13481)
!13486 = !DILocation(line: 54, column: 28, scope: !13481)
!13487 = !DILocation(line: 54, column: 9, scope: !13481)
!13488 = !DILocation(line: 54, column: 2, scope: !13481)
!13489 = distinct !DISubprogram(name: "init_ready_q", scope: !2108, file: !2108, line: 1276, type: !13490, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13497)
!13490 = !DISubroutineType(types: !13491)
!13491 = !{null, !13492}
!13492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13493, size: 32)
!13493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !247, line: 83, size: 96, elements: !13494)
!13494 = !{!13495, !13496}
!13495 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !13493, file: !247, line: 86, baseType: !2003, size: 32)
!13496 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !13493, file: !247, line: 90, baseType: !2039, size: 64, offset: 32)
!13497 = !{!13498}
!13498 = !DILocalVariable(name: "rq", arg: 1, scope: !13489, file: !2108, line: 1276, type: !13492)
!13499 = !DILocation(line: 0, scope: !13489)
!13500 = !DILocation(line: 1289, column: 22, scope: !13489)
!13501 = !DILocation(line: 1289, column: 2, scope: !13489)
!13502 = !DILocation(line: 1291, column: 1, scope: !13489)
!13503 = distinct !DISubprogram(name: "sys_dlist_init", scope: !221, file: !221, line: 197, type: !13504, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13506)
!13504 = !DISubroutineType(types: !13505)
!13505 = !{null, !12249}
!13506 = !{!13507}
!13507 = !DILocalVariable(name: "list", arg: 1, scope: !13503, file: !221, line: 197, type: !12249)
!13508 = !DILocation(line: 0, scope: !13503)
!13509 = !DILocation(line: 199, column: 8, scope: !13503)
!13510 = !DILocation(line: 199, column: 13, scope: !13503)
!13511 = !DILocation(line: 200, column: 8, scope: !13503)
!13512 = !DILocation(line: 200, column: 13, scope: !13503)
!13513 = !DILocation(line: 201, column: 1, scope: !13503)
!13514 = distinct !DISubprogram(name: "z_sched_init", scope: !2108, file: !2108, line: 1293, type: !2913, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!13515 = !DILocation(line: 1302, column: 2, scope: !13514)
!13516 = !DILocation(line: 1306, column: 2, scope: !13514)
!13517 = !DILocation(line: 1309, column: 1, scope: !13514)
!13518 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2108, file: !2108, line: 1311, type: !13519, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13522)
!13519 = !DISubroutineType(types: !13520)
!13520 = !{!103, !13521}
!13521 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !2003)
!13522 = !{!13523}
!13523 = !DILocalVariable(name: "thread", arg: 1, scope: !13518, file: !2108, line: 1311, type: !13521)
!13524 = !DILocation(line: 0, scope: !13518)
!13525 = !DILocation(line: 1313, column: 22, scope: !13518)
!13526 = !DILocation(line: 1313, column: 9, scope: !13518)
!13527 = !DILocation(line: 1313, column: 2, scope: !13518)
!13528 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2108, file: !2108, line: 1325, type: !13529, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13531)
!13529 = !DISubroutineType(types: !13530)
!13530 = !{null, !13521, !103}
!13531 = !{!13532, !13533, !13534}
!13532 = !DILocalVariable(name: "thread", arg: 1, scope: !13528, file: !2108, line: 1325, type: !13521)
!13533 = !DILocalVariable(name: "prio", arg: 2, scope: !13528, file: !2108, line: 1325, type: !103)
!13534 = !DILocalVariable(name: "th", scope: !13528, file: !2108, line: 1334, type: !2003)
!13535 = !DILocation(line: 0, scope: !13528)
!13536 = !DILocation(line: 1336, column: 2, scope: !13528)
!13537 = !DILocation(line: 1337, column: 1, scope: !13528)
!13538 = distinct !DISubprogram(name: "k_can_yield", scope: !2108, file: !2108, line: 1384, type: !6178, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!13539 = !DILocation(line: 1386, column: 11, scope: !13538)
!13540 = !DILocation(line: 1386, column: 29, scope: !13538)
!13541 = !DILocation(line: 1386, column: 32, scope: !13538)
!13542 = !DILocation(line: 1386, column: 46, scope: !13538)
!13543 = !DILocation(line: 1387, column: 28, scope: !13538)
!13544 = !DILocation(line: 1387, column: 4, scope: !13538)
!13545 = !DILocation(line: 1386, column: 2, scope: !13538)
!13546 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !307, file: !307, line: 989, type: !6178, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!13547 = !DILocation(line: 993, column: 10, scope: !13546)
!13548 = !DILocation(line: 993, column: 2, scope: !13546)
!13549 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2108, file: !2108, line: 1390, type: !2913, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13550)
!13550 = !{!13551}
!13551 = !DILocalVariable(name: "key", scope: !13549, file: !2108, line: 1396, type: !12038)
!13552 = !DILocation(line: 0, scope: !12046, inlinedAt: !13553)
!13553 = distinct !DILocation(line: 1396, column: 25, scope: !13549)
!13554 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !13555)
!13555 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !13553)
!13556 = !DILocation(line: 0, scope: !12055, inlinedAt: !13555)
!13557 = !DILocation(line: 0, scope: !13549)
!13558 = !DILocation(line: 1400, column: 18, scope: !13559)
!13559 = distinct !DILexicalBlock(scope: !13560, file: !2108, line: 1399, column: 36)
!13560 = distinct !DILexicalBlock(scope: !13549, file: !2108, line: 1398, column: 6)
!13561 = !DILocation(line: 0, scope: !12215, inlinedAt: !13562)
!13562 = distinct !DILocation(line: 1400, column: 3, scope: !13559)
!13563 = !DILocation(line: 266, column: 15, scope: !12215, inlinedAt: !13562)
!13564 = !DILocation(line: 266, column: 28, scope: !12215, inlinedAt: !13562)
!13565 = !DILocation(line: 0, scope: !12223, inlinedAt: !13566)
!13566 = distinct !DILocation(line: 268, column: 3, scope: !12227, inlinedAt: !13562)
!13567 = !DILocation(line: 234, column: 2, scope: !12223, inlinedAt: !13566)
!13568 = !DILocation(line: 1402, column: 15, scope: !13549)
!13569 = !DILocation(line: 0, scope: !12232, inlinedAt: !13570)
!13570 = distinct !DILocation(line: 1402, column: 2, scope: !13549)
!13571 = !DILocation(line: 252, column: 15, scope: !12232, inlinedAt: !13570)
!13572 = !DILocation(line: 252, column: 28, scope: !12232, inlinedAt: !13570)
!13573 = !DILocation(line: 0, scope: !12239, inlinedAt: !13574)
!13574 = distinct !DILocation(line: 254, column: 3, scope: !12243, inlinedAt: !13570)
!13575 = !DILocation(line: 0, scope: !12246, inlinedAt: !13576)
!13576 = distinct !DILocation(line: 229, column: 2, scope: !12239, inlinedAt: !13574)
!13577 = !DILocation(line: 188, column: 2, scope: !12256, inlinedAt: !13576)
!13578 = !DILocation(line: 188, column: 2, scope: !12258, inlinedAt: !13576)
!13579 = !DILocation(line: 0, scope: !12256, inlinedAt: !13576)
!13580 = !DILocation(line: 189, column: 7, scope: !12261, inlinedAt: !13576)
!13581 = !DILocation(line: 189, column: 35, scope: !12261, inlinedAt: !13576)
!13582 = !DILocation(line: 189, column: 7, scope: !12262, inlinedAt: !13576)
!13583 = !DILocation(line: 191, column: 21, scope: !12266, inlinedAt: !13576)
!13584 = !DILocation(line: 190, column: 4, scope: !12266, inlinedAt: !13576)
!13585 = !DILocation(line: 192, column: 4, scope: !12266, inlinedAt: !13576)
!13586 = distinct !{!13586, !13577, !13587}
!13587 = !DILocation(line: 194, column: 2, scope: !12256, inlinedAt: !13576)
!13588 = !DILocation(line: 196, column: 37, scope: !12246, inlinedAt: !13576)
!13589 = !DILocation(line: 196, column: 2, scope: !12246, inlinedAt: !13576)
!13590 = !DILocation(line: 197, column: 1, scope: !12246, inlinedAt: !13576)
!13591 = !DILocation(line: 1403, column: 2, scope: !13549)
!13592 = !DILocation(line: 0, scope: !12657, inlinedAt: !13593)
!13593 = distinct !DILocation(line: 1404, column: 2, scope: !13549)
!13594 = !DILocation(line: 196, column: 9, scope: !12657, inlinedAt: !13593)
!13595 = !DILocation(line: 1405, column: 1, scope: !13549)
!13596 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2108, file: !2108, line: 1459, type: !13597, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13599)
!13597 = !DISubroutineType(types: !13598)
!13598 = !{!566, !12837}
!13599 = !{!13600, !13601, !13602}
!13600 = !DILocalVariable(name: "timeout", arg: 1, scope: !13596, file: !2108, line: 1459, type: !12837)
!13601 = !DILocalVariable(name: "ticks", scope: !13596, file: !2108, line: 1461, type: !1358)
!13602 = !DILocalVariable(name: "ret", scope: !13596, file: !2108, line: 1480, type: !566)
!13603 = !DILocation(line: 0, scope: !13596)
!13604 = !DILocation(line: 1468, column: 6, scope: !13605)
!13605 = distinct !DILexicalBlock(scope: !13596, file: !2108, line: 1468, column: 6)
!13606 = !DILocation(line: 1468, column: 6, scope: !13596)
!13607 = !DILocation(line: 1469, column: 20, scope: !13608)
!13608 = distinct !DILexicalBlock(scope: !13605, file: !2108, line: 1468, column: 40)
!13609 = !DILocation(line: 1469, column: 3, scope: !13608)
!13610 = !DILocation(line: 1473, column: 3, scope: !13608)
!13611 = !DILocation(line: 1478, column: 10, scope: !13596)
!13612 = !DILocation(line: 1480, column: 16, scope: !13596)
!13613 = !DILocation(line: 1485, column: 1, scope: !13596)
!13614 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3045, file: !3045, line: 310, type: !13615, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13617)
!13615 = !DISubroutineType(types: !13616)
!13616 = !{null, !13521}
!13617 = !{!13618}
!13618 = !DILocalVariable(name: "thread", arg: 1, scope: !13614, file: !3045, line: 310, type: !13521)
!13619 = !DILocation(line: 0, scope: !13614)
!13620 = !DILocation(line: 319, column: 2, scope: !13621)
!13621 = distinct !DILexicalBlock(scope: !13614, file: !3045, line: 319, column: 2)
!13622 = !{i64 2154107695}
!13623 = !DILocation(line: 320, column: 2, scope: !13614)
!13624 = !DILocation(line: 321, column: 1, scope: !13614)
!13625 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2108, file: !2108, line: 1415, type: !13626, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13628)
!13626 = !DISubroutineType(types: !13627)
!13627 = !{!566, !1358}
!13628 = !{!13629, !13630, !13631, !13632}
!13629 = !DILocalVariable(name: "ticks", arg: 1, scope: !13625, file: !2108, line: 1415, type: !1358)
!13630 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !13625, file: !2108, line: 1418, type: !121)
!13631 = !DILocalVariable(name: "timeout", scope: !13625, file: !2108, line: 1430, type: !12837)
!13632 = !DILocalVariable(name: "key", scope: !13625, file: !2108, line: 1437, type: !12038)
!13633 = !DILocation(line: 0, scope: !13625)
!13634 = !DILocation(line: 1425, column: 12, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13625, file: !2108, line: 1425, column: 6)
!13636 = !DILocation(line: 1425, column: 6, scope: !13625)
!13637 = !DILocation(line: 1426, column: 3, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13635, file: !2108, line: 1425, column: 18)
!13639 = !DILocation(line: 1427, column: 3, scope: !13638)
!13640 = !DILocation(line: 1431, column: 24, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13625, file: !2108, line: 1431, column: 6)
!13642 = !DILocation(line: 1431, column: 6, scope: !13625)
!13643 = !DILocation(line: 1432, column: 35, scope: !13644)
!13644 = distinct !DILexicalBlock(scope: !13641, file: !2108, line: 1431, column: 30)
!13645 = !DILocation(line: 1432, column: 27, scope: !13644)
!13646 = !DILocation(line: 1433, column: 2, scope: !13644)
!13647 = !DILocation(line: 1434, column: 27, scope: !13648)
!13648 = distinct !DILexicalBlock(scope: !13641, file: !2108, line: 1433, column: 9)
!13649 = !DILocation(line: 0, scope: !13641)
!13650 = !DILocation(line: 0, scope: !12046, inlinedAt: !13651)
!13651 = distinct !DILocation(line: 1437, column: 25, scope: !13625)
!13652 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !13653)
!13653 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !13651)
!13654 = !DILocation(line: 0, scope: !12055, inlinedAt: !13653)
!13655 = !DILocation(line: 1440, column: 20, scope: !13625)
!13656 = !DILocation(line: 1440, column: 18, scope: !13625)
!13657 = !DILocation(line: 1442, column: 2, scope: !13625)
!13658 = !DILocation(line: 1443, column: 23, scope: !13625)
!13659 = !DILocation(line: 1443, column: 2, scope: !13625)
!13660 = !DILocation(line: 1444, column: 29, scope: !13625)
!13661 = !DILocation(line: 1444, column: 2, scope: !13625)
!13662 = !DILocation(line: 0, scope: !12657, inlinedAt: !13663)
!13663 = distinct !DILocation(line: 1446, column: 8, scope: !13625)
!13664 = !DILocation(line: 196, column: 9, scope: !12657, inlinedAt: !13663)
!13665 = !DILocation(line: 1450, column: 10, scope: !13625)
!13666 = !DILocation(line: 1450, column: 45, scope: !13625)
!13667 = !DILocation(line: 1450, column: 43, scope: !13625)
!13668 = !DILocation(line: 1451, column: 6, scope: !13625)
!13669 = !DILocation(line: 1457, column: 1, scope: !13625)
!13670 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !11879, file: !11879, line: 1103, type: !11880, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13671)
!13671 = !{!13672}
!13672 = !DILocalVariable(name: "t", arg: 1, scope: !13670, file: !11879, line: 1103, type: !1270)
!13673 = !DILocation(line: 0, scope: !13670)
!13674 = !DILocation(line: 0, scope: !12093, inlinedAt: !13675)
!13675 = distinct !DILocation(line: 1106, column: 9, scope: !13670)
!13676 = !DILocation(line: 139, column: 13, scope: !13677, inlinedAt: !13675)
!13677 = distinct !DILexicalBlock(scope: !13678, file: !11879, line: 138, column: 10)
!13678 = distinct !DILexicalBlock(scope: !13679, file: !11879, line: 136, column: 7)
!13679 = distinct !DILexicalBlock(scope: !12114, file: !11879, line: 134, column: 17)
!13680 = !DILocation(line: 1106, column: 2, scope: !13670)
!13681 = distinct !DISubprogram(name: "k_yield", scope: !3045, file: !3045, line: 140, type: !2913, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!13682 = !DILocation(line: 148, column: 2, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13681, file: !3045, line: 148, column: 2)
!13684 = !{i64 2154107015}
!13685 = !DILocation(line: 149, column: 2, scope: !13681)
!13686 = !DILocation(line: 150, column: 1, scope: !13681)
!13687 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2108, file: !2108, line: 1495, type: !13688, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13690)
!13688 = !DISubroutineType(types: !13689)
!13689 = !{!566, !103}
!13690 = !{!13691, !13692}
!13691 = !DILocalVariable(name: "us", arg: 1, scope: !13687, file: !2108, line: 1495, type: !103)
!13692 = !DILocalVariable(name: "ticks", scope: !13687, file: !2108, line: 1497, type: !566)
!13693 = !DILocation(line: 0, scope: !13687)
!13694 = !DILocation(line: 1501, column: 31, scope: !13687)
!13695 = !DILocation(line: 1501, column: 10, scope: !13687)
!13696 = !DILocation(line: 1502, column: 23, scope: !13687)
!13697 = !DILocation(line: 1502, column: 10, scope: !13687)
!13698 = !DILocation(line: 1506, column: 31, scope: !13687)
!13699 = !DILocation(line: 1506, column: 9, scope: !13687)
!13700 = !DILocation(line: 1506, column: 2, scope: !13687)
!13701 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !11879, file: !11879, line: 571, type: !11880, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13702)
!13702 = !{!13703}
!13703 = !DILocalVariable(name: "t", arg: 1, scope: !13701, file: !11879, line: 571, type: !1270)
!13704 = !DILocation(line: 0, scope: !13701)
!13705 = !DILocation(line: 0, scope: !12093, inlinedAt: !13706)
!13706 = distinct !DILocation(line: 574, column: 9, scope: !13701)
!13707 = !DILocation(line: 135, column: 5, scope: !13679, inlinedAt: !13706)
!13708 = !DILocation(line: 139, column: 13, scope: !13677, inlinedAt: !13706)
!13709 = !DILocation(line: 574, column: 2, scope: !13701)
!13710 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !11879, file: !11879, line: 1187, type: !11880, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13711)
!13711 = !{!13712}
!13712 = !DILocalVariable(name: "t", arg: 1, scope: !13710, file: !11879, line: 1187, type: !1270)
!13713 = !DILocation(line: 0, scope: !13710)
!13714 = !DILocation(line: 0, scope: !12093, inlinedAt: !13715)
!13715 = distinct !DILocation(line: 1190, column: 9, scope: !13710)
!13716 = !DILocation(line: 145, column: 13, scope: !13717, inlinedAt: !13715)
!13717 = distinct !DILexicalBlock(scope: !12111, file: !11879, line: 144, column: 10)
!13718 = !DILocation(line: 1190, column: 2, scope: !13710)
!13719 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2108, file: !2108, line: 1517, type: !13615, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13720)
!13720 = !{!13721}
!13721 = !DILocalVariable(name: "thread", arg: 1, scope: !13719, file: !2108, line: 1517, type: !13521)
!13722 = !DILocation(line: 0, scope: !13719)
!13723 = !DILocation(line: 1521, column: 6, scope: !13724)
!13724 = distinct !DILexicalBlock(scope: !13719, file: !2108, line: 1521, column: 6)
!13725 = !DILocation(line: 1521, column: 6, scope: !13719)
!13726 = !DILocation(line: 1525, column: 6, scope: !13727)
!13727 = distinct !DILexicalBlock(scope: !13719, file: !2108, line: 1525, column: 6)
!13728 = !DILocation(line: 1525, column: 37, scope: !13727)
!13729 = !DILocation(line: 1525, column: 6, scope: !13719)
!13730 = !DILocation(line: 1527, column: 20, scope: !13731)
!13731 = distinct !DILexicalBlock(scope: !13732, file: !2108, line: 1527, column: 7)
!13732 = distinct !DILexicalBlock(scope: !13727, file: !2108, line: 1525, column: 42)
!13733 = !DILocation(line: 1527, column: 33, scope: !13731)
!13734 = !DILocation(line: 1527, column: 7, scope: !13732)
!13735 = !DILocation(line: 1532, column: 2, scope: !13719)
!13736 = !DILocation(line: 1533, column: 2, scope: !13719)
!13737 = !DILocation(line: 1031, column: 3, scope: !12690, inlinedAt: !13738)
!13738 = distinct !DILocation(line: 48, column: 10, scope: !12694, inlinedAt: !13739)
!13739 = distinct !DILocation(line: 1537, column: 7, scope: !13740)
!13740 = distinct !DILexicalBlock(scope: !13719, file: !2108, line: 1537, column: 6)
!13741 = !DILocation(line: 0, scope: !12690, inlinedAt: !13738)
!13742 = !DILocation(line: 48, column: 9, scope: !12694, inlinedAt: !13739)
!13743 = !DILocation(line: 1537, column: 6, scope: !13719)
!13744 = !DILocation(line: 1538, column: 3, scope: !13745)
!13745 = distinct !DILexicalBlock(scope: !13740, file: !2108, line: 1537, column: 25)
!13746 = !DILocation(line: 1539, column: 2, scope: !13745)
!13747 = !DILocation(line: 1540, column: 1, scope: !13719)
!13748 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !11318, file: !11318, line: 101, type: !12164, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13749)
!13749 = !{!13750}
!13750 = !DILocalVariable(name: "thread", arg: 1, scope: !13748, file: !11318, line: 101, type: !2003)
!13751 = !DILocation(line: 0, scope: !13748)
!13752 = !DILocation(line: 103, column: 23, scope: !13748)
!13753 = !DILocation(line: 103, column: 36, scope: !13748)
!13754 = !DILocation(line: 103, column: 55, scope: !13748)
!13755 = !DILocation(line: 103, column: 2, scope: !13748)
!13756 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2108, file: !2108, line: 1567, type: !13757, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13759)
!13757 = !DISubroutineType(types: !13758)
!13758 = !{!13521}
!13759 = !{!13760}
!13760 = !DILocalVariable(name: "ret", scope: !13756, file: !2108, line: 1577, type: !13521)
!13761 = !DILocation(line: 1577, column: 30, scope: !13756)
!13762 = !DILocation(line: 0, scope: !13756)
!13763 = !DILocation(line: 1582, column: 2, scope: !13756)
!13764 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2108, file: !2108, line: 1593, type: !6453, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!13765 = !DILocation(line: 1031, column: 3, scope: !12690, inlinedAt: !13766)
!13766 = distinct !DILocation(line: 48, column: 10, scope: !12694, inlinedAt: !13767)
!13767 = distinct !DILocation(line: 1595, column: 10, scope: !13764)
!13768 = !DILocation(line: 0, scope: !12690, inlinedAt: !13766)
!13769 = !DILocation(line: 48, column: 9, scope: !12694, inlinedAt: !13767)
!13770 = !DILocation(line: 1595, column: 27, scope: !13764)
!13771 = !DILocation(line: 1595, column: 41, scope: !13764)
!13772 = !DILocation(line: 1595, column: 30, scope: !13764)
!13773 = !DILocation(line: 1595, column: 2, scope: !13764)
!13774 = distinct !DISubprogram(name: "z_thread_abort", scope: !2108, file: !2108, line: 1725, type: !12004, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13775)
!13775 = !{!13776, !13777}
!13776 = !DILocalVariable(name: "thread", arg: 1, scope: !13774, file: !2108, line: 1725, type: !2003)
!13777 = !DILocalVariable(name: "key", scope: !13774, file: !2108, line: 1727, type: !12038)
!13778 = !DILocation(line: 0, scope: !13774)
!13779 = !DILocation(line: 0, scope: !12046, inlinedAt: !13780)
!13780 = distinct !DILocation(line: 1727, column: 25, scope: !13774)
!13781 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !13782)
!13782 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !13780)
!13783 = !DILocation(line: 0, scope: !12055, inlinedAt: !13782)
!13784 = !DILocation(line: 1729, column: 20, scope: !13785)
!13785 = distinct !DILexicalBlock(scope: !13774, file: !2108, line: 1729, column: 6)
!13786 = !DILocation(line: 1729, column: 33, scope: !13785)
!13787 = !DILocation(line: 1729, column: 48, scope: !13785)
!13788 = !DILocation(line: 1729, column: 6, scope: !13774)
!13789 = !DILocation(line: 0, scope: !12073, inlinedAt: !13790)
!13790 = distinct !DILocation(line: 1730, column: 3, scope: !13791)
!13791 = distinct !DILexicalBlock(scope: !13785, file: !2108, line: 1729, column: 54)
!13792 = !DILocation(line: 0, scope: !12081, inlinedAt: !13793)
!13793 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !13790)
!13794 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !13793)
!13795 = !DILocation(line: 1732, column: 3, scope: !13796)
!13796 = distinct !DILexicalBlock(scope: !13791, file: !2108, line: 1732, column: 3)
!13797 = !{i64 2154844425, i64 2154844441, i64 2154844467, i64 2154844495, i64 2154844515}
!13798 = !DILocation(line: 1733, column: 3, scope: !13791)
!13799 = !DILocation(line: 1736, column: 20, scope: !13800)
!13800 = distinct !DILexicalBlock(scope: !13774, file: !2108, line: 1736, column: 6)
!13801 = !DILocation(line: 1736, column: 33, scope: !13800)
!13802 = !DILocation(line: 1736, column: 49, scope: !13800)
!13803 = !DILocation(line: 1736, column: 6, scope: !13774)
!13804 = !DILocation(line: 0, scope: !12073, inlinedAt: !13805)
!13805 = distinct !DILocation(line: 1737, column: 3, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13800, file: !2108, line: 1736, column: 56)
!13807 = !DILocation(line: 0, scope: !12081, inlinedAt: !13808)
!13808 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !13805)
!13809 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !13808)
!13810 = !DILocation(line: 1738, column: 3, scope: !13806)
!13811 = !DILocation(line: 1775, column: 2, scope: !13774)
!13812 = !DILocation(line: 1776, column: 16, scope: !13813)
!13813 = distinct !DILexicalBlock(scope: !13774, file: !2108, line: 1776, column: 6)
!13814 = !DILocation(line: 1776, column: 13, scope: !13813)
!13815 = !DILocation(line: 1776, column: 25, scope: !13813)
!13816 = !DILocation(line: 1031, column: 3, scope: !12690, inlinedAt: !13817)
!13817 = distinct !DILocation(line: 48, column: 10, scope: !12694, inlinedAt: !13818)
!13818 = distinct !DILocation(line: 1776, column: 29, scope: !13813)
!13819 = !DILocation(line: 0, scope: !12690, inlinedAt: !13817)
!13820 = !DILocation(line: 48, column: 9, scope: !12694, inlinedAt: !13818)
!13821 = !DILocation(line: 1776, column: 6, scope: !13774)
!13822 = !DILocation(line: 0, scope: !12657, inlinedAt: !13823)
!13823 = distinct !DILocation(line: 1777, column: 3, scope: !13824)
!13824 = distinct !DILexicalBlock(scope: !13813, file: !2108, line: 1776, column: 47)
!13825 = !DILocation(line: 196, column: 9, scope: !12657, inlinedAt: !13823)
!13826 = !DILocation(line: 1779, column: 2, scope: !13824)
!13827 = !DILocation(line: 0, scope: !12073, inlinedAt: !13828)
!13828 = distinct !DILocation(line: 1780, column: 2, scope: !13774)
!13829 = !DILocation(line: 0, scope: !12081, inlinedAt: !13830)
!13830 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !13828)
!13831 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !13830)
!13832 = !DILocation(line: 1781, column: 1, scope: !13774)
!13833 = distinct !DISubprogram(name: "end_thread", scope: !2108, file: !2108, line: 1690, type: !12004, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13834)
!13834 = !{!13835}
!13835 = !DILocalVariable(name: "thread", arg: 1, scope: !13833, file: !2108, line: 1690, type: !2003)
!13836 = !DILocation(line: 0, scope: !13833)
!13837 = !DILocation(line: 1695, column: 20, scope: !13838)
!13838 = distinct !DILexicalBlock(scope: !13833, file: !2108, line: 1695, column: 6)
!13839 = !DILocation(line: 1695, column: 33, scope: !13838)
!13840 = !DILocation(line: 1695, column: 49, scope: !13838)
!13841 = !DILocation(line: 1695, column: 6, scope: !13833)
!13842 = !DILocation(line: 1697, column: 29, scope: !13843)
!13843 = distinct !DILexicalBlock(scope: !13838, file: !2108, line: 1695, column: 56)
!13844 = !DILocation(line: 1698, column: 7, scope: !13845)
!13845 = distinct !DILexicalBlock(scope: !13843, file: !2108, line: 1698, column: 7)
!13846 = !DILocation(line: 1698, column: 7, scope: !13843)
!13847 = !DILocation(line: 0, scope: !12215, inlinedAt: !13848)
!13848 = distinct !DILocation(line: 1699, column: 4, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13845, file: !2108, line: 1698, column: 35)
!13850 = !DILocation(line: 266, column: 28, scope: !12215, inlinedAt: !13848)
!13851 = !DILocation(line: 0, scope: !12223, inlinedAt: !13852)
!13852 = distinct !DILocation(line: 268, column: 3, scope: !12227, inlinedAt: !13848)
!13853 = !DILocation(line: 234, column: 2, scope: !12223, inlinedAt: !13852)
!13854 = !DILocation(line: 1700, column: 3, scope: !13849)
!13855 = !DILocation(line: 1701, column: 20, scope: !13856)
!13856 = distinct !DILexicalBlock(scope: !13843, file: !2108, line: 1701, column: 7)
!13857 = !DILocation(line: 1701, column: 30, scope: !13856)
!13858 = !DILocation(line: 1701, column: 7, scope: !13843)
!13859 = !DILocation(line: 1702, column: 4, scope: !13860)
!13860 = distinct !DILexicalBlock(scope: !13856, file: !2108, line: 1701, column: 39)
!13861 = !DILocation(line: 1703, column: 3, scope: !13860)
!13862 = !DILocation(line: 1704, column: 9, scope: !13843)
!13863 = !DILocation(line: 1705, column: 23, scope: !13843)
!13864 = !DILocation(line: 1705, column: 3, scope: !13843)
!13865 = !DILocation(line: 1706, column: 3, scope: !13843)
!13866 = !DILocation(line: 1722, column: 2, scope: !13843)
!13867 = !DILocation(line: 1723, column: 1, scope: !13833)
!13868 = distinct !DISubprogram(name: "unpend_all", scope: !2108, file: !2108, line: 1674, type: !13869, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13871)
!13869 = !DISubroutineType(types: !13870)
!13870 = !{null, !2034}
!13871 = !{!13872, !13873}
!13872 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13868, file: !2108, line: 1674, type: !2034)
!13873 = !DILocalVariable(name: "thread", scope: !13868, file: !2108, line: 1676, type: !2003)
!13874 = !DILocation(line: 0, scope: !13868)
!13875 = !DILocation(line: 1678, column: 19, scope: !13868)
!13876 = !DILocation(line: 1678, column: 41, scope: !13868)
!13877 = !DILocation(line: 1678, column: 2, scope: !13868)
!13878 = !DILocation(line: 1679, column: 3, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !13868, file: !2108, line: 1678, column: 50)
!13880 = !DILocation(line: 1680, column: 9, scope: !13879)
!13881 = !DILocalVariable(name: "thread", arg: 1, scope: !13882, file: !11338, line: 65, type: !2003)
!13882 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !11338, file: !11338, line: 65, type: !13883, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13885)
!13883 = !DISubroutineType(types: !13884)
!13884 = !{null, !2003, !32}
!13885 = !{!13881, !13886}
!13886 = !DILocalVariable(name: "value", arg: 2, scope: !13882, file: !11338, line: 65, type: !32)
!13887 = !DILocation(line: 0, scope: !13882, inlinedAt: !13888)
!13888 = distinct !DILocation(line: 1681, column: 3, scope: !13879)
!13889 = !DILocation(line: 67, column: 15, scope: !13882, inlinedAt: !13888)
!13890 = !DILocation(line: 67, column: 33, scope: !13882, inlinedAt: !13888)
!13891 = !DILocation(line: 1682, column: 3, scope: !13879)
!13892 = distinct !{!13892, !13877, !13893}
!13893 = !DILocation(line: 1683, column: 2, scope: !13868)
!13894 = !DILocation(line: 1684, column: 1, scope: !13868)
!13895 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2108, file: !2108, line: 1794, type: !13896, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13898)
!13896 = !DISubroutineType(types: !13897)
!13897 = !{!103, !2003, !12837}
!13898 = !{!13899, !13900, !13901, !13902}
!13899 = !DILocalVariable(name: "thread", arg: 1, scope: !13895, file: !2108, line: 1794, type: !2003)
!13900 = !DILocalVariable(name: "timeout", arg: 2, scope: !13895, file: !2108, line: 1794, type: !12837)
!13901 = !DILocalVariable(name: "key", scope: !13895, file: !2108, line: 1796, type: !12038)
!13902 = !DILocalVariable(name: "ret", scope: !13895, file: !2108, line: 1797, type: !103)
!13903 = !DILocation(line: 0, scope: !13895)
!13904 = !DILocation(line: 0, scope: !12046, inlinedAt: !13905)
!13905 = distinct !DILocation(line: 1796, column: 25, scope: !13895)
!13906 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !13907)
!13907 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !13905)
!13908 = !DILocation(line: 0, scope: !12055, inlinedAt: !13907)
!13909 = !DILocation(line: 1801, column: 20, scope: !13910)
!13910 = distinct !DILexicalBlock(scope: !13895, file: !2108, line: 1801, column: 6)
!13911 = !DILocation(line: 1801, column: 33, scope: !13910)
!13912 = !DILocation(line: 1801, column: 49, scope: !13910)
!13913 = !DILocation(line: 1801, column: 6, scope: !13895)
!13914 = !DILocation(line: 1803, column: 13, scope: !13915)
!13915 = distinct !DILexicalBlock(scope: !13910, file: !2108, line: 1803, column: 13)
!13916 = !DILocation(line: 1803, column: 13, scope: !13910)
!13917 = !DILocation(line: 1805, column: 24, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13915, file: !2108, line: 1805, column: 13)
!13919 = !DILocation(line: 1805, column: 21, scope: !13918)
!13920 = !DILocation(line: 1805, column: 34, scope: !13918)
!13921 = !DILocation(line: 1806, column: 20, scope: !13918)
!13922 = !DILocation(line: 1806, column: 44, scope: !13918)
!13923 = !DILocation(line: 1806, column: 30, scope: !13918)
!13924 = !DILocation(line: 1805, column: 13, scope: !13915)
!13925 = !DILocation(line: 1810, column: 42, scope: !13926)
!13926 = distinct !DILexicalBlock(scope: !13918, file: !2108, line: 1808, column: 9)
!13927 = !DILocation(line: 1810, column: 3, scope: !13926)
!13928 = !DILocation(line: 1811, column: 22, scope: !13926)
!13929 = !DILocation(line: 1811, column: 3, scope: !13926)
!13930 = !DILocation(line: 0, scope: !12657, inlinedAt: !13931)
!13931 = distinct !DILocation(line: 1814, column: 9, scope: !13926)
!13932 = !DILocation(line: 196, column: 9, scope: !12657, inlinedAt: !13931)
!13933 = !DILocation(line: 1817, column: 3, scope: !13926)
!13934 = !DILocation(line: 0, scope: !13910)
!13935 = !DILocation(line: 0, scope: !12073, inlinedAt: !13936)
!13936 = distinct !DILocation(line: 1822, column: 2, scope: !13895)
!13937 = !DILocation(line: 0, scope: !12081, inlinedAt: !13938)
!13938 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !13936)
!13939 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !13938)
!13940 = !DILocation(line: 1823, column: 2, scope: !13895)
!13941 = !DILocation(line: 1824, column: 1, scope: !13895)
!13942 = distinct !DISubprogram(name: "z_sched_wake", scope: !2108, file: !2108, line: 1882, type: !13943, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13945)
!13943 = !DISubroutineType(types: !13944)
!13944 = !{!157, !2034, !103, !102}
!13945 = !{!13946, !13947, !13948, !13949, !13950, !13951, !13953}
!13946 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13942, file: !2108, line: 1882, type: !2034)
!13947 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !13942, file: !2108, line: 1882, type: !103)
!13948 = !DILocalVariable(name: "swap_data", arg: 3, scope: !13942, file: !2108, line: 1882, type: !102)
!13949 = !DILocalVariable(name: "thread", scope: !13942, file: !2108, line: 1884, type: !2003)
!13950 = !DILocalVariable(name: "ret", scope: !13942, file: !2108, line: 1885, type: !157)
!13951 = !DILocalVariable(name: "__i", scope: !13952, file: !2108, line: 1887, type: !12038)
!13952 = distinct !DILexicalBlock(scope: !13942, file: !2108, line: 1887, column: 2)
!13953 = !DILocalVariable(name: "__key", scope: !13952, file: !2108, line: 1887, type: !12038)
!13954 = !DILocation(line: 0, scope: !13942)
!13955 = !DILocation(line: 0, scope: !13952)
!13956 = !DILocation(line: 0, scope: !12046, inlinedAt: !13957)
!13957 = distinct !DILocation(line: 1887, column: 2, scope: !13952)
!13958 = !DILocation(line: 55, column: 2, scope: !12055, inlinedAt: !13959)
!13959 = distinct !DILocation(line: 145, column: 10, scope: !12046, inlinedAt: !13957)
!13960 = !DILocation(line: 0, scope: !12055, inlinedAt: !13959)
!13961 = !DILocation(line: 1888, column: 12, scope: !13962)
!13962 = distinct !DILexicalBlock(scope: !13963, file: !2108, line: 1887, column: 26)
!13963 = distinct !DILexicalBlock(scope: !13952, file: !2108, line: 1887, column: 2)
!13964 = !DILocation(line: 1890, column: 14, scope: !13965)
!13965 = distinct !DILexicalBlock(scope: !13962, file: !2108, line: 1890, column: 7)
!13966 = !DILocation(line: 1890, column: 7, scope: !13962)
!13967 = !DILocalVariable(name: "thread", arg: 1, scope: !13968, file: !13969, line: 134, type: !2003)
!13968 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13969, file: !13969, line: 134, type: !13970, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13972)
!13969 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13970 = !DISubroutineType(types: !13971)
!13971 = !{null, !2003, !32, !102}
!13972 = !{!13967, !13973, !13974}
!13973 = !DILocalVariable(name: "value", arg: 2, scope: !13968, file: !13969, line: 135, type: !32)
!13974 = !DILocalVariable(name: "data", arg: 3, scope: !13968, file: !13969, line: 136, type: !102)
!13975 = !DILocation(line: 0, scope: !13968, inlinedAt: !13976)
!13976 = distinct !DILocation(line: 1891, column: 4, scope: !13977)
!13977 = distinct !DILexicalBlock(scope: !13965, file: !2108, line: 1890, column: 23)
!13978 = !DILocation(line: 0, scope: !13882, inlinedAt: !13979)
!13979 = distinct !DILocation(line: 138, column: 2, scope: !13968, inlinedAt: !13976)
!13980 = !DILocation(line: 67, column: 15, scope: !13882, inlinedAt: !13979)
!13981 = !DILocation(line: 67, column: 33, scope: !13882, inlinedAt: !13979)
!13982 = !DILocation(line: 139, column: 15, scope: !13968, inlinedAt: !13976)
!13983 = !DILocation(line: 139, column: 25, scope: !13968, inlinedAt: !13976)
!13984 = !DILocation(line: 1894, column: 4, scope: !13977)
!13985 = !DILocation(line: 1895, column: 10, scope: !13977)
!13986 = !DILocation(line: 1896, column: 4, scope: !13977)
!13987 = !DILocation(line: 1898, column: 3, scope: !13977)
!13988 = !DILocation(line: 0, scope: !12073, inlinedAt: !13989)
!13989 = distinct !DILocation(line: 1887, column: 2, scope: !13963)
!13990 = !DILocation(line: 0, scope: !12081, inlinedAt: !13991)
!13991 = distinct !DILocation(line: 215, column: 2, scope: !12073, inlinedAt: !13989)
!13992 = !DILocation(line: 95, column: 2, scope: !12081, inlinedAt: !13991)
!13993 = !DILocation(line: 1901, column: 2, scope: !13942)
!13994 = distinct !DISubprogram(name: "z_sched_wait", scope: !2108, file: !2108, line: 1904, type: !13995, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !13998)
!13995 = !DISubroutineType(types: !13996)
!13996 = !{!103, !12049, !12038, !2034, !12837, !13997}
!13997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!13998 = !{!13999, !14000, !14001, !14002, !14003, !14004}
!13999 = !DILocalVariable(name: "lock", arg: 1, scope: !13994, file: !2108, line: 1904, type: !12049)
!14000 = !DILocalVariable(name: "key", arg: 2, scope: !13994, file: !2108, line: 1904, type: !12038)
!14001 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13994, file: !2108, line: 1905, type: !2034)
!14002 = !DILocalVariable(name: "timeout", arg: 4, scope: !13994, file: !2108, line: 1905, type: !12837)
!14003 = !DILocalVariable(name: "data", arg: 5, scope: !13994, file: !2108, line: 1905, type: !13997)
!14004 = !DILocalVariable(name: "ret", scope: !13994, file: !2108, line: 1907, type: !103)
!14005 = !DILocation(line: 0, scope: !13994)
!14006 = !DILocation(line: 1907, column: 12, scope: !13994)
!14007 = !DILocation(line: 1909, column: 11, scope: !14008)
!14008 = distinct !DILexicalBlock(scope: !13994, file: !2108, line: 1909, column: 6)
!14009 = !DILocation(line: 1909, column: 6, scope: !13994)
!14010 = !DILocation(line: 1910, column: 11, scope: !14011)
!14011 = distinct !DILexicalBlock(scope: !14008, file: !2108, line: 1909, column: 20)
!14012 = !DILocation(line: 1910, column: 26, scope: !14011)
!14013 = !DILocation(line: 1910, column: 9, scope: !14011)
!14014 = !DILocation(line: 1911, column: 2, scope: !14011)
!14015 = !DILocation(line: 1912, column: 2, scope: !13994)
!14016 = distinct !DISubprogram(name: "z_data_copy", scope: !14017, file: !14017, line: 22, type: !2913, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !322)
!14017 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14018 = !DILocation(line: 24, column: 2, scope: !14016)
!14019 = !DILocation(line: 27, column: 2, scope: !14016)
!14020 = !DILocation(line: 71, column: 1, scope: !14016)
!14021 = distinct !DISubprogram(name: "z_add_timeout", scope: !2145, file: !2145, line: 88, type: !14022, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14028)
!14022 = !DISubroutineType(types: !14023)
!14023 = !{null, !2118, !2137, !14024}
!14024 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1359, line: 67, baseType: !14025)
!14025 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1359, line: 65, size: 64, elements: !14026)
!14026 = !{!14027}
!14027 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14025, file: !1359, line: 66, baseType: !1358, size: 64)
!14028 = !{!14029, !14030, !14031, !14032, !14038, !14039, !14042, !14045}
!14029 = !DILocalVariable(name: "to", arg: 1, scope: !14021, file: !2145, line: 88, type: !2118)
!14030 = !DILocalVariable(name: "fn", arg: 2, scope: !14021, file: !2145, line: 88, type: !2137)
!14031 = !DILocalVariable(name: "timeout", arg: 3, scope: !14021, file: !2145, line: 89, type: !14024)
!14032 = !DILocalVariable(name: "__i", scope: !14033, file: !2145, line: 102, type: !14034)
!14033 = distinct !DILexicalBlock(scope: !14021, file: !2145, line: 102, column: 2)
!14034 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !14035)
!14035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !14036)
!14036 = !{!14037}
!14037 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14035, file: !321, line: 33, baseType: !103, size: 32)
!14038 = !DILocalVariable(name: "__key", scope: !14033, file: !2145, line: 102, type: !14034)
!14039 = !DILocalVariable(name: "t", scope: !14040, file: !2145, line: 103, type: !2118)
!14040 = distinct !DILexicalBlock(scope: !14041, file: !2145, line: 102, column: 24)
!14041 = distinct !DILexicalBlock(scope: !14033, file: !2145, line: 102, column: 2)
!14042 = !DILocalVariable(name: "ticks", scope: !14043, file: !2145, line: 107, type: !1358)
!14043 = distinct !DILexicalBlock(scope: !14044, file: !2145, line: 106, column: 39)
!14044 = distinct !DILexicalBlock(scope: !14040, file: !2145, line: 105, column: 7)
!14045 = !DILocalVariable(name: "next_time", scope: !14046, file: !2145, line: 137, type: !566)
!14046 = distinct !DILexicalBlock(scope: !14047, file: !2145, line: 127, column: 22)
!14047 = distinct !DILexicalBlock(scope: !14040, file: !2145, line: 127, column: 7)
!14048 = !DILocation(line: 0, scope: !14021)
!14049 = !DILocation(line: 91, column: 6, scope: !14050)
!14050 = distinct !DILexicalBlock(scope: !14021, file: !2145, line: 91, column: 6)
!14051 = !DILocation(line: 91, column: 6, scope: !14021)
!14052 = !DILocation(line: 100, column: 6, scope: !14021)
!14053 = !DILocation(line: 100, column: 9, scope: !14021)
!14054 = !DILocation(line: 0, scope: !14033)
!14055 = !DILocalVariable(name: "l", arg: 1, scope: !14056, file: !321, line: 136, type: !14059)
!14056 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !14057, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14060)
!14057 = !DISubroutineType(types: !14058)
!14058 = !{!14034, !14059}
!14059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 32)
!14060 = !{!14055, !14061}
!14061 = !DILocalVariable(name: "k", scope: !14056, file: !321, line: 139, type: !14034)
!14062 = !DILocation(line: 0, scope: !14056, inlinedAt: !14063)
!14063 = distinct !DILocation(line: 102, column: 2, scope: !14033)
!14064 = !DILocation(line: 55, column: 2, scope: !14065, inlinedAt: !14069)
!14065 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5209, file: !5209, line: 42, type: !5210, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14066)
!14066 = !{!14067, !14068}
!14067 = !DILocalVariable(name: "key", scope: !14065, file: !5209, line: 44, type: !32)
!14068 = !DILocalVariable(name: "tmp", scope: !14065, file: !5209, line: 53, type: !32)
!14069 = distinct !DILocation(line: 145, column: 10, scope: !14056, inlinedAt: !14063)
!14070 = !{i64 1953721}
!14071 = !DILocation(line: 0, scope: !14065, inlinedAt: !14069)
!14072 = !DILocation(line: 106, column: 33, scope: !14044)
!14073 = !DILocation(line: 105, column: 7, scope: !14040)
!14074 = !DILocation(line: 107, column: 50, scope: !14043)
!14075 = !DILocation(line: 107, column: 48, scope: !14043)
!14076 = !DILocation(line: 0, scope: !14043)
!14077 = !DILocation(line: 109, column: 17, scope: !14043)
!14078 = !DILocation(line: 110, column: 3, scope: !14043)
!14079 = !DILocation(line: 111, column: 31, scope: !14080)
!14080 = distinct !DILexicalBlock(scope: !14044, file: !2145, line: 110, column: 10)
!14081 = !DILocation(line: 111, column: 37, scope: !14080)
!14082 = !DILocation(line: 111, column: 35, scope: !14080)
!14083 = !DILocation(line: 0, scope: !14044)
!14084 = !DILocation(line: 109, column: 8, scope: !14043)
!14085 = !DILocation(line: 109, column: 15, scope: !14043)
!14086 = !DILocation(line: 114, column: 12, scope: !14087)
!14087 = distinct !DILexicalBlock(scope: !14040, file: !2145, line: 114, column: 3)
!14088 = !DILocation(line: 0, scope: !14040)
!14089 = !DILocation(line: 114, column: 3, scope: !14087)
!14090 = !DILocation(line: 115, column: 24, scope: !14091)
!14091 = distinct !DILexicalBlock(scope: !14092, file: !2145, line: 115, column: 8)
!14092 = distinct !DILexicalBlock(scope: !14093, file: !2145, line: 114, column: 45)
!14093 = distinct !DILexicalBlock(scope: !14087, file: !2145, line: 114, column: 3)
!14094 = !DILocation(line: 115, column: 11, scope: !14091)
!14095 = !DILocation(line: 115, column: 18, scope: !14091)
!14096 = !DILocation(line: 115, column: 8, scope: !14092)
!14097 = !DILocation(line: 116, column: 15, scope: !14098)
!14098 = distinct !DILexicalBlock(scope: !14091, file: !2145, line: 115, column: 32)
!14099 = !DILocation(line: 117, column: 26, scope: !14098)
!14100 = !DILocation(line: 117, column: 37, scope: !14098)
!14101 = !DILocation(line: 117, column: 5, scope: !14098)
!14102 = !DILocation(line: 123, column: 7, scope: !14040)
!14103 = !DILocation(line: 120, column: 15, scope: !14092)
!14104 = !DILocation(line: 114, column: 36, scope: !14093)
!14105 = distinct !{!14105, !14089, !14106}
!14106 = !DILocation(line: 121, column: 3, scope: !14087)
!14107 = !DILocation(line: 124, column: 41, scope: !14108)
!14108 = distinct !DILexicalBlock(scope: !14109, file: !2145, line: 123, column: 18)
!14109 = distinct !DILexicalBlock(scope: !14040, file: !2145, line: 123, column: 7)
!14110 = !DILocation(line: 124, column: 4, scope: !14108)
!14111 = !DILocation(line: 125, column: 3, scope: !14108)
!14112 = !DILocation(line: 127, column: 13, scope: !14047)
!14113 = !DILocation(line: 127, column: 10, scope: !14047)
!14114 = !DILocation(line: 127, column: 7, scope: !14040)
!14115 = !DILocation(line: 137, column: 24, scope: !14046)
!14116 = !DILocation(line: 0, scope: !14046)
!14117 = !DILocation(line: 139, column: 18, scope: !14118)
!14118 = distinct !DILexicalBlock(scope: !14046, file: !2145, line: 139, column: 8)
!14119 = !DILocation(line: 139, column: 23, scope: !14118)
!14120 = !DILocation(line: 141, column: 5, scope: !14121)
!14121 = distinct !DILexicalBlock(scope: !14118, file: !2145, line: 140, column: 48)
!14122 = !DILocation(line: 142, column: 4, scope: !14121)
!14123 = !DILocalVariable(name: "key", arg: 2, scope: !14124, file: !321, line: 190, type: !14034)
!14124 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !14125, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14127)
!14125 = !DISubroutineType(types: !14126)
!14126 = !{null, !14059, !14034}
!14127 = !{!14128, !14123}
!14128 = !DILocalVariable(name: "l", arg: 1, scope: !14124, file: !321, line: 189, type: !14059)
!14129 = !DILocation(line: 0, scope: !14124, inlinedAt: !14130)
!14130 = distinct !DILocation(line: 102, column: 2, scope: !14041)
!14131 = !DILocalVariable(name: "key", arg: 1, scope: !14132, file: !5209, line: 84, type: !32)
!14132 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5209, file: !5209, line: 84, type: !5220, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14133)
!14133 = !{!14131}
!14134 = !DILocation(line: 0, scope: !14132, inlinedAt: !14135)
!14135 = distinct !DILocation(line: 215, column: 2, scope: !14124, inlinedAt: !14130)
!14136 = !DILocation(line: 95, column: 2, scope: !14132, inlinedAt: !14135)
!14137 = !{i64 1954538}
!14138 = !DILocation(line: 148, column: 1, scope: !14021)
!14139 = distinct !DISubprogram(name: "elapsed", scope: !2145, file: !2145, line: 62, type: !14140, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !322)
!14140 = !DISubroutineType(types: !14141)
!14141 = !{!566}
!14142 = !DILocation(line: 64, column: 9, scope: !14139)
!14143 = !DILocation(line: 64, column: 28, scope: !14139)
!14144 = !DILocation(line: 64, column: 35, scope: !14139)
!14145 = !DILocation(line: 64, column: 2, scope: !14139)
!14146 = distinct !DISubprogram(name: "first", scope: !2145, file: !2145, line: 39, type: !14147, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14149)
!14147 = !DISubroutineType(types: !14148)
!14148 = !{!2118}
!14149 = !{!14150}
!14150 = !DILocalVariable(name: "t", scope: !14146, file: !2145, line: 41, type: !14151)
!14151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 32)
!14152 = !DILocation(line: 41, column: 19, scope: !14146)
!14153 = !DILocation(line: 0, scope: !14146)
!14154 = !DILocation(line: 43, column: 9, scope: !14146)
!14155 = !DILocation(line: 43, column: 2, scope: !14146)
!14156 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !221, file: !221, line: 443, type: !14157, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14159)
!14157 = !DISubroutineType(types: !14158)
!14158 = !{null, !14151, !14151}
!14159 = !{!14160, !14161, !14162}
!14160 = !DILocalVariable(name: "successor", arg: 1, scope: !14156, file: !221, line: 443, type: !14151)
!14161 = !DILocalVariable(name: "node", arg: 2, scope: !14156, file: !221, line: 443, type: !14151)
!14162 = !DILocalVariable(name: "prev", scope: !14156, file: !221, line: 445, type: !14163)
!14163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14151)
!14164 = !DILocation(line: 0, scope: !14156)
!14165 = !DILocation(line: 445, column: 39, scope: !14156)
!14166 = !DILocation(line: 447, column: 8, scope: !14156)
!14167 = !DILocation(line: 447, column: 13, scope: !14156)
!14168 = !DILocation(line: 448, column: 8, scope: !14156)
!14169 = !DILocation(line: 448, column: 13, scope: !14156)
!14170 = !DILocation(line: 449, column: 8, scope: !14156)
!14171 = !DILocation(line: 449, column: 13, scope: !14156)
!14172 = !DILocation(line: 450, column: 18, scope: !14156)
!14173 = !DILocation(line: 451, column: 1, scope: !14156)
!14174 = distinct !DISubprogram(name: "next", scope: !2145, file: !2145, line: 46, type: !14175, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14177)
!14175 = !DISubroutineType(types: !14176)
!14176 = !{!2118, !2118}
!14177 = !{!14178, !14179}
!14178 = !DILocalVariable(name: "t", arg: 1, scope: !14174, file: !2145, line: 46, type: !2118)
!14179 = !DILocalVariable(name: "n", scope: !14174, file: !2145, line: 48, type: !14151)
!14180 = !DILocation(line: 0, scope: !14174)
!14181 = !DILocation(line: 48, column: 58, scope: !14174)
!14182 = !DILocation(line: 48, column: 19, scope: !14174)
!14183 = !DILocation(line: 50, column: 9, scope: !14174)
!14184 = !DILocation(line: 50, column: 2, scope: !14174)
!14185 = distinct !DISubprogram(name: "sys_dlist_append", scope: !221, file: !221, line: 404, type: !14186, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14189)
!14186 = !DISubroutineType(types: !14187)
!14187 = !{null, !14188, !14151}
!14188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 32)
!14189 = !{!14190, !14191, !14192}
!14190 = !DILocalVariable(name: "list", arg: 1, scope: !14185, file: !221, line: 404, type: !14188)
!14191 = !DILocalVariable(name: "node", arg: 2, scope: !14185, file: !221, line: 404, type: !14151)
!14192 = !DILocalVariable(name: "tail", scope: !14185, file: !221, line: 406, type: !14163)
!14193 = !DILocation(line: 0, scope: !14185)
!14194 = !DILocation(line: 406, column: 34, scope: !14185)
!14195 = !DILocation(line: 408, column: 8, scope: !14185)
!14196 = !DILocation(line: 408, column: 13, scope: !14185)
!14197 = !DILocation(line: 409, column: 8, scope: !14185)
!14198 = !DILocation(line: 409, column: 13, scope: !14185)
!14199 = !DILocation(line: 411, column: 8, scope: !14185)
!14200 = !DILocation(line: 411, column: 13, scope: !14185)
!14201 = !DILocation(line: 412, column: 13, scope: !14185)
!14202 = !DILocation(line: 413, column: 1, scope: !14185)
!14203 = distinct !DISubprogram(name: "next_timeout", scope: !2145, file: !2145, line: 67, type: !14140, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14204)
!14204 = !{!14205, !14206, !14207}
!14205 = !DILocalVariable(name: "to", scope: !14203, file: !2145, line: 69, type: !2118)
!14206 = !DILocalVariable(name: "ticks_elapsed", scope: !14203, file: !2145, line: 70, type: !566)
!14207 = !DILocalVariable(name: "ret", scope: !14203, file: !2145, line: 71, type: !566)
!14208 = !DILocation(line: 69, column: 24, scope: !14203)
!14209 = !DILocation(line: 0, scope: !14203)
!14210 = !DILocation(line: 70, column: 26, scope: !14203)
!14211 = !DILocation(line: 73, column: 10, scope: !14212)
!14212 = distinct !DILexicalBlock(scope: !14203, file: !2145, line: 73, column: 6)
!14213 = !DILocation(line: 73, column: 19, scope: !14212)
!14214 = !DILocation(line: 74, column: 21, scope: !14212)
!14215 = !DILocation(line: 74, column: 30, scope: !14212)
!14216 = !DILocation(line: 74, column: 28, scope: !14212)
!14217 = !DILocation(line: 74, column: 45, scope: !14212)
!14218 = !DILocation(line: 73, column: 6, scope: !14203)
!14219 = !DILocation(line: 77, column: 9, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14212, file: !2145, line: 76, column: 9)
!14221 = !DILocation(line: 0, scope: !14212)
!14222 = !DILocation(line: 81, column: 20, scope: !14223)
!14223 = distinct !DILexicalBlock(scope: !14203, file: !2145, line: 81, column: 6)
!14224 = !DILocation(line: 81, column: 6, scope: !14223)
!14225 = !DILocation(line: 81, column: 32, scope: !14223)
!14226 = !DILocation(line: 85, column: 2, scope: !14203)
!14227 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !221, file: !221, line: 341, type: !14228, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14230)
!14228 = !DISubroutineType(types: !14229)
!14229 = !{!14151, !14188, !14151}
!14230 = !{!14231, !14232}
!14231 = !DILocalVariable(name: "list", arg: 1, scope: !14227, file: !221, line: 341, type: !14188)
!14232 = !DILocalVariable(name: "node", arg: 2, scope: !14227, file: !221, line: 342, type: !14151)
!14233 = !DILocation(line: 0, scope: !14227)
!14234 = !DILocation(line: 344, column: 15, scope: !14227)
!14235 = !DILocation(line: 344, column: 9, scope: !14227)
!14236 = !DILocation(line: 344, column: 26, scope: !14227)
!14237 = !DILocation(line: 344, column: 2, scope: !14227)
!14238 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !221, file: !221, line: 325, type: !14228, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14239)
!14239 = !{!14240, !14241}
!14240 = !DILocalVariable(name: "list", arg: 1, scope: !14238, file: !221, line: 325, type: !14188)
!14241 = !DILocalVariable(name: "node", arg: 2, scope: !14238, file: !221, line: 326, type: !14151)
!14242 = !DILocation(line: 0, scope: !14238)
!14243 = !DILocation(line: 328, column: 24, scope: !14238)
!14244 = !DILocation(line: 328, column: 15, scope: !14238)
!14245 = !DILocation(line: 328, column: 9, scope: !14238)
!14246 = !DILocation(line: 328, column: 45, scope: !14238)
!14247 = !DILocation(line: 328, column: 2, scope: !14238)
!14248 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !221, file: !221, line: 294, type: !14249, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14251)
!14249 = !DISubroutineType(types: !14250)
!14250 = !{!14151, !14188}
!14251 = !{!14252}
!14252 = !DILocalVariable(name: "list", arg: 1, scope: !14248, file: !221, line: 294, type: !14188)
!14253 = !DILocation(line: 0, scope: !14248)
!14254 = !DILocation(line: 296, column: 9, scope: !14248)
!14255 = !DILocation(line: 296, column: 2, scope: !14248)
!14256 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !221, file: !221, line: 266, type: !14257, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14259)
!14257 = !DISubroutineType(types: !14258)
!14258 = !{!157, !14188}
!14259 = !{!14260}
!14260 = !DILocalVariable(name: "list", arg: 1, scope: !14256, file: !221, line: 266, type: !14188)
!14261 = !DILocation(line: 0, scope: !14256)
!14262 = !DILocation(line: 268, column: 15, scope: !14256)
!14263 = !DILocation(line: 268, column: 20, scope: !14256)
!14264 = !DILocation(line: 268, column: 2, scope: !14256)
!14265 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2145, file: !2145, line: 150, type: !14266, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14268)
!14266 = !DISubroutineType(types: !14267)
!14267 = !{!103, !2118}
!14268 = !{!14269, !14270, !14271, !14273}
!14269 = !DILocalVariable(name: "to", arg: 1, scope: !14265, file: !2145, line: 150, type: !2118)
!14270 = !DILocalVariable(name: "ret", scope: !14265, file: !2145, line: 152, type: !103)
!14271 = !DILocalVariable(name: "__i", scope: !14272, file: !2145, line: 154, type: !14034)
!14272 = distinct !DILexicalBlock(scope: !14265, file: !2145, line: 154, column: 2)
!14273 = !DILocalVariable(name: "__key", scope: !14272, file: !2145, line: 154, type: !14034)
!14274 = !DILocation(line: 0, scope: !14265)
!14275 = !DILocation(line: 0, scope: !14272)
!14276 = !DILocation(line: 0, scope: !14056, inlinedAt: !14277)
!14277 = distinct !DILocation(line: 154, column: 2, scope: !14272)
!14278 = !DILocation(line: 55, column: 2, scope: !14065, inlinedAt: !14279)
!14279 = distinct !DILocation(line: 145, column: 10, scope: !14056, inlinedAt: !14277)
!14280 = !DILocation(line: 0, scope: !14065, inlinedAt: !14279)
!14281 = !DILocation(line: 155, column: 7, scope: !14282)
!14282 = distinct !DILexicalBlock(scope: !14283, file: !2145, line: 155, column: 7)
!14283 = distinct !DILexicalBlock(scope: !14284, file: !2145, line: 154, column: 24)
!14284 = distinct !DILexicalBlock(scope: !14272, file: !2145, line: 154, column: 2)
!14285 = !DILocation(line: 155, column: 7, scope: !14283)
!14286 = !DILocation(line: 156, column: 4, scope: !14287)
!14287 = distinct !DILexicalBlock(scope: !14282, file: !2145, line: 155, column: 39)
!14288 = !DILocation(line: 158, column: 3, scope: !14287)
!14289 = !DILocation(line: 0, scope: !14124, inlinedAt: !14290)
!14290 = distinct !DILocation(line: 154, column: 2, scope: !14284)
!14291 = !DILocation(line: 0, scope: !14132, inlinedAt: !14292)
!14292 = distinct !DILocation(line: 215, column: 2, scope: !14124, inlinedAt: !14290)
!14293 = !DILocation(line: 95, column: 2, scope: !14132, inlinedAt: !14292)
!14294 = !DILocation(line: 161, column: 2, scope: !14265)
!14295 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !221, file: !221, line: 225, type: !14296, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14300)
!14296 = !DISubroutineType(types: !14297)
!14297 = !{!157, !14298}
!14298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14299, size: 32)
!14299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2122)
!14300 = !{!14301}
!14301 = !DILocalVariable(name: "node", arg: 1, scope: !14295, file: !221, line: 225, type: !14298)
!14302 = !DILocation(line: 0, scope: !14295)
!14303 = !DILocation(line: 227, column: 15, scope: !14295)
!14304 = !DILocation(line: 227, column: 20, scope: !14295)
!14305 = !DILocation(line: 227, column: 2, scope: !14295)
!14306 = distinct !DISubprogram(name: "remove_timeout", scope: !2145, file: !2145, line: 53, type: !2139, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14307)
!14307 = !{!14308}
!14308 = !DILocalVariable(name: "t", arg: 1, scope: !14306, file: !2145, line: 53, type: !2118)
!14309 = !DILocation(line: 0, scope: !14306)
!14310 = !DILocation(line: 55, column: 6, scope: !14311)
!14311 = distinct !DILexicalBlock(scope: !14306, file: !2145, line: 55, column: 6)
!14312 = !DILocation(line: 55, column: 14, scope: !14311)
!14313 = !DILocation(line: 55, column: 6, scope: !14306)
!14314 = !DILocation(line: 56, column: 25, scope: !14315)
!14315 = distinct !DILexicalBlock(scope: !14311, file: !2145, line: 55, column: 23)
!14316 = !DILocation(line: 56, column: 12, scope: !14315)
!14317 = !DILocation(line: 56, column: 19, scope: !14315)
!14318 = !DILocation(line: 57, column: 2, scope: !14315)
!14319 = !DILocation(line: 59, column: 23, scope: !14306)
!14320 = !DILocation(line: 59, column: 2, scope: !14306)
!14321 = !DILocation(line: 60, column: 1, scope: !14306)
!14322 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !221, file: !221, line: 496, type: !14323, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14325)
!14323 = !DISubroutineType(types: !14324)
!14324 = !{null, !14151}
!14325 = !{!14326, !14327, !14328}
!14326 = !DILocalVariable(name: "node", arg: 1, scope: !14322, file: !221, line: 496, type: !14151)
!14327 = !DILocalVariable(name: "prev", scope: !14322, file: !221, line: 498, type: !14163)
!14328 = !DILocalVariable(name: "next", scope: !14322, file: !221, line: 499, type: !14163)
!14329 = !DILocation(line: 0, scope: !14322)
!14330 = !DILocation(line: 498, column: 34, scope: !14322)
!14331 = !DILocation(line: 499, column: 34, scope: !14322)
!14332 = !DILocation(line: 501, column: 8, scope: !14322)
!14333 = !DILocation(line: 501, column: 13, scope: !14322)
!14334 = !DILocation(line: 502, column: 8, scope: !14322)
!14335 = !DILocation(line: 502, column: 13, scope: !14322)
!14336 = !DILocation(line: 503, column: 2, scope: !14322)
!14337 = !DILocation(line: 504, column: 1, scope: !14322)
!14338 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !14323, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14339)
!14339 = !{!14340}
!14340 = !DILocalVariable(name: "node", arg: 1, scope: !14338, file: !221, line: 211, type: !14151)
!14341 = !DILocation(line: 0, scope: !14338)
!14342 = !DILocation(line: 213, column: 8, scope: !14338)
!14343 = !DILocation(line: 213, column: 13, scope: !14338)
!14344 = !DILocation(line: 214, column: 8, scope: !14338)
!14345 = !DILocation(line: 214, column: 13, scope: !14338)
!14346 = !DILocation(line: 215, column: 1, scope: !14338)
!14347 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2145, file: !2145, line: 183, type: !14348, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14352)
!14348 = !DISubroutineType(types: !14349)
!14349 = !{!1358, !14350}
!14350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14351, size: 32)
!14351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2119)
!14352 = !{!14353, !14354, !14355, !14357}
!14353 = !DILocalVariable(name: "timeout", arg: 1, scope: !14347, file: !2145, line: 183, type: !14350)
!14354 = !DILocalVariable(name: "ticks", scope: !14347, file: !2145, line: 185, type: !1358)
!14355 = !DILocalVariable(name: "__i", scope: !14356, file: !2145, line: 187, type: !14034)
!14356 = distinct !DILexicalBlock(scope: !14347, file: !2145, line: 187, column: 2)
!14357 = !DILocalVariable(name: "__key", scope: !14356, file: !2145, line: 187, type: !14034)
!14358 = !DILocation(line: 0, scope: !14347)
!14359 = !DILocation(line: 0, scope: !14356)
!14360 = !DILocation(line: 0, scope: !14056, inlinedAt: !14361)
!14361 = distinct !DILocation(line: 187, column: 2, scope: !14356)
!14362 = !DILocation(line: 55, column: 2, scope: !14065, inlinedAt: !14363)
!14363 = distinct !DILocation(line: 145, column: 10, scope: !14056, inlinedAt: !14361)
!14364 = !DILocation(line: 0, scope: !14065, inlinedAt: !14363)
!14365 = !DILocation(line: 188, column: 11, scope: !14366)
!14366 = distinct !DILexicalBlock(scope: !14367, file: !2145, line: 187, column: 24)
!14367 = distinct !DILexicalBlock(scope: !14356, file: !2145, line: 187, column: 2)
!14368 = !DILocation(line: 0, scope: !14124, inlinedAt: !14369)
!14369 = distinct !DILocation(line: 187, column: 2, scope: !14367)
!14370 = !DILocation(line: 0, scope: !14132, inlinedAt: !14371)
!14371 = distinct !DILocation(line: 215, column: 2, scope: !14124, inlinedAt: !14369)
!14372 = !DILocation(line: 95, column: 2, scope: !14132, inlinedAt: !14371)
!14373 = !DILocation(line: 191, column: 2, scope: !14347)
!14374 = distinct !DISubprogram(name: "timeout_rem", scope: !2145, file: !2145, line: 165, type: !14348, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14375)
!14375 = !{!14376, !14377, !14378}
!14376 = !DILocalVariable(name: "timeout", arg: 1, scope: !14374, file: !2145, line: 165, type: !14350)
!14377 = !DILocalVariable(name: "ticks", scope: !14374, file: !2145, line: 167, type: !1358)
!14378 = !DILocalVariable(name: "t", scope: !14379, file: !2145, line: 173, type: !2118)
!14379 = distinct !DILexicalBlock(scope: !14374, file: !2145, line: 173, column: 2)
!14380 = !DILocation(line: 0, scope: !14374)
!14381 = !DILocation(line: 169, column: 6, scope: !14382)
!14382 = distinct !DILexicalBlock(scope: !14374, file: !2145, line: 169, column: 6)
!14383 = !DILocation(line: 169, column: 6, scope: !14374)
!14384 = !DILocation(line: 173, column: 28, scope: !14379)
!14385 = !DILocation(line: 0, scope: !14379)
!14386 = !DILocation(line: 173, column: 39, scope: !14387)
!14387 = distinct !DILexicalBlock(scope: !14379, file: !2145, line: 173, column: 2)
!14388 = !DILocation(line: 173, column: 2, scope: !14379)
!14389 = !DILocation(line: 174, column: 15, scope: !14390)
!14390 = distinct !DILexicalBlock(scope: !14387, file: !2145, line: 173, column: 61)
!14391 = !DILocation(line: 174, column: 9, scope: !14390)
!14392 = !DILocation(line: 175, column: 15, scope: !14393)
!14393 = distinct !DILexicalBlock(scope: !14390, file: !2145, line: 175, column: 7)
!14394 = !DILocation(line: 175, column: 7, scope: !14390)
!14395 = !DILocation(line: 173, column: 52, scope: !14387)
!14396 = distinct !{!14396, !14388, !14397}
!14397 = !DILocation(line: 178, column: 2, scope: !14379)
!14398 = !DILocation(line: 180, column: 17, scope: !14374)
!14399 = !DILocation(line: 180, column: 15, scope: !14374)
!14400 = !DILocation(line: 180, column: 2, scope: !14374)
!14401 = !DILocation(line: 181, column: 1, scope: !14374)
!14402 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11712, file: !11712, line: 35, type: !14403, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14405)
!14403 = !DISubroutineType(types: !14404)
!14404 = !{!157, !14350}
!14405 = !{!14406}
!14406 = !DILocalVariable(name: "to", arg: 1, scope: !14402, file: !11712, line: 35, type: !14350)
!14407 = !DILocation(line: 0, scope: !14402)
!14408 = !DILocation(line: 37, column: 35, scope: !14402)
!14409 = !DILocation(line: 37, column: 10, scope: !14402)
!14410 = !DILocation(line: 37, column: 9, scope: !14402)
!14411 = !DILocation(line: 37, column: 2, scope: !14402)
!14412 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2145, file: !2145, line: 194, type: !14348, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14413)
!14413 = !{!14414, !14415, !14416, !14418}
!14414 = !DILocalVariable(name: "timeout", arg: 1, scope: !14412, file: !2145, line: 194, type: !14350)
!14415 = !DILocalVariable(name: "ticks", scope: !14412, file: !2145, line: 196, type: !1358)
!14416 = !DILocalVariable(name: "__i", scope: !14417, file: !2145, line: 198, type: !14034)
!14417 = distinct !DILexicalBlock(scope: !14412, file: !2145, line: 198, column: 2)
!14418 = !DILocalVariable(name: "__key", scope: !14417, file: !2145, line: 198, type: !14034)
!14419 = !DILocation(line: 0, scope: !14412)
!14420 = !DILocation(line: 0, scope: !14417)
!14421 = !DILocation(line: 0, scope: !14056, inlinedAt: !14422)
!14422 = distinct !DILocation(line: 198, column: 2, scope: !14417)
!14423 = !DILocation(line: 55, column: 2, scope: !14065, inlinedAt: !14424)
!14424 = distinct !DILocation(line: 145, column: 10, scope: !14056, inlinedAt: !14422)
!14425 = !DILocation(line: 0, scope: !14065, inlinedAt: !14424)
!14426 = !DILocation(line: 199, column: 11, scope: !14427)
!14427 = distinct !DILexicalBlock(scope: !14428, file: !2145, line: 198, column: 24)
!14428 = distinct !DILexicalBlock(scope: !14417, file: !2145, line: 198, column: 2)
!14429 = !DILocation(line: 199, column: 23, scope: !14427)
!14430 = !DILocation(line: 0, scope: !14124, inlinedAt: !14431)
!14431 = distinct !DILocation(line: 198, column: 2, scope: !14428)
!14432 = !DILocation(line: 0, scope: !14132, inlinedAt: !14433)
!14433 = distinct !DILocation(line: 215, column: 2, scope: !14124, inlinedAt: !14431)
!14434 = !DILocation(line: 95, column: 2, scope: !14132, inlinedAt: !14433)
!14435 = !DILocation(line: 199, column: 21, scope: !14427)
!14436 = !DILocation(line: 202, column: 2, scope: !14412)
!14437 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2145, file: !2145, line: 205, type: !14140, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14438)
!14438 = !{!14439, !14440, !14442}
!14439 = !DILocalVariable(name: "ret", scope: !14437, file: !2145, line: 207, type: !566)
!14440 = !DILocalVariable(name: "__i", scope: !14441, file: !2145, line: 209, type: !14034)
!14441 = distinct !DILexicalBlock(scope: !14437, file: !2145, line: 209, column: 2)
!14442 = !DILocalVariable(name: "__key", scope: !14441, file: !2145, line: 209, type: !14034)
!14443 = !DILocation(line: 0, scope: !14437)
!14444 = !DILocation(line: 0, scope: !14441)
!14445 = !DILocation(line: 0, scope: !14056, inlinedAt: !14446)
!14446 = distinct !DILocation(line: 209, column: 2, scope: !14441)
!14447 = !DILocation(line: 55, column: 2, scope: !14065, inlinedAt: !14448)
!14448 = distinct !DILocation(line: 145, column: 10, scope: !14056, inlinedAt: !14446)
!14449 = !DILocation(line: 0, scope: !14065, inlinedAt: !14448)
!14450 = !DILocation(line: 210, column: 9, scope: !14451)
!14451 = distinct !DILexicalBlock(scope: !14452, file: !2145, line: 209, column: 24)
!14452 = distinct !DILexicalBlock(scope: !14441, file: !2145, line: 209, column: 2)
!14453 = !DILocation(line: 0, scope: !14124, inlinedAt: !14454)
!14454 = distinct !DILocation(line: 209, column: 2, scope: !14452)
!14455 = !DILocation(line: 0, scope: !14132, inlinedAt: !14456)
!14456 = distinct !DILocation(line: 215, column: 2, scope: !14124, inlinedAt: !14454)
!14457 = !DILocation(line: 95, column: 2, scope: !14132, inlinedAt: !14456)
!14458 = !DILocation(line: 212, column: 2, scope: !14437)
!14459 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2145, file: !2145, line: 215, type: !9322, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14460)
!14460 = !{!14461, !14462, !14463, !14465, !14466, !14469, !14470}
!14461 = !DILocalVariable(name: "ticks", arg: 1, scope: !14459, file: !2145, line: 215, type: !566)
!14462 = !DILocalVariable(name: "is_idle", arg: 2, scope: !14459, file: !2145, line: 215, type: !157)
!14463 = !DILocalVariable(name: "__i", scope: !14464, file: !2145, line: 217, type: !14034)
!14464 = distinct !DILexicalBlock(scope: !14459, file: !2145, line: 217, column: 2)
!14465 = !DILocalVariable(name: "__key", scope: !14464, file: !2145, line: 217, type: !14034)
!14466 = !DILocalVariable(name: "next_to", scope: !14467, file: !2145, line: 218, type: !103)
!14467 = distinct !DILexicalBlock(scope: !14468, file: !2145, line: 217, column: 24)
!14468 = distinct !DILexicalBlock(scope: !14464, file: !2145, line: 217, column: 2)
!14469 = !DILocalVariable(name: "sooner", scope: !14467, file: !2145, line: 219, type: !157)
!14470 = !DILocalVariable(name: "imminent", scope: !14467, file: !2145, line: 221, type: !157)
!14471 = !DILocation(line: 0, scope: !14459)
!14472 = !DILocation(line: 0, scope: !14464)
!14473 = !DILocation(line: 0, scope: !14056, inlinedAt: !14474)
!14474 = distinct !DILocation(line: 217, column: 2, scope: !14464)
!14475 = !DILocation(line: 55, column: 2, scope: !14065, inlinedAt: !14476)
!14476 = distinct !DILocation(line: 145, column: 10, scope: !14056, inlinedAt: !14474)
!14477 = !DILocation(line: 0, scope: !14065, inlinedAt: !14476)
!14478 = !DILocation(line: 218, column: 17, scope: !14467)
!14479 = !DILocation(line: 0, scope: !14467)
!14480 = !DILocation(line: 221, column: 27, scope: !14467)
!14481 = !DILocation(line: 233, column: 17, scope: !14482)
!14482 = distinct !DILexicalBlock(scope: !14467, file: !2145, line: 233, column: 7)
!14483 = !DILocation(line: 234, column: 26, scope: !14484)
!14484 = distinct !DILexicalBlock(scope: !14482, file: !2145, line: 233, column: 56)
!14485 = !DILocation(line: 234, column: 4, scope: !14484)
!14486 = !DILocation(line: 235, column: 3, scope: !14484)
!14487 = !DILocation(line: 0, scope: !14124, inlinedAt: !14488)
!14488 = distinct !DILocation(line: 217, column: 2, scope: !14468)
!14489 = !DILocation(line: 0, scope: !14132, inlinedAt: !14490)
!14490 = distinct !DILocation(line: 215, column: 2, scope: !14124, inlinedAt: !14488)
!14491 = !DILocation(line: 95, column: 2, scope: !14132, inlinedAt: !14490)
!14492 = !DILocation(line: 237, column: 1, scope: !14459)
!14493 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2145, file: !2145, line: 239, type: !14494, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14496)
!14494 = !DISubroutineType(types: !14495)
!14495 = !{null, !566}
!14496 = !{!14497, !14498, !14499, !14501}
!14497 = !DILocalVariable(name: "ticks", arg: 1, scope: !14493, file: !2145, line: 239, type: !566)
!14498 = !DILocalVariable(name: "key", scope: !14493, file: !2145, line: 245, type: !14034)
!14499 = !DILocalVariable(name: "t", scope: !14500, file: !2145, line: 262, type: !2118)
!14500 = distinct !DILexicalBlock(scope: !14493, file: !2145, line: 261, column: 67)
!14501 = !DILocalVariable(name: "dt", scope: !14500, file: !2145, line: 263, type: !103)
!14502 = !DILocation(line: 0, scope: !14493)
!14503 = !DILocation(line: 242, column: 2, scope: !14493)
!14504 = !DILocation(line: 0, scope: !14056, inlinedAt: !14505)
!14505 = distinct !DILocation(line: 245, column: 25, scope: !14493)
!14506 = !DILocation(line: 55, column: 2, scope: !14065, inlinedAt: !14507)
!14507 = distinct !DILocation(line: 145, column: 10, scope: !14056, inlinedAt: !14505)
!14508 = !DILocation(line: 0, scope: !14065, inlinedAt: !14507)
!14509 = !DILocation(line: 261, column: 9, scope: !14493)
!14510 = !DILocation(line: 261, column: 17, scope: !14493)
!14511 = !DILocation(line: 261, column: 25, scope: !14493)
!14512 = !DILocation(line: 261, column: 37, scope: !14493)
!14513 = !DILocation(line: 261, column: 47, scope: !14493)
!14514 = !DILocation(line: 261, column: 44, scope: !14493)
!14515 = !DILocation(line: 261, column: 2, scope: !14493)
!14516 = !DILocation(line: 0, scope: !14500)
!14517 = !DILocation(line: 263, column: 12, scope: !14500)
!14518 = !DILocation(line: 265, column: 16, scope: !14500)
!14519 = !DILocation(line: 265, column: 13, scope: !14500)
!14520 = !DILocation(line: 266, column: 13, scope: !14500)
!14521 = !DILocation(line: 267, column: 3, scope: !14500)
!14522 = !DILocation(line: 0, scope: !14124, inlinedAt: !14523)
!14523 = distinct !DILocation(line: 269, column: 3, scope: !14500)
!14524 = !DILocation(line: 0, scope: !14132, inlinedAt: !14525)
!14525 = distinct !DILocation(line: 215, column: 2, scope: !14124, inlinedAt: !14523)
!14526 = !DILocation(line: 95, column: 2, scope: !14132, inlinedAt: !14525)
!14527 = !DILocation(line: 270, column: 6, scope: !14500)
!14528 = !DILocation(line: 270, column: 3, scope: !14500)
!14529 = !DILocation(line: 0, scope: !14056, inlinedAt: !14530)
!14530 = distinct !DILocation(line: 271, column: 9, scope: !14500)
!14531 = !DILocation(line: 55, column: 2, scope: !14065, inlinedAt: !14532)
!14532 = distinct !DILocation(line: 145, column: 10, scope: !14056, inlinedAt: !14530)
!14533 = !DILocation(line: 0, scope: !14065, inlinedAt: !14532)
!14534 = !DILocation(line: 272, column: 22, scope: !14500)
!14535 = distinct !{!14535, !14515, !14536}
!14536 = !DILocation(line: 273, column: 2, scope: !14493)
!14537 = !DILocation(line: 276, column: 19, scope: !14538)
!14538 = distinct !DILexicalBlock(scope: !14539, file: !2145, line: 275, column: 23)
!14539 = distinct !DILexicalBlock(scope: !14493, file: !2145, line: 275, column: 6)
!14540 = !DILocation(line: 277, column: 2, scope: !14538)
!14541 = !DILocation(line: 279, column: 15, scope: !14493)
!14542 = !DILocation(line: 279, column: 12, scope: !14493)
!14543 = !DILocation(line: 280, column: 21, scope: !14493)
!14544 = !DILocation(line: 282, column: 24, scope: !14493)
!14545 = !DILocation(line: 282, column: 2, scope: !14493)
!14546 = !DILocation(line: 0, scope: !14124, inlinedAt: !14547)
!14547 = distinct !DILocation(line: 284, column: 2, scope: !14493)
!14548 = !DILocation(line: 0, scope: !14132, inlinedAt: !14549)
!14549 = distinct !DILocation(line: 215, column: 2, scope: !14124, inlinedAt: !14547)
!14550 = !DILocation(line: 95, column: 2, scope: !14132, inlinedAt: !14549)
!14551 = !DILocation(line: 285, column: 1, scope: !14493)
!14552 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2145, file: !2145, line: 287, type: !14553, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14555)
!14553 = !DISubroutineType(types: !14554)
!14554 = !{!280}
!14555 = !{!14556, !14557, !14559}
!14556 = !DILocalVariable(name: "t", scope: !14552, file: !2145, line: 289, type: !1270)
!14557 = !DILocalVariable(name: "__i", scope: !14558, file: !2145, line: 291, type: !14034)
!14558 = distinct !DILexicalBlock(scope: !14552, file: !2145, line: 291, column: 2)
!14559 = !DILocalVariable(name: "__key", scope: !14558, file: !2145, line: 291, type: !14034)
!14560 = !DILocation(line: 0, scope: !14552)
!14561 = !DILocation(line: 0, scope: !14558)
!14562 = !DILocation(line: 0, scope: !14056, inlinedAt: !14563)
!14563 = distinct !DILocation(line: 291, column: 2, scope: !14558)
!14564 = !DILocation(line: 55, column: 2, scope: !14065, inlinedAt: !14565)
!14565 = distinct !DILocation(line: 145, column: 10, scope: !14056, inlinedAt: !14563)
!14566 = !DILocation(line: 0, scope: !14065, inlinedAt: !14565)
!14567 = !DILocation(line: 292, column: 7, scope: !14568)
!14568 = distinct !DILexicalBlock(scope: !14569, file: !2145, line: 291, column: 24)
!14569 = distinct !DILexicalBlock(scope: !14558, file: !2145, line: 291, column: 2)
!14570 = !DILocation(line: 292, column: 19, scope: !14568)
!14571 = !DILocation(line: 0, scope: !14124, inlinedAt: !14572)
!14572 = distinct !DILocation(line: 291, column: 2, scope: !14569)
!14573 = !DILocation(line: 0, scope: !14132, inlinedAt: !14574)
!14574 = distinct !DILocation(line: 215, column: 2, scope: !14124, inlinedAt: !14572)
!14575 = !DILocation(line: 95, column: 2, scope: !14132, inlinedAt: !14574)
!14576 = !DILocation(line: 292, column: 17, scope: !14568)
!14577 = !DILocation(line: 294, column: 2, scope: !14552)
!14578 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2145, file: !2145, line: 297, type: !5464, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !322)
!14579 = !DILocation(line: 300, column: 19, scope: !14578)
!14580 = !DILocation(line: 300, column: 9, scope: !14578)
!14581 = !DILocation(line: 300, column: 2, scope: !14578)
!14582 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2145, file: !2145, line: 306, type: !14553, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !322)
!14583 = !DILocation(line: 308, column: 9, scope: !14582)
!14584 = !DILocation(line: 308, column: 2, scope: !14582)
!14585 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2145, file: !2145, line: 319, type: !5474, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14586)
!14586 = !{!14587, !14588, !14589, !14590}
!14587 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !14585, file: !2145, line: 319, type: !121)
!14588 = !DILocalVariable(name: "start_cycles", scope: !14585, file: !2145, line: 328, type: !121)
!14589 = !DILocalVariable(name: "cycles_to_wait", scope: !14585, file: !2145, line: 331, type: !121)
!14590 = !DILocalVariable(name: "current_cycles", scope: !14591, file: !2145, line: 338, type: !121)
!14591 = distinct !DILexicalBlock(scope: !14592, file: !2145, line: 337, column: 11)
!14592 = distinct !DILexicalBlock(scope: !14593, file: !2145, line: 337, column: 2)
!14593 = distinct !DILexicalBlock(scope: !14585, file: !2145, line: 337, column: 2)
!14594 = !DILocation(line: 0, scope: !14585)
!14595 = !DILocation(line: 322, column: 19, scope: !14596)
!14596 = distinct !DILexicalBlock(scope: !14585, file: !2145, line: 322, column: 6)
!14597 = !DILocation(line: 322, column: 6, scope: !14585)
!14598 = !DILocation(line: 328, column: 26, scope: !14585)
!14599 = !DILocation(line: 333, column: 43, scope: !14585)
!14600 = !DILocation(line: 337, column: 2, scope: !14585)
!14601 = !DILocation(line: 338, column: 29, scope: !14591)
!14602 = !DILocation(line: 0, scope: !14591)
!14603 = !DILocation(line: 341, column: 23, scope: !14604)
!14604 = distinct !DILexicalBlock(scope: !14591, file: !2145, line: 341, column: 7)
!14605 = !DILocation(line: 341, column: 39, scope: !14604)
!14606 = !DILocation(line: 349, column: 1, scope: !14585)
!14607 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !307, file: !307, line: 1675, type: !5464, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !322)
!14608 = !DILocation(line: 1677, column: 9, scope: !14607)
!14609 = !DILocation(line: 1677, column: 2, scope: !14607)
!14610 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !14611, file: !14611, line: 24, type: !5464, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !322)
!14611 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14612 = !DILocation(line: 26, column: 9, scope: !14610)
!14613 = !DILocation(line: 26, column: 2, scope: !14610)
!14614 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2145, file: !2145, line: 364, type: !14615, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2115, retainedNodes: !14617)
!14615 = !DISubroutineType(types: !14616)
!14616 = !{!1270, !14024}
!14617 = !{!14618, !14619}
!14618 = !DILocalVariable(name: "timeout", arg: 1, scope: !14614, file: !2145, line: 364, type: !14024)
!14619 = !DILocalVariable(name: "dt", scope: !14614, file: !2145, line: 366, type: !1358)
!14620 = !DILocation(line: 0, scope: !14614)
!14621 = !DILocation(line: 368, column: 6, scope: !14614)
!14622 = !DILocation(line: 371, column: 10, scope: !14623)
!14623 = distinct !DILexicalBlock(scope: !14624, file: !2145, line: 370, column: 47)
!14624 = distinct !DILexicalBlock(scope: !14625, file: !2145, line: 370, column: 13)
!14625 = distinct !DILexicalBlock(scope: !14614, file: !2145, line: 368, column: 6)
!14626 = !DILocation(line: 371, column: 3, scope: !14623)
!14627 = !DILocation(line: 376, column: 58, scope: !14628)
!14628 = distinct !DILexicalBlock(scope: !14629, file: !2145, line: 376, column: 7)
!14629 = distinct !DILexicalBlock(scope: !14624, file: !2145, line: 372, column: 9)
!14630 = !DILocation(line: 376, column: 7, scope: !14629)
!14631 = !DILocation(line: 376, column: 43, scope: !14628)
!14632 = !DILocation(line: 377, column: 4, scope: !14633)
!14633 = distinct !DILexicalBlock(scope: !14628, file: !2145, line: 376, column: 64)
!14634 = !DILocation(line: 379, column: 10, scope: !14629)
!14635 = !DILocation(line: 379, column: 33, scope: !14629)
!14636 = !DILocation(line: 379, column: 31, scope: !14629)
!14637 = !DILocation(line: 379, column: 3, scope: !14629)
!14638 = !DILocation(line: 0, scope: !14625)
!14639 = !DILocation(line: 381, column: 1, scope: !14614)
!14640 = distinct !DISubprogram(name: "boot_banner", scope: !14641, file: !14641, line: 26, type: !2913, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2899, retainedNodes: !322)
!14641 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14642 = !DILocation(line: 34, column: 2, scope: !14640)
!14643 = !DILocation(line: 36, column: 1, scope: !14640)
