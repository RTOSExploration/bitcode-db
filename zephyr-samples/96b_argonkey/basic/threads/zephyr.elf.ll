; ModuleID = 'build/96b_argonkey/threads/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct._sfnode, %struct._wait_q_t }
%struct._sflist = type { %struct._sfnode*, %struct._sfnode* }
%struct._sfnode = type { i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.led = type { %struct.gpio_dt_spec, i8 }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct._sfnode }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct._sfnode] }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.z_arm_mpu_partition = type { i32, i32, %struct._sfnode }
%struct.arm_mpu_region = type { i32, i8*, %struct._sfnode }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct._sfnode, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct._sfnode, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.printk_data_t = type { i8*, i32, i32 }
%struct.__va_list = type { i8* }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct._sfnode, %struct._sfnode }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct._sfnode, %struct._sfnode, %struct._sfnode, %struct._sfnode, %struct._sfnode, %struct._sfnode, %struct._sfnode, i32 }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238136 to i8*), void (i8*)* inttoptr (i32 134236597 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238136 to i8*), void (i8*)* inttoptr (i32 134236577 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238136 to i8*), void (i8*)* inttoptr (i32 134236567 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238136 to i8*), void (i8*)* inttoptr (i32 134236667 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238136 to i8*), void (i8*)* inttoptr (i32 134236657 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238136 to i8*), void (i8*)* inttoptr (i32 134236647 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238136 to i8*), void (i8*)* inttoptr (i32 134236637 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238136 to i8*), void (i8*)* inttoptr (i32 134236627 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238136 to i8*), void (i8*)* inttoptr (i32 134236617 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238136 to i8*), void (i8*)* inttoptr (i32 134236607 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238136 to i8*), void (i8*)* inttoptr (i32 134236587 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [43 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_blink0_id to i8*), i8* bitcast (%struct._static_thread_data* @_k_thread_data_blink1_id to i8*), i8* bitcast (%struct._static_thread_data* @_k_thread_data_uart_out_id to i8*), i8* bitcast (%struct.k_fifo* @printk_fifo to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_35 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_77 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_78 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_79 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_77 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_78 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_79 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.k_heap* @_system_heap to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@printk_fifo = dso_local global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct._sfnode zeroinitializer, %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @printk_fifo to i8*), i64 12) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @printk_fifo to i8*), i64 12) to %struct._dnode*) } } } } }, section "._k_queue.static.printk_fifo", align 4, !dbg !25
@.str = private unnamed_addr constant [31 x i8] c"Error: %s device is not ready\0A\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"Error %d: failed to configure pin %d (LED '%d')\0A\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"mem_ptr != 0\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"CMAKE_SOURCE_DIR/src/main.c\00", align 1
@led0 = internal constant %struct.led { %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_22, i8 13, i16 0 }, i8 0 }, align 4, !dbg !395
@led1 = internal constant %struct.led { %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_24, i8 2, i16 0 }, i8 1 }, align 4, !dbg !408
@.str.5 = private unnamed_addr constant [27 x i8] c"Toggled led%d; counter=%d\0A\00", align 1
@_k_thread_obj_blink0_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !385
@_k_thread_stack_blink0_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !380
@.str.6 = private unnamed_addr constant [10 x i8] c"blink0_id\00", align 1
@_k_thread_data_blink0_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_blink0_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_blink0_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @blink0 to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 7, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_blink0_id", align 4, !dbg !216
@blink0_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_blink0_id, align 4, !dbg !368
@_k_thread_obj_blink1_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !389
@_k_thread_stack_blink1_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.1", align 64, !dbg !387
@.str.7 = private unnamed_addr constant [10 x i8] c"blink1_id\00", align 1
@_k_thread_data_blink1_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_blink1_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_blink1_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @blink1 to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 7, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_blink1_id", align 4, !dbg !372
@blink1_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_blink1_id, align 4, !dbg !374
@_k_thread_obj_uart_out_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !393
@_k_thread_stack_uart_out_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.2", align 64, !dbg !391
@.str.8 = private unnamed_addr constant [12 x i8] c"uart_out_id\00", align 1
@_k_thread_data_uart_out_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_uart_out_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_uart_out_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @uart_out to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 7, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_uart_out_id", align 4, !dbg !376
@uart_out_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_uart_out_id, align 4, !dbg !378
@.str.10 = private unnamed_addr constant [42 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio.h\00", align 1
@.str.18 = private unnamed_addr constant [62 x i8] c"(cfg->port_pin_mask & (gpio_port_pins_t)(1UL << (pin))) != 0U\00", align 1
@.str.19 = private unnamed_addr constant [18 x i8] c"\09Unsupported pin\0A\00", align 1
@.str.20 = private unnamed_addr constant [93 x i8] c"(flags & ((1U << 21) | (1U << 22) | (1U << 23) | (1U << 24) | (1U << 25) | (1U << 26))) == 0\00", align 1
@.str.21 = private unnamed_addr constant [36 x i8] c"\09Interrupt flags are not supported\0A\00", align 1
@.str.22 = private unnamed_addr constant [57 x i8] c"(flags & ((1 << 4) | (1 << 5))) != ((1 << 4) | (1 << 5))\00", align 1
@.str.23 = private unnamed_addr constant [61 x i8] c"\09Pull Up and Pull Down should not be enabled simultaneously\0A\00", align 1
@.str.24 = private unnamed_addr constant [53 x i8] c"(flags & (1U << 17)) != 0 || (flags & (1 << 1)) == 0\00", align 1
@.str.25 = private unnamed_addr constant [82 x i8] c"\09Output needs to be enabled for 'Open Drain', 'Open Source' mode to be supported\0A\00", align 1
@.str.26 = private unnamed_addr constant [51 x i8] c"(flags & (1 << 1)) != 0 || (flags & (1 << 2)) == 0\00", align 1
@.str.27 = private unnamed_addr constant [70 x i8] c"(flags & ((1U << 18) | (1U << 19))) == 0 || (flags & (1U << 17)) != 0\00", align 1
@.str.28 = private unnamed_addr constant [59 x i8] c"\09Output needs to be enabled to be initialized low or high\0A\00", align 1
@.str.29 = private unnamed_addr constant [65 x i8] c"(flags & ((1U << 18) | (1U << 19))) != ((1U << 18) | (1U << 19))\00", align 1
@.str.30 = private unnamed_addr constant [44 x i8] c"\09Output cannot be initialized low and high\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !430
@.str.9 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.10 = private unnamed_addr constant [17 x i8] c"chunk_used(h, c)\00", align 1
@.str.2.11 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/lib/os/heap.c\00", align 1
@.str.3.12 = private unnamed_addr constant [56 x i8] c"\09unexpected heap state (double-free?) for memory at %p\0A\00", align 1
@.str.4.13 = private unnamed_addr constant [38 x i8] c"left_chunk(h, right_chunk(h, c)) == c\00", align 1
@.str.5.14 = private unnamed_addr constant [60 x i8] c"\09corrupted heap bounds (buffer overflow?) for memory at %p\0A\00", align 1
@.str.6.15 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.7.16 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@.str.8.17 = private unnamed_addr constant [22 x i8] c"bytes / 8U <= 0x7fffU\00", align 1
@.str.9.18 = private unnamed_addr constant [23 x i8] c"\09heap size is too big\0A\00", align 1
@.str.10.19 = private unnamed_addr constant [33 x i8] c"bytes > heap_footer_bytes(bytes)\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"\09heap size is too small\0A\00", align 1
@.str.12 = private unnamed_addr constant [41 x i8] c"heap_sz > chunksz(sizeof(struct z_heap))\00", align 1
@.str.13 = private unnamed_addr constant [43 x i8] c"chunk0_size + min_chunk_size(h) <= heap_sz\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !441
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !485
@.str.38 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.39 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.40 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.41 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.44 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.45 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.46 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.47 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.50 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.5.51 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.6.52 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.7.48 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.8.49 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct._sfnode { i32 101384192 } }], align 4, !dbg !514
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !520
@.str.62 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.63 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.64 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.65 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.68 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.69 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !649
@.str.6.70 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.71 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !685
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.80, i32 0, i32 0), %struct._sfnode { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.81, i32 0, i32 0), %struct._sfnode { i32 285933602 } }], align 4, !dbg !695
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !700
@.str.80 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.81 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.84 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.85 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.86 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !720
@__devicehdl_dts_ord_35 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !912
@.str.4.82 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_35 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !874
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !857
@__device_dts_ord_35 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.82, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_35, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_35, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !830
@__init___device_dts_ord_35 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_35 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !846
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !876
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !889
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !891
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !893
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !895
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !897
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !899
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !901
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !903
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !905
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !907
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !917
@.str.87 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !944
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1039
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1028
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1080
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !937
@.str.98 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1146
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1411
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1381
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1367
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1309
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !935
@.str.1.103 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1413
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1385
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1383
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1323
@__devicehdl_dts_ord_22 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !933
@.str.2.106 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1426
@__devstate_dts_ord_22 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1389
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1387
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1332
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !931
@.str.3.107 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1428
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1393
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1391
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1341
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !929
@.str.4.108 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1430
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1397
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1395
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1347
@__devicehdl_dts_ord_77 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !927
@.str.5.109 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1432
@__devstate_dts_ord_77 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1401
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1399
@__init___device_dts_ord_77 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_77 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1353
@__devicehdl_dts_ord_78 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !925
@.str.6.110 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1434
@__devstate_dts_ord_78 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1405
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1403
@__init___device_dts_ord_78 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_78 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1359
@__devicehdl_dts_ord_79 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !923
@.str.7.111 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1436
@__devstate_dts_ord_79 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1409
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1407
@__init___device_dts_ord_79 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_79 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1365
@.str.8.99 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.100 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !939
@.str.117 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44 }, align 4, !dbg !1438
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1631
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1592
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1633
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.117, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1583
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1585
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1594
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1602
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1625
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1628
@.str.1.118 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.119 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.3.120 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.4.121 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.87, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1012
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1655
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1764
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1766
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1762
@lock = internal global %struct._sfnode zeroinitializer, align 4, !dbg !1757
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1731
@.str.128 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.129 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.130 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.131 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.132 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.133 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_22, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* @__device_dts_ord_77, %struct.device* @__device_dts_ord_78, %struct.device* @__device_dts_ord_79, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1768
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.98, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1307
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.103, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1321
@__device_dts_ord_22 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.106, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_22, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1330
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.107, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1339
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.108, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1345
@__device_dts_ord_77 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.109, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_77, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_77, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1351
@__device_dts_ord_78 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.110, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_78, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_78, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1357
@__device_dts_ord_79 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.111, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_79, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_79, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1363
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1858
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1899
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1902
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1909
@.str.167 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.168 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.2.169 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.3.170 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1916
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2129
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2135
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2142
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2147
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.4.181 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.185, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.186, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.187, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.188, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.189, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.183, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.190, i32 0, i32 0)], align 4, !dbg !2173
@.str.184 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.185 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.186 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.187 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.188 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.189 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.183 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.190 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2287
@.str.8.182 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.193 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.194 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.195 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.196 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.198 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.210 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.211 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.212 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.215 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.216 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.217 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.218 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.221 = private unnamed_addr constant [24 x i8] c"(flags & ~0x3UL) == 0UL\00", align 1
@.str.5.222 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/include/zephyr/sys/sflist.h\00", align 1
@.str.6.223 = private unnamed_addr constant [18 x i8] c"\09flags too large\0A\00", align 1
@.str.7.219 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.220 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct._sfnode zeroinitializer, align 4, !dbg !2300
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2410
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2413
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2415
@.str.230 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.247 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.236 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.254 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.264 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.238 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.259 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.235 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.268 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.269 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.277 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.278 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.279 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.280 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.231 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.232 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.233 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.234 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.237 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.251 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.260 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.261 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2137
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2140
@.str.23.272 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.286 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.287 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.288 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.289 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct._sfnode zeroinitializer, align 4, !dbg !2417
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2447
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2452
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2450
@.str.4.290 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.291 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.292 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.296 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.297 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@kheap__system_heap = dso_local global [256 x i8] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/mempool.c\22.kheap_buf__system_heap", align 8, !dbg !2458
@_system_heap = dso_local global %struct.k_heap { %struct.sys_heap { %struct.z_heap* null, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @kheap__system_heap, i32 0, i32 0), i32 256 }, %struct._wait_q_t zeroinitializer, %struct._sfnode zeroinitializer }, section "._k_heap.static._system_heap", align 4, !dbg !2464
@.str.316 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.317 = private unnamed_addr constant [61 x i8] c"align / sizeof(void *) >= 1 && (align % sizeof(void *)) == 0\00", align 1
@.str.2.318 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/mempool.c\00", align 1
@.str.3.319 = private unnamed_addr constant [45 x i8] c"\09align must be a multiple of sizeof(void *)\0A\00", align 1
@.str.4.320 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.5.321 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2004
@.str.6.322 = private unnamed_addr constant [50 x i8] c"align == 0 || ((uintptr_t)mem & (align - 1)) == 0\00", align 1
@.str.7.323 = private unnamed_addr constant [40 x i8] c"\09misaligned memory at %p (align = %zu)\0A\00", align 1
@.str.334 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2501
@.str.336 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.347 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.338 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/kheap.c\00", align 1
@.str.3.348 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4
@.str.4.337 = private unnamed_addr constant [22 x i8] c"h <= _k_heap_list_end\00", align 1
@.str.5.339 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.6.344 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.7.345 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.8.346 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.9.349 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.10.350 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3190 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3192, !srcloc !3193
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3194, !srcloc !3195
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3196, !srcloc !3197
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3198, !srcloc !3199
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3200, !srcloc !3201
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3202, !srcloc !3203
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3204, !srcloc !3205
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3206, !srcloc !3207
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3208, !srcloc !3209
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3210, !srcloc !3211
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3212, !srcloc !3213
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3214, !srcloc !3215
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3216, !srcloc !3217
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3218, !srcloc !3219
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3220, !srcloc !3221
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3222, !srcloc !3223
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3224, !srcloc !3225
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3226, !srcloc !3227
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3228, !srcloc !3229
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3230, !srcloc !3231
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3232, !srcloc !3233
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3234, !srcloc !3235
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3236, !srcloc !3237
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3238, !srcloc !3239
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3240, !srcloc !3241
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3242, !srcloc !3243
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3244, !srcloc !3245
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3246, !srcloc !3249
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3250, !srcloc !3251
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3252, !srcloc !3253
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3254, !srcloc !3255
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3256, !srcloc !3257
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3258, !srcloc !3259
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3260, !srcloc !3261
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3262, !srcloc !3263
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3264, !srcloc !3265
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3266, !srcloc !3267
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3268, !srcloc !3269
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3270, !srcloc !3271
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3272, !srcloc !3273
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3274, !srcloc !3275
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3276, !srcloc !3277
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3278, !srcloc !3279
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3280, !srcloc !3281
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3282, !srcloc !3283
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3284, !srcloc !3285
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3286, !srcloc !3287
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3288, !srcloc !3289
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3290, !srcloc !3291
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3292, !srcloc !3293
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3294, !srcloc !3295
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3296, !srcloc !3297
  ret void, !dbg !3298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @blink0() #1 !dbg !3301 {
  tail call void @blink(%struct.led* noundef nonnull @led0, i32 noundef 100, i32 noundef 0) #26, !dbg !3302
  ret void, !dbg !3303
}

; Function Attrs: noinline nounwind optsize
define dso_local void @blink(%struct.led* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !3304 {
  %4 = alloca %struct.printk_data_t, align 4
  call void @llvm.dbg.value(metadata %struct.led* %0, metadata !3309, metadata !DIExpression()), !dbg !3326
  call void @llvm.dbg.value(metadata i32 %1, metadata !3310, metadata !DIExpression()), !dbg !3326
  call void @llvm.dbg.value(metadata i32 %2, metadata !3311, metadata !DIExpression()), !dbg !3326
  call void @llvm.dbg.value(metadata %struct.led* %0, metadata !3312, metadata !DIExpression()), !dbg !3326
  call void @llvm.dbg.value(metadata i32 0, metadata !3315, metadata !DIExpression()), !dbg !3326
  %5 = getelementptr inbounds %struct.led, %struct.led* %0, i32 0, i32 0, i32 0, !dbg !3327
  %6 = load %struct.device*, %struct.device** %5, align 4, !dbg !3327
  %7 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %6) #26, !dbg !3329
  br i1 %7, label %12, label %8, !dbg !3330

8:                                                ; preds = %3
  %9 = load %struct.device*, %struct.device** %5, align 4, !dbg !3331
  %10 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !3333
  %11 = load i8*, i8** %10, align 4, !dbg !3333
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i32 0, i32 0), i8* noundef %11) #27, !dbg !3334
  br label %43, !dbg !3335

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.led, %struct.led* %0, i32 0, i32 0, !dbg !3336
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %13, metadata !3312, metadata !DIExpression()), !dbg !3326
  %14 = tail call fastcc i32 @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef %13) #26, !dbg !3337
  call void @llvm.dbg.value(metadata i32 %14, metadata !3316, metadata !DIExpression()), !dbg !3326
  %15 = icmp eq i32 %14, 0, !dbg !3338
  %16 = getelementptr inbounds %struct.led, %struct.led* %0, i32 0, i32 0, i32 1
  br i1 %15, label %17, label %26, !dbg !3340

17:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 0, metadata !3315, metadata !DIExpression()), !dbg !3326
  %18 = load %struct.device*, %struct.device** %5, align 4, !dbg !3341
  %19 = load i8, i8* %16, align 4, !dbg !3342
  call fastcc void @gpio_pin_set(%struct.device* noundef %18, i8 noundef zeroext %19, i32 noundef 0) #26, !dbg !3343
  %20 = bitcast %struct.printk_data_t* %4 to i8*, !dbg !3344
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %20) #25, !dbg !3344
  call void @llvm.dbg.declare(metadata %struct.printk_data_t* %4, metadata !3317, metadata !DIExpression()), !dbg !3345
  %21 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %4, i32 0, i32 0, !dbg !3346
  store i8* null, i8** %21, align 4, !dbg !3346
  %22 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %4, i32 0, i32 1, !dbg !3346
  store i32 %2, i32* %22, align 4, !dbg !3346
  %23 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %4, i32 0, i32 2, !dbg !3346
  store i32 0, i32* %23, align 4, !dbg !3346
  call void @llvm.dbg.value(metadata i32 12, metadata !3324, metadata !DIExpression()), !dbg !3347
  %24 = call i8* @k_malloc(i32 noundef 12) #27, !dbg !3348
  call void @llvm.dbg.value(metadata i8* %24, metadata !3325, metadata !DIExpression()), !dbg !3347
  %25 = icmp eq i8* %24, null, !dbg !3349
  br i1 %25, label %32, label %33, !dbg !3352

26:                                               ; preds = %12
  %27 = load i8, i8* %16, align 4, !dbg !3353
  %28 = zext i8 %27 to i32, !dbg !3355
  %29 = getelementptr inbounds %struct.led, %struct.led* %0, i32 0, i32 1, !dbg !3356
  %30 = load i8, i8* %29, align 4, !dbg !3356
  %31 = zext i8 %30 to i32, !dbg !3357
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i32 0, i32 0), i32 noundef %14, i32 noundef %28, i32 noundef %31) #27, !dbg !3358
  br label %43, !dbg !3359

32:                                               ; preds = %33, %17
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0), i32 noundef 79) #27, !dbg !3360
  call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0), i32 noundef 79) #27, !dbg !3360
  unreachable, !dbg !3360

33:                                               ; preds = %17, %33
  %34 = phi i8* [ %41, %33 ], [ %24, %17 ]
  %35 = phi i32 [ %37, %33 ], [ 0, %17 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !3315, metadata !DIExpression()), !dbg !3326
  %36 = call i8* @memcpy(i8* noundef nonnull %34, i8* noundef nonnull %20, i32 noundef 12) #27, !dbg !3362
  call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @printk_fifo, i32 0, i32 0), i8* noundef nonnull %34) #27, !dbg !3363
  call fastcc void @k_msleep(i32 noundef %1) #26, !dbg !3365
  %37 = add nuw nsw i32 %35, 1, !dbg !3366
  call void @llvm.dbg.value(metadata i32 %37, metadata !3315, metadata !DIExpression()), !dbg !3326
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %20) #25, !dbg !3367
  %38 = load %struct.device*, %struct.device** %5, align 4, !dbg !3341
  %39 = load i8, i8* %16, align 4, !dbg !3342
  %40 = and i32 %37, 1, !dbg !3368
  call fastcc void @gpio_pin_set(%struct.device* noundef %38, i8 noundef zeroext %39, i32 noundef %40) #26, !dbg !3343
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %20) #25, !dbg !3344
  call void @llvm.dbg.declare(metadata %struct.printk_data_t* %4, metadata !3317, metadata !DIExpression()), !dbg !3345
  store i8* null, i8** %21, align 4, !dbg !3346
  store i32 %2, i32* %22, align 4, !dbg !3346
  store i32 %37, i32* %23, align 4, !dbg !3346
  call void @llvm.dbg.value(metadata i32 12, metadata !3324, metadata !DIExpression()), !dbg !3347
  %41 = call i8* @k_malloc(i32 noundef 12) #27, !dbg !3348
  call void @llvm.dbg.value(metadata i8* %41, metadata !3325, metadata !DIExpression()), !dbg !3347
  %42 = icmp eq i8* %41, null, !dbg !3349
  br i1 %42, label %32, label %33, !dbg !3352, !llvm.loop !3369

43:                                               ; preds = %26, %8
  ret void, !dbg !3371
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !3372 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3377, metadata !DIExpression()), !dbg !3378
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3379, !srcloc !3381
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) #26, !dbg !3382
  ret i1 %2, !dbg !3383
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0) unnamed_addr #1 !dbg !3384 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !3388, metadata !DIExpression()), !dbg !3390
  call void @llvm.dbg.value(metadata i32 131072, metadata !3389, metadata !DIExpression()), !dbg !3390
  %2 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !3391
  %3 = load %struct.device*, %struct.device** %2, align 4, !dbg !3391
  %4 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !3392
  %5 = load i8, i8* %4, align 4, !dbg !3392
  %6 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !3393
  %7 = load i16, i16* %6, align 2, !dbg !3393
  %8 = zext i16 %7 to i32, !dbg !3394
  %9 = or i32 %8, 131072, !dbg !3395
  %10 = tail call fastcc i32 @gpio_pin_configure(%struct.device* noundef %3, i8 noundef zeroext %5, i32 noundef %9) #26, !dbg !3396
  ret i32 %10, !dbg !3397
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_set(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !3398 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3402, metadata !DIExpression()), !dbg !3409
  call void @llvm.dbg.value(metadata i8 %1, metadata !3403, metadata !DIExpression()), !dbg !3409
  call void @llvm.dbg.value(metadata i32 %2, metadata !3404, metadata !DIExpression()), !dbg !3409
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !3410
  %5 = bitcast i8** %4 to %struct._sfnode**, !dbg !3410
  %6 = load %struct._sfnode*, %struct._sfnode** %5, align 4, !dbg !3410
  call void @llvm.dbg.value(metadata %struct._sfnode* %6, metadata !3405, metadata !DIExpression()), !dbg !3409
  call void @llvm.dbg.value(metadata %struct._sfnode* undef, metadata !3407, metadata !DIExpression()), !dbg !3409
  %7 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %6, i32 0, i32 0, !dbg !3411
  %8 = load i32, i32* %7, align 4, !dbg !3411
  %9 = zext i8 %1 to i32, !dbg !3411
  %10 = shl nuw i32 1, %9, !dbg !3411
  %11 = and i32 %8, %10, !dbg !3411
  %12 = icmp eq i32 %11, 0, !dbg !3411
  br i1 %12, label %13, label %14, !dbg !3414

13:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 1296) #27, !dbg !3415
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i32 0, i32 0)) #27, !dbg !3415
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 1296) #27, !dbg !3415
  unreachable, !dbg !3415

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !3417
  %16 = bitcast i8** %15 to %struct._sfnode**, !dbg !3417
  %17 = load %struct._sfnode*, %struct._sfnode** %16, align 4, !dbg !3417
  call void @llvm.dbg.value(metadata %struct._sfnode* %17, metadata !3407, metadata !DIExpression()), !dbg !3409
  %18 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %17, i32 0, i32 0, !dbg !3418
  %19 = load i32, i32* %18, align 4, !dbg !3418
  %20 = and i32 %19, %10, !dbg !3420
  %21 = icmp eq i32 %20, 0, !dbg !3420
  %22 = icmp eq i32 %2, 0, !dbg !3421
  %23 = zext i1 %22 to i32, !dbg !3421
  %24 = select i1 %21, i32 %2, i32 %23, !dbg !3421
  call void @llvm.dbg.value(metadata i32 %24, metadata !3404, metadata !DIExpression()), !dbg !3409
  tail call fastcc void @gpio_pin_set_raw(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %24) #26, !dbg !3422
  ret void, !dbg !3423
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep(i32 noundef %0) unnamed_addr #1 !dbg !3424 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3428, metadata !DIExpression()), !dbg !3429
  %2 = icmp sgt i32 %0, 0, !dbg !3430
  %3 = select i1 %2, i32 %0, i32 0, !dbg !3430
  %4 = zext i32 %3 to i64, !dbg !3430
  %5 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %4) #26, !dbg !3430
  %6 = insertvalue [1 x i64] poison, i64 %5, 0, !dbg !3431
  tail call fastcc void @k_sleep([1 x i64] %6) #26, !dbg !3431
  ret void, !dbg !3432
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !3433 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3438, metadata !DIExpression()), !dbg !3439
  call void @llvm.dbg.value(metadata i64 %0, metadata !3440, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.value(metadata i32 1000, metadata !3445, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.value(metadata i32 10000, metadata !3446, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.value(metadata i8 1, metadata !3447, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.value(metadata i8 0, metadata !3448, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.value(metadata i8 1, metadata !3449, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.value(metadata i8 0, metadata !3450, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.value(metadata i8 1, metadata !3451, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.value(metadata i8 0, metadata !3452, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.value(metadata i64 0, metadata !3453, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.value(metadata i64 0, metadata !3453, metadata !DIExpression()), !dbg !3457
  %2 = mul i64 %0, 10, !dbg !3459
  ret i64 %2, !dbg !3465
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3466 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3475, metadata !DIExpression()), !dbg !3476
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3477, !srcloc !3479
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #27, !dbg !3480
  ret void, !dbg !3481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_set_raw(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !3482 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3484, metadata !DIExpression()), !dbg !3489
  call void @llvm.dbg.value(metadata i8 %1, metadata !3485, metadata !DIExpression()), !dbg !3489
  call void @llvm.dbg.value(metadata i32 %2, metadata !3486, metadata !DIExpression()), !dbg !3489
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !3490
  %5 = bitcast i8** %4 to %struct._sfnode**, !dbg !3490
  %6 = load %struct._sfnode*, %struct._sfnode** %5, align 4, !dbg !3490
  call void @llvm.dbg.value(metadata %struct._sfnode* %6, metadata !3487, metadata !DIExpression()), !dbg !3489
  %7 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %6, i32 0, i32 0, !dbg !3491
  %8 = load i32, i32* %7, align 4, !dbg !3491
  %9 = zext i8 %1 to i32, !dbg !3491
  %10 = shl nuw i32 1, %9, !dbg !3491
  %11 = and i32 %8, %10, !dbg !3491
  %12 = icmp eq i32 %11, 0, !dbg !3491
  br i1 %12, label %13, label %14, !dbg !3494

13:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 1255) #27, !dbg !3495
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i32 0, i32 0)) #27, !dbg !3495
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 1255) #27, !dbg !3495
  unreachable, !dbg !3495

14:                                               ; preds = %3
  %15 = icmp eq i32 %2, 0, !dbg !3497
  br i1 %15, label %18, label %16, !dbg !3499

16:                                               ; preds = %14
  %17 = tail call fastcc i32 @gpio_port_set_bits_raw(%struct.device* noundef nonnull %0, i32 noundef %10) #26, !dbg !3500
  call void @llvm.dbg.value(metadata i32 %17, metadata !3488, metadata !DIExpression()), !dbg !3489
  br label %20, !dbg !3502

18:                                               ; preds = %14
  %19 = tail call fastcc i32 @gpio_port_clear_bits_raw(%struct.device* noundef nonnull %0, i32 noundef %10) #26, !dbg !3503
  call void @llvm.dbg.value(metadata i32 %19, metadata !3488, metadata !DIExpression()), !dbg !3489
  br label %20

20:                                               ; preds = %18, %16
  call void @llvm.dbg.value(metadata i32 undef, metadata !3488, metadata !DIExpression()), !dbg !3489
  ret void, !dbg !3505
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !3506 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3509, metadata !DIExpression()), !dbg !3511
  call void @llvm.dbg.value(metadata i32 %1, metadata !3510, metadata !DIExpression()), !dbg !3511
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3512, !srcloc !3514
  %3 = tail call fastcc i32 @z_impl_gpio_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %1) #26, !dbg !3515
  ret i32 %3, !dbg !3516
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !3517 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3519, metadata !DIExpression()), !dbg !3521
  call void @llvm.dbg.value(metadata i32 %1, metadata !3520, metadata !DIExpression()), !dbg !3521
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3522, !srcloc !3524
  %3 = tail call fastcc i32 @z_impl_gpio_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %1) #26, !dbg !3525
  ret i32 %3, !dbg !3526
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_gpio_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !3527 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3529, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.value(metadata i32 %1, metadata !3530, metadata !DIExpression()), !dbg !3532
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3533
  %4 = bitcast i8** %3 to %struct.gpio_driver_api**, !dbg !3533
  %5 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %4, align 4, !dbg !3533
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %5, metadata !3531, metadata !DIExpression()), !dbg !3532
  %6 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %5, i32 0, i32 4, !dbg !3534
  %7 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %6, align 4, !dbg !3534
  %8 = tail call i32 %7(%struct.device* noundef %0, i32 noundef %1) #27, !dbg !3535
  ret i32 %8, !dbg !3536
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_gpio_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !3537 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3539, metadata !DIExpression()), !dbg !3542
  call void @llvm.dbg.value(metadata i32 %1, metadata !3540, metadata !DIExpression()), !dbg !3542
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3543
  %4 = bitcast i8** %3 to %struct.gpio_driver_api**, !dbg !3543
  %5 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %4, align 4, !dbg !3543
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %5, metadata !3541, metadata !DIExpression()), !dbg !3542
  %6 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %5, i32 0, i32 3, !dbg !3544
  %7 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %6, align 4, !dbg !3544
  %8 = tail call i32 %7(%struct.device* noundef %0, i32 noundef %1) #27, !dbg !3545
  ret i32 %8, !dbg !3546
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !3547 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3549, metadata !DIExpression()), !dbg !3552
  call void @llvm.dbg.value(metadata i8 %1, metadata !3550, metadata !DIExpression()), !dbg !3552
  call void @llvm.dbg.value(metadata i32 %2, metadata !3551, metadata !DIExpression()), !dbg !3552
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3553, !srcloc !3555
  %4 = tail call fastcc i32 @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #26, !dbg !3556
  ret i32 %4, !dbg !3557
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !3558 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3560, metadata !DIExpression()), !dbg !3566
  call void @llvm.dbg.value(metadata i8 %1, metadata !3561, metadata !DIExpression()), !dbg !3566
  call void @llvm.dbg.value(metadata i32 %2, metadata !3562, metadata !DIExpression()), !dbg !3566
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3567
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !3567
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !3567
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !3563, metadata !DIExpression()), !dbg !3566
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !3568
  %8 = bitcast i8** %7 to %struct._sfnode**, !dbg !3568
  %9 = load %struct._sfnode*, %struct._sfnode** %8, align 4, !dbg !3568
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !3564, metadata !DIExpression()), !dbg !3566
  %10 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !3569
  %11 = bitcast i8** %10 to %struct._sfnode**, !dbg !3569
  %12 = load %struct._sfnode*, %struct._sfnode** %11, align 4, !dbg !3569
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !3565, metadata !DIExpression()), !dbg !3566
  %13 = and i32 %2, 132120576, !dbg !3570
  %14 = icmp eq i32 %13, 0, !dbg !3570
  br i1 %14, label %16, label %15, !dbg !3573

15:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([93 x i8], [93 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 679) #27, !dbg !3574
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21, i32 0, i32 0)) #27, !dbg !3574
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 679) #27, !dbg !3574
  unreachable, !dbg !3574

16:                                               ; preds = %3
  %17 = and i32 %2, 48, !dbg !3576
  %18 = icmp eq i32 %17, 48, !dbg !3576
  br i1 %18, label %19, label %20, !dbg !3579

19:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 683) #27, !dbg !3580
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.23, i32 0, i32 0)) #27, !dbg !3580
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 683) #27, !dbg !3580
  unreachable, !dbg !3580

20:                                               ; preds = %16
  %21 = and i32 %2, 131072, !dbg !3582
  %22 = icmp ne i32 %21, 0, !dbg !3582
  %23 = and i32 %2, 131074, !dbg !3582
  %24 = icmp eq i32 %23, 2, !dbg !3582
  br i1 %24, label %25, label %26, !dbg !3582

25:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 687) #27, !dbg !3585
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([82 x i8], [82 x i8]* @.str.25, i32 0, i32 0)) #27, !dbg !3585
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 687) #27, !dbg !3585
  unreachable, !dbg !3585

26:                                               ; preds = %20
  %27 = and i32 %2, 6, !dbg !3587
  %28 = icmp eq i32 %27, 4, !dbg !3587
  br i1 %28, label %29, label %30, !dbg !3587

29:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.26, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 690) #27, !dbg !3590
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 690) #27, !dbg !3590
  unreachable, !dbg !3590

30:                                               ; preds = %26
  %31 = and i32 %2, 786432, !dbg !3592
  %32 = icmp eq i32 %31, 0, !dbg !3592
  %33 = or i1 %32, %22, !dbg !3592
  br i1 %33, label %35, label %34, !dbg !3592

34:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 694) #27, !dbg !3595
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i32 0, i32 0)) #27, !dbg !3595
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 694) #27, !dbg !3595
  unreachable, !dbg !3595

35:                                               ; preds = %30
  %36 = icmp eq i32 %31, 786432, !dbg !3597
  br i1 %36, label %37, label %38, !dbg !3600

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.29, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 698) #27, !dbg !3601
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30, i32 0, i32 0)) #27, !dbg !3601
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 698) #27, !dbg !3601
  unreachable, !dbg !3601

38:                                               ; preds = %35
  %39 = and i32 %2, 1048577, !dbg !3603
  %40 = icmp ne i32 %39, 1048577, !dbg !3603
  %41 = or i1 %40, %32, !dbg !3603
  %42 = xor i32 %2, 786432, !dbg !3603
  %43 = select i1 %41, i32 %2, i32 %42, !dbg !3603
  call void @llvm.dbg.value(metadata i32 %43, metadata !3562, metadata !DIExpression()), !dbg !3566
  call void @llvm.dbg.value(metadata i32 %43, metadata !3562, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !3566
  %44 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %9, i32 0, i32 0, !dbg !3605
  %45 = load i32, i32* %44, align 4, !dbg !3605
  %46 = zext i8 %1 to i32, !dbg !3605
  %47 = shl nuw i32 1, %46, !dbg !3605
  %48 = and i32 %45, %47, !dbg !3605
  %49 = icmp eq i32 %48, 0, !dbg !3605
  br i1 %49, label %50, label %51, !dbg !3608

50:                                               ; preds = %38
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 709) #27, !dbg !3609
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i32 0, i32 0)) #27, !dbg !3609
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 709) #27, !dbg !3609
  unreachable, !dbg !3609

51:                                               ; preds = %38
  %52 = and i32 %43, 1, !dbg !3611
  %53 = icmp eq i32 %52, 0, !dbg !3613
  br i1 %53, label %58, label %54, !dbg !3614

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %12, i32 0, i32 0, !dbg !3615
  %56 = load i32, i32* %55, align 4, !dbg !3617
  %57 = or i32 %56, %47, !dbg !3617
  store i32 %57, i32* %55, align 4, !dbg !3617
  br label %63, !dbg !3618

58:                                               ; preds = %51
  %59 = xor i32 %47, -1, !dbg !3619
  %60 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %12, i32 0, i32 0, !dbg !3621
  %61 = load i32, i32* %60, align 4, !dbg !3622
  %62 = and i32 %61, %59, !dbg !3622
  store i32 %62, i32* %60, align 4, !dbg !3622
  br label %63

63:                                               ; preds = %58, %54
  %64 = and i32 %43, -1048577, !dbg !3623
  call void @llvm.dbg.value(metadata i32 %64, metadata !3562, metadata !DIExpression()), !dbg !3566
  %65 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !3624
  %66 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %65, align 4, !dbg !3624
  %67 = tail call i32 %66(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %64) #27, !dbg !3625
  ret i32 %67, !dbg !3626
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !3627 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3629, metadata !DIExpression()), !dbg !3630
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !3631
  ret i1 %2, !dbg !3632
}

; Function Attrs: noinline nounwind optsize
define dso_local void @blink1() #1 !dbg !3633 {
  tail call void @blink(%struct.led* noundef nonnull @led1, i32 noundef 1000, i32 noundef 1) #26, !dbg !3634
  ret void, !dbg !3635
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @uart_out() #5 !dbg !3636 {
  br label %1, !dbg !3643

1:                                                ; preds = %0, %1
  %2 = tail call fastcc i8* @k_queue_get() #26, !dbg !3644
  call void @llvm.dbg.value(metadata i8* %2, metadata !3641, metadata !DIExpression()), !dbg !3645
  call void @llvm.dbg.value(metadata i8* %2, metadata !3638, metadata !DIExpression()), !dbg !3646
  %3 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !3647
  %4 = bitcast i8* %3 to i32*, !dbg !3647
  %5 = load i32, i32* %4, align 4, !dbg !3647
  %6 = getelementptr inbounds i8, i8* %2, i32 8, !dbg !3648
  %7 = bitcast i8* %6 to i32*, !dbg !3648
  %8 = load i32, i32* %7, align 4, !dbg !3648
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i32 0, i32 0), i32 noundef %5, i32 noundef %8) #27, !dbg !3649
  tail call void @k_free(i8* noundef %2) #27, !dbg !3650
  br label %1, !dbg !3643, !llvm.loop !3651
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get() unnamed_addr #1 !dbg !3653 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3659, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata %struct.k_queue* getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @printk_fifo, i32 0, i32 0), metadata !3658, metadata !DIExpression()), !dbg !3660
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3661, !srcloc !3663
  %1 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @printk_fifo, i32 0, i32 0), [1 x i64] [i64 -1]) #27, !dbg !3664
  ret i8* %1, !dbg !3665
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3666 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3668, metadata !DIExpression()), !dbg !3669
  ret i32 0, !dbg !3670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !3671 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3675, metadata !DIExpression()), !dbg !3676
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3677
  ret void, !dbg !3678
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #7 !dbg !3679 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3682
  ret i8* %1, !dbg !3683
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3684 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3696, metadata !DIExpression()), !dbg !3705
  call void @llvm.dbg.value(metadata i8* %0, metadata !3695, metadata !DIExpression()), !dbg !3705
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3706
  ret void, !dbg !3708
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3709 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3713, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata i8* %1, metadata !3714, metadata !DIExpression()), !dbg !3715
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3716
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !3716
  ret i32 %4, !dbg !3717
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3718 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3730, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3727, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %1, metadata !3728, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %2, metadata !3729, metadata !DIExpression()), !dbg !3731
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !3732
  ret void, !dbg !3733
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3734 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3738, metadata !DIExpression()), !dbg !3741
  call void @llvm.dbg.value(metadata i32 %1, metadata !3739, metadata !DIExpression()), !dbg !3741
  call void @llvm.dbg.value(metadata i32 0, metadata !3740, metadata !DIExpression()), !dbg !3741
  %3 = icmp eq i32 %1, 0, !dbg !3742
  br i1 %3, label %13, label %4, !dbg !3745

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3740, metadata !DIExpression()), !dbg !3741
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3746
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3748
  %8 = load i8, i8* %7, align 1, !dbg !3748
  %9 = zext i8 %8 to i32, !dbg !3748
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !3746
  %11 = add nuw i32 %5, 1, !dbg !3749
  call void @llvm.dbg.value(metadata i32 %11, metadata !3740, metadata !DIExpression()), !dbg !3741
  %12 = icmp eq i32 %11, %1, !dbg !3742
  br i1 %12, label %13, label %4, !dbg !3745, !llvm.loop !3750

13:                                               ; preds = %4, %2
  ret void, !dbg !3752
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3753 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3757, metadata !DIExpression()), !dbg !3759
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3760
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3760
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3758, metadata !DIExpression()), !dbg !3761
  call void @llvm.va_start(i8* nonnull %3), !dbg !3762
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3763
  %5 = load i32, i32* %4, align 4, !dbg !3763
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3763
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3763
  call void @llvm.va_end(i8* nonnull %3), !dbg !3764
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3765
  ret void, !dbg !3765
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #8

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3766 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3770, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.value(metadata i32 %1, metadata !3771, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.value(metadata i8* %2, metadata !3772, metadata !DIExpression()), !dbg !3775
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3776
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3776
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3773, metadata !DIExpression()), !dbg !3777
  call void @llvm.va_start(i8* nonnull %5), !dbg !3778
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3779
  %7 = load i32, i32* %6, align 4, !dbg !3779
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3779
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3779
  call void @llvm.dbg.value(metadata i32 %9, metadata !3774, metadata !DIExpression()), !dbg !3775
  call void @llvm.va_end(i8* nonnull %5), !dbg !3780
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3781
  ret i32 %9, !dbg !3782
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3783 {
  %5 = alloca %struct.printk_data_t, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3790, metadata !DIExpression()), !dbg !3797
  call void @llvm.dbg.value(metadata i8* %0, metadata !3787, metadata !DIExpression()), !dbg !3797
  call void @llvm.dbg.value(metadata i32 %1, metadata !3788, metadata !DIExpression()), !dbg !3797
  call void @llvm.dbg.value(metadata i8* %2, metadata !3789, metadata !DIExpression()), !dbg !3797
  %6 = bitcast %struct.printk_data_t* %5 to i8*, !dbg !3798
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3798
  call void @llvm.dbg.declare(metadata %struct.printk_data_t* %5, metadata !3791, metadata !DIExpression()), !dbg !3799
  %7 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %5, i32 0, i32 0, !dbg !3800
  store i8* %0, i8** %7, align 4, !dbg !3800
  %8 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %5, i32 0, i32 1, !dbg !3800
  store i32 %1, i32* %8, align 4, !dbg !3800
  %9 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %5, i32 0, i32 2, !dbg !3800
  store i32 0, i32* %9, align 4, !dbg !3800
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.printk_data_t*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3801
  %10 = load i32, i32* %9, align 4, !dbg !3802
  %11 = load i32, i32* %8, align 4, !dbg !3804
  %12 = icmp slt i32 %10, %11, !dbg !3805
  br i1 %12, label %13, label %15, !dbg !3806

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3807
  store i8 0, i8* %14, align 1, !dbg !3809
  br label %15, !dbg !3810

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3811
  ret i32 %10, !dbg !3812
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.printk_data_t* nocapture noundef %1) #9 !dbg !3813 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3818, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata %struct.printk_data_t* %1, metadata !3819, metadata !DIExpression()), !dbg !3820
  %3 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %1, i32 0, i32 0, !dbg !3821
  %4 = load i8*, i8** %3, align 4, !dbg !3821
  %5 = icmp eq i8* %4, null, !dbg !3823
  %6 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3824
  br i1 %5, label %12, label %8, !dbg !3825

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %1, i32 0, i32 1, !dbg !3826
  %10 = load i32, i32* %9, align 4, !dbg !3826
  %11 = icmp slt i32 %7, %10, !dbg !3827
  br i1 %11, label %15, label %12, !dbg !3828

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %1, i32 0, i32 2, !dbg !3829
  %14 = add nsw i32 %7, 1, !dbg !3831
  store i32 %14, i32* %13, align 4, !dbg !3831
  br label %25, !dbg !3832

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3833
  %17 = icmp eq i32 %7, %16, !dbg !3835
  br i1 %17, label %18, label %21, !dbg !3836

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3837
  store i32 %19, i32* %6, align 4, !dbg !3837
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3839
  store i8 0, i8* %20, align 1, !dbg !3840
  br label %25, !dbg !3841

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3842
  %23 = add nsw i32 %7, 1, !dbg !3844
  store i32 %23, i32* %6, align 4, !dbg !3844
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3845
  store i8 %22, i8* %24, align 1, !dbg !3846
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3847
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #5 !dbg !3848 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3853, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8* %1, metadata !3854, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8* %2, metadata !3855, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i8* %3, metadata !3856, metadata !DIExpression()), !dbg !3857
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !3858
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !3859
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3860
  unreachable, !dbg !3861
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #10 !dbg !3862 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !3968
  ret %struct.k_thread* %1, !dbg !3969
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3970 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3974, metadata !DIExpression()), !dbg !3975
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3976, !srcloc !3978
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !3979
  ret void, !dbg !3980
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #10 !dbg !3981 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3982, !srcloc !3984
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !3985
  ret %struct.k_thread* %1, !dbg !3986
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !3987 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3998, metadata !DIExpression()), !dbg !4002
  call void @llvm.dbg.value(metadata i8* %1, metadata !3999, metadata !DIExpression()), !dbg !4002
  %3 = icmp eq i8* %1, null, !dbg !4003
  br i1 %3, label %16, label %4, !dbg !4005

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4006
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4006
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4000, metadata !DIExpression()), !dbg !4002
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4007, !range !4008
  call void @llvm.dbg.value(metadata i32 %7, metadata !4001, metadata !DIExpression()), !dbg !4002
  %8 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !4009
  br i1 %8, label %10, label %9, !dbg !4012

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 176) #27, !dbg !4013
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.12, i32 0, i32 0), i8* noundef nonnull %1) #27, !dbg !4013
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 176) #27, !dbg !4013
  unreachable, !dbg !4013

10:                                               ; preds = %4
  %11 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !4015
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %6, i32 noundef %11) #26, !dbg !4015
  %13 = icmp eq i32 %12, %7, !dbg !4015
  br i1 %13, label %15, label %14, !dbg !4018

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 185) #27, !dbg !4019
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.14, i32 0, i32 0), i8* noundef nonnull %1) #27, !dbg !4019
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 185) #27, !dbg !4019
  unreachable, !dbg !4019

15:                                               ; preds = %10
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !4021
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !4022
  br label %16

16:                                               ; preds = %2, %15
  ret void, !dbg !4023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #4 !dbg !4024 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4028, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.value(metadata i8* %1, metadata !4029, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.value(metadata i8* %1, metadata !4030, metadata !DIExpression()), !dbg !4032
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4033
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4031, metadata !DIExpression()), !dbg !4032
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !4034
  %5 = ptrtoint i8* %4 to i32, !dbg !4035
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !4035
  %7 = sub i32 %5, %6, !dbg !4035
  %8 = lshr i32 %7, 3, !dbg !4036
  ret i32 %8, !dbg !4037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !4038 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4042, metadata !DIExpression()), !dbg !4044
  call void @llvm.dbg.value(metadata i32 %1, metadata !4043, metadata !DIExpression()), !dbg !4044
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4045
  %4 = and i32 %3, 1, !dbg !4046
  %5 = icmp ne i32 %4, 0, !dbg !4045
  ret i1 %5, !dbg !4047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !4048 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4052, metadata !DIExpression()), !dbg !4054
  call void @llvm.dbg.value(metadata i32 %1, metadata !4053, metadata !DIExpression()), !dbg !4054
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4055
  %4 = add i32 %3, %1, !dbg !4056
  ret i32 %4, !dbg !4057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !4058 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4060, metadata !DIExpression()), !dbg !4062
  call void @llvm.dbg.value(metadata i32 %1, metadata !4061, metadata !DIExpression()), !dbg !4062
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !4063
  %4 = sub i32 %1, %3, !dbg !4064
  ret i32 %4, !dbg !4065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #9 !dbg !4066 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4070, metadata !DIExpression()), !dbg !4075
  call void @llvm.dbg.value(metadata i32 %1, metadata !4071, metadata !DIExpression()), !dbg !4075
  call void @llvm.dbg.value(metadata i1 %2, metadata !4072, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4075
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4076
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4073, metadata !DIExpression()), !dbg !4075
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4074, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4075
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4077
  %6 = bitcast i8* %5 to i16*, !dbg !4077
  %7 = load i16, i16* %6, align 2, !dbg !4077
  %8 = and i16 %7, -2, !dbg !4081
  %9 = zext i1 %2 to i16, !dbg !4081
  %10 = or i16 %8, %9, !dbg !4081
  store i16 %10, i16* %6, align 2, !dbg !4077
  ret void, !dbg !4082
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !4083 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4087, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.value(metadata i32 %1, metadata !4088, metadata !DIExpression()), !dbg !4089
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4090
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4092
  br i1 %4, label %7, label %5, !dbg !4093

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4094
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4096
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !4097
  br label %7, !dbg !4098

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4099
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !4101
  br i1 %9, label %13, label %10, !dbg !4102

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !4103
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4105
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !4106
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4107
  call void @llvm.dbg.value(metadata i32 %12, metadata !4088, metadata !DIExpression()), !dbg !4089
  br label %13, !dbg !4108

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4088, metadata !DIExpression()), !dbg !4089
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !4109
  ret void, !dbg !4110
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !4111 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4113, metadata !DIExpression()), !dbg !4118
  call void @llvm.dbg.value(metadata i32 %1, metadata !4114, metadata !DIExpression()), !dbg !4118
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4119, !range !4120
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4121
  call void @llvm.dbg.value(metadata i32 %4, metadata !4115, metadata !DIExpression()), !dbg !4122
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4123
  ret void, !dbg !4124
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4125 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4129, metadata !DIExpression()), !dbg !4134
  call void @llvm.dbg.value(metadata i32 %1, metadata !4130, metadata !DIExpression()), !dbg !4134
  call void @llvm.dbg.value(metadata i32 %2, metadata !4131, metadata !DIExpression()), !dbg !4134
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4135
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4136
  %6 = add i32 %5, %4, !dbg !4137
  call void @llvm.dbg.value(metadata i32 %6, metadata !4132, metadata !DIExpression()), !dbg !4134
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !4138
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4139
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4140
  ret void, !dbg !4141
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !4142 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4144, metadata !DIExpression()), !dbg !4149
  call void @llvm.dbg.value(metadata i32 %1, metadata !4145, metadata !DIExpression()), !dbg !4149
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4150, !range !4120
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4151
  call void @llvm.dbg.value(metadata i32 %4, metadata !4146, metadata !DIExpression()), !dbg !4152
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4153
  ret void, !dbg !4154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !4155 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4159, metadata !DIExpression()), !dbg !4161
  call void @llvm.dbg.value(metadata i32 %1, metadata !4160, metadata !DIExpression()), !dbg !4161
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4162
  %4 = lshr i32 %3, 1, !dbg !4163
  ret i32 %4, !dbg !4164
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #10 !dbg !4165 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4169, metadata !DIExpression()), !dbg !4172
  call void @llvm.dbg.value(metadata i32 %1, metadata !4170, metadata !DIExpression()), !dbg !4172
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !4173
  %4 = add i32 %1, 1, !dbg !4174
  %5 = sub i32 %4, %3, !dbg !4175
  call void @llvm.dbg.value(metadata i32 %5, metadata !4171, metadata !DIExpression()), !dbg !4172
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !4176, !range !4177
  %7 = sub nsw i32 31, %6, !dbg !4178
  ret i32 %7, !dbg !4179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4180 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4184, metadata !DIExpression()), !dbg !4193
  call void @llvm.dbg.value(metadata i32 %1, metadata !4185, metadata !DIExpression()), !dbg !4193
  call void @llvm.dbg.value(metadata i32 %2, metadata !4186, metadata !DIExpression()), !dbg !4193
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !4187, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4193
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !4194
  %5 = load i32, i32* %4, align 4, !dbg !4194
  %6 = icmp eq i32 %5, 0, !dbg !4195
  br i1 %6, label %7, label %12, !dbg !4196

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4197
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4199
  %10 = load i32, i32* %9, align 4, !dbg !4200
  %11 = or i32 %10, %8, !dbg !4200
  store i32 %11, i32* %9, align 4, !dbg !4200
  store i32 %1, i32* %4, align 4, !dbg !4201
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !4202
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !4203
  br label %14, !dbg !4204

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !4189, metadata !DIExpression()), !dbg !4205
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !4206, !range !4207
  call void @llvm.dbg.value(metadata i32 %13, metadata !4192, metadata !DIExpression()), !dbg !4205
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !4208
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4209
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !4210
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !4211
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !4212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !4213 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4215, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata i32 %1, metadata !4216, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata i32 %2, metadata !4217, metadata !DIExpression()), !dbg !4218
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !4219
  ret void, !dbg !4220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !4221 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4223, metadata !DIExpression()), !dbg !4226
  call void @llvm.dbg.value(metadata i32 %1, metadata !4224, metadata !DIExpression()), !dbg !4226
  call void @llvm.dbg.value(metadata i32 %2, metadata !4225, metadata !DIExpression()), !dbg !4226
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !4227
  ret void, !dbg !4228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #7 !dbg !4229 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4231, metadata !DIExpression()), !dbg !4233
  call void @llvm.dbg.value(metadata i32 %1, metadata !4232, metadata !DIExpression()), !dbg !4233
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !4234
  ret i32 %3, !dbg !4235
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4236 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4240, metadata !DIExpression()), !dbg !4245
  call void @llvm.dbg.value(metadata i32 %1, metadata !4241, metadata !DIExpression()), !dbg !4245
  call void @llvm.dbg.value(metadata i32 %2, metadata !4242, metadata !DIExpression()), !dbg !4245
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4246
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4243, metadata !DIExpression()), !dbg !4245
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4244, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4245
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4244, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4245
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4247
  call void @llvm.dbg.value(metadata i8* %5, metadata !4244, metadata !DIExpression()), !dbg !4245
  %6 = bitcast i8* %5 to i16*, !dbg !4248
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4251
  %8 = load i16, i16* %7, align 2, !dbg !4251
  %9 = zext i16 %8 to i32, !dbg !4251
  ret i32 %9, !dbg !4252
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #4 !dbg !4253 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4257, metadata !DIExpression()), !dbg !4258
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4259
  ret %struct.chunk_unit_t* %2, !dbg !4260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #6 !dbg !4261 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4265, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %1, metadata !4266, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %2, metadata !4267, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 %3, metadata !4268, metadata !DIExpression()), !dbg !4271
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4272
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !4269, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !4270, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4271
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !4273
  call void @llvm.dbg.value(metadata i8* %6, metadata !4270, metadata !DIExpression()), !dbg !4271
  %7 = trunc i32 %3 to i16, !dbg !4274
  %8 = bitcast i8* %6 to i16*, !dbg !4277
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !4278
  store i16 %7, i16* %9, align 2, !dbg !4279
  ret void, !dbg !4280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #4 !dbg !4281 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4285, metadata !DIExpression()), !dbg !4286
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !4287
  ret i32 %2, !dbg !4288
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !4289 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4293, metadata !DIExpression()), !dbg !4295
  call void @llvm.dbg.value(metadata i32 %1, metadata !4294, metadata !DIExpression()), !dbg !4295
  %3 = add i32 %1, 4, !dbg !4296
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !4297
  ret i32 %4, !dbg !4298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #4 !dbg !4299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4303, metadata !DIExpression()), !dbg !4304
  %2 = add i32 %0, 7, !dbg !4305
  %3 = lshr i32 %2, 3, !dbg !4306
  ret i32 %3, !dbg !4307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !4308 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4312, metadata !DIExpression()), !dbg !4315
  call void @llvm.dbg.value(metadata i32 %1, metadata !4313, metadata !DIExpression()), !dbg !4315
  call void @llvm.dbg.value(metadata i32 %2, metadata !4314, metadata !DIExpression()), !dbg !4315
  %4 = shl i32 %2, 1, !dbg !4316
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !4317
  ret void, !dbg !4318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !4319 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4321, metadata !DIExpression()), !dbg !4324
  call void @llvm.dbg.value(metadata i32 %1, metadata !4322, metadata !DIExpression()), !dbg !4324
  call void @llvm.dbg.value(metadata i32 %2, metadata !4323, metadata !DIExpression()), !dbg !4324
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !4325
  ret void, !dbg !4326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4327 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4329, metadata !DIExpression()), !dbg !4337
  call void @llvm.dbg.value(metadata i32 %1, metadata !4330, metadata !DIExpression()), !dbg !4337
  call void @llvm.dbg.value(metadata i32 %2, metadata !4331, metadata !DIExpression()), !dbg !4337
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4338
  call void @llvm.dbg.value(metadata %struct._sfnode* %4, metadata !4332, metadata !DIExpression()), !dbg !4337
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4339
  %6 = icmp eq i32 %5, %1, !dbg !4340
  br i1 %6, label %7, label %14, !dbg !4341

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4342
  %9 = xor i32 %8, -1, !dbg !4344
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4345
  %11 = load i32, i32* %10, align 4, !dbg !4346
  %12 = and i32 %11, %9, !dbg !4346
  store i32 %12, i32* %10, align 4, !dbg !4346
  %13 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %4, i32 0, i32 0, !dbg !4347
  store i32 0, i32* %13, align 4, !dbg !4348
  br label %17, !dbg !4349

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4350
  call void @llvm.dbg.value(metadata i32 %15, metadata !4333, metadata !DIExpression()), !dbg !4351
  call void @llvm.dbg.value(metadata i32 %5, metadata !4336, metadata !DIExpression()), !dbg !4351
  %16 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %4, i32 0, i32 0, !dbg !4352
  store i32 %5, i32* %16, align 4, !dbg !4353
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !4354
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !4355
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4356
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #7 !dbg !4357 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4359, metadata !DIExpression()), !dbg !4361
  call void @llvm.dbg.value(metadata i32 %1, metadata !4360, metadata !DIExpression()), !dbg !4361
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4362
  ret i32 %3, !dbg !4363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #7 !dbg !4364 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4368, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata i8* %1, metadata !4369, metadata !DIExpression()), !dbg !4375
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4376
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4376
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4370, metadata !DIExpression()), !dbg !4375
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !4377
  call void @llvm.dbg.value(metadata i32 %5, metadata !4371, metadata !DIExpression()), !dbg !4375
  %6 = ptrtoint i8* %1 to i32, !dbg !4378
  call void @llvm.dbg.value(metadata i32 %6, metadata !4372, metadata !DIExpression()), !dbg !4375
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !4379
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4379
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4380
  call void @llvm.dbg.value(metadata i32 %9, metadata !4373, metadata !DIExpression()), !dbg !4375
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !4381
  %11 = shl i32 %10, 3, !dbg !4382
  call void @llvm.dbg.value(metadata i32 %11, metadata !4374, metadata !DIExpression()), !dbg !4375
  %12 = sub i32 %9, %6, !dbg !4383
  %13 = add i32 %12, %11, !dbg !4384
  ret i32 %13, !dbg !4385
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4386 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4390, metadata !DIExpression()), !dbg !4396
  call void @llvm.dbg.value(metadata i32 %1, metadata !4391, metadata !DIExpression()), !dbg !4396
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4397
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4397
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4392, metadata !DIExpression()), !dbg !4396
  %5 = icmp eq i32 %1, 0, !dbg !4398
  br i1 %5, label %19, label %6, !dbg !4400

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4401
  br i1 %7, label %19, label %8, !dbg !4402

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4403, !range !4008
  call void @llvm.dbg.value(metadata i32 %9, metadata !4394, metadata !DIExpression()), !dbg !4396
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !4404
  call void @llvm.dbg.value(metadata i32 %10, metadata !4395, metadata !DIExpression()), !dbg !4396
  %11 = icmp eq i32 %10, 0, !dbg !4405
  br i1 %11, label %19, label %12, !dbg !4407

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4408
  %14 = icmp ugt i32 %13, %9, !dbg !4410
  br i1 %14, label %15, label %17, !dbg !4411

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4412
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !4414
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !4415
  br label %17, !dbg !4416

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !4417
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4418
  call void @llvm.dbg.value(metadata i8* %18, metadata !4393, metadata !DIExpression()), !dbg !4396
  br label %19, !dbg !4419

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4396
  ret i8* %20, !dbg !4420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #7 !dbg !4421 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4425, metadata !DIExpression()), !dbg !4427
  call void @llvm.dbg.value(metadata i32 %1, metadata !4426, metadata !DIExpression()), !dbg !4427
  %3 = lshr i32 %1, 3, !dbg !4428
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4429
  %5 = load i32, i32* %4, align 4, !dbg !4429
  %6 = icmp uge i32 %3, %5, !dbg !4430
  ret i1 %6, !dbg !4431
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4432 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4436, metadata !DIExpression()), !dbg !4451
  call void @llvm.dbg.value(metadata i32 %1, metadata !4437, metadata !DIExpression()), !dbg !4451
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4452
  call void @llvm.dbg.value(metadata i32 %3, metadata !4438, metadata !DIExpression()), !dbg !4451
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4439, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4451
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4453
  %5 = load i32, i32* %4, align 4, !dbg !4453
  %6 = icmp eq i32 %5, 0, !dbg !4454
  br i1 %6, label %19, label %7, !dbg !4455

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4456
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4457
  call void @llvm.dbg.value(metadata i32 %9, metadata !4443, metadata !DIExpression()), !dbg !4457
  call void @llvm.dbg.value(metadata i32 %8, metadata !4444, metadata !DIExpression()), !dbg !4458
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4459
  %11 = icmp ult i32 %10, %1, !dbg !4461
  br i1 %11, label %13, label %12, !dbg !4462

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !4463
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4465
  store i32 %14, i32* %4, align 4, !dbg !4466
  %15 = add nsw i32 %9, -1, !dbg !4467
  call void @llvm.dbg.value(metadata i32 %15, metadata !4443, metadata !DIExpression()), !dbg !4457
  %16 = icmp eq i32 %15, 0, !dbg !4467
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4468
  br i1 %18, label %19, label %7, !dbg !4468, !llvm.loop !4469

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4472
  %21 = load i32, i32* %20, align 4, !dbg !4472
  %22 = add nsw i32 %3, 1, !dbg !4473
  %23 = shl nsw i32 -1, %22, !dbg !4473
  %24 = and i32 %21, %23, !dbg !4474
  call void @llvm.dbg.value(metadata i32 %24, metadata !4446, metadata !DIExpression()), !dbg !4451
  %25 = icmp eq i32 %24, 0, !dbg !4475
  br i1 %25, label %30, label %26, !dbg !4476

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4477, !range !4177
  call void @llvm.dbg.value(metadata i32 %27, metadata !4447, metadata !DIExpression()), !dbg !4478
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4479
  %29 = load i32, i32* %28, align 4, !dbg !4479
  call void @llvm.dbg.value(metadata i32 %29, metadata !4450, metadata !DIExpression()), !dbg !4478
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !4480
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4451
  ret i32 %31, !dbg !4481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4482 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4484, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i32 %1, metadata !4485, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i32 %2, metadata !4486, metadata !DIExpression()), !dbg !4490
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4491
  call void @llvm.dbg.value(metadata i32 %4, metadata !4487, metadata !DIExpression()), !dbg !4490
  %5 = sub i32 %2, %1, !dbg !4492
  call void @llvm.dbg.value(metadata i32 %5, metadata !4488, metadata !DIExpression()), !dbg !4490
  %6 = sub i32 %4, %5, !dbg !4493
  call void @llvm.dbg.value(metadata i32 %6, metadata !4489, metadata !DIExpression()), !dbg !4490
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4494
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !4495
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !4496
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4497
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4498
  ret void, !dbg !4499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !4500 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4504, metadata !DIExpression()), !dbg !4508
  call void @llvm.dbg.value(metadata i32 %1, metadata !4505, metadata !DIExpression()), !dbg !4508
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4509
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4506, metadata !DIExpression()), !dbg !4508
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4510
  call void @llvm.dbg.value(metadata i8* %4, metadata !4507, metadata !DIExpression()), !dbg !4508
  ret i8* %4, !dbg !4511
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !4512 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4516, metadata !DIExpression()), !dbg !4528
  call void @llvm.dbg.value(metadata i32 %1, metadata !4517, metadata !DIExpression()), !dbg !4528
  call void @llvm.dbg.value(metadata i32 %2, metadata !4518, metadata !DIExpression()), !dbg !4528
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4529
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4529
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4519, metadata !DIExpression()), !dbg !4528
  %6 = sub i32 0, %1, !dbg !4530
  %7 = and i32 %6, %1, !dbg !4531
  call void @llvm.dbg.value(metadata i32 %7, metadata !4521, metadata !DIExpression()), !dbg !4528
  %8 = icmp eq i32 %7, %1, !dbg !4532
  br i1 %8, label %13, label %9, !dbg !4534

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4535
  call void @llvm.dbg.value(metadata i32 %10, metadata !4517, metadata !DIExpression()), !dbg !4528
  %11 = icmp ult i32 %7, 4, !dbg !4537
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4537
  br label %17, !dbg !4537

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4538
  br i1 %14, label %15, label %17, !dbg !4541

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !4542
  br label %61, !dbg !4544

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4528
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4545
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4517, metadata !DIExpression()), !dbg !4528
  call void @llvm.dbg.value(metadata i32 %19, metadata !4520, metadata !DIExpression()), !dbg !4528
  call void @llvm.dbg.value(metadata i32 %18, metadata !4521, metadata !DIExpression()), !dbg !4528
  %21 = add i32 %20, -1, !dbg !4546
  %22 = tail call i32 @llvm.ctpop.i32(i32 %20), !dbg !4546, !range !4177
  %23 = icmp ult i32 %22, 2, !dbg !4546
  br i1 %23, label %25, label %24, !dbg !4549

24:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 324) #27, !dbg !4550
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.16, i32 0, i32 0)) #27, !dbg !4550
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 324) #27, !dbg !4550
  unreachable, !dbg !4550

25:                                               ; preds = %17
  %26 = icmp eq i32 %2, 0, !dbg !4552
  br i1 %26, label %61, label %27, !dbg !4554

27:                                               ; preds = %25
  %28 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !4555
  br i1 %28, label %61, label %29, !dbg !4556

29:                                               ; preds = %27
  %30 = sub i32 %2, %19, !dbg !4557
  %31 = add i32 %30, %20, !dbg !4558
  %32 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %31) #26, !dbg !4559, !range !4008
  call void @llvm.dbg.value(metadata i32 %32, metadata !4522, metadata !DIExpression()), !dbg !4528
  %33 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %32) #26, !dbg !4560
  call void @llvm.dbg.value(metadata i32 %33, metadata !4523, metadata !DIExpression()), !dbg !4528
  %34 = icmp eq i32 %33, 0, !dbg !4561
  br i1 %34, label %61, label %35, !dbg !4563

35:                                               ; preds = %29
  %36 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %33) #26, !dbg !4564
  call void @llvm.dbg.value(metadata i8* %36, metadata !4524, metadata !DIExpression()), !dbg !4528
  %37 = getelementptr inbounds i8, i8* %36, i32 %18, !dbg !4565
  %38 = ptrtoint i8* %37 to i32, !dbg !4565
  %39 = add i32 %21, %38, !dbg !4565
  %40 = sub i32 0, %20, !dbg !4565
  %41 = and i32 %39, %40, !dbg !4565
  %42 = inttoptr i32 %41 to i8*, !dbg !4566
  %43 = sub i32 0, %18, !dbg !4567
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !4567
  call void @llvm.dbg.value(metadata i8* %44, metadata !4524, metadata !DIExpression()), !dbg !4528
  %45 = getelementptr inbounds i8, i8* %44, i32 %2, !dbg !4568
  %46 = ptrtoint i8* %45 to i32, !dbg !4568
  %47 = add i32 %46, 7, !dbg !4568
  %48 = and i32 %47, -8, !dbg !4568
  call void @llvm.dbg.value(metadata i32 %48, metadata !4525, metadata !DIExpression()), !dbg !4528
  %49 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %44) #26, !dbg !4569
  call void @llvm.dbg.value(metadata i32 %49, metadata !4526, metadata !DIExpression()), !dbg !4528
  %50 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !4570
  %51 = ptrtoint %struct.chunk_unit_t* %50 to i32, !dbg !4571
  %52 = sub i32 %48, %51, !dbg !4571
  %53 = ashr exact i32 %52, 3, !dbg !4571
  call void @llvm.dbg.value(metadata i32 %53, metadata !4527, metadata !DIExpression()), !dbg !4528
  %54 = icmp ugt i32 %49, %33, !dbg !4572
  br i1 %54, label %55, label %56, !dbg !4574

55:                                               ; preds = %35
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %33, i32 noundef %49) #26, !dbg !4575
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %33) #26, !dbg !4577
  br label %56, !dbg !4578

56:                                               ; preds = %55, %35
  %57 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !4579
  %58 = icmp ugt i32 %57, %53, !dbg !4581
  br i1 %58, label %59, label %60, !dbg !4582

59:                                               ; preds = %56
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %49, i32 noundef %53) #26, !dbg !4583
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %53) #26, !dbg !4585
  br label %60, !dbg !4586

60:                                               ; preds = %59, %56
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %49, i1 noundef zeroext true) #26, !dbg !4587
  br label %61

61:                                               ; preds = %60, %29, %25, %27, %15
  %62 = phi i8* [ %16, %15 ], [ null, %27 ], [ null, %25 ], [ %44, %60 ], [ null, %29 ], !dbg !4528
  ret i8* %62, !dbg !4588
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4589 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4593, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i8* %1, metadata !4594, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i32 %2, metadata !4595, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i32 %3, metadata !4596, metadata !DIExpression()), !dbg !4612
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4613
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4613
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4597, metadata !DIExpression()), !dbg !4612
  %7 = icmp eq i8* %1, null, !dbg !4614
  br i1 %7, label %8, label %10, !dbg !4616

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4617
  br label %63, !dbg !4619

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4620
  br i1 %11, label %12, label %13, !dbg !4622

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4623
  br label %63, !dbg !4625

13:                                               ; preds = %10
  %14 = add i32 %2, -1, !dbg !4626
  %15 = tail call i32 @llvm.ctpop.i32(i32 %2), !dbg !4626, !range !4177
  %16 = icmp ult i32 %15, 2, !dbg !4626
  br i1 %16, label %18, label %17, !dbg !4629

17:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 393) #27, !dbg !4630
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.16, i32 0, i32 0)) #27, !dbg !4630
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 393) #27, !dbg !4630
  unreachable, !dbg !4630

18:                                               ; preds = %13
  %19 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !4632
  br i1 %19, label %63, label %20, !dbg !4634

20:                                               ; preds = %18
  %21 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4635, !range !4008
  call void @llvm.dbg.value(metadata i32 %21, metadata !4598, metadata !DIExpression()), !dbg !4612
  %22 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !4636
  call void @llvm.dbg.value(metadata i32 %22, metadata !4599, metadata !DIExpression()), !dbg !4612
  %23 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !4637
  %24 = ptrtoint i8* %1 to i32, !dbg !4638
  %25 = ptrtoint i8* %23 to i32, !dbg !4638
  %26 = sub i32 %24, %25, !dbg !4638
  call void @llvm.dbg.value(metadata i32 %26, metadata !4600, metadata !DIExpression()), !dbg !4612
  %27 = add i32 %26, %3, !dbg !4639
  %28 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %27) #26, !dbg !4640
  call void @llvm.dbg.value(metadata i32 %28, metadata !4601, metadata !DIExpression()), !dbg !4612
  %29 = icmp eq i32 %2, 0, !dbg !4641
  %30 = and i32 %14, %24
  %31 = icmp eq i32 %30, 0
  %32 = or i1 %29, %31, !dbg !4642
  br i1 %32, label %33, label %53, !dbg !4642

33:                                               ; preds = %20
  %34 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !4643
  %35 = icmp eq i32 %28, %34, !dbg !4644
  br i1 %35, label %63, label %36, !dbg !4645

36:                                               ; preds = %33
  %37 = icmp ult i32 %28, %34, !dbg !4646
  br i1 %37, label %38, label %40, !dbg !4647

38:                                               ; preds = %36
  %39 = add i32 %28, %21, !dbg !4648
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %39) #26, !dbg !4650
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #26, !dbg !4651
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %39) #26, !dbg !4652
  br label %63, !dbg !4653

40:                                               ; preds = %36
  %41 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4654
  br i1 %41, label %53, label %42, !dbg !4655

42:                                               ; preds = %40
  %43 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4656
  %44 = add i32 %43, %34, !dbg !4657
  %45 = icmp ult i32 %44, %28, !dbg !4658
  br i1 %45, label %53, label %46, !dbg !4659

46:                                               ; preds = %42
  %47 = sub i32 %28, %34, !dbg !4660
  call void @llvm.dbg.value(metadata i32 %47, metadata !4602, metadata !DIExpression()), !dbg !4661
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4662
  %48 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4663
  %49 = icmp ult i32 %47, %48, !dbg !4665
  br i1 %49, label %50, label %52, !dbg !4666

50:                                               ; preds = %46
  %51 = add i32 %47, %22, !dbg !4667
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %22, i32 noundef %51) #26, !dbg !4669
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %51) #26, !dbg !4670
  br label %52, !dbg !4671

52:                                               ; preds = %50, %46
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %22) #26, !dbg !4672
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #26, !dbg !4673
  br label %63

53:                                               ; preds = %20, %42, %40
  %54 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4674
  call void @llvm.dbg.value(metadata i8* %54, metadata !4608, metadata !DIExpression()), !dbg !4612
  %55 = icmp eq i8* %54, null, !dbg !4675
  br i1 %55, label %63, label %56, !dbg !4676

56:                                               ; preds = %53
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !4677, !range !4120
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %57) #26, !dbg !4678
  %59 = sub i32 %58, %26, !dbg !4679
  call void @llvm.dbg.value(metadata i32 %59, metadata !4609, metadata !DIExpression()), !dbg !4680
  %60 = icmp ult i32 %59, %3, !dbg !4681
  %61 = select i1 %60, i32 %59, i32 %3, !dbg !4681
  %62 = tail call i8* @memcpy(i8* noundef nonnull %54, i8* noundef nonnull %1, i32 noundef %61) #27, !dbg !4682
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4683
  br label %63, !dbg !4684

63:                                               ; preds = %38, %52, %33, %56, %53, %18, %12, %8
  %64 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %18 ], [ %1, %38 ], [ %1, %52 ], [ %1, %33 ], [ %54, %56 ], [ null, %53 ], !dbg !4612
  ret i8* %64, !dbg !4685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !4686 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4690, metadata !DIExpression()), !dbg !4692
  call void @llvm.dbg.value(metadata i32 %1, metadata !4691, metadata !DIExpression()), !dbg !4692
  %3 = shl i32 %1, 3, !dbg !4693
  %4 = add i32 %3, -4, !dbg !4694
  ret i32 %4, !dbg !4695
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !4696 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4700, metadata !DIExpression()), !dbg !4711
  call void @llvm.dbg.value(metadata i8* %1, metadata !4701, metadata !DIExpression()), !dbg !4711
  call void @llvm.dbg.value(metadata i32 %2, metadata !4702, metadata !DIExpression()), !dbg !4711
  %4 = icmp ult i32 %2, 262144, !dbg !4712
  br i1 %4, label %6, label %5, !dbg !4717

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 491) #27, !dbg !4718
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.18, i32 0, i32 0)) #27, !dbg !4718
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 491) #27, !dbg !4718
  unreachable, !dbg !4718

6:                                                ; preds = %3
  %7 = icmp ugt i32 %2, 4, !dbg !4720
  br i1 %7, label %9, label %8, !dbg !4723

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 498) #27, !dbg !4724
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i32 0, i32 0)) #27, !dbg !4724
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 498) #27, !dbg !4724
  unreachable, !dbg !4724

9:                                                ; preds = %6
  %10 = add nsw i32 %2, -4, !dbg !4726
  call void @llvm.dbg.value(metadata i32 %10, metadata !4702, metadata !DIExpression()), !dbg !4711
  %11 = ptrtoint i8* %1 to i32, !dbg !4727
  %12 = add i32 %11, 7, !dbg !4727
  %13 = and i32 %12, -8, !dbg !4727
  call void @llvm.dbg.value(metadata i32 %13, metadata !4703, metadata !DIExpression()), !dbg !4711
  %14 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !4728
  %15 = ptrtoint i8* %14 to i32, !dbg !4728
  %16 = and i32 %15, -8, !dbg !4728
  call void @llvm.dbg.value(metadata i32 %16, metadata !4704, metadata !DIExpression()), !dbg !4711
  %17 = sub i32 %16, %13, !dbg !4729
  %18 = lshr exact i32 %17, 3, !dbg !4730
  call void @llvm.dbg.value(metadata i32 %18, metadata !4705, metadata !DIExpression()), !dbg !4711
  %19 = tail call fastcc i32 @chunksz(i32 noundef 16) #26, !dbg !4731
  %20 = icmp ugt i32 %18, %19, !dbg !4731
  br i1 %20, label %22, label %21, !dbg !4734

21:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 507) #27, !dbg !4735
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i32 0, i32 0)) #27, !dbg !4735
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 507) #27, !dbg !4735
  unreachable, !dbg !4735

22:                                               ; preds = %9
  %23 = inttoptr i32 %13 to %struct.z_heap*, !dbg !4737
  call void @llvm.dbg.value(metadata %struct.z_heap* %23, metadata !4706, metadata !DIExpression()), !dbg !4711
  %24 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4738
  store %struct.z_heap* %23, %struct.z_heap** %24, align 4, !dbg !4739
  %25 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 1, !dbg !4740
  store i32 %18, i32* %25, align 8, !dbg !4741
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 2, !dbg !4742
  store i32 0, i32* %26, align 4, !dbg !4743
  %27 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %23, i32 noundef %18) #26, !dbg !4744
  call void @llvm.dbg.value(metadata i32 %27, metadata !4707, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4711
  %28 = shl i32 %27, 2, !dbg !4745
  %29 = add i32 %28, 20, !dbg !4746
  %30 = tail call fastcc i32 @chunksz(i32 noundef %29) #26, !dbg !4747
  call void @llvm.dbg.value(metadata i32 %30, metadata !4708, metadata !DIExpression()), !dbg !4711
  %31 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %23) #26, !dbg !4748
  %32 = add i32 %31, %30, !dbg !4748
  %33 = icmp ugt i32 %32, %18, !dbg !4748
  br i1 %33, label %36, label %34, !dbg !4751

34:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, metadata !4709, metadata !DIExpression()), !dbg !4752
  %35 = icmp slt i32 %27, 0, !dbg !4753
  br i1 %35, label %37, label %39, !dbg !4755

36:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 524) #27, !dbg !4756
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i32 0, i32 0)) #27, !dbg !4756
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 524) #27, !dbg !4756
  unreachable, !dbg !4756

37:                                               ; preds = %39, %34
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef %30) #26, !dbg !4758
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef 0) #26, !dbg !4759
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4760
  %38 = sub i32 %18, %30, !dbg !4761
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %38) #26, !dbg !4762
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %30) #26, !dbg !4763
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef 0) #26, !dbg !4764
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef %38) #26, !dbg !4765
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i1 noundef zeroext true) #26, !dbg !4766
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %23, i32 noundef %30) #26, !dbg !4767
  ret void, !dbg !4768

39:                                               ; preds = %34, %39
  %40 = phi i32 [ %42, %39 ], [ 0, %34 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !4709, metadata !DIExpression()), !dbg !4752
  %41 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 3, i32 %40, i32 0, !dbg !4769
  store i32 0, i32* %41, align 4, !dbg !4771
  %42 = add nuw i32 %40, 1, !dbg !4772
  call void @llvm.dbg.value(metadata i32 %42, metadata !4709, metadata !DIExpression()), !dbg !4752
  %43 = icmp eq i32 %40, %27, !dbg !4753
  br i1 %43, label %37, label %39, !dbg !4755, !llvm.loop !4773
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4775 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4788, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4785, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i8* %1, metadata !4786, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i8* %2, metadata !4787, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i32 %4, metadata !4789, metadata !DIExpression()), !dbg !4916
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4917
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4917
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4790, metadata !DIExpression()), !dbg !4918
  call void @llvm.dbg.value(metadata i32 0, metadata !4794, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i1 undef, metadata !4796, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4916
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4919

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4919

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4920
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4788, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i8* %30, metadata !4787, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i32 %29, metadata !4794, metadata !DIExpression()), !dbg !4916
  %31 = load i8, i8* %30, align 1, !dbg !4921
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4919

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4921
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4922
  call void @llvm.dbg.value(metadata i8* %34, metadata !4787, metadata !DIExpression()), !dbg !4916
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !4922
  call void @llvm.dbg.value(metadata i32 %35, metadata !4798, metadata !DIExpression()), !dbg !4923
  %36 = icmp slt i32 %35, 0, !dbg !4924
  %37 = add i32 %29, 1, !dbg !4922
  call void @llvm.dbg.value(metadata i32 undef, metadata !4794, metadata !DIExpression()), !dbg !4916
  br i1 %36, label %365, label %28, !llvm.loop !4926

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4928
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4803, metadata !DIExpression()), !dbg !4929
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4929
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4848, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4851, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.value(metadata i8* %30, metadata !4854, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.value(metadata i32 -1, metadata !4855, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.value(metadata i32 -1, metadata !4856, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.value(metadata i8* null, metadata !4857, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.value(metadata i8* %14, metadata !4858, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.value(metadata i8 0, metadata !4859, metadata !DIExpression()), !dbg !4930
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4931
  call void @llvm.dbg.value(metadata i8* %39, metadata !4787, metadata !DIExpression()), !dbg !4916
  %40 = load i24, i24* %15, align 8, !dbg !4932
  %41 = and i24 %40, 256, !dbg !4932
  %42 = icmp eq i24 %41, 0, !dbg !4932
  br i1 %42, label %51, label %43, !dbg !4934

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4935
  call void @llvm.dbg.value(metadata i8* %44, metadata !4788, metadata !DIExpression()), !dbg !4916
  %45 = bitcast i8* %27 to i32*, !dbg !4935
  %46 = load i32, i32* %45, align 4, !dbg !4935
  call void @llvm.dbg.value(metadata i32 %46, metadata !4855, metadata !DIExpression()), !dbg !4930
  %47 = icmp slt i32 %46, 0, !dbg !4937
  br i1 %47, label %48, label %56, !dbg !4939

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4940
  store i24 %49, i24* %15, align 8, !dbg !4940
  %50 = sub nsw i32 0, %46, !dbg !4942
  call void @llvm.dbg.value(metadata i32 %50, metadata !4855, metadata !DIExpression()), !dbg !4930
  br label %56, !dbg !4943

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4944
  %53 = icmp eq i24 %52, 0, !dbg !4944
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4946
  br label %56, !dbg !4946

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4947
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4930
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4788, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i32 %58, metadata !4855, metadata !DIExpression()), !dbg !4930
  %60 = and i24 %57, 1024, !dbg !4947
  %61 = icmp eq i24 %60, 0, !dbg !4947
  br i1 %61, label %69, label %62, !dbg !4948

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4949
  call void @llvm.dbg.value(metadata i8* %63, metadata !4788, metadata !DIExpression()), !dbg !4916
  %64 = bitcast i8* %59 to i32*, !dbg !4949
  %65 = load i32, i32* %64, align 4, !dbg !4949
  call void @llvm.dbg.value(metadata i32 %65, metadata !4860, metadata !DIExpression()), !dbg !4950
  %66 = icmp slt i32 %65, 0, !dbg !4951
  br i1 %66, label %67, label %74, !dbg !4953

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4954
  store i24 %68, i24* %15, align 8, !dbg !4954
  br label %74, !dbg !4956

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4957
  %71 = icmp eq i24 %70, 0, !dbg !4957
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4959
  br label %74, !dbg !4959

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4960
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4930
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4930
  call void @llvm.dbg.value(metadata i8* %77, metadata !4788, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i32 %76, metadata !4856, metadata !DIExpression()), !dbg !4930
  store i32 0, i32* %16, align 4, !dbg !4961
  store i32 0, i32* %17, align 8, !dbg !4962
  %78 = lshr i24 %75, 16, !dbg !4960
  call void @llvm.dbg.value(metadata i24 %78, metadata !4863, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4930
  %79 = lshr i24 %75, 11, !dbg !4963
  %80 = and i24 %79, 15, !dbg !4963
  %81 = zext i24 %80 to i32, !dbg !4963
  call void @llvm.dbg.value(metadata i32 %81, metadata !4864, metadata !DIExpression()), !dbg !4930
  %82 = trunc i24 %78 to i3, !dbg !4964
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4964

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4965

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4968
  call void @llvm.dbg.value(metadata i8* %85, metadata !4788, metadata !DIExpression()), !dbg !4916
  %86 = bitcast i8* %77 to i32*, !dbg !4968
  %87 = load i32, i32* %86, align 4, !dbg !4968
  %88 = sext i32 %87 to i64, !dbg !4968
  store i64 %88, i64* %20, align 8, !dbg !4970
  br label %115, !dbg !4971

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4972
  call void @llvm.dbg.value(metadata i8* %90, metadata !4788, metadata !DIExpression()), !dbg !4916
  %91 = bitcast i8* %77 to i32*, !dbg !4972
  %92 = load i32, i32* %91, align 4, !dbg !4972
  %93 = sext i32 %92 to i64, !dbg !4972
  store i64 %93, i64* %20, align 8, !dbg !4975
  br label %115, !dbg !4976

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4977
  %96 = add i32 %95, 7, !dbg !4977
  %97 = and i32 %96, -8, !dbg !4977
  %98 = inttoptr i32 %97 to i8*, !dbg !4977
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4977
  call void @llvm.dbg.value(metadata i8* %99, metadata !4788, metadata !DIExpression()), !dbg !4916
  %100 = inttoptr i32 %97 to i64*, !dbg !4977
  %101 = load i64, i64* %100, align 8, !dbg !4977
  store i64 %101, i64* %20, align 8, !dbg !4978
  br label %115, !dbg !4979

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4980
  %104 = add i32 %103, 7, !dbg !4980
  %105 = and i32 %104, -8, !dbg !4980
  %106 = inttoptr i32 %105 to i8*, !dbg !4980
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4980
  call void @llvm.dbg.value(metadata i8* %107, metadata !4788, metadata !DIExpression()), !dbg !4916
  %108 = inttoptr i32 %105 to i64*, !dbg !4980
  %109 = load i64, i64* %108, align 8, !dbg !4980
  store i64 %109, i64* %20, align 8, !dbg !4981
  br label %115, !dbg !4982

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4983
  call void @llvm.dbg.value(metadata i8* %111, metadata !4788, metadata !DIExpression()), !dbg !4916
  %112 = bitcast i8* %77 to i32*, !dbg !4983
  %113 = load i32, i32* %112, align 4, !dbg !4983
  %114 = sext i32 %113 to i64, !dbg !4984
  store i64 %114, i64* %20, align 8, !dbg !4985
  br label %115, !dbg !4986

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4987
  call void @llvm.dbg.value(metadata i8* %117, metadata !4788, metadata !DIExpression()), !dbg !4916
  %118 = trunc i24 %79 to i4, !dbg !4988
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4988

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4989
  %121 = ashr exact i64 %120, 56, !dbg !4989
  store i64 %121, i64* %20, align 8, !dbg !4992
  br label %177, !dbg !4993

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4994
  %124 = ashr exact i64 %123, 48, !dbg !4994
  store i64 %124, i64* %20, align 8, !dbg !4997
  br label %177, !dbg !4998

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4999

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5002
  call void @llvm.dbg.value(metadata i8* %127, metadata !4788, metadata !DIExpression()), !dbg !4916
  %128 = bitcast i8* %77 to i32*, !dbg !5002
  %129 = load i32, i32* %128, align 4, !dbg !5002
  %130 = zext i32 %129 to i64, !dbg !5002
  store i64 %130, i64* %20, align 8, !dbg !5004
  br label %157, !dbg !5005

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5006
  call void @llvm.dbg.value(metadata i8* %132, metadata !4788, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i8* %132, metadata !4788, metadata !DIExpression()), !dbg !4916
  %133 = bitcast i8* %77 to i32*, !dbg !5006
  %134 = load i32, i32* %133, align 4, !dbg !5006
  %135 = zext i32 %134 to i64, !dbg !5006
  store i64 %135, i64* %20, align 8, !dbg !5006
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5008
  %138 = add i32 %137, 7, !dbg !5008
  %139 = and i32 %138, -8, !dbg !5008
  %140 = inttoptr i32 %139 to i8*, !dbg !5008
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5008
  call void @llvm.dbg.value(metadata i8* %141, metadata !4788, metadata !DIExpression()), !dbg !4916
  %142 = inttoptr i32 %139 to i64*, !dbg !5008
  %143 = load i64, i64* %142, align 8, !dbg !5008
  store i64 %143, i64* %20, align 8, !dbg !5009
  br label %157, !dbg !5010

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5011
  %146 = add i32 %145, 7, !dbg !5011
  %147 = and i32 %146, -8, !dbg !5011
  %148 = inttoptr i32 %147 to i8*, !dbg !5011
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5011
  call void @llvm.dbg.value(metadata i8* %149, metadata !4788, metadata !DIExpression()), !dbg !4916
  %150 = inttoptr i32 %147 to i64*, !dbg !5011
  %151 = load i64, i64* %150, align 8, !dbg !5011
  store i64 %151, i64* %20, align 8, !dbg !5012
  br label %157, !dbg !5013

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5014
  call void @llvm.dbg.value(metadata i8* %153, metadata !4788, metadata !DIExpression()), !dbg !4916
  %154 = bitcast i8* %77 to i32*, !dbg !5014
  %155 = load i32, i32* %154, align 4, !dbg !5014
  %156 = zext i32 %155 to i64, !dbg !5015
  store i64 %156, i64* %20, align 8, !dbg !5016
  br label %157, !dbg !5017

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5018
  call void @llvm.dbg.value(metadata i8* %159, metadata !4788, metadata !DIExpression()), !dbg !4916
  %160 = trunc i24 %79 to i4, !dbg !5019
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5019

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5020
  store i64 %162, i64* %20, align 8, !dbg !5023
  br label %177, !dbg !5024

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5025
  store i64 %164, i64* %20, align 8, !dbg !5028
  br label %177, !dbg !5029

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5030
  %167 = add i32 %166, 7, !dbg !5030
  %168 = and i32 %167, -8, !dbg !5030
  %169 = inttoptr i32 %168 to i8*, !dbg !5030
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5030
  call void @llvm.dbg.value(metadata i8* %170, metadata !4788, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i8* %170, metadata !4788, metadata !DIExpression()), !dbg !4916
  %171 = inttoptr i32 %168 to double*, !dbg !5030
  %172 = load double, double* %171, align 8, !dbg !5030
  store double %172, double* %19, align 8, !dbg !5030
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5034
  call void @llvm.dbg.value(metadata i8* %174, metadata !4788, metadata !DIExpression()), !dbg !4916
  %175 = bitcast i8* %77 to i8**, !dbg !5034
  %176 = load i8*, i8** %175, align 4, !dbg !5034
  store i8* %176, i8** %18, align 8, !dbg !5037
  br label %177, !dbg !5038

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4930
  call void @llvm.dbg.value(metadata i8* %178, metadata !4788, metadata !DIExpression()), !dbg !4916
  %179 = and i24 %75, 3, !dbg !5039
  %180 = icmp eq i24 %179, 0, !dbg !5039
  br i1 %180, label %185, label %181, !dbg !5039

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5040
  call void @llvm.dbg.value(metadata i32 %182, metadata !4865, metadata !DIExpression()), !dbg !5041
  %183 = icmp slt i32 %182, 0, !dbg !5042
  %184 = add i32 %182, %29, !dbg !5040
  call void @llvm.dbg.value(metadata i32 undef, metadata !4794, metadata !DIExpression()), !dbg !4916
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5044
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5045

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !5046
  call void @llvm.dbg.value(metadata i32 %188, metadata !4869, metadata !DIExpression()), !dbg !5047
  %189 = icmp slt i32 %188, 0, !dbg !5048
  %190 = add i32 %29, 1, !dbg !5046
  call void @llvm.dbg.value(metadata i32 undef, metadata !4794, metadata !DIExpression()), !dbg !4916
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5050
  call void @llvm.dbg.value(metadata i8* %192, metadata !4857, metadata !DIExpression()), !dbg !4930
  %193 = icmp sgt i32 %76, -1, !dbg !5051
  br i1 %193, label %194, label %196, !dbg !5053

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !5054
  call void @llvm.dbg.value(metadata i32 %195, metadata !4872, metadata !DIExpression()), !dbg !5056
  br label %241, !dbg !5057

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !5058
  call void @llvm.dbg.value(metadata i32 %197, metadata !4872, metadata !DIExpression()), !dbg !5056
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4857, metadata !DIExpression()), !dbg !4930
  %199 = load i64, i64* %20, align 8, !dbg !5060
  %200 = trunc i64 %199 to i8, !dbg !5061
  store i8 %200, i8* %10, align 1, !dbg !5062
  call void @llvm.dbg.value(metadata i8* %23, metadata !4858, metadata !DIExpression()), !dbg !4930
  br label %245, !dbg !5063

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5064
  %203 = icmp eq i24 %202, 0, !dbg !5064
  %204 = trunc i24 %75 to i8, !dbg !5066
  %205 = shl i8 %204, 1, !dbg !5066
  %206 = and i8 %205, 32, !dbg !5066
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5066
  call void @llvm.dbg.value(metadata i8 %207, metadata !4859, metadata !DIExpression()), !dbg !4930
  %208 = load i64, i64* %20, align 8, !dbg !5067
  call void @llvm.dbg.value(metadata i64 %208, metadata !4795, metadata !DIExpression()), !dbg !4916
  %209 = icmp slt i64 %208, 0, !dbg !5068
  br i1 %209, label %210, label %212, !dbg !5070

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4859, metadata !DIExpression()), !dbg !4930
  %211 = sub nsw i64 0, %208, !dbg !5071
  store i64 %211, i64* %20, align 8, !dbg !5073
  br label %212, !dbg !5074

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4930
  call void @llvm.dbg.value(metadata i8 %213, metadata !4859, metadata !DIExpression()), !dbg !4930
  %214 = load i64, i64* %20, align 8, !dbg !5075
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5076
  call void @llvm.dbg.value(metadata i8* %215, metadata !4857, metadata !DIExpression()), !dbg !4930
  br label %216, !dbg !5077

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5078
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5079
  call void @llvm.dbg.value(metadata i8* %218, metadata !4857, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.value(metadata i8 %217, metadata !4859, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.label(metadata !4915), !dbg !5080
  %219 = icmp sgt i32 %76, -1, !dbg !5081
  br i1 %219, label %222, label %220, !dbg !5082

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5083
  br label %245, !dbg !5082

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5085
  %224 = sub i32 %22, %223, !dbg !5085
  call void @llvm.dbg.value(metadata i32 %224, metadata !4874, metadata !DIExpression()), !dbg !5086
  %225 = load i24, i24* %15, align 8, !dbg !5087
  %226 = and i24 %225, -65, !dbg !5087
  store i24 %226, i24* %15, align 8, !dbg !5087
  %227 = icmp ugt i32 %76, %224, !dbg !5088
  br i1 %227, label %228, label %245, !dbg !5090

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5091
  store i32 %229, i32* %16, align 4, !dbg !5093
  br label %245, !dbg !5094

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5095
  %232 = icmp eq i8* %231, null, !dbg !5097
  br i1 %232, label %245, label %233, !dbg !5098

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5099
  %235 = zext i32 %234 to i64, !dbg !5099
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5101
  call void @llvm.dbg.value(metadata i8* %236, metadata !4857, metadata !DIExpression()), !dbg !4930
  %237 = load i24, i24* %15, align 8, !dbg !5102
  %238 = or i24 %237, 1048576, !dbg !5102
  store i24 %238, i24* %15, align 8, !dbg !5102
  store i8 120, i8* %21, align 1, !dbg !5103
  br label %216, !dbg !5104

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5105
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5108
  br label %363, !dbg !5109

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5110
  call void @llvm.dbg.value(metadata i32 %242, metadata !4872, metadata !DIExpression()), !dbg !5056
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5111
  call void @llvm.dbg.value(metadata i32 -1, metadata !4856, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.value(metadata i32 %29, metadata !4794, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i8* %192, metadata !4857, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.value(metadata i8* %243, metadata !4858, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.value(metadata i8 0, metadata !4859, metadata !DIExpression()), !dbg !4930
  %244 = icmp eq i8* %192, null, !dbg !5112
  br i1 %244, label %363, label %245, !dbg !5114, !llvm.loop !4926

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5083
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4877, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4930
  call void @llvm.dbg.value(metadata i32 0, metadata !4878, metadata !DIExpression()), !dbg !4930
  %250 = zext i8 %249 to i32, !dbg !5115
  %251 = icmp eq i8 %249, 0, !dbg !5117
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4877, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4930
  call void @llvm.dbg.value(metadata i32 undef, metadata !4877, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4877, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4930
  call void @llvm.dbg.value(metadata i32 undef, metadata !4877, metadata !DIExpression()), !dbg !4930
  %252 = icmp sgt i32 %58, 0, !dbg !5118
  br i1 %252, label %253, label %302, !dbg !5119

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5083
  %255 = icmp eq i24 %254, 0, !dbg !5083
  %256 = ptrtoint i8* %248 to i32, !dbg !5120
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4877, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4930
  %257 = ptrtoint i8* %247 to i32, !dbg !5120
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4877, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4930
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4877, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4930
  %258 = xor i1 %251, true, !dbg !5121
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4877, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4930
  %259 = sext i1 %258 to i32, !dbg !5121
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4877, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4930
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4877, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4930
  %260 = lshr i24 %246, 19, !dbg !5122
  %261 = and i24 %260, 1, !dbg !5122
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5122
  %263 = zext i24 %262 to i32, !dbg !5122
  %264 = add i32 %257, %259, !dbg !5122
  %265 = add i32 %256, %263, !dbg !5122
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4877, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4930
  %266 = and i24 %246, 4194304, !dbg !5123
  %267 = icmp eq i24 %266, 0, !dbg !5123
  %268 = load i32, i32* %16, align 4, !dbg !5125
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4877, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4930
  call void @llvm.dbg.value(metadata i32 undef, metadata !4877, metadata !DIExpression()), !dbg !4930
  %269 = load i32, i32* %17, align 8, !dbg !5126
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5126
  call void @llvm.dbg.value(metadata i32 undef, metadata !4877, metadata !DIExpression()), !dbg !4930
  %271 = add i32 %264, %58, !dbg !5126
  %272 = add i32 %265, %268, !dbg !5126
  %273 = add i32 %272, %270, !dbg !5127
  %274 = sub i32 %271, %273, !dbg !5127
  call void @llvm.dbg.value(metadata i32 %274, metadata !4855, metadata !DIExpression()), !dbg !4930
  %275 = and i24 %246, 4, !dbg !5128
  %276 = icmp eq i24 %275, 0, !dbg !5128
  br i1 %276, label %277, label %302, !dbg !5129

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4879, metadata !DIExpression()), !dbg !5130
  %278 = and i24 %246, 64, !dbg !5131
  %279 = icmp eq i24 %278, 0, !dbg !5131
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5132
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5132
  %282 = select i1 %279, i32 32, i32 48, !dbg !5132
  br i1 %280, label %287, label %283, !dbg !5132

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !5133
  call void @llvm.dbg.value(metadata i32 %284, metadata !4884, metadata !DIExpression()), !dbg !5134
  %285 = icmp slt i32 %284, 0, !dbg !5135
  %286 = add i32 %29, 1, !dbg !5133
  call void @llvm.dbg.value(metadata i32 undef, metadata !4794, metadata !DIExpression()), !dbg !4916
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4930
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4920
  call void @llvm.dbg.value(metadata i32 %290, metadata !4794, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i8 undef, metadata !4879, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.value(metadata i8 %288, metadata !4859, metadata !DIExpression()), !dbg !4930
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5137
  %292 = add i32 %291, -1, !dbg !5137
  br label %293, !dbg !5137

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5138
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4920
  call void @llvm.dbg.value(metadata i32 %295, metadata !4794, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i32 %294, metadata !4855, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.value(metadata i32 %294, metadata !4855, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4930
  %296 = icmp sgt i32 %294, 0, !dbg !5139
  br i1 %296, label %297, label %302, !dbg !5137

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5140
  call void @llvm.dbg.value(metadata i32 %298, metadata !4855, metadata !DIExpression()), !dbg !4930
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !5141
  call void @llvm.dbg.value(metadata i32 %299, metadata !4890, metadata !DIExpression()), !dbg !5142
  %300 = icmp slt i32 %299, 0, !dbg !5143
  %301 = add i32 %295, 1, !dbg !5141
  call void @llvm.dbg.value(metadata i32 undef, metadata !4794, metadata !DIExpression()), !dbg !4916
  br i1 %300, label %361, label %293, !llvm.loop !5145

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4930
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4930
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4920
  call void @llvm.dbg.value(metadata i32 %305, metadata !4794, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i32 %304, metadata !4855, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.value(metadata i8 %303, metadata !4859, metadata !DIExpression()), !dbg !4930
  %306 = icmp eq i8 %303, 0, !dbg !5147
  br i1 %306, label %312, label %307, !dbg !5148

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5149
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !5150
  call void @llvm.dbg.value(metadata i32 %309, metadata !4893, metadata !DIExpression()), !dbg !5151
  %310 = icmp slt i32 %309, 0, !dbg !5152
  %311 = add i32 %305, 1, !dbg !5150
  call void @llvm.dbg.value(metadata i32 undef, metadata !4794, metadata !DIExpression()), !dbg !4916
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4920
  call void @llvm.dbg.value(metadata i32 %313, metadata !4794, metadata !DIExpression()), !dbg !4916
  %314 = lshr i24 %246, 20, !dbg !5154
  %315 = lshr i24 %246, 19, !dbg !5155
  %316 = or i24 %314, %315, !dbg !5156
  %317 = and i24 %316, 1, !dbg !5156
  %318 = icmp eq i24 %317, 0, !dbg !5156
  br i1 %318, label %323, label %319, !dbg !5157

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5158
  call void @llvm.dbg.value(metadata i32 %320, metadata !4897, metadata !DIExpression()), !dbg !5159
  %321 = icmp slt i32 %320, 0, !dbg !5160
  %322 = add i32 %313, 1, !dbg !5158
  call void @llvm.dbg.value(metadata i32 undef, metadata !4794, metadata !DIExpression()), !dbg !4916
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4920
  call void @llvm.dbg.value(metadata i32 %324, metadata !4794, metadata !DIExpression()), !dbg !4916
  %325 = and i24 %246, 1048576, !dbg !5162
  %326 = icmp eq i24 %325, 0, !dbg !5162
  br i1 %326, label %333, label %327, !dbg !5163

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5164
  %329 = zext i8 %328 to i32, !dbg !5164
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !5164
  call void @llvm.dbg.value(metadata i32 %330, metadata !4903, metadata !DIExpression()), !dbg !5165
  %331 = icmp slt i32 %330, 0, !dbg !5166
  %332 = add i32 %324, 1, !dbg !5164
  call void @llvm.dbg.value(metadata i32 undef, metadata !4794, metadata !DIExpression()), !dbg !4916
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4920
  call void @llvm.dbg.value(metadata i32 %334, metadata !4794, metadata !DIExpression()), !dbg !4916
  %335 = load i32, i32* %16, align 4, !dbg !5168
  call void @llvm.dbg.value(metadata i32 %335, metadata !4878, metadata !DIExpression()), !dbg !4930
  br label %336, !dbg !5169

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5170
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4920
  call void @llvm.dbg.value(metadata i32 %338, metadata !4794, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i32 %337, metadata !4878, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4930
  %339 = icmp sgt i32 %337, 0, !dbg !5171
  br i1 %339, label %340, label %345, !dbg !5169

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5172
  call void @llvm.dbg.value(metadata i32 %341, metadata !4878, metadata !DIExpression()), !dbg !4930
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5173
  call void @llvm.dbg.value(metadata i32 %342, metadata !4907, metadata !DIExpression()), !dbg !5174
  %343 = icmp slt i32 %342, 0, !dbg !5175
  %344 = add i32 %338, 1, !dbg !5173
  call void @llvm.dbg.value(metadata i32 undef, metadata !4794, metadata !DIExpression()), !dbg !4916
  br i1 %343, label %361, label %336, !llvm.loop !5177

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5179
  call void @llvm.dbg.value(metadata i32 %346, metadata !4910, metadata !DIExpression()), !dbg !5180
  %347 = icmp slt i32 %346, 0, !dbg !5181
  call void @llvm.dbg.value(metadata i32 undef, metadata !4794, metadata !DIExpression()), !dbg !4916
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5179
  call void @llvm.dbg.value(metadata i32 %349, metadata !4794, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i32 %304, metadata !4855, metadata !DIExpression()), !dbg !4930
  %350 = icmp sgt i32 %304, 0, !dbg !5183
  br i1 %350, label %351, label %363, !dbg !5184

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5184
  %353 = add i32 %352, %338, !dbg !5184
  br label %354, !dbg !5184

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4794, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i32 %355, metadata !4855, metadata !DIExpression()), !dbg !4930
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !5185
  call void @llvm.dbg.value(metadata i32 %356, metadata !4912, metadata !DIExpression()), !dbg !5186
  %357 = icmp slt i32 %356, 0, !dbg !5187
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5189
  call void @llvm.dbg.value(metadata i32 undef, metadata !4794, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4916
  call void @llvm.dbg.value(metadata i32 %359, metadata !4855, metadata !DIExpression()), !dbg !4930
  %360 = icmp sgt i32 %355, 1, !dbg !5183
  br i1 %360, label %354, label %363, !dbg !5184, !llvm.loop !5190

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4794, metadata !DIExpression()), !dbg !4916
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4927
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4920
  call void @llvm.dbg.value(metadata i32 %364, metadata !4794, metadata !DIExpression()), !dbg !4916
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4927
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4916
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5192
  ret i32 %366, !dbg !5192
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5193 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5197, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.value(metadata i8* %1, metadata !5198, metadata !DIExpression()), !dbg !5199
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5200
  store i24 0, i24* %3, align 4, !dbg !5200
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5200
  store i8 0, i8* %4, align 1, !dbg !5200
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5200
  store i32 0, i32* %5, align 4, !dbg !5200
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5200
  store i32 0, i32* %6, align 4, !dbg !5200
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5201
  call void @llvm.dbg.value(metadata i8* %7, metadata !5198, metadata !DIExpression()), !dbg !5199
  %8 = load i8, i8* %7, align 1, !dbg !5202
  %9 = icmp eq i8 %8, 37, !dbg !5204
  br i1 %9, label %10, label %12, !dbg !5205

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5206
  call void @llvm.dbg.value(metadata i8* %11, metadata !5198, metadata !DIExpression()), !dbg !5199
  store i8 37, i8* %4, align 1, !dbg !5208
  br label %18, !dbg !5209

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5210
  call void @llvm.dbg.value(metadata i8* %13, metadata !5198, metadata !DIExpression()), !dbg !5199
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5211
  call void @llvm.dbg.value(metadata i8* %14, metadata !5198, metadata !DIExpression()), !dbg !5199
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5212
  call void @llvm.dbg.value(metadata i8* %15, metadata !5198, metadata !DIExpression()), !dbg !5199
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5213
  call void @llvm.dbg.value(metadata i8* %16, metadata !5198, metadata !DIExpression()), !dbg !5199
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5214
  call void @llvm.dbg.value(metadata i8* %17, metadata !5198, metadata !DIExpression()), !dbg !5199
  br label %18, !dbg !5215

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5199
  ret i8* %19, !dbg !5216
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5217 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5221, metadata !DIExpression()), !dbg !5228
  call void @llvm.dbg.value(metadata i8* %1, metadata !5222, metadata !DIExpression()), !dbg !5228
  call void @llvm.dbg.value(metadata i8* %2, metadata !5223, metadata !DIExpression()), !dbg !5228
  call void @llvm.dbg.value(metadata i8* %3, metadata !5224, metadata !DIExpression()), !dbg !5228
  call void @llvm.dbg.value(metadata i32 0, metadata !5225, metadata !DIExpression()), !dbg !5228
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5229

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5230
  call void @llvm.dbg.value(metadata i32 %9, metadata !5225, metadata !DIExpression()), !dbg !5228
  call void @llvm.dbg.value(metadata i8* %8, metadata !5223, metadata !DIExpression()), !dbg !5228
  %10 = icmp ult i8* %8, %3, !dbg !5231
  br i1 %10, label %11, label %13, !dbg !5232

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5233
  br label %17, !dbg !5232

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5234

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5235
  %16 = icmp eq i8 %15, 0, !dbg !5234
  br i1 %16, label %24, label %17, !dbg !5229

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5233
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5236
  call void @llvm.dbg.value(metadata i8* %19, metadata !5223, metadata !DIExpression()), !dbg !5228
  %20 = zext i8 %18 to i32, !dbg !5237
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !5238
  call void @llvm.dbg.value(metadata i32 %21, metadata !5226, metadata !DIExpression()), !dbg !5239
  %22 = icmp slt i32 %21, 0, !dbg !5240
  %23 = add i32 %9, 1, !dbg !5242
  call void @llvm.dbg.value(metadata i32 undef, metadata !5225, metadata !DIExpression()), !dbg !5228
  br i1 %22, label %24, label %7, !llvm.loop !5243

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5228
  ret i32 %25, !dbg !5245
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5246 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5250, metadata !DIExpression()), !dbg !5260
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5251, metadata !DIExpression()), !dbg !5260
  call void @llvm.dbg.value(metadata i8* %2, metadata !5252, metadata !DIExpression()), !dbg !5260
  call void @llvm.dbg.value(metadata i8* %3, metadata !5253, metadata !DIExpression()), !dbg !5260
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5261
  %6 = load i8, i8* %5, align 1, !dbg !5261
  %7 = zext i8 %6 to i32, !dbg !5262
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5263
  %9 = icmp eq i32 %8, 0, !dbg !5263
  call void @llvm.dbg.value(metadata i1 %9, metadata !5254, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5260
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5264
  call void @llvm.dbg.value(metadata i32 %10, metadata !5255, metadata !DIExpression()), !dbg !5260
  %11 = ptrtoint i8* %3 to i32, !dbg !5265
  %12 = ptrtoint i8* %2 to i32, !dbg !5265
  %13 = sub i32 %11, %12, !dbg !5265
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5266
  call void @llvm.dbg.value(metadata i8* %14, metadata !5257, metadata !DIExpression()), !dbg !5260
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5267

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5260
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5250, metadata !DIExpression()), !dbg !5260
  call void @llvm.dbg.value(metadata i8* %18, metadata !5257, metadata !DIExpression()), !dbg !5260
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5268
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5269
  call void @llvm.dbg.value(metadata i32 %25, metadata !5258, metadata !DIExpression()), !dbg !5270
  %26 = icmp ult i32 %25, 10, !dbg !5271
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5272
  %28 = add i32 %27, %25, !dbg !5270
  %29 = trunc i32 %28 to i8, !dbg !5272
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5273
  call void @llvm.dbg.value(metadata i8* %30, metadata !5257, metadata !DIExpression()), !dbg !5260
  store i8 %29, i8* %30, align 1, !dbg !5274
  call void @llvm.dbg.value(metadata i64 %22, metadata !5250, metadata !DIExpression()), !dbg !5260
  %31 = icmp uge i64 %19, %15, !dbg !5275
  %32 = icmp ugt i8* %30, %2, !dbg !5276
  %33 = and i1 %31, %32, !dbg !5276
  br i1 %33, label %17, label %34, !dbg !5277, !llvm.loop !5278

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5280
  %36 = load i24, i24* %35, align 4, !dbg !5280
  %37 = and i24 %36, 32, !dbg !5280
  %38 = icmp eq i24 %37, 0, !dbg !5280
  br i1 %38, label %44, label %39, !dbg !5282

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5283

40:                                               ; preds = %39
  br label %41, !dbg !5285

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5289
  store i24 %43, i24* %35, align 4, !dbg !5289
  br label %44, !dbg !5290

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5290
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !5291 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5297, metadata !DIExpression()), !dbg !5300
  call void @llvm.dbg.value(metadata i8* %1, metadata !5298, metadata !DIExpression()), !dbg !5300
  call void @llvm.dbg.value(metadata i32 %2, metadata !5299, metadata !DIExpression()), !dbg !5300
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5301
  %5 = load i24, i24* %4, align 4, !dbg !5301
  %6 = lshr i24 %5, 11, !dbg !5301
  %7 = and i24 %6, 15, !dbg !5301
  %8 = zext i24 %7 to i32, !dbg !5301
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5302

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5303
  store i32 %2, i32* %10, align 4, !dbg !5305
  br label %28, !dbg !5306

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5307
  store i8 %12, i8* %1, align 1, !dbg !5308
  br label %28, !dbg !5309

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5310
  %15 = bitcast i8* %1 to i16*, !dbg !5311
  store i16 %14, i16* %15, align 2, !dbg !5312
  br label %28, !dbg !5313

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5314
  store i32 %2, i32* %17, align 4, !dbg !5315
  br label %28, !dbg !5316

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5317
  %20 = bitcast i8* %1 to i64*, !dbg !5318
  store i64 %19, i64* %20, align 8, !dbg !5319
  br label %28, !dbg !5320

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5321
  %23 = bitcast i8* %1 to i64*, !dbg !5322
  store i64 %22, i64* %23, align 8, !dbg !5323
  br label %28, !dbg !5324

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5325
  store i32 %2, i32* %25, align 4, !dbg !5326
  br label %28, !dbg !5327

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5328
  store i32 %2, i32* %27, align 4, !dbg !5329
  br label %28, !dbg !5330

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5331
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5332 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5335, metadata !DIExpression()), !dbg !5336
  %2 = add i32 %0, -65, !dbg !5337
  %3 = icmp ult i32 %2, 26, !dbg !5338
  %4 = zext i1 %3 to i32, !dbg !5338
  ret i32 %4, !dbg !5339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5340 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5344, metadata !DIExpression()), !dbg !5345
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5346

2:                                                ; preds = %1
  br label %4, !dbg !5347

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5349

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5350
  ret i32 %5, !dbg !5351
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5352 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5354, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i8* %1, metadata !5355, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i8 1, metadata !5356, metadata !DIExpression()), !dbg !5357
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5358

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5356, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i8* %5, metadata !5355, metadata !DIExpression()), !dbg !5357
  %6 = load i8, i8* %5, align 1, !dbg !5359
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5361

7:                                                ; preds = %4
  br label %11, !dbg !5362

8:                                                ; preds = %4
  br label %11, !dbg !5364

9:                                                ; preds = %4
  br label %11, !dbg !5365

10:                                               ; preds = %4
  br label %11, !dbg !5366

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5367
  %14 = or i24 %13, %12, !dbg !5367
  store i24 %14, i24* %3, align 4, !dbg !5367
  call void @llvm.dbg.value(metadata i8 poison, metadata !5356, metadata !DIExpression()), !dbg !5357
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5355, metadata !DIExpression()), !dbg !5357
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5356, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i8* %15, metadata !5355, metadata !DIExpression()), !dbg !5357
  %17 = load i24, i24* %3, align 4, !dbg !5368
  %18 = and i24 %17, 68, !dbg !5370
  %19 = icmp eq i24 %18, 68, !dbg !5370
  br i1 %19, label %20, label %22, !dbg !5370

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5371
  store i24 %21, i24* %3, align 4, !dbg !5371
  br label %22, !dbg !5373

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5374
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5375 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5377, metadata !DIExpression()), !dbg !5381
  call void @llvm.dbg.value(metadata i8* %1, metadata !5378, metadata !DIExpression()), !dbg !5381
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5382
  %5 = load i24, i24* %4, align 4, !dbg !5383
  %6 = or i24 %5, 128, !dbg !5383
  store i24 %6, i24* %4, align 4, !dbg !5383
  call void @llvm.dbg.value(metadata i8* %1, metadata !5378, metadata !DIExpression()), !dbg !5381
  %7 = load i8, i8* %1, align 1, !dbg !5384
  %8 = icmp eq i8 %7, 42, !dbg !5386
  br i1 %8, label %9, label %12, !dbg !5387

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5388
  store i24 %10, i24* %4, align 4, !dbg !5388
  call void @llvm.dbg.value(metadata i8* %1, metadata !5378, metadata !DIExpression()), !dbg !5381
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5390
  call void @llvm.dbg.value(metadata i8* %11, metadata !5378, metadata !DIExpression()), !dbg !5381
  store i8* %11, i8** %3, align 4, !dbg !5390
  br label %29, !dbg !5391

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5379, metadata !DIExpression()), !dbg !5381
  call void @llvm.dbg.value(metadata i8** %3, metadata !5378, metadata !DIExpression(DW_OP_deref)), !dbg !5381
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5392
  call void @llvm.dbg.value(metadata i32 %13, metadata !5380, metadata !DIExpression()), !dbg !5381
  %14 = load i8*, i8** %3, align 4, !dbg !5393
  call void @llvm.dbg.value(metadata i8* %14, metadata !5378, metadata !DIExpression()), !dbg !5381
  %15 = icmp eq i8* %14, %1, !dbg !5395
  br i1 %15, label %29, label %16, !dbg !5396

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5397
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5399
  store i32 %13, i32* %18, align 4, !dbg !5400
  %19 = lshr i32 %13, 31, !dbg !5401
  %20 = lshr i24 %17, 1, !dbg !5402
  %21 = and i24 %20, 1, !dbg !5402
  %22 = zext i24 %21 to i32, !dbg !5402
  %23 = or i32 %19, %22, !dbg !5402
  %24 = trunc i32 %23 to i24, !dbg !5402
  %25 = shl nuw nsw i24 %24, 1, !dbg !5402
  %26 = and i24 %17, -131, !dbg !5402
  %27 = or i24 %26, 128, !dbg !5402
  %28 = or i24 %25, %27, !dbg !5402
  store i24 %28, i24* %4, align 4, !dbg !5402
  br label %29, !dbg !5403

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5381
  ret i8* %30, !dbg !5404
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5405 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5407, metadata !DIExpression()), !dbg !5410
  call void @llvm.dbg.value(metadata i8* %1, metadata !5408, metadata !DIExpression()), !dbg !5410
  %4 = load i8, i8* %1, align 1, !dbg !5411
  %5 = icmp eq i8 %4, 46, !dbg !5412
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5413
  %7 = load i24, i24* %6, align 4, !dbg !5414
  %8 = select i1 %5, i24 512, i24 0, !dbg !5414
  %9 = and i24 %7, -513, !dbg !5414
  %10 = or i24 %9, %8, !dbg !5414
  store i24 %10, i24* %6, align 4, !dbg !5414
  br i1 %5, label %11, label %32, !dbg !5415

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5408, metadata !DIExpression()), !dbg !5410
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5416
  call void @llvm.dbg.value(metadata i8* %12, metadata !5408, metadata !DIExpression()), !dbg !5410
  store i8* %12, i8** %3, align 4, !dbg !5416
  %13 = load i8, i8* %12, align 1, !dbg !5417
  %14 = icmp eq i8 %13, 42, !dbg !5419
  br i1 %14, label %15, label %18, !dbg !5420

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5421
  store i24 %16, i24* %6, align 4, !dbg !5421
  call void @llvm.dbg.value(metadata i8* %12, metadata !5408, metadata !DIExpression()), !dbg !5410
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5423
  call void @llvm.dbg.value(metadata i8* %17, metadata !5408, metadata !DIExpression()), !dbg !5410
  store i8* %17, i8** %3, align 4, !dbg !5423
  br label %32, !dbg !5424

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5408, metadata !DIExpression(DW_OP_deref)), !dbg !5410
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5425
  call void @llvm.dbg.value(metadata i32 %19, metadata !5409, metadata !DIExpression()), !dbg !5410
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5426
  store i32 %19, i32* %20, align 4, !dbg !5427
  %21 = lshr i32 %19, 31, !dbg !5428
  %22 = load i24, i24* %6, align 4, !dbg !5429
  %23 = lshr i24 %22, 1, !dbg !5429
  %24 = and i24 %23, 1, !dbg !5429
  %25 = zext i24 %24 to i32, !dbg !5429
  %26 = or i32 %21, %25, !dbg !5429
  %27 = trunc i32 %26 to i24, !dbg !5429
  %28 = shl nuw nsw i24 %27, 1, !dbg !5429
  %29 = and i24 %22, -3, !dbg !5429
  %30 = or i24 %28, %29, !dbg !5429
  store i24 %30, i24* %6, align 4, !dbg !5429
  %31 = load i8*, i8** %3, align 4, !dbg !5430
  call void @llvm.dbg.value(metadata i8* %31, metadata !5408, metadata !DIExpression()), !dbg !5410
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5410
  ret i8* %33, !dbg !5431
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5432 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5434, metadata !DIExpression()), !dbg !5436
  call void @llvm.dbg.value(metadata i8* %1, metadata !5435, metadata !DIExpression()), !dbg !5436
  %3 = load i8, i8* %1, align 1, !dbg !5437
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5438

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5439
  call void @llvm.dbg.value(metadata i8* %5, metadata !5435, metadata !DIExpression()), !dbg !5436
  %6 = load i8, i8* %5, align 1, !dbg !5442
  %7 = icmp eq i8 %6, 104, !dbg !5443
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5444
  %9 = load i24, i24* %8, align 4, !dbg !5444
  %10 = and i24 %9, -30721, !dbg !5444
  br i1 %7, label %11, label %14, !dbg !5445

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5446
  store i24 %12, i24* %8, align 4, !dbg !5446
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5448
  call void @llvm.dbg.value(metadata i8* %13, metadata !5435, metadata !DIExpression()), !dbg !5436
  br label %56, !dbg !5449

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5450
  store i24 %15, i24* %8, align 4, !dbg !5450
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5452
  call void @llvm.dbg.value(metadata i8* %17, metadata !5435, metadata !DIExpression()), !dbg !5436
  %18 = load i8, i8* %17, align 1, !dbg !5454
  %19 = icmp eq i8 %18, 108, !dbg !5455
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5456
  %21 = load i24, i24* %20, align 4, !dbg !5456
  %22 = and i24 %21, -30721, !dbg !5456
  br i1 %19, label %23, label %26, !dbg !5457

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5458
  store i24 %24, i24* %20, align 4, !dbg !5458
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5460
  call void @llvm.dbg.value(metadata i8* %25, metadata !5435, metadata !DIExpression()), !dbg !5436
  br label %56, !dbg !5461

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5462
  store i24 %27, i24* %20, align 4, !dbg !5462
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5464
  %30 = load i24, i24* %29, align 4, !dbg !5465
  %31 = and i24 %30, -30721, !dbg !5465
  %32 = or i24 %31, 10240, !dbg !5465
  store i24 %32, i24* %29, align 4, !dbg !5465
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5466
  call void @llvm.dbg.value(metadata i8* %33, metadata !5435, metadata !DIExpression()), !dbg !5436
  br label %56, !dbg !5467

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5468
  %36 = load i24, i24* %35, align 4, !dbg !5469
  %37 = and i24 %36, -30721, !dbg !5469
  %38 = or i24 %37, 12288, !dbg !5469
  store i24 %38, i24* %35, align 4, !dbg !5469
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5470
  call void @llvm.dbg.value(metadata i8* %39, metadata !5435, metadata !DIExpression()), !dbg !5436
  br label %56, !dbg !5471

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5472
  %42 = load i24, i24* %41, align 4, !dbg !5473
  %43 = and i24 %42, -30721, !dbg !5473
  %44 = or i24 %43, 14336, !dbg !5473
  store i24 %44, i24* %41, align 4, !dbg !5473
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5474
  call void @llvm.dbg.value(metadata i8* %45, metadata !5435, metadata !DIExpression()), !dbg !5436
  br label %56, !dbg !5475

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5476
  %48 = load i24, i24* %47, align 4, !dbg !5477
  %49 = and i24 %48, -30723, !dbg !5477
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5478
  call void @llvm.dbg.value(metadata i8* %50, metadata !5435, metadata !DIExpression()), !dbg !5436
  %51 = or i24 %49, 16386, !dbg !5479
  store i24 %51, i24* %47, align 4, !dbg !5479
  br label %56, !dbg !5480

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5481
  %54 = load i24, i24* %53, align 4, !dbg !5482
  %55 = and i24 %54, -30721, !dbg !5482
  store i24 %55, i24* %53, align 4, !dbg !5482
  br label %56, !dbg !5483

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5435, metadata !DIExpression()), !dbg !5436
  ret i8* %57, !dbg !5484
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5485 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5487, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i8* %1, metadata !5488, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i8 0, metadata !5489, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i8* %1, metadata !5488, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5492
  %3 = load i8, i8* %1, align 1, !dbg !5493
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5494
  store i8 %3, i8* %4, align 1, !dbg !5495
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5496

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5497

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5498
  %9 = load i24, i24* %8, align 4, !dbg !5498
  %10 = and i24 %9, -458753, !dbg !5498
  %11 = or i24 %10, %7, !dbg !5498
  call void @llvm.dbg.label(metadata !5490), !dbg !5499
  %12 = and i24 %9, 30720, !dbg !5500
  %13 = icmp eq i24 %12, 16384, !dbg !5500
  %14 = zext i1 %13 to i24, !dbg !5502
  %15 = or i24 %11, %14, !dbg !5502
  %16 = icmp eq i8 %3, 99, !dbg !5503
  br i1 %16, label %17, label %43, !dbg !5505

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5506
  %19 = icmp ne i24 %18, 0, !dbg !5506
  call void @llvm.dbg.value(metadata i1 %19, metadata !5489, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5492
  br label %43, !dbg !5508

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5509
  %22 = load i24, i24* %21, align 4, !dbg !5510
  %23 = and i24 %22, -458753, !dbg !5510
  %24 = or i24 %23, 262144, !dbg !5510
  call void @llvm.dbg.value(metadata i8 1, metadata !5489, metadata !DIExpression()), !dbg !5492
  br label %43, !dbg !5511

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5514
  %27 = load i24, i24* %26, align 4, !dbg !5515
  %28 = and i24 %27, -458753, !dbg !5515
  %29 = or i24 %28, 196608, !dbg !5515
  %30 = and i24 %27, 30720, !dbg !5516
  %31 = icmp eq i24 %30, 16384, !dbg !5516
  br label %43, !dbg !5518

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5519
  %34 = load i24, i24* %33, align 4, !dbg !5520
  %35 = and i24 %34, -458753, !dbg !5520
  %36 = or i24 %35, 196608, !dbg !5520
  %37 = and i24 %34, 30720, !dbg !5521
  %38 = icmp ne i24 %37, 0, !dbg !5521
  br label %43, !dbg !5523

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5524
  %41 = load i24, i24* %40, align 4, !dbg !5525
  %42 = or i24 %41, 1, !dbg !5525
  br label %43, !dbg !5526

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5527
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5528
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5529
  call void @llvm.dbg.value(metadata i8* %48, metadata !5488, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i8 poison, metadata !5489, metadata !DIExpression()), !dbg !5492
  %49 = lshr i24 %44, 1, !dbg !5527
  %50 = and i24 %49, 1, !dbg !5527
  %51 = zext i24 %50 to i32, !dbg !5527
  %52 = or i32 %51, %47, !dbg !5527
  %53 = trunc i32 %52 to i24, !dbg !5527
  %54 = shl nuw nsw i24 %53, 1, !dbg !5527
  %55 = and i24 %44, -3, !dbg !5527
  %56 = or i24 %54, %55, !dbg !5527
  store i24 %56, i24* %46, align 4, !dbg !5527
  ret i8* %48, !dbg !5530
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5531 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5536, metadata !DIExpression()), !dbg !5539
  %2 = load i8*, i8** %0, align 4, !dbg !5540
  call void @llvm.dbg.value(metadata i8* %2, metadata !5537, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.value(metadata i32 0, metadata !5538, metadata !DIExpression()), !dbg !5539
  %3 = load i8, i8* %2, align 1, !dbg !5541
  %4 = zext i8 %3 to i32, !dbg !5542
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5543
  %6 = icmp eq i32 %5, 0, !dbg !5544
  br i1 %6, label %19, label %7, !dbg !5544

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5538, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.value(metadata i8* %10, metadata !5537, metadata !DIExpression()), !dbg !5539
  %11 = mul i32 %9, 10, !dbg !5545
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5547
  call void @llvm.dbg.value(metadata i8* %12, metadata !5537, metadata !DIExpression()), !dbg !5539
  %13 = add i32 %11, -48, !dbg !5548
  %14 = add i32 %13, %8, !dbg !5549
  call void @llvm.dbg.value(metadata i32 %14, metadata !5538, metadata !DIExpression()), !dbg !5539
  %15 = load i8, i8* %12, align 1, !dbg !5541
  %16 = zext i8 %15 to i32, !dbg !5542
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5543
  %18 = icmp eq i32 %17, 0, !dbg !5544
  br i1 %18, label %19, label %7, !dbg !5544, !llvm.loop !5550

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5539
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5539
  store i8* %20, i8** %0, align 4, !dbg !5552
  ret i32 %21, !dbg !5553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5554 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5556, metadata !DIExpression()), !dbg !5557
  %2 = add i32 %0, -48, !dbg !5558
  %3 = icmp ult i32 %2, 10, !dbg !5559
  %4 = zext i1 %3 to i32, !dbg !5559
  ret i32 %4, !dbg !5560
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5561 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5566, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.value(metadata i32 %1, metadata !5567, metadata !DIExpression()), !dbg !5568
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !5569, !srcloc !5571
  ret void, !dbg !5572
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5573 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5575, metadata !DIExpression()), !dbg !5583
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5584
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5584
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5576, metadata !DIExpression()), !dbg !5585
  call void @llvm.va_start(i8* nonnull %3), !dbg !5586
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5587
  %5 = load i32, i32* %4, align 4, !dbg !5587
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5587
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !5587
  call void @llvm.va_end(i8* nonnull %3), !dbg !5588
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5589
  ret void, !dbg !5589
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5590 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,256\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #25, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_HTS221_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_HTS221_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_HTS221_ENABLED,%object", ""() #25, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #25, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,%object", ""() #25, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #25, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #25, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #25, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,%object", ""() #25, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #25, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_ARGONKEY\0A\09.equ\09CONFIG_BOARD_96B_ARGONKEY,1\0A\09.type\09CONFIG_BOARD_96B_ARGONKEY,%object", ""() #25, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F412CX\0A\09.equ\09CONFIG_SOC_STM32F412CX,1\0A\09.type\09CONFIG_SOC_STM32F412CX,%object", ""() #25, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,256\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !5922, !srcloc !5923
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !5924, !srcloc !5925
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !5926, !srcloc !5927
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !5928, !srcloc !5929
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !5930, !srcloc !5931
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !5932, !srcloc !5933
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !5934, !srcloc !5935
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !5936, !srcloc !5937
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !5938, !srcloc !5939
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !5940, !srcloc !5941
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !5942, !srcloc !5943
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !5944, !srcloc !5945
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !5946, !srcloc !5947
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !5948, !srcloc !5949
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !5950, !srcloc !5951
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !5952, !srcloc !5953
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !5954, !srcloc !5955
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !5956, !srcloc !5957
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !5958, !srcloc !5959
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !5960, !srcloc !5961
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !5962, !srcloc !5963
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !5964, !srcloc !5965
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !5966, !srcloc !5967
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !5968, !srcloc !5969
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !5970, !srcloc !5971
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !5972, !srcloc !5973
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !5974, !srcloc !5975
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !5976, !srcloc !5977
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !5978, !srcloc !5979
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5980, !srcloc !5981
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !5982, !srcloc !5983
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !5984, !srcloc !5985
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !5986, !srcloc !5987
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !5988, !srcloc !5989
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !5990, !srcloc !5991
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !5992, !srcloc !5993
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !5994, !srcloc !5995
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !5996, !srcloc !5997
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #25, !dbg !5998, !srcloc !5999
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !6000, !srcloc !6001
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !6002, !srcloc !6003
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !6004, !srcloc !6005
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !6006, !srcloc !6007
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !6008, !srcloc !6009
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !6010, !srcloc !6011
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !6012, !srcloc !6013
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !6014, !srcloc !6015
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !6016, !srcloc !6017
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !6018, !srcloc !6019
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !6020, !srcloc !6021
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !6022, !srcloc !6023
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !6024, !srcloc !6025
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6026, !srcloc !6027
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !6028, !srcloc !6029
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6030, !srcloc !6031
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !6032, !srcloc !6033
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !6034, !srcloc !6035
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !6036, !srcloc !6037
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !6038, !srcloc !6039
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !6040, !srcloc !6041
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !6042, !srcloc !6043
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !6044, !srcloc !6045
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !6046, !srcloc !6047
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !6048, !srcloc !6049
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !6050, !srcloc !6051
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !6052, !srcloc !6053
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !6054, !srcloc !6055
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !6056, !srcloc !6057
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !6058, !srcloc !6059
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !6060, !srcloc !6061
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !6062, !srcloc !6063
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !6064, !srcloc !6065
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !6066, !srcloc !6067
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !6068, !srcloc !6069
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !6070, !srcloc !6071
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !6072, !srcloc !6073
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !6074, !srcloc !6075
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !6076, !srcloc !6077
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !6078, !srcloc !6079
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !6080, !srcloc !6081
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !6082, !srcloc !6083
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !6084, !srcloc !6085
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !6086, !srcloc !6087
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !6088, !srcloc !6089
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !6090, !srcloc !6091
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !6092, !srcloc !6093
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !6094, !srcloc !6095
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !6096, !srcloc !6097
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #25, !dbg !6098, !srcloc !6099
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #25, !dbg !6100, !srcloc !6101
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #25, !dbg !6102, !srcloc !6103
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !6104, !srcloc !6105
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !6106, !srcloc !6107
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !6108, !srcloc !6109
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6110, !srcloc !6111
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !6112, !srcloc !6113
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6114, !srcloc !6115
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6116, !srcloc !6117
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !6118, !srcloc !6119
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !6120, !srcloc !6121
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !6122, !srcloc !6123
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !6124, !srcloc !6125
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !6126, !srcloc !6127
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !6128, !srcloc !6129
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !6130, !srcloc !6131
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !6132, !srcloc !6133
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !6134, !srcloc !6135
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !6136, !srcloc !6137
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !6138, !srcloc !6139
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !6140, !srcloc !6141
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !6142, !srcloc !6143
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !6144, !srcloc !6145
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !6146, !srcloc !6147
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !6148, !srcloc !6149
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !6150, !srcloc !6151
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !6152, !srcloc !6153
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !6154, !srcloc !6155
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !6156, !srcloc !6157
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !6158, !srcloc !6159
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !6160, !srcloc !6161
  ret void, !dbg !6162
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6163 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6165, metadata !DIExpression()), !dbg !6167
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !6168
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !6169
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !6170, !srcloc !6179
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6170
  call void @llvm.dbg.value(metadata i32 %3, metadata !6176, metadata !DIExpression()) #25, !dbg !6180
  call void @llvm.dbg.value(metadata i32 undef, metadata !6177, metadata !DIExpression()) #25, !dbg !6180
  call void @llvm.dbg.value(metadata i32 %3, metadata !6166, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i32 %3, metadata !6181, metadata !DIExpression()) #25, !dbg !6186
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !6188, !srcloc !6189
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6190
  ret i32 0, !dbg !6191
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6192 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6194
  %2 = or i32 %1, 512, !dbg !6194
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6194
  ret void, !dbg !6195
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6196 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6197
  %2 = or i32 %1, 1024, !dbg !6197
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6197
  ret void, !dbg !6198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !6199 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6201, metadata !DIExpression()), !dbg !6202
  ret i32 0, !dbg !6203
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6253, metadata !DIExpression()), !dbg !6255
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6254, metadata !DIExpression()), !dbg !6255
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !6256
  ret void, !dbg !6257
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6258 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6275, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6276, metadata !DIExpression()), !dbg !6278
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6279
  %4 = load i32, i32* %3, align 4, !dbg !6279
  call void @llvm.dbg.value(metadata i32 %4, metadata !6277, metadata !DIExpression()), !dbg !6278
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6280
  ret void, !dbg !6281
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !6282 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6286, metadata !DIExpression()), !dbg !6289
  call void @llvm.dbg.value(metadata i8* %0, metadata !6287, metadata !DIExpression()), !dbg !6289
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6290
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !6290
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6288, metadata !DIExpression()), !dbg !6291
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6291
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6292
  %5 = bitcast i8* %4 to i32*, !dbg !6292
  %6 = load i32, i32* %5, align 4, !dbg !6292
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6293
  store i32 %6, i32* %7, align 4, !dbg !6294
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6295
  unreachable, !dbg !6296
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6300, metadata !DIExpression()), !dbg !6301
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6302
  ret void, !dbg !6303
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6304 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6308, metadata !DIExpression()), !dbg !6309
  %2 = icmp sgt i32 %0, -1, !dbg !6310
  br i1 %2, label %3, label %8, !dbg !6312

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6313, !srcloc !6315
  %4 = and i32 %0, 31, !dbg !6316
  %5 = shl nuw i32 1, %4, !dbg !6317
  %6 = lshr i32 %0, 5, !dbg !6318
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6319
  store volatile i32 %5, i32* %7, align 4, !dbg !6320
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6321, !srcloc !6322
  br label %8, !dbg !6323

8:                                                ; preds = %3, %1
  ret void, !dbg !6324
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6325 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6327, metadata !DIExpression()), !dbg !6328
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6329
  ret void, !dbg !6330
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6331 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6333, metadata !DIExpression()), !dbg !6334
  %2 = icmp sgt i32 %0, -1, !dbg !6335
  br i1 %2, label %3, label %8, !dbg !6337

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6338
  %5 = shl nuw i32 1, %4, !dbg !6340
  %6 = lshr i32 %0, 5, !dbg !6341
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6342
  store volatile i32 %5, i32* %7, align 4, !dbg !6343
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6344, !srcloc !6348
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6349, !srcloc !6352
  br label %8, !dbg !6353

8:                                                ; preds = %3, %1
  ret void, !dbg !6354
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6355 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6359, metadata !DIExpression()), !dbg !6360
  %2 = lshr i32 %0, 5, !dbg !6361
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6362
  %4 = load volatile i32, i32* %3, align 4, !dbg !6362
  %5 = and i32 %0, 31, !dbg !6363
  %6 = shl nuw i32 1, %5, !dbg !6363
  %7 = and i32 %4, %6, !dbg !6364
  ret i32 %7, !dbg !6365
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6366 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6370, metadata !DIExpression()), !dbg !6373
  call void @llvm.dbg.value(metadata i32 %1, metadata !6371, metadata !DIExpression()), !dbg !6373
  call void @llvm.dbg.value(metadata i32 %2, metadata !6372, metadata !DIExpression()), !dbg !6373
  %4 = add i32 %1, 1, !dbg !6374
  call void @llvm.dbg.value(metadata i32 %4, metadata !6371, metadata !DIExpression()), !dbg !6373
  %5 = icmp ult i32 %4, 16, !dbg !6377
  br i1 %5, label %7, label %6, !dbg !6380

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 94) #27, !dbg !6381
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.41, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #27, !dbg !6381
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 94) #27, !dbg !6381
  unreachable, !dbg !6381

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6383
  ret void, !dbg !6384
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6385 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6389, metadata !DIExpression()), !dbg !6391
  call void @llvm.dbg.value(metadata i32 %1, metadata !6390, metadata !DIExpression()), !dbg !6391
  %3 = trunc i32 %1 to i8, !dbg !6392
  %4 = shl i8 %3, 4, !dbg !6392
  %5 = and i32 %0, 15, !dbg !6394
  %6 = add nsw i32 %5, -4, !dbg !6394
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6394
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6394
  %9 = icmp slt i32 %0, 0, !dbg !6394
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6394
  store volatile i8 %4, i8* %10, align 1, !dbg !6392
  ret void, !dbg !6395
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6396 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6398, metadata !DIExpression()), !dbg !6399
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !6400
  ret void, !dbg !6401
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6402 {
  tail call void @z_SysNmiOnReset() #27, !dbg !6404
  tail call void @z_arm_int_exit() #27, !dbg !6405
  ret void, !dbg !6406
}

; Function Attrs: optsize
declare !dbg !6407 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6408 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #5 !dbg !6410 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6412
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6413
  tail call void @z_bss_zero() #27, !dbg !6414
  tail call void @z_data_copy() #27, !dbg !6415
  tail call void @z_arm_interrupt_init() #27, !dbg !6416
  tail call void @z_cstart() #29, !dbg !6417
  unreachable, !dbg !6417
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6418 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6419
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6420, !srcloc !6423
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6424, !srcloc !6427
  ret void, !dbg !6428
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6429 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6430
  %2 = and i32 %1, -15728641, !dbg !6430
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6430
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !6431, !srcloc !6438
  call void @llvm.dbg.value(metadata i32 %3, metadata !6436, metadata !DIExpression()) #25, !dbg !6439
  %4 = and i32 %3, -5, !dbg !6440
  call void @llvm.dbg.value(metadata i32 %4, metadata !6441, metadata !DIExpression()) #25, !dbg !6446
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !6448, !srcloc !6449
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6450, !srcloc !6427
  ret void, !dbg !6452
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6456, metadata !DIExpression()), !dbg !6457
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6458
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6459
  store i32 %0, i32* %3, align 4, !dbg !6460
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6461
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6462
  store i32 %4, i32* %5, align 4, !dbg !6463
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6464
  %7 = or i32 %6, 268435456, !dbg !6464
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6464
  call void @llvm.dbg.value(metadata i32 0, metadata !6465, metadata !DIExpression()) #25, !dbg !6468
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6470, !srcloc !6471
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6472
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6473
  %10 = load i32, i32* %9, align 4, !dbg !6473
  ret i32 %10, !dbg !6474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #6 !dbg !6475 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6587, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6588, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.value(metadata i8* %2, metadata !6589, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6590, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.value(metadata i8* %4, metadata !6591, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.value(metadata i8* %5, metadata !6592, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.value(metadata i8* %6, metadata !6593, metadata !DIExpression()), !dbg !6595
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6596
  call void @llvm.dbg.value(metadata i8* %8, metadata !6594, metadata !DIExpression()), !dbg !6595
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6597
  %10 = bitcast i8* %9 to i32*, !dbg !6597
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6598
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6599
  %12 = bitcast i8* %8 to i32*, !dbg !6600
  store i32 %11, i32* %12, align 4, !dbg !6601
  %13 = ptrtoint i8* %4 to i32, !dbg !6602
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6603
  %15 = bitcast i8* %14 to i32*, !dbg !6603
  store i32 %13, i32* %15, align 4, !dbg !6604
  %16 = ptrtoint i8* %5 to i32, !dbg !6605
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6606
  %18 = bitcast i8* %17 to i32*, !dbg !6606
  store i32 %16, i32* %18, align 4, !dbg !6607
  %19 = ptrtoint i8* %6 to i32, !dbg !6608
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6609
  %21 = bitcast i8* %20 to i32*, !dbg !6609
  store i32 %19, i32* %21, align 4, !dbg !6610
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6611
  %23 = bitcast i8* %22 to i32*, !dbg !6611
  store i32 16777216, i32* %23, align 4, !dbg !6612
  %24 = ptrtoint i8* %8 to i32, !dbg !6613
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6614
  store i32 %24, i32* %25, align 8, !dbg !6615
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6616
  store i32 0, i32* %26, align 4, !dbg !6617
  ret void, !dbg !6618
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #7 !dbg !6619 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6624, metadata !DIExpression()), !dbg !6630
  call void @llvm.dbg.value(metadata i32 %1, metadata !6625, metadata !DIExpression()), !dbg !6630
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6631
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6626, metadata !DIExpression()), !dbg !6630
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6632
  br i1 %4, label %19, label %5, !dbg !6634

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6629, metadata !DIExpression()), !dbg !6630
  %6 = icmp eq i32 %0, -22, !dbg !6635
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6635
  %8 = load i32, i32* %7, align 4, !dbg !6635
  br i1 %6, label %16, label %9, !dbg !6637

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6635
  %11 = icmp ule i32 %10, %0, !dbg !6635
  %12 = icmp ugt i32 %8, %0, !dbg !6635
  %13 = and i1 %12, %11, !dbg !6635
  %14 = icmp ugt i32 %8, %1, !dbg !6635
  %15 = and i1 %14, %13, !dbg !6635
  br i1 %15, label %18, label %19, !dbg !6635

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6635
  br i1 %17, label %18, label %19, !dbg !6637

18:                                               ; preds = %9, %16
  br label %19, !dbg !6638

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6630
  ret i32 %20, !dbg !6640
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #5 !dbg !6641 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6645, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.value(metadata i8* %1, metadata !6646, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6647, metadata !DIExpression()), !dbg !6648
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6649
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !6650
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !6651, !srcloc !6652
  unreachable, !dbg !6653
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6654 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6672, metadata !DIExpression()), !dbg !6682
  call void @llvm.dbg.value(metadata i32 %1, metadata !6673, metadata !DIExpression()), !dbg !6682
  call void @llvm.dbg.value(metadata i32 %2, metadata !6674, metadata !DIExpression()), !dbg !6682
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6675, metadata !DIExpression()), !dbg !6682
  call void @llvm.dbg.value(metadata i32 0, metadata !6676, metadata !DIExpression()), !dbg !6682
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6683
  call void @llvm.dbg.value(metadata i32 %8, metadata !6677, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6682
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6684
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6684
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6685
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #25, !dbg !6685
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6681, metadata !DIExpression()), !dbg !6686
  call void @llvm.dbg.value(metadata i32 0, metadata !6687, metadata !DIExpression()) #25, !dbg !6690
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6692, !srcloc !6693
  call void @llvm.dbg.value(metadata i8* %6, metadata !6679, metadata !DIExpression(DW_OP_deref)), !dbg !6682
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !6694
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6680, metadata !DIExpression()), !dbg !6682
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6695
  br i1 %11, label %12, label %13, !dbg !6698

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.45, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 1057) #27, !dbg !6699
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.47, i32 0, i32 0)) #27, !dbg !6699
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 1057) #27, !dbg !6699
  unreachable, !dbg !6699

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6701
  call void @llvm.dbg.value(metadata i32 %14, metadata !6677, metadata !DIExpression()), !dbg !6682
  call void @llvm.dbg.value(metadata i8* %5, metadata !6678, metadata !DIExpression(DW_OP_deref)), !dbg !6682
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #26, !dbg !6702
  call void @llvm.dbg.value(metadata i32 %15, metadata !6676, metadata !DIExpression()), !dbg !6682
  %16 = load i8, i8* %5, align 1, !dbg !6703, !range !6705
  call void @llvm.dbg.value(metadata i8 %16, metadata !6678, metadata !DIExpression()), !dbg !6682
  %17 = icmp eq i8 %16, 0, !dbg !6703
  br i1 %17, label %18, label %35, !dbg !6706

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6707
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #27, !dbg !6708
  %21 = load i8, i8* %6, align 1, !dbg !6709, !range !6705
  call void @llvm.dbg.value(metadata i8 %21, metadata !6679, metadata !DIExpression()), !dbg !6682
  %22 = icmp eq i8 %21, 0, !dbg !6709
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6711
  %24 = load i32, i32* %23, align 4, !dbg !6711
  br i1 %22, label %30, label %25, !dbg !6712

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6713
  %27 = icmp eq i32 %26, 0, !dbg !6716
  br i1 %27, label %28, label %34, !dbg !6717

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6718
  br label %32, !dbg !6720

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6721
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6711
  br label %34, !dbg !6723

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #27, !dbg !6723
  br label %35, !dbg !6724

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #25, !dbg !6724
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6724
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6724
  ret void, !dbg !6724
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #6 !dbg !6725 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6730, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i32 %1, metadata !6731, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i32 %2, metadata !6732, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i8* %3, metadata !6733, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i8 0, metadata !6734, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6735, metadata !DIExpression()), !dbg !6736
  store i8 0, i8* %3, align 1, !dbg !6737
  %5 = icmp ult i32 %2, -16777216, !dbg !6738
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6740
  br i1 %8, label %16, label %9, !dbg !6740

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6741
  %11 = icmp eq i32 %10, 0, !dbg !6741
  br i1 %11, label %12, label %13, !dbg !6743

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6735, metadata !DIExpression()), !dbg !6736
  store i8 1, i8* %3, align 1, !dbg !6746
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6736
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6735, metadata !DIExpression()), !dbg !6736
  br label %16, !dbg !6749

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6736
  ret %struct.__esf* %17, !dbg !6750
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6751 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6755, metadata !DIExpression()), !dbg !6759
  call void @llvm.dbg.value(metadata i32 %1, metadata !6756, metadata !DIExpression()), !dbg !6759
  call void @llvm.dbg.value(metadata i8* %2, metadata !6757, metadata !DIExpression()), !dbg !6759
  call void @llvm.dbg.value(metadata i32 0, metadata !6758, metadata !DIExpression()), !dbg !6759
  store i8 0, i8* %2, align 1, !dbg !6760
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6761

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !6762
  call void @llvm.dbg.value(metadata i32 %5, metadata !6758, metadata !DIExpression()), !dbg !6759
  br label %11, !dbg !6764

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6765
  call void @llvm.dbg.value(metadata i32 %7, metadata !6758, metadata !DIExpression()), !dbg !6759
  br label %11, !dbg !6766

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6767
  call void @llvm.dbg.value(metadata i32 0, metadata !6758, metadata !DIExpression()), !dbg !6759
  br label %11, !dbg !6768

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !6769
  call void @llvm.dbg.value(metadata i32 0, metadata !6758, metadata !DIExpression()), !dbg !6759
  br label %11, !dbg !6770

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !6771
  br label %11, !dbg !6772

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6773
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6774 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6778, metadata !DIExpression()), !dbg !6781
  call void @llvm.dbg.value(metadata i8* %1, metadata !6779, metadata !DIExpression()), !dbg !6781
  call void @llvm.dbg.value(metadata i32 0, metadata !6780, metadata !DIExpression()), !dbg !6781
  store i8 0, i8* %1, align 1, !dbg !6782
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6783
  %4 = and i32 %3, 2, !dbg !6785
  %5 = icmp eq i32 %4, 0, !dbg !6786
  br i1 %5, label %6, label %35, !dbg !6787

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6788
  %8 = icmp sgt i32 %7, -1, !dbg !6790
  br i1 %8, label %9, label %35, !dbg !6791

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6792
  %11 = and i32 %10, 1073741824, !dbg !6794
  %12 = icmp eq i32 %11, 0, !dbg !6795
  br i1 %12, label %34, label %13, !dbg !6796

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !6797
  br i1 %14, label %15, label %18, !dbg !6800

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6801
  %17 = load i32, i32* %16, align 4, !dbg !6801
  call void @llvm.dbg.value(metadata i32 %17, metadata !6780, metadata !DIExpression()), !dbg !6781
  br label %35, !dbg !6803

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6804
  %20 = and i32 %19, 255, !dbg !6806
  %21 = icmp eq i32 %20, 0, !dbg !6807
  br i1 %21, label %24, label %22, !dbg !6808

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6809
  call void @llvm.dbg.value(metadata i32 %23, metadata !6780, metadata !DIExpression()), !dbg !6781
  br label %35, !dbg !6811

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6812
  %26 = and i32 %25, 65280, !dbg !6814
  %27 = icmp eq i32 %26, 0, !dbg !6815
  br i1 %27, label %29, label %28, !dbg !6816

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6817
  call void @llvm.dbg.value(metadata i32 0, metadata !6780, metadata !DIExpression()), !dbg !6781
  br label %35, !dbg !6819

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6820
  %31 = icmp ult i32 %30, 65536, !dbg !6822
  br i1 %31, label %33, label %32, !dbg !6823

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !6824
  call void @llvm.dbg.value(metadata i32 0, metadata !6780, metadata !DIExpression()), !dbg !6781
  br label %35

33:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.50, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 755) #27, !dbg !6826
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5.51, i32 0, i32 0)) #27, !dbg !6826
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 755) #27, !dbg !6826
  unreachable, !dbg !6826

34:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.50, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 760) #27, !dbg !6831
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.6.52, i32 0, i32 0)) #27, !dbg !6831
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 760) #27, !dbg !6831
  unreachable, !dbg !6831

35:                                               ; preds = %6, %15, %28, %32, %22, %2
  %36 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], !dbg !6781
  call void @llvm.dbg.value(metadata i32 %36, metadata !6780, metadata !DIExpression()), !dbg !6781
  ret i32 %36, !dbg !6836
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6837 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6839, metadata !DIExpression()), !dbg !6852
  call void @llvm.dbg.value(metadata i32 %1, metadata !6840, metadata !DIExpression()), !dbg !6852
  call void @llvm.dbg.value(metadata i8* %2, metadata !6841, metadata !DIExpression()), !dbg !6852
  call void @llvm.dbg.value(metadata i32 0, metadata !6842, metadata !DIExpression()), !dbg !6852
  call void @llvm.dbg.value(metadata i32 -22, metadata !6843, metadata !DIExpression()), !dbg !6852
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6853
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6855
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6857
  %7 = and i32 %6, 2, !dbg !6858
  %8 = icmp eq i32 %7, 0, !dbg !6859
  br i1 %8, label %19, label %9, !dbg !6860

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6861
  call void @llvm.dbg.value(metadata i32 %10, metadata !6844, metadata !DIExpression()), !dbg !6862
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6863
  %12 = and i32 %11, 128, !dbg !6865
  %13 = icmp eq i32 %12, 0, !dbg !6866
  br i1 %13, label %19, label %14, !dbg !6867

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6843, metadata !DIExpression()), !dbg !6852
  %15 = icmp eq i32 %1, 0, !dbg !6868
  br i1 %15, label %19, label %16, !dbg !6871

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6872
  %18 = and i32 %17, -129, !dbg !6872
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6872
  br label %19, !dbg !6874

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6852
  call void @llvm.dbg.value(metadata i32 %20, metadata !6843, metadata !DIExpression()), !dbg !6852
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6875
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6877
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6879
  %24 = and i32 %23, 16, !dbg !6880
  %25 = icmp eq i32 %24, 0, !dbg !6880
  br i1 %25, label %26, label %30, !dbg !6881

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6882
  %28 = and i32 %27, 2, !dbg !6883
  %29 = icmp eq i32 %28, 0, !dbg !6883
  br i1 %29, label %44, label %30, !dbg !6884

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6885
  %32 = and i32 %31, 2048, !dbg !6886
  %33 = icmp eq i32 %32, 0, !dbg !6886
  br i1 %33, label %44, label %34, !dbg !6887

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6888
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #27, !dbg !6889
  call void @llvm.dbg.value(metadata i32 %36, metadata !6847, metadata !DIExpression()), !dbg !6890
  %37 = icmp eq i32 %36, 0, !dbg !6891
  br i1 %37, label %39, label %38, !dbg !6893

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6894, metadata !DIExpression()) #25, !dbg !6897
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #25, !dbg !6900, !srcloc !6901
  call void @llvm.dbg.value(metadata i32 2, metadata !6842, metadata !DIExpression()), !dbg !6852
  br label %44, !dbg !6902

39:                                               ; preds = %34
  %40 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6903
  %41 = and i32 %40, 16, !dbg !6903
  %42 = icmp eq i32 %41, 0, !dbg !6903
  br i1 %42, label %44, label %43, !dbg !6907

43:                                               ; preds = %39
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7.48, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 343) #27, !dbg !6908
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8.49, i32 0, i32 0)) #27, !dbg !6908
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 343) #27, !dbg !6908
  unreachable, !dbg !6908

44:                                               ; preds = %38, %39, %30, %26
  %45 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %39 ], !dbg !6852
  call void @llvm.dbg.value(metadata i32 %45, metadata !6842, metadata !DIExpression()), !dbg !6852
  %46 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6910
  %47 = and i32 %46, 32, !dbg !6912
  %48 = icmp eq i32 %47, 0, !dbg !6913
  br i1 %48, label %52, label %49, !dbg !6914

49:                                               ; preds = %44
  %50 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6915
  %51 = and i32 %50, -8193, !dbg !6915
  store volatile i32 %51, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6915
  br label %52, !dbg !6917

52:                                               ; preds = %49, %44
  %53 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6918
  %54 = or i32 %53, 255, !dbg !6918
  store volatile i32 %54, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6918
  store i8 0, i8* %2, align 1, !dbg !6919
  ret i32 %45, !dbg !6920
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6921 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6925, metadata !DIExpression()), !dbg !6932
  call void @llvm.dbg.value(metadata i32 %0, metadata !6926, metadata !DIExpression()), !dbg !6932
  call void @llvm.dbg.value(metadata i8* %1, metadata !6927, metadata !DIExpression()), !dbg !6932
  call void @llvm.dbg.value(metadata i32 0, metadata !6928, metadata !DIExpression()), !dbg !6932
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6933
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6935
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6937
  %6 = and i32 %5, 512, !dbg !6938
  %7 = icmp eq i32 %6, 0, !dbg !6938
  br i1 %7, label %18, label %8, !dbg !6939

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6940
  call void @llvm.dbg.value(metadata i32 %9, metadata !6929, metadata !DIExpression()), !dbg !6941
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6942
  %11 = and i32 %10, 32768, !dbg !6944
  %12 = icmp ne i32 %11, 0, !dbg !6945
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6946
  br i1 %14, label %15, label %18, !dbg !6946

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6947
  %17 = and i32 %16, -32769, !dbg !6947
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6947
  br label %18, !dbg !6951

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6952
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6954
  %21 = and i32 %20, 256, !dbg !6956
  %22 = icmp eq i32 %21, 0, !dbg !6957
  br i1 %22, label %23, label %25, !dbg !6958

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6959
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6961
  %27 = or i32 %26, 65280, !dbg !6961
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6961
  store i8 0, i8* %1, align 1, !dbg !6962
  ret void, !dbg !6963
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6964 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6970, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.value(metadata i32 0, metadata !6971, metadata !DIExpression()), !dbg !6972
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6973
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6975
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6977
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6979
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6981
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6983
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6985
  %8 = or i32 %7, -65536, !dbg !6985
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6985
  ret void, !dbg !6986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !6987 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6991, metadata !DIExpression()), !dbg !6993
  call void @llvm.dbg.value(metadata i8* %0, metadata !6992, metadata !DIExpression()), !dbg !6993
  store i8 0, i8* %0, align 1, !dbg !6994
  ret void, !dbg !6995
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6996 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7000, metadata !DIExpression()), !dbg !7003
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7004
  %3 = load i32, i32* %2, align 4, !dbg !7004
  %4 = inttoptr i32 %3 to i16*, !dbg !7005
  call void @llvm.dbg.value(metadata i16* %4, metadata !7001, metadata !DIExpression()), !dbg !7003
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7006
  %6 = or i32 %5, 256, !dbg !7006
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7006
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7007, !srcloc !7010
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7011, !srcloc !7014
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7015
  %8 = load i16, i16* %7, align 2, !dbg !7016
  call void @llvm.dbg.value(metadata i16 %8, metadata !7002, metadata !DIExpression()), !dbg !7003
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7017
  %10 = and i32 %9, -257, !dbg !7017
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7017
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7018, !srcloc !7010
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7020, !srcloc !7014
  %11 = icmp eq i16 %8, -8446, !dbg !7022
  ret i1 %11, !dbg !7024
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7025 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7026
  %2 = or i32 %1, 16, !dbg !7026
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7026
  ret void, !dbg !7027
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7028 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7031, metadata !DIExpression()), !dbg !7032
  br label %1, !dbg !7033

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7031, metadata !DIExpression()), !dbg !7032
  tail call fastcc void @__NVIC_SetPriority.55(i32 noundef %2) #26, !dbg !7035
  %3 = add nuw nsw i32 %2, 1, !dbg !7038
  call void @llvm.dbg.value(metadata i32 %3, metadata !7031, metadata !DIExpression()), !dbg !7032
  %4 = icmp eq i32 %3, 97, !dbg !7039
  br i1 %4, label %5, label %1, !dbg !7033, !llvm.loop !7040

5:                                                ; preds = %1
  ret void, !dbg !7042
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.55(i32 noundef %0) unnamed_addr #15 !dbg !7043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7045, metadata !DIExpression()), !dbg !7047
  call void @llvm.dbg.value(metadata i32 1, metadata !7046, metadata !DIExpression()), !dbg !7047
  %2 = and i32 %0, 15, !dbg !7048
  %3 = add nsw i32 %2, -4, !dbg !7048
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7048
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7048
  %6 = icmp slt i32 %0, 0, !dbg !7048
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7048
  store volatile i8 16, i8* %7, align 1, !dbg !7049
  ret void, !dbg !7051
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7052 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7160, metadata !DIExpression()), !dbg !7161
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7162
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7164
  br i1 %3, label %4, label %12, !dbg !7165

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !7166, !srcloc !7178
  call void @llvm.dbg.value(metadata i32 %5, metadata !7169, metadata !DIExpression()) #25, !dbg !7179
  %6 = icmp eq i32 %5, 0, !dbg !7180
  br i1 %6, label %12, label %7, !dbg !7181

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7182
  %9 = or i32 %8, 268435456, !dbg !7182
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7182
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7184
  %11 = and i32 %10, -32769, !dbg !7184
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7184
  br label %12, !dbg !7185

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !7186
  ret void, !dbg !7187
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7188 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !7189
  ret void, !dbg !7190
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !522 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !629, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.value(metadata i8 0, metadata !630, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.value(metadata i32 64, metadata !632, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.value(metadata i32 undef, metadata !631, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7191
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !7192
  %3 = load i32, i32* %2, align 4, !dbg !7192
  call void @llvm.dbg.value(metadata i32 %3, metadata !631, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7191
  %4 = add i32 %3, -64, !dbg !7194
  call void @llvm.dbg.value(metadata i32 %4, metadata !631, metadata !DIExpression()), !dbg !7191
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7195
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7196
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7197
  call void @llvm.dbg.value(metadata i8 1, metadata !630, metadata !DIExpression()), !dbg !7191
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !7198
  ret void, !dbg !7199
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7200 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7201
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7202, !srcloc !7205
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7206, !srcloc !7209
  ret void, !dbg !7210
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7211 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !7212, !srcloc !7215
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7216
  ret void, !dbg !7217
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7218 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7233, metadata !DIExpression()), !dbg !7237
  call void @llvm.dbg.value(metadata i8 %1, metadata !7234, metadata !DIExpression()), !dbg !7237
  call void @llvm.dbg.value(metadata i32 %2, metadata !7235, metadata !DIExpression()), !dbg !7237
  call void @llvm.dbg.value(metadata i32 %3, metadata !7236, metadata !DIExpression()), !dbg !7237
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7238
  %6 = icmp eq i32 %5, -22, !dbg !7240
  br i1 %6, label %7, label %9, !dbg !7241

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.62, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 283) #27, !dbg !7242
  %8 = zext i8 %1 to i32, !dbg !7242
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.65, i32 0, i32 0), i32 noundef %8) #27, !dbg !7242
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 283) #27, !dbg !7242
  unreachable, !dbg !7242

9:                                                ; preds = %4
  ret void, !dbg !7247
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7248 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7253, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i8 %1, metadata !7254, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i32 undef, metadata !7255, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i32 undef, metadata !7256, metadata !DIExpression()), !dbg !7258
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7259
  call void @llvm.dbg.value(metadata i8 %3, metadata !7257, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7258
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !7260
  call void @llvm.dbg.value(metadata i32 %4, metadata !7257, metadata !DIExpression()), !dbg !7258
  %5 = trunc i32 %4 to i8, !dbg !7261
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7262
  ret i32 %4, !dbg !7263
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !7264 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7268, metadata !DIExpression()), !dbg !7274
  call void @llvm.dbg.value(metadata i8 %1, metadata !7269, metadata !DIExpression()), !dbg !7274
  call void @llvm.dbg.value(metadata i8 %2, metadata !7270, metadata !DIExpression()), !dbg !7274
  call void @llvm.dbg.value(metadata i1 %3, metadata !7271, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7274
  %5 = zext i8 %2 to i32, !dbg !7275
  call void @llvm.dbg.value(metadata i32 %5, metadata !7273, metadata !DIExpression()), !dbg !7274
  call void @llvm.dbg.value(metadata i32 0, metadata !7272, metadata !DIExpression()), !dbg !7274
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7273, metadata !DIExpression()), !dbg !7274
  call void @llvm.dbg.value(metadata i32 0, metadata !7272, metadata !DIExpression()), !dbg !7274
  %7 = icmp eq i8 %1, 0, !dbg !7276
  br i1 %7, label %29, label %8, !dbg !7279

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7273, metadata !DIExpression()), !dbg !7274
  call void @llvm.dbg.value(metadata i32 %10, metadata !7272, metadata !DIExpression()), !dbg !7274
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7280
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7283
  %13 = load i32, i32* %12, align 4, !dbg !7283
  %14 = icmp eq i32 %13, 0, !dbg !7284
  br i1 %14, label %25, label %15, !dbg !7285

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7286

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7288
  %18 = icmp eq i32 %17, 0, !dbg !7288
  br i1 %18, label %29, label %19, !dbg !7289

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7290
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7291
  call void @llvm.dbg.value(metadata i32 %21, metadata !7273, metadata !DIExpression()), !dbg !7274
  %22 = icmp eq i32 %21, -22, !dbg !7292
  br i1 %22, label %29, label %23, !dbg !7294

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7295
  call void @llvm.dbg.value(metadata i32 %24, metadata !7273, metadata !DIExpression()), !dbg !7274
  br label %25, !dbg !7296

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7274
  call void @llvm.dbg.value(metadata i32 %26, metadata !7273, metadata !DIExpression()), !dbg !7274
  %27 = add nuw nsw i32 %10, 1, !dbg !7297
  call void @llvm.dbg.value(metadata i32 %27, metadata !7272, metadata !DIExpression()), !dbg !7274
  %28 = icmp eq i32 %27, %6, !dbg !7276
  br i1 %28, label %29, label %8, !dbg !7279, !llvm.loop !7298

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7274
  ret i32 %30, !dbg !7300
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7301 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7305, metadata !DIExpression()), !dbg !7307
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7308
  %3 = load i32, i32* %2, align 4, !dbg !7308
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7309, !range !4177
  %5 = icmp ult i32 %4, 2, !dbg !7309
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7310
  br i1 %7, label %8, label %15, !dbg !7310

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7311
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7312
  %11 = load i32, i32* %10, align 4, !dbg !7312
  %12 = and i32 %11, %9, !dbg !7313
  %13 = icmp eq i32 %12, 0, !dbg !7314
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7306, metadata !DIExpression()), !dbg !7307
  ret i32 %16, !dbg !7315
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7316 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7320, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7321, metadata !DIExpression()), !dbg !7323
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7324
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !7324
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7322, metadata !DIExpression()), !dbg !7325
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7326
  %6 = load i32, i32* %5, align 4, !dbg !7326
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7327
  store i32 %6, i32* %7, align 4, !dbg !7328
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7329
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7330
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7331
  %11 = load i32, i32* %10, align 4, !dbg !7331
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct._sfnode* noundef nonnull %8, %struct._sfnode* noundef nonnull %9, i32 noundef %11) #26, !dbg !7332
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7333
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !7334
  ret i32 %12, !dbg !7335
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct._sfnode* nocapture noundef writeonly %0, %struct._sfnode* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #11 !dbg !7336 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !7343, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !7344, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata i32 undef, metadata !7345, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata i32 %2, metadata !7346, metadata !DIExpression()), !dbg !7347
  %4 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %1, i32 0, i32 0, !dbg !7348
  %5 = load i32, i32* %4, align 4, !dbg !7348
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7349
  %7 = or i32 %6, %5, !dbg !7350
  %8 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !7351
  store i32 %7, i32* %8, align 4, !dbg !7352
  ret void, !dbg !7353
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7354 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7358, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7359, metadata !DIExpression()), !dbg !7360
  %3 = zext i8 %0 to i32, !dbg !7361
  %4 = icmp ugt i8 %0, 7, !dbg !7363
  br i1 %4, label %6, label %5, !dbg !7364

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7365
  br label %6, !dbg !7366

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7360
  ret i32 %7, !dbg !7367
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7372, metadata !DIExpression()), !dbg !7374
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7373, metadata !DIExpression()), !dbg !7374
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7375
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7376
  %4 = load i32, i32* %3, align 4, !dbg !7376
  %5 = and i32 %4, -32, !dbg !7377
  %6 = or i32 %5, %0, !dbg !7378
  %7 = or i32 %6, 16, !dbg !7378
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7379
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7380
  %9 = load i32, i32* %8, align 4, !dbg !7380
  %10 = or i32 %9, 1, !dbg !7381
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7382
  ret void, !dbg !7383
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7384 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7387, metadata !DIExpression()), !dbg !7388
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7389
  ret void, !dbg !7390
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #10 !dbg !7391 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7395, metadata !DIExpression()), !dbg !7396
  %2 = icmp ult i32 %0, 33, !dbg !7397
  br i1 %2, label %11, label %3, !dbg !7399

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7400
  br i1 %4, label %11, label %5, !dbg !7402

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7403
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7404, !range !4177
  %8 = mul nsw i32 %7, -2, !dbg !7405
  %9 = add nsw i32 %8, 62, !dbg !7405
  %10 = and i32 %9, 62, !dbg !7406
  br label %11, !dbg !7407

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7396
  ret i32 %12, !dbg !7408
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7409 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7413, metadata !DIExpression()), !dbg !7415
  call void @llvm.dbg.value(metadata i8 %1, metadata !7414, metadata !DIExpression()), !dbg !7415
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7416
  %4 = icmp eq i32 %3, -22, !dbg !7418
  br i1 %4, label %5, label %7, !dbg !7419

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.62, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 314) #27, !dbg !7420
  %6 = zext i8 %1 to i32, !dbg !7420
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.68, i32 0, i32 0), i32 noundef %6) #27, !dbg !7420
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 314) #27, !dbg !7420
  unreachable, !dbg !7420

7:                                                ; preds = %2
  ret void, !dbg !7425
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7426 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7430, metadata !DIExpression()), !dbg !7437
  call void @llvm.dbg.value(metadata i8 %1, metadata !7431, metadata !DIExpression()), !dbg !7437
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7438
  call void @llvm.dbg.value(metadata i8 %3, metadata !7432, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7437
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7439
  call void @llvm.dbg.value(metadata i32 %4, metadata !7432, metadata !DIExpression()), !dbg !7437
  %5 = icmp ne i32 %4, -22, !dbg !7440
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7441
  call void @llvm.dbg.value(metadata i32 %4, metadata !7433, metadata !DIExpression()), !dbg !7442
  br i1 %7, label %8, label %12, !dbg !7441

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7433, metadata !DIExpression()), !dbg !7442
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7443
  %10 = add i32 %9, 1, !dbg !7446
  call void @llvm.dbg.value(metadata i32 %10, metadata !7433, metadata !DIExpression()), !dbg !7442
  %11 = icmp eq i32 %10, 8, !dbg !7447
  br i1 %11, label %12, label %8, !dbg !7448, !llvm.loop !7449

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7451
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7452 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7455, metadata !DIExpression()), !dbg !7456
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7457
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7458
  ret void, !dbg !7459
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7460 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7465
  %2 = icmp ugt i32 %1, 8, !dbg !7467
  br i1 %2, label %3, label %4, !dbg !7468

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.62, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 341) #27, !dbg !7469
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.69, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #27, !dbg !7469
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 341) #27, !dbg !7469
  unreachable, !dbg !7469

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7474
  call void @llvm.dbg.value(metadata i32 0, metadata !7464, metadata !DIExpression()), !dbg !7475
  %5 = icmp eq i32 %1, 0, !dbg !7476
  br i1 %5, label %13, label %6, !dbg !7479

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7479

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7464, metadata !DIExpression()), !dbg !7475
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7480
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #26, !dbg !7482
  %11 = add nuw i32 %9, 1, !dbg !7483
  call void @llvm.dbg.value(metadata i32 %11, metadata !7464, metadata !DIExpression()), !dbg !7475
  %12 = icmp eq i32 %11, %1, !dbg !7476
  br i1 %12, label %13, label %8, !dbg !7479, !llvm.loop !7484

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7486
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7487
  tail call void @arm_core_mpu_enable() #26, !dbg !7488
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7489
  %16 = and i32 %15, 65280, !dbg !7489
  %17 = icmp eq i32 %16, 2048, !dbg !7489
  br i1 %17, label %19, label %18, !dbg !7492

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.62, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 435) #27, !dbg !7493
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.71, i32 0, i32 0)) #27, !dbg !7493
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 435) #27, !dbg !7493
  unreachable, !dbg !7493

19:                                               ; preds = %13
  ret i32 0, !dbg !7495
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7496 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7503, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.value(metadata i8* %1, metadata !7504, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.value(metadata i8* %0, metadata !7505, metadata !DIExpression()), !dbg !7506
  %3 = load i8, i8* %1, align 1, !dbg !7507
  %4 = icmp eq i8 %3, 0, !dbg !7508
  br i1 %4, label %13, label %5, !dbg !7509

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7503, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.value(metadata i8* %8, metadata !7504, metadata !DIExpression()), !dbg !7506
  store i8 %6, i8* %7, align 1, !dbg !7510
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7512
  call void @llvm.dbg.value(metadata i8* %9, metadata !7503, metadata !DIExpression()), !dbg !7506
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7513
  call void @llvm.dbg.value(metadata i8* %10, metadata !7504, metadata !DIExpression()), !dbg !7506
  %11 = load i8, i8* %10, align 1, !dbg !7507
  %12 = icmp eq i8 %11, 0, !dbg !7508
  br i1 %12, label %13, label %5, !dbg !7509, !llvm.loop !7514

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7516
  ret i8* %0, !dbg !7517
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7518 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7522, metadata !DIExpression()), !dbg !7526
  call void @llvm.dbg.value(metadata i8* %1, metadata !7523, metadata !DIExpression()), !dbg !7526
  call void @llvm.dbg.value(metadata i32 %2, metadata !7524, metadata !DIExpression()), !dbg !7526
  call void @llvm.dbg.value(metadata i8* %0, metadata !7525, metadata !DIExpression()), !dbg !7526
  %4 = icmp eq i32 %2, 0, !dbg !7527
  br i1 %4, label %22, label %5, !dbg !7528

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7522, metadata !DIExpression()), !dbg !7526
  call void @llvm.dbg.value(metadata i32 %7, metadata !7524, metadata !DIExpression()), !dbg !7526
  call void @llvm.dbg.value(metadata i8* %8, metadata !7523, metadata !DIExpression()), !dbg !7526
  %9 = load i8, i8* %8, align 1, !dbg !7529
  %10 = icmp eq i8 %9, 0, !dbg !7530
  br i1 %10, label %16, label %11, !dbg !7531

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7532
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7534
  call void @llvm.dbg.value(metadata i8* %12, metadata !7523, metadata !DIExpression()), !dbg !7526
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7535
  call void @llvm.dbg.value(metadata i8* %13, metadata !7522, metadata !DIExpression()), !dbg !7526
  %14 = add i32 %7, -1, !dbg !7536
  call void @llvm.dbg.value(metadata i32 %14, metadata !7524, metadata !DIExpression()), !dbg !7526
  %15 = icmp eq i32 %14, 0, !dbg !7527
  br i1 %15, label %22, label %5, !dbg !7528, !llvm.loop !7537

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7522, metadata !DIExpression()), !dbg !7526
  call void @llvm.dbg.value(metadata i32 %18, metadata !7524, metadata !DIExpression()), !dbg !7526
  store i8 0, i8* %17, align 1, !dbg !7539
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7541
  call void @llvm.dbg.value(metadata i8* %19, metadata !7522, metadata !DIExpression()), !dbg !7526
  %20 = add i32 %18, -1, !dbg !7542
  call void @llvm.dbg.value(metadata i32 %20, metadata !7524, metadata !DIExpression()), !dbg !7526
  %21 = icmp eq i32 %20, 0, !dbg !7543
  br i1 %21, label %22, label %16, !dbg !7544, !llvm.loop !7545

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7547
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7548 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7552, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.value(metadata i32 %1, metadata !7553, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.value(metadata i32 %1, metadata !7554, metadata !DIExpression()), !dbg !7555
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7556

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7552, metadata !DIExpression()), !dbg !7555
  %6 = load i8, i8* %5, align 1, !dbg !7557
  %7 = icmp eq i8 %6, %3, !dbg !7558
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7559
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7560
  call void @llvm.dbg.value(metadata i8* %10, metadata !7552, metadata !DIExpression()), !dbg !7555
  br i1 %9, label %11, label %4, !dbg !7559, !llvm.loop !7562

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7564
  ret i8* %12, !dbg !7565
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7566 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7568, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i32 %1, metadata !7569, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i8* null, metadata !7570, metadata !DIExpression()), !dbg !7571
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7572

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7571
  call void @llvm.dbg.value(metadata i8* %6, metadata !7570, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i8* %5, metadata !7568, metadata !DIExpression()), !dbg !7571
  %7 = load i8, i8* %5, align 1, !dbg !7573
  %8 = icmp eq i8 %7, %3, !dbg !7576
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7577
  call void @llvm.dbg.value(metadata i8* %9, metadata !7570, metadata !DIExpression()), !dbg !7571
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7578
  call void @llvm.dbg.value(metadata i8* %10, metadata !7568, metadata !DIExpression()), !dbg !7571
  %11 = icmp eq i8 %7, 0, !dbg !7579
  br i1 %11, label %12, label %4, !dbg !7579, !llvm.loop !7580

12:                                               ; preds = %4
  ret i8* %9, !dbg !7582
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7583 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7587, metadata !DIExpression()), !dbg !7589
  call void @llvm.dbg.value(metadata i32 0, metadata !7588, metadata !DIExpression()), !dbg !7589
  %2 = load i8, i8* %0, align 1, !dbg !7590
  %3 = icmp eq i8 %2, 0, !dbg !7591
  br i1 %3, label %11, label %4, !dbg !7592

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7588, metadata !DIExpression()), !dbg !7589
  call void @llvm.dbg.value(metadata i8* %6, metadata !7587, metadata !DIExpression()), !dbg !7589
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7593
  call void @llvm.dbg.value(metadata i8* %7, metadata !7587, metadata !DIExpression()), !dbg !7589
  %8 = add i32 %5, 1, !dbg !7595
  call void @llvm.dbg.value(metadata i32 %8, metadata !7588, metadata !DIExpression()), !dbg !7589
  %9 = load i8, i8* %7, align 1, !dbg !7590
  %10 = icmp eq i8 %9, 0, !dbg !7591
  br i1 %10, label %11, label %4, !dbg !7592, !llvm.loop !7596

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7589
  ret i32 %12, !dbg !7598
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7599 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7603, metadata !DIExpression()), !dbg !7606
  call void @llvm.dbg.value(metadata i32 %1, metadata !7604, metadata !DIExpression()), !dbg !7606
  call void @llvm.dbg.value(metadata i32 0, metadata !7605, metadata !DIExpression()), !dbg !7606
  %3 = load i8, i8* %0, align 1, !dbg !7607
  %4 = icmp ne i8 %3, 0, !dbg !7608
  %5 = icmp ne i32 %1, 0, !dbg !7609
  %6 = and i1 %4, %5, !dbg !7609
  br i1 %6, label %7, label %16, !dbg !7610

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7605, metadata !DIExpression()), !dbg !7606
  call void @llvm.dbg.value(metadata i8* %9, metadata !7603, metadata !DIExpression()), !dbg !7606
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7611
  call void @llvm.dbg.value(metadata i8* %10, metadata !7603, metadata !DIExpression()), !dbg !7606
  %11 = add nuw i32 %8, 1, !dbg !7613
  call void @llvm.dbg.value(metadata i32 %11, metadata !7605, metadata !DIExpression()), !dbg !7606
  %12 = load i8, i8* %10, align 1, !dbg !7607
  %13 = icmp ne i8 %12, 0, !dbg !7608
  %14 = icmp ult i32 %11, %1, !dbg !7609
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7609
  br i1 %15, label %7, label %16, !dbg !7610, !llvm.loop !7614

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7606
  ret i32 %17, !dbg !7616
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7617 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7621, metadata !DIExpression()), !dbg !7623
  call void @llvm.dbg.value(metadata i8* %1, metadata !7622, metadata !DIExpression()), !dbg !7623
  %3 = load i8, i8* %0, align 1, !dbg !7624
  %4 = load i8, i8* %1, align 1, !dbg !7625
  %5 = icmp ne i8 %3, %4, !dbg !7626
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7627
  br i1 %7, label %18, label %8, !dbg !7627

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7622, metadata !DIExpression()), !dbg !7623
  call void @llvm.dbg.value(metadata i8* %10, metadata !7621, metadata !DIExpression()), !dbg !7623
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7628
  call void @llvm.dbg.value(metadata i8* %11, metadata !7621, metadata !DIExpression()), !dbg !7623
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7630
  call void @llvm.dbg.value(metadata i8* %12, metadata !7622, metadata !DIExpression()), !dbg !7623
  %13 = load i8, i8* %11, align 1, !dbg !7624
  %14 = load i8, i8* %12, align 1, !dbg !7625
  %15 = icmp ne i8 %13, %14, !dbg !7626
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7627
  br i1 %17, label %18, label %8, !dbg !7627, !llvm.loop !7631

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7624
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7625
  %21 = zext i8 %19 to i32, !dbg !7634
  %22 = zext i8 %20 to i32, !dbg !7635
  %23 = sub nsw i32 %21, %22, !dbg !7636
  ret i32 %23, !dbg !7637
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7638 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7642, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i8* %1, metadata !7643, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i32 %2, metadata !7644, metadata !DIExpression()), !dbg !7645
  %4 = icmp eq i32 %2, 0, !dbg !7646
  br i1 %4, label %23, label %5, !dbg !7646

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7644, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i8* %7, metadata !7643, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i8* %8, metadata !7642, metadata !DIExpression()), !dbg !7645
  %9 = load i8, i8* %8, align 1, !dbg !7647
  %10 = load i8, i8* %7, align 1, !dbg !7648
  %11 = icmp ne i8 %9, %10, !dbg !7649
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7650
  br i1 %13, label %19, label %14, !dbg !7650

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7651
  call void @llvm.dbg.value(metadata i8* %15, metadata !7642, metadata !DIExpression()), !dbg !7645
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7653
  call void @llvm.dbg.value(metadata i8* %16, metadata !7643, metadata !DIExpression()), !dbg !7645
  %17 = add i32 %6, -1, !dbg !7654
  call void @llvm.dbg.value(metadata i32 %17, metadata !7644, metadata !DIExpression()), !dbg !7645
  %18 = icmp eq i32 %17, 0, !dbg !7646
  br i1 %18, label %23, label %5, !dbg !7646, !llvm.loop !7655

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7658
  %21 = zext i8 %10 to i32, !dbg !7659
  %22 = sub nsw i32 %20, %21, !dbg !7660
  br label %23, !dbg !7661

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7661
  ret i32 %24, !dbg !7662
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7663 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7668, metadata !DIExpression()), !dbg !7673
  call void @llvm.dbg.value(metadata i8* %1, metadata !7669, metadata !DIExpression()), !dbg !7673
  call void @llvm.dbg.value(metadata i8** %2, metadata !7670, metadata !DIExpression()), !dbg !7673
  %4 = icmp eq i8* %0, null, !dbg !7674
  br i1 %4, label %5, label %7, !dbg !7674

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7675
  br label %7, !dbg !7674

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7674
  call void @llvm.dbg.value(metadata i8* %8, metadata !7671, metadata !DIExpression()), !dbg !7673
  %9 = load i8, i8* %8, align 1, !dbg !7676
  %10 = icmp eq i8 %9, 0, !dbg !7676
  br i1 %10, label %33, label %11, !dbg !7677

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7671, metadata !DIExpression()), !dbg !7673
  %14 = zext i8 %12 to i32, !dbg !7676
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !7678
  %16 = icmp eq i8* %15, null, !dbg !7677
  br i1 %16, label %21, label %17, !dbg !7679

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7680
  call void @llvm.dbg.value(metadata i8* %18, metadata !7671, metadata !DIExpression()), !dbg !7673
  %19 = load i8, i8* %18, align 1, !dbg !7676
  %20 = icmp eq i8 %19, 0, !dbg !7676
  br i1 %20, label %33, label %11, !dbg !7677, !llvm.loop !7682

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7672, metadata !DIExpression()), !dbg !7673
  %24 = zext i8 %22 to i32, !dbg !7684
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !7685
  %26 = icmp eq i8* %25, null, !dbg !7686
  br i1 %26, label %27, label %31, !dbg !7687

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7688
  call void @llvm.dbg.value(metadata i8* %28, metadata !7672, metadata !DIExpression()), !dbg !7673
  %29 = load i8, i8* %28, align 1, !dbg !7684
  %30 = icmp eq i8 %29, 0, !dbg !7684
  br i1 %30, label %33, label %21, !dbg !7690, !llvm.loop !7691

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7693
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7696
  br label %33, !dbg !7697

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7673
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7673
  store i8* %34, i8** %2, align 4, !dbg !7673
  ret i8* %35, !dbg !7698
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7699 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7701, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.value(metadata i8* %1, metadata !7702, metadata !DIExpression()), !dbg !7703
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7704
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7705
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !7706
  ret i8* %0, !dbg !7707
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7708 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7710, metadata !DIExpression()), !dbg !7715
  call void @llvm.dbg.value(metadata i8* %1, metadata !7711, metadata !DIExpression()), !dbg !7715
  call void @llvm.dbg.value(metadata i32 %2, metadata !7712, metadata !DIExpression()), !dbg !7715
  call void @llvm.dbg.value(metadata i8* %0, metadata !7713, metadata !DIExpression()), !dbg !7715
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7716
  call void @llvm.dbg.value(metadata i32 %4, metadata !7714, metadata !DIExpression()), !dbg !7715
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7717
  call void @llvm.dbg.value(metadata i8* %5, metadata !7710, metadata !DIExpression()), !dbg !7715
  call void @llvm.dbg.value(metadata i8* %1, metadata !7711, metadata !DIExpression()), !dbg !7715
  call void @llvm.dbg.value(metadata i32 %2, metadata !7712, metadata !DIExpression()), !dbg !7715
  call void @llvm.dbg.value(metadata i32 %2, metadata !7712, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7715
  %6 = icmp eq i32 %2, 0, !dbg !7718
  br i1 %6, label %18, label %7, !dbg !7719

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7720
  call void @llvm.dbg.value(metadata i8* %9, metadata !7710, metadata !DIExpression()), !dbg !7715
  call void @llvm.dbg.value(metadata i8* %10, metadata !7711, metadata !DIExpression()), !dbg !7715
  %12 = load i8, i8* %10, align 1, !dbg !7721
  %13 = icmp eq i8 %12, 0, !dbg !7722
  br i1 %13, label %18, label %14, !dbg !7723

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7724
  call void @llvm.dbg.value(metadata i8* %15, metadata !7711, metadata !DIExpression()), !dbg !7715
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7726
  call void @llvm.dbg.value(metadata i8* %16, metadata !7710, metadata !DIExpression()), !dbg !7715
  store i8 %12, i8* %9, align 1, !dbg !7727
  call void @llvm.dbg.value(metadata i32 %11, metadata !7712, metadata !DIExpression()), !dbg !7715
  call void @llvm.dbg.value(metadata i32 %11, metadata !7712, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7715
  %17 = icmp eq i32 %11, 0, !dbg !7718
  br i1 %17, label %18, label %7, !dbg !7719, !llvm.loop !7728

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7715
  store i8 0, i8* %19, align 1, !dbg !7730
  ret i8* %0, !dbg !7731
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7732 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7736, metadata !DIExpression()), !dbg !7741
  call void @llvm.dbg.value(metadata i8* %1, metadata !7737, metadata !DIExpression()), !dbg !7741
  call void @llvm.dbg.value(metadata i32 %2, metadata !7738, metadata !DIExpression()), !dbg !7741
  call void @llvm.dbg.value(metadata i8* %0, metadata !7739, metadata !DIExpression()), !dbg !7741
  call void @llvm.dbg.value(metadata i8* %1, metadata !7740, metadata !DIExpression()), !dbg !7741
  %4 = icmp eq i32 %2, 0, !dbg !7742
  br i1 %4, label %31, label %5, !dbg !7744

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7740, metadata !DIExpression()), !dbg !7741
  call void @llvm.dbg.value(metadata i8* %0, metadata !7739, metadata !DIExpression()), !dbg !7741
  call void @llvm.dbg.value(metadata i32 %2, metadata !7738, metadata !DIExpression()), !dbg !7741
  %6 = add i32 %2, -1, !dbg !7745
  call void @llvm.dbg.value(metadata i32 %6, metadata !7738, metadata !DIExpression()), !dbg !7741
  %7 = icmp eq i32 %6, 0, !dbg !7746
  br i1 %7, label %23, label %8, !dbg !7747

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7748
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7748
  br label %11, !dbg !7748

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7740, metadata !DIExpression()), !dbg !7741
  call void @llvm.dbg.value(metadata i8* %14, metadata !7739, metadata !DIExpression()), !dbg !7741
  %15 = load i8, i8* %14, align 1, !dbg !7749
  %16 = load i8, i8* %13, align 1, !dbg !7750
  %17 = icmp eq i8 %15, %16, !dbg !7751
  br i1 %17, label %18, label %23, !dbg !7748

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7752
  call void @llvm.dbg.value(metadata i8* %19, metadata !7739, metadata !DIExpression()), !dbg !7741
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7754
  call void @llvm.dbg.value(metadata i8* %20, metadata !7740, metadata !DIExpression()), !dbg !7741
  call void @llvm.dbg.value(metadata i32 %12, metadata !7738, metadata !DIExpression()), !dbg !7741
  %21 = add i32 %12, -1, !dbg !7745
  call void @llvm.dbg.value(metadata i32 %21, metadata !7738, metadata !DIExpression()), !dbg !7741
  %22 = icmp eq i32 %21, 0, !dbg !7746
  br i1 %22, label %23, label %11, !dbg !7747, !llvm.loop !7755

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7741
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7741
  %26 = load i8, i8* %24, align 1, !dbg !7757
  %27 = zext i8 %26 to i32, !dbg !7757
  %28 = load i8, i8* %25, align 1, !dbg !7758
  %29 = zext i8 %28 to i32, !dbg !7758
  %30 = sub nsw i32 %27, %29, !dbg !7759
  br label %31, !dbg !7760

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7741
  ret i32 %32, !dbg !7761
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7762 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7766, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.value(metadata i8* %1, metadata !7767, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.value(metadata i32 %2, metadata !7768, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.value(metadata i8* %0, metadata !7769, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.value(metadata i8* %1, metadata !7770, metadata !DIExpression()), !dbg !7771
  %4 = ptrtoint i8* %0 to i32, !dbg !7772
  %5 = ptrtoint i8* %1 to i32, !dbg !7772
  %6 = sub i32 %4, %5, !dbg !7772
  %7 = icmp ult i32 %6, %2, !dbg !7774
  br i1 %7, label %10, label %8, !dbg !7775

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7770, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.value(metadata i8* %0, metadata !7769, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.value(metadata i32 %2, metadata !7768, metadata !DIExpression()), !dbg !7771
  %9 = icmp eq i32 %2, 0, !dbg !7776
  br i1 %9, label %26, label %17, !dbg !7778

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7768, metadata !DIExpression()), !dbg !7771
  %12 = add i32 %11, -1, !dbg !7779
  call void @llvm.dbg.value(metadata i32 %12, metadata !7768, metadata !DIExpression()), !dbg !7771
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7782
  %14 = load i8, i8* %13, align 1, !dbg !7782
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7783
  store i8 %14, i8* %15, align 1, !dbg !7784
  %16 = icmp eq i32 %12, 0, !dbg !7785
  br i1 %16, label %26, label %10, !dbg !7786, !llvm.loop !7787

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7770, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.value(metadata i8* %19, metadata !7769, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.value(metadata i32 %20, metadata !7768, metadata !DIExpression()), !dbg !7771
  %21 = load i8, i8* %18, align 1, !dbg !7789
  store i8 %21, i8* %19, align 1, !dbg !7791
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7792
  call void @llvm.dbg.value(metadata i8* %22, metadata !7769, metadata !DIExpression()), !dbg !7771
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7793
  call void @llvm.dbg.value(metadata i8* %23, metadata !7770, metadata !DIExpression()), !dbg !7771
  %24 = add i32 %20, -1, !dbg !7794
  call void @llvm.dbg.value(metadata i32 %24, metadata !7768, metadata !DIExpression()), !dbg !7771
  %25 = icmp eq i32 %24, 0, !dbg !7776
  br i1 %25, label %26, label %17, !dbg !7778, !llvm.loop !7795

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7797
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7798 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7804, metadata !DIExpression()), !dbg !7809
  call void @llvm.dbg.value(metadata i8* %1, metadata !7805, metadata !DIExpression()), !dbg !7809
  call void @llvm.dbg.value(metadata i32 %2, metadata !7806, metadata !DIExpression()), !dbg !7809
  call void @llvm.dbg.value(metadata i8* %0, metadata !7807, metadata !DIExpression()), !dbg !7809
  call void @llvm.dbg.value(metadata i8* %1, metadata !7808, metadata !DIExpression()), !dbg !7809
  %4 = icmp eq i32 %2, 0, !dbg !7810
  br i1 %4, label %14, label %5, !dbg !7811

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7808, metadata !DIExpression()), !dbg !7809
  call void @llvm.dbg.value(metadata i8* %7, metadata !7807, metadata !DIExpression()), !dbg !7809
  call void @llvm.dbg.value(metadata i32 %8, metadata !7806, metadata !DIExpression()), !dbg !7809
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7812
  call void @llvm.dbg.value(metadata i8* %9, metadata !7808, metadata !DIExpression()), !dbg !7809
  %10 = load i8, i8* %6, align 1, !dbg !7814
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7815
  call void @llvm.dbg.value(metadata i8* %11, metadata !7807, metadata !DIExpression()), !dbg !7809
  store i8 %10, i8* %7, align 1, !dbg !7816
  %12 = add i32 %8, -1, !dbg !7817
  call void @llvm.dbg.value(metadata i32 %12, metadata !7806, metadata !DIExpression()), !dbg !7809
  %13 = icmp eq i32 %12, 0, !dbg !7810
  br i1 %13, label %14, label %5, !dbg !7811, !llvm.loop !7818

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7820
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7821 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7825, metadata !DIExpression()), !dbg !7830
  call void @llvm.dbg.value(metadata i32 %1, metadata !7826, metadata !DIExpression()), !dbg !7830
  call void @llvm.dbg.value(metadata i32 %2, metadata !7827, metadata !DIExpression()), !dbg !7830
  call void @llvm.dbg.value(metadata i8* %0, metadata !7828, metadata !DIExpression()), !dbg !7830
  %4 = trunc i32 %1 to i8, !dbg !7831
  call void @llvm.dbg.value(metadata i8 %4, metadata !7829, metadata !DIExpression()), !dbg !7830
  call void @llvm.dbg.value(metadata i32 %2, metadata !7827, metadata !DIExpression()), !dbg !7830
  call void @llvm.dbg.value(metadata i8* %0, metadata !7828, metadata !DIExpression()), !dbg !7830
  %5 = icmp eq i32 %2, 0, !dbg !7832
  br i1 %5, label %12, label %6, !dbg !7833

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7827, metadata !DIExpression()), !dbg !7830
  call void @llvm.dbg.value(metadata i8* %8, metadata !7828, metadata !DIExpression()), !dbg !7830
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7834
  call void @llvm.dbg.value(metadata i8* %9, metadata !7828, metadata !DIExpression()), !dbg !7830
  store i8 %4, i8* %8, align 1, !dbg !7836
  %10 = add i32 %7, -1, !dbg !7837
  call void @llvm.dbg.value(metadata i32 %10, metadata !7827, metadata !DIExpression()), !dbg !7830
  %11 = icmp eq i32 %10, 0, !dbg !7832
  br i1 %11, label %12, label %6, !dbg !7833, !llvm.loop !7838

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7840
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7841 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7845, metadata !DIExpression()), !dbg !7851
  call void @llvm.dbg.value(metadata i32 %1, metadata !7846, metadata !DIExpression()), !dbg !7851
  call void @llvm.dbg.value(metadata i32 %2, metadata !7847, metadata !DIExpression()), !dbg !7851
  %4 = icmp eq i32 %2, 0, !dbg !7852
  br i1 %4, label %17, label %5, !dbg !7853

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7854

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7855
  call void @llvm.dbg.value(metadata i8* %9, metadata !7848, metadata !DIExpression()), !dbg !7855
  call void @llvm.dbg.value(metadata i32 %8, metadata !7847, metadata !DIExpression()), !dbg !7851
  call void @llvm.dbg.value(metadata i8* %9, metadata !7848, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7855
  %10 = load i8, i8* %9, align 1, !dbg !7856
  %11 = icmp eq i8 %10, %6, !dbg !7859
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7860
  call void @llvm.dbg.value(metadata i8* %12, metadata !7848, metadata !DIExpression()), !dbg !7855
  call void @llvm.dbg.value(metadata i32 %13, metadata !7847, metadata !DIExpression()), !dbg !7851
  br i1 %15, label %16, label %7, !dbg !7860, !llvm.loop !7861

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7863

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7851
  ret i8* %19, !dbg !7864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !7865 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7867, metadata !DIExpression()), !dbg !7868
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7869
  ret void, !dbg !7870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !7871 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7873, metadata !DIExpression()), !dbg !7874
  ret i32 -1, !dbg !7875
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7880, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i32* %1, metadata !7881, metadata !DIExpression()), !dbg !7882
  %3 = ptrtoint i32* %1 to i32, !dbg !7883
  %4 = and i32 %3, -2, !dbg !7883
  %5 = icmp eq i32 %4, 2, !dbg !7883
  br i1 %5, label %6, label %9, !dbg !7883

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7884
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !7884
  br label %9, !dbg !7885

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7885
  ret i32 %10, !dbg !7886
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7887 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7889, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.value(metadata i32* %1, metadata !7890, metadata !DIExpression()), !dbg !7891
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7892
  ret i32 %3, !dbg !7893
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7894 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7897, metadata !DIExpression()), !dbg !7899
  call void @llvm.dbg.value(metadata i32* %1, metadata !7898, metadata !DIExpression()), !dbg !7899
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7900, !srcloc !7902
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7903
  ret i32 %3, !dbg !7904
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7905 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7910, metadata !DIExpression()), !dbg !7914
  call void @llvm.dbg.value(metadata i32* %1, metadata !7911, metadata !DIExpression()), !dbg !7914
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7915
  call void @llvm.dbg.value(metadata i32 %3, metadata !7912, metadata !DIExpression()), !dbg !7914
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !7916
  call void @llvm.dbg.value(metadata i32 %4, metadata !7913, metadata !DIExpression()), !dbg !7914
  %5 = icmp ne i32 %3, %4, !dbg !7917
  %6 = sext i1 %5 to i32, !dbg !7918
  ret i32 %6, !dbg !7919
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7920 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7924, metadata !DIExpression()), !dbg !7928
  call void @llvm.dbg.value(metadata i32 %1, metadata !7925, metadata !DIExpression()), !dbg !7928
  call void @llvm.dbg.value(metadata i32 %2, metadata !7926, metadata !DIExpression()), !dbg !7928
  call void @llvm.dbg.value(metadata i32* %3, metadata !7927, metadata !DIExpression()), !dbg !7928
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7929
  ret i32 %5, !dbg !7930
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7931 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7933, metadata !DIExpression()), !dbg !7937
  call void @llvm.dbg.value(metadata i32 %1, metadata !7934, metadata !DIExpression()), !dbg !7937
  call void @llvm.dbg.value(metadata i32 %2, metadata !7935, metadata !DIExpression()), !dbg !7937
  call void @llvm.dbg.value(metadata i32* %3, metadata !7936, metadata !DIExpression()), !dbg !7937
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7938, !srcloc !7940
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7941
  ret i32 %5, !dbg !7942
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7943 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7945, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.value(metadata i32 %1, metadata !7946, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.value(metadata i32 %2, metadata !7947, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.value(metadata i32* %3, metadata !7948, metadata !DIExpression()), !dbg !7953
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7954
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7956
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7956
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7956
  br i1 %11, label %33, label %12, !dbg !7956

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7953
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7953
  call void @llvm.dbg.value(metadata i8* %14, metadata !7951, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.value(metadata i32 %13, metadata !7949, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.value(metadata i32 %1, metadata !7950, metadata !DIExpression()), !dbg !7953
  br label %15, !dbg !7957

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7959
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7953
  call void @llvm.dbg.value(metadata i8* %17, metadata !7951, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.value(metadata i32 %16, metadata !7950, metadata !DIExpression()), !dbg !7953
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7960
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7963
  call void @llvm.dbg.value(metadata i8* %19, metadata !7951, metadata !DIExpression()), !dbg !7953
  %20 = load i8, i8* %17, align 1, !dbg !7964
  %21 = zext i8 %20 to i32, !dbg !7965
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !7960
  %23 = icmp eq i32 %22, -1, !dbg !7966
  br i1 %23, label %30, label %24, !dbg !7967

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7968
  call void @llvm.dbg.value(metadata i32 %25, metadata !7950, metadata !DIExpression()), !dbg !7953
  %26 = icmp eq i32 %25, 0, !dbg !7969
  br i1 %26, label %27, label %15, !dbg !7970, !llvm.loop !7971

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7973
  call void @llvm.dbg.value(metadata i32 %28, metadata !7949, metadata !DIExpression()), !dbg !7953
  %29 = icmp eq i32 %28, 0, !dbg !7974
  br i1 %29, label %30, label %12, !dbg !7975, !llvm.loop !7976

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7953
  call void @llvm.dbg.value(metadata i32 %31, metadata !7949, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.label(metadata !7952), !dbg !7979
  %32 = sub i32 %2, %31, !dbg !7980
  br label %33, !dbg !7981

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7953
  ret i32 %34, !dbg !7982
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7983 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7987, metadata !DIExpression()), !dbg !7988
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7989
  %3 = icmp eq i32 %2, -1, !dbg !7991
  br i1 %3, label %8, label %4, !dbg !7992

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7993
  %6 = icmp eq i32 %5, -1, !dbg !7994
  %7 = sext i1 %6 to i32, !dbg !7993
  br label %8, !dbg !7995

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7988
  ret i32 %9, !dbg !7996
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7997 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7999, metadata !DIExpression()), !dbg !8000
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !8001
  ret void, !dbg !8002
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8007, metadata !DIExpression()), !dbg !8013
  call void @llvm.dbg.value(metadata i32 %1, metadata !8008, metadata !DIExpression()), !dbg !8013
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8009, metadata !DIExpression()), !dbg !8013
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8014
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8014
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8014
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8010, metadata !DIExpression()), !dbg !8013
  call void @llvm.dbg.value(metadata i32 %0, metadata !8012, metadata !DIExpression()), !dbg !8013
  %7 = icmp slt i32 %0, %1, !dbg !8015
  br i1 %7, label %8, label %22, !dbg !8018

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8012, metadata !DIExpression()), !dbg !8013
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !8019
  %11 = icmp eq i32 %10, 0, !dbg !8019
  br i1 %11, label %19, label %12, !dbg !8022

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !8023
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8025
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8025
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8027
  br i1 %15, label %19, label %16, !dbg !8028

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8029
  %18 = load i8*, i8** %17, align 4, !dbg !8029
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !8030
  br label %19, !dbg !8031

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8032
  call void @llvm.dbg.value(metadata i32 %20, metadata !8012, metadata !DIExpression()), !dbg !8013
  %21 = icmp eq i32 %20, %1, !dbg !8015
  br i1 %21, label %22, label %8, !dbg !8018, !llvm.loop !8033

22:                                               ; preds = %19, %3
  ret void, !dbg !8035
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !8036 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8038, metadata !DIExpression()), !dbg !8039
  %2 = shl nuw i32 1, %0, !dbg !8040
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !8043
  ret i32 %3, !dbg !8044
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !8045 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8049, metadata !DIExpression()), !dbg !8050
  %2 = shl nuw i32 1, %0, !dbg !8051
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !8054
  ret void, !dbg !8055
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8056 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8059, metadata !DIExpression()), !dbg !8060
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8061
  ret void, !dbg !8062
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8063 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8065, metadata !DIExpression()), !dbg !8066
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8067
  %3 = and i32 %2, %0, !dbg !8067
  %4 = icmp eq i32 %3, %0, !dbg !8068
  %5 = zext i1 %4 to i32, !dbg !8068
  ret i32 %5, !dbg !8069
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8070 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8072, metadata !DIExpression()), !dbg !8073
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !8074
  ret void, !dbg !8075
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8076 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8078, metadata !DIExpression()), !dbg !8079
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !8080
  ret void, !dbg !8081
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8082 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8084, metadata !DIExpression()), !dbg !8085
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !8086
  ret void, !dbg !8087
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8088 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8090, metadata !DIExpression()), !dbg !8091
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !8092
  ret void, !dbg !8093
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8094 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8096, metadata !DIExpression()), !dbg !8097
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !8098
  ret void, !dbg !8099
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8100 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8102, metadata !DIExpression()), !dbg !8103
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !8104
  ret void, !dbg !8105
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8106 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8108, metadata !DIExpression()), !dbg !8109
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !8110
  ret void, !dbg !8111
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8112 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8114, metadata !DIExpression()), !dbg !8115
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !8116
  ret void, !dbg !8117
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8118 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8120, metadata !DIExpression()), !dbg !8121
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !8122
  ret void, !dbg !8123
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8124 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8126, metadata !DIExpression()), !dbg !8127
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !8128
  ret void, !dbg !8129
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8130 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8132, metadata !DIExpression()), !dbg !8133
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !8134
  ret i32 0, !dbg !8135
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !878 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !882, metadata !DIExpression()), !dbg !8136
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !8137
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !8139
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !8141
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !8143
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !8145
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !8147
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !8149
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !8151
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !8153
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !8155
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !8157
  ret void, !dbg !8159
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8160 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8162, metadata !DIExpression()), !dbg !8164
  call void @llvm.dbg.value(metadata i32 0, metadata !8163, metadata !DIExpression()), !dbg !8164
  call void @llvm.dbg.value(metadata i32 undef, metadata !8163, metadata !DIExpression()), !dbg !8164
  %2 = lshr i32 6684671, %0, !dbg !8165
  %3 = and i32 %2, 1, !dbg !8165
  %4 = or i32 %3, %0, !dbg !8167
  %5 = icmp eq i32 %4, 0, !dbg !8167
  br i1 %5, label %6, label %7, !dbg !8167

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.84, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.85, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.86, i32 0, i32 0), i32 noundef 123) #27, !dbg !8168
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.86, i32 0, i32 0), i32 noundef 123) #27, !dbg !8168
  unreachable, !dbg !8168

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8173
  %9 = load i32, i32* %8, align 4, !dbg !8173
  call void @llvm.dbg.value(metadata i32 %9, metadata !8163, metadata !DIExpression()), !dbg !8164
  %10 = shl nuw i32 1, %0, !dbg !8174
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #26, !dbg !8175
  tail call void @arch_irq_enable(i32 noundef %9) #27, !dbg !8176
  ret void, !dbg !8177
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8178 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8180, metadata !DIExpression()), !dbg !8181
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8182
  %3 = or i32 %2, %0, !dbg !8182
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8182
  ret void, !dbg !8183
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8184 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8186, metadata !DIExpression()), !dbg !8187
  %2 = icmp slt i32 %0, 32, !dbg !8188
  br i1 %2, label %3, label %5, !dbg !8190

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8191
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !8193
  br label %5, !dbg !8194

5:                                                ; preds = %1, %3
  ret void, !dbg !8195
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8198, metadata !DIExpression()), !dbg !8199
  %2 = xor i32 %0, -1, !dbg !8200
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8200
  %4 = and i32 %3, %2, !dbg !8200
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8200
  ret void, !dbg !8201
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8202 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8206, metadata !DIExpression()), !dbg !8208
  call void @llvm.dbg.value(metadata i32 %1, metadata !8207, metadata !DIExpression()), !dbg !8208
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8209

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8210
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !8212
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !8213
  br label %11, !dbg !8214

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8215
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !8216
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !8217
  br label %11, !dbg !8218

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8219
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !8220
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !8221
  br label %11, !dbg !8222

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8223
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !8224
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !8225
  br label %11, !dbg !8226

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8227
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8230, metadata !DIExpression()), !dbg !8231
  %2 = xor i32 %0, -1, !dbg !8232
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8232
  %4 = and i32 %3, %2, !dbg !8232
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8232
  ret void, !dbg !8233
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8236, metadata !DIExpression()), !dbg !8237
  %2 = xor i32 %0, -1, !dbg !8238
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8238
  %4 = and i32 %3, %2, !dbg !8238
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8238
  ret void, !dbg !8239
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8242, metadata !DIExpression()), !dbg !8243
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8244
  %3 = or i32 %2, %0, !dbg !8244
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8244
  ret void, !dbg !8245
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8246 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8248, metadata !DIExpression()), !dbg !8249
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8250
  %3 = or i32 %2, %0, !dbg !8250
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8250
  ret void, !dbg !8251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !8252 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8256, metadata !DIExpression()), !dbg !8262
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8257, metadata !DIExpression()), !dbg !8262
  call void @llvm.dbg.value(metadata i8* %2, metadata !8258, metadata !DIExpression()), !dbg !8262
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !8259, metadata !DIExpression()), !dbg !8262
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8261, metadata !DIExpression()), !dbg !8262
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8263
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8263
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8265
  br i1 %6, label %7, label %9, !dbg !8266

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8267
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8268
  store i8* %2, i8** %8, align 4, !dbg !8269
  br label %9, !dbg !8270

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8262
  ret i32 %10, !dbg !8271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #6 !dbg !8272 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8274, metadata !DIExpression()), !dbg !8277
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !8275, metadata !DIExpression()), !dbg !8277
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8276, metadata !DIExpression()), !dbg !8277
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8278
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8279
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8280
  store i8* null, i8** %3, align 4, !dbg !8281
  ret void, !dbg !8282
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8283 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8285, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.value(metadata i8* %1, metadata !8286, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.value(metadata i8* %1, metadata !8287, metadata !DIExpression()), !dbg !8290
  %3 = bitcast i8* %1 to i32*, !dbg !8291
  %4 = load i32, i32* %3, align 4, !dbg !8291
  %5 = add i32 %4, -169, !dbg !8291
  %6 = icmp ult i32 %5, -121, !dbg !8291
  br i1 %6, label %15, label %7, !dbg !8293

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8294
  %9 = inttoptr i32 %8 to i32*, !dbg !8295
  call void @llvm.dbg.value(metadata i32* %9, metadata !8288, metadata !DIExpression()), !dbg !8290
  %10 = load volatile i32, i32* %9, align 4, !dbg !8296
  call void @llvm.dbg.value(metadata i32 %10, metadata !8289, metadata !DIExpression()), !dbg !8290
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8297
  %12 = bitcast i8* %11 to i32*, !dbg !8297
  %13 = load i32, i32* %12, align 4, !dbg !8297
  %14 = or i32 %13, %10, !dbg !8298
  call void @llvm.dbg.value(metadata i32 %14, metadata !8289, metadata !DIExpression()), !dbg !8290
  store volatile i32 %14, i32* %9, align 4, !dbg !8299
  br label %15, !dbg !8300

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8290
  ret i32 %16, !dbg !8301
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8302 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8304, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.value(metadata i8* %1, metadata !8305, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.value(metadata i8* %1, metadata !8306, metadata !DIExpression()), !dbg !8309
  %3 = bitcast i8* %1 to i32*, !dbg !8310
  %4 = load i32, i32* %3, align 4, !dbg !8310
  %5 = add i32 %4, -169, !dbg !8310
  %6 = icmp ult i32 %5, -121, !dbg !8310
  br i1 %6, label %16, label %7, !dbg !8312

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8313
  %9 = inttoptr i32 %8 to i32*, !dbg !8314
  call void @llvm.dbg.value(metadata i32* %9, metadata !8307, metadata !DIExpression()), !dbg !8309
  %10 = load volatile i32, i32* %9, align 4, !dbg !8315
  call void @llvm.dbg.value(metadata i32 %10, metadata !8308, metadata !DIExpression()), !dbg !8309
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8316
  %12 = bitcast i8* %11 to i32*, !dbg !8316
  %13 = load i32, i32* %12, align 4, !dbg !8316
  %14 = xor i32 %13, -1, !dbg !8317
  %15 = and i32 %10, %14, !dbg !8318
  call void @llvm.dbg.value(metadata i32 %15, metadata !8308, metadata !DIExpression()), !dbg !8309
  store volatile i32 %15, i32* %9, align 4, !dbg !8319
  br label %16, !dbg !8320

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8309
  ret i32 %17, !dbg !8321
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8322 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8324, metadata !DIExpression()), !dbg !8332
  call void @llvm.dbg.value(metadata i8* %1, metadata !8325, metadata !DIExpression()), !dbg !8332
  call void @llvm.dbg.value(metadata i32* %2, metadata !8326, metadata !DIExpression()), !dbg !8332
  call void @llvm.dbg.value(metadata i8* %1, metadata !8327, metadata !DIExpression()), !dbg !8332
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8333
  call void @llvm.dbg.value(metadata i32 %4, metadata !8328, metadata !DIExpression()), !dbg !8332
  %5 = tail call fastcc i32 @get_bus_clock(i32 noundef %4) #26, !dbg !8334
  call void @llvm.dbg.value(metadata i32 %5, metadata !8329, metadata !DIExpression()), !dbg !8332
  call void @llvm.dbg.value(metadata i32 %5, metadata !8330, metadata !DIExpression()), !dbg !8332
  call void @llvm.dbg.value(metadata i32 %4, metadata !8331, metadata !DIExpression()), !dbg !8332
  %6 = bitcast i8* %1 to i32*, !dbg !8335
  %7 = load i32, i32* %6, align 4, !dbg !8335
  switch i32 %7, label %20 [
    i32 48, label %18
    i32 52, label %18
    i32 56, label %18
    i32 64, label %8
    i32 68, label %9
    i32 168, label %18
    i32 6, label %18
    i32 1, label %10
    i32 2, label %13
    i32 4, label %16
    i32 5, label %17
  ], !dbg !8336

8:                                                ; preds = %3
  br label %18, !dbg !8337

9:                                                ; preds = %3
  br label %18, !dbg !8339

10:                                               ; preds = %3
  %11 = tail call i32 @get_pllsrc_frequency() #27, !dbg !8340
  %12 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %11, i32 noundef 2) #26, !dbg !8341
  br label %18, !dbg !8342

13:                                               ; preds = %3
  %14 = tail call i32 @get_pllsrc_frequency() #27, !dbg !8343
  %15 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %14, i32 noundef 8) #26, !dbg !8344
  br label %18, !dbg !8345

16:                                               ; preds = %3
  br label %18, !dbg !8346

17:                                               ; preds = %3
  br label %18, !dbg !8347

18:                                               ; preds = %3, %3, %3, %3, %3, %17, %16, %13, %10, %9, %8
  %19 = phi i32 [ %5, %8 ], [ %5, %9 ], [ %12, %10 ], [ %15, %13 ], [ 0, %16 ], [ 32000, %17 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %19, i32* %2, align 4, !dbg !8348
  br label %20, !dbg !8349

20:                                               ; preds = %18, %3
  %21 = phi i32 [ -134, %3 ], [ 0, %18 ], !dbg !8332
  ret i32 %21, !dbg !8349
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8350 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8352, metadata !DIExpression()), !dbg !8360
  call void @llvm.dbg.value(metadata i8* %1, metadata !8353, metadata !DIExpression()), !dbg !8360
  call void @llvm.dbg.value(metadata i8* %2, metadata !8354, metadata !DIExpression()), !dbg !8360
  call void @llvm.dbg.value(metadata i8* %1, metadata !8355, metadata !DIExpression()), !dbg !8360
  %4 = bitcast i8* %1 to i32*, !dbg !8361
  %5 = load i32, i32* %4, align 4, !dbg !8361
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8362
  call void @llvm.dbg.value(metadata i32 %6, metadata !8359, metadata !DIExpression()), !dbg !8360
  %7 = icmp slt i32 %6, 0, !dbg !8363
  br i1 %7, label %22, label %8, !dbg !8365

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8355, metadata !DIExpression()), !dbg !8360
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8366
  %10 = bitcast i8* %9 to i32*, !dbg !8366
  %11 = load i32, i32* %10, align 4, !dbg !8366
  %12 = lshr i32 %11, 16, !dbg !8366
  %13 = and i32 %12, 7, !dbg !8366
  %14 = lshr i32 %11, 8, !dbg !8367
  %15 = and i32 %14, 31, !dbg !8367
  %16 = shl i32 %13, %15, !dbg !8368
  call void @llvm.dbg.value(metadata i32 %16, metadata !8358, metadata !DIExpression()), !dbg !8360
  %17 = and i32 %11, 255, !dbg !8369
  %18 = or i32 %17, 1073887232, !dbg !8370
  %19 = inttoptr i32 %18 to i32*, !dbg !8371
  call void @llvm.dbg.value(metadata i32* %19, metadata !8356, metadata !DIExpression()), !dbg !8360
  %20 = load volatile i32, i32* %19, align 4, !dbg !8372
  call void @llvm.dbg.value(metadata i32 %20, metadata !8357, metadata !DIExpression()), !dbg !8360
  %21 = or i32 %16, %20, !dbg !8373
  call void @llvm.dbg.value(metadata i32 %21, metadata !8357, metadata !DIExpression()), !dbg !8360
  store volatile i32 %21, i32* %19, align 4, !dbg !8374
  br label %22, !dbg !8375

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8360
  ret i32 %23, !dbg !8376
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !8377 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8381, metadata !DIExpression()), !dbg !8383
  call void @llvm.dbg.value(metadata i32 0, metadata !8382, metadata !DIExpression()), !dbg !8383
  %2 = add i32 %0, -1, !dbg !8384
  %3 = icmp ult i32 %2, 6, !dbg !8384
  br i1 %3, label %4, label %7, !dbg !8384

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8384
  %6 = load i32, i32* %5, align 4, !dbg !8384
  call void @llvm.dbg.value(metadata i32 %6, metadata !8382, metadata !DIExpression()), !dbg !8383
  br label %7, !dbg !8385

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8383
  ret i32 %8, !dbg !8386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0) unnamed_addr #4 !dbg !8387 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8391, metadata !DIExpression()), !dbg !8393
  call void @llvm.dbg.value(metadata i32 2, metadata !8392, metadata !DIExpression()), !dbg !8393
  %2 = lshr i32 %0, 1, !dbg !8394
  ret i32 %2, !dbg !8395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !8396 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8400, metadata !DIExpression()), !dbg !8404
  call void @llvm.dbg.value(metadata i32 8, metadata !8401, metadata !DIExpression()), !dbg !8404
  call void @llvm.dbg.value(metadata i32 84, metadata !8402, metadata !DIExpression()), !dbg !8404
  call void @llvm.dbg.value(metadata i32 %1, metadata !8403, metadata !DIExpression()), !dbg !8404
  %3 = mul i32 %0, 84, !dbg !8405
  %4 = shl nsw i32 %1, 3, !dbg !8406
  %5 = udiv i32 %3, %4, !dbg !8407
  ret i32 %5, !dbg !8408
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8409 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8411, metadata !DIExpression()), !dbg !8414
  tail call void @config_enable_default_clocks() #27, !dbg !8415
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !8416
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8416
  %4 = lshr i32 %3, 4, !dbg !8416
  %5 = and i32 %4, 15, !dbg !8416
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8416
  %7 = load i8, i8* %6, align 1, !dbg !8416
  %8 = zext i8 %7 to i32, !dbg !8416
  %9 = lshr i32 %2, %8, !dbg !8416
  call void @llvm.dbg.value(metadata i32 %9, metadata !8412, metadata !DIExpression()), !dbg !8414
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8413, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8414
  %10 = icmp ult i32 %9, 84000000, !dbg !8417
  br i1 %10, label %11, label %13, !dbg !8419

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !8420
  br label %13, !dbg !8422

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8423
  tail call fastcc void @set_up_plls() #26, !dbg !8424
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8425
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8428
  br label %14, !dbg !8429

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8430
  %16 = icmp eq i32 %15, 8, !dbg !8431
  br i1 %16, label %17, label %14, !dbg !8429, !llvm.loop !8432

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8434
  br i1 %18, label %19, label %21, !dbg !8436

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !8437
  br label %21, !dbg !8439

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8440
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8441
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8442
  ret i32 0, !dbg !8443
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8444 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8446
  %2 = and i32 %1, 240, !dbg !8446
  ret i32 %2, !dbg !8447
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8448 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !8449
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !8454
  br label %1, !dbg !8455

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !8456
  %3 = icmp eq i32 %2, 1, !dbg !8457
  br i1 %3, label %4, label %1, !dbg !8455, !llvm.loop !8458

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8460
  br label %5, !dbg !8463

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8464
  %7 = icmp eq i32 %6, 1, !dbg !8465
  br i1 %7, label %8, label %5, !dbg !8463, !llvm.loop !8466

8:                                                ; preds = %5
  ret void, !dbg !8468
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8469 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8470
  %2 = icmp eq i32 %1, 8, !dbg !8472
  br i1 %2, label %3, label %4, !dbg !8473

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8474
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8476
  br label %4, !dbg !8477

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8478
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8479
  %6 = and i32 %5, -196609, !dbg !8479
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8479
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8480
  %8 = and i32 %7, -251658241, !dbg !8480
  %9 = or i32 %8, 134217728, !dbg !8480
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8480
  tail call void @config_pll_sysclock() #27, !dbg !8481
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8482
  br label %10, !dbg !8483

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8484
  %12 = icmp eq i32 %11, 1, !dbg !8485
  br i1 %12, label %13, label %10, !dbg !8483, !llvm.loop !8486

13:                                               ; preds = %10
  ret void, !dbg !8488
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8489 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8491, metadata !DIExpression()), !dbg !8492
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8493
  %2 = and i32 %1, -241, !dbg !8493
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8493
  ret void, !dbg !8494
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8495 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8497, metadata !DIExpression()), !dbg !8498
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8499
  %3 = and i32 %2, -4, !dbg !8499
  %4 = or i32 %3, %0, !dbg !8499
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8499
  ret void, !dbg !8500
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8501 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8502
  %2 = and i32 %1, 12, !dbg !8502
  ret i32 %2, !dbg !8503
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8504 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8506, metadata !DIExpression()), !dbg !8507
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8508
  %2 = and i32 %1, -7169, !dbg !8508
  %3 = or i32 %2, 4096, !dbg !8508
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8508
  ret void, !dbg !8509
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8510 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !8512, metadata !DIExpression()), !dbg !8513
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8514
  %2 = and i32 %1, -57345, !dbg !8514
  %3 = or i32 %2, 32768, !dbg !8514
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8514
  ret void, !dbg !8515
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8516 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8517
  %2 = icmp eq i32 %1, 1, !dbg !8519
  br i1 %2, label %7, label %3, !dbg !8520

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8521
  br label %4, !dbg !8523

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8524
  %6 = icmp eq i32 %5, 1, !dbg !8525
  br i1 %6, label %7, label %4, !dbg !8523, !llvm.loop !8526

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !8528
  br label %8, !dbg !8529

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8530
  %10 = icmp eq i32 %9, 0, !dbg !8531
  br i1 %10, label %11, label %8, !dbg !8529, !llvm.loop !8532

11:                                               ; preds = %8
  ret void, !dbg !8534
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8535 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8536
  %2 = and i32 %1, -16777217, !dbg !8536
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8536
  ret void, !dbg !8537
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8538 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8539
  %2 = or i32 %1, 16777216, !dbg !8539
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8539
  ret void, !dbg !8540
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8541 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8542
  %2 = lshr i32 %1, 25, !dbg !8543
  %3 = and i32 %2, 1, !dbg !8543
  ret i32 %3, !dbg !8544
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8545 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8546
  %2 = lshr i32 %1, 1, !dbg !8547
  %3 = and i32 %2, 1, !dbg !8547
  ret i32 %3, !dbg !8548
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8549 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8550
  %2 = or i32 %1, 1, !dbg !8550
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8550
  ret void, !dbg !8551
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8552 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8553
  %2 = and i32 %1, -262145, !dbg !8553
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8553
  ret void, !dbg !8554
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8555 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8556
  %2 = or i32 %1, 65536, !dbg !8556
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8556
  ret void, !dbg !8557
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !8558 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8559
  %2 = lshr i32 %1, 17, !dbg !8560
  %3 = and i32 %2, 1, !dbg !8560
  ret i32 %3, !dbg !8561
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8562 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8563
  %2 = or i32 %1, 1, !dbg !8563
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8563
  ret void, !dbg !8564
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8565 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8566
  %2 = lshr i32 %1, 1, !dbg !8567
  %3 = and i32 %2, 1, !dbg !8567
  ret i32 %3, !dbg !8568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !8569 {
  ret i32 16000000, !dbg !8571
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8575 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8576
  ret void, !dbg !8577
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8578 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8582, metadata !DIExpression()), !dbg !8586
  call void @llvm.dbg.value(metadata i32 8, metadata !8583, metadata !DIExpression()), !dbg !8586
  call void @llvm.dbg.value(metadata i32 84, metadata !8584, metadata !DIExpression()), !dbg !8586
  call void @llvm.dbg.value(metadata i32 0, metadata !8585, metadata !DIExpression()), !dbg !8586
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8587
  %2 = and i32 %1, -4227072, !dbg !8587
  %3 = or i32 %2, 4199688, !dbg !8587
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8587
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8588
  %5 = and i32 %4, -196609, !dbg !8588
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8588
  ret void, !dbg !8589
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8590 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !8591
  ret void, !dbg !8592
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8593 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8596, metadata !DIExpression()), !dbg !8598
  %2 = bitcast i32* %1 to i8*, !dbg !8599
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8599
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8597, metadata !DIExpression()), !dbg !8600
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8601
  %4 = or i32 %3, 268435456, !dbg !8601
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8601
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8602
  %6 = and i32 %5, 268435456, !dbg !8602
  store volatile i32 %6, i32* %1, align 4, !dbg !8603
  %7 = load volatile i32, i32* %1, align 4, !dbg !8604
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8605
  ret void, !dbg !8605
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8606 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8608, metadata !DIExpression()), !dbg !8609
  %2 = tail call fastcc zeroext i1 @device_is_ready.96() #26, !dbg !8610
  br i1 %2, label %3, label %4, !dbg !8612

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !8613
  br label %4, !dbg !8614

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8609
  ret i32 %5, !dbg !8615
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.96() unnamed_addr #1 !dbg !8616 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8620, metadata !DIExpression()), !dbg !8621
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8622, !srcloc !8624
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.97() #26, !dbg !8625
  ret i1 %1, !dbg !8626
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8627 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !8628
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !8629
  ret void, !dbg !8630
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8631 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8633, metadata !DIExpression()), !dbg !8634
  %2 = icmp eq i32 %0, 10, !dbg !8635
  br i1 %2, label %3, label %4, !dbg !8637

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !8638
  br label %4, !dbg !8640

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8641
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !8642
  ret i32 %0, !dbg !8643
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8644 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8647, metadata !DIExpression()), !dbg !8649
  call void @llvm.dbg.value(metadata i8 %0, metadata !8648, metadata !DIExpression()), !dbg !8649
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8650, !srcloc !8652
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !8653
  ret void, !dbg !8654
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8655 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8657, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i8 %0, metadata !8658, metadata !DIExpression()), !dbg !8660
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8661
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8659, metadata !DIExpression()), !dbg !8660
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8662
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8662
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_44, i8 noundef zeroext %0) #27, !dbg !8663
  ret void, !dbg !8664
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.97() unnamed_addr #1 !dbg !8665 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8667, metadata !DIExpression()), !dbg !8668
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_44) #27, !dbg !8669
  ret i1 %1, !dbg !8670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !8671 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8718, metadata !DIExpression()), !dbg !8721
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8719, metadata !DIExpression()), !dbg !8721
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8720, metadata !DIExpression()), !dbg !8721
  ret void, !dbg !8722
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8723 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8725, metadata !DIExpression()), !dbg !8730
  call void @llvm.dbg.value(metadata i8 %1, metadata !8726, metadata !DIExpression()), !dbg !8730
  call void @llvm.dbg.value(metadata i32 %2, metadata !8727, metadata !DIExpression()), !dbg !8730
  %5 = bitcast i32* %4 to i8*, !dbg !8731
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8731
  call void @llvm.dbg.value(metadata i32* %4, metadata !8729, metadata !DIExpression(DW_OP_deref)), !dbg !8730
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !8732
  call void @llvm.dbg.value(metadata i32 %6, metadata !8728, metadata !DIExpression()), !dbg !8730
  %7 = icmp eq i32 %6, 0, !dbg !8733
  br i1 %7, label %8, label %31, !dbg !8735

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8728, metadata !DIExpression()), !dbg !8730
  %9 = and i32 %2, 131072, !dbg !8736
  %10 = icmp eq i32 %9, 0, !dbg !8738
  br i1 %10, label %28, label %11, !dbg !8739

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8740
  %13 = icmp eq i32 %12, 0, !dbg !8743
  br i1 %13, label %18, label %14, !dbg !8744

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8745
  %16 = shl nuw i32 1, %15, !dbg !8745
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !8747
  br label %25, !dbg !8748

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8749
  %20 = icmp eq i32 %19, 0, !dbg !8751
  %21 = zext i8 %1 to i32, !dbg !8730
  br i1 %20, label %25, label %22, !dbg !8752

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8753
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !8755
  br label %25, !dbg !8756

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8757
  %27 = load i32, i32* %4, align 4, !dbg !8758
  call void @llvm.dbg.value(metadata i32 %30, metadata !8729, metadata !DIExpression()), !dbg !8730
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !8759
  br label %31, !dbg !8760

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8757
  %30 = load i32, i32* %4, align 4, !dbg !8758
  call void @llvm.dbg.value(metadata i32 %30, metadata !8729, metadata !DIExpression()), !dbg !8730
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !8759
  call void @llvm.dbg.value(metadata i32 0, metadata !8728, metadata !DIExpression()), !dbg !8730
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8761
  ret i32 %6, !dbg !8761
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !8762 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8766, metadata !DIExpression()), !dbg !8771
  call void @llvm.dbg.value(metadata i32* %1, metadata !8767, metadata !DIExpression()), !dbg !8771
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8772
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8772
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8772
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8768, metadata !DIExpression()), !dbg !8771
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8773
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8773
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8773
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8770, metadata !DIExpression()), !dbg !8771
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !8774
  store i32 %9, i32* %1, align 4, !dbg !8775
  ret i32 0, !dbg !8776
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !8777 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8779, metadata !DIExpression()), !dbg !8785
  call void @llvm.dbg.value(metadata i32 %1, metadata !8780, metadata !DIExpression()), !dbg !8785
  call void @llvm.dbg.value(metadata i32 %2, metadata !8781, metadata !DIExpression()), !dbg !8785
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8786
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8786
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8786
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8782, metadata !DIExpression()), !dbg !8785
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8787
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8787
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8787
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8783, metadata !DIExpression()), !dbg !8785
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !8788
  call void @llvm.dbg.value(metadata i32 %10, metadata !8784, metadata !DIExpression()), !dbg !8785
  %11 = xor i32 %1, -1, !dbg !8789
  %12 = and i32 %10, %11, !dbg !8790
  %13 = and i32 %2, %1, !dbg !8791
  %14 = or i32 %12, %13, !dbg !8792
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !8793
  ret i32 0, !dbg !8794
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8795 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8797, metadata !DIExpression()), !dbg !8801
  call void @llvm.dbg.value(metadata i32 %1, metadata !8798, metadata !DIExpression()), !dbg !8801
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8802
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8802
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8802
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8799, metadata !DIExpression()), !dbg !8801
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8803
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8803
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8803
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8800, metadata !DIExpression()), !dbg !8801
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8804
  store volatile i32 %1, i32* %9, align 4, !dbg !8804
  ret i32 0, !dbg !8805
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8806 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8808, metadata !DIExpression()), !dbg !8812
  call void @llvm.dbg.value(metadata i32 %1, metadata !8809, metadata !DIExpression()), !dbg !8812
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8813
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8813
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8813
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8810, metadata !DIExpression()), !dbg !8812
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8814
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8814
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8814
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8811, metadata !DIExpression()), !dbg !8812
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !8815
  ret i32 0, !dbg !8816
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8817 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8819, metadata !DIExpression()), !dbg !8823
  call void @llvm.dbg.value(metadata i32 %1, metadata !8820, metadata !DIExpression()), !dbg !8823
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8824
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8824
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8824
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8821, metadata !DIExpression()), !dbg !8823
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8825
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8825
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8825
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8822, metadata !DIExpression()), !dbg !8823
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8826
  %10 = load volatile i32, i32* %9, align 4, !dbg !8826
  %11 = xor i32 %10, %1, !dbg !8826
  store volatile i32 %11, i32* %9, align 4, !dbg !8826
  ret i32 0, !dbg !8827
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8828 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8830, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata i8 %1, metadata !8831, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata i32 %2, metadata !8832, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata i32 %3, metadata !8833, metadata !DIExpression()), !dbg !8840
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8841
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8841
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8841
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8834, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata i8* undef, metadata !8835, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata i32 0, metadata !8837, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata i32 0, metadata !8838, metadata !DIExpression()), !dbg !8840
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8842

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8843
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !8847
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8848
  %12 = load i32, i32* %11, align 4, !dbg !8848
  %13 = icmp eq i32 %10, %12, !dbg !8849
  br i1 %13, label %14, label %29, !dbg !8850

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !8851
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !8853
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !8854
  br label %29, !dbg !8855

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8856
  %17 = load i8*, i8** %16, align 4, !dbg !8856
  call void @llvm.dbg.value(metadata i8* %17, metadata !8835, metadata !DIExpression()), !dbg !8840
  %18 = zext i8 %1 to i32, !dbg !8857
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !8859
  %20 = icmp eq i32 %19, 0, !dbg !8860
  br i1 %20, label %21, label %29, !dbg !8861

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8862
  %23 = load i32, i32* %22, align 4, !dbg !8862
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !8863
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8864

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8837, metadata !DIExpression()), !dbg !8840
  br label %27, !dbg !8865

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8837, metadata !DIExpression()), !dbg !8840
  br label %27, !dbg !8867

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8837, metadata !DIExpression()), !dbg !8840
  br label %27, !dbg !8868

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8840
  call void @llvm.dbg.value(metadata i32 %28, metadata !8837, metadata !DIExpression()), !dbg !8840
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !8869
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !8870
  br label %29, !dbg !8870

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8840
  call void @llvm.dbg.value(metadata i32 %30, metadata !8838, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.label(metadata !8839), !dbg !8871
  ret i32 %30, !dbg !8872
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !8873 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8875, metadata !DIExpression()), !dbg !8879
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8876, metadata !DIExpression()), !dbg !8879
  call void @llvm.dbg.value(metadata i1 %2, metadata !8877, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8879
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8880
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8880
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8880
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8878, metadata !DIExpression()), !dbg !8879
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8881
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !8882
  ret i32 %8, !dbg !8883
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !8884 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8890, metadata !DIExpression()), !dbg !8893
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8891, metadata !DIExpression()), !dbg !8893
  call void @llvm.dbg.value(metadata i1 %2, metadata !8892, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8893
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !8894
  br i1 %4, label %5, label %6, !dbg !8897

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.99, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 42) #27, !dbg !8898
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0)) #27, !dbg !8898
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 42) #27, !dbg !8898
  unreachable, !dbg !8898

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !8900
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !8900
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !8900
  br i1 %9, label %10, label %11, !dbg !8903

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.99, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 43) #27, !dbg !8904
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i32 0, i32 0)) #27, !dbg !8904
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 43) #27, !dbg !8904
  unreachable, !dbg !8904

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !8906
  br i1 %12, label %18, label %13, !dbg !8908

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8909
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #26, !dbg !8912
  %16 = or i1 %15, %2, !dbg !8913
  %17 = select i1 %16, i32 0, i32 -22, !dbg !8913
  br i1 %2, label %19, label %21, !dbg !8913

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !8914

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8915
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #26, !dbg !8918
  br label %21, !dbg !8919

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !8893
  ret i32 %22, !dbg !8920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !8921 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8925, metadata !DIExpression()), !dbg !8926
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8927
  %3 = icmp eq %struct._snode* %2, null, !dbg !8927
  ret i1 %3, !dbg !8927
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !8928 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8932, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8933, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8934, metadata !DIExpression()), !dbg !8936
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8937
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8935, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8934, metadata !DIExpression()), !dbg !8936
  %4 = icmp eq %struct._snode* %3, null, !dbg !8939
  br i1 %4, label %15, label %5, !dbg !8937

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8935, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8934, metadata !DIExpression()), !dbg !8936
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8941
  br i1 %6, label %9, label %11, !dbg !8944

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8935, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8934, metadata !DIExpression()), !dbg !8936
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8941
  br i1 %8, label %9, label %11, !dbg !8944, !llvm.loop !8945

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !8946
  br label %15, !dbg !8946

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8935, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8934, metadata !DIExpression()), !dbg !8936
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !8939
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8935, metadata !DIExpression()), !dbg !8936
  %14 = icmp eq %struct._snode* %13, null, !dbg !8939
  br i1 %14, label %15, label %7, !dbg !8937, !llvm.loop !8945

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !8949 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8953, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8954, metadata !DIExpression()), !dbg !8955
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8956
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !8956
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !8956
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8957
  %5 = icmp eq %struct._snode* %4, null, !dbg !8957
  br i1 %5, label %6, label %8, !dbg !8956

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8959
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !8959
  br label %8, !dbg !8959

8:                                                ; preds = %6, %2
  ret void, !dbg !8956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !8961 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8965, metadata !DIExpression()), !dbg !8966
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8967
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8967
  ret %struct._snode* %3, !dbg !8968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !8969 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8973, metadata !DIExpression()), !dbg !8975
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8974, metadata !DIExpression()), !dbg !8975
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8976
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8977
  ret void, !dbg !8978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !8979 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8981, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8982, metadata !DIExpression()), !dbg !8983
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8984
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8985
  ret void, !dbg !8986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !8987 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8989, metadata !DIExpression()), !dbg !8990
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8991
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8991
  ret %struct._snode* %3, !dbg !8992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !8993 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8995, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8996, metadata !DIExpression()), !dbg !8997
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8998
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8999
  ret void, !dbg !9000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !9001 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9005, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9006, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9007, metadata !DIExpression()), !dbg !9008
  %4 = icmp eq %struct._snode* %1, null, !dbg !9009
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !9011
  br i1 %4, label %6, label %11, !dbg !9012

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !9013
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9015
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9015
  br i1 %8, label %9, label %15, !dbg !9013

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9017
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !9017
  br label %15, !dbg !9017

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !9019
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9021
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9021
  br i1 %13, label %14, label %15, !dbg !9019

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !9023
  br label %15, !dbg !9023

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !9012
  ret void, !dbg !9012
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #7 !dbg !9025 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9029, metadata !DIExpression()), !dbg !9030
  %2 = icmp eq %struct._snode* %0, null, !dbg !9031
  br i1 %2, label %5, label %3, !dbg !9031

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !9031
  br label %5, !dbg !9031

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9031
  ret %struct._snode* %6, !dbg !9031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !9032 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9034, metadata !DIExpression()), !dbg !9035
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !9036
  ret %struct._snode* %2, !dbg !9036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !9037 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9039, metadata !DIExpression()), !dbg !9040
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9041
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9041
  ret %struct._snode* %3, !dbg !9042
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9045, metadata !DIExpression()), !dbg !9048
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !9049, !range !9050
  call void @llvm.dbg.value(metadata i32 %2, metadata !9046, metadata !DIExpression()), !dbg !9048
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !9051
  call void @llvm.dbg.value(metadata i32 %3, metadata !9047, metadata !DIExpression()), !dbg !9048
  ret i32 %3, !dbg !9052
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9053 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9055, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i8* %1, metadata !9056, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i8* %1, metadata !9057, metadata !DIExpression()), !dbg !9058
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9059
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9059
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9060
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9060
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9060
  %8 = shl nuw i32 1, %0, !dbg !9061
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !9062
  ret void, !dbg !9063
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9064 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9068, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata i32 %1, metadata !9069, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9070, metadata !DIExpression()), !dbg !9074
  %4 = bitcast i64* %3 to i8*, !dbg !9075
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !9075
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9072, metadata !DIExpression()), !dbg !9074
  store i64 70368744177732, i64* %3, align 8, !dbg !9076
  call void @llvm.dbg.value(metadata i64* %3, metadata !9072, metadata !DIExpression(DW_OP_deref)), !dbg !9074
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !9077
  call void @llvm.dbg.value(metadata i32 %5, metadata !9073, metadata !DIExpression()), !dbg !9074
  %6 = icmp eq i32 %5, 0, !dbg !9078
  br i1 %6, label %7, label %8, !dbg !9080

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !9081
  br label %8, !dbg !9082

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !9083
  ret void, !dbg !9083
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9084 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9086, metadata !DIExpression()), !dbg !9089
  call void @llvm.dbg.value(metadata i8* %0, metadata !9087, metadata !DIExpression()), !dbg !9089
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9090
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9088, metadata !DIExpression()), !dbg !9089
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9091
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9091
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #27, !dbg !9092
  ret i32 %5, !dbg !9093
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9094 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9096, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i32 %1, metadata !9097, metadata !DIExpression()), !dbg !9099
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !9100
  call void @llvm.dbg.value(metadata i32 %3, metadata !9098, metadata !DIExpression()), !dbg !9099
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !9101
  ret void, !dbg !9102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !9103 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9107, metadata !DIExpression()), !dbg !9108
  %2 = sdiv i32 %0, 4, !dbg !9109
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9110
  %6 = add nsw i32 %5, 16, !dbg !9111
  %7 = shl i32 15, %6, !dbg !9112
  %8 = or i32 %7, %2, !dbg !9113
  ret i32 %8, !dbg !9114
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9115 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9119, metadata !DIExpression()), !dbg !9121
  call void @llvm.dbg.value(metadata i32 %1, metadata !9120, metadata !DIExpression()), !dbg !9121
  %3 = and i32 %1, 255, !dbg !9122
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9122
  %5 = load volatile i32, i32* %4, align 4, !dbg !9122
  %6 = lshr i32 %1, 16, !dbg !9122
  %7 = xor i32 %6, -1, !dbg !9122
  %8 = and i32 %5, %7, !dbg !9122
  call void @llvm.dbg.value(metadata i32 %6, metadata !9123, metadata !DIExpression()) #25, !dbg !9127
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9129, !srcloc !9130
  call void @llvm.dbg.value(metadata i32 %9, metadata !9126, metadata !DIExpression()) #25, !dbg !9127
  call void @llvm.dbg.value(metadata i32 %9, metadata !9131, metadata !DIExpression()) #25, !dbg !9136
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !9138, !range !4177
  %11 = shl i32 %0, %10, !dbg !9122
  %12 = or i32 %11, %8, !dbg !9122
  store volatile i32 %12, i32* %4, align 4, !dbg !9122
  ret void, !dbg !9139
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9140 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9144, metadata !DIExpression()), !dbg !9149
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9145, metadata !DIExpression()), !dbg !9149
  call void @llvm.dbg.value(metadata i32 %2, metadata !9146, metadata !DIExpression()), !dbg !9149
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9150
  %5 = icmp eq %struct._snode* %4, null, !dbg !9150
  br i1 %5, label %24, label %6, !dbg !9150

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !9152
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9148, metadata !DIExpression()), !dbg !9149
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9147, metadata !DIExpression()), !dbg !9149
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9153
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9153
  %12 = load i32, i32* %11, align 4, !dbg !9153
  %13 = and i32 %12, %2, !dbg !9157
  %14 = icmp eq i32 %13, 0, !dbg !9157
  br i1 %14, label %22, label %15, !dbg !9158

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9159
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9159
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9159
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9159
  br i1 %19, label %20, label %21, !dbg !9163

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.99, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.100, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 77) #27, !dbg !9164
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i32 0, i32 0)) #27, !dbg !9164
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 77) #27, !dbg !9164
  unreachable, !dbg !9164

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #27, !dbg !9166
  br label %22, !dbg !9167

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9147, metadata !DIExpression()), !dbg !9149
  %23 = icmp eq %struct._snode* %8, null, !dbg !9168
  br i1 %23, label %24, label %6, !dbg !9168

24:                                               ; preds = %22, %3
  ret void, !dbg !9169
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9170 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9172, metadata !DIExpression()), !dbg !9173
  %2 = and i32 %0, 255, !dbg !9174
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9174
  %4 = load volatile i32, i32* %3, align 4, !dbg !9174
  %5 = lshr i32 %0, 16, !dbg !9174
  %6 = and i32 %4, %5, !dbg !9174
  call void @llvm.dbg.value(metadata i32 %5, metadata !9123, metadata !DIExpression()) #25, !dbg !9175
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !9177, !srcloc !9130
  call void @llvm.dbg.value(metadata i32 %7, metadata !9126, metadata !DIExpression()) #25, !dbg !9175
  call void @llvm.dbg.value(metadata i32 %7, metadata !9131, metadata !DIExpression()) #25, !dbg !9178
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9180, !range !4177
  %9 = lshr i32 %6, %8, !dbg !9181
  ret i32 %9, !dbg !9182
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9183 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9188, metadata !DIExpression()), !dbg !9190
  call void @llvm.dbg.value(metadata i32 %1, metadata !9189, metadata !DIExpression()), !dbg !9190
  %3 = shl i32 %1, 16, !dbg !9191
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9191
  store volatile i32 %3, i32* %4, align 4, !dbg !9191
  ret void, !dbg !9192
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9193 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9197, metadata !DIExpression()), !dbg !9198
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9199
  %3 = load volatile i32, i32* %2, align 4, !dbg !9199
  ret i32 %3, !dbg !9200
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9201 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9203, metadata !DIExpression()), !dbg !9205
  call void @llvm.dbg.value(metadata i32 %1, metadata !9204, metadata !DIExpression()), !dbg !9205
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9206
  store volatile i32 %1, i32* %3, align 4, !dbg !9206
  ret void, !dbg !9207
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9208 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9210, metadata !DIExpression()), !dbg !9211
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9212
  %3 = load volatile i32, i32* %2, align 4, !dbg !9212
  ret i32 %3, !dbg !9213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !9214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9218, metadata !DIExpression()), !dbg !9220
  call void @llvm.dbg.value(metadata i32* %1, metadata !9219, metadata !DIExpression()), !dbg !9220
  %3 = and i32 %0, 131072, !dbg !9221
  %4 = icmp eq i32 %3, 0, !dbg !9223
  br i1 %4, label %22, label %5, !dbg !9224

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9225
  %6 = and i32 %0, 2, !dbg !9227
  %7 = icmp eq i32 %6, 0, !dbg !9229
  br i1 %7, label %11, label %8, !dbg !9230

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9231
  %10 = icmp eq i32 %9, 0, !dbg !9231
  br i1 %10, label %33, label %11, !dbg !9234

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9235
  store i32 %12, i32* %1, align 4, !dbg !9235
  %13 = and i32 %0, 16, !dbg !9236
  %14 = icmp eq i32 %13, 0, !dbg !9238
  br i1 %14, label %17, label %15, !dbg !9239

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9240
  br label %31, !dbg !9242

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9243
  %19 = icmp eq i32 %18, 0, !dbg !9245
  br i1 %19, label %33, label %20, !dbg !9246

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9247
  br label %31, !dbg !9249

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9250
  %24 = icmp eq i32 %23, 0, !dbg !9252
  br i1 %24, label %31, label %25, !dbg !9253

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9254
  %27 = icmp eq i32 %26, 0, !dbg !9257
  br i1 %27, label %28, label %31, !dbg !9258

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9259
  br label %33, !dbg !9260

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9220
  ret i32 %34, !dbg !9260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9261 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9265, metadata !DIExpression()), !dbg !9276
  call void @llvm.dbg.value(metadata i32 %1, metadata !9266, metadata !DIExpression()), !dbg !9276
  call void @llvm.dbg.value(metadata i32 %2, metadata !9267, metadata !DIExpression()), !dbg !9276
  call void @llvm.dbg.value(metadata i32 %3, metadata !9268, metadata !DIExpression()), !dbg !9276
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9277
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9277
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9277
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9269, metadata !DIExpression()), !dbg !9276
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9278
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9278
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9278
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9270, metadata !DIExpression()), !dbg !9276
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !9279
  call void @llvm.dbg.value(metadata i32 %11, metadata !9271, metadata !DIExpression()), !dbg !9276
  %12 = and i32 %2, 48, !dbg !9280
  call void @llvm.dbg.value(metadata i32 %12, metadata !9272, metadata !DIExpression()), !dbg !9276
  call void @llvm.dbg.value(metadata i32 %2, metadata !9273, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9276
  call void @llvm.dbg.value(metadata i32 %2, metadata !9274, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9276
  call void @llvm.dbg.value(metadata i32 %2, metadata !9275, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9276
  %13 = lshr i32 %2, 6, !dbg !9281
  %14 = and i32 %13, 1, !dbg !9281
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !9282
  %15 = lshr i32 %2, 7, !dbg !9283
  %16 = and i32 %15, 3, !dbg !9283
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !9284
  %17 = lshr i32 %2, 9, !dbg !9285
  %18 = and i32 %17, 3, !dbg !9285
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !9286
  %19 = icmp eq i32 %12, 32, !dbg !9287
  br i1 %19, label %20, label %24, !dbg !9289

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9290
  br i1 %21, label %22, label %23, !dbg !9293

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9294
  br label %24, !dbg !9296

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9297
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9299
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !9300
  ret void, !dbg !9301
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !9302 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9304, metadata !DIExpression()), !dbg !9306
  %2 = shl nuw i32 1, %0, !dbg !9307
  call void @llvm.dbg.value(metadata i32 %2, metadata !9305, metadata !DIExpression()), !dbg !9306
  ret i32 %2, !dbg !9308
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9309 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9313, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i32 %1, metadata !9314, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata i32 %2, metadata !9315, metadata !DIExpression()), !dbg !9316
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9317
  %5 = load volatile i32, i32* %4, align 4, !dbg !9317
  %6 = xor i32 %1, -1, !dbg !9317
  %7 = and i32 %5, %6, !dbg !9317
  %8 = mul i32 %2, %1, !dbg !9317
  %9 = or i32 %7, %8, !dbg !9317
  store volatile i32 %9, i32* %4, align 4, !dbg !9317
  ret void, !dbg !9318
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9319 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9321, metadata !DIExpression()), !dbg !9324
  call void @llvm.dbg.value(metadata i32 %1, metadata !9322, metadata !DIExpression()), !dbg !9324
  call void @llvm.dbg.value(metadata i32 %2, metadata !9323, metadata !DIExpression()), !dbg !9324
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9325
  %5 = load volatile i32, i32* %4, align 4, !dbg !9325
  call void @llvm.dbg.value(metadata i32 %1, metadata !9123, metadata !DIExpression()) #25, !dbg !9326
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9328, !srcloc !9130
  call void @llvm.dbg.value(metadata i32 %6, metadata !9126, metadata !DIExpression()) #25, !dbg !9326
  call void @llvm.dbg.value(metadata i32 %6, metadata !9131, metadata !DIExpression()) #25, !dbg !9329
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9331, !range !4177
  %8 = shl nuw nsw i32 %7, 1, !dbg !9325
  %9 = shl i32 3, %8, !dbg !9325
  %10 = xor i32 %9, -1, !dbg !9325
  %11 = and i32 %5, %10, !dbg !9325
  call void @llvm.dbg.value(metadata i32 %1, metadata !9123, metadata !DIExpression()) #25, !dbg !9332
  call void @llvm.dbg.value(metadata i32 %6, metadata !9126, metadata !DIExpression()) #25, !dbg !9332
  call void @llvm.dbg.value(metadata i32 %6, metadata !9131, metadata !DIExpression()) #25, !dbg !9334
  %12 = shl i32 %2, %8, !dbg !9325
  %13 = or i32 %11, %12, !dbg !9325
  store volatile i32 %13, i32* %4, align 4, !dbg !9325
  ret void, !dbg !9336
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9337 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9339, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i32 %1, metadata !9340, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i32 %2, metadata !9341, metadata !DIExpression()), !dbg !9342
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9343
  %5 = load volatile i32, i32* %4, align 4, !dbg !9343
  call void @llvm.dbg.value(metadata i32 %1, metadata !9123, metadata !DIExpression()) #25, !dbg !9344
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9346, !srcloc !9130
  call void @llvm.dbg.value(metadata i32 %6, metadata !9126, metadata !DIExpression()) #25, !dbg !9344
  call void @llvm.dbg.value(metadata i32 %6, metadata !9131, metadata !DIExpression()) #25, !dbg !9347
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9349, !range !4177
  %8 = shl nuw nsw i32 %7, 1, !dbg !9343
  %9 = shl i32 3, %8, !dbg !9343
  %10 = xor i32 %9, -1, !dbg !9343
  %11 = and i32 %5, %10, !dbg !9343
  call void @llvm.dbg.value(metadata i32 %1, metadata !9123, metadata !DIExpression()) #25, !dbg !9350
  call void @llvm.dbg.value(metadata i32 %6, metadata !9126, metadata !DIExpression()) #25, !dbg !9350
  call void @llvm.dbg.value(metadata i32 %6, metadata !9131, metadata !DIExpression()) #25, !dbg !9352
  %12 = shl i32 %2, %8, !dbg !9343
  %13 = or i32 %11, %12, !dbg !9343
  store volatile i32 %13, i32* %4, align 4, !dbg !9343
  ret void, !dbg !9354
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9355 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9357, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.value(metadata i32 %1, metadata !9358, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.value(metadata i32 %2, metadata !9359, metadata !DIExpression()), !dbg !9360
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9361
  %5 = load volatile i32, i32* %4, align 4, !dbg !9361
  call void @llvm.dbg.value(metadata i32 %1, metadata !9123, metadata !DIExpression()) #25, !dbg !9362
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9364, !srcloc !9130
  call void @llvm.dbg.value(metadata i32 %6, metadata !9126, metadata !DIExpression()) #25, !dbg !9362
  call void @llvm.dbg.value(metadata i32 %6, metadata !9131, metadata !DIExpression()) #25, !dbg !9365
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9367, !range !4177
  %8 = shl nuw nsw i32 %7, 2, !dbg !9361
  %9 = shl i32 15, %8, !dbg !9361
  %10 = xor i32 %9, -1, !dbg !9361
  %11 = and i32 %5, %10, !dbg !9361
  call void @llvm.dbg.value(metadata i32 %1, metadata !9123, metadata !DIExpression()) #25, !dbg !9368
  call void @llvm.dbg.value(metadata i32 %6, metadata !9126, metadata !DIExpression()) #25, !dbg !9368
  call void @llvm.dbg.value(metadata i32 %6, metadata !9131, metadata !DIExpression()) #25, !dbg !9370
  %12 = shl i32 %2, %8, !dbg !9361
  %13 = or i32 %11, %12, !dbg !9361
  store volatile i32 %13, i32* %4, align 4, !dbg !9361
  ret void, !dbg !9372
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9373 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9375, metadata !DIExpression()), !dbg !9378
  call void @llvm.dbg.value(metadata i32 %1, metadata !9376, metadata !DIExpression()), !dbg !9378
  call void @llvm.dbg.value(metadata i32 %2, metadata !9377, metadata !DIExpression()), !dbg !9378
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9379
  %5 = load volatile i32, i32* %4, align 4, !dbg !9379
  %6 = lshr i32 %1, 8, !dbg !9379
  call void @llvm.dbg.value(metadata i32 %6, metadata !9123, metadata !DIExpression()) #25, !dbg !9380
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9382, !srcloc !9130
  call void @llvm.dbg.value(metadata i32 %7, metadata !9126, metadata !DIExpression()) #25, !dbg !9380
  call void @llvm.dbg.value(metadata i32 %7, metadata !9131, metadata !DIExpression()) #25, !dbg !9383
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9385, !range !4177
  %9 = shl nuw nsw i32 %8, 2, !dbg !9379
  %10 = shl i32 15, %9, !dbg !9379
  %11 = xor i32 %10, -1, !dbg !9379
  %12 = and i32 %5, %11, !dbg !9379
  call void @llvm.dbg.value(metadata i32 %6, metadata !9123, metadata !DIExpression()) #25, !dbg !9386
  call void @llvm.dbg.value(metadata i32 %7, metadata !9126, metadata !DIExpression()) #25, !dbg !9386
  call void @llvm.dbg.value(metadata i32 %7, metadata !9131, metadata !DIExpression()) #25, !dbg !9388
  %13 = shl i32 %2, %9, !dbg !9379
  %14 = or i32 %12, %13, !dbg !9379
  store volatile i32 %14, i32* %4, align 4, !dbg !9379
  ret void, !dbg !9390
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9391 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9393, metadata !DIExpression()), !dbg !9396
  call void @llvm.dbg.value(metadata i32 %1, metadata !9394, metadata !DIExpression()), !dbg !9396
  call void @llvm.dbg.value(metadata i32 %2, metadata !9395, metadata !DIExpression()), !dbg !9396
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9397
  %5 = load volatile i32, i32* %4, align 4, !dbg !9397
  call void @llvm.dbg.value(metadata i32 %1, metadata !9123, metadata !DIExpression()) #25, !dbg !9398
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9400, !srcloc !9130
  call void @llvm.dbg.value(metadata i32 %6, metadata !9126, metadata !DIExpression()) #25, !dbg !9398
  call void @llvm.dbg.value(metadata i32 %6, metadata !9131, metadata !DIExpression()) #25, !dbg !9401
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9403, !range !4177
  %8 = shl nuw nsw i32 %7, 1, !dbg !9397
  %9 = shl i32 3, %8, !dbg !9397
  %10 = xor i32 %9, -1, !dbg !9397
  %11 = and i32 %5, %10, !dbg !9397
  call void @llvm.dbg.value(metadata i32 %1, metadata !9123, metadata !DIExpression()) #25, !dbg !9404
  call void @llvm.dbg.value(metadata i32 %6, metadata !9126, metadata !DIExpression()) #25, !dbg !9404
  call void @llvm.dbg.value(metadata i32 %6, metadata !9131, metadata !DIExpression()) #25, !dbg !9406
  %12 = shl i32 %2, %8, !dbg !9397
  %13 = or i32 %11, %12, !dbg !9397
  store volatile i32 %13, i32* %4, align 4, !dbg !9397
  ret void, !dbg !9408
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9409 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9411, metadata !DIExpression()), !dbg !9414
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9415
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9415
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9415
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9412, metadata !DIExpression()), !dbg !9414
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9416
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9417
  %6 = tail call fastcc zeroext i1 @device_is_ready.113() #26, !dbg !9418
  br i1 %6, label %7, label %11, !dbg !9420

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !9421
  call void @llvm.dbg.value(metadata i32 %8, metadata !9413, metadata !DIExpression()), !dbg !9414
  %9 = icmp slt i32 %8, 0, !dbg !9422
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9424
  br label %11, !dbg !9424

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9414
  ret i32 %12, !dbg !9425
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.113() unnamed_addr #1 !dbg !9426 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9430, metadata !DIExpression()), !dbg !9431
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9432, !srcloc !9434
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.114() #26, !dbg !9435
  ret i1 %1, !dbg !9436
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9437 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9441, metadata !DIExpression()), !dbg !9446
  call void @llvm.dbg.value(metadata i8 1, metadata !9442, metadata !DIExpression()), !dbg !9446
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9447
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9447
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9447
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9443, metadata !DIExpression()), !dbg !9446
  call void @llvm.dbg.value(metadata i32 0, metadata !9444, metadata !DIExpression()), !dbg !9446
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9445, metadata !DIExpression()), !dbg !9446
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9448
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9451
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !9452
  call void @llvm.dbg.value(metadata i32 %7, metadata !9444, metadata !DIExpression()), !dbg !9446
  ret i32 %7, !dbg !9453
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.114() unnamed_addr #1 !dbg !9454 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9456, metadata !DIExpression()), !dbg !9457
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #27, !dbg !9458
  ret i1 %1, !dbg !9459
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9460 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9464, metadata !DIExpression()), !dbg !9472
  call void @llvm.dbg.value(metadata i32 %1, metadata !9465, metadata !DIExpression()), !dbg !9472
  call void @llvm.dbg.value(metadata i32 %2, metadata !9466, metadata !DIExpression()), !dbg !9472
  call void @llvm.dbg.value(metadata i32 %3, metadata !9467, metadata !DIExpression()), !dbg !9472
  call void @llvm.dbg.value(metadata i32 0, metadata !9468, metadata !DIExpression()), !dbg !9472
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !9473
  %5 = icmp eq i32 %3, 17, !dbg !9474
  br i1 %5, label %6, label %14, !dbg !9475

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9476
  call void @llvm.dbg.value(metadata i32 %7, metadata !9469, metadata !DIExpression()), !dbg !9477
  %8 = icmp eq i32 %7, 0, !dbg !9478
  %9 = shl nuw i32 1, %1, !dbg !9480
  br i1 %8, label %12, label %10, !dbg !9481

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9482
  br label %14, !dbg !9484

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9485
  br label %14, !dbg !9488

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9489
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !9490 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9492, metadata !DIExpression()), !dbg !9496
  call void @llvm.dbg.value(metadata i8* %1, metadata !9493, metadata !DIExpression()), !dbg !9496
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9497
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9497
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9497
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9494, metadata !DIExpression()), !dbg !9496
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9498
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9498
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !9500
  %9 = icmp eq i32 %8, 0, !dbg !9500
  br i1 %9, label %12, label %10, !dbg !9501

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9502
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !9504
  br label %12, !dbg !9505

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9506
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9508
  %15 = icmp eq i32 %14, 0, !dbg !9508
  br i1 %15, label %19, label %16, !dbg !9509

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9510
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !9511
  store i8 %18, i8* %1, align 1, !dbg !9512
  br label %19, !dbg !9513

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9496
  ret i32 %20, !dbg !9514
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9515 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9517, metadata !DIExpression()), !dbg !9521
  call void @llvm.dbg.value(metadata i8 %1, metadata !9518, metadata !DIExpression()), !dbg !9521
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9522
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9522
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9522
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9519, metadata !DIExpression()), !dbg !9521
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9523

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9524
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9527
  %10 = icmp eq i32 %9, 0, !dbg !9527
  br i1 %10, label %18, label %11, !dbg !9528

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9529, !srcloc !9536
  call void @llvm.dbg.value(metadata i32 undef, metadata !9532, metadata !DIExpression()) #25, !dbg !9537
  call void @llvm.dbg.value(metadata i32 undef, metadata !9533, metadata !DIExpression()) #25, !dbg !9537
  call void @llvm.dbg.value(metadata i32 undef, metadata !9520, metadata !DIExpression()), !dbg !9521
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9538
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9540
  %15 = icmp eq i32 %14, 0, !dbg !9540
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9529
  br i1 %15, label %17, label %19, !dbg !9541

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9532, metadata !DIExpression()) #25, !dbg !9537
  call void @llvm.dbg.value(metadata i32 %16, metadata !9520, metadata !DIExpression()), !dbg !9521
  call void @llvm.dbg.value(metadata i32 undef, metadata !9542, metadata !DIExpression()) #25, !dbg !9545
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !9547, !srcloc !9548
  br label %18, !dbg !9549

18:                                               ; preds = %17, %7
  br label %7, !dbg !9524, !llvm.loop !9550

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9529
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9552
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !9553
  call void @llvm.dbg.value(metadata i32 %20, metadata !9542, metadata !DIExpression()) #25, !dbg !9554
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !9556, !srcloc !9548
  ret void, !dbg !9557
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !9558 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9560, metadata !DIExpression()), !dbg !9563
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9564
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9564
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9564
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9561, metadata !DIExpression()), !dbg !9563
  call void @llvm.dbg.value(metadata i32 0, metadata !9562, metadata !DIExpression()), !dbg !9563
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9565
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9565
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9567
  %8 = icmp ne i32 %7, 0, !dbg !9567
  %9 = zext i1 %8 to i32, !dbg !9568
  call void @llvm.dbg.value(metadata i32 %9, metadata !9562, metadata !DIExpression()), !dbg !9563
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9569
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9571
  %12 = icmp eq i32 %11, 0, !dbg !9571
  %13 = or i32 %9, 2, !dbg !9572
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9572
  call void @llvm.dbg.value(metadata i32 %14, metadata !9562, metadata !DIExpression()), !dbg !9563
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9573
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !9575
  %17 = icmp eq i32 %16, 0, !dbg !9575
  %18 = or i32 %14, 4, !dbg !9576
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9576
  call void @llvm.dbg.value(metadata i32 %19, metadata !9562, metadata !DIExpression()), !dbg !9563
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9577
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !9579
  %22 = icmp eq i32 %21, 0, !dbg !9579
  %23 = or i32 %19, 8, !dbg !9580
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9580
  call void @llvm.dbg.value(metadata i32 %24, metadata !9562, metadata !DIExpression()), !dbg !9563
  %25 = and i32 %24, 8, !dbg !9581
  %26 = icmp eq i32 %25, 0, !dbg !9581
  br i1 %26, label %29, label %27, !dbg !9583

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9584
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !9586
  br label %29, !dbg !9587

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9588
  %31 = icmp eq i32 %30, 0, !dbg !9588
  br i1 %31, label %34, label %32, !dbg !9590

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9591
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !9593
  br label %34, !dbg !9594

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9595
  %36 = icmp eq i32 %35, 0, !dbg !9595
  br i1 %36, label %39, label %37, !dbg !9597

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9598
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !9600
  br label %39, !dbg !9601

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9602
  %41 = icmp eq i32 %40, 0, !dbg !9602
  br i1 %41, label %44, label %42, !dbg !9604

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9605
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !9607
  br label %44, !dbg !9608

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9609
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !9610
  ret i32 %24, !dbg !9611
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9612 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9614, metadata !DIExpression()), !dbg !9623
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9615, metadata !DIExpression()), !dbg !9623
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9624
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9624
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9624
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9616, metadata !DIExpression()), !dbg !9623
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9625
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9625
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9625
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9617, metadata !DIExpression()), !dbg !9623
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9626
  %10 = load i8, i8* %9, align 4, !dbg !9626
  %11 = zext i8 %10 to i32, !dbg !9627
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !9628
  call void @llvm.dbg.value(metadata i32 %12, metadata !9619, metadata !DIExpression()), !dbg !9623
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9629
  %14 = load i8, i8* %13, align 1, !dbg !9629
  %15 = zext i8 %14 to i32, !dbg !9630
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !9631
  call void @llvm.dbg.value(metadata i32 %16, metadata !9620, metadata !DIExpression()), !dbg !9623
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9632
  %18 = load i8, i8* %17, align 2, !dbg !9632
  %19 = zext i8 %18 to i32, !dbg !9633
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !9634
  call void @llvm.dbg.value(metadata i32 %20, metadata !9621, metadata !DIExpression()), !dbg !9623
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9635
  %22 = load i8, i8* %21, align 1, !dbg !9635
  %23 = zext i8 %22 to i32, !dbg !9636
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !9637
  call void @llvm.dbg.value(metadata i32 %24, metadata !9622, metadata !DIExpression()), !dbg !9623
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9638

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9640
  br i1 %26, label %69, label %27, !dbg !9642

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9643

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9644
  br i1 %29, label %65, label %30, !dbg !9644

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9646
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9623
  br i1 %31, label %38, label %34, !dbg !9648

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9649
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !9649

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9652
  br i1 %37, label %38, label %69, !dbg !9653

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9654
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !9655
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !9656
  %41 = icmp eq i32 %12, %40, !dbg !9658
  br i1 %41, label %43, label %42, !dbg !9659

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !9660
  br label %43, !dbg !9662

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !9663
  %45 = icmp eq i32 %16, %44, !dbg !9665
  br i1 %45, label %47, label %46, !dbg !9666

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !9667
  br label %47, !dbg !9669

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !9670
  %49 = icmp eq i32 %20, %48, !dbg !9672
  br i1 %49, label %51, label %50, !dbg !9673

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !9674
  br label %51, !dbg !9676

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !9677
  %53 = icmp eq i32 %24, %52, !dbg !9679
  br i1 %53, label %55, label %54, !dbg !9680

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !9681
  br label %55, !dbg !9683

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9684
  %57 = load i32, i32* %56, align 4, !dbg !9684
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9686
  %59 = load i32, i32* %58, align 4, !dbg !9686
  %60 = icmp eq i32 %57, %59, !dbg !9687
  br i1 %60, label %63, label %61, !dbg !9688

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !9689
  %62 = load i32, i32* %56, align 4, !dbg !9691
  store i32 %62, i32* %58, align 4, !dbg !9692
  br label %63, !dbg !9693

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9694
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !9695
  br label %69, !dbg !9696

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9644
  %67 = and i8 %66, 1, !dbg !9644
  %68 = icmp eq i8 %67, 0, !dbg !9644
  br i1 %68, label %30, label %69, !dbg !9644

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9623
  ret i32 %70, !dbg !9697
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9698 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9700, metadata !DIExpression()), !dbg !9703
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9701, metadata !DIExpression()), !dbg !9703
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9704
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9704
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9704
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9702, metadata !DIExpression()), !dbg !9703
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9705
  %7 = load i32, i32* %6, align 4, !dbg !9705
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9706
  store i32 %7, i32* %8, align 4, !dbg !9707
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9708, !range !9709
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !9710
  %11 = trunc i32 %10 to i8, !dbg !9710
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9711
  store i8 %11, i8* %12, align 4, !dbg !9712
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !9713, !range !9714
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !9715
  %15 = trunc i32 %14 to i8, !dbg !9715
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9716
  store i8 %15, i8* %16, align 1, !dbg !9717
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !9718
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9719, !range !9709
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !9720
  %20 = trunc i32 %19 to i8, !dbg !9720
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9721
  store i8 %20, i8* %21, align 2, !dbg !9722
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !9723, !range !9724
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !9725
  %24 = trunc i32 %23 to i8, !dbg !9725
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9726
  store i8 %24, i8* %25, align 1, !dbg !9727
  ret i32 0, !dbg !9728
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9729 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9733, metadata !DIExpression()), !dbg !9735
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9736
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9736
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9736
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9734, metadata !DIExpression()), !dbg !9735
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9737
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9737
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !9738
  ret i32 %7, !dbg !9739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !9740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9744, metadata !DIExpression()), !dbg !9745
  %2 = icmp eq i32 %0, 1024, !dbg !9746
  %3 = select i1 %2, i32 2, i32 0, !dbg !9746
  %4 = icmp eq i32 %0, 1536, !dbg !9746
  %5 = select i1 %4, i32 1, i32 %3, !dbg !9746
  ret i32 %5, !dbg !9747
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9748 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9750, metadata !DIExpression()), !dbg !9752
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9753
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9753
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9753
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9751, metadata !DIExpression()), !dbg !9752
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9754
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9754
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !9755
  ret i32 %7, !dbg !9756
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #10 !dbg !9757 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9761, metadata !DIExpression()), !dbg !9762
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !9763
  %3 = icmp ult i32 %2, 4, !dbg !9763
  br i1 %3, label %4, label %7, !dbg !9763

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !9763
  %6 = load i32, i32* %5, align 4, !dbg !9763
  br label %7, !dbg !9763

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !9764
  ret i32 %8, !dbg !9766
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9767 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9769, metadata !DIExpression()), !dbg !9771
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9772
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9772
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9772
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9770, metadata !DIExpression()), !dbg !9771
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9773
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9773
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !9774
  ret i32 %7, !dbg !9775
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9776 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9780, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata i32 %1, metadata !9781, metadata !DIExpression()), !dbg !9782
  %3 = icmp eq i32 %0, 4096, !dbg !9783
  %4 = icmp eq i32 %1, 0, !dbg !9783
  %5 = select i1 %4, i32 4, i32 3, !dbg !9783
  %6 = select i1 %4, i32 3, i32 2, !dbg !9783
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !9783
  ret i32 %7, !dbg !9784
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9785 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9787, metadata !DIExpression()), !dbg !9789
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9790
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9790
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9790
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9788, metadata !DIExpression()), !dbg !9789
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9791
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9791
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !9792
  ret i32 %7, !dbg !9793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !9794 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9798, metadata !DIExpression()), !dbg !9799
  %2 = icmp eq i32 %0, 768, !dbg !9800
  %3 = zext i1 %2 to i32, !dbg !9799
  ret i32 %3, !dbg !9802
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9803 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9808, metadata !DIExpression()), !dbg !9809
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9810
  %3 = load volatile i32, i32* %2, align 4, !dbg !9810
  %4 = and i32 %3, 768, !dbg !9810
  ret i32 %4, !dbg !9811
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9812 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9814, metadata !DIExpression()), !dbg !9815
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9816
  %3 = load volatile i32, i32* %2, align 4, !dbg !9816
  %4 = and i32 %3, 4096, !dbg !9816
  ret i32 %4, !dbg !9817
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9818 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9820, metadata !DIExpression()), !dbg !9821
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9822
  %3 = load volatile i32, i32* %2, align 4, !dbg !9822
  %4 = and i32 %3, 12288, !dbg !9822
  ret i32 %4, !dbg !9823
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9824 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9826, metadata !DIExpression()), !dbg !9827
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9828
  %3 = load volatile i32, i32* %2, align 4, !dbg !9828
  %4 = and i32 %3, 1536, !dbg !9828
  ret i32 %4, !dbg !9829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !9830 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9834, metadata !DIExpression()), !dbg !9835
  %2 = icmp eq i32 %0, 2, !dbg !9836
  %3 = select i1 %2, i32 1024, i32 0, !dbg !9836
  %4 = icmp eq i32 %0, 1, !dbg !9836
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !9836
  ret i32 %5, !dbg !9837
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !9838 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9842, metadata !DIExpression()), !dbg !9843
  %2 = icmp ult i32 %0, 3, !dbg !9844
  br i1 %2, label %3, label %6, !dbg !9844

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !9844
  %5 = load i32, i32* %4, align 4, !dbg !9844
  br label %6, !dbg !9844

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !9845
  ret i32 %7, !dbg !9847
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9848 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9852, metadata !DIExpression()), !dbg !9854
  call void @llvm.dbg.value(metadata i32 %1, metadata !9853, metadata !DIExpression()), !dbg !9854
  %3 = icmp eq i32 %0, 4, !dbg !9855
  %4 = icmp eq i32 %1, 0, !dbg !9855
  %5 = select i1 %4, i32 0, i32 4096, !dbg !9855
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !9855
  ret i32 %6, !dbg !9856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !9857 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9861, metadata !DIExpression()), !dbg !9862
  %2 = icmp eq i32 %0, 1, !dbg !9863
  %3 = select i1 %2, i32 768, i32 0, !dbg !9862
  ret i32 %3, !dbg !9865
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9866 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9870, metadata !DIExpression()), !dbg !9871
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9872
  %3 = load volatile i32, i32* %2, align 4, !dbg !9872
  %4 = and i32 %3, -8193, !dbg !9872
  store volatile i32 %4, i32* %2, align 4, !dbg !9872
  ret void, !dbg !9873
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9874 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9878, metadata !DIExpression()), !dbg !9881
  call void @llvm.dbg.value(metadata i32 %1, metadata !9879, metadata !DIExpression()), !dbg !9881
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9882
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9882
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9882
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9880, metadata !DIExpression()), !dbg !9881
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9883
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9883
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9884
  ret void, !dbg !9885
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9886 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9888, metadata !DIExpression()), !dbg !9891
  call void @llvm.dbg.value(metadata i32 %1, metadata !9889, metadata !DIExpression()), !dbg !9891
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9892
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9892
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9892
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9890, metadata !DIExpression()), !dbg !9891
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9893
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9893
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9894
  ret void, !dbg !9895
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9896 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9898, metadata !DIExpression()), !dbg !9901
  call void @llvm.dbg.value(metadata i32 %1, metadata !9899, metadata !DIExpression()), !dbg !9901
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9902
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9902
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9902
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9900, metadata !DIExpression()), !dbg !9901
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9903
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9903
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9904
  ret void, !dbg !9905
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9906 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9908, metadata !DIExpression()), !dbg !9911
  call void @llvm.dbg.value(metadata i32 %1, metadata !9909, metadata !DIExpression()), !dbg !9911
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9912
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9912
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9912
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9910, metadata !DIExpression()), !dbg !9911
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9913
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9913
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9914
  ret void, !dbg !9915
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9916 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9918, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.value(metadata i32 %1, metadata !9919, metadata !DIExpression()), !dbg !9923
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9924
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9924
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9924
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9920, metadata !DIExpression()), !dbg !9923
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9925
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !9925
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !9925
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !9921, metadata !DIExpression()), !dbg !9923
  %10 = bitcast i32* %3 to i8*, !dbg !9926
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !9926
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !9927
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !9927
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !9931
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9931
  %15 = load i8*, i8** %14, align 4, !dbg !9931
  call void @llvm.dbg.value(metadata i32* %3, metadata !9922, metadata !DIExpression(DW_OP_deref)), !dbg !9923
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !9932
  %17 = icmp slt i32 %16, 0, !dbg !9933
  br i1 %17, label %28, label %18, !dbg !9934

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9935
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9935
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !9936
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9937
  %22 = load i32, i32* %3, align 4, !dbg !9938
  call void @llvm.dbg.value(metadata i32 %22, metadata !9922, metadata !DIExpression()), !dbg !9923
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !9939
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9940
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 2, !dbg !9940
  %25 = load volatile i32, i32* %24, align 4, !dbg !9940
  %26 = icmp ugt i32 %25, 16, !dbg !9940
  br i1 %26, label %28, label %27, !dbg !9943

27:                                               ; preds = %18
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.120, i32 0, i32 0), i32 noundef 190) #27, !dbg !9944
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.121, i32 0, i32 0)) #27, !dbg !9944
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.120, i32 0, i32 0), i32 noundef 190) #27, !dbg !9944
  unreachable, !dbg !9944

28:                                               ; preds = %18, %2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !9946
  ret void, !dbg !9946
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9947 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9949, metadata !DIExpression()), !dbg !9950
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9951
  %3 = load volatile i32, i32* %2, align 4, !dbg !9951
  %4 = or i32 %3, 8192, !dbg !9951
  store volatile i32 %4, i32* %2, align 4, !dbg !9951
  ret void, !dbg !9952
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !9953 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9955, metadata !DIExpression()), !dbg !9959
  call void @llvm.dbg.value(metadata i8* %1, metadata !9956, metadata !DIExpression()), !dbg !9959
  call void @llvm.dbg.value(metadata i32* %2, metadata !9957, metadata !DIExpression()), !dbg !9959
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9960
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !9960
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !9960
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !9958, metadata !DIExpression()), !dbg !9959
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !9961
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !9961
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !9963
  br i1 %9, label %12, label %10, !dbg !9964

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !9965
  br label %12, !dbg !9966

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !9959
  ret i32 %13, !dbg !9967
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9968 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9972, metadata !DIExpression()), !dbg !9974
  call void @llvm.dbg.value(metadata i32 0, metadata !9973, metadata !DIExpression()), !dbg !9974
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9975
  %3 = load volatile i32, i32* %2, align 4, !dbg !9975
  %4 = and i32 %3, -32769, !dbg !9975
  store volatile i32 %4, i32* %2, align 4, !dbg !9975
  ret void, !dbg !9976
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9977 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9981, metadata !DIExpression()), !dbg !9985
  call void @llvm.dbg.value(metadata i32 %1, metadata !9982, metadata !DIExpression()), !dbg !9985
  call void @llvm.dbg.value(metadata i32 0, metadata !9983, metadata !DIExpression()), !dbg !9985
  call void @llvm.dbg.value(metadata i32 %2, metadata !9984, metadata !DIExpression()), !dbg !9985
  %4 = zext i32 %1 to i64, !dbg !9986
  %5 = mul nuw nsw i64 %4, 25, !dbg !9986
  %6 = zext i32 %2 to i64, !dbg !9986
  %7 = shl nuw nsw i64 %6, 2, !dbg !9986
  %8 = udiv i64 %5, %7, !dbg !9986
  %9 = trunc i64 %8 to i32, !dbg !9986
  %10 = udiv i32 %9, 100, !dbg !9986
  %11 = shl nuw nsw i32 %10, 4, !dbg !9986
  %12 = mul i32 %10, -100, !dbg !9986
  %13 = add i32 %12, %9, !dbg !9986
  %14 = shl i32 %13, 4, !dbg !9986
  %15 = add i32 %14, 50, !dbg !9986
  %16 = udiv i32 %15, 100, !dbg !9986
  %17 = and i32 %16, 240, !dbg !9986
  %18 = add nuw nsw i32 %17, %11, !dbg !9986
  %19 = and i32 %16, 15, !dbg !9986
  %20 = and i32 %18, 65520, !dbg !9989
  %21 = or i32 %20, %19, !dbg !9989
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !9990
  store volatile i32 %21, i32* %22, align 4, !dbg !9991
  ret void, !dbg !9992
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9993 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9995, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.value(metadata i32 %1, metadata !9996, metadata !DIExpression()), !dbg !9997
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9998
  %4 = load volatile i32, i32* %3, align 4, !dbg !9998
  %5 = and i32 %4, -769, !dbg !9998
  %6 = or i32 %5, %1, !dbg !9998
  store volatile i32 %6, i32* %3, align 4, !dbg !9998
  ret void, !dbg !9999
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10000 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10002, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.value(metadata i32 %1, metadata !10003, metadata !DIExpression()), !dbg !10004
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10005
  %4 = load volatile i32, i32* %3, align 4, !dbg !10005
  %5 = and i32 %4, -4097, !dbg !10005
  %6 = or i32 %5, %1, !dbg !10005
  store volatile i32 %6, i32* %3, align 4, !dbg !10005
  ret void, !dbg !10006
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10007 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10009, metadata !DIExpression()), !dbg !10011
  call void @llvm.dbg.value(metadata i32 %1, metadata !10010, metadata !DIExpression()), !dbg !10011
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10012
  %4 = load volatile i32, i32* %3, align 4, !dbg !10012
  %5 = and i32 %4, -12289, !dbg !10012
  %6 = or i32 %5, %1, !dbg !10012
  store volatile i32 %6, i32* %3, align 4, !dbg !10012
  ret void, !dbg !10013
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10014 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10016, metadata !DIExpression()), !dbg !10018
  call void @llvm.dbg.value(metadata i32 %1, metadata !10017, metadata !DIExpression()), !dbg !10018
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10019
  %4 = load volatile i32, i32* %3, align 4, !dbg !10019
  %5 = and i32 %4, -1537, !dbg !10019
  %6 = or i32 %5, %1, !dbg !10019
  store volatile i32 %6, i32* %3, align 4, !dbg !10019
  ret void, !dbg !10020
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10021 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10023, metadata !DIExpression()), !dbg !10024
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10025
  %3 = load volatile i32, i32* %2, align 4, !dbg !10025
  %4 = lshr i32 %3, 3, !dbg !10026
  %5 = and i32 %4, 1, !dbg !10026
  ret i32 %5, !dbg !10027
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10028 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10030, metadata !DIExpression()), !dbg !10031
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10032
  %3 = load volatile i32, i32* %2, align 4, !dbg !10032
  %4 = and i32 %3, 1, !dbg !10032
  ret i32 %4, !dbg !10033
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10034 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10036, metadata !DIExpression()), !dbg !10037
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10038
  %3 = load volatile i32, i32* %2, align 4, !dbg !10038
  %4 = lshr i32 %3, 1, !dbg !10039
  %5 = and i32 %4, 1, !dbg !10039
  ret i32 %5, !dbg !10040
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10041 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10043, metadata !DIExpression()), !dbg !10044
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10045
  %3 = load volatile i32, i32* %2, align 4, !dbg !10045
  %4 = lshr i32 %3, 8, !dbg !10046
  %5 = and i32 %4, 1, !dbg !10046
  ret i32 %5, !dbg !10047
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10048 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10050, metadata !DIExpression()), !dbg !10051
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10052
  store volatile i32 -257, i32* %2, align 4, !dbg !10052
  ret void, !dbg !10053
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10054 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10056, metadata !DIExpression()), !dbg !10058
  %3 = bitcast i32* %2 to i8*, !dbg !10059
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10059
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10057, metadata !DIExpression()), !dbg !10060
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10061
  %5 = load volatile i32, i32* %4, align 4, !dbg !10061
  store volatile i32 %5, i32* %2, align 4, !dbg !10062
  %6 = load volatile i32, i32* %2, align 4, !dbg !10063
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10064
  %8 = load volatile i32, i32* %7, align 4, !dbg !10064
  store volatile i32 %8, i32* %2, align 4, !dbg !10065
  %9 = load volatile i32, i32* %2, align 4, !dbg !10066
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10067
  ret void, !dbg !10067
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10068 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10070, metadata !DIExpression()), !dbg !10072
  %3 = bitcast i32* %2 to i8*, !dbg !10073
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10073
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10071, metadata !DIExpression()), !dbg !10074
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10075
  %5 = load volatile i32, i32* %4, align 4, !dbg !10075
  store volatile i32 %5, i32* %2, align 4, !dbg !10076
  %6 = load volatile i32, i32* %2, align 4, !dbg !10077
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10078
  %8 = load volatile i32, i32* %7, align 4, !dbg !10078
  store volatile i32 %8, i32* %2, align 4, !dbg !10079
  %9 = load volatile i32, i32* %2, align 4, !dbg !10080
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10081
  ret void, !dbg !10081
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10082 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10084, metadata !DIExpression()), !dbg !10086
  %3 = bitcast i32* %2 to i8*, !dbg !10087
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10087
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10085, metadata !DIExpression()), !dbg !10088
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10089
  %5 = load volatile i32, i32* %4, align 4, !dbg !10089
  store volatile i32 %5, i32* %2, align 4, !dbg !10090
  %6 = load volatile i32, i32* %2, align 4, !dbg !10091
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10092
  %8 = load volatile i32, i32* %7, align 4, !dbg !10092
  store volatile i32 %8, i32* %2, align 4, !dbg !10093
  %9 = load volatile i32, i32* %2, align 4, !dbg !10094
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10095
  ret void, !dbg !10095
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10096 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10098, metadata !DIExpression()), !dbg !10100
  %3 = bitcast i32* %2 to i8*, !dbg !10101
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10101
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10099, metadata !DIExpression()), !dbg !10102
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10103
  %5 = load volatile i32, i32* %4, align 4, !dbg !10103
  store volatile i32 %5, i32* %2, align 4, !dbg !10104
  %6 = load volatile i32, i32* %2, align 4, !dbg !10105
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10106
  %8 = load volatile i32, i32* %7, align 4, !dbg !10106
  store volatile i32 %8, i32* %2, align 4, !dbg !10107
  %9 = load volatile i32, i32* %2, align 4, !dbg !10108
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10109
  ret void, !dbg !10109
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10110 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10112, metadata !DIExpression()), !dbg !10113
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10114
  %3 = load volatile i32, i32* %2, align 4, !dbg !10114
  %4 = lshr i32 %3, 7, !dbg !10115
  %5 = and i32 %4, 1, !dbg !10115
  ret i32 %5, !dbg !10116
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !10117 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10121, metadata !DIExpression()), !dbg !10123
  call void @llvm.dbg.value(metadata i8 %1, metadata !10122, metadata !DIExpression()), !dbg !10123
  %3 = zext i8 %1 to i32, !dbg !10124
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10125
  store volatile i32 %3, i32* %4, align 4, !dbg !10126
  ret void, !dbg !10127
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10128 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10130, metadata !DIExpression()), !dbg !10131
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10132
  %3 = load volatile i32, i32* %2, align 4, !dbg !10132
  %4 = lshr i32 %3, 5, !dbg !10133
  %5 = and i32 %4, 1, !dbg !10133
  ret i32 %5, !dbg !10134
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10135 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10139, metadata !DIExpression()), !dbg !10140
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10141
  %3 = load volatile i32, i32* %2, align 4, !dbg !10141
  %4 = trunc i32 %3 to i8, !dbg !10142
  ret i8 %4, !dbg !10143
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10144 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10146, metadata !DIExpression()), !dbg !10152
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10153
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10153
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10153
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10147, metadata !DIExpression()), !dbg !10152
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10154
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10154
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10154
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10148, metadata !DIExpression()), !dbg !10152
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !10155
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10156
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10156
  %10 = tail call fastcc zeroext i1 @device_is_ready.123(%struct.device* noundef %9) #26, !dbg !10158
  br i1 %10, label %11, label %49, !dbg !10159

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10160
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10161
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10161
  %15 = load i8*, i8** %14, align 4, !dbg !10161
  %16 = tail call fastcc i32 @clock_control_on.124(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !10162
  call void @llvm.dbg.value(metadata i32 %16, metadata !10151, metadata !DIExpression()), !dbg !10152
  %17 = icmp eq i32 %16, 0, !dbg !10163
  br i1 %17, label %18, label %49, !dbg !10165

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10166
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10166
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !10167
  call void @llvm.dbg.value(metadata i32 %21, metadata !10151, metadata !DIExpression()), !dbg !10152
  %22 = icmp slt i32 %21, 0, !dbg !10168
  br i1 %22, label %49, label %23, !dbg !10170

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10171
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10171
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !10172
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10173
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !10174
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10175
  %28 = load i32, i32* %27, align 4, !dbg !10175
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10177

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10149, metadata !DIExpression()), !dbg !10152
  call void @llvm.dbg.value(metadata i32 4096, metadata !10150, metadata !DIExpression()), !dbg !10152
  br label %31, !dbg !10178

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10149, metadata !DIExpression()), !dbg !10152
  call void @llvm.dbg.value(metadata i32 0, metadata !10150, metadata !DIExpression()), !dbg !10152
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10181
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10181
  call void @llvm.dbg.value(metadata i32 %33, metadata !10150, metadata !DIExpression()), !dbg !10152
  call void @llvm.dbg.value(metadata i32 %32, metadata !10149, metadata !DIExpression()), !dbg !10152
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10182
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !10183
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10184
  %36 = load i8, i8* %35, align 4, !dbg !10184, !range !6705
  %37 = icmp eq i8 %36, 0, !dbg !10184
  br i1 %37, label %39, label %38, !dbg !10186

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !10187
  br label %39, !dbg !10189

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10190
  %41 = load i32, i32* %40, align 4, !dbg !10190
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !10191
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10192
  %43 = load i8, i8* %42, align 4, !dbg !10192, !range !6705
  %44 = icmp eq i8 %43, 0, !dbg !10192
  br i1 %44, label %47, label %45, !dbg !10194

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10195
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !10197
  br label %47, !dbg !10198

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10199
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !10200
  br label %49, !dbg !10201

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10152
  ret i32 %50, !dbg !10202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !10203 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10207, metadata !DIExpression()), !dbg !10211
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10212
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10212
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10212
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10208, metadata !DIExpression()), !dbg !10211
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10209, metadata !DIExpression()), !dbg !10211
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10213
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10214
  ret void, !dbg !10215
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.123(%struct.device* noundef %0) unnamed_addr #1 !dbg !10216 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10220, metadata !DIExpression()), !dbg !10221
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10222, !srcloc !10224
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.125(%struct.device* noundef %0) #26, !dbg !10225
  ret i1 %2, !dbg !10226
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.124(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10227 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10229, metadata !DIExpression()), !dbg !10232
  call void @llvm.dbg.value(metadata i8* %1, metadata !10230, metadata !DIExpression()), !dbg !10232
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10233
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10233
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10233
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10231, metadata !DIExpression()), !dbg !10232
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10234
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10234
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !10235
  ret i32 %8, !dbg !10236
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10237 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10241, metadata !DIExpression()), !dbg !10245
  call void @llvm.dbg.value(metadata i8 0, metadata !10242, metadata !DIExpression()), !dbg !10245
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10246
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10246
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10244, metadata !DIExpression(DW_OP_deref)), !dbg !10245
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !10247
  call void @llvm.dbg.value(metadata i32 %4, metadata !10243, metadata !DIExpression()), !dbg !10245
  %5 = icmp slt i32 %4, 0, !dbg !10248
  br i1 %5, label %9, label %6, !dbg !10250

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10251
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10244, metadata !DIExpression()), !dbg !10245
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !10252
  br label %9, !dbg !10253

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10245
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10254
  ret i32 %10, !dbg !10254
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10255 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10257, metadata !DIExpression()), !dbg !10261
  call void @llvm.dbg.value(metadata i32 12, metadata !10258, metadata !DIExpression()), !dbg !10261
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10262

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10263, metadata !DIExpression()) #25, !dbg !10269
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10272, !srcloc !10273
  call void @llvm.dbg.value(metadata i32 %4, metadata !10268, metadata !DIExpression()) #25, !dbg !10269
  %5 = or i32 %4, 12, !dbg !10274
  call void @llvm.dbg.value(metadata i32 %5, metadata !10259, metadata !DIExpression()), !dbg !10275
  call void @llvm.dbg.value(metadata i32 %5, metadata !10276, metadata !DIExpression()) #25, !dbg !10283
  call void @llvm.dbg.value(metadata i32* %2, metadata !10281, metadata !DIExpression()) #25, !dbg !10283
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10285, !srcloc !10286
  call void @llvm.dbg.value(metadata i32 %6, metadata !10282, metadata !DIExpression()) #25, !dbg !10283
  %7 = icmp eq i32 %6, 0, !dbg !10262
  br i1 %7, label %8, label %3, !dbg !10274, !llvm.loop !10287

8:                                                ; preds = %3
  ret void, !dbg !10288
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10289 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10291, metadata !DIExpression()), !dbg !10295
  call void @llvm.dbg.value(metadata i32 %1, metadata !10292, metadata !DIExpression()), !dbg !10295
  call void @llvm.dbg.value(metadata i32 %2, metadata !10293, metadata !DIExpression()), !dbg !10295
  call void @llvm.dbg.value(metadata i32 0, metadata !10294, metadata !DIExpression()), !dbg !10295
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10296
  %5 = load volatile i32, i32* %4, align 4, !dbg !10296
  %6 = and i32 %5, -5633, !dbg !10296
  %7 = or i32 %2, %1, !dbg !10296
  %8 = or i32 %7, %6, !dbg !10296
  store volatile i32 %8, i32* %4, align 4, !dbg !10296
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10297
  %10 = load volatile i32, i32* %9, align 4, !dbg !10297
  %11 = and i32 %10, -12289, !dbg !10297
  store volatile i32 %11, i32* %9, align 4, !dbg !10297
  ret void, !dbg !10298
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10299 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10301, metadata !DIExpression()), !dbg !10302
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10303
  %3 = load volatile i32, i32* %2, align 4, !dbg !10303
  %4 = or i32 %3, 8, !dbg !10303
  store volatile i32 %4, i32* %2, align 4, !dbg !10303
  ret void, !dbg !10304
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10305 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10309, metadata !DIExpression()), !dbg !10312
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10310, metadata !DIExpression()), !dbg !10312
  call void @llvm.dbg.value(metadata i32 0, metadata !10311, metadata !DIExpression()), !dbg !10312
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10313
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10313
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10314
  %5 = load i8, i8* %4, align 4, !dbg !10314
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !10315
  ret i32 %6, !dbg !10316
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.125(%struct.device* noundef %0) unnamed_addr #1 !dbg !10317 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10319, metadata !DIExpression()), !dbg !10320
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !10321
  ret i1 %2, !dbg !10322
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10323 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10325, metadata !DIExpression()), !dbg !10326
  tail call fastcc void @__NVIC_SetPriority.127() #26, !dbg !10327
  store i32 8399, i32* @last_load, align 4, !dbg !10328
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10329
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10330
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10331
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10332
  %3 = or i32 %2, 7, !dbg !10332
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10332
  ret i32 0, !dbg !10333
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.127() unnamed_addr #15 !dbg !10334 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10336, metadata !DIExpression()), !dbg !10338
  call void @llvm.dbg.value(metadata i32 1, metadata !10337, metadata !DIExpression()), !dbg !10338
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10339
  ret void, !dbg !10342
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10343 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10345, metadata !DIExpression()), !dbg !10347
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !10348
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10349
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10350
  %5 = add i32 %4, %3, !dbg !10350
  store i32 %5, i32* @cycle_count, align 4, !dbg !10350
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10351
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10352
  %7 = sub i32 %5, %6, !dbg !10355
  %8 = udiv i32 %7, 8400, !dbg !10356
  call void @llvm.dbg.value(metadata i32 %8, metadata !10346, metadata !DIExpression()), !dbg !10347
  %9 = mul nuw i32 %8, 8400, !dbg !10357
  %10 = add i32 %9, %6, !dbg !10358
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10358
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !10359
  tail call void @z_arm_int_exit() #27, !dbg !10360
  ret void, !dbg !10361
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10362 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10367
  call void @llvm.dbg.value(metadata i32 %1, metadata !10364, metadata !DIExpression()), !dbg !10368
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10369
  call void @llvm.dbg.value(metadata i32 %2, metadata !10365, metadata !DIExpression()), !dbg !10368
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10370
  call void @llvm.dbg.value(metadata i32 %3, metadata !10366, metadata !DIExpression()), !dbg !10368
  %4 = and i32 %2, 65536, !dbg !10371
  %5 = icmp ne i32 %4, 0, !dbg !10371
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10373
  %8 = load i32, i32* @last_load, align 4, !dbg !10368
  br i1 %7, label %9, label %13, !dbg !10373

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10374
  %11 = add i32 %10, %8, !dbg !10374
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10374
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10376
  br label %13, !dbg !10377

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10378
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10379
  %16 = add i32 %14, %15, !dbg !10380
  ret i32 %16, !dbg !10381
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10382 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10386, metadata !DIExpression()), !dbg !10399
  call void @llvm.dbg.value(metadata i1 %1, metadata !10387, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10399
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10400
  br i1 %4, label %5, label %8, !dbg !10400

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10402
  %7 = and i32 %6, -2, !dbg !10402
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10402
  store i32 -16777216, i32* @last_load, align 4, !dbg !10404
  br label %60, !dbg !10405

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10406
  call void @llvm.dbg.value(metadata i32 %9, metadata !10391, metadata !DIExpression()), !dbg !10399
  br i1 %3, label %18, label %10, !dbg !10407

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10407
  call void @llvm.dbg.value(metadata i32 undef, metadata !10386, metadata !DIExpression()), !dbg !10399
  %12 = icmp slt i32 %11, 1, !dbg !10408
  br i1 %12, label %18, label %13, !dbg !10408

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10408
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10408
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10408
  %17 = add nuw nsw i32 %16, 8399, !dbg !10408
  br label %18, !dbg !10408

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10386, metadata !DIExpression()), !dbg !10399
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10409, metadata !DIExpression()) #25, !dbg !10416
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10418, !srcloc !10424
  call void @llvm.dbg.value(metadata i32 undef, metadata !10421, metadata !DIExpression()) #25, !dbg !10425
  call void @llvm.dbg.value(metadata i32 undef, metadata !10422, metadata !DIExpression()) #25, !dbg !10425
  call void @llvm.dbg.value(metadata i32 undef, metadata !10415, metadata !DIExpression()) #25, !dbg !10416
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10426
  br i1 %21, label %23, label %22, !dbg !10429

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.129, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.130, i32 0, i32 0), i32 noundef 148) #27, !dbg !10430
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.131, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10430
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.130, i32 0, i32 0), i32 noundef 148) #27, !dbg !10430
  unreachable, !dbg !10430

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10418
  call void @llvm.dbg.value(metadata i32 %24, metadata !10421, metadata !DIExpression()) #25, !dbg !10425
  call void @llvm.dbg.value(metadata i32 %24, metadata !10415, metadata !DIExpression()) #25, !dbg !10416
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10432
  call void @llvm.dbg.value(metadata i32 %24, metadata !10392, metadata !DIExpression()), !dbg !10399
  %25 = tail call fastcc i32 @elapsed() #26, !dbg !10433
  call void @llvm.dbg.value(metadata i32 %25, metadata !10397, metadata !DIExpression()), !dbg !10399
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10434
  call void @llvm.dbg.value(metadata i32 %26, metadata !10389, metadata !DIExpression()), !dbg !10399
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10435
  %28 = add i32 %27, %25, !dbg !10435
  store i32 %28, i32* @cycle_count, align 4, !dbg !10435
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10436
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10437
  %30 = sub i32 %28, %29, !dbg !10438
  call void @llvm.dbg.value(metadata i32 %30, metadata !10398, metadata !DIExpression()), !dbg !10399
  %31 = icmp slt i32 %30, 0, !dbg !10439
  br i1 %31, label %41, label %32, !dbg !10441

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10388, metadata !DIExpression()), !dbg !10399
  call void @llvm.dbg.value(metadata i32 undef, metadata !10388, metadata !DIExpression()), !dbg !10399
  %33 = add nuw i32 %19, %30, !dbg !10442
  %34 = urem i32 %33, 8400, !dbg !10444
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10388, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10399
  %35 = sub nuw nsw i32 %19, %34, !dbg !10445
  call void @llvm.dbg.value(metadata i32 %35, metadata !10388, metadata !DIExpression()), !dbg !10399
  %36 = icmp ugt i32 %35, 1024, !dbg !10446
  br i1 %36, label %37, label %39, !dbg !10446

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10388, metadata !DIExpression()), !dbg !10399
  %38 = icmp ugt i32 %35, 16766400, !dbg !10447
  br i1 %38, label %41, label %39, !dbg !10449

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10450
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10451
  call void @llvm.dbg.value(metadata i32 %43, metadata !10390, metadata !DIExpression()), !dbg !10399
  %44 = add nsw i32 %42, -1, !dbg !10452
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10453
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10454
  %45 = icmp ult i32 %26, %43, !dbg !10455
  br i1 %45, label %46, label %51, !dbg !10457

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10458
  %48 = add i32 %26, %9, !dbg !10460
  %49 = sub i32 %48, %43, !dbg !10461
  %50 = add i32 %49, %47, !dbg !10458
  br label %55, !dbg !10462

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10463
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10465
  %54 = add i32 %52, %53, !dbg !10465
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10466
  store i32 %56, i32* @cycle_count, align 4, !dbg !10466
  call void @llvm.dbg.value(metadata i32 undef, metadata !10467, metadata !DIExpression()) #25, !dbg !10473
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10472, metadata !DIExpression()) #25, !dbg !10473
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10475
  br i1 %57, label %59, label %58, !dbg !10478

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.132, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.130, i32 0, i32 0), i32 noundef 194) #27, !dbg !10479
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.133, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10479
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.130, i32 0, i32 0), i32 noundef 194) #27, !dbg !10479
  unreachable, !dbg !10479

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10467, metadata !DIExpression()) #25, !dbg !10473
  call void @llvm.dbg.value(metadata i32 %24, metadata !10481, metadata !DIExpression()) #25, !dbg !10484
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #25, !dbg !10486, !srcloc !10487
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10488
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10489 {
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10409, metadata !DIExpression()) #25, !dbg !10493
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10495, !srcloc !10424
  call void @llvm.dbg.value(metadata i32 undef, metadata !10421, metadata !DIExpression()) #25, !dbg !10497
  call void @llvm.dbg.value(metadata i32 undef, metadata !10422, metadata !DIExpression()) #25, !dbg !10497
  call void @llvm.dbg.value(metadata i32 undef, metadata !10415, metadata !DIExpression()) #25, !dbg !10493
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10498
  br i1 %2, label %4, label %3, !dbg !10499

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.129, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.130, i32 0, i32 0), i32 noundef 148) #27, !dbg !10500
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.131, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10500
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.130, i32 0, i32 0), i32 noundef 148) #27, !dbg !10500
  unreachable, !dbg !10500

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10421, metadata !DIExpression()) #25, !dbg !10497
  call void @llvm.dbg.value(metadata i32 undef, metadata !10415, metadata !DIExpression()) #25, !dbg !10493
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10501
  call void @llvm.dbg.value(metadata i32 undef, metadata !10491, metadata !DIExpression()), !dbg !10502
  %5 = tail call fastcc i32 @elapsed() #26, !dbg !10503
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10504
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10505
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10492, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10502
  call void @llvm.dbg.value(metadata i32 undef, metadata !10467, metadata !DIExpression()) #25, !dbg !10506
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10472, metadata !DIExpression()) #25, !dbg !10506
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10508
  br i1 %8, label %10, label %9, !dbg !10509

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.132, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.130, i32 0, i32 0), i32 noundef 194) #27, !dbg !10510
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.133, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10510
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.130, i32 0, i32 0), i32 noundef 194) #27, !dbg !10510
  unreachable, !dbg !10510

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10511
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10492, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10502
  %12 = sub i32 %11, %7, !dbg !10512
  call void @llvm.dbg.value(metadata i32 %12, metadata !10492, metadata !DIExpression()), !dbg !10502
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10495
  call void @llvm.dbg.value(metadata i32 %13, metadata !10421, metadata !DIExpression()) #25, !dbg !10497
  call void @llvm.dbg.value(metadata i32 %13, metadata !10415, metadata !DIExpression()) #25, !dbg !10493
  call void @llvm.dbg.value(metadata i32 %13, metadata !10491, metadata !DIExpression()), !dbg !10502
  call void @llvm.dbg.value(metadata i32 undef, metadata !10467, metadata !DIExpression()) #25, !dbg !10506
  call void @llvm.dbg.value(metadata i32 undef, metadata !10481, metadata !DIExpression()) #25, !dbg !10513
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !10515, !srcloc !10487
  %14 = udiv i32 %12, 8400, !dbg !10516
  ret i32 %14, !dbg !10517
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10518 {
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10409, metadata !DIExpression()) #25, !dbg !10522
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10524, !srcloc !10424
  call void @llvm.dbg.value(metadata i32 undef, metadata !10421, metadata !DIExpression()) #25, !dbg !10526
  call void @llvm.dbg.value(metadata i32 undef, metadata !10422, metadata !DIExpression()) #25, !dbg !10526
  call void @llvm.dbg.value(metadata i32 undef, metadata !10415, metadata !DIExpression()) #25, !dbg !10522
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10527
  br i1 %2, label %4, label %3, !dbg !10528

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.129, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.130, i32 0, i32 0), i32 noundef 148) #27, !dbg !10529
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.131, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10529
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.130, i32 0, i32 0), i32 noundef 148) #27, !dbg !10529
  unreachable, !dbg !10529

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10421, metadata !DIExpression()) #25, !dbg !10526
  call void @llvm.dbg.value(metadata i32 undef, metadata !10415, metadata !DIExpression()) #25, !dbg !10522
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10530
  call void @llvm.dbg.value(metadata i32 undef, metadata !10520, metadata !DIExpression()), !dbg !10531
  %5 = tail call fastcc i32 @elapsed() #26, !dbg !10532
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10533
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10521, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10531
  call void @llvm.dbg.value(metadata i32 undef, metadata !10467, metadata !DIExpression()) #25, !dbg !10534
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10472, metadata !DIExpression()) #25, !dbg !10534
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10536
  br i1 %7, label %9, label %8, !dbg !10537

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.132, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.130, i32 0, i32 0), i32 noundef 194) #27, !dbg !10538
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.133, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10538
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.130, i32 0, i32 0), i32 noundef 194) #27, !dbg !10538
  unreachable, !dbg !10538

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10539
  call void @llvm.dbg.value(metadata i32 %10, metadata !10521, metadata !DIExpression()), !dbg !10531
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10524
  call void @llvm.dbg.value(metadata i32 %11, metadata !10421, metadata !DIExpression()) #25, !dbg !10526
  call void @llvm.dbg.value(metadata i32 %11, metadata !10415, metadata !DIExpression()) #25, !dbg !10522
  call void @llvm.dbg.value(metadata i32 %11, metadata !10520, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.value(metadata i32 undef, metadata !10467, metadata !DIExpression()) #25, !dbg !10534
  call void @llvm.dbg.value(metadata i32 undef, metadata !10481, metadata !DIExpression()) #25, !dbg !10540
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #25, !dbg !10542, !srcloc !10487
  ret i32 %10, !dbg !10543
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10544 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10545
  %2 = icmp eq i32 %1, -16777216, !dbg !10547
  br i1 %2, label %3, label %6, !dbg !10548

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10549
  %5 = or i32 %4, 1, !dbg !10549
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10549
  br label %6, !dbg !10551

6:                                                ; preds = %3, %0
  ret void, !dbg !10552
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10553 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10554
  %2 = and i32 %1, -2, !dbg !10554
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10554
  ret void, !dbg !10555
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !10556 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10582, metadata !DIExpression()), !dbg !10585
  call void @llvm.dbg.value(metadata i8 %1, metadata !10583, metadata !DIExpression()), !dbg !10585
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10584, metadata !DIExpression()), !dbg !10585
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10586
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10586
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10585
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10587
  %8 = load i8, i8* %6, align 4, !dbg !10588
  %9 = zext i8 %8 to i32, !dbg !10589
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10589
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10590
  br i1 %11, label %18, label %24, !dbg !10591

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10585
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10587
  %14 = load i8, i8* %6, align 4, !dbg !10588
  %15 = zext i8 %14 to i32, !dbg !10589
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10589
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10590
  br i1 %17, label %18, label %24, !dbg !10591, !llvm.loop !10592

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10594
  %21 = load i8, i8* %20, align 1, !dbg !10594
  %22 = icmp eq i8 %21, %1, !dbg !10597
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10598
  br i1 %22, label %24, label %12, !dbg !10599

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10585
  ret i32 %25, !dbg !10600
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10601 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10612, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.value(metadata i8 %1, metadata !10613, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.value(metadata i32 %2, metadata !10614, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.value(metadata i32 0, metadata !10617, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.value(metadata i32 0, metadata !10618, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.value(metadata i8 0, metadata !10619, metadata !DIExpression()), !dbg !10629
  %4 = icmp eq i8 %1, 0, !dbg !10630
  br i1 %4, label %35, label %5, !dbg !10631

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10630
  br label %9, !dbg !10631

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10619, metadata !DIExpression()), !dbg !10629
  call void @llvm.dbg.value(metadata i32 %29, metadata !10617, metadata !DIExpression()), !dbg !10628
  %8 = icmp eq i32 %34, %6, !dbg !10630
  br i1 %8, label %35, label %9, !dbg !10631, !llvm.loop !10632

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10619, metadata !DIExpression()), !dbg !10629
  call void @llvm.dbg.value(metadata i32 %11, metadata !10617, metadata !DIExpression()), !dbg !10628
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10634
  %13 = load i32, i32* %12, align 4, !dbg !10634
  call void @llvm.dbg.value(metadata i32 %13, metadata !10616, metadata !DIExpression()), !dbg !10628
  %14 = and i32 %13, 31, !dbg !10635
  %15 = icmp ult i32 %14, 16, !dbg !10636
  br i1 %15, label %16, label %20, !dbg !10637

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10638
  %18 = load i32, i32* %17, align 4, !dbg !10638
  %19 = or i32 %18, 32, !dbg !10640
  call void @llvm.dbg.value(metadata i32 %19, metadata !10617, metadata !DIExpression()), !dbg !10628
  br label %28, !dbg !10641

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10642

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10643
  %23 = load i32, i32* %22, align 4, !dbg !10643
  call void @llvm.dbg.value(metadata i32 %23, metadata !10621, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10644
  %24 = lshr i32 %23, 7, !dbg !10645
  %25 = and i32 %24, 16, !dbg !10645
  %26 = or i32 %25, %23, !dbg !10645
  call void @llvm.dbg.value(metadata i32 %26, metadata !10617, metadata !DIExpression()), !dbg !10628
  br label %28, !dbg !10646

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !10628
  call void @llvm.dbg.value(metadata i32 %29, metadata !10617, metadata !DIExpression()), !dbg !10628
  %30 = lshr i32 %13, 5, !dbg !10647
  %31 = and i32 %30, 255, !dbg !10647
  call void @llvm.dbg.value(metadata i32 %31, metadata !10615, metadata !DIExpression()), !dbg !10628
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !10648
  call void @llvm.dbg.value(metadata i32 %32, metadata !10618, metadata !DIExpression()), !dbg !10628
  %33 = icmp slt i32 %32, 0, !dbg !10649
  %34 = add nuw nsw i32 %10, 1, !dbg !10651
  call void @llvm.dbg.value(metadata i32 %34, metadata !10619, metadata !DIExpression()), !dbg !10629
  br i1 %33, label %35, label %7, !dbg !10652

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10653
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10654 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10658, metadata !DIExpression()), !dbg !10662
  call void @llvm.dbg.value(metadata i32 %1, metadata !10659, metadata !DIExpression()), !dbg !10662
  call void @llvm.dbg.value(metadata i32 %2, metadata !10660, metadata !DIExpression()), !dbg !10662
  %4 = icmp ugt i32 %0, 175, !dbg !10663
  br i1 %4, label %16, label %5, !dbg !10665

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10666
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10667
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10667
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10661, metadata !DIExpression()), !dbg !10662
  %9 = add nsw i32 %6, -8, !dbg !10668
  %10 = icmp ult i32 %9, 3, !dbg !10668
  br i1 %10, label %16, label %11, !dbg !10670

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.138(%struct.device* noundef %8) #26, !dbg !10671
  br i1 %12, label %13, label %16, !dbg !10672

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !10673
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !10674
  br label %16, !dbg !10675

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !10662
  ret i32 %17, !dbg !10676
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.138(%struct.device* noundef %0) unnamed_addr #1 !dbg !10677 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10681, metadata !DIExpression()), !dbg !10682
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10683, !srcloc !10685
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.139(%struct.device* noundef %0) #26, !dbg !10686
  ret i1 %2, !dbg !10687
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.139(%struct.device* noundef %0) unnamed_addr #1 !dbg !10688 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10690, metadata !DIExpression()), !dbg !10691
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !10692
  ret i1 %2, !dbg !10693
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !10694 {
  ret void, !dbg !10695
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !10696 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10698, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i32 0, metadata !10699, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i32 2, metadata !10700, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i32 0, metadata !10701, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i32 2, metadata !10702, metadata !DIExpression()), !dbg !10703
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10704
  %2 = and i32 %1, 12, !dbg !10705
  call void @llvm.dbg.value(metadata i32 %2, metadata !10698, metadata !DIExpression()), !dbg !10703
  %3 = icmp eq i32 %2, 8, !dbg !10706
  br i1 %3, label %4, label %18, !dbg !10706

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10707
  call void @llvm.dbg.value(metadata i32 %5, metadata !10701, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !10703
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10709
  %7 = and i32 %6, 63, !dbg !10710
  call void @llvm.dbg.value(metadata i32 %7, metadata !10702, metadata !DIExpression()), !dbg !10703
  %8 = udiv i32 16000000, %7, !dbg !10711
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10711
  %10 = lshr i32 %9, 6, !dbg !10711
  %11 = and i32 %10, 511, !dbg !10711
  %12 = mul i32 %11, %8, !dbg !10711
  call void @llvm.dbg.value(metadata i32 %12, metadata !10699, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i32 %12, metadata !10699, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i32 %12, metadata !10699, metadata !DIExpression()), !dbg !10703
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10713
  %14 = lshr i32 %13, 15, !dbg !10714
  %15 = and i32 %14, 6, !dbg !10714
  %16 = add nuw nsw i32 %15, 2, !dbg !10714
  call void @llvm.dbg.value(metadata i32 %16, metadata !10700, metadata !DIExpression()), !dbg !10703
  %17 = udiv i32 %12, %16, !dbg !10715
  br label %18, !dbg !10716

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !10717
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10718
  %21 = lshr i32 %20, 4, !dbg !10719
  %22 = and i32 %21, 15, !dbg !10719
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !10720
  %24 = load i8, i8* %23, align 1, !dbg !10720
  %25 = zext i8 %24 to i32, !dbg !10720
  call void @llvm.dbg.value(metadata i32 %25, metadata !10698, metadata !DIExpression()), !dbg !10703
  %26 = lshr i32 %19, %25, !dbg !10721
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !10721
  ret void, !dbg !10722
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !10723 {
  ret i32 0, !dbg !10728
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !10729 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10756, metadata !DIExpression()), !dbg !10767
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !10768
  br i1 %3, label %317, label %4, !dbg !10770

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10771
  %6 = load i32, i32* %5, align 4, !dbg !10771
  %7 = and i32 %6, 1, !dbg !10773
  %8 = icmp eq i32 %7, 0, !dbg !10774
  br i1 %8, label %66, label %9, !dbg !10775

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10776
  %11 = and i32 %10, 12, !dbg !10776
  %12 = icmp eq i32 %11, 4, !dbg !10779
  br i1 %12, label %21, label %13, !dbg !10780

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10781
  %15 = and i32 %14, 12, !dbg !10781
  %16 = icmp eq i32 %15, 8, !dbg !10782
  br i1 %16, label %17, label %29, !dbg !10783

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10784
  %19 = and i32 %18, 4194304, !dbg !10785
  %20 = icmp eq i32 %19, 0, !dbg !10786
  br i1 %20, label %29, label %21, !dbg !10787

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10788
  %23 = and i32 %22, 131072, !dbg !10788
  %24 = icmp eq i32 %23, 0, !dbg !10788
  br i1 %24, label %66, label %25, !dbg !10791

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10792
  %27 = load i32, i32* %26, align 4, !dbg !10792
  %28 = icmp eq i32 %27, 0, !dbg !10793
  br i1 %28, label %317, label %66, !dbg !10794

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10795
  %31 = load i32, i32* %30, align 4, !dbg !10795
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !10799

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10800
  %34 = or i32 %33, 65536, !dbg !10800
  br label %45, !dbg !10800

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10802
  %37 = or i32 %36, 262144, !dbg !10802
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10802
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10802
  %39 = or i32 %38, 65536, !dbg !10802
  br label %45, !dbg !10802

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10805
  %42 = and i32 %41, -65537, !dbg !10805
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10805
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10805
  %44 = and i32 %43, -262145, !dbg !10805
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10807
  %47 = load i32, i32* %30, align 4, !dbg !10808
  %48 = icmp eq i32 %47, 0, !dbg !10810
  %49 = tail call i32 @HAL_GetTick() #27, !dbg !10811
  call void @llvm.dbg.value(metadata i32 %49, metadata !10757, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.value(metadata i32 %49, metadata !10757, metadata !DIExpression()), !dbg !10767
  br i1 %48, label %58, label %50, !dbg !10812

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10813
  %52 = and i32 %51, 131072, !dbg !10815
  %53 = icmp eq i32 %52, 0, !dbg !10815
  br i1 %53, label %54, label %66, !dbg !10816

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #27, !dbg !10817
  %56 = sub i32 %55, %49, !dbg !10820
  %57 = icmp ugt i32 %56, 100, !dbg !10821
  br i1 %57, label %317, label %50, !dbg !10822, !llvm.loop !10823

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10825
  %60 = and i32 %59, 131072, !dbg !10825
  %61 = icmp eq i32 %60, 0, !dbg !10825
  br i1 %61, label %66, label %62, !dbg !10827

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !10828
  %64 = sub i32 %63, %49, !dbg !10831
  %65 = icmp ugt i32 %64, 100, !dbg !10832
  br i1 %65, label %317, label %58, !dbg !10833, !llvm.loop !10834

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !10836
  %68 = and i32 %67, 2, !dbg !10838
  %69 = icmp eq i32 %68, 0, !dbg !10839
  br i1 %69, label %121, label %70, !dbg !10840

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10841
  %72 = and i32 %71, 12, !dbg !10841
  %73 = icmp eq i32 %72, 0, !dbg !10844
  br i1 %73, label %82, label %74, !dbg !10845

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10846
  %76 = and i32 %75, 12, !dbg !10846
  %77 = icmp eq i32 %76, 8, !dbg !10847
  br i1 %77, label %78, label %90, !dbg !10848

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10849
  %80 = and i32 %79, 4194304, !dbg !10850
  %81 = icmp eq i32 %80, 0, !dbg !10851
  br i1 %81, label %82, label %90, !dbg !10852

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10853
  %84 = and i32 %83, 2, !dbg !10853
  %85 = icmp eq i32 %84, 0, !dbg !10853
  br i1 %85, label %114, label %86, !dbg !10856

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10857
  %88 = load i32, i32* %87, align 4, !dbg !10857
  %89 = icmp eq i32 %88, 1, !dbg !10858
  br i1 %89, label %114, label %317, !dbg !10859

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10860
  %92 = load i32, i32* %91, align 4, !dbg !10860
  %93 = icmp eq i32 %92, 0, !dbg !10863
  br i1 %93, label %104, label %94, !dbg !10864

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10865
  %95 = tail call i32 @HAL_GetTick() #27, !dbg !10867
  call void @llvm.dbg.value(metadata i32 %95, metadata !10757, metadata !DIExpression()), !dbg !10767
  br label %96, !dbg !10868

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10869
  %98 = and i32 %97, 2, !dbg !10870
  %99 = icmp eq i32 %98, 0, !dbg !10870
  br i1 %99, label %100, label %114, !dbg !10868

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #27, !dbg !10871
  %102 = sub i32 %101, %95, !dbg !10874
  %103 = icmp ugt i32 %102, 2, !dbg !10875
  br i1 %103, label %317, label %96, !dbg !10876, !llvm.loop !10877

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10879
  %105 = tail call i32 @HAL_GetTick() #27, !dbg !10881
  call void @llvm.dbg.value(metadata i32 %105, metadata !10757, metadata !DIExpression()), !dbg !10767
  br label %106, !dbg !10882

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10883
  %108 = and i32 %107, 2, !dbg !10883
  %109 = icmp eq i32 %108, 0, !dbg !10883
  br i1 %109, label %121, label %110, !dbg !10882

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !10884
  %112 = sub i32 %111, %105, !dbg !10887
  %113 = icmp ugt i32 %112, 2, !dbg !10888
  br i1 %113, label %317, label %106, !dbg !10889, !llvm.loop !10890

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10892
  %116 = and i32 %115, -249, !dbg !10892
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10892
  %118 = load i32, i32* %117, align 4, !dbg !10892
  %119 = shl i32 %118, 3, !dbg !10892
  %120 = or i32 %119, %116, !dbg !10892
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10892
  br label %121, !dbg !10893

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !10893
  %123 = and i32 %122, 8, !dbg !10895
  %124 = icmp eq i32 %123, 0, !dbg !10896
  br i1 %124, label %149, label %125, !dbg !10897

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10898
  %127 = load i32, i32* %126, align 4, !dbg !10898
  %128 = icmp eq i32 %127, 0, !dbg !10901
  br i1 %128, label %139, label %129, !dbg !10902

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10903
  %130 = tail call i32 @HAL_GetTick() #27, !dbg !10905
  call void @llvm.dbg.value(metadata i32 %130, metadata !10757, metadata !DIExpression()), !dbg !10767
  br label %131, !dbg !10906

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10907
  %133 = and i32 %132, 2, !dbg !10908
  %134 = icmp eq i32 %133, 0, !dbg !10908
  br i1 %134, label %135, label %149, !dbg !10906

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #27, !dbg !10909
  %137 = sub i32 %136, %130, !dbg !10912
  %138 = icmp ugt i32 %137, 2, !dbg !10913
  br i1 %138, label %317, label %131, !dbg !10914, !llvm.loop !10915

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10917
  %140 = tail call i32 @HAL_GetTick() #27, !dbg !10919
  call void @llvm.dbg.value(metadata i32 %140, metadata !10757, metadata !DIExpression()), !dbg !10767
  br label %141, !dbg !10920

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10921
  %143 = and i32 %142, 2, !dbg !10921
  %144 = icmp eq i32 %143, 0, !dbg !10921
  br i1 %144, label %149, label %145, !dbg !10920

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !10922
  %147 = sub i32 %146, %140, !dbg !10925
  %148 = icmp ugt i32 %147, 2, !dbg !10926
  br i1 %148, label %317, label %141, !dbg !10927, !llvm.loop !10928

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !10930
  %151 = and i32 %150, 4, !dbg !10931
  %152 = icmp eq i32 %151, 0, !dbg !10932
  br i1 %152, label %221, label %153, !dbg !10933

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !10759, metadata !DIExpression()), !dbg !10934
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10935
  %155 = and i32 %154, 268435456, !dbg !10935
  %156 = icmp eq i32 %155, 0, !dbg !10935
  br i1 %156, label %157, label %164, !dbg !10936

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !10937
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !10937
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10763, metadata !DIExpression()), !dbg !10937
  store volatile i32 0, i32* %2, align 4, !dbg !10937
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10937
  %160 = or i32 %159, 268435456, !dbg !10937
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10937
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10937
  %162 = and i32 %161, 268435456, !dbg !10937
  store volatile i32 %162, i32* %2, align 4, !dbg !10937
  %163 = load volatile i32, i32* %2, align 4, !dbg !10937
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !10938
  call void @llvm.dbg.value(metadata i32 1, metadata !10759, metadata !DIExpression()), !dbg !10934
  br label %164, !dbg !10939

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !10759, metadata !DIExpression()), !dbg !10934
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10940
  %166 = and i32 %165, 256, !dbg !10940
  %167 = icmp eq i32 %166, 0, !dbg !10940
  br i1 %167, label %168, label %180, !dbg !10942

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10943
  %170 = or i32 %169, 256, !dbg !10943
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10943
  %171 = tail call i32 @HAL_GetTick() #27, !dbg !10945
  call void @llvm.dbg.value(metadata i32 %171, metadata !10757, metadata !DIExpression()), !dbg !10767
  br label %172, !dbg !10946

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10947
  %174 = and i32 %173, 256, !dbg !10947
  %175 = icmp eq i32 %174, 0, !dbg !10947
  br i1 %175, label %176, label %180, !dbg !10946

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #27, !dbg !10948
  %178 = sub i32 %177, %171, !dbg !10951
  %179 = icmp ugt i32 %178, 2, !dbg !10952
  br i1 %179, label %317, label %172, !dbg !10953, !llvm.loop !10954

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10956
  %182 = load i32, i32* %181, align 4, !dbg !10956
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !10959

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10960
  %185 = or i32 %184, 1, !dbg !10960
  br label %196, !dbg !10960

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10962
  %188 = or i32 %187, 4, !dbg !10962
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10962
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10962
  %190 = or i32 %189, 1, !dbg !10962
  br label %196, !dbg !10962

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10965
  %193 = and i32 %192, -2, !dbg !10965
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10965
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10965
  %195 = and i32 %194, -5, !dbg !10965
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10967
  %198 = load i32, i32* %181, align 4, !dbg !10968
  %199 = icmp eq i32 %198, 0, !dbg !10970
  %200 = tail call i32 @HAL_GetTick() #27, !dbg !10971
  call void @llvm.dbg.value(metadata i32 %200, metadata !10757, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.value(metadata i32 %200, metadata !10757, metadata !DIExpression()), !dbg !10767
  br i1 %199, label %209, label %201, !dbg !10972

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10973
  %203 = and i32 %202, 2, !dbg !10975
  %204 = icmp eq i32 %203, 0, !dbg !10975
  br i1 %204, label %205, label %217, !dbg !10976

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !10977
  %207 = sub i32 %206, %200, !dbg !10980
  %208 = icmp ugt i32 %207, 5000, !dbg !10981
  br i1 %208, label %317, label %201, !dbg !10982, !llvm.loop !10983

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10985
  %211 = and i32 %210, 2, !dbg !10985
  %212 = icmp eq i32 %211, 0, !dbg !10985
  br i1 %212, label %217, label %213, !dbg !10987

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #27, !dbg !10988
  %215 = sub i32 %214, %200, !dbg !10991
  %216 = icmp ugt i32 %215, 5000, !dbg !10992
  br i1 %216, label %317, label %209, !dbg !10993, !llvm.loop !10994

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !10996

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10997
  %220 = and i32 %219, -268435457, !dbg !10997
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10997
  br label %221, !dbg !11000

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11001
  %223 = load i32, i32* %222, align 4, !dbg !11001
  %224 = icmp eq i32 %223, 0, !dbg !11003
  br i1 %224, label %316, label %225, !dbg !11004

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11005
  %227 = and i32 %226, 12, !dbg !11005
  %228 = icmp eq i32 %227, 8, !dbg !11008
  br i1 %228, label %277, label %229, !dbg !11009

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !11010
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11013
  %231 = tail call i32 @HAL_GetTick() #27, !dbg !11013
  call void @llvm.dbg.value(metadata i32 %231, metadata !10757, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.value(metadata i32 %231, metadata !10757, metadata !DIExpression()), !dbg !10767
  br i1 %230, label %232, label %269, !dbg !11014

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11015
  %234 = and i32 %233, 33554432, !dbg !11015
  %235 = icmp eq i32 %234, 0, !dbg !11015
  br i1 %235, label %240, label %236, !dbg !11017

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #27, !dbg !11018
  %238 = sub i32 %237, %231, !dbg !11021
  %239 = icmp ugt i32 %238, 2, !dbg !11022
  br i1 %239, label %317, label %232, !dbg !11023, !llvm.loop !11024

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11026
  %242 = load i32, i32* %241, align 4, !dbg !11026
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11026
  %244 = load i32, i32* %243, align 4, !dbg !11026
  %245 = or i32 %244, %242, !dbg !11026
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11026
  %247 = load i32, i32* %246, align 4, !dbg !11026
  %248 = shl i32 %247, 6, !dbg !11026
  %249 = or i32 %245, %248, !dbg !11026
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11026
  %251 = load i32, i32* %250, align 4, !dbg !11026
  %252 = shl i32 %251, 15, !dbg !11026
  %253 = add i32 %252, -65536, !dbg !11026
  %254 = and i32 %253, -65536, !dbg !11026
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11026
  %256 = load i32, i32* %255, align 4, !dbg !11026
  %257 = shl i32 %256, 24, !dbg !11026
  %258 = or i32 %249, %257, !dbg !11026
  %259 = or i32 %258, %254, !dbg !11026
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11026
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11027
  %260 = tail call i32 @HAL_GetTick() #27, !dbg !11028
  call void @llvm.dbg.value(metadata i32 %260, metadata !10757, metadata !DIExpression()), !dbg !10767
  br label %261, !dbg !11029

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11030
  %263 = and i32 %262, 33554432, !dbg !11031
  %264 = icmp eq i32 %263, 0, !dbg !11031
  br i1 %264, label %265, label %316, !dbg !11029

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #27, !dbg !11032
  %267 = sub i32 %266, %260, !dbg !11035
  %268 = icmp ugt i32 %267, 2, !dbg !11036
  br i1 %268, label %317, label %261, !dbg !11037, !llvm.loop !11038

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11040
  %271 = and i32 %270, 33554432, !dbg !11040
  %272 = icmp eq i32 %271, 0, !dbg !11040
  br i1 %272, label %316, label %273, !dbg !11042

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #27, !dbg !11043
  %275 = sub i32 %274, %231, !dbg !11046
  %276 = icmp ugt i32 %275, 2, !dbg !11047
  br i1 %276, label %317, label %269, !dbg !11048, !llvm.loop !11049

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11051
  br i1 %278, label %317, label %279, !dbg !11054

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11055
  call void @llvm.dbg.value(metadata i32 %280, metadata !10758, metadata !DIExpression()), !dbg !10767
  %281 = and i32 %280, 4194304, !dbg !11057
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11059
  %283 = load i32, i32* %282, align 4, !dbg !11059
  %284 = icmp eq i32 %281, %283, !dbg !11060
  br i1 %284, label %285, label %317, !dbg !11061

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11062
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11063
  %288 = load i32, i32* %287, align 4, !dbg !11063
  %289 = icmp eq i32 %286, %288, !dbg !11064
  br i1 %289, label %290, label %317, !dbg !11065

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11066
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11067
  %293 = load i32, i32* %292, align 4, !dbg !11067
  %294 = shl i32 %293, 6, !dbg !11068
  %295 = icmp eq i32 %291, %294, !dbg !11069
  br i1 %295, label %296, label %317, !dbg !11070

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11071
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11072
  %299 = load i32, i32* %298, align 4, !dbg !11072
  %300 = shl i32 %299, 15, !dbg !11073
  %301 = add i32 %300, -65536, !dbg !11073
  %302 = and i32 %301, -65536, !dbg !11073
  %303 = icmp eq i32 %297, %302, !dbg !11074
  br i1 %303, label %304, label %317, !dbg !11075

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11076
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11077
  %307 = load i32, i32* %306, align 4, !dbg !11077
  %308 = shl i32 %307, 24, !dbg !11078
  %309 = icmp eq i32 %305, %308, !dbg !11079
  br i1 %309, label %310, label %317, !dbg !11080

310:                                              ; preds = %304
  %311 = and i32 %280, 1879048192, !dbg !11081
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !11082
  %313 = load i32, i32* %312, align 4, !dbg !11082
  %314 = shl i32 %313, 28, !dbg !11083
  %315 = icmp eq i32 %311, %314, !dbg !11084
  br i1 %315, label %316, label %317, !dbg !11085

316:                                              ; preds = %269, %261, %310, %221
  br label %317, !dbg !11086

317:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %310, %277, %86, %25, %1, %316
  %318 = phi i32 [ 0, %316 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %310 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !10767
  ret i32 %318, !dbg !11087
}

; Function Attrs: optsize
declare !dbg !11088 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11090 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11103, metadata !DIExpression()), !dbg !11106
  call void @llvm.dbg.value(metadata i32 %1, metadata !11104, metadata !DIExpression()), !dbg !11106
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11107
  br i1 %3, label %115, label %4, !dbg !11109

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11110
  %6 = and i32 %5, 7, !dbg !11110
  %7 = icmp ult i32 %6, %1, !dbg !11112
  br i1 %7, label %8, label %13, !dbg !11113

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11114
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11114
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11116
  %11 = and i32 %10, 7, !dbg !11116
  %12 = icmp eq i32 %11, %1, !dbg !11118
  br i1 %12, label %13, label %115, !dbg !11119

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11120
  %15 = load i32, i32* %14, align 4, !dbg !11120
  %16 = and i32 %15, 2, !dbg !11122
  %17 = icmp eq i32 %16, 0, !dbg !11123
  br i1 %17, label %39, label %18, !dbg !11124

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11125
  %20 = icmp eq i32 %19, 0, !dbg !11128
  br i1 %20, label %25, label %21, !dbg !11129

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11130
  %23 = or i32 %22, 7168, !dbg !11130
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11130
  %24 = load i32, i32* %14, align 4, !dbg !11132
  br label %25, !dbg !11134

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11132
  %27 = and i32 %26, 8, !dbg !11135
  %28 = icmp eq i32 %27, 0, !dbg !11136
  br i1 %28, label %32, label %29, !dbg !11137

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11138
  %31 = or i32 %30, 57344, !dbg !11138
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11138
  br label %32, !dbg !11140

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11141
  %34 = and i32 %33, -241, !dbg !11141
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11141
  %36 = load i32, i32* %35, align 4, !dbg !11141
  %37 = or i32 %34, %36, !dbg !11141
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11141
  %38 = load i32, i32* %14, align 4, !dbg !11142
  br label %39, !dbg !11144

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11142
  %41 = and i32 %40, 1, !dbg !11145
  %42 = icmp eq i32 %41, 0, !dbg !11146
  br i1 %42, label %73, label %43, !dbg !11147

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11148
  %45 = load i32, i32* %44, align 4, !dbg !11148
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11151

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11152
  %48 = and i32 %47, 131072, !dbg !11155
  %49 = icmp eq i32 %48, 0, !dbg !11155
  br i1 %49, label %115, label %58, !dbg !11156

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11157
  %52 = and i32 %51, 33554432, !dbg !11161
  %53 = icmp eq i32 %52, 0, !dbg !11161
  br i1 %53, label %115, label %58, !dbg !11162

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11163
  %56 = and i32 %55, 2, !dbg !11166
  %57 = icmp eq i32 %56, 0, !dbg !11166
  br i1 %57, label %115, label %58, !dbg !11167

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11168
  %60 = and i32 %59, -4, !dbg !11168
  %61 = or i32 %60, %45, !dbg !11168
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11168
  %62 = tail call i32 @HAL_GetTick() #27, !dbg !11169
  call void @llvm.dbg.value(metadata i32 %62, metadata !11105, metadata !DIExpression()), !dbg !11106
  br label %63, !dbg !11170

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11171
  %65 = and i32 %64, 12, !dbg !11171
  %66 = load i32, i32* %44, align 4, !dbg !11172
  %67 = shl i32 %66, 2, !dbg !11173
  %68 = icmp eq i32 %65, %67, !dbg !11174
  br i1 %68, label %73, label %69, !dbg !11170

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #27, !dbg !11175
  %71 = sub i32 %70, %62, !dbg !11178
  %72 = icmp ugt i32 %71, 5000, !dbg !11179
  br i1 %72, label %115, label %63, !dbg !11180, !llvm.loop !11181

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11183
  %75 = and i32 %74, 7, !dbg !11183
  %76 = icmp ugt i32 %75, %1, !dbg !11185
  br i1 %76, label %77, label %82, !dbg !11186

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11187
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11187
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11189
  %80 = and i32 %79, 7, !dbg !11189
  %81 = icmp eq i32 %80, %1, !dbg !11191
  br i1 %81, label %82, label %115, !dbg !11192

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11193
  %84 = and i32 %83, 4, !dbg !11195
  %85 = icmp eq i32 %84, 0, !dbg !11196
  br i1 %85, label %93, label %86, !dbg !11197

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11198
  %88 = and i32 %87, -7169, !dbg !11198
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11198
  %90 = load i32, i32* %89, align 4, !dbg !11198
  %91 = or i32 %88, %90, !dbg !11198
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11198
  %92 = load i32, i32* %14, align 4, !dbg !11200
  br label %93, !dbg !11202

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11200
  %95 = and i32 %94, 8, !dbg !11203
  %96 = icmp eq i32 %95, 0, !dbg !11204
  br i1 %96, label %104, label %97, !dbg !11205

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11206
  %99 = and i32 %98, -57345, !dbg !11206
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11206
  %101 = load i32, i32* %100, align 4, !dbg !11206
  %102 = shl i32 %101, 3, !dbg !11206
  %103 = or i32 %102, %99, !dbg !11206
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11206
  br label %104, !dbg !11208

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !11209
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11210
  %107 = lshr i32 %106, 4, !dbg !11211
  %108 = and i32 %107, 15, !dbg !11211
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11212
  %110 = load i8, i8* %109, align 1, !dbg !11212
  %111 = zext i8 %110 to i32, !dbg !11212
  %112 = lshr i32 %105, %111, !dbg !11213
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11214
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11215
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #27, !dbg !11216
  br label %115, !dbg !11217

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11106
  ret i32 %116, !dbg !11218
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11219 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11221, metadata !DIExpression()), !dbg !11225
  call void @llvm.dbg.value(metadata i32 0, metadata !11222, metadata !DIExpression()), !dbg !11225
  call void @llvm.dbg.value(metadata i32 0, metadata !11223, metadata !DIExpression()), !dbg !11225
  call void @llvm.dbg.value(metadata i32 0, metadata !11224, metadata !DIExpression()), !dbg !11225
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11226
  %2 = and i32 %1, 12, !dbg !11227
  %3 = icmp eq i32 %2, 8, !dbg !11228
  br i1 %3, label %4, label %21, !dbg !11228

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11229
  %6 = and i32 %5, 63, !dbg !11232
  call void @llvm.dbg.value(metadata i32 %6, metadata !11221, metadata !DIExpression()), !dbg !11225
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11233
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11235
  %9 = lshr i32 %8, 6, !dbg !11235
  %10 = and i32 %9, 511, !dbg !11235
  %11 = zext i32 %10 to i64, !dbg !11235
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !11235
  %13 = zext i32 %6 to i64, !dbg !11235
  %14 = udiv i64 %12, %13, !dbg !11235
  %15 = trunc i64 %14 to i32, !dbg !11235
  call void @llvm.dbg.value(metadata i32 %15, metadata !11222, metadata !DIExpression()), !dbg !11225
  call void @llvm.dbg.value(metadata i32 %15, metadata !11222, metadata !DIExpression()), !dbg !11225
  call void @llvm.dbg.value(metadata i32 %15, metadata !11222, metadata !DIExpression()), !dbg !11225
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11236
  %17 = lshr i32 %16, 15, !dbg !11237
  %18 = and i32 %17, 6, !dbg !11237
  %19 = add nuw nsw i32 %18, 2, !dbg !11237
  call void @llvm.dbg.value(metadata i32 %19, metadata !11223, metadata !DIExpression()), !dbg !11225
  %20 = udiv i32 %15, %19, !dbg !11238
  call void @llvm.dbg.value(metadata i32 %20, metadata !11224, metadata !DIExpression()), !dbg !11225
  br label %21, !dbg !11239

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !11240
  call void @llvm.dbg.value(metadata i32 %22, metadata !11224, metadata !DIExpression()), !dbg !11225
  ret i32 %22, !dbg !11241
}

; Function Attrs: optsize
declare !dbg !11242 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11245 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11249, metadata !DIExpression()), !dbg !11266
  call void @llvm.dbg.value(metadata i32 %1, metadata !11250, metadata !DIExpression()), !dbg !11266
  call void @llvm.dbg.value(metadata i32 %2, metadata !11251, metadata !DIExpression()), !dbg !11266
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11267
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #25, !dbg !11267
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11252, metadata !DIExpression()), !dbg !11268
  %7 = icmp eq i32 %0, 0, !dbg !11269
  br i1 %7, label %8, label %24, !dbg !11270

8:                                                ; preds = %3
  %9 = bitcast i32* %5 to i8*, !dbg !11271
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9), !dbg !11271
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11262, metadata !DIExpression()), !dbg !11271
  store volatile i32 0, i32* %5, align 4, !dbg !11271
  %10 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11271
  %11 = or i32 %10, 1, !dbg !11271
  store volatile i32 %11, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11271
  %12 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11271
  %13 = and i32 %12, 1, !dbg !11271
  store volatile i32 %13, i32* %5, align 4, !dbg !11271
  %14 = load volatile i32, i32* %5, align 4, !dbg !11271
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9), !dbg !11272
  %15 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11273
  store i32 256, i32* %15, align 4, !dbg !11274
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11275
  store i32 2, i32* %16, align 4, !dbg !11276
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11277
  store i32 3, i32* %17, align 4, !dbg !11278
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11279
  store i32 0, i32* %18, align 4, !dbg !11280
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11281
  store i32 0, i32* %19, align 4, !dbg !11282
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !11283
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11284
  %21 = and i32 %20, -123731969, !dbg !11284
  %22 = or i32 %2, %1, !dbg !11284
  %23 = or i32 %22, %21, !dbg !11284
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11284
  br label %24, !dbg !11285

24:                                               ; preds = %8, %3
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #25, !dbg !11286
  ret void, !dbg !11286
}

; Function Attrs: optsize
declare !dbg !11287 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11291 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11292
  ret void, !dbg !11293
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11294 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11295
  ret void, !dbg !11296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #7 !dbg !11297 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11298
  ret i32 %1, !dbg !11299
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !11300 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11301
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11302
  %3 = lshr i32 %2, 10, !dbg !11303
  %4 = and i32 %3, 7, !dbg !11303
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11304
  %6 = load i8, i8* %5, align 1, !dbg !11304
  %7 = zext i8 %6 to i32, !dbg !11304
  %8 = lshr i32 %1, %7, !dbg !11305
  ret i32 %8, !dbg !11306
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !11307 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11308
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11309
  %3 = lshr i32 %2, 13, !dbg !11310
  %4 = and i32 %3, 7, !dbg !11310
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11311
  %6 = load i8, i8* %5, align 1, !dbg !11311
  %7 = zext i8 %6 to i32, !dbg !11311
  %8 = lshr i32 %1, %7, !dbg !11312
  ret i32 %8, !dbg !11313
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11314 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11318, metadata !DIExpression()), !dbg !11319
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11320
  store i32 15, i32* %2, align 4, !dbg !11321
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11322
  %4 = and i32 %3, 262144, !dbg !11324
  %5 = icmp eq i32 %4, 0, !dbg !11325
  br i1 %5, label %8, label %6, !dbg !11326

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11327
  store i32 327680, i32* %7, align 4, !dbg !11329
  br label %15, !dbg !11330

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11331
  %10 = and i32 %9, 65536, !dbg !11333
  %11 = icmp eq i32 %10, 0, !dbg !11334
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11335
  br i1 %11, label %14, label %13, !dbg !11336

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11337
  br label %15, !dbg !11339

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11340
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11342
  %17 = and i32 %16, 1, !dbg !11344
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11345
  store i32 %17, i32* %18, align 4, !dbg !11347
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11348
  %20 = lshr i32 %19, 3, !dbg !11349
  %21 = and i32 %20, 31, !dbg !11349
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11350
  store i32 %21, i32* %22, align 4, !dbg !11351
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11352
  %24 = and i32 %23, 4, !dbg !11354
  %25 = icmp eq i32 %24, 0, !dbg !11355
  br i1 %25, label %28, label %26, !dbg !11356

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11357
  store i32 5, i32* %27, align 4, !dbg !11359
  br label %35, !dbg !11360

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11361
  %30 = and i32 %29, 1, !dbg !11363
  %31 = icmp eq i32 %30, 0, !dbg !11364
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11365
  br i1 %31, label %34, label %33, !dbg !11366

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11367
  br label %35, !dbg !11369

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11370
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11372
  %37 = and i32 %36, 1, !dbg !11374
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11375
  store i32 %37, i32* %38, align 4, !dbg !11377
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11378
  %40 = and i32 %39, 16777216, !dbg !11380
  %41 = icmp eq i32 %40, 0, !dbg !11381
  %42 = select i1 %41, i32 1, i32 2, !dbg !11382
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11383
  store i32 %42, i32* %43, align 4, !dbg !11385
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11386
  %45 = and i32 %44, 4194304, !dbg !11387
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11388
  store i32 %45, i32* %46, align 4, !dbg !11389
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11390
  %48 = and i32 %47, 63, !dbg !11391
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11392
  store i32 %48, i32* %49, align 4, !dbg !11393
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11394
  %51 = lshr i32 %50, 6, !dbg !11395
  %52 = and i32 %51, 511, !dbg !11395
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11396
  store i32 %52, i32* %53, align 4, !dbg !11397
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11398
  %55 = shl i32 %54, 1, !dbg !11399
  %56 = and i32 %55, 393216, !dbg !11399
  %57 = add nuw nsw i32 %56, 131072, !dbg !11399
  %58 = lshr exact i32 %57, 16, !dbg !11400
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11401
  store i32 %58, i32* %59, align 4, !dbg !11402
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11403
  %61 = lshr i32 %60, 24, !dbg !11404
  %62 = and i32 %61, 15, !dbg !11404
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11405
  store i32 %62, i32* %63, align 4, !dbg !11406
  ret void, !dbg !11407
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !11408 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11412, metadata !DIExpression()), !dbg !11414
  call void @llvm.dbg.value(metadata i32* %1, metadata !11413, metadata !DIExpression()), !dbg !11414
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11415
  store i32 15, i32* %3, align 4, !dbg !11416
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11417
  %5 = and i32 %4, 3, !dbg !11418
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11419
  store i32 %5, i32* %6, align 4, !dbg !11420
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11421
  %8 = and i32 %7, 240, !dbg !11422
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11423
  store i32 %8, i32* %9, align 4, !dbg !11424
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11425
  %11 = and i32 %10, 7168, !dbg !11426
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11427
  store i32 %11, i32* %12, align 4, !dbg !11428
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11429
  %14 = lshr i32 %13, 3, !dbg !11430
  %15 = and i32 %14, 7168, !dbg !11430
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11431
  store i32 %15, i32* %16, align 4, !dbg !11432
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11433
  %18 = and i32 %17, 7, !dbg !11434
  store i32 %18, i32* %1, align 4, !dbg !11435
  ret void, !dbg !11436
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11437 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11438
  %2 = and i32 %1, 128, !dbg !11438
  %3 = icmp eq i32 %2, 0, !dbg !11438
  br i1 %3, label %5, label %4, !dbg !11440

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !11441
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11443
  br label %5, !dbg !11444

5:                                                ; preds = %4, %0
  ret void, !dbg !11445
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11446 {
  ret void, !dbg !11447
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11448 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11451, metadata !DIExpression()), !dbg !11452
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !11453
  ret void, !dbg !11454
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11455 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11458, metadata !DIExpression()), !dbg !11460
  call void @llvm.dbg.value(metadata i32 1000, metadata !11459, metadata !DIExpression()), !dbg !11460
  %2 = udiv i32 %0, 1000, !dbg !11461
  %3 = add nsw i32 %2, -1, !dbg !11462
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11463
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11464
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11465
  ret void, !dbg !11466
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !11467 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11469, metadata !DIExpression()), !dbg !11471
  %3 = bitcast i32* %2 to i8*, !dbg !11472
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11472
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11470, metadata !DIExpression()), !dbg !11473
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11474
  store volatile i32 %4, i32* %2, align 4, !dbg !11473
  %5 = load volatile i32, i32* %2, align 4, !dbg !11475
  %6 = icmp eq i32 %0, -1, !dbg !11476
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11469, metadata !DIExpression()), !dbg !11471
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11471
  call void @llvm.dbg.value(metadata i32 %8, metadata !11469, metadata !DIExpression()), !dbg !11471
  br label %9, !dbg !11478

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11469, metadata !DIExpression()), !dbg !11471
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11479
  call void @llvm.dbg.value(metadata i32 undef, metadata !11469, metadata !DIExpression()), !dbg !11471
  %12 = shl i32 %11, 15, !dbg !11471
  %13 = ashr i32 %12, 31, !dbg !11471
  %14 = add i32 %13, %10, !dbg !11471
  call void @llvm.dbg.value(metadata i32 %14, metadata !11469, metadata !DIExpression()), !dbg !11471
  %15 = icmp eq i32 %14, 0, !dbg !11478
  br i1 %15, label %16, label %9, !dbg !11478

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11482
  ret void, !dbg !11482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #6 !dbg !11483 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11485, metadata !DIExpression()), !dbg !11486
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11487
  ret void, !dbg !11488
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !11489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11494, metadata !DIExpression()), !dbg !11499
  call void @llvm.dbg.value(metadata i32 0, metadata !11497, metadata !DIExpression()), !dbg !11499
  call void @llvm.dbg.value(metadata i32 0, metadata !11498, metadata !DIExpression()), !dbg !11499
  %2 = icmp eq i32 %0, 0, !dbg !11500
  br i1 %2, label %50, label %3, !dbg !11502

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11503
  %5 = icmp eq i32 %4, 49152, !dbg !11506
  br i1 %5, label %6, label %15, !dbg !11507

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !11497, metadata !DIExpression()), !dbg !11499
  %7 = add i32 %0, -64000001, !dbg !11508
  %8 = icmp ult i32 %7, 26000000, !dbg !11508
  br i1 %8, label %15, label %9, !dbg !11508

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !11511
  %11 = select i1 %10, i32 0, i32 3, !dbg !11513
  call void @llvm.dbg.value(metadata i32 %11, metadata !11497, metadata !DIExpression()), !dbg !11499
  %12 = add i32 %0, -30000001, !dbg !11514
  %13 = icmp ult i32 %12, 60000000, !dbg !11514
  %14 = select i1 %13, i32 1, i32 %11, !dbg !11514
  call void @llvm.dbg.value(metadata i32 %14, metadata !11497, metadata !DIExpression()), !dbg !11499
  br label %15, !dbg !11514

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !11499
  call void @llvm.dbg.value(metadata i32 %16, metadata !11497, metadata !DIExpression()), !dbg !11499
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11517
  %18 = icmp eq i32 %17, 32768, !dbg !11519
  br i1 %18, label %19, label %27, !dbg !11520

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !11521
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !11524
  br i1 %22, label %27, label %23, !dbg !11524

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !11525
  %25 = and i1 %24, %21, !dbg !11528
  %26 = select i1 %25, i32 1, i32 %16, !dbg !11528
  call void @llvm.dbg.value(metadata i32 %26, metadata !11497, metadata !DIExpression()), !dbg !11499
  br label %27, !dbg !11528

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !11529
  call void @llvm.dbg.value(metadata i32 %28, metadata !11497, metadata !DIExpression()), !dbg !11499
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11530
  %30 = icmp eq i32 %29, 16384, !dbg !11532
  br i1 %30, label %31, label %39, !dbg !11533

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !11534
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !11537
  br i1 %34, label %39, label %35, !dbg !11537

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !11538
  %37 = select i1 %36, i1 %33, i1 false, !dbg !11541
  %38 = select i1 %37, i32 1, i32 %28, !dbg !11541
  call void @llvm.dbg.value(metadata i32 %38, metadata !11497, metadata !DIExpression()), !dbg !11499
  br label %39, !dbg !11541

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !11529
  call void @llvm.dbg.value(metadata i32 %40, metadata !11497, metadata !DIExpression()), !dbg !11499
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #26, !dbg !11542
  call void @llvm.dbg.value(metadata i32 2, metadata !11495, metadata !DIExpression()), !dbg !11499
  br label %41, !dbg !11543

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !11529
  call void @llvm.dbg.value(metadata i32 %42, metadata !11495, metadata !DIExpression()), !dbg !11499
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !11544
  call void @llvm.dbg.value(metadata i32 %43, metadata !11496, metadata !DIExpression()), !dbg !11499
  %44 = add nsw i32 %42, -1, !dbg !11546
  call void @llvm.dbg.value(metadata i32 %44, metadata !11495, metadata !DIExpression()), !dbg !11499
  %45 = icmp ne i32 %43, %40, !dbg !11547
  %46 = icmp ne i32 %44, 0, !dbg !11548
  %47 = select i1 %45, i1 %46, i1 false, !dbg !11548
  br i1 %47, label %41, label %48, !dbg !11549, !llvm.loop !11550

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !11552
  call void @llvm.dbg.value(metadata i32 %51, metadata !11498, metadata !DIExpression()), !dbg !11499
  ret i32 %51, !dbg !11553
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !11554 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11556
  %2 = and i32 %1, 49152, !dbg !11556
  ret i32 %2, !dbg !11557
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !11558 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11560, metadata !DIExpression()), !dbg !11561
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11562
  %3 = and i32 %2, -8, !dbg !11562
  %4 = or i32 %3, %0, !dbg !11562
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11562
  ret void, !dbg !11563
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !11564 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11565
  %2 = and i32 %1, 7, !dbg !11565
  ret i32 %2, !dbg !11566
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !11567 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11585, metadata !DIExpression()), !dbg !11589
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11586, metadata !DIExpression()), !dbg !11589
  call void @llvm.dbg.value(metadata i32 0, metadata !11587, metadata !DIExpression()), !dbg !11589
  call void @llvm.dbg.value(metadata i32 0, metadata !11588, metadata !DIExpression()), !dbg !11589
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11590
  %4 = icmp eq i32 %3, 0, !dbg !11592
  br i1 %4, label %5, label %21, !dbg !11593

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !11594
  call void @llvm.dbg.value(metadata i32 %6, metadata !11588, metadata !DIExpression()), !dbg !11589
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.148() #26, !dbg !11596
  %8 = icmp eq i32 %7, 1, !dbg !11598
  br i1 %8, label %13, label %9, !dbg !11599

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.149() #26, !dbg !11600
  br label %10, !dbg !11602

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.148() #26, !dbg !11603
  %12 = icmp eq i32 %11, 1, !dbg !11604
  br i1 %12, label %13, label %10, !dbg !11602, !llvm.loop !11605

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !11607
  %15 = load i32, i32* %14, align 4, !dbg !11607
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !11608
  %17 = load i32, i32* %16, align 4, !dbg !11608
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !11609
  %19 = load i32, i32* %18, align 4, !dbg !11609
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.150(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !11610
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !11611
  call void @llvm.dbg.value(metadata i32 %20, metadata !11587, metadata !DIExpression()), !dbg !11589
  br label %21, !dbg !11612

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11613
  call void @llvm.dbg.value(metadata i32 %22, metadata !11587, metadata !DIExpression()), !dbg !11589
  ret i32 %22, !dbg !11614
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !11615 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11619, metadata !DIExpression()), !dbg !11620
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.152() #26, !dbg !11621
  %2 = icmp ne i32 %1, 0, !dbg !11623
  call void @llvm.dbg.value(metadata i1 %2, metadata !11619, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11620
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !11624
  %4 = icmp ne i32 %3, 0, !dbg !11626
  %5 = select i1 %4, i1 true, i1 %2, !dbg !11627
  %6 = zext i1 %5 to i32, !dbg !11627
  call void @llvm.dbg.value(metadata i32 %6, metadata !11619, metadata !DIExpression()), !dbg !11620
  ret i32 %6, !dbg !11628
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #7 !dbg !11629 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11633, metadata !DIExpression()), !dbg !11636
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11634, metadata !DIExpression()), !dbg !11636
  call void @llvm.dbg.value(metadata i32 0, metadata !11635, metadata !DIExpression()), !dbg !11636
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11637
  %4 = load i32, i32* %3, align 4, !dbg !11637
  %5 = and i32 %4, 63, !dbg !11638
  %6 = udiv i32 %0, %5, !dbg !11639
  call void @llvm.dbg.value(metadata i32 %6, metadata !11635, metadata !DIExpression()), !dbg !11636
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11640
  %8 = load i32, i32* %7, align 4, !dbg !11640
  %9 = and i32 %8, 511, !dbg !11641
  %10 = mul i32 %9, %6, !dbg !11642
  call void @llvm.dbg.value(metadata i32 %10, metadata !11635, metadata !DIExpression()), !dbg !11636
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11643
  %12 = load i32, i32* %11, align 4, !dbg !11643
  %13 = lshr i32 %12, 15, !dbg !11644
  %14 = and i32 %13, 131070, !dbg !11644
  %15 = add nuw nsw i32 %14, 2, !dbg !11644
  %16 = udiv i32 %10, %15, !dbg !11645
  call void @llvm.dbg.value(metadata i32 %16, metadata !11635, metadata !DIExpression()), !dbg !11636
  ret i32 %16, !dbg !11646
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.148() unnamed_addr #16 !dbg !11647 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11648
  %2 = lshr i32 %1, 1, !dbg !11649
  %3 = and i32 %2, 1, !dbg !11649
  ret i32 %3, !dbg !11650
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.149() unnamed_addr #15 !dbg !11651 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11652
  %2 = or i32 %1, 1, !dbg !11652
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11652
  ret void, !dbg !11653
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.150(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !11654 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11656, metadata !DIExpression()), !dbg !11660
  call void @llvm.dbg.value(metadata i32 %1, metadata !11657, metadata !DIExpression()), !dbg !11660
  call void @llvm.dbg.value(metadata i32 %2, metadata !11658, metadata !DIExpression()), !dbg !11660
  call void @llvm.dbg.value(metadata i32 %3, metadata !11659, metadata !DIExpression()), !dbg !11660
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11661
  %6 = and i32 %5, -4227072, !dbg !11661
  %7 = or i32 %1, %0, !dbg !11661
  %8 = shl i32 %2, 6, !dbg !11661
  %9 = or i32 %7, %8, !dbg !11661
  %10 = or i32 %9, %6, !dbg !11661
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11661
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11662
  %12 = and i32 %11, -196609, !dbg !11662
  %13 = or i32 %12, %3, !dbg !11662
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11662
  ret void, !dbg !11663
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !11664 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11668, metadata !DIExpression()), !dbg !11672
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11669, metadata !DIExpression()), !dbg !11672
  call void @llvm.dbg.value(metadata i32 0, metadata !11670, metadata !DIExpression()), !dbg !11672
  call void @llvm.dbg.value(metadata i32 0, metadata !11671, metadata !DIExpression()), !dbg !11672
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11673
  %4 = load i32, i32* %3, align 4, !dbg !11673
  %5 = lshr i32 %4, 4, !dbg !11673
  %6 = and i32 %5, 15, !dbg !11673
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !11673
  %8 = load i8, i8* %7, align 1, !dbg !11673
  %9 = zext i8 %8 to i32, !dbg !11673
  %10 = lshr i32 %0, %9, !dbg !11673
  call void @llvm.dbg.value(metadata i32 %10, metadata !11671, metadata !DIExpression()), !dbg !11672
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !11674
  %12 = icmp ult i32 %11, %10, !dbg !11676
  br i1 %12, label %13, label %16, !dbg !11677

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11678
  call void @llvm.dbg.value(metadata i32 %14, metadata !11670, metadata !DIExpression()), !dbg !11672
  %15 = icmp eq i32 %14, 0, !dbg !11680
  br i1 %15, label %16, label %30, !dbg !11682

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.151() #26, !dbg !11683
  br label %17, !dbg !11685

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.152() #26, !dbg !11686
  %19 = icmp eq i32 %18, 1, !dbg !11687
  br i1 %19, label %20, label %17, !dbg !11685, !llvm.loop !11688

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !11690
  tail call fastcc void @LL_RCC_SetAHBPrescaler.153(i32 noundef %21) #26, !dbg !11691
  tail call fastcc void @LL_RCC_SetSysClkSource.154() #26, !dbg !11692
  br label %22, !dbg !11693

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.155() #26, !dbg !11694
  %24 = icmp eq i32 %23, 8, !dbg !11695
  br i1 %24, label %25, label %22, !dbg !11693, !llvm.loop !11696

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11698
  %27 = load i32, i32* %26, align 4, !dbg !11698
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.156(i32 noundef %27) #26, !dbg !11699
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11700
  %29 = load i32, i32* %28, align 4, !dbg !11700
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.157(i32 noundef %29) #26, !dbg !11701
  br label %30, !dbg !11702

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !11703
  %33 = icmp ugt i32 %32, %10, !dbg !11705
  br i1 %33, label %34, label %36, !dbg !11706

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11707
  call void @llvm.dbg.value(metadata i32 %35, metadata !11670, metadata !DIExpression()), !dbg !11672
  br label %36, !dbg !11709

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !11672
  call void @llvm.dbg.value(metadata i32 %37, metadata !11670, metadata !DIExpression()), !dbg !11672
  %38 = icmp eq i32 %37, 0, !dbg !11710
  br i1 %38, label %39, label %40, !dbg !11712

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !11713
  br label %40, !dbg !11715

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !11716
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.151() unnamed_addr #15 !dbg !11717 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11718
  %2 = or i32 %1, 16777216, !dbg !11718
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11718
  ret void, !dbg !11719
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.152() unnamed_addr #16 !dbg !11720 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11721
  %2 = lshr i32 %1, 25, !dbg !11722
  %3 = and i32 %2, 1, !dbg !11722
  ret i32 %3, !dbg !11723
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.153(i32 noundef %0) unnamed_addr #15 !dbg !11724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11726, metadata !DIExpression()), !dbg !11727
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11728
  %3 = and i32 %2, -241, !dbg !11728
  %4 = or i32 %3, %0, !dbg !11728
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11728
  ret void, !dbg !11729
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.154() unnamed_addr #15 !dbg !11730 {
  call void @llvm.dbg.value(metadata i32 2, metadata !11732, metadata !DIExpression()), !dbg !11733
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11734
  %2 = and i32 %1, -4, !dbg !11734
  %3 = or i32 %2, 2, !dbg !11734
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11734
  ret void, !dbg !11735
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.155() unnamed_addr #16 !dbg !11736 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11737
  %2 = and i32 %1, 12, !dbg !11737
  ret i32 %2, !dbg !11738
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.156(i32 noundef %0) unnamed_addr #15 !dbg !11739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11741, metadata !DIExpression()), !dbg !11742
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11743
  %3 = and i32 %2, -7169, !dbg !11743
  %4 = or i32 %3, %0, !dbg !11743
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11743
  ret void, !dbg !11744
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.157(i32 noundef %0) unnamed_addr #15 !dbg !11745 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11747, metadata !DIExpression()), !dbg !11748
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11749
  %3 = and i32 %2, -57345, !dbg !11749
  %4 = or i32 %3, %0, !dbg !11749
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11749
  ret void, !dbg !11750
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !11751 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11752
  %2 = lshr i32 %1, 27, !dbg !11753
  %3 = and i32 %2, 1, !dbg !11753
  ret i32 %3, !dbg !11754
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !11755 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11759, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.value(metadata i32 %1, metadata !11760, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !11761, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !11762, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.value(metadata i32 0, metadata !11763, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.value(metadata i32 0, metadata !11764, metadata !DIExpression()), !dbg !11765
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11766
  %6 = icmp eq i32 %5, 0, !dbg !11768
  br i1 %6, label %7, label %27, !dbg !11769

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !11770
  call void @llvm.dbg.value(metadata i32 %8, metadata !11764, metadata !DIExpression()), !dbg !11765
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.158() #26, !dbg !11772
  %10 = icmp eq i32 %9, 1, !dbg !11774
  br i1 %10, label %19, label %11, !dbg !11775

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !11776
  br i1 %12, label %13, label %14, !dbg !11779

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !11780
  br label %15, !dbg !11782

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.159() #26, !dbg !11783
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.160() #26, !dbg !11785
  br label %16, !dbg !11786

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.158() #26, !dbg !11787
  %18 = icmp eq i32 %17, 1, !dbg !11788
  br i1 %18, label %19, label %16, !dbg !11786, !llvm.loop !11789

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !11791
  %21 = load i32, i32* %20, align 4, !dbg !11791
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !11792
  %23 = load i32, i32* %22, align 4, !dbg !11792
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !11793
  %25 = load i32, i32* %24, align 4, !dbg !11793
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.150(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !11794
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !11795
  call void @llvm.dbg.value(metadata i32 %26, metadata !11763, metadata !DIExpression()), !dbg !11765
  br label %27, !dbg !11796

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !11797
  call void @llvm.dbg.value(metadata i32 %28, metadata !11763, metadata !DIExpression()), !dbg !11765
  ret i32 %28, !dbg !11798
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.158() unnamed_addr #16 !dbg !11799 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11800
  %2 = lshr i32 %1, 17, !dbg !11801
  %3 = and i32 %2, 1, !dbg !11801
  ret i32 %3, !dbg !11802
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !11803 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11804
  %2 = or i32 %1, 262144, !dbg !11804
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11804
  ret void, !dbg !11805
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.159() unnamed_addr #15 !dbg !11806 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11807
  %2 = and i32 %1, -262145, !dbg !11807
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11807
  ret void, !dbg !11808
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.160() unnamed_addr #15 !dbg !11809 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11810
  %2 = or i32 %1, 65536, !dbg !11810
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11810
  ret void, !dbg !11811
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !11812 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11815, metadata !DIExpression()), !dbg !11831
  call void @llvm.dbg.value(metadata i32 undef, metadata !11815, metadata !DIExpression()), !dbg !11831
  call void @llvm.dbg.value(metadata i32 undef, metadata !11815, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11831
  ret void, !dbg !11832
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11833 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11837, metadata !DIExpression()), !dbg !11839
  %2 = icmp eq i8* %0, null, !dbg !11840
  br i1 %2, label %29, label %3, !dbg !11842

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11843
  %5 = icmp eq i8 %4, 0, !dbg !11844
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11845
  br i1 %6, label %29, label %8, !dbg !11845

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11838, metadata !DIExpression()), !dbg !11839
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11846

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11838, metadata !DIExpression()), !dbg !11839
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !11848
  br i1 %10, label %11, label %15, !dbg !11853

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11854
  %13 = load i8*, i8** %12, align 4, !dbg !11854
  %14 = icmp eq i8* %13, %0, !dbg !11855
  br i1 %14, label %29, label %15, !dbg !11856

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11857
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11838, metadata !DIExpression()), !dbg !11839
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11858
  br i1 %17, label %7, label %8, !dbg !11859, !llvm.loop !11860

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11838, metadata !DIExpression()), !dbg !11839
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !11862
  br i1 %20, label %21, label %26, !dbg !11866

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11867
  %23 = load i8*, i8** %22, align 4, !dbg !11867
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !11868
  %25 = icmp eq i32 %24, 0, !dbg !11869
  br i1 %25, label %29, label %26, !dbg !11870

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11871
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11838, metadata !DIExpression()), !dbg !11839
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11872
  br i1 %28, label %29, label %18, !dbg !11846, !llvm.loop !11873

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11839
  ret %struct.device* %30, !dbg !11875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #7 !dbg !11876 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11880, metadata !DIExpression()), !dbg !11881
  %2 = icmp eq %struct.device* %0, null, !dbg !11882
  br i1 %2, label %14, label %3, !dbg !11884

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11885
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11885
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11886
  %7 = load i8, i8* %6, align 1, !dbg !11886
  %8 = and i8 %7, 1, !dbg !11886
  %9 = icmp eq i8 %8, 0, !dbg !11886
  br i1 %9, label %14, label %10, !dbg !11887

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11888
  %12 = load i8, i8* %11, align 1, !dbg !11888
  %13 = icmp eq i8 %12, 0, !dbg !11889
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11881
  ret i1 %15, !dbg !11890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #6 !dbg !11891 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11896, metadata !DIExpression()), !dbg !11897
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11898
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11899
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11900 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11908, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11909, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata i8* %2, metadata !11910, metadata !DIExpression()), !dbg !11913
  %5 = bitcast i32* %4 to i8*, !dbg !11914
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11914
  call void @llvm.dbg.value(metadata i32 0, metadata !11911, metadata !DIExpression()), !dbg !11913
  store i32 0, i32* %4, align 4, !dbg !11915
  call void @llvm.dbg.value(metadata i32* %4, metadata !11911, metadata !DIExpression(DW_OP_deref)), !dbg !11913
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11916
  call void @llvm.dbg.value(metadata i16* %6, metadata !11912, metadata !DIExpression()), !dbg !11913
  %7 = load i32, i32* %4, align 4, !dbg !11917
  call void @llvm.dbg.value(metadata i32 %7, metadata !11911, metadata !DIExpression()), !dbg !11913
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !11918
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11919
  ret i32 %8, !dbg !11920
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !11921 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11925, metadata !DIExpression()), !dbg !11931
  call void @llvm.dbg.value(metadata i32* %1, metadata !11926, metadata !DIExpression()), !dbg !11931
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11932
  %4 = load i16*, i16** %3, align 4, !dbg !11932
  call void @llvm.dbg.value(metadata i16* %4, metadata !11927, metadata !DIExpression()), !dbg !11931
  %5 = icmp eq i16* %4, null, !dbg !11933
  br i1 %5, label %14, label %6, !dbg !11934

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11935
  call void @llvm.dbg.value(metadata i32 %7, metadata !11928, metadata !DIExpression()), !dbg !11935
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11936
  %9 = load i16, i16* %8, align 2, !dbg !11936
  %10 = add i16 %9, -32767, !dbg !11937
  %11 = icmp ult i16 %10, 2, !dbg !11937
  %12 = add i32 %7, 1, !dbg !11938
  call void @llvm.dbg.value(metadata i32 %12, metadata !11928, metadata !DIExpression()), !dbg !11935
  br i1 %11, label %13, label %6, !dbg !11937, !llvm.loop !11940

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11943
  br label %14, !dbg !11944

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11945
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11946 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11950, metadata !DIExpression()), !dbg !11961
  call void @llvm.dbg.value(metadata i32 %1, metadata !11951, metadata !DIExpression()), !dbg !11961
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11952, metadata !DIExpression()), !dbg !11961
  call void @llvm.dbg.value(metadata i8* %3, metadata !11953, metadata !DIExpression()), !dbg !11961
  call void @llvm.dbg.value(metadata i32 0, metadata !11954, metadata !DIExpression()), !dbg !11962
  %5 = icmp eq i32 %1, 0, !dbg !11963
  br i1 %5, label %16, label %8, !dbg !11964

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11954, metadata !DIExpression()), !dbg !11962
  %7 = icmp eq i32 %15, %1, !dbg !11963
  br i1 %7, label %16, label %8, !dbg !11964, !llvm.loop !11965

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11954, metadata !DIExpression()), !dbg !11962
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11967
  %11 = load i16, i16* %10, align 2, !dbg !11967
  call void @llvm.dbg.value(metadata i16 %11, metadata !11956, metadata !DIExpression()), !dbg !11968
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !11969
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11959, metadata !DIExpression()), !dbg !11968
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !11970
  call void @llvm.dbg.value(metadata i32 %13, metadata !11960, metadata !DIExpression()), !dbg !11968
  %14 = icmp slt i32 %13, 0, !dbg !11971
  %15 = add nuw i32 %9, 1, !dbg !11973
  call void @llvm.dbg.value(metadata i32 %15, metadata !11954, metadata !DIExpression()), !dbg !11962
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !11975 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11979, metadata !DIExpression()), !dbg !11982
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11980, metadata !DIExpression()), !dbg !11982
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11981, metadata !DIExpression()), !dbg !11982
  %2 = sext i16 %0 to i32, !dbg !11983
  %3 = icmp slt i16 %0, 1, !dbg !11985
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11986
  %6 = add nsw i32 %2, -1, !dbg !11986
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11986
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11986
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11980, metadata !DIExpression()), !dbg !11982
  ret %struct.device* %8, !dbg !11987
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11988 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11990, metadata !DIExpression()), !dbg !11995
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11991, metadata !DIExpression()), !dbg !11995
  call void @llvm.dbg.value(metadata i8* %2, metadata !11992, metadata !DIExpression()), !dbg !11995
  %5 = bitcast i32* %4 to i8*, !dbg !11996
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11996
  call void @llvm.dbg.value(metadata i32 0, metadata !11993, metadata !DIExpression()), !dbg !11995
  store i32 0, i32* %4, align 4, !dbg !11997
  call void @llvm.dbg.value(metadata i32* %4, metadata !11993, metadata !DIExpression(DW_OP_deref)), !dbg !11995
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11998
  call void @llvm.dbg.value(metadata i16* %6, metadata !11994, metadata !DIExpression()), !dbg !11995
  %7 = load i32, i32* %4, align 4, !dbg !11999
  call void @llvm.dbg.value(metadata i32 %7, metadata !11993, metadata !DIExpression()), !dbg !11995
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !12000
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12001
  ret i32 %8, !dbg !12002
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12003 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12005, metadata !DIExpression()), !dbg !12010
  call void @llvm.dbg.value(metadata i32* %1, metadata !12006, metadata !DIExpression()), !dbg !12010
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12011
  %4 = load i16*, i16** %3, align 4, !dbg !12011
  call void @llvm.dbg.value(metadata i16* %4, metadata !12007, metadata !DIExpression()), !dbg !12010
  call void @llvm.dbg.value(metadata i32 0, metadata !12008, metadata !DIExpression()), !dbg !12010
  call void @llvm.dbg.value(metadata i32 0, metadata !12009, metadata !DIExpression()), !dbg !12010
  %5 = icmp eq i16* %4, null, !dbg !12012
  br i1 %5, label %22, label %6, !dbg !12014

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12008, metadata !DIExpression()), !dbg !12010
  call void @llvm.dbg.value(metadata i16* %8, metadata !12007, metadata !DIExpression()), !dbg !12010
  %9 = load i16, i16* %8, align 2, !dbg !12015
  %10 = icmp eq i16 %9, -32768, !dbg !12019
  call void @llvm.dbg.value(metadata i32 undef, metadata !12008, metadata !DIExpression()), !dbg !12010
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12020
  call void @llvm.dbg.value(metadata i16* %11, metadata !12007, metadata !DIExpression()), !dbg !12010
  %12 = zext i1 %10 to i32, !dbg !12021
  %13 = add i32 %7, %12, !dbg !12021
  call void @llvm.dbg.value(metadata i32 %13, metadata !12008, metadata !DIExpression()), !dbg !12010
  %14 = icmp eq i32 %13, 2, !dbg !12022
  br i1 %14, label %15, label %6, !dbg !12023

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12010
  call void @llvm.dbg.value(metadata i32 %16, metadata !12009, metadata !DIExpression()), !dbg !12010
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12024
  %18 = load i16, i16* %17, align 2, !dbg !12024
  %19 = icmp eq i16 %18, 32767, !dbg !12025
  %20 = add i32 %16, 1, !dbg !12026
  call void @llvm.dbg.value(metadata i32 %20, metadata !12009, metadata !DIExpression()), !dbg !12010
  br i1 %19, label %21, label %15, !dbg !12028, !llvm.loop !12029

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12031
  br label %22, !dbg !12032

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12033
  call void @llvm.dbg.value(metadata i16* %23, metadata !12007, metadata !DIExpression()), !dbg !12010
  ret i16* %23, !dbg !12034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #7 !dbg !12035 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12038
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12039
  ret i32* %2, !dbg !12040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !12041 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12191, metadata !DIExpression()), !dbg !12194
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12192, metadata !DIExpression()), !dbg !12194
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12193, metadata !DIExpression()), !dbg !12194
  ret void, !dbg !12195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12200, metadata !DIExpression()), !dbg !12202
  call void @llvm.dbg.value(metadata i32 %1, metadata !12201, metadata !DIExpression()), !dbg !12202
  ret void, !dbg !12203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12204 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12208, metadata !DIExpression()), !dbg !12210
  call void @llvm.dbg.value(metadata i32 %1, metadata !12209, metadata !DIExpression()), !dbg !12210
  ret void, !dbg !12211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12212 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12216, metadata !DIExpression()), !dbg !12218
  call void @llvm.dbg.value(metadata i8* %1, metadata !12217, metadata !DIExpression()), !dbg !12218
  ret i32 -134, !dbg !12219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12224, metadata !DIExpression()), !dbg !12226
  call void @llvm.dbg.value(metadata i8* %1, metadata !12225, metadata !DIExpression()), !dbg !12226
  ret i32 -134, !dbg !12227
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #5 !dbg !12228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12231, metadata !DIExpression()), !dbg !12232
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12233, !srcloc !12239
  call void @llvm.dbg.value(metadata i32 undef, metadata !12236, metadata !DIExpression()) #25, !dbg !12240
  call void @llvm.dbg.value(metadata i32 undef, metadata !12237, metadata !DIExpression()) #25, !dbg !12240
  br label %3, !dbg !12241

3:                                                ; preds = %3, %1
  br label %3, !dbg !12242, !llvm.loop !12245
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12248 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12252, metadata !DIExpression()), !dbg !12254
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12253, metadata !DIExpression()), !dbg !12254
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12255
  unreachable, !dbg !12255
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #5 !dbg !12256 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12258, metadata !DIExpression()), !dbg !12259
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12260
  unreachable, !dbg !12260
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12263, metadata !DIExpression()), !dbg !12267
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12264, metadata !DIExpression()), !dbg !12267
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12268, !srcloc !12239
  call void @llvm.dbg.value(metadata i32 undef, metadata !12236, metadata !DIExpression()) #25, !dbg !12270
  call void @llvm.dbg.value(metadata i32 undef, metadata !12237, metadata !DIExpression()) #25, !dbg !12270
  call void @llvm.dbg.value(metadata i32 undef, metadata !12265, metadata !DIExpression()), !dbg !12267
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12266, metadata !DIExpression()), !dbg !12267
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !12271
  %4 = icmp eq i32 %0, 4, !dbg !12272
  br i1 %4, label %5, label %6, !dbg !12277

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.168, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 148) #27, !dbg !12278
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3.170, i32 0, i32 0)) #27, !dbg !12278
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 148) #27, !dbg !12278
  unreachable, !dbg !12278

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !12268
  call void @llvm.dbg.value(metadata i32 %7, metadata !12236, metadata !DIExpression()) #25, !dbg !12270
  call void @llvm.dbg.value(metadata i32 %7, metadata !12265, metadata !DIExpression()), !dbg !12267
  %8 = tail call fastcc %struct.k_thread* @k_current_get.171() #28, !dbg !12280
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !12266, metadata !DIExpression()), !dbg !12267
  call void @llvm.dbg.value(metadata i32 undef, metadata !12281, metadata !DIExpression()) #25, !dbg !12284
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #25, !dbg !12286, !srcloc !12287
  tail call fastcc void @k_thread_abort.172(%struct.k_thread* noundef %8) #26, !dbg !12288
  ret void, !dbg !12291
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.171() unnamed_addr #10 !dbg !12292 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.173() #28, !dbg !12296
  ret %struct.k_thread* %1, !dbg !12297
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.172(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12298 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12302, metadata !DIExpression()), !dbg !12303
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12304, !srcloc !12306
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !12307
  ret void, !dbg !12308
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.173() unnamed_addr #10 !dbg !12309 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12310, !srcloc !12312
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !12313
  ret %struct.k_thread* %1, !dbg !12314
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12315 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12319, metadata !DIExpression()), !dbg !12322
  call void @llvm.dbg.value(metadata i32 %1, metadata !12320, metadata !DIExpression()), !dbg !12322
  call void @llvm.dbg.value(metadata i32 %2, metadata !12321, metadata !DIExpression()), !dbg !12322
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !12323
  ret void, !dbg !12324
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12325 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12329, metadata !DIExpression()), !dbg !12332
  call void @llvm.dbg.value(metadata i8* %1, metadata !12330, metadata !DIExpression()), !dbg !12332
  call void @llvm.dbg.value(metadata i32 %2, metadata !12331, metadata !DIExpression()), !dbg !12332
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !12333
  ret void, !dbg !12334
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12335 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !12336
  ret void, !dbg !12337
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12340, metadata !DIExpression()), !dbg !12341
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !12342
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12343
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12344
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12345
  %4 = trunc i32 %0 to i8, !dbg !12346
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12347
  store i8 %4, i8* %5, align 4, !dbg !12348
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12349
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !12350
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12351
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12352
  store i8* %8, i8** %9, align 4, !dbg !12353
  ret void, !dbg !12354
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12355 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12357, metadata !DIExpression()), !dbg !12363
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12364
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12358, metadata !DIExpression()), !dbg !12363
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12365
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12359, metadata !DIExpression()), !dbg !12363
  call void @llvm.dbg.value(metadata i8* null, metadata !12362, metadata !DIExpression()), !dbg !12363
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12366
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12367
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !12368
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !12369
  ret void, !dbg !12370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !12371 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12375, metadata !DIExpression()), !dbg !12376
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12377
  ret i8* %2, !dbg !12378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !12379 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12384, metadata !DIExpression()), !dbg !12385
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12386
  %3 = load i8, i8* %2, align 1, !dbg !12387
  %4 = and i8 %3, -5, !dbg !12387
  store i8 %4, i8* %2, align 1, !dbg !12387
  ret void, !dbg !12388
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #5 !dbg !12389 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !12392
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !12393
  %3 = ptrtoint i8* %2 to i32, !dbg !12402
  %4 = add i32 %3, 2048, !dbg !12403
  call void @llvm.dbg.value(metadata i32 %4, metadata !12397, metadata !DIExpression()) #25, !dbg !12404
  call void @llvm.dbg.value(metadata i32 %4, metadata !12405, metadata !DIExpression()) #25, !dbg !12408
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !12410, !srcloc !12411
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12412
  %6 = or i32 %5, 512, !dbg !12412
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12412
  tail call fastcc void @__NVIC_SetPriority.180(i32 noundef -2, i32 noundef 255) #27, !dbg !12413
  tail call fastcc void @__NVIC_SetPriority.180(i32 noundef -5, i32 noundef 0) #27, !dbg !12416
  tail call fastcc void @__NVIC_SetPriority.180(i32 noundef -12, i32 noundef 0) #27, !dbg !12417
  tail call fastcc void @__NVIC_SetPriority.180(i32 noundef -11, i32 noundef 0) #27, !dbg !12418
  tail call fastcc void @__NVIC_SetPriority.180(i32 noundef -10, i32 noundef 0) #27, !dbg !12419
  tail call fastcc void @__NVIC_SetPriority.180(i32 noundef -4, i32 noundef 0) #27, !dbg !12420
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12421
  %8 = or i32 %7, 458752, !dbg !12421
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12421
  tail call void @z_arm_fault_init() #27, !dbg !12422
  tail call void @z_arm_cpu_idle_init() #27, !dbg !12423
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12424
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12427
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !12428
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !12429
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12430
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !12430
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12391, metadata !DIExpression()), !dbg !12431
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !12432
  call void @z_device_state_init() #27, !dbg !12433
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !12434
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !12435
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !12436
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !12437
  unreachable, !dbg !12437
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2153, metadata !DIExpression()), !dbg !12438
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12439
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12439
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2154, metadata !DIExpression()), !dbg !12438
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2154, metadata !DIExpression()), !dbg !12438
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12440
  br i1 %7, label %8, label %35, !dbg !12441

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2154, metadata !DIExpression()), !dbg !12438
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12442
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12442
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2164, metadata !DIExpression()), !dbg !12443
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12444
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12444
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !12445
  call void @llvm.dbg.value(metadata i32 %14, metadata !2168, metadata !DIExpression()), !dbg !12443
  %15 = icmp eq %struct.device* %11, null, !dbg !12446
  br i1 %15, label %32, label %16, !dbg !12448

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12449
  br i1 %17, label %26, label %18, !dbg !12452

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12453
  call void @llvm.dbg.value(metadata i32 %19, metadata !2168, metadata !DIExpression()), !dbg !12443
  %20 = icmp ult i32 %19, 255, !dbg !12455
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12455
  call void @llvm.dbg.value(metadata i32 %21, metadata !2168, metadata !DIExpression()), !dbg !12443
  %22 = trunc i32 %21 to i8, !dbg !12456
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12457
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12457
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12458
  store i8 %22, i8* %25, align 1, !dbg !12459
  br label %26, !dbg !12460

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12461
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12461
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12462
  %30 = load i8, i8* %29, align 1, !dbg !12463
  %31 = or i8 %30, 1, !dbg !12463
  store i8 %31, i8* %29, align 1, !dbg !12463
  br label %32, !dbg !12464

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12465
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2154, metadata !DIExpression()), !dbg !12438
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12440
  br i1 %34, label %8, label %35, !dbg !12441, !llvm.loop !12466

35:                                               ; preds = %32, %1
  ret void, !dbg !12468
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.180(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12469 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12471, metadata !DIExpression()), !dbg !12473
  call void @llvm.dbg.value(metadata i32 %1, metadata !12472, metadata !DIExpression()), !dbg !12473
  %3 = trunc i32 %1 to i8, !dbg !12474
  %4 = shl i8 %3, 4, !dbg !12474
  %5 = and i32 %0, 15, !dbg !12477
  %6 = add nsw i32 %5, -4, !dbg !12478
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12479
  store volatile i8 %4, i8* %7, align 1, !dbg !12480
  ret void, !dbg !12481
}

; Function Attrs: optsize
declare !dbg !12482 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12483 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12486, metadata !DIExpression()), !dbg !12487
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12488
  store i8 1, i8* %2, align 1, !dbg !12489
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12490
  store i8 1, i8* %3, align 4, !dbg !12491
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12492
  store i32 0, i32* %4, align 4, !dbg !12493
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12494
  store i32 0, i32* %5, align 4, !dbg !12495
  tail call void @k_thread_system_pool_assign(%struct.k_thread* noundef %0) #27, !dbg !12496
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12497
  ret void, !dbg !12498
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12499 {
  tail call void @z_sched_init() #27, !dbg !12504
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12505
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.181, i32 0, i32 0)) #27, !dbg !12506
  call void @llvm.dbg.value(metadata i8* %1, metadata !12503, metadata !DIExpression()), !dbg !12507
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12508
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !12509
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !12510
  ret i8* %1, !dbg !12511
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #5 !dbg !12512 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12516, metadata !DIExpression()), !dbg !12517
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !12518
  unreachable, !dbg !12519
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12520 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12522, metadata !DIExpression()), !dbg !12525
  call void @llvm.dbg.value(metadata i8* %1, metadata !12523, metadata !DIExpression()), !dbg !12525
  call void @llvm.dbg.value(metadata i8* %2, metadata !12524, metadata !DIExpression()), !dbg !12525
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12526
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !12527
  tail call void @boot_banner() #27, !dbg !12528
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !12529
  tail call void @z_init_static_threads() #27, !dbg !12530
  tail call void @main() #27, !dbg !12531
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12532
  %5 = and i8 %4, -2, !dbg !12532
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12532
  ret void, !dbg !12533
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !12534 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12544, metadata !DIExpression()), !dbg !12546
  call void @llvm.dbg.value(metadata i8* %1, metadata !12545, metadata !DIExpression()), !dbg !12546
  ret void, !dbg !12547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !12548 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12550, metadata !DIExpression()), !dbg !12552
  call void @llvm.dbg.value(metadata i8* %1, metadata !12551, metadata !DIExpression()), !dbg !12552
  ret void, !dbg !12553
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12554 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !12555, !srcloc !12562
  call void @llvm.dbg.value(metadata i32 %1, metadata !12558, metadata !DIExpression()) #25, !dbg !12563
  %2 = icmp ne i32 %1, 0, !dbg !12564
  ret i1 %2, !dbg !12565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !12566 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12567
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12568
  %3 = load i8, i8* %2, align 4, !dbg !12569
  %4 = or i8 %3, 1, !dbg !12569
  store i8 %4, i8* %2, align 4, !dbg !12569
  ret void, !dbg !12570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !12571 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12572
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12573
  %3 = load i8, i8* %2, align 4, !dbg !12574
  %4 = and i8 %3, -2, !dbg !12574
  store i8 %4, i8* %2, align 4, !dbg !12574
  ret void, !dbg !12575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #7 !dbg !12576 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12577
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12578
  %3 = load i8, i8* %2, align 4, !dbg !12578
  %4 = and i8 %3, 1, !dbg !12579
  %5 = icmp ne i8 %4, 0, !dbg !12580
  ret i1 %5, !dbg !12581
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12582 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12586, metadata !DIExpression()), !dbg !12588
  call void @llvm.dbg.value(metadata i8* %1, metadata !12587, metadata !DIExpression()), !dbg !12588
  ret i32 -88, !dbg !12589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !12590 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12594, metadata !DIExpression()), !dbg !12595
  ret i8* null, !dbg !12596
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #4 !dbg !12597 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12601, metadata !DIExpression()), !dbg !12604
  call void @llvm.dbg.value(metadata i8* %1, metadata !12602, metadata !DIExpression()), !dbg !12604
  call void @llvm.dbg.value(metadata i32 %2, metadata !12603, metadata !DIExpression()), !dbg !12604
  ret i32 -88, !dbg !12605
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2175 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2291, metadata !DIExpression()), !dbg !12606
  call void @llvm.dbg.value(metadata i8* %1, metadata !2292, metadata !DIExpression()), !dbg !12606
  call void @llvm.dbg.value(metadata i32 %2, metadata !2293, metadata !DIExpression()), !dbg !12606
  call void @llvm.dbg.value(metadata i32 0, metadata !2294, metadata !DIExpression()), !dbg !12606
  call void @llvm.dbg.value(metadata i8 undef, metadata !2296, metadata !DIExpression()), !dbg !12606
  %4 = icmp eq i8* %1, null, !dbg !12607
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !12609
  br i1 %6, label %46, label %7, !dbg !12609

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12610
  %9 = load i8, i8* %8, align 1, !dbg !12610
  call void @llvm.dbg.value(metadata i8 %9, metadata !2296, metadata !DIExpression()), !dbg !12606
  %10 = add i32 %2, -1, !dbg !12611
  call void @llvm.dbg.value(metadata i32 %10, metadata !2293, metadata !DIExpression()), !dbg !12606
  call void @llvm.dbg.value(metadata i8 0, metadata !2297, metadata !DIExpression()), !dbg !12612
  call void @llvm.dbg.value(metadata i8 %9, metadata !2296, metadata !DIExpression()), !dbg !12606
  call void @llvm.dbg.value(metadata i32 0, metadata !2294, metadata !DIExpression()), !dbg !12606
  %11 = icmp eq i8 %9, 0, !dbg !12613
  br i1 %11, label %12, label %15, !dbg !12615

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !12616
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !12617
  store i8 0, i8* %14, align 1, !dbg !12618
  br label %46, !dbg !12619

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2297, metadata !DIExpression()), !dbg !12612
  call void @llvm.dbg.value(metadata i8 %17, metadata !2296, metadata !DIExpression()), !dbg !12606
  call void @llvm.dbg.value(metadata i32 %18, metadata !2294, metadata !DIExpression()), !dbg !12606
  %19 = zext i8 %17 to i32, !dbg !12620
  %20 = zext i8 %16 to i32, !dbg !12621
  %21 = shl nuw i32 1, %20, !dbg !12621
  call void @llvm.dbg.value(metadata i32 %21, metadata !2295, metadata !DIExpression()), !dbg !12606
  %22 = and i32 %21, %19, !dbg !12623
  %23 = icmp eq i32 %22, 0, !dbg !12625
  br i1 %23, label %42, label %24, !dbg !12626

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !12627
  %26 = sub i32 %10, %18, !dbg !12628
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !12629
  %28 = load i8*, i8** %27, align 4, !dbg !12629
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !12630
  %30 = load i32, i32* %29, align 4, !dbg !12630
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !12631
  %32 = add i32 %31, %18, !dbg !12632
  call void @llvm.dbg.value(metadata i32 %32, metadata !2294, metadata !DIExpression()), !dbg !12606
  %33 = trunc i32 %21 to i8, !dbg !12633
  %34 = xor i8 %33, -1, !dbg !12633
  %35 = and i8 %17, %34, !dbg !12633
  call void @llvm.dbg.value(metadata i8 %35, metadata !2296, metadata !DIExpression()), !dbg !12606
  %36 = icmp eq i8 %35, 0, !dbg !12634
  br i1 %36, label %12, label %37, !dbg !12636

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !12637
  %39 = sub i32 %10, %32, !dbg !12639
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.182, i32 0, i32 0), i32 noundef 1) #26, !dbg !12640
  %41 = add i32 %40, %32, !dbg !12641
  call void @llvm.dbg.value(metadata i32 %41, metadata !2294, metadata !DIExpression()), !dbg !12606
  br label %42, !dbg !12642

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !12606
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !12606
  call void @llvm.dbg.value(metadata i8 %44, metadata !2296, metadata !DIExpression()), !dbg !12606
  call void @llvm.dbg.value(metadata i32 %43, metadata !2294, metadata !DIExpression()), !dbg !12606
  %45 = add i8 %16, 1, !dbg !12643
  call void @llvm.dbg.value(metadata i8 %45, metadata !2297, metadata !DIExpression()), !dbg !12612
  br label %15, !dbg !12615

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.183, i32 0, i32 0), %3 ], !dbg !12606
  ret i8* %47, !dbg !12644
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12645 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12649, metadata !DIExpression()), !dbg !12654
  call void @llvm.dbg.value(metadata i32 %1, metadata !12650, metadata !DIExpression()), !dbg !12654
  call void @llvm.dbg.value(metadata i8* %2, metadata !12651, metadata !DIExpression()), !dbg !12654
  call void @llvm.dbg.value(metadata i32 %3, metadata !12652, metadata !DIExpression()), !dbg !12654
  %5 = icmp ult i32 %1, %3, !dbg !12655
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !12655
  call void @llvm.dbg.value(metadata i32 %6, metadata !12653, metadata !DIExpression()), !dbg !12654
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !12656
  ret i32 %6, !dbg !12657
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12658 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12662, metadata !DIExpression()), !dbg !12663
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !12664
  ret void, !dbg !12665
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !12666 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12675, metadata !DIExpression()), !dbg !12686
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12676, metadata !DIExpression()), !dbg !12686
  call void @llvm.dbg.value(metadata i32 %2, metadata !12677, metadata !DIExpression()), !dbg !12686
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12678, metadata !DIExpression()), !dbg !12686
  call void @llvm.dbg.value(metadata i8* %4, metadata !12679, metadata !DIExpression()), !dbg !12686
  call void @llvm.dbg.value(metadata i8* %5, metadata !12680, metadata !DIExpression()), !dbg !12686
  call void @llvm.dbg.value(metadata i8* %6, metadata !12681, metadata !DIExpression()), !dbg !12686
  call void @llvm.dbg.value(metadata i32 %7, metadata !12682, metadata !DIExpression()), !dbg !12686
  call void @llvm.dbg.value(metadata i32 %8, metadata !12683, metadata !DIExpression()), !dbg !12686
  call void @llvm.dbg.value(metadata i8* undef, metadata !12684, metadata !DIExpression()), !dbg !12686
  %11 = icmp eq i32 %7, 15, !dbg !12687
  br i1 %11, label %12, label %15, !dbg !12687

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !12687
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #26, !dbg !12687
  br i1 %14, label %19, label %18, !dbg !12687

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !12687
  %17 = icmp ult i32 %16, 31, !dbg !12687
  br i1 %17, label %19, label %18, !dbg !12687

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.193, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.194, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.195, i32 0, i32 0), i32 noundef 536) #27, !dbg !12691
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.196, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #27, !dbg !12691
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.195, i32 0, i32 0), i32 noundef 536) #27, !dbg !12691
  unreachable, !dbg !12691

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12693
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #26, !dbg !12694
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !12695
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !12696
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !12697
  call void @llvm.dbg.value(metadata i8* %22, metadata !12685, metadata !DIExpression()), !dbg !12686
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !12698
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !12699
  store i8* null, i8** %23, align 4, !dbg !12700
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12701
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !12701
  br i1 %25, label %29, label %26, !dbg !12703

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 6, !dbg !12704
  %28 = load %struct.k_heap*, %struct.k_heap** %27, align 8, !dbg !12704
  br label %29, !dbg !12705

29:                                               ; preds = %19, %26
  %30 = phi %struct.k_heap* [ %28, %26 ], [ null, %19 ], !dbg !12686
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12706
  store %struct.k_heap* %30, %struct.k_heap** %31, align 8, !dbg !12708
  ret i8* %22, !dbg !12709
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !12710 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12714, metadata !DIExpression()), !dbg !12715
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !12716
  ret i1 %2, !dbg !12717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !12718 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !12723, metadata !DIExpression()), !dbg !12724
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !12725
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !12726
  ret void, !dbg !12727
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #6 !dbg !12728 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12733, metadata !DIExpression()), !dbg !12737
  call void @llvm.dbg.value(metadata i32 %1, metadata !12734, metadata !DIExpression()), !dbg !12737
  call void @llvm.dbg.value(metadata i32 %2, metadata !12735, metadata !DIExpression()), !dbg !12737
  call void @llvm.dbg.value(metadata i32 %3, metadata !12736, metadata !DIExpression()), !dbg !12737
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12738
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !12739
  %6 = trunc i32 %3 to i8, !dbg !12740
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12741
  store i8 %6, i8* %7, align 4, !dbg !12742
  %8 = trunc i32 %2 to i8, !dbg !12743
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12744
  store i8 %8, i8* %9, align 1, !dbg !12745
  %10 = trunc i32 %1 to i8, !dbg !12746
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12747
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12747
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12747
  store i8 %10, i8* %13, align 2, !dbg !12748
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12749
  store i8 0, i8* %14, align 1, !dbg !12750
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !12751
  ret void, !dbg !12752
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !12753 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12757, metadata !DIExpression()), !dbg !12765
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12758, metadata !DIExpression()), !dbg !12765
  call void @llvm.dbg.value(metadata i32 %2, metadata !12759, metadata !DIExpression()), !dbg !12765
  call void @llvm.dbg.value(metadata i32 0, metadata !12764, metadata !DIExpression()), !dbg !12765
  %4 = add i32 %2, 7, !dbg !12766
  %5 = and i32 %4, -8, !dbg !12766
  %6 = add i32 %5, 64, !dbg !12766
  call void @llvm.dbg.value(metadata i32 %6, metadata !12760, metadata !DIExpression()), !dbg !12765
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.197(%struct.z_thread_stack_element* noundef %1) #26, !dbg !12768
  call void @llvm.dbg.value(metadata i8* %7, metadata !12763, metadata !DIExpression()), !dbg !12765
  call void @llvm.dbg.value(metadata i32 %5, metadata !12761, metadata !DIExpression()), !dbg !12765
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !12769
  call void @llvm.dbg.value(metadata i8* %8, metadata !12762, metadata !DIExpression()), !dbg !12765
  call void @llvm.dbg.value(metadata i32 0, metadata !12764, metadata !DIExpression()), !dbg !12765
  %9 = ptrtoint i8* %7 to i32, !dbg !12770
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12771
  store i32 %9, i32* %10, align 4, !dbg !12772
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12773
  store i32 %5, i32* %11, align 4, !dbg !12774
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !12775
  store i32 0, i32* %12, align 4, !dbg !12776
  call void @llvm.dbg.value(metadata i8* %8, metadata !12762, metadata !DIExpression()), !dbg !12765
  ret i8* %8, !dbg !12777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.197(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !12778 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12782, metadata !DIExpression()), !dbg !12783
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12784
  ret i8* %2, !dbg !12785
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !12786 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12791, metadata !DIExpression()), !dbg !12792
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12793
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !12794
  ret void, !dbg !12795
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !12796 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12798, metadata !DIExpression()), !dbg !12799
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12800
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !12801
  ret void, !dbg !12802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !12803 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12807, metadata !DIExpression()), !dbg !12808
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12809
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12810
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12811
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12812
  ret void, !dbg !12813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !12814 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12819, metadata !DIExpression()), !dbg !12820
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12821
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12822
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12823
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12824
  ret void, !dbg !12825
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12826 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12843, metadata !DIExpression()), !dbg !12844
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12834, metadata !DIExpression()), !dbg !12844
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12835, metadata !DIExpression()), !dbg !12844
  call void @llvm.dbg.value(metadata i32 %2, metadata !12836, metadata !DIExpression()), !dbg !12844
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12837, metadata !DIExpression()), !dbg !12844
  call void @llvm.dbg.value(metadata i8* %4, metadata !12838, metadata !DIExpression()), !dbg !12844
  call void @llvm.dbg.value(metadata i8* %5, metadata !12839, metadata !DIExpression()), !dbg !12844
  call void @llvm.dbg.value(metadata i8* %6, metadata !12840, metadata !DIExpression()), !dbg !12844
  call void @llvm.dbg.value(metadata i32 %7, metadata !12841, metadata !DIExpression()), !dbg !12844
  call void @llvm.dbg.value(metadata i32 %8, metadata !12842, metadata !DIExpression()), !dbg !12844
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !12845, !srcloc !12562
  call void @llvm.dbg.value(metadata i32 %11, metadata !12558, metadata !DIExpression()) #25, !dbg !12850
  %12 = icmp eq i32 %11, 0, !dbg !12851
  br i1 %12, label %14, label %13, !dbg !12852

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.193, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.195, i32 0, i32 0), i32 noundef 647) #27, !dbg !12853
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14, i32 0, i32 0)) #27, !dbg !12853
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.195, i32 0, i32 0), i32 noundef 647) #27, !dbg !12853
  unreachable, !dbg !12853

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !12843, metadata !DIExpression()), !dbg !12844
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !12855
  %17 = icmp eq i64 %15, -1, !dbg !12856
  br i1 %17, label %19, label %18, !dbg !12858

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !12859
  br label %19, !dbg !12861

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !12862
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12863 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12868, metadata !DIExpression()), !dbg !12869
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12867, metadata !DIExpression()), !dbg !12869
  %4 = icmp eq i64 %3, 0, !dbg !12870
  br i1 %4, label %5, label %6, !dbg !12872

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12873
  br label %7, !dbg !12875

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !12876
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12878
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12879 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12883, metadata !DIExpression()), !dbg !12884
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12885, !srcloc !12887
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12888
  ret void, !dbg !12889
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12890 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12893, metadata !DIExpression()), !dbg !12894
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12892, metadata !DIExpression()), !dbg !12894
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12895
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !12896
  ret void, !dbg !12897
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12898 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12900, metadata !DIExpression()), !dbg !12919
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !12920

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.193, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.195, i32 0, i32 0), i32 noundef 750) #27, !dbg !12924
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i32 0, i32 0)) #27, !dbg !12924
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.195, i32 0, i32 0), i32 noundef 750) #27, !dbg !12924
  unreachable, !dbg !12924

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %29, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12900, metadata !DIExpression()), !dbg !12919
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12927
  br i1 %4, label %6, label %5, !dbg !12928

5:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !12929
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12917, metadata !DIExpression()), !dbg !12930
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %31, label %32, !dbg !12931

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12935
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !12935
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12937
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !12937
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12938
  %12 = load i32, i32* %11, align 4, !dbg !12938
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12939
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !12939
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12940
  %16 = load i8*, i8** %15, align 4, !dbg !12940
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12941
  %18 = load i8*, i8** %17, align 4, !dbg !12941
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12942
  %20 = load i8*, i8** %19, align 4, !dbg !12942
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12943
  %22 = load i32, i32* %21, align 4, !dbg !12943
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12944
  %24 = load i32, i32* %23, align 4, !dbg !12944
  %25 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* undef) #26, !dbg !12945
  %26 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !12946
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %26, i32 0, i32 2, !dbg !12947
  %28 = bitcast i8** %27 to %struct._static_thread_data**, !dbg !12948
  store %struct._static_thread_data* %3, %struct._static_thread_data** %28, align 4, !dbg !12948
  %29 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12949
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %29, metadata !12900, metadata !DIExpression()), !dbg !12919
  %30 = icmp ugt %struct._static_thread_data* %29, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12950
  br i1 %30, label %1, label %2, !dbg !12920, !llvm.loop !12951

31:                                               ; preds = %48, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.193, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.195, i32 0, i32 0), i32 noundef 781) #27, !dbg !12953
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i32 0, i32 0)) #27, !dbg !12953
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.195, i32 0, i32 0), i32 noundef 781) #27, !dbg !12953
  unreachable, !dbg !12953

32:                                               ; preds = %5, %48
  %33 = phi %struct._static_thread_data* [ %49, %48 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %33, metadata !12917, metadata !DIExpression()), !dbg !12930
  %34 = icmp ult %struct._static_thread_data* %33, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12956
  br i1 %34, label %36, label %35, !dbg !12957

35:                                               ; preds = %32
  tail call void @k_sched_unlock() #27, !dbg !12958
  ret void, !dbg !12959

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 9, !dbg !12960
  %38 = load i32, i32* %37, align 4, !dbg !12960
  %39 = icmp eq i32 %38, -1, !dbg !12963
  br i1 %39, label %48, label %40, !dbg !12964

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 0, !dbg !12965
  %42 = load %struct.k_thread*, %struct.k_thread** %41, align 4, !dbg !12965
  %43 = icmp sgt i32 %38, 0, !dbg !12967
  %44 = select i1 %43, i32 %38, i32 0, !dbg !12967
  %45 = zext i32 %44 to i64, !dbg !12967
  %46 = tail call fastcc i64 @k_ms_to_ticks_ceil64.201(i64 noundef %45) #26, !dbg !12967
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !12968
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %42, [1 x i64] %47) #26, !dbg !12968
  br label %48, !dbg !12969

48:                                               ; preds = %36, %40
  %49 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 1, !dbg !12970
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %49, metadata !12917, metadata !DIExpression()), !dbg !12930
  %50 = icmp ugt %struct._static_thread_data* %49, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12971
  br i1 %50, label %31, label %32, !dbg !12931, !llvm.loop !12972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.201(i64 noundef %0) unnamed_addr #4 !dbg !12974 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12976, metadata !DIExpression()), !dbg !12977
  call void @llvm.dbg.value(metadata i64 %0, metadata !12978, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata i32 1000, metadata !12981, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata i32 10000, metadata !12982, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata i8 1, metadata !12983, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata i8 0, metadata !12984, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata i8 1, metadata !12985, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata i8 0, metadata !12986, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata i8 1, metadata !12987, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata i8 0, metadata !12988, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata i64 0, metadata !12989, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata i64 0, metadata !12989, metadata !DIExpression()), !dbg !12993
  %2 = mul i64 %0, 10, !dbg !12995
  ret i64 %2, !dbg !13001
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #5 !dbg !13002 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13004, metadata !DIExpression()), !dbg !13008
  call void @llvm.dbg.value(metadata i8* %1, metadata !13005, metadata !DIExpression()), !dbg !13008
  call void @llvm.dbg.value(metadata i8* %2, metadata !13006, metadata !DIExpression()), !dbg !13008
  call void @llvm.dbg.value(metadata i8* %3, metadata !13007, metadata !DIExpression()), !dbg !13008
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13009
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13010
  %7 = load i8, i8* %6, align 4, !dbg !13011
  %8 = or i8 %7, 4, !dbg !13011
  store i8 %8, i8* %6, align 4, !dbg !13011
  tail call void @z_thread_essential_clear() #26, !dbg !13012
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !13013
  unreachable, !dbg !13013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct._sfnode* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !13014 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13019, metadata !DIExpression()), !dbg !13021
  %2 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13022
  %3 = load i32, i32* %2, align 4, !dbg !13022
  call void @llvm.dbg.value(metadata i32 %3, metadata !13020, metadata !DIExpression()), !dbg !13021
  %4 = icmp eq i32 %3, 0, !dbg !13023
  br i1 %4, label %10, label %5, !dbg !13025

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !13026
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13029
  %8 = zext i8 %7 to i32, !dbg !13030
  %9 = icmp eq i32 %6, %8, !dbg !13031
  br i1 %9, label %11, label %10, !dbg !13032

10:                                               ; preds = %5, %1
  br label %11, !dbg !13033

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !13021
  ret i1 %12, !dbg !13034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct._sfnode* nocapture noundef %0) local_unnamed_addr #9 !dbg !13035 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13037, metadata !DIExpression()), !dbg !13038
  %2 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13039
  %3 = load i32, i32* %2, align 4, !dbg !13039
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13041
  %5 = zext i8 %4 to i32, !dbg !13042
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13043
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !13044
  %8 = or i32 %7, %5, !dbg !13045
  %9 = icmp eq i32 %3, %8, !dbg !13046
  br i1 %9, label %10, label %11, !dbg !13047

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !13048
  br label %11, !dbg !13049

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !13050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct._sfnode* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !13051 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13055, metadata !DIExpression()), !dbg !13056
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13057
  %3 = zext i8 %2 to i32, !dbg !13058
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13059
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !13060
  %6 = or i32 %5, %3, !dbg !13061
  %7 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13062
  store i32 %6, i32* %7, align 4, !dbg !13063
  ret void, !dbg !13064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !13065 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13069, metadata !DIExpression()), !dbg !13070
  ret i32 -134, !dbg !13071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13072 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13076, metadata !DIExpression()), !dbg !13078
  call void @llvm.dbg.value(metadata i32 %1, metadata !13077, metadata !DIExpression()), !dbg !13078
  ret i32 -134, !dbg !13079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !13080 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13087, metadata !DIExpression()), !dbg !13089
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13088, metadata !DIExpression()), !dbg !13089
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13090
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13092
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13089
  ret i32 %6, !dbg !13093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !13094 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13098, metadata !DIExpression()), !dbg !13099
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13100
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13099
  ret i32 %3, !dbg !13102
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13103 {
  tail call void @sys_clock_idle_exit() #27, !dbg !13105
  ret void, !dbg !13106
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #5 !dbg !13107 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13109, metadata !DIExpression()), !dbg !13112
  call void @llvm.dbg.value(metadata i8* %1, metadata !13110, metadata !DIExpression()), !dbg !13112
  call void @llvm.dbg.value(metadata i8* %2, metadata !13111, metadata !DIExpression()), !dbg !13112
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13113
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13113
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13113
  %7 = load i8, i8* %6, align 2, !dbg !13113
  %8 = icmp sgt i8 %7, -1, !dbg !13113
  br i1 %8, label %10, label %9, !dbg !13116

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.210, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.211, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 39) #27, !dbg !13117
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 39) #27, !dbg !13117
  unreachable, !dbg !13117

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13119, !srcloc !13126
  call void @llvm.dbg.value(metadata i32 undef, metadata !13122, metadata !DIExpression()) #25, !dbg !13127
  call void @llvm.dbg.value(metadata i32 undef, metadata !13123, metadata !DIExpression()) #25, !dbg !13127
  tail call fastcc void @k_cpu_idle() #26, !dbg !13128
  br label %10, !dbg !13129, !llvm.loop !13130
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13132 {
  tail call void @arch_cpu_idle() #27, !dbg !13133
  ret void, !dbg !13134
}

; Function Attrs: optsize
declare !dbg !13135 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_queue_node_peek(%struct._sfnode* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !13136 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13140, metadata !DIExpression()), !dbg !13146
  call void @llvm.dbg.value(metadata i1 %1, metadata !13141, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13146
  %3 = icmp eq %struct._sfnode* %0, null, !dbg !13147
  br i1 %3, label %13, label %4, !dbg !13148

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct._sfnode* noundef nonnull %0) #26, !dbg !13149
  %6 = icmp eq i8 %5, 0, !dbg !13150
  br i1 %6, label %13, label %7, !dbg !13151

7:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13143, metadata !DIExpression()), !dbg !13152
  %8 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 1, !dbg !13153
  %9 = bitcast %struct._sfnode* %8 to i8**, !dbg !13153
  %10 = load i8*, i8** %9, align 4, !dbg !13153
  call void @llvm.dbg.value(metadata i8* %10, metadata !13142, metadata !DIExpression()), !dbg !13146
  br i1 %1, label %11, label %15, !dbg !13154

11:                                               ; preds = %7
  %12 = bitcast %struct._sfnode* %0 to i8*, !dbg !13155
  tail call void @k_free(i8* noundef nonnull %12) #27, !dbg !13156
  br label %15, !dbg !13159

13:                                               ; preds = %4, %2
  %14 = bitcast %struct._sfnode* %0 to i8*, !dbg !13160
  call void @llvm.dbg.value(metadata i8* %14, metadata !13142, metadata !DIExpression()), !dbg !13146
  br label %15

15:                                               ; preds = %7, %11, %13
  %16 = phi i8* [ %14, %13 ], [ %10, %11 ], [ %10, %7 ], !dbg !13162
  call void @llvm.dbg.value(metadata i8* %16, metadata !13142, metadata !DIExpression()), !dbg !13146
  ret i8* %16, !dbg !13163
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i8 @sys_sfnode_flags_get(%struct._sfnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13164 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13168, metadata !DIExpression()), !dbg !13169
  %2 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13170
  %3 = load i32, i32* %2, align 4, !dbg !13170
  %4 = trunc i32 %3 to i8, !dbg !13171
  %5 = and i8 %4, 3, !dbg !13171
  ret i8 %5, !dbg !13172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_impl_k_queue_init(%struct.k_queue* noundef %0) local_unnamed_addr #6 !dbg !13173 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13196, metadata !DIExpression()), !dbg !13197
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13198
  tail call fastcc void @sys_sflist_init(%struct._sflist* noundef %2) #26, !dbg !13199
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, i32 0, !dbg !13200
  store i32 0, i32* %3, align 4, !dbg !13200
  %4 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13201
  tail call fastcc void @z_waitq_init.213(%struct._wait_q_t* noundef nonnull %4) #26, !dbg !13202
  ret void, !dbg !13203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sflist_init(%struct._sflist* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !13204 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13209, metadata !DIExpression()), !dbg !13210
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13211
  store %struct._sfnode* null, %struct._sfnode** %2, align 4, !dbg !13212
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13213
  store %struct._sfnode* null, %struct._sfnode** %3, align 4, !dbg !13214
  ret void, !dbg !13215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.213(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !13216 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13221, metadata !DIExpression()), !dbg !13222
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13223
  tail call fastcc void @sys_dlist_init.214(%struct._dnode* noundef %2) #26, !dbg !13224
  ret void, !dbg !13225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.214(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !13226 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13231, metadata !DIExpression()), !dbg !13232
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13233
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13234
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13235
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13236
  ret void, !dbg !13237
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_queue_cancel_wait(%struct.k_queue* noundef %0) local_unnamed_addr #1 !dbg !13238 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13240, metadata !DIExpression()), !dbg !13326
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13327
  call void @llvm.dbg.value(metadata %struct._sfnode* %2, metadata !13328, metadata !DIExpression()) #25, !dbg !13335
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13337, !srcloc !13343
  call void @llvm.dbg.value(metadata i32 undef, metadata !13340, metadata !DIExpression()) #25, !dbg !13344
  call void @llvm.dbg.value(metadata i32 undef, metadata !13341, metadata !DIExpression()) #25, !dbg !13344
  call void @llvm.dbg.value(metadata i32 undef, metadata !13334, metadata !DIExpression()) #25, !dbg !13335
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %2) #27, !dbg !13345
  br i1 %4, label %6, label %5, !dbg !13348

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.215, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.216, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.217, i32 0, i32 0), i32 noundef 148) #27, !dbg !13349
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.218, i32 0, i32 0), %struct._sfnode* noundef nonnull %2) #27, !dbg !13349
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.217, i32 0, i32 0), i32 noundef 148) #27, !dbg !13349
  unreachable, !dbg !13349

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13340, metadata !DIExpression()) #25, !dbg !13344
  call void @llvm.dbg.value(metadata i32 undef, metadata !13334, metadata !DIExpression()) #25, !dbg !13335
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %2) #27, !dbg !13351
  call void @llvm.dbg.value(metadata i32 undef, metadata !13241, metadata !DIExpression()), !dbg !13326
  %7 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13352
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef nonnull %7) #27, !dbg !13353
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !13246, metadata !DIExpression()), !dbg !13326
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !13354
  br i1 %9, label %11, label %10, !dbg !13356

10:                                               ; preds = %6
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %8, i8* noundef null) #26, !dbg !13357
  br label %11, !dbg !13359

11:                                               ; preds = %10, %6
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !13337
  call void @llvm.dbg.value(metadata i32 %12, metadata !13340, metadata !DIExpression()) #25, !dbg !13344
  call void @llvm.dbg.value(metadata i32 %12, metadata !13334, metadata !DIExpression()) #25, !dbg !13335
  call void @llvm.dbg.value(metadata i32 %12, metadata !13241, metadata !DIExpression()), !dbg !13326
  %13 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !13360
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %2, [1 x i32] %13) #27, !dbg !13360
  ret void, !dbg !13361
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prepare_thread_to_run(%struct.k_thread* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !13362 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13366, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata i8* %1, metadata !13367, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13369, metadata !DIExpression()), !dbg !13377
  call void @llvm.dbg.value(metadata i32 0, metadata !13375, metadata !DIExpression()), !dbg !13377
  call void @llvm.dbg.value(metadata i8* %1, metadata !13376, metadata !DIExpression()), !dbg !13377
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13379, metadata !DIExpression()), !dbg !13385
  call void @llvm.dbg.value(metadata i32 0, metadata !13384, metadata !DIExpression()), !dbg !13385
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 1, !dbg !13387
  store i32 0, i32* %3, align 4, !dbg !13388
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 6, !dbg !13389
  store i8* %1, i8** %4, align 4, !dbg !13390
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #27, !dbg !13391
  ret void, !dbg !13392
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13393 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13397, metadata !DIExpression()), !dbg !13400
  call void @llvm.dbg.value(metadata i8* %1, metadata !13398, metadata !DIExpression()), !dbg !13400
  call void @llvm.dbg.value(metadata i8* %2, metadata !13399, metadata !DIExpression()), !dbg !13400
  %4 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext false, i1 noundef zeroext false) #26, !dbg !13401
  ret void, !dbg !13402
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext %3, i1 noundef zeroext %4) unnamed_addr #1 !dbg !13403 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13407, metadata !DIExpression()), !dbg !13417
  call void @llvm.dbg.value(metadata i8* %1, metadata !13408, metadata !DIExpression()), !dbg !13417
  call void @llvm.dbg.value(metadata i8* %2, metadata !13409, metadata !DIExpression()), !dbg !13417
  call void @llvm.dbg.value(metadata i1 %3, metadata !13410, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13417
  call void @llvm.dbg.value(metadata i1 %4, metadata !13411, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13417
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13418
  call void @llvm.dbg.value(metadata %struct._sfnode* %6, metadata !13328, metadata !DIExpression()) #25, !dbg !13419
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13421, !srcloc !13343
  call void @llvm.dbg.value(metadata i32 undef, metadata !13340, metadata !DIExpression()) #25, !dbg !13423
  call void @llvm.dbg.value(metadata i32 undef, metadata !13341, metadata !DIExpression()) #25, !dbg !13423
  call void @llvm.dbg.value(metadata i32 undef, metadata !13334, metadata !DIExpression()) #25, !dbg !13419
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %6) #27, !dbg !13424
  br i1 %8, label %10, label %9, !dbg !13425

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.215, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.216, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.217, i32 0, i32 0), i32 noundef 148) #27, !dbg !13426
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.218, i32 0, i32 0), %struct._sfnode* noundef nonnull %6) #27, !dbg !13426
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.217, i32 0, i32 0), i32 noundef 148) #27, !dbg !13426
  unreachable, !dbg !13426

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %7, 0, !dbg !13421
  call void @llvm.dbg.value(metadata i32 %11, metadata !13340, metadata !DIExpression()) #25, !dbg !13423
  call void @llvm.dbg.value(metadata i32 %11, metadata !13334, metadata !DIExpression()) #25, !dbg !13419
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %6) #27, !dbg !13427
  call void @llvm.dbg.value(metadata i32 %11, metadata !13413, metadata !DIExpression()), !dbg !13417
  br i1 %4, label %12, label %16, !dbg !13428

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13429
  %14 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %13) #26, !dbg !13432
  %15 = bitcast %struct._sfnode* %14 to i8*, !dbg !13432
  call void @llvm.dbg.value(metadata i8* %15, metadata !13408, metadata !DIExpression()), !dbg !13417
  br label %16, !dbg !13433

16:                                               ; preds = %12, %10
  %17 = phi i8* [ %15, %12 ], [ %1, %10 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !13408, metadata !DIExpression()), !dbg !13417
  %18 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13434
  %19 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef nonnull %18) #27, !dbg !13435
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !13412, metadata !DIExpression()), !dbg !13417
  %20 = icmp eq %struct.k_thread* %19, null, !dbg !13436
  br i1 %20, label %23, label %21, !dbg !13438

21:                                               ; preds = %16
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %19, i8* noundef %2) #26, !dbg !13439
  %22 = insertvalue [1 x i32] poison, i32 %11, 0, !dbg !13441
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %6, [1 x i32] %22) #27, !dbg !13441
  br label %42, !dbg !13442

23:                                               ; preds = %16
  br i1 %3, label %24, label %35, !dbg !13443

24:                                               ; preds = %23
  %25 = tail call fastcc i8* @z_thread_malloc() #26, !dbg !13444
  call void @llvm.dbg.value(metadata i8* %25, metadata !13414, metadata !DIExpression()), !dbg !13445
  %26 = icmp eq i8* %25, null, !dbg !13446
  br i1 %26, label %27, label %31, !dbg !13448

27:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !13449, metadata !DIExpression()) #25, !dbg !13455
  call void @llvm.dbg.value(metadata %struct._sfnode* %6, metadata !13454, metadata !DIExpression()) #25, !dbg !13455
  %28 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %6) #27, !dbg !13458
  br i1 %28, label %30, label %29, !dbg !13461

29:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.215, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.219, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.217, i32 0, i32 0), i32 noundef 194) #27, !dbg !13462
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.220, i32 0, i32 0), %struct._sfnode* noundef nonnull %6) #27, !dbg !13462
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.217, i32 0, i32 0), i32 noundef 194) #27, !dbg !13462
  unreachable, !dbg !13462

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %11, metadata !13449, metadata !DIExpression()) #25, !dbg !13455
  call void @llvm.dbg.value(metadata i32 %11, metadata !13464, metadata !DIExpression()) #25, !dbg !13467
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #25, !dbg !13469, !srcloc !13470
  call void @llvm.dbg.value(metadata i8* %25, metadata !13409, metadata !DIExpression()), !dbg !13417
  br label %42

31:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i8* %25, metadata !13414, metadata !DIExpression()), !dbg !13445
  %32 = getelementptr inbounds i8, i8* %25, i32 4, !dbg !13471
  %33 = bitcast i8* %32 to i8**, !dbg !13471
  store i8* %2, i8** %33, align 4, !dbg !13472
  %34 = bitcast i8* %25 to %struct._sfnode*, !dbg !13473
  tail call fastcc void @sys_sfnode_init(%struct._sfnode* noundef nonnull %34, i8 noundef zeroext 1) #26, !dbg !13474
  call void @llvm.dbg.value(metadata i8* %25, metadata !13409, metadata !DIExpression()), !dbg !13417
  br label %37

35:                                               ; preds = %23
  %36 = bitcast i8* %2 to %struct._sfnode*, !dbg !13475
  tail call fastcc void @sys_sfnode_init(%struct._sfnode* noundef %36, i8 noundef zeroext 0) #26, !dbg !13477
  br label %37

37:                                               ; preds = %31, %35
  %38 = phi %struct._sfnode* [ %34, %31 ], [ %36, %35 ], !dbg !13478
  call void @llvm.dbg.value(metadata i8* undef, metadata !13409, metadata !DIExpression()), !dbg !13417
  %39 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13479
  %40 = bitcast i8* %17 to %struct._sfnode*, !dbg !13480
  tail call fastcc void @sys_sflist_insert(%struct._sflist* noundef %39, %struct._sfnode* noundef %40, %struct._sfnode* noundef %38) #26, !dbg !13481
  %41 = insertvalue [1 x i32] poison, i32 %11, 0, !dbg !13482
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %6, [1 x i32] %41) #27, !dbg !13482
  br label %42, !dbg !13483

42:                                               ; preds = %30, %37, %21
  %43 = phi i32 [ 0, %21 ], [ 0, %37 ], [ -12, %30 ], !dbg !13417
  ret i32 %43, !dbg !13484
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13485 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13489, metadata !DIExpression()), !dbg !13490
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13491
  %3 = load %struct._sfnode*, %struct._sfnode** %2, align 4, !dbg !13491
  ret %struct._sfnode* %3, !dbg !13492
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc() unnamed_addr #1 !dbg !13493 {
  call void @llvm.dbg.value(metadata i32 8, metadata !13496, metadata !DIExpression()), !dbg !13497
  %1 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef 8) #27, !dbg !13498
  ret i8* %1, !dbg !13499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @sys_sfnode_init(%struct._sfnode* nocapture noundef writeonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !13500 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13504, metadata !DIExpression()), !dbg !13506
  call void @llvm.dbg.value(metadata i8 %1, metadata !13505, metadata !DIExpression()), !dbg !13506
  %3 = zext i8 %1 to i32, !dbg !13507
  %4 = and i32 %3, 252, !dbg !13507
  %5 = icmp eq i32 %4, 0, !dbg !13507
  br i1 %5, label %7, label %6, !dbg !13510

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.215, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4.221, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.222, i32 0, i32 0), i32 noundef 290) #27, !dbg !13511
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.223, i32 0, i32 0)) #27, !dbg !13511
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.222, i32 0, i32 0), i32 noundef 290) #27, !dbg !13511
  unreachable, !dbg !13511

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13513
  store i32 %3, i32* %8, align 4, !dbg !13514
  ret void, !dbg !13515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_insert(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1, %struct._sfnode* noundef %2) unnamed_addr #9 !dbg !13516 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13520, metadata !DIExpression()), !dbg !13523
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13521, metadata !DIExpression()), !dbg !13523
  call void @llvm.dbg.value(metadata %struct._sfnode* %2, metadata !13522, metadata !DIExpression()), !dbg !13523
  %4 = icmp eq %struct._sfnode* %1, null, !dbg !13524
  br i1 %4, label %5, label %6, !dbg !13526

5:                                                ; preds = %3
  tail call fastcc void @sys_sflist_prepend(%struct._sflist* noundef %0, %struct._sfnode* noundef %2) #26, !dbg !13527
  br label %11, !dbg !13527

6:                                                ; preds = %3
  %7 = tail call fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* noundef nonnull %1) #26, !dbg !13529
  %8 = icmp eq %struct._sfnode* %7, null, !dbg !13529
  br i1 %8, label %9, label %10, !dbg !13524

9:                                                ; preds = %6
  tail call fastcc void @sys_sflist_append(%struct._sflist* noundef %0, %struct._sfnode* noundef %2) #26, !dbg !13531
  br label %11, !dbg !13531

10:                                               ; preds = %6
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef %2, %struct._sfnode* noundef nonnull %7) #26, !dbg !13533
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef nonnull %1, %struct._sfnode* noundef %2) #26, !dbg !13533
  br label %11

11:                                               ; preds = %9, %10, %5
  ret void, !dbg !13526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_prepend(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1) unnamed_addr #9 !dbg !13535 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13539, metadata !DIExpression()), !dbg !13541
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13540, metadata !DIExpression()), !dbg !13541
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !13542
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef %1, %struct._sfnode* noundef %3) #26, !dbg !13542
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %1) #26, !dbg !13542
  %4 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !13543
  %5 = icmp eq %struct._sfnode* %4, null, !dbg !13543
  br i1 %5, label %6, label %8, !dbg !13542

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !13545
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %7) #26, !dbg !13545
  br label %8, !dbg !13545

8:                                                ; preds = %6, %2
  ret void, !dbg !13542
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13547 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13551, metadata !DIExpression()), !dbg !13552
  %2 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13553
  %3 = load i32, i32* %2, align 4, !dbg !13553
  %4 = and i32 %3, -4, !dbg !13554
  %5 = inttoptr i32 %4 to %struct._sfnode*, !dbg !13555
  ret %struct._sfnode* %5, !dbg !13556
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1) unnamed_addr #9 !dbg !13557 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13559, metadata !DIExpression()), !dbg !13561
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13560, metadata !DIExpression()), !dbg !13561
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef %1, %struct._sfnode* noundef null) #26, !dbg !13562
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !13563
  %4 = icmp eq %struct._sfnode* %3, null, !dbg !13563
  br i1 %4, label %5, label %6, !dbg !13562

5:                                                ; preds = %2
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %1) #26, !dbg !13565
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %1) #26, !dbg !13565
  br label %7, !dbg !13565

6:                                                ; preds = %2
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef nonnull %3, %struct._sfnode* noundef %1) #26, !dbg !13567
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %1) #26, !dbg !13567
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_sfnode_next_set(%struct._sfnode* nocapture noundef %0, %struct._sfnode* noundef %1) unnamed_addr #9 !dbg !13569 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13573, metadata !DIExpression()), !dbg !13576
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13574, metadata !DIExpression()), !dbg !13576
  %3 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct._sfnode* noundef %0) #26, !dbg !13577
  call void @llvm.dbg.value(metadata i8 %3, metadata !13575, metadata !DIExpression()), !dbg !13576
  %4 = zext i8 %3 to i32, !dbg !13578
  %5 = ptrtoint %struct._sfnode* %1 to i32, !dbg !13579
  %6 = or i32 %4, %5, !dbg !13580
  %7 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13581
  store i32 %6, i32* %7, align 4, !dbg !13582
  ret void, !dbg !13583
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_tail_set(%struct._sflist* nocapture noundef writeonly %0, %struct._sfnode* noundef %1) unnamed_addr #6 !dbg !13584 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13586, metadata !DIExpression()), !dbg !13588
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13587, metadata !DIExpression()), !dbg !13588
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13589
  store %struct._sfnode* %1, %struct._sfnode** %3, align 4, !dbg !13590
  ret void, !dbg !13591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_head_set(%struct._sflist* nocapture noundef writeonly %0, %struct._sfnode* noundef %1) unnamed_addr #6 !dbg !13592 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13594, metadata !DIExpression()), !dbg !13596
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13595, metadata !DIExpression()), !dbg !13596
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13597
  store %struct._sfnode* %1, %struct._sfnode** %3, align 4, !dbg !13598
  ret void, !dbg !13599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13600 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13602, metadata !DIExpression()), !dbg !13603
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13604
  %3 = load %struct._sfnode*, %struct._sfnode** %2, align 4, !dbg !13604
  ret %struct._sfnode* %3, !dbg !13605
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13606 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13610, metadata !DIExpression()), !dbg !13612
  call void @llvm.dbg.value(metadata i8* %1, metadata !13611, metadata !DIExpression()), !dbg !13612
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext true) #26, !dbg !13613
  ret void, !dbg !13614
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13615 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13617, metadata !DIExpression()), !dbg !13619
  call void @llvm.dbg.value(metadata i8* %1, metadata !13618, metadata !DIExpression()), !dbg !13619
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext false) #26, !dbg !13620
  ret void, !dbg !13621
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13622 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13626, metadata !DIExpression()), !dbg !13629
  call void @llvm.dbg.value(metadata i8* %1, metadata !13627, metadata !DIExpression()), !dbg !13629
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext true) #26, !dbg !13630
  call void @llvm.dbg.value(metadata i32 %3, metadata !13628, metadata !DIExpression()), !dbg !13629
  ret i32 %3, !dbg !13631
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13632 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13634, metadata !DIExpression()), !dbg !13637
  call void @llvm.dbg.value(metadata i8* %1, metadata !13635, metadata !DIExpression()), !dbg !13637
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext false) #26, !dbg !13638
  call void @llvm.dbg.value(metadata i32 %3, metadata !13636, metadata !DIExpression()), !dbg !13637
  ret i32 %3, !dbg !13639
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13640 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13644, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.value(metadata i8* %1, metadata !13645, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.value(metadata i8* %2, metadata !13646, metadata !DIExpression()), !dbg !13649
  %4 = icmp eq i8* %1, null, !dbg !13650
  %5 = icmp eq i8* %2, null, !dbg !13650
  %6 = or i1 %4, %5, !dbg !13650
  br i1 %6, label %32, label %7, !dbg !13650

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13652
  call void @llvm.dbg.value(metadata %struct._sfnode* %8, metadata !13328, metadata !DIExpression()) #25, !dbg !13653
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13655, !srcloc !13343
  call void @llvm.dbg.value(metadata i32 undef, metadata !13340, metadata !DIExpression()) #25, !dbg !13657
  call void @llvm.dbg.value(metadata i32 undef, metadata !13341, metadata !DIExpression()) #25, !dbg !13657
  call void @llvm.dbg.value(metadata i32 undef, metadata !13334, metadata !DIExpression()) #25, !dbg !13653
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %8) #27, !dbg !13658
  br i1 %10, label %12, label %11, !dbg !13659

11:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.215, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.216, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.217, i32 0, i32 0), i32 noundef 148) #27, !dbg !13660
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.218, i32 0, i32 0), %struct._sfnode* noundef nonnull %8) #27, !dbg !13660
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.217, i32 0, i32 0), i32 noundef 148) #27, !dbg !13660
  unreachable, !dbg !13660

12:                                               ; preds = %7
  %13 = extractvalue { i32, i32 } %9, 0, !dbg !13655
  call void @llvm.dbg.value(metadata i32 %13, metadata !13340, metadata !DIExpression()) #25, !dbg !13657
  call void @llvm.dbg.value(metadata i32 %13, metadata !13334, metadata !DIExpression()) #25, !dbg !13653
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %8) #27, !dbg !13661
  call void @llvm.dbg.value(metadata i32 %13, metadata !13647, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13648, metadata !DIExpression()), !dbg !13649
  %14 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13662
  %15 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef nonnull %14) #27, !dbg !13665
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13648, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13648, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.value(metadata i8* %1, metadata !13645, metadata !DIExpression()), !dbg !13649
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !13666
  br i1 %16, label %27, label %17, !dbg !13667

17:                                               ; preds = %12, %17
  %18 = phi %struct.k_thread* [ %22, %17 ], [ %15, %12 ]
  %19 = phi i8* [ %21, %17 ], [ %1, %12 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !13648, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.value(metadata i8* %19, metadata !13645, metadata !DIExpression()), !dbg !13649
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %18, i8* noundef nonnull %19) #26, !dbg !13668
  %20 = bitcast i8* %19 to i8**, !dbg !13670
  %21 = load i8*, i8** %20, align 4, !dbg !13671
  call void @llvm.dbg.value(metadata i8* %21, metadata !13645, metadata !DIExpression()), !dbg !13649
  %22 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef nonnull %14) #27, !dbg !13672
  call void @llvm.dbg.value(metadata %struct.k_thread* %22, metadata !13648, metadata !DIExpression()), !dbg !13649
  %23 = icmp ne i8* %21, null, !dbg !13673
  %24 = icmp ne %struct.k_thread* %22, null, !dbg !13666
  %25 = select i1 %23, i1 %24, i1 false, !dbg !13666
  br i1 %25, label %17, label %26, !dbg !13667, !llvm.loop !13674

26:                                               ; preds = %17
  br i1 %23, label %27, label %30, !dbg !13676

27:                                               ; preds = %12, %26
  %28 = phi i8* [ %21, %26 ], [ %1, %12 ]
  %29 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13677
  tail call fastcc void @sys_sflist_append_list(%struct._sflist* noundef %29, i8* noundef nonnull %28, i8* noundef %2) #26, !dbg !13680
  br label %30, !dbg !13681

30:                                               ; preds = %26, %27
  %31 = insertvalue [1 x i32] poison, i32 %13, 0, !dbg !13682
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %8, [1 x i32] %31) #27, !dbg !13682
  br label %32

32:                                               ; preds = %3, %30
  %33 = phi i32 [ 0, %30 ], [ -22, %3 ], !dbg !13649
  ret i32 %33, !dbg !13683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append_list(%struct._sflist* nocapture noundef %0, i8* noundef %1, i8* noundef %2) unnamed_addr #9 !dbg !13684 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13688, metadata !DIExpression()), !dbg !13691
  call void @llvm.dbg.value(metadata i8* %1, metadata !13689, metadata !DIExpression()), !dbg !13691
  call void @llvm.dbg.value(metadata i8* %2, metadata !13690, metadata !DIExpression()), !dbg !13691
  %4 = icmp ne i8* %1, null, !dbg !13692
  %5 = icmp ne i8* %2, null, !dbg !13692
  %6 = and i1 %4, %5, !dbg !13692
  br i1 %6, label %7, label %15, !dbg !13692

7:                                                ; preds = %3
  %8 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !13694
  %9 = icmp eq %struct._sfnode* %8, null, !dbg !13694
  %10 = bitcast i8* %1 to %struct._sfnode*, !dbg !13697
  br i1 %9, label %11, label %12, !dbg !13698

11:                                               ; preds = %7
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef nonnull %10) #26, !dbg !13699
  br label %13, !dbg !13699

12:                                               ; preds = %7
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef nonnull %8, %struct._sfnode* noundef nonnull %10) #26, !dbg !13701
  br label %13

13:                                               ; preds = %12, %11
  %14 = bitcast i8* %2 to %struct._sfnode*, !dbg !13698
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef nonnull %14) #26, !dbg !13698
  br label %15, !dbg !13698

15:                                               ; preds = %13, %3
  ret void, !dbg !13703
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_merge_slist(%struct.k_queue* noundef %0, %struct._slist* nocapture noundef %1) local_unnamed_addr #1 !dbg !13704 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13720, metadata !DIExpression()), !dbg !13723
  call void @llvm.dbg.value(metadata %struct._slist* %1, metadata !13721, metadata !DIExpression()), !dbg !13723
  %3 = tail call fastcc zeroext i1 @sys_slist_is_empty.226(%struct._slist* noundef %1) #26, !dbg !13724
  br i1 %3, label %13, label %4, !dbg !13726

4:                                                ; preds = %2
  %5 = bitcast %struct._slist* %1 to i8**, !dbg !13727
  %6 = load i8*, i8** %5, align 4, !dbg !13727
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %1, i32 0, i32 1, !dbg !13728
  %8 = bitcast %struct._snode** %7 to i8**, !dbg !13728
  %9 = load i8*, i8** %8, align 4, !dbg !13728
  %10 = tail call i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %6, i8* noundef %9) #26, !dbg !13729
  call void @llvm.dbg.value(metadata i32 %10, metadata !13722, metadata !DIExpression()), !dbg !13723
  %11 = icmp eq i32 %10, 0, !dbg !13730
  br i1 %11, label %12, label %13, !dbg !13732

12:                                               ; preds = %4
  tail call fastcc void @sys_slist_init(%struct._slist* noundef nonnull %1) #26, !dbg !13733
  br label %13, !dbg !13734

13:                                               ; preds = %4, %2, %12
  %14 = phi i32 [ 0, %12 ], [ -22, %2 ], [ %10, %4 ], !dbg !13723
  ret i32 %14, !dbg !13735
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty.226(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13736 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !13740, metadata !DIExpression()), !dbg !13741
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head.227(%struct._slist* noundef %0) #26, !dbg !13742
  %3 = icmp eq %struct._snode* %2, null, !dbg !13742
  ret i1 %3, !dbg !13742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_slist_init(%struct._slist* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !13743 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !13747, metadata !DIExpression()), !dbg !13748
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !13749
  store %struct._snode* null, %struct._snode** %2, align 4, !dbg !13750
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !13751
  store %struct._snode* null, %struct._snode** %3, align 4, !dbg !13752
  ret void, !dbg !13753
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head.227(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13754 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !13758, metadata !DIExpression()), !dbg !13759
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !13760
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !13760
  ret %struct._snode* %3, !dbg !13761
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13762 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13771, metadata !DIExpression()), !dbg !13778
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13770, metadata !DIExpression()), !dbg !13778
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13779
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !13328, metadata !DIExpression()) #25, !dbg !13780
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13782, !srcloc !13343
  call void @llvm.dbg.value(metadata i32 undef, metadata !13340, metadata !DIExpression()) #25, !dbg !13784
  call void @llvm.dbg.value(metadata i32 undef, metadata !13341, metadata !DIExpression()) #25, !dbg !13784
  call void @llvm.dbg.value(metadata i32 undef, metadata !13334, metadata !DIExpression()) #25, !dbg !13780
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %3) #27, !dbg !13785
  br i1 %5, label %7, label %6, !dbg !13786

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.215, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.216, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.217, i32 0, i32 0), i32 noundef 148) #27, !dbg !13787
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.218, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #27, !dbg !13787
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.217, i32 0, i32 0), i32 noundef 148) #27, !dbg !13787
  unreachable, !dbg !13787

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !13782
  call void @llvm.dbg.value(metadata i32 %8, metadata !13340, metadata !DIExpression()) #25, !dbg !13784
  call void @llvm.dbg.value(metadata i32 %8, metadata !13334, metadata !DIExpression()) #25, !dbg !13780
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %3) #27, !dbg !13788
  call void @llvm.dbg.value(metadata i32 %8, metadata !13772, metadata !DIExpression()), !dbg !13778
  %9 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13789
  %10 = tail call fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* noundef %9) #26, !dbg !13789
  br i1 %10, label %17, label %11, !dbg !13790, !prof !13791

11:                                               ; preds = %7
  %12 = tail call fastcc %struct._sfnode* @sys_sflist_get_not_empty(%struct._sflist* noundef %9) #26, !dbg !13792
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !13774, metadata !DIExpression()), !dbg !13793
  %13 = tail call i8* @z_queue_node_peek(%struct._sfnode* noundef %12, i1 noundef zeroext true) #26, !dbg !13794
  call void @llvm.dbg.value(metadata i8* %13, metadata !13773, metadata !DIExpression()), !dbg !13778
  call void @llvm.dbg.value(metadata i32 undef, metadata !13449, metadata !DIExpression()) #25, !dbg !13795
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !13454, metadata !DIExpression()) #25, !dbg !13795
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %3) #27, !dbg !13797
  br i1 %14, label %16, label %15, !dbg !13798

15:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.215, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.219, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.217, i32 0, i32 0), i32 noundef 194) #27, !dbg !13799
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.220, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #27, !dbg !13799
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.217, i32 0, i32 0), i32 noundef 194) #27, !dbg !13799
  unreachable, !dbg !13799

16:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %8, metadata !13449, metadata !DIExpression()) #25, !dbg !13795
  call void @llvm.dbg.value(metadata i32 %8, metadata !13464, metadata !DIExpression()) #25, !dbg !13800
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !13802, !srcloc !13470
  br label %33

17:                                               ; preds = %7
  %18 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %18, metadata !13771, metadata !DIExpression()), !dbg !13778
  %19 = icmp eq i64 %18, 0, !dbg !13803
  br i1 %19, label %20, label %24, !dbg !13805

20:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !13449, metadata !DIExpression()) #25, !dbg !13806
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !13454, metadata !DIExpression()) #25, !dbg !13806
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %3) #27, !dbg !13809
  br i1 %21, label %23, label %22, !dbg !13810

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.215, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.219, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.217, i32 0, i32 0), i32 noundef 194) #27, !dbg !13811
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.220, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #27, !dbg !13811
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.217, i32 0, i32 0), i32 noundef 194) #27, !dbg !13811
  unreachable, !dbg !13811

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %8, metadata !13449, metadata !DIExpression()) #25, !dbg !13806
  call void @llvm.dbg.value(metadata i32 %8, metadata !13464, metadata !DIExpression()) #25, !dbg !13812
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !13814, !srcloc !13470
  br label %33, !dbg !13815

24:                                               ; preds = %17
  %25 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13816
  %26 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !13817
  %27 = tail call i32 @z_pend_curr(%struct._sfnode* noundef nonnull %3, [1 x i32] %26, %struct._wait_q_t* noundef nonnull %25, [1 x i64] %1) #27, !dbg !13817
  call void @llvm.dbg.value(metadata i32 %27, metadata !13777, metadata !DIExpression()), !dbg !13778
  %28 = icmp eq i32 %27, 0, !dbg !13818
  br i1 %28, label %29, label %33, !dbg !13819

29:                                               ; preds = %24
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13820
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %30, i32 0, i32 0, i32 6, !dbg !13821
  %32 = load i8*, i8** %31, align 4, !dbg !13821
  br label %33, !dbg !13819

33:                                               ; preds = %29, %24, %23, %16
  %34 = phi i8* [ %13, %16 ], [ null, %23 ], [ %32, %29 ], [ null, %24 ], !dbg !13778
  ret i8* %34, !dbg !13822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13823 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13827, metadata !DIExpression()), !dbg !13828
  %2 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !13829
  %3 = icmp eq %struct._sfnode* %2, null, !dbg !13829
  ret i1 %3, !dbg !13829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc %struct._sfnode* @sys_sflist_get_not_empty(%struct._sflist* nocapture noundef %0) unnamed_addr #9 !dbg !13830 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13832, metadata !DIExpression()), !dbg !13834
  %2 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !13835
  call void @llvm.dbg.value(metadata %struct._sfnode* %2, metadata !13833, metadata !DIExpression()), !dbg !13834
  %3 = tail call fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* noundef %2) #26, !dbg !13835
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %3) #26, !dbg !13835
  %4 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !13836
  %5 = icmp eq %struct._sfnode* %4, %2, !dbg !13836
  br i1 %5, label %6, label %8, !dbg !13835

6:                                                ; preds = %1
  %7 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !13838
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %7) #26, !dbg !13838
  br label %8, !dbg !13838

8:                                                ; preds = %6, %1
  ret %struct._sfnode* %2, !dbg !13835
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local zeroext i1 @k_queue_remove(%struct.k_queue* nocapture noundef %0, i8* noundef %1) local_unnamed_addr #14 !dbg !13840 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13844, metadata !DIExpression()), !dbg !13847
  call void @llvm.dbg.value(metadata i8* %1, metadata !13845, metadata !DIExpression()), !dbg !13847
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13848
  %4 = bitcast i8* %1 to %struct._sfnode*, !dbg !13849
  %5 = tail call fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* noundef %3, %struct._sfnode* noundef %4) #26, !dbg !13850
  call void @llvm.dbg.value(metadata i1 %5, metadata !13846, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13847
  ret i1 %5, !dbg !13851
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1) unnamed_addr #14 !dbg !13852 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13856, metadata !DIExpression()), !dbg !13860
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13857, metadata !DIExpression()), !dbg !13860
  call void @llvm.dbg.value(metadata %struct._sfnode* null, metadata !13858, metadata !DIExpression()), !dbg !13860
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !13861
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !13859, metadata !DIExpression()), !dbg !13860
  call void @llvm.dbg.value(metadata %struct._sfnode* null, metadata !13858, metadata !DIExpression()), !dbg !13860
  %4 = icmp eq %struct._sfnode* %3, null, !dbg !13863
  br i1 %4, label %15, label %5, !dbg !13861

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !13859, metadata !DIExpression()), !dbg !13860
  call void @llvm.dbg.value(metadata %struct._sfnode* null, metadata !13858, metadata !DIExpression()), !dbg !13860
  %6 = icmp eq %struct._sfnode* %3, %1, !dbg !13865
  br i1 %6, label %9, label %11, !dbg !13868

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._sfnode* %13, metadata !13859, metadata !DIExpression()), !dbg !13860
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !13858, metadata !DIExpression()), !dbg !13860
  %8 = icmp eq %struct._sfnode* %13, %1, !dbg !13865
  br i1 %8, label %9, label %11, !dbg !13868, !llvm.loop !13869

9:                                                ; preds = %7, %5
  %10 = phi %struct._sfnode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_sflist_remove(%struct._sflist* noundef %0, %struct._sfnode* noundef %10, %struct._sfnode* noundef %1) #26, !dbg !13870
  br label %15, !dbg !13870

11:                                               ; preds = %5, %7
  %12 = phi %struct._sfnode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !13859, metadata !DIExpression()), !dbg !13860
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !13858, metadata !DIExpression()), !dbg !13860
  %13 = tail call fastcc %struct._sfnode* @sys_sflist_peek_next(%struct._sfnode* noundef nonnull %12) #26, !dbg !13863
  call void @llvm.dbg.value(metadata %struct._sfnode* %13, metadata !13859, metadata !DIExpression()), !dbg !13860
  %14 = icmp eq %struct._sfnode* %13, null, !dbg !13863
  br i1 %14, label %15, label %7, !dbg !13861, !llvm.loop !13869

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !13872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_remove(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1, %struct._sfnode* noundef %2) unnamed_addr #9 !dbg !13873 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13875, metadata !DIExpression()), !dbg !13878
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13876, metadata !DIExpression()), !dbg !13878
  call void @llvm.dbg.value(metadata %struct._sfnode* %2, metadata !13877, metadata !DIExpression()), !dbg !13878
  %4 = icmp eq %struct._sfnode* %1, null, !dbg !13879
  %5 = tail call fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* noundef %2) #26, !dbg !13881
  br i1 %4, label %6, label %11, !dbg !13882

6:                                                ; preds = %3
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %5) #26, !dbg !13883
  %7 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !13885
  %8 = icmp eq %struct._sfnode* %7, %2, !dbg !13885
  br i1 %8, label %9, label %15, !dbg !13883

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !13887
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %10) #26, !dbg !13887
  br label %15, !dbg !13887

11:                                               ; preds = %3
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef nonnull %1, %struct._sfnode* noundef %5) #26, !dbg !13889
  %12 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !13891
  %13 = icmp eq %struct._sfnode* %12, %2, !dbg !13891
  br i1 %13, label %14, label %15, !dbg !13889

14:                                               ; preds = %11
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef nonnull %1) #26, !dbg !13893
  br label %15, !dbg !13893

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef %2, %struct._sfnode* noundef null) #26, !dbg !13882
  ret void, !dbg !13882
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @sys_sflist_peek_next(%struct._sfnode* noundef readonly %0) unnamed_addr #7 !dbg !13895 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13897, metadata !DIExpression()), !dbg !13898
  %2 = icmp eq %struct._sfnode* %0, null, !dbg !13899
  br i1 %2, label %5, label %3, !dbg !13899

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._sfnode* @sys_sflist_peek_next_no_check(%struct._sfnode* noundef nonnull %0) #26, !dbg !13899
  br label %5, !dbg !13899

5:                                                ; preds = %1, %3
  %6 = phi %struct._sfnode* [ %4, %3 ], [ null, %1 ], !dbg !13899
  ret %struct._sfnode* %6, !dbg !13899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @sys_sflist_peek_next_no_check(%struct._sfnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13900 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13902, metadata !DIExpression()), !dbg !13903
  %2 = tail call fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* noundef %0) #26, !dbg !13904
  ret %struct._sfnode* %2, !dbg !13904
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_queue_unique_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13905 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13907, metadata !DIExpression()), !dbg !13910
  call void @llvm.dbg.value(metadata i8* %1, metadata !13908, metadata !DIExpression()), !dbg !13910
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13911
  %4 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %3) #26, !dbg !13911
  call void @llvm.dbg.value(metadata %struct._sfnode* %4, metadata !13909, metadata !DIExpression()), !dbg !13910
  %5 = icmp eq %struct._sfnode* %4, null, !dbg !13913
  br i1 %5, label %14, label %6, !dbg !13911

6:                                                ; preds = %2
  %7 = bitcast i8* %1 to %struct._sfnode*
  br label %8, !dbg !13911

8:                                                ; preds = %6, %11
  %9 = phi %struct._sfnode* [ %4, %6 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !13909, metadata !DIExpression()), !dbg !13910
  %10 = icmp eq %struct._sfnode* %9, %7, !dbg !13915
  br i1 %10, label %15, label %11, !dbg !13918

11:                                               ; preds = %8
  %12 = tail call fastcc %struct._sfnode* @sys_sflist_peek_next(%struct._sfnode* noundef nonnull %9) #26, !dbg !13913
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !13909, metadata !DIExpression()), !dbg !13910
  %13 = icmp eq %struct._sfnode* %12, null, !dbg !13913
  br i1 %13, label %14, label %8, !dbg !13911, !llvm.loop !13919

14:                                               ; preds = %11, %2
  tail call void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) #26, !dbg !13921
  br label %15, !dbg !13922

15:                                               ; preds = %8, %14
  %16 = phi i1 [ true, %14 ], [ false, %8 ]
  ret i1 %16, !dbg !13923
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_head(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !13924 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13928, metadata !DIExpression()), !dbg !13930
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13931
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %2) #26, !dbg !13932
  %4 = tail call i8* @z_queue_node_peek(%struct._sfnode* noundef %3, i1 noundef zeroext false) #26, !dbg !13933
  call void @llvm.dbg.value(metadata i8* %4, metadata !13929, metadata !DIExpression()), !dbg !13930
  ret i8* %4, !dbg !13934
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_tail(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !13935 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13937, metadata !DIExpression()), !dbg !13939
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13940
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %2) #26, !dbg !13941
  %4 = tail call i8* @z_queue_node_peek(%struct._sfnode* noundef %3, i1 noundef zeroext false) #26, !dbg !13942
  call void @llvm.dbg.value(metadata i8* %4, metadata !13938, metadata !DIExpression()), !dbg !13939
  ret i8* %4, !dbg !13943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #7 !dbg !13944 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13948, metadata !DIExpression()), !dbg !13952
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13949, metadata !DIExpression()), !dbg !13952
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13953
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13953
  %5 = load i8, i8* %4, align 2, !dbg !13953
  call void @llvm.dbg.value(metadata i8 %5, metadata !13950, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13952
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13954
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13954
  %8 = load i8, i8* %7, align 2, !dbg !13954
  call void @llvm.dbg.value(metadata i8 %8, metadata !13951, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13952
  %9 = icmp eq i8 %8, %5, !dbg !13955
  %10 = sext i8 %5 to i32, !dbg !13957
  %11 = sext i8 %8 to i32, !dbg !13957
  %12 = sub nsw i32 %11, %10, !dbg !13957
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13957
  ret i32 %13, !dbg !13958
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13959 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13963, metadata !DIExpression()), !dbg !13964
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !13965
  %3 = icmp eq i32 %2, 0, !dbg !13967
  br i1 %3, label %8, label %4, !dbg !13968

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !13969
  %6 = add i32 %5, %2, !dbg !13971
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13972
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !13973
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !13974
  br label %8, !dbg !13975

8:                                                ; preds = %4, %1
  ret void, !dbg !13976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #7 !dbg !13977 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13981, metadata !DIExpression()), !dbg !13983
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13984
  call void @llvm.dbg.value(metadata i32 %1, metadata !13982, metadata !DIExpression()), !dbg !13983
  ret i32 %1, !dbg !13985
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13986 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13990, metadata !DIExpression()), !dbg !13999
  call void @llvm.dbg.value(metadata i32 %1, metadata !13991, metadata !DIExpression()), !dbg !13999
  call void @llvm.dbg.value(metadata i32 0, metadata !13992, metadata !DIExpression()), !dbg !14000
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !14008
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14010, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !14017
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !14017
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !14008
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14018
  br i1 %4, label %6, label %5, !dbg !14021

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !14022
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14022
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !14022
  unreachable, !dbg !14022

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !14017
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !14008
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14024
  call void @llvm.dbg.value(metadata i32 undef, metadata !13998, metadata !DIExpression()), !dbg !14000
  call void @llvm.dbg.value(metadata i32 undef, metadata !13992, metadata !DIExpression()), !dbg !14000
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14025
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !14028
  %8 = icmp sgt i32 %0, 0, !dbg !14029
  %9 = icmp sgt i32 %7, 2, !dbg !14031
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14031
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14031
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14032
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14033
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14041
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !14041
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14043
  br i1 %12, label %14, label %13, !dbg !14046

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !14047
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14047
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !14047
  unreachable, !dbg !14047

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14010
  call void @llvm.dbg.value(metadata i32 %15, metadata !14013, metadata !DIExpression()) #25, !dbg !14017
  call void @llvm.dbg.value(metadata i32 %15, metadata !14007, metadata !DIExpression()) #25, !dbg !14008
  call void @llvm.dbg.value(metadata i32 %15, metadata !13998, metadata !DIExpression()), !dbg !14000
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14041
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #25, !dbg !14052
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !14054, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 1, metadata !13992, metadata !DIExpression()), !dbg !14000
  call void @llvm.dbg.value(metadata i32 undef, metadata !13992, metadata !DIExpression()), !dbg !14000
  ret void, !dbg !14056
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14057 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14059, metadata !DIExpression()), !dbg !14060
  call void @llvm.dbg.value(metadata i32 %0, metadata !14061, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14076
  call void @llvm.dbg.value(metadata i32 1000, metadata !14064, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.value(metadata i32 10000, metadata !14065, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.value(metadata i8 1, metadata !14066, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.value(metadata i1 true, metadata !14067, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14076
  call void @llvm.dbg.value(metadata i1 true, metadata !14068, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14076
  call void @llvm.dbg.value(metadata i8 0, metadata !14069, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.value(metadata i1 true, metadata !14070, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14076
  call void @llvm.dbg.value(metadata i1 false, metadata !14071, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14076
  call void @llvm.dbg.value(metadata i64 0, metadata !14072, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.value(metadata i64 0, metadata !14072, metadata !DIExpression()), !dbg !14076
  %2 = mul i32 %0, 10, !dbg !14078
  ret i32 %2, !dbg !14084
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14085 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14087, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !14090
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14092, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !14094
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !14094
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !14090
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14095
  br i1 %3, label %5, label %4, !dbg !14096

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !14097
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14097
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !14097
  unreachable, !dbg !14097

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14092
  call void @llvm.dbg.value(metadata i32 %6, metadata !14013, metadata !DIExpression()) #25, !dbg !14094
  call void @llvm.dbg.value(metadata i32 %6, metadata !14007, metadata !DIExpression()) #25, !dbg !14090
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14098
  call void @llvm.dbg.value(metadata i32 %6, metadata !14088, metadata !DIExpression()), !dbg !14089
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14099
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14101
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14102
  br i1 %9, label %10, label %14, !dbg !14103

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14104
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14106
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !14106
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14108
  br i1 %11, label %13, label %12, !dbg !14109

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !14110
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14110
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !14110
  unreachable, !dbg !14110

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14035, metadata !DIExpression()) #25, !dbg !14106
  call void @llvm.dbg.value(metadata i32 %6, metadata !14049, metadata !DIExpression()) #25, !dbg !14111
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !14113, !srcloc !14055
  br label %33, !dbg !14114

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14115
  %15 = tail call fastcc i32 @slice_time() #26, !dbg !14116
  %16 = icmp eq i32 %15, 0, !dbg !14116
  br i1 %16, label %27, label %17, !dbg !14118

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #26, !dbg !14119
  br i1 %18, label %19, label %27, !dbg !14120

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14121
  %21 = icmp sgt i32 %20, %0, !dbg !14124
  br i1 %21, label %25, label %22, !dbg !14125

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14126
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #26, !dbg !14126
  call void @llvm.dbg.value(metadata i32 %24, metadata !14088, metadata !DIExpression()), !dbg !14089
  br label %28, !dbg !14128

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14129
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14129
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14131
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14089
  call void @llvm.dbg.value(metadata i32 %29, metadata !14088, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14133
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !14133
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14135
  br i1 %30, label %32, label %31, !dbg !14136

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !14137
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14137
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !14137
  unreachable, !dbg !14137

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14035, metadata !DIExpression()) #25, !dbg !14133
  call void @llvm.dbg.value(metadata i32 %29, metadata !14049, metadata !DIExpression()) #25, !dbg !14138
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #25, !dbg !14140, !srcloc !14055
  br label %33, !dbg !14141

33:                                               ; preds = %32, %13
  ret void, !dbg !14141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !14142 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14146, metadata !DIExpression()), !dbg !14148
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !14149
  %3 = icmp eq i32 %2, 0, !dbg !14149
  br i1 %3, label %16, label %4, !dbg !14150

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14151
  br i1 %5, label %16, label %6, !dbg !14152

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14153
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14153
  %9 = load i8, i8* %8, align 2, !dbg !14153
  %10 = sext i8 %9 to i32, !dbg !14154
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14155
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !14156
  br i1 %12, label %16, label %13, !dbg !14157

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !14158
  %15 = xor i1 %14, true, !dbg !14159
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14148
  call void @llvm.dbg.value(metadata i1 %17, metadata !14147, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14148
  ret i1 %17, !dbg !14160
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14161 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14165, metadata !DIExpression()), !dbg !14167
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14168
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14166, metadata !DIExpression()), !dbg !14167
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !14169
  br i1 %3, label %5, label %4, !dbg !14171

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !14172
  br label %5, !dbg !14174

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14165, metadata !DIExpression()), !dbg !14167
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14175
  ret i32 %6, !dbg !14176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14177 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14179, metadata !DIExpression()), !dbg !14181
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14182
  %3 = load i8, i8* %2, align 1, !dbg !14182
  call void @llvm.dbg.value(metadata i8 %3, metadata !14180, metadata !DIExpression()), !dbg !14181
  %4 = and i8 %3, 31, !dbg !14183
  %5 = icmp ne i8 %4, 0, !dbg !14184
  ret i1 %5, !dbg !14185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14186 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14188, metadata !DIExpression()), !dbg !14189
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14190
  br i1 %2, label %3, label %7, !dbg !14192

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14193, metadata !DIExpression()) #25, !dbg !14196
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14199
  %5 = load i8, i8* %4, align 1, !dbg !14200
  %6 = and i8 %5, 127, !dbg !14200
  store i8 %6, i8* %4, align 1, !dbg !14200
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14201, metadata !DIExpression()) #25, !dbg !14204
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14208
  br label %7, !dbg !14209

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14210, metadata !DIExpression()) #25, !dbg !14213
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14215
  %9 = load i8, i8* %8, align 1, !dbg !14216
  %10 = or i8 %9, -128, !dbg !14216
  store i8 %10, i8* %8, align 1, !dbg !14216
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14217, metadata !DIExpression()) #25, !dbg !14220
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14224, metadata !DIExpression()) #25, !dbg !14232
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14230, metadata !DIExpression()) #25, !dbg !14232
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !14234
  br i1 %11, label %12, label %13, !dbg !14237

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 186) #27, !dbg !14238
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 186) #27, !dbg !14238
  unreachable, !dbg !14238

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14240
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14231, metadata !DIExpression()) #25, !dbg !14232
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14242
  br i1 %15, label %26, label %16, !dbg !14240

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14231, metadata !DIExpression()) #25, !dbg !14232
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14244
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14231, metadata !DIExpression()) #25, !dbg !14232
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #27, !dbg !14245
  %20 = icmp sgt i32 %19, 0, !dbg !14248
  br i1 %20, label %21, label %23, !dbg !14249

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14250
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #27, !dbg !14252
  br label %28, !dbg !14253

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #27, !dbg !14242
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14231, metadata !DIExpression()) #25, !dbg !14232
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14242
  br i1 %25, label %26, label %16, !dbg !14240, !llvm.loop !14254

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14256
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #27, !dbg !14257
  br label %28, !dbg !14258

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14259
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14260
  %31 = zext i1 %30 to i32, !dbg !14260
  tail call fastcc void @update_cache(i32 noundef %31) #26, !dbg !14261
  ret void, !dbg !14262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14263 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14265, metadata !DIExpression()), !dbg !14266
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #26, !dbg !14267
  ret i1 %2, !dbg !14268
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14269 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14271, metadata !DIExpression()), !dbg !14273
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14272, metadata !DIExpression()), !dbg !14273
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #26, !dbg !14274
  br i1 %3, label %4, label %5, !dbg !14277

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1139) #27, !dbg !14278
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1139) #27, !dbg !14278
  unreachable, !dbg !14278

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14280
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #26, !dbg !14281
  ret void, !dbg !14282
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !14283 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14285, metadata !DIExpression()), !dbg !14286
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14287
  ret i1 %2, !dbg !14288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14289 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14293, metadata !DIExpression()), !dbg !14294
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !14295
  br i1 %2, label %6, label %3, !dbg !14295

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14296
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14296
  br label %6, !dbg !14295

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14295
  ret %struct._dnode* %7, !dbg !14297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14298 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14302, metadata !DIExpression()), !dbg !14306
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14303, metadata !DIExpression()), !dbg !14306
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14307
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14307
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14304, metadata !DIExpression()), !dbg !14306
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14308
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14309
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14310
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14311
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14312
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14313
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14314
  ret void, !dbg !14315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #7 !dbg !14316 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14320, metadata !DIExpression()), !dbg !14322
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14321, metadata !DIExpression()), !dbg !14322
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14323
  br i1 %3, label %6, label %4, !dbg !14324

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !14325
  br label %6, !dbg !14324

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14324
  ret %struct._dnode* %7, !dbg !14326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14327 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14331, metadata !DIExpression()), !dbg !14334
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14332, metadata !DIExpression()), !dbg !14334
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14335
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14335
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14333, metadata !DIExpression()), !dbg !14334
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14336
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14337
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14338
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14339
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14340
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14341
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14342
  ret void, !dbg !14343
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14344 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14346, metadata !DIExpression()), !dbg !14348
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14349
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14356, metadata !DIExpression()) #25, !dbg !14358
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14359
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14360
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14360
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14347, metadata !DIExpression()), !dbg !14348
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14361, metadata !DIExpression()) #25, !dbg !14367
  call void @llvm.dbg.value(metadata i32 %0, metadata !14366, metadata !DIExpression()) #25, !dbg !14367
  %6 = icmp eq i32 %0, 0, !dbg !14370
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14372
  br i1 %6, label %8, label %18, !dbg !14373

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14374
  br i1 %9, label %10, label %11, !dbg !14377

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.237, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 137) #27, !dbg !14378
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.238, i32 0, i32 0)) #27, !dbg !14378
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 137) #27, !dbg !14378
  unreachable, !dbg !14378

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #27, !dbg !14380
  br i1 %12, label %18, label %13, !dbg !14382

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !14383
  br i1 %14, label %18, label %15, !dbg !14385

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #27, !dbg !14386
  %17 = icmp eq i32 %16, 0, !dbg !14386
  br i1 %17, label %21, label %18, !dbg !14388

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14389
  br i1 %19, label %21, label %20, !dbg !14392

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14393
  br label %21, !dbg !14395

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14372
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14372
  ret void, !dbg !14396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #7 !dbg !14397 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14401, metadata !DIExpression()), !dbg !14404
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14402, metadata !DIExpression()), !dbg !14404
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !14405
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14403, metadata !DIExpression()), !dbg !14404
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14402, metadata !DIExpression()), !dbg !14404
  ret %struct.k_thread* %3, !dbg !14406
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14407 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14409, metadata !DIExpression()), !dbg !14410
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14411
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14412
  %4 = xor i1 %3, true, !dbg !14413
  ret i1 %4, !dbg !14414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14415 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14417, metadata !DIExpression()), !dbg !14418
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14419
  %3 = load i16, i16* %2, align 2, !dbg !14419
  %4 = icmp ult i16 %3, 128, !dbg !14420
  %5 = zext i1 %4 to i32, !dbg !14420
  ret i32 %5, !dbg !14421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14422 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14428, metadata !DIExpression()), !dbg !14429
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14430
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !14431
  %4 = xor i1 %3, true, !dbg !14432
  ret i1 %4, !dbg !14433
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14434 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14440, metadata !DIExpression()), !dbg !14441
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14442
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14442
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14443
  ret i1 %4, !dbg !14444
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #7 !dbg !14445 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14447, metadata !DIExpression()), !dbg !14449
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14448, metadata !DIExpression()), !dbg !14449
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14450
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14450
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14451
  br i1 %5, label %9, label %6, !dbg !14452

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14453
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14453
  br label %9, !dbg !14452

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14452
  ret %struct._dnode* %10, !dbg !14454
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #7 !dbg !14455 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14459, metadata !DIExpression()), !dbg !14460
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14461
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14461
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14462
  ret i1 %4, !dbg !14463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !14464 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14468, metadata !DIExpression()), !dbg !14471
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14472
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14472
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14469, metadata !DIExpression()), !dbg !14471
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14473
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14473
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14470, metadata !DIExpression()), !dbg !14471
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14474
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14475
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14476
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14477
  tail call fastcc void @sys_dnode_init.239(%struct._dnode* noundef %0) #26, !dbg !14478
  ret void, !dbg !14479
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.239(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14480 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14482, metadata !DIExpression()), !dbg !14483
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14484
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14485
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14486
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14487
  ret void, !dbg !14488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #7 !dbg !14489 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14493, metadata !DIExpression()), !dbg !14495
  call void @llvm.dbg.value(metadata i32 %1, metadata !14494, metadata !DIExpression()), !dbg !14495
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14496
  %4 = load i8, i8* %3, align 1, !dbg !14496
  %5 = zext i8 %4 to i32, !dbg !14497
  %6 = and i32 %5, %1, !dbg !14498
  %7 = icmp ne i32 %6, 0, !dbg !14499
  ret i1 %7, !dbg !14500
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14501 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14505, metadata !DIExpression()), !dbg !14507
  call void @llvm.dbg.value(metadata i32 %1, metadata !14506, metadata !DIExpression()), !dbg !14507
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !14508
  ret i1 %3, !dbg !14509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14510 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14512, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata i32 %1, metadata !14513, metadata !DIExpression()), !dbg !14514
  %3 = icmp slt i32 %0, %1, !dbg !14515
  ret i1 %3, !dbg !14516
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14517 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14519, metadata !DIExpression()), !dbg !14523
  call void @llvm.dbg.value(metadata i32 0, metadata !14520, metadata !DIExpression()), !dbg !14524
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !14525
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14527, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !14529
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !14529
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !14525
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14530
  br i1 %3, label %5, label %4, !dbg !14531

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !14532
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14532
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !14532
  unreachable, !dbg !14532

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !14529
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !14525
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14533
  call void @llvm.dbg.value(metadata i32 undef, metadata !14522, metadata !DIExpression()), !dbg !14524
  call void @llvm.dbg.value(metadata i32 undef, metadata !14520, metadata !DIExpression()), !dbg !14524
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14534
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14539
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !14539
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14541
  br i1 %6, label %8, label %7, !dbg !14542

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !14543
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14543
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !14543
  unreachable, !dbg !14543

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14527
  call void @llvm.dbg.value(metadata i32 %9, metadata !14013, metadata !DIExpression()) #25, !dbg !14529
  call void @llvm.dbg.value(metadata i32 %9, metadata !14007, metadata !DIExpression()) #25, !dbg !14525
  call void @llvm.dbg.value(metadata i32 %9, metadata !14522, metadata !DIExpression()), !dbg !14524
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14539
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #25, !dbg !14544
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !14546, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 1, metadata !14520, metadata !DIExpression()), !dbg !14524
  call void @llvm.dbg.value(metadata i32 undef, metadata !14520, metadata !DIExpression()), !dbg !14524
  ret void, !dbg !14547
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14548 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14550, metadata !DIExpression()), !dbg !14551
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14552
  br i1 %2, label %27, label %3, !dbg !14554

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14555
  br i1 %4, label %5, label %27, !dbg !14556

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14210, metadata !DIExpression()) #25, !dbg !14557
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14560
  %7 = load i8, i8* %6, align 1, !dbg !14561
  %8 = or i8 %7, -128, !dbg !14561
  store i8 %8, i8* %6, align 1, !dbg !14561
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14217, metadata !DIExpression()) #25, !dbg !14562
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14224, metadata !DIExpression()) #25, !dbg !14564
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14230, metadata !DIExpression()) #25, !dbg !14564
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !14566
  br i1 %9, label %10, label %11, !dbg !14567

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 186) #27, !dbg !14568
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 186) #27, !dbg !14568
  unreachable, !dbg !14568

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14569
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14231, metadata !DIExpression()) #25, !dbg !14564
  %13 = icmp eq %struct._dnode* %12, null, !dbg !14570
  br i1 %13, label %24, label %14, !dbg !14569

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14231, metadata !DIExpression()) #25, !dbg !14564
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !14571
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14231, metadata !DIExpression()) #25, !dbg !14564
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #27, !dbg !14572
  %18 = icmp sgt i32 %17, 0, !dbg !14573
  br i1 %18, label %19, label %21, !dbg !14574

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14575
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #27, !dbg !14576
  br label %26, !dbg !14577

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #27, !dbg !14570
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14231, metadata !DIExpression()) #25, !dbg !14564
  %23 = icmp eq %struct._dnode* %22, null, !dbg !14570
  br i1 %23, label %24, label %14, !dbg !14569, !llvm.loop !14578

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14580
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #27, !dbg !14581
  br label %26, !dbg !14582

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14583
  br label %27, !dbg !14584

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !14585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14586 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14588, metadata !DIExpression()), !dbg !14589
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14590
  br i1 %2, label %6, label %3, !dbg !14591

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !14592
  %5 = xor i1 %4, true, !dbg !14591
  br label %6, !dbg !14591

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14593
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14594 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14596, metadata !DIExpression()), !dbg !14600
  call void @llvm.dbg.value(metadata i32 0, metadata !14597, metadata !DIExpression()), !dbg !14601
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !14602
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14604, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !14606
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !14606
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !14602
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14607
  br i1 %3, label %5, label %4, !dbg !14608

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !14609
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14609
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !14609
  unreachable, !dbg !14609

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !14606
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !14602
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14610
  call void @llvm.dbg.value(metadata i32 undef, metadata !14599, metadata !DIExpression()), !dbg !14601
  call void @llvm.dbg.value(metadata i32 undef, metadata !14597, metadata !DIExpression()), !dbg !14601
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !14611
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14614
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !14614
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14616
  br i1 %6, label %8, label %7, !dbg !14617

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !14618
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14618
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !14618
  unreachable, !dbg !14618

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14604
  call void @llvm.dbg.value(metadata i32 %9, metadata !14013, metadata !DIExpression()) #25, !dbg !14606
  call void @llvm.dbg.value(metadata i32 %9, metadata !14007, metadata !DIExpression()) #25, !dbg !14602
  call void @llvm.dbg.value(metadata i32 %9, metadata !14599, metadata !DIExpression()), !dbg !14601
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14614
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #25, !dbg !14619
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !14621, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 1, metadata !14597, metadata !DIExpression()), !dbg !14601
  call void @llvm.dbg.value(metadata i32 undef, metadata !14597, metadata !DIExpression()), !dbg !14601
  ret void, !dbg !14622
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14623 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14625, metadata !DIExpression()), !dbg !14627
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !14628
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14630, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !14632
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !14632
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !14628
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14633
  br i1 %3, label %5, label %4, !dbg !14634

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !14635
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14635
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !14635
  unreachable, !dbg !14635

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14630
  call void @llvm.dbg.value(metadata i32 %6, metadata !14013, metadata !DIExpression()) #25, !dbg !14632
  call void @llvm.dbg.value(metadata i32 %6, metadata !14007, metadata !DIExpression()) #25, !dbg !14628
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14636
  call void @llvm.dbg.value(metadata i32 %6, metadata !14626, metadata !DIExpression()), !dbg !14627
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !14637
  br i1 %7, label %8, label %12, !dbg !14639

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14640
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !14640
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14643
  br i1 %9, label %11, label %10, !dbg !14644

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !14645
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14645
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !14645
  unreachable, !dbg !14645

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14035, metadata !DIExpression()) #25, !dbg !14640
  call void @llvm.dbg.value(metadata i32 %6, metadata !14049, metadata !DIExpression()) #25, !dbg !14646
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !14648, !srcloc !14055
  br label %14, !dbg !14649

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.244(%struct.k_thread* noundef %0) #26, !dbg !14650
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14651
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14652
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull @sched_spinlock, [1 x i32] %13) #26, !dbg !14652
  br label %14, !dbg !14653

14:                                               ; preds = %12, %11
  ret void, !dbg !14653
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14654 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14656, metadata !DIExpression()), !dbg !14657
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14658
  %3 = load i8, i8* %2, align 1, !dbg !14658
  %4 = and i8 %3, 4, !dbg !14659
  %5 = icmp eq i8 %4, 0, !dbg !14660
  ret i1 %5, !dbg !14661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.244(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14662 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14664, metadata !DIExpression()), !dbg !14665
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14666
  %3 = load i8, i8* %2, align 1, !dbg !14667
  %4 = and i8 %3, -5, !dbg !14667
  store i8 %4, i8* %2, align 1, !dbg !14667
  ret void, !dbg !14668
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct._sfnode* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14669 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14672, metadata !DIExpression()), !dbg !14673
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !14671, metadata !DIExpression()), !dbg !14673
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !14674
  br i1 %4, label %5, label %12, !dbg !14676

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !14677
  br i1 %6, label %7, label %12, !dbg !14678

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14679, metadata !DIExpression()) #25, !dbg !14685
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !14684, metadata !DIExpression()) #25, !dbg !14685
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !14688, metadata !DIExpression()) #25, !dbg !14693
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef %0) #27, !dbg !14695
  br i1 %8, label %10, label %9, !dbg !14698

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 225) #27, !dbg !14699
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef %0) #27, !dbg !14699
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 225) #27, !dbg !14699
  unreachable, !dbg !14699

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !14679, metadata !DIExpression()) #25, !dbg !14685
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !14701
  br label %16, !dbg !14702

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14703
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !14040, metadata !DIExpression()) #25, !dbg !14703
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef %0) #27, !dbg !14706
  br i1 %13, label %15, label %14, !dbg !14707

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !14708
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef %0) #27, !dbg !14708
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !14708
  unreachable, !dbg !14708

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14035, metadata !DIExpression()) #25, !dbg !14703
  call void @llvm.dbg.value(metadata i32 %3, metadata !14049, metadata !DIExpression()) #25, !dbg !14709
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14711, !srcloc !14055
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !14712
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14713 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14717, metadata !DIExpression()), !dbg !14718
  call void @llvm.dbg.value(metadata i32 %0, metadata !14719, metadata !DIExpression()), !dbg !14724
  %2 = icmp eq i32 %0, 0, !dbg !14726
  br i1 %2, label %3, label %6, !dbg !14727

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !14728, !srcloc !14735
  call void @llvm.dbg.value(metadata i32 %4, metadata !14731, metadata !DIExpression()) #25, !dbg !14736
  %5 = icmp eq i32 %4, 0, !dbg !14737
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14718
  ret i1 %7, !dbg !14738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #7 !dbg !14739 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14742
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14741, metadata !DIExpression()), !dbg !14743
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14744
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14745
  ret i1 %3, !dbg !14746
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14747 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14749, metadata !DIExpression()), !dbg !14751
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !14752
  call void @llvm.dbg.value(metadata i32 %2, metadata !14750, metadata !DIExpression()), !dbg !14751
  ret i32 %2, !dbg !14753
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14754 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14756, metadata !DIExpression()), !dbg !14760
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14761
  call void @llvm.dbg.value(metadata i32 0, metadata !14757, metadata !DIExpression()), !dbg !14762
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !14763
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14765, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !14767
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !14767
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !14763
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14768
  br i1 %4, label %6, label %5, !dbg !14769

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !14770
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14770
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !14770
  unreachable, !dbg !14770

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14765
  call void @llvm.dbg.value(metadata i32 %7, metadata !14013, metadata !DIExpression()) #25, !dbg !14767
  call void @llvm.dbg.value(metadata i32 %7, metadata !14007, metadata !DIExpression()) #25, !dbg !14763
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14771
  call void @llvm.dbg.value(metadata i32 %7, metadata !14759, metadata !DIExpression()), !dbg !14762
  call void @llvm.dbg.value(metadata i32 undef, metadata !14757, metadata !DIExpression()), !dbg !14762
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14772
  br i1 %8, label %9, label %13, !dbg !14776

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14193, metadata !DIExpression()) #25, !dbg !14777
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14780
  %11 = load i8, i8* %10, align 1, !dbg !14781
  %12 = and i8 %11, 127, !dbg !14781
  store i8 %12, i8* %10, align 1, !dbg !14781
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14201, metadata !DIExpression()) #25, !dbg !14782
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14784
  br label %13, !dbg !14785

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !14786
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14787
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14788
  %16 = zext i1 %15 to i32, !dbg !14788
  tail call fastcc void @update_cache(i32 noundef %16) #26, !dbg !14789
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14790
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !14790
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14792
  br i1 %17, label %19, label %18, !dbg !14793

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !14794
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14794
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !14794
  unreachable, !dbg !14794

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14035, metadata !DIExpression()) #25, !dbg !14790
  call void @llvm.dbg.value(metadata i32 %7, metadata !14049, metadata !DIExpression()) #25, !dbg !14795
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #25, !dbg !14797, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 1, metadata !14757, metadata !DIExpression()), !dbg !14762
  call void @llvm.dbg.value(metadata i32 undef, metadata !14757, metadata !DIExpression()), !dbg !14762
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14798
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !14800
  br i1 %21, label %22, label %23, !dbg !14801

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14802
  br label %23, !dbg !14804

23:                                               ; preds = %22, %19
  ret void, !dbg !14805
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14806 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14808, metadata !DIExpression()), !dbg !14809
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14810
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !14811
  ret i32 %3, !dbg !14812
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14813 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14815, metadata !DIExpression()), !dbg !14816
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14817
  %3 = load i8, i8* %2, align 1, !dbg !14818
  %4 = or i8 %3, 16, !dbg !14818
  store i8 %4, i8* %2, align 1, !dbg !14818
  ret void, !dbg !14819
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14820 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14821, !srcloc !14016
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14821
  call void @llvm.dbg.value(metadata i32 %2, metadata !14013, metadata !DIExpression()) #25, !dbg !14823
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !14823
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !14824
  ret void, !dbg !14825
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14826 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14828, metadata !DIExpression()), !dbg !14829
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !14830
  br i1 %2, label %3, label %5, !dbg !14832

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !14833
  br label %6, !dbg !14835

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14049, metadata !DIExpression()) #25, !dbg !14836
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !14839, !srcloc !14055
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14840
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14841 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14843, metadata !DIExpression()), !dbg !14845
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !14846
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14848, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !14850
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !14850
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !14846
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14851
  br i1 %3, label %5, label %4, !dbg !14852

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !14853
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14853
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !14853
  unreachable, !dbg !14853

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14848
  call void @llvm.dbg.value(metadata i32 %6, metadata !14013, metadata !DIExpression()) #25, !dbg !14850
  call void @llvm.dbg.value(metadata i32 %6, metadata !14007, metadata !DIExpression()) #25, !dbg !14846
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14854
  call void @llvm.dbg.value(metadata i32 %6, metadata !14844, metadata !DIExpression()), !dbg !14845
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !14855
  br i1 %7, label %12, label %8, !dbg !14857

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14858
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !14858
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14861
  br i1 %9, label %11, label %10, !dbg !14862

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !14863
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14863
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !14863
  unreachable, !dbg !14863

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14035, metadata !DIExpression()) #25, !dbg !14858
  call void @llvm.dbg.value(metadata i32 %6, metadata !14049, metadata !DIExpression()) #25, !dbg !14864
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !14866, !srcloc !14055
  br label %14, !dbg !14867

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !14868
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14869
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14870
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull @sched_spinlock, [1 x i32] %13) #26, !dbg !14870
  br label %14, !dbg !14871

14:                                               ; preds = %12, %11
  ret void, !dbg !14871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14872 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14874, metadata !DIExpression()), !dbg !14875
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14876
  %3 = load i8, i8* %2, align 1, !dbg !14876
  %4 = and i8 %3, 16, !dbg !14877
  %5 = icmp ne i8 %4, 0, !dbg !14878
  ret i1 %5, !dbg !14879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14880 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14882, metadata !DIExpression()), !dbg !14883
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14884
  %3 = load i8, i8* %2, align 1, !dbg !14885
  %4 = and i8 %3, -17, !dbg !14885
  store i8 %4, i8* %2, align 1, !dbg !14885
  ret void, !dbg !14886
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14887 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14897, metadata !DIExpression()), !dbg !14901
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14895, metadata !DIExpression()), !dbg !14901
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14896, metadata !DIExpression()), !dbg !14901
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14902
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !14902
  br i1 %5, label %9, label %6, !dbg !14902

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #26, !dbg !14902
  br i1 %7, label %9, label %8, !dbg !14905

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 773) #27, !dbg !14906
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 773) #27, !dbg !14906
  unreachable, !dbg !14906

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !14898, metadata !DIExpression()), !dbg !14908
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !14909
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14911, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !14913
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !14913
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !14909
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14914
  br i1 %11, label %13, label %12, !dbg !14915

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !14916
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14916
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !14916
  unreachable, !dbg !14916

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !14913
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !14909
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14917
  call void @llvm.dbg.value(metadata i32 undef, metadata !14900, metadata !DIExpression()), !dbg !14908
  call void @llvm.dbg.value(metadata i32 undef, metadata !14898, metadata !DIExpression()), !dbg !14908
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !14918
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14921
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !14921
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14923
  br i1 %14, label %16, label %15, !dbg !14924

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !14925
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14925
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !14925
  unreachable, !dbg !14925

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !14911
  call void @llvm.dbg.value(metadata i32 %17, metadata !14013, metadata !DIExpression()) #25, !dbg !14913
  call void @llvm.dbg.value(metadata i32 %17, metadata !14007, metadata !DIExpression()) #25, !dbg !14909
  call void @llvm.dbg.value(metadata i32 %17, metadata !14900, metadata !DIExpression()), !dbg !14908
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14921
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #25, !dbg !14926
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #25, !dbg !14928, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 1, metadata !14898, metadata !DIExpression()), !dbg !14908
  call void @llvm.dbg.value(metadata i32 undef, metadata !14898, metadata !DIExpression()), !dbg !14908
  ret void, !dbg !14929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14930 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14932, metadata !DIExpression()), !dbg !14933
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14934
  %3 = load i8, i8* %2, align 1, !dbg !14934
  %4 = and i8 %3, 1, !dbg !14935
  %5 = icmp ne i8 %4, 0, !dbg !14936
  ret i1 %5, !dbg !14937
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14938 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14942, metadata !DIExpression()), !dbg !14943
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14940, metadata !DIExpression()), !dbg !14943
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14941, metadata !DIExpression()), !dbg !14943
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #26, !dbg !14944
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !14945
  ret void, !dbg !14946
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !14947 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14951, metadata !DIExpression()), !dbg !14953
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14952, metadata !DIExpression()), !dbg !14953
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !14954
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !14955
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !14956
  br i1 %3, label %24, label %4, !dbg !14958

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14959
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !14961
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !14962
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14224, metadata !DIExpression()) #25, !dbg !14963
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14230, metadata !DIExpression()) #25, !dbg !14963
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !14965
  br i1 %7, label %8, label %9, !dbg !14966

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 186) #27, !dbg !14967
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 186) #27, !dbg !14967
  unreachable, !dbg !14967

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #27, !dbg !14968
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14231, metadata !DIExpression()) #25, !dbg !14963
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14969
  br i1 %11, label %22, label %12, !dbg !14968

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14231, metadata !DIExpression()) #25, !dbg !14963
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14970
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14231, metadata !DIExpression()) #25, !dbg !14963
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #27, !dbg !14971
  %16 = icmp sgt i32 %15, 0, !dbg !14972
  br i1 %16, label %17, label %19, !dbg !14973

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14974
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !14975
  br label %24, !dbg !14976

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #27, !dbg !14969
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14231, metadata !DIExpression()) #25, !dbg !14963
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14969
  br i1 %21, label %22, label %12, !dbg !14968, !llvm.loop !14977

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14979
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #27, !dbg !14980
  br label %24, !dbg !14981

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !14982
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14983 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14988, metadata !DIExpression()), !dbg !14989
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14987, metadata !DIExpression()), !dbg !14989
  %4 = icmp eq i64 %3, -1, !dbg !14990
  br i1 %4, label %6, label %5, !dbg !14992

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.248(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14993
  br label %6, !dbg !14995

6:                                                ; preds = %5, %2
  ret void, !dbg !14996
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.248(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14997 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15000, metadata !DIExpression()), !dbg !15001
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14999, metadata !DIExpression()), !dbg !15001
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15002
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !15003
  ret void, !dbg !15004
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15005 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15007, metadata !DIExpression()), !dbg !15015
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15016
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15016
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15008, metadata !DIExpression()), !dbg !15015
  call void @llvm.dbg.value(metadata i32 0, metadata !15009, metadata !DIExpression()), !dbg !15017
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !15018
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15020, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15022
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !15022
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15018
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15023
  br i1 %5, label %7, label %6, !dbg !15024

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15025
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15025
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15025
  unreachable, !dbg !15025

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15022
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15018
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15026
  call void @llvm.dbg.value(metadata i32 undef, metadata !15011, metadata !DIExpression()), !dbg !15017
  call void @llvm.dbg.value(metadata i32 undef, metadata !15009, metadata !DIExpression()), !dbg !15017
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15027
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15028
  %10 = load i8, i8* %9, align 1, !dbg !15028
  %11 = and i8 %10, 40, !dbg !15029
  %12 = icmp eq i8 %11, 0, !dbg !15029
  call void @llvm.dbg.value(metadata i1 %12, metadata !15012, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15030
  br i1 %12, label %13, label %20, !dbg !15031

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15032
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !15032
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !15032
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !15036
  br i1 %17, label %19, label %18, !dbg !15037

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !15038
  br label %19, !dbg !15040

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.244(%struct.k_thread* noundef nonnull %3) #26, !dbg !15041
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !15042
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !15043
  br label %20, !dbg !15044

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15045
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !15045
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15047
  br i1 %21, label %23, label %22, !dbg !15048

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !15049
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15049
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !15049
  unreachable, !dbg !15049

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15020
  call void @llvm.dbg.value(metadata i32 %24, metadata !14013, metadata !DIExpression()) #25, !dbg !15022
  call void @llvm.dbg.value(metadata i32 %24, metadata !14007, metadata !DIExpression()) #25, !dbg !15018
  call void @llvm.dbg.value(metadata i32 %24, metadata !15011, metadata !DIExpression()), !dbg !15017
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15045
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #25, !dbg !15050
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #25, !dbg !15052, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 1, metadata !15009, metadata !DIExpression()), !dbg !15017
  call void @llvm.dbg.value(metadata i32 undef, metadata !15009, metadata !DIExpression()), !dbg !15017
  ret void, !dbg !15053
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15054 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15056, metadata !DIExpression()), !dbg !15057
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #26, !dbg !15058
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15059
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !15060
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15061
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !15062
  ret void, !dbg !15063
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15064 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15068, metadata !DIExpression()), !dbg !15069
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15070
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !15070
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !15070
  br i1 %4, label %5, label %6, !dbg !15073

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 726) #27, !dbg !15074
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 726) #27, !dbg !15074
  unreachable, !dbg !15074

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !15076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15077 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15079, metadata !DIExpression()), !dbg !15080
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15081
  %3 = load i8, i8* %2, align 1, !dbg !15082
  %4 = and i8 %3, -3, !dbg !15082
  store i8 %4, i8* %2, align 1, !dbg !15082
  ret void, !dbg !15083
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15084 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15086, metadata !DIExpression()), !dbg !15087
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15088
  br i1 %2, label %3, label %7, !dbg !15090

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14193, metadata !DIExpression()) #25, !dbg !15091
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15094
  %5 = load i8, i8* %4, align 1, !dbg !15095
  %6 = and i8 %5, 127, !dbg !15095
  store i8 %6, i8* %4, align 1, !dbg !15095
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14201, metadata !DIExpression()) #25, !dbg !15096
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15098
  br label %7, !dbg !15099

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15100
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15101
  %10 = zext i1 %9 to i32, !dbg !15101
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !15102
  ret void, !dbg !15103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15104 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15106, metadata !DIExpression()), !dbg !15107
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15108
  %3 = load i8, i8* %2, align 1, !dbg !15109
  %4 = or i8 %3, 2, !dbg !15109
  store i8 %4, i8* %2, align 1, !dbg !15109
  ret void, !dbg !15110
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #23 !dbg !15111 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15113, metadata !DIExpression()), !dbg !15117
  call void @llvm.dbg.value(metadata i32 0, metadata !15114, metadata !DIExpression()), !dbg !15118
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !15119
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15121, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15123
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !15123
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15119
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15124
  br i1 %3, label %5, label %4, !dbg !15125

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15126
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15126
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15126
  unreachable, !dbg !15126

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15123
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15119
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15127
  call void @llvm.dbg.value(metadata i32 undef, metadata !15116, metadata !DIExpression()), !dbg !15118
  call void @llvm.dbg.value(metadata i32 undef, metadata !15114, metadata !DIExpression()), !dbg !15118
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !15128
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15131
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !15131
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15133
  br i1 %6, label %8, label %7, !dbg !15134

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !15135
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15135
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !15135
  unreachable, !dbg !15135

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15121
  call void @llvm.dbg.value(metadata i32 %9, metadata !14013, metadata !DIExpression()) #25, !dbg !15123
  call void @llvm.dbg.value(metadata i32 %9, metadata !14007, metadata !DIExpression()) #25, !dbg !15119
  call void @llvm.dbg.value(metadata i32 %9, metadata !15116, metadata !DIExpression()), !dbg !15118
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15131
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #25, !dbg !15136
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !15138, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 1, metadata !15114, metadata !DIExpression()), !dbg !15118
  call void @llvm.dbg.value(metadata i32 undef, metadata !15114, metadata !DIExpression()), !dbg !15118
  ret void, !dbg !15139
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15140 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15146, metadata !DIExpression()), !dbg !15151
  call void @llvm.dbg.value(metadata i32 %0, metadata !15144, metadata !DIExpression()), !dbg !15151
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15145, metadata !DIExpression()), !dbg !15151
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15152
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !15153
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15154
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15155
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15156
  call void @llvm.dbg.value(metadata i32 %6, metadata !15147, metadata !DIExpression()), !dbg !15151
  call void @llvm.dbg.value(metadata i32 0, metadata !15148, metadata !DIExpression()), !dbg !15157
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !15158
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15160, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15162
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !15162
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15158
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15163
  br i1 %8, label %10, label %9, !dbg !15164

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15165
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15165
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15165
  unreachable, !dbg !15165

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15162
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15158
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15166
  call void @llvm.dbg.value(metadata i32 undef, metadata !15150, metadata !DIExpression()), !dbg !15157
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()), !dbg !15157
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15167
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15171
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15172
  br i1 %13, label %14, label %15, !dbg !15173

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15174
  br label %15, !dbg !15176

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15177
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !15177
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15179
  br i1 %16, label %18, label %17, !dbg !15180

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !15181
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15181
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !15181
  unreachable, !dbg !15181

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15160
  call void @llvm.dbg.value(metadata i32 %19, metadata !14013, metadata !DIExpression()) #25, !dbg !15162
  call void @llvm.dbg.value(metadata i32 %19, metadata !14007, metadata !DIExpression()) #25, !dbg !15158
  call void @llvm.dbg.value(metadata i32 %19, metadata !15150, metadata !DIExpression()), !dbg !15157
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15177
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #25, !dbg !15182
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #25, !dbg !15184, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 1, metadata !15148, metadata !DIExpression()), !dbg !15157
  call void @llvm.dbg.value(metadata i32 undef, metadata !15148, metadata !DIExpression()), !dbg !15157
  ret i32 %6, !dbg !15185
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct._sfnode* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15186 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15191, metadata !DIExpression()), !dbg !15194
  call void @llvm.dbg.value(metadata i64 undef, metadata !15193, metadata !DIExpression()), !dbg !15194
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !15190, metadata !DIExpression()), !dbg !15194
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15192, metadata !DIExpression()), !dbg !15194
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15195
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15196
  %6 = icmp eq %struct._sfnode* %0, @sched_spinlock, !dbg !15197
  br i1 %6, label %7, label %8, !dbg !15200

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 846) #27, !dbg !15201
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 846) #27, !dbg !15201
  unreachable, !dbg !15201

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !15203
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15205, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15207
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !15207
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15203
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15208
  br i1 %10, label %12, label %11, !dbg !15209

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15210
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15210
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15210
  unreachable, !dbg !15210

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15207
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15203
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15211
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15212
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !15213
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !14688, metadata !DIExpression()) #25, !dbg !15214
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef %0) #27, !dbg !15216
  br i1 %14, label %16, label %15, !dbg !15217

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 225) #27, !dbg !15218
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef %0) #27, !dbg !15218
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 225) #27, !dbg !15218
  unreachable, !dbg !15218

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !14679, metadata !DIExpression()) #25, !dbg !15219
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14684, metadata !DIExpression()) #25, !dbg !15219
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14688, metadata !DIExpression()) #25, !dbg !15221
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15223
  br i1 %17, label %19, label %18, !dbg !15224

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 225) #27, !dbg !15225
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15225
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 225) #27, !dbg !15225
  unreachable, !dbg !15225

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !14679, metadata !DIExpression()) #25, !dbg !15219
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #27, !dbg !15226
  ret i32 %21, !dbg !15227
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15228 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15232, metadata !DIExpression()), !dbg !15237
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15233, metadata !DIExpression()), !dbg !15237
  call void @llvm.dbg.value(metadata i32 0, metadata !15234, metadata !DIExpression()), !dbg !15238
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !15239
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15241, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15243
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !15243
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15239
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15244
  br i1 %3, label %5, label %4, !dbg !15245

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15246
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15246
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15246
  unreachable, !dbg !15246

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15243
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15239
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15247
  call void @llvm.dbg.value(metadata i32 undef, metadata !15236, metadata !DIExpression()), !dbg !15238
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15233, metadata !DIExpression()), !dbg !15237
  call void @llvm.dbg.value(metadata i32 undef, metadata !15234, metadata !DIExpression()), !dbg !15238
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #26, !dbg !15248
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15233, metadata !DIExpression()), !dbg !15237
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15251
  br i1 %8, label %10, label %9, !dbg !15253

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #26, !dbg !15254
  br label %10, !dbg !15256

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15257
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !15257
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15259
  br i1 %11, label %13, label %12, !dbg !15260

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !15261
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15261
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !15261
  unreachable, !dbg !15261

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15241
  call void @llvm.dbg.value(metadata i32 %14, metadata !14013, metadata !DIExpression()) #25, !dbg !15243
  call void @llvm.dbg.value(metadata i32 %14, metadata !14007, metadata !DIExpression()) #25, !dbg !15239
  call void @llvm.dbg.value(metadata i32 %14, metadata !15236, metadata !DIExpression()), !dbg !15238
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15257
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #25, !dbg !15262
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !15264, !srcloc !14055
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15233, metadata !DIExpression()), !dbg !15237
  call void @llvm.dbg.value(metadata i32 undef, metadata !15234, metadata !DIExpression()), !dbg !15238
  ret %struct.k_thread* %7, !dbg !15265
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15266 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15268, metadata !DIExpression()), !dbg !15273
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15269, metadata !DIExpression()), !dbg !15273
  call void @llvm.dbg.value(metadata i32 0, metadata !15270, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !15275
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15277, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15279
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !15279
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15275
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15280
  br i1 %3, label %5, label %4, !dbg !15281

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15282
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15282
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15282
  unreachable, !dbg !15282

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15279
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15275
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15283
  call void @llvm.dbg.value(metadata i32 undef, metadata !15272, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15269, metadata !DIExpression()), !dbg !15273
  call void @llvm.dbg.value(metadata i32 undef, metadata !15270, metadata !DIExpression()), !dbg !15274
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #26, !dbg !15284
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15269, metadata !DIExpression()), !dbg !15273
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15287
  br i1 %8, label %11, label %9, !dbg !15289

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #26, !dbg !15290
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #26, !dbg !15292
  br label %11, !dbg !15293

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15294
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !15294
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15296
  br i1 %12, label %14, label %13, !dbg !15297

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !15298
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15298
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !15298
  unreachable, !dbg !15298

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15277
  call void @llvm.dbg.value(metadata i32 %15, metadata !14013, metadata !DIExpression()) #25, !dbg !15279
  call void @llvm.dbg.value(metadata i32 %15, metadata !14007, metadata !DIExpression()) #25, !dbg !15275
  call void @llvm.dbg.value(metadata i32 %15, metadata !15272, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15294
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #25, !dbg !15299
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !15301, !srcloc !14055
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15269, metadata !DIExpression()), !dbg !15273
  call void @llvm.dbg.value(metadata i32 undef, metadata !15270, metadata !DIExpression()), !dbg !15274
  ret %struct.k_thread* %7, !dbg !15302
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15303 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15305, metadata !DIExpression()), !dbg !15306
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15113, metadata !DIExpression()) #25, !dbg !15307
  call void @llvm.dbg.value(metadata i32 0, metadata !15114, metadata !DIExpression()) #25, !dbg !15309
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !15310
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15312, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15314
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !15314
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15310
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15315
  br i1 %3, label %5, label %4, !dbg !15316

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15317
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15317
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15317
  unreachable, !dbg !15317

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15314
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15310
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15318
  call void @llvm.dbg.value(metadata i32 undef, metadata !15116, metadata !DIExpression()) #25, !dbg !15309
  call void @llvm.dbg.value(metadata i32 undef, metadata !15114, metadata !DIExpression()) #25, !dbg !15309
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !15319
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15320
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !15320
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15322
  br i1 %6, label %8, label %7, !dbg !15323

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !15324
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15324
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !15324
  unreachable, !dbg !15324

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15312
  call void @llvm.dbg.value(metadata i32 %9, metadata !14013, metadata !DIExpression()) #25, !dbg !15314
  call void @llvm.dbg.value(metadata i32 %9, metadata !14007, metadata !DIExpression()) #25, !dbg !15310
  call void @llvm.dbg.value(metadata i32 %9, metadata !15116, metadata !DIExpression()) #25, !dbg !15309
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15320
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #25, !dbg !15325
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !15327, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 1, metadata !15114, metadata !DIExpression()) #25, !dbg !15309
  call void @llvm.dbg.value(metadata i32 undef, metadata !15114, metadata !DIExpression()) #25, !dbg !15309
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15328
  ret void, !dbg !15329
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15330 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15332, metadata !DIExpression()), !dbg !15338
  call void @llvm.dbg.value(metadata i32 %1, metadata !15333, metadata !DIExpression()), !dbg !15338
  call void @llvm.dbg.value(metadata i8 0, metadata !15334, metadata !DIExpression()), !dbg !15338
  call void @llvm.dbg.value(metadata i32 0, metadata !15335, metadata !DIExpression()), !dbg !15339
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !15340
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15342, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15344
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !15344
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15340
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15345
  br i1 %4, label %6, label %5, !dbg !15346

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15347
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15347
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15347
  unreachable, !dbg !15347

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15344
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15340
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15348
  call void @llvm.dbg.value(metadata i32 undef, metadata !15337, metadata !DIExpression()), !dbg !15339
  call void @llvm.dbg.value(metadata i8 poison, metadata !15334, metadata !DIExpression()), !dbg !15338
  call void @llvm.dbg.value(metadata i32 undef, metadata !15335, metadata !DIExpression()), !dbg !15339
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15349
  call void @llvm.dbg.value(metadata i1 %9, metadata !15334, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15338
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15352

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14193, metadata !DIExpression()) #25, !dbg !15353
  %14 = load i8, i8* %7, align 1, !dbg !15359
  %15 = and i8 %14, 127, !dbg !15359
  store i8 %15, i8* %7, align 1, !dbg !15359
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14201, metadata !DIExpression()) #25, !dbg !15360
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15362
  store i8 %12, i8* %11, align 2, !dbg !15363
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14210, metadata !DIExpression()) #25, !dbg !15364
  %16 = load i8, i8* %7, align 1, !dbg !15366
  %17 = or i8 %16, -128, !dbg !15366
  store i8 %17, i8* %7, align 1, !dbg !15366
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14217, metadata !DIExpression()) #25, !dbg !15367
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14224, metadata !DIExpression()) #25, !dbg !15369
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14230, metadata !DIExpression()) #25, !dbg !15369
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !15371
  br i1 %18, label %19, label %20, !dbg !15372

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 186) #27, !dbg !15373
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 186) #27, !dbg !15373
  unreachable, !dbg !15373

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15374
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14231, metadata !DIExpression()) #25, !dbg !15369
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15375
  br i1 %22, label %32, label %23, !dbg !15374

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14231, metadata !DIExpression()) #25, !dbg !15369
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15376
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14231, metadata !DIExpression()) #25, !dbg !15369
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #27, !dbg !15377
  %27 = icmp sgt i32 %26, 0, !dbg !15378
  br i1 %27, label %28, label %29, !dbg !15379

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #27, !dbg !15380
  br label %33, !dbg !15381

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #27, !dbg !15375
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14231, metadata !DIExpression()) #25, !dbg !15369
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15375
  br i1 %31, label %32, label %23, !dbg !15374, !llvm.loop !15382

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #27, !dbg !15384
  br label %33, !dbg !15385

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15386
  br label %35, !dbg !15387

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15388
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15390
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !15390
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15392
  br i1 %36, label %38, label %37, !dbg !15393

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !15394
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15394
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !15394
  unreachable, !dbg !15394

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15342
  call void @llvm.dbg.value(metadata i32 %39, metadata !14013, metadata !DIExpression()) #25, !dbg !15344
  call void @llvm.dbg.value(metadata i32 %39, metadata !14007, metadata !DIExpression()) #25, !dbg !15340
  call void @llvm.dbg.value(metadata i32 %39, metadata !15337, metadata !DIExpression()), !dbg !15339
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15390
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #25, !dbg !15395
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #25, !dbg !15397, !srcloc !14055
  call void @llvm.dbg.value(metadata i8 poison, metadata !15334, metadata !DIExpression()), !dbg !15338
  call void @llvm.dbg.value(metadata i32 undef, metadata !15335, metadata !DIExpression()), !dbg !15339
  ret i1 %9, !dbg !15398
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15399 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15403, metadata !DIExpression()), !dbg !15406
  call void @llvm.dbg.value(metadata i32 %1, metadata !15404, metadata !DIExpression()), !dbg !15406
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15407
  call void @llvm.dbg.value(metadata i1 %3, metadata !15405, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15406
  br i1 %3, label %4, label %12, !dbg !15408

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15410
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15411
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15411
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15411
  %9 = load i8, i8* %8, align 1, !dbg !15411
  %10 = icmp eq i8 %9, 0, !dbg !15412
  br i1 %10, label %11, label %12, !dbg !15413

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15414
  br label %12, !dbg !15416

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15417
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15418 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15420, metadata !DIExpression()), !dbg !15423
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !15424
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15426, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15428
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !15428
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15424
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15429
  br i1 %2, label %4, label %3, !dbg !15430

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15431
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15431
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15431
  unreachable, !dbg !15431

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15428
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15424
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15432
  call void @llvm.dbg.value(metadata i32 undef, metadata !15422, metadata !DIExpression()), !dbg !15423
  call void @llvm.dbg.value(metadata i32 undef, metadata !15420, metadata !DIExpression()), !dbg !15423
  tail call fastcc void @z_sched_lock() #26, !dbg !15433
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15436
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !15436
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15438
  br i1 %5, label %7, label %6, !dbg !15439

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !15440
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15440
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !15440
  unreachable, !dbg !15440

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15426
  call void @llvm.dbg.value(metadata i32 %8, metadata !14013, metadata !DIExpression()) #25, !dbg !15428
  call void @llvm.dbg.value(metadata i32 %8, metadata !14007, metadata !DIExpression()) #25, !dbg !15424
  call void @llvm.dbg.value(metadata i32 %8, metadata !15422, metadata !DIExpression()), !dbg !15423
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15436
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #25, !dbg !15441
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !15443, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 1, metadata !15420, metadata !DIExpression()), !dbg !15423
  call void @llvm.dbg.value(metadata i32 undef, metadata !15420, metadata !DIExpression()), !dbg !15423
  ret void, !dbg !15444
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15445 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15446, !srcloc !14735
  call void @llvm.dbg.value(metadata i32 %1, metadata !14731, metadata !DIExpression()) #25, !dbg !15451
  %2 = icmp eq i32 %1, 0, !dbg !15452
  br i1 %2, label %4, label %3, !dbg !15453

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.260, i32 0, i32 0), i32 noundef 253) #27, !dbg !15454
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.238, i32 0, i32 0)) #27, !dbg !15454
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.260, i32 0, i32 0), i32 noundef 253) #27, !dbg !15454
  unreachable, !dbg !15454

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15456
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15456
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15456
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15456
  %9 = load i8, i8* %8, align 1, !dbg !15456
  %10 = icmp eq i8 %9, 1, !dbg !15456
  br i1 %10, label %11, label %12, !dbg !15459

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.260, i32 0, i32 0), i32 noundef 254) #27, !dbg !15460
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.238, i32 0, i32 0)) #27, !dbg !15460
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.260, i32 0, i32 0), i32 noundef 254) #27, !dbg !15460
  unreachable, !dbg !15460

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15462
  store i8 %13, i8* %8, align 1, !dbg !15462
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15463, !srcloc !15465
  ret void, !dbg !15466
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15467 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15469, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !15473
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15475, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15477
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !15477
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15473
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15478
  br i1 %2, label %4, label %3, !dbg !15479

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15480
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15480
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15480
  unreachable, !dbg !15480

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15477
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15473
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15481
  call void @llvm.dbg.value(metadata i32 undef, metadata !15471, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata i32 undef, metadata !15469, metadata !DIExpression()), !dbg !15472
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15482
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15482
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15482
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15482
  %9 = load i8, i8* %8, align 1, !dbg !15482
  %10 = icmp eq i8 %9, 0, !dbg !15482
  br i1 %10, label %11, label %12, !dbg !15487

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 999) #27, !dbg !15488
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.238, i32 0, i32 0)) #27, !dbg !15488
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 999) #27, !dbg !15488
  unreachable, !dbg !15488

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15490, !srcloc !14735
  call void @llvm.dbg.value(metadata i32 %13, metadata !14731, metadata !DIExpression()) #25, !dbg !15495
  %14 = icmp eq i32 %13, 0, !dbg !15496
  br i1 %14, label %16, label %15, !dbg !15497

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1000) #27, !dbg !15498
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.238, i32 0, i32 0)) #27, !dbg !15498
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1000) #27, !dbg !15498
  unreachable, !dbg !15498

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15500
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15501
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15501
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15501
  %21 = load i8, i8* %20, align 1, !dbg !15502
  %22 = add i8 %21, 1, !dbg !15502
  store i8 %22, i8* %20, align 1, !dbg !15502
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15503
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15504
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !15504
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15506
  br i1 %23, label %25, label %24, !dbg !15507

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !15508
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15508
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !15508
  unreachable, !dbg !15508

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15475
  call void @llvm.dbg.value(metadata i32 %26, metadata !14013, metadata !DIExpression()) #25, !dbg !15477
  call void @llvm.dbg.value(metadata i32 %26, metadata !14007, metadata !DIExpression()) #25, !dbg !15473
  call void @llvm.dbg.value(metadata i32 %26, metadata !15471, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !15504
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #25, !dbg !15509
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #25, !dbg !15511, !srcloc !14055
  call void @llvm.dbg.value(metadata i32 1, metadata !15469, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata i32 undef, metadata !15469, metadata !DIExpression()), !dbg !15472
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15512
  ret void, !dbg !15513
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #7 !dbg !15514 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15515
  ret %struct.k_thread* %1, !dbg !15516
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #7 !dbg !15517 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15521, metadata !DIExpression()), !dbg !15526
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15522, metadata !DIExpression()), !dbg !15526
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15527
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15523, metadata !DIExpression()), !dbg !15526
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15528
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15524, metadata !DIExpression()), !dbg !15526
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !15529
  call void @llvm.dbg.value(metadata i32 %5, metadata !15525, metadata !DIExpression()), !dbg !15526
  %6 = icmp sgt i32 %5, 0, !dbg !15530
  br i1 %6, label %17, label %7, !dbg !15532

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15533
  br i1 %8, label %17, label %9, !dbg !15535

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15536
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15536
  %12 = load i32, i32* %11, align 8, !dbg !15536
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15538
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15538
  %15 = load i32, i32* %14, align 8, !dbg !15538
  %16 = icmp ult i32 %12, %15, !dbg !15539
  br label %17, !dbg !15540

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15541
  ret i1 %18, !dbg !15542
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15543 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15560, metadata !DIExpression()), !dbg !15575
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15561, metadata !DIExpression()), !dbg !15575
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #26, !dbg !15576
  br i1 %4, label %5, label %6, !dbg !15579

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1179) #27, !dbg !15580
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1179) #27, !dbg !15580
  unreachable, !dbg !15580

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15582
  %8 = load i32, i32* %7, align 4, !dbg !15583
  %9 = add nsw i32 %8, 1, !dbg !15583
  store i32 %9, i32* %7, align 4, !dbg !15583
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15584
  store i32 %8, i32* %10, align 8, !dbg !15585
  %11 = load i32, i32* %7, align 4, !dbg !15586
  %12 = icmp eq i32 %11, 0, !dbg !15587
  br i1 %12, label %13, label %35, !dbg !15588

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15589
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #25, !dbg !15589
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15563, metadata !DIExpression()), !dbg !15589
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15589
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15589
  %17 = load i32, i32* %16, align 4, !dbg !15589
  %18 = shl i32 %17, 2, !dbg !15589
  %19 = alloca i8, i32 %18, align 8, !dbg !15589
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15589
  store i8* %19, i8** %20, align 4, !dbg !15589
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15589
  %22 = alloca i8, i32 %17, align 8, !dbg !15589
  store i8* %22, i8** %21, align 4, !dbg !15589
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15589
  store i32 -1, i32* %23, align 4, !dbg !15589
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !15590
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15572, metadata !DIExpression()), !dbg !15591
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15562, metadata !DIExpression()), !dbg !15575
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !15592
  br i1 %25, label %26, label %27, !dbg !15589

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #25, !dbg !15592
  br label %35, !dbg !15593

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !15562, metadata !DIExpression()), !dbg !15575
  %29 = load i32, i32* %7, align 4, !dbg !15594
  %30 = add nsw i32 %29, 1, !dbg !15594
  store i32 %30, i32* %7, align 4, !dbg !15594
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !15596
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !15596
  store i32 %29, i32* %32, align 8, !dbg !15597
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !15590
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15572, metadata !DIExpression()), !dbg !15591
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15562, metadata !DIExpression()), !dbg !15575
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !15592
  br i1 %34, label %26, label %27, !dbg !15589, !llvm.loop !15598

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15600
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15601
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #27, !dbg !15602
  ret void, !dbg !15603
}

; Function Attrs: optsize
declare !dbg !15604 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15609 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15612 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15614, metadata !DIExpression()), !dbg !15616
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15615, metadata !DIExpression()), !dbg !15616
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #26, !dbg !15617
  br i1 %3, label %4, label %5, !dbg !15620

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1200) #27, !dbg !15621
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1200) #27, !dbg !15621
  unreachable, !dbg !15621

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15623
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15624
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #27, !dbg !15625
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15626
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !15626
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !15628
  br i1 %10, label %11, label %13, !dbg !15629

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15630
  store i32 0, i32* %12, align 4, !dbg !15632
  br label %13, !dbg !15633

13:                                               ; preds = %11, %5
  ret void, !dbg !15634
}

; Function Attrs: optsize
declare !dbg !15635 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15636 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15640, metadata !DIExpression()), !dbg !15643
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15641, metadata !DIExpression()), !dbg !15643
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15644
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !15645
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15642, metadata !DIExpression()), !dbg !15643
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15641, metadata !DIExpression()), !dbg !15643
  ret %struct.k_thread* %4, !dbg !15646
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15647 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15651, metadata !DIExpression()), !dbg !15652
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !15653
  ret %struct.rbnode* %2, !dbg !15654
}

; Function Attrs: optsize
declare !dbg !15655 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !15658 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15670, metadata !DIExpression()), !dbg !15674
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15675
  %3 = load i32, i32* %2, align 4, !dbg !15675
  %4 = icmp eq i32 %3, 0, !dbg !15677
  br i1 %4, label %10, label %5, !dbg !15678

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15671, metadata !DIExpression()), !dbg !15674
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15679, !range !4177
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15680
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15672, metadata !DIExpression()), !dbg !15674
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !15681
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15673, metadata !DIExpression()), !dbg !15674
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15671, metadata !DIExpression()), !dbg !15674
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15674
  ret %struct.k_thread* %11, !dbg !15682
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15683 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15687, metadata !DIExpression()), !dbg !15690
  call void @llvm.dbg.value(metadata i32 0, metadata !15688, metadata !DIExpression()), !dbg !15690
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #26, !dbg !15691
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15689, metadata !DIExpression()), !dbg !15690
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15692
  br i1 %3, label %8, label %4, !dbg !15693

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15694
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15696
  call void @llvm.dbg.value(metadata i32 1, metadata !15688, metadata !DIExpression()), !dbg !15690
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #26, !dbg !15691
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15689, metadata !DIExpression()), !dbg !15690
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15692
  br i1 %7, label %8, label %4, !dbg !15693, !llvm.loop !15697

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15690
  ret i32 %9, !dbg !15699
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #7 !dbg !15700 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15702, metadata !DIExpression()), !dbg !15703
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15704
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !15705
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15706
  ret %struct.k_thread* %4, !dbg !15707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #6 !dbg !15708 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15717, metadata !DIExpression()), !dbg !15718
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15719
  tail call fastcc void @sys_dlist_init.265(%struct._dnode* noundef nonnull %2) #26, !dbg !15720
  ret void, !dbg !15721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.265(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !15722 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15726, metadata !DIExpression()), !dbg !15727
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15728
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15729
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15730
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15731
  ret void, !dbg !15732
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15733 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !15734
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !15735
  ret void, !dbg !15736
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !15737 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15742, metadata !DIExpression()), !dbg !15743
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15744
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15744
  %4 = load i8, i8* %3, align 2, !dbg !15744
  %5 = sext i8 %4 to i32, !dbg !15745
  ret i32 %5, !dbg !15746
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15747 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15751, metadata !DIExpression()), !dbg !15754
  call void @llvm.dbg.value(metadata i32 %1, metadata !15752, metadata !DIExpression()), !dbg !15754
  %3 = add i32 %1, 16, !dbg !15755
  %4 = icmp ult i32 %3, 31, !dbg !15755
  br i1 %4, label %6, label %5, !dbg !15755

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1331) #27, !dbg !15759
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.269, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #27, !dbg !15759
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1331) #27, !dbg !15759
  unreachable, !dbg !15759

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15761, !srcloc !14735
  call void @llvm.dbg.value(metadata i32 %7, metadata !14731, metadata !DIExpression()) #25, !dbg !15766
  %8 = icmp eq i32 %7, 0, !dbg !15767
  br i1 %8, label %10, label %9, !dbg !15768

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1332) #27, !dbg !15769
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.238, i32 0, i32 0)) #27, !dbg !15769
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1332) #27, !dbg !15769
  unreachable, !dbg !15769

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15753, metadata !DIExpression()), !dbg !15754
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15771
  ret void, !dbg !15772
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15773 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !15774
  br i1 %1, label %8, label %2, !dbg !15775

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !15776
  br i1 %3, label %8, label %4, !dbg !15777

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15778
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !15779
  %7 = xor i1 %6, true, !dbg !15777
  br label %8, !dbg !15777

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #7 !dbg !15781 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15782, !range !6705
  %2 = icmp eq i8 %1, 0, !dbg !15782
  ret i1 %2, !dbg !15783
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15784 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15787, !srcloc !14735
  call void @llvm.dbg.value(metadata i32 %1, metadata !14731, metadata !DIExpression()) #25, !dbg !15792
  %2 = icmp eq i32 %1, 0, !dbg !15793
  br i1 %2, label %4, label %3, !dbg !15794

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1392) #27, !dbg !15795
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.238, i32 0, i32 0)) #27, !dbg !15795
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1392) #27, !dbg !15795
  unreachable, !dbg !15795

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !15797
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15799, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15801
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !15801
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15797
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15802
  br i1 %6, label %8, label %7, !dbg !15803

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15804
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15804
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15804
  unreachable, !dbg !15804

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15801
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15797
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15805
  call void @llvm.dbg.value(metadata i32 undef, metadata !15786, metadata !DIExpression()), !dbg !15806
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15807
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14193, metadata !DIExpression()) #25, !dbg !15810
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !15812
  %11 = load i8, i8* %10, align 1, !dbg !15813
  %12 = and i8 %11, 127, !dbg !15813
  store i8 %12, i8* %10, align 1, !dbg !15813
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14201, metadata !DIExpression()) #25, !dbg !15814
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #27, !dbg !15816
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15817
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14210, metadata !DIExpression()) #25, !dbg !15818
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !15820
  %15 = load i8, i8* %14, align 1, !dbg !15821
  %16 = or i8 %15, -128, !dbg !15821
  store i8 %16, i8* %14, align 1, !dbg !15821
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14217, metadata !DIExpression()) #25, !dbg !15822
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14224, metadata !DIExpression()) #25, !dbg !15824
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14230, metadata !DIExpression()) #25, !dbg !15824
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #27, !dbg !15826
  br i1 %17, label %18, label %19, !dbg !15827

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 186) #27, !dbg !15828
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 186) #27, !dbg !15828
  unreachable, !dbg !15828

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15829
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14231, metadata !DIExpression()) #25, !dbg !15824
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15830
  br i1 %21, label %32, label %22, !dbg !15829

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14231, metadata !DIExpression()) #25, !dbg !15824
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !15831
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14231, metadata !DIExpression()) #25, !dbg !15824
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #27, !dbg !15832
  %26 = icmp sgt i32 %25, 0, !dbg !15833
  br i1 %26, label %27, label %29, !dbg !15834

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15835
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #27, !dbg !15836
  br label %34, !dbg !15837

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #27, !dbg !15830
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14231, metadata !DIExpression()) #25, !dbg !15824
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15830
  br i1 %31, label %32, label %22, !dbg !15829, !llvm.loop !15838

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15840
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #27, !dbg !15841
  br label %34, !dbg !15842

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15843
  call void @llvm.dbg.value(metadata i32 undef, metadata !14679, metadata !DIExpression()) #25, !dbg !15844
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14684, metadata !DIExpression()) #25, !dbg !15844
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14688, metadata !DIExpression()) #25, !dbg !15846
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15848
  br i1 %35, label %37, label %36, !dbg !15849

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 225) #27, !dbg !15850
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15850
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 225) #27, !dbg !15850
  unreachable, !dbg !15850

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !15799
  call void @llvm.dbg.value(metadata i32 %38, metadata !14013, metadata !DIExpression()) #25, !dbg !15801
  call void @llvm.dbg.value(metadata i32 %38, metadata !14007, metadata !DIExpression()) #25, !dbg !15797
  call void @llvm.dbg.value(metadata i32 %38, metadata !15786, metadata !DIExpression()), !dbg !15806
  call void @llvm.dbg.value(metadata i32 undef, metadata !14679, metadata !DIExpression()) #25, !dbg !15844
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #27, !dbg !15851
  ret void, !dbg !15852
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15853 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15857, metadata !DIExpression()), !dbg !15860
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15861, !srcloc !14735
  call void @llvm.dbg.value(metadata i32 %3, metadata !14731, metadata !DIExpression()) #25, !dbg !15866
  %4 = icmp eq i32 %3, 0, !dbg !15867
  br i1 %4, label %6, label %5, !dbg !15868

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1463) #27, !dbg !15869
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.238, i32 0, i32 0)) #27, !dbg !15869
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1463) #27, !dbg !15869
  unreachable, !dbg !15869

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !15871
  br i1 %7, label %8, label %10, !dbg !15873

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15874
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #26, !dbg !15876
  br label %15, !dbg !15877

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !15858, metadata !DIExpression()), !dbg !15860
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !15878
  %12 = sext i32 %11 to i64, !dbg !15878
  call void @llvm.dbg.value(metadata i64 %12, metadata !15858, metadata !DIExpression()), !dbg !15860
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #26, !dbg !15879
  %14 = trunc i64 %13 to i32, !dbg !15879
  call void @llvm.dbg.value(metadata i32 %14, metadata !15859, metadata !DIExpression()), !dbg !15860
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !15860
  ret i32 %16, !dbg !15880
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15881 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15885, metadata !DIExpression()), !dbg !15886
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15887, !srcloc !15889
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !15890
  ret void, !dbg !15891
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15892 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15896, metadata !DIExpression()), !dbg !15900
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15901, !srcloc !14735
  call void @llvm.dbg.value(metadata i32 %2, metadata !14731, metadata !DIExpression()) #25, !dbg !15906
  %3 = icmp eq i32 %2, 0, !dbg !15907
  br i1 %3, label %5, label %4, !dbg !15908

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1420) #27, !dbg !15909
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.238, i32 0, i32 0)) #27, !dbg !15909
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1420) #27, !dbg !15909
  unreachable, !dbg !15909

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !15911
  br i1 %6, label %7, label %8, !dbg !15913

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #26, !dbg !15914
  br label %43, !dbg !15916

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !15898, metadata !DIExpression()), !dbg !15900
  %9 = icmp sgt i64 %0, -3, !dbg !15917
  br i1 %9, label %10, label %14, !dbg !15919

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !15920
  %12 = trunc i64 %0 to i32, !dbg !15922
  %13 = add i32 %11, %12, !dbg !15922
  call void @llvm.dbg.value(metadata i32 %13, metadata !15897, metadata !DIExpression()), !dbg !15900
  br label %17, !dbg !15923

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !15924
  %16 = sub i32 -2, %15, !dbg !15924
  call void @llvm.dbg.value(metadata i32 %16, metadata !15897, metadata !DIExpression()), !dbg !15900
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !15926
  call void @llvm.dbg.value(metadata i32 %18, metadata !15897, metadata !DIExpression()), !dbg !15900
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !15927
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15929, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15931
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !15931
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15927
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15932
  br i1 %20, label %22, label %21, !dbg !15933

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15934
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15934
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !15934
  unreachable, !dbg !15934

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !15931
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !15927
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15935
  call void @llvm.dbg.value(metadata i32 undef, metadata !15899, metadata !DIExpression()), !dbg !15900
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15936
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !15937
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #26, !dbg !15938
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15939
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15940
  tail call fastcc void @z_add_thread_timeout.248(%struct.k_thread* noundef %24, [1 x i64] %25) #26, !dbg !15940
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15941
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #26, !dbg !15942
  call void @llvm.dbg.value(metadata i32 undef, metadata !14679, metadata !DIExpression()) #25, !dbg !15943
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14684, metadata !DIExpression()) #25, !dbg !15943
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14688, metadata !DIExpression()) #25, !dbg !15945
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15947
  br i1 %27, label %29, label %28, !dbg !15948

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 225) #27, !dbg !15949
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15949
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 225) #27, !dbg !15949
  unreachable, !dbg !15949

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !15929
  call void @llvm.dbg.value(metadata i32 %30, metadata !14013, metadata !DIExpression()) #25, !dbg !15931
  call void @llvm.dbg.value(metadata i32 %30, metadata !14007, metadata !DIExpression()) #25, !dbg !15927
  call void @llvm.dbg.value(metadata i32 %30, metadata !15899, metadata !DIExpression()), !dbg !15900
  call void @llvm.dbg.value(metadata i32 undef, metadata !14679, metadata !DIExpression()) #25, !dbg !15943
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #27, !dbg !15950
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15951
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #26, !dbg !15951
  br i1 %33, label %34, label %35, !dbg !15954

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1448) #27, !dbg !15955
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.238, i32 0, i32 0)) #27, !dbg !15955
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1448) #27, !dbg !15955
  unreachable, !dbg !15955

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !15957
  %37 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !15958
  %38 = zext i32 %37 to i64, !dbg !15958
  %39 = sub nsw i64 %36, %38, !dbg !15959
  call void @llvm.dbg.value(metadata i64 %39, metadata !15896, metadata !DIExpression()), !dbg !15900
  %40 = icmp sgt i64 %39, 0, !dbg !15960
  %41 = select i1 %40, i64 %39, i64 0, !dbg !15960
  %42 = trunc i64 %41 to i32, !dbg !15960
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !15900
  ret i32 %44, !dbg !15961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !15962 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15964, metadata !DIExpression()), !dbg !15965
  call void @llvm.dbg.value(metadata i64 %0, metadata !14061, metadata !DIExpression()), !dbg !15966
  call void @llvm.dbg.value(metadata i32 10000, metadata !14064, metadata !DIExpression()), !dbg !15966
  call void @llvm.dbg.value(metadata i32 1000, metadata !14065, metadata !DIExpression()), !dbg !15966
  call void @llvm.dbg.value(metadata i8 1, metadata !14066, metadata !DIExpression()), !dbg !15966
  call void @llvm.dbg.value(metadata i1 false, metadata !14067, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15966
  call void @llvm.dbg.value(metadata i1 false, metadata !14068, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15966
  call void @llvm.dbg.value(metadata i8 0, metadata !14069, metadata !DIExpression()), !dbg !15966
  call void @llvm.dbg.value(metadata i1 false, metadata !14070, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15966
  call void @llvm.dbg.value(metadata i1 true, metadata !14071, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15966
  call void @llvm.dbg.value(metadata i64 0, metadata !14072, metadata !DIExpression()), !dbg !15966
  call void @llvm.dbg.value(metadata i64 0, metadata !14072, metadata !DIExpression()), !dbg !15966
  call void @llvm.dbg.value(metadata i64 %0, metadata !14061, metadata !DIExpression()), !dbg !15966
  %2 = udiv i64 %0, 10, !dbg !15968
  ret i64 %2, !dbg !15972
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15973 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15974, !srcloc !15976
  tail call void @z_impl_k_yield() #26, !dbg !15977
  ret void, !dbg !15978
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15983, metadata !DIExpression()), !dbg !15985
  %2 = sext i32 %0 to i64, !dbg !15986
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !15987
  call void @llvm.dbg.value(metadata i64 %3, metadata !15984, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15985
  %4 = shl i64 %3, 32, !dbg !15988
  %5 = ashr exact i64 %4, 32, !dbg !15988
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !15989
  call void @llvm.dbg.value(metadata i32 %6, metadata !15984, metadata !DIExpression()), !dbg !15985
  %7 = sext i32 %6 to i64, !dbg !15990
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !15991
  %9 = trunc i64 %8 to i32, !dbg !15991
  ret i32 %9, !dbg !15992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !15993 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15995, metadata !DIExpression()), !dbg !15996
  call void @llvm.dbg.value(metadata i64 %0, metadata !14061, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14064, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i32 10000, metadata !14065, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i8 1, metadata !14066, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i1 false, metadata !14067, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15997
  call void @llvm.dbg.value(metadata i1 true, metadata !14068, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15997
  call void @llvm.dbg.value(metadata i8 0, metadata !14069, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i1 false, metadata !14070, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15997
  call void @llvm.dbg.value(metadata i1 true, metadata !14071, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15997
  call void @llvm.dbg.value(metadata i64 0, metadata !14072, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i64 0, metadata !14072, metadata !DIExpression()), !dbg !15997
  %2 = add i64 %0, 99, !dbg !15999
  call void @llvm.dbg.value(metadata i64 %2, metadata !14061, metadata !DIExpression()), !dbg !15997
  %3 = udiv i64 %2, 100, !dbg !16000
  ret i64 %3, !dbg !16001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16002 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16004, metadata !DIExpression()), !dbg !16005
  call void @llvm.dbg.value(metadata i64 %0, metadata !14061, metadata !DIExpression()), !dbg !16006
  call void @llvm.dbg.value(metadata i32 10000, metadata !14064, metadata !DIExpression()), !dbg !16006
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14065, metadata !DIExpression()), !dbg !16006
  call void @llvm.dbg.value(metadata i8 1, metadata !14066, metadata !DIExpression()), !dbg !16006
  call void @llvm.dbg.value(metadata i1 false, metadata !14067, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16006
  call void @llvm.dbg.value(metadata i1 false, metadata !14068, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16006
  call void @llvm.dbg.value(metadata i8 0, metadata !14069, metadata !DIExpression()), !dbg !16006
  call void @llvm.dbg.value(metadata i1 true, metadata !14070, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16006
  call void @llvm.dbg.value(metadata i1 false, metadata !14071, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16006
  call void @llvm.dbg.value(metadata i64 0, metadata !14072, metadata !DIExpression()), !dbg !16006
  call void @llvm.dbg.value(metadata i64 0, metadata !14072, metadata !DIExpression()), !dbg !16006
  %2 = mul i64 %0, 100, !dbg !16008
  ret i64 %2, !dbg !16010
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16011 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16013, metadata !DIExpression()), !dbg !16014
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !16015
  br i1 %2, label %14, label %3, !dbg !16017

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16018
  %5 = icmp slt i32 %4, 0, !dbg !16020
  br i1 %5, label %6, label %10, !dbg !16021

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16022
  %8 = load i8, i8* %7, align 1, !dbg !16022
  %9 = icmp eq i8 %8, 16, !dbg !16025
  br i1 %9, label %10, label %14, !dbg !16026

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16027
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16028
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16029, !srcloc !14735
  call void @llvm.dbg.value(metadata i32 %11, metadata !14731, metadata !DIExpression()) #25, !dbg !16033
  %12 = icmp eq i32 %11, 0, !dbg !16034
  br i1 %12, label %13, label %14, !dbg !16035

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16036
  br label %14, !dbg !16038

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !16040 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16042, metadata !DIExpression()), !dbg !16043
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16044
  %3 = load i8, i8* %2, align 1, !dbg !16044
  %4 = and i8 %3, 2, !dbg !16045
  %5 = icmp ne i8 %4, 0, !dbg !16046
  ret i1 %5, !dbg !16047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #7 !dbg !16048 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16053
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16052, metadata !DIExpression()), !dbg !16054
  ret %struct.k_thread* %1, !dbg !16055
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16056 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16057, !srcloc !14735
  call void @llvm.dbg.value(metadata i32 %1, metadata !14731, metadata !DIExpression()) #25, !dbg !16060
  %2 = icmp eq i32 %1, 0, !dbg !16061
  br i1 %2, label %3, label %8, !dbg !16062

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16063
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !16064
  %6 = icmp ne i32 %5, 0, !dbg !16062
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16065
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16066 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16068, metadata !DIExpression()), !dbg !16070
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !16071
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16073, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !16075
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !16075
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !16071
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16076
  br i1 %3, label %5, label %4, !dbg !16077

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !16078
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16078
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !16078
  unreachable, !dbg !16078

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16073
  call void @llvm.dbg.value(metadata i32 %6, metadata !14013, metadata !DIExpression()) #25, !dbg !16075
  call void @llvm.dbg.value(metadata i32 %6, metadata !14007, metadata !DIExpression()) #25, !dbg !16071
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16079
  call void @llvm.dbg.value(metadata i32 %6, metadata !16069, metadata !DIExpression()), !dbg !16070
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16080
  %8 = load i8, i8* %7, align 4, !dbg !16080
  %9 = and i8 %8, 1, !dbg !16082
  %10 = icmp eq i8 %9, 0, !dbg !16083
  br i1 %10, label %15, label %11, !dbg !16084

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !16085
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !16085
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16088
  br i1 %12, label %14, label %13, !dbg !16089

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !16090
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16090
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !16090
  unreachable, !dbg !16090

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14035, metadata !DIExpression()) #25, !dbg !16085
  call void @llvm.dbg.value(metadata i32 %6, metadata !14049, metadata !DIExpression()) #25, !dbg !16091
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !16093, !srcloc !14055
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1731) #27, !dbg !16094
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.278, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #27, !dbg !16094
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1731) #27, !dbg !16094
  unreachable, !dbg !16094

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16098
  %17 = load i8, i8* %16, align 1, !dbg !16098
  %18 = and i8 %17, 8, !dbg !16100
  %19 = icmp eq i8 %18, 0, !dbg !16101
  br i1 %19, label %24, label %20, !dbg !16102

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !16103
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !16103
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16106
  br i1 %21, label %23, label %22, !dbg !16107

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !16108
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16108
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !16108
  unreachable, !dbg !16108

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14035, metadata !DIExpression()) #25, !dbg !16103
  call void @llvm.dbg.value(metadata i32 %6, metadata !14049, metadata !DIExpression()) #25, !dbg !16109
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !16111, !srcloc !14055
  br label %39, !dbg !16112

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !16113
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16114
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16116
  br i1 %26, label %27, label %35, !dbg !16117

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16118, !srcloc !14735
  call void @llvm.dbg.value(metadata i32 %28, metadata !14731, metadata !DIExpression()) #25, !dbg !16121
  %29 = icmp eq i32 %28, 0, !dbg !16122
  br i1 %29, label %30, label %35, !dbg !16123

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !14679, metadata !DIExpression()) #25, !dbg !16124
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14684, metadata !DIExpression()) #25, !dbg !16124
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14688, metadata !DIExpression()) #25, !dbg !16127
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16129
  br i1 %31, label %33, label %32, !dbg !16130

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 225) #27, !dbg !16131
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16131
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 225) #27, !dbg !16131
  unreachable, !dbg !16131

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !14679, metadata !DIExpression()) #25, !dbg !16124
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #27, !dbg !16132
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1778) #27, !dbg !16133
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.279, i32 0, i32 0)) #27, !dbg !16133
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1778) #27, !dbg !16133
  unreachable, !dbg !16133

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !16137
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !16137
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16139
  br i1 %36, label %38, label %37, !dbg !16140

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !16141
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16141
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !16141
  unreachable, !dbg !16141

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14035, metadata !DIExpression()) #25, !dbg !16137
  call void @llvm.dbg.value(metadata i32 %6, metadata !14049, metadata !DIExpression()) #25, !dbg !16142
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !16144, !srcloc !14055
  br label %39, !dbg !16145

39:                                               ; preds = %38, %23
  ret void, !dbg !16145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16146 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16148, metadata !DIExpression()), !dbg !16149
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16150
  %3 = load i8, i8* %2, align 1, !dbg !16150
  %4 = and i8 %3, 8, !dbg !16152
  %5 = icmp eq i8 %4, 0, !dbg !16153
  br i1 %5, label %6, label %20, !dbg !16154

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16155
  %8 = or i8 %7, 8, !dbg !16155
  store i8 %8, i8* %2, align 1, !dbg !16155
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !16157
  br i1 %9, label %10, label %12, !dbg !16159

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14193, metadata !DIExpression()) #25, !dbg !16160
  %11 = and i8 %8, 95, !dbg !16163
  store i8 %11, i8* %2, align 1, !dbg !16163
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14201, metadata !DIExpression()) #25, !dbg !16164
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !16166
  br label %12, !dbg !16167

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16168
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16168
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16170
  br i1 %15, label %17, label %16, !dbg !16171

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16172
  br label %17, !dbg !16174

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16175
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16176
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #26, !dbg !16177
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16178
  br label %20, !dbg !16179

20:                                               ; preds = %17, %1
  ret void, !dbg !16180
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16181 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16185, metadata !DIExpression()), !dbg !16187
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #26, !dbg !16188
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16186, metadata !DIExpression()), !dbg !16187
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16189
  br i1 %3, label %10, label %4, !dbg !16190

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16191
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16193
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16194, metadata !DIExpression()), !dbg !16200
  call void @llvm.dbg.value(metadata i32 0, metadata !16199, metadata !DIExpression()), !dbg !16200
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16202
  store i32 0, i32* %7, align 4, !dbg !16203
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16204
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #26, !dbg !16188
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16186, metadata !DIExpression()), !dbg !16187
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16189
  br i1 %9, label %10, label %4, !dbg !16190, !llvm.loop !16205

10:                                               ; preds = %4, %1
  ret void, !dbg !16207
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16208 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16213, metadata !DIExpression()), !dbg !16216
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16212, metadata !DIExpression()), !dbg !16216
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !16217
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16219, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !16221
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !16221
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !16217
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16222
  br i1 %4, label %6, label %5, !dbg !16223

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !16224
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16224
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !16224
  unreachable, !dbg !16224

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16219
  call void @llvm.dbg.value(metadata i32 %7, metadata !14013, metadata !DIExpression()) #25, !dbg !16221
  call void @llvm.dbg.value(metadata i32 %7, metadata !14007, metadata !DIExpression()) #25, !dbg !16217
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16225
  call void @llvm.dbg.value(metadata i32 %7, metadata !16214, metadata !DIExpression()), !dbg !16216
  call void @llvm.dbg.value(metadata i32 0, metadata !16215, metadata !DIExpression()), !dbg !16216
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16226
  %9 = load i8, i8* %8, align 1, !dbg !16226
  %10 = and i8 %9, 8, !dbg !16228
  %11 = icmp eq i8 %10, 0, !dbg !16229
  br i1 %11, label %12, label %35, !dbg !16230

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16213, metadata !DIExpression()), !dbg !16216
  %14 = icmp eq i64 %13, 0, !dbg !16231
  br i1 %14, label %35, label %15, !dbg !16233

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16234
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16236
  br i1 %17, label %35, label %18, !dbg !16237

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16238
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !16238
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16239
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !16240
  br i1 %22, label %35, label %23, !dbg !16241

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16242, !srcloc !14735
  call void @llvm.dbg.value(metadata i32 %24, metadata !14731, metadata !DIExpression()) #25, !dbg !16248
  %25 = icmp eq i32 %24, 0, !dbg !16249
  br i1 %25, label %27, label %26, !dbg !16250

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1809) #27, !dbg !16251
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.280, i32 0, i32 0)) #27, !dbg !16251
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 1809) #27, !dbg !16251
  unreachable, !dbg !16251

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16253
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16254
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #26, !dbg !16255
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16256
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #26, !dbg !16257
  call void @llvm.dbg.value(metadata i32 undef, metadata !14679, metadata !DIExpression()) #25, !dbg !16258
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14684, metadata !DIExpression()) #25, !dbg !16258
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14688, metadata !DIExpression()) #25, !dbg !16260
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16262
  br i1 %31, label %33, label %32, !dbg !16263

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 225) #27, !dbg !16264
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16264
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 225) #27, !dbg !16264
  unreachable, !dbg !16264

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !14679, metadata !DIExpression()) #25, !dbg !16258
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #27, !dbg !16265
  call void @llvm.dbg.value(metadata i32 %34, metadata !16215, metadata !DIExpression()), !dbg !16216
  br label %40, !dbg !16266

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16267
  call void @llvm.dbg.value(metadata i32 %36, metadata !16215, metadata !DIExpression()), !dbg !16216
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !16268
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !16268
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16270
  br i1 %37, label %39, label %38, !dbg !16271

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !16272
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16272
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !16272
  unreachable, !dbg !16272

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14035, metadata !DIExpression()) #25, !dbg !16268
  call void @llvm.dbg.value(metadata i32 %7, metadata !14049, metadata !DIExpression()) #25, !dbg !16273
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #25, !dbg !16275, !srcloc !14055
  br label %40, !dbg !16276

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16216
  ret i32 %41, !dbg !16277
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16278 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16282, metadata !DIExpression()), !dbg !16290
  call void @llvm.dbg.value(metadata i32 %1, metadata !16283, metadata !DIExpression()), !dbg !16290
  call void @llvm.dbg.value(metadata i8* %2, metadata !16284, metadata !DIExpression()), !dbg !16290
  call void @llvm.dbg.value(metadata i8 0, metadata !16286, metadata !DIExpression()), !dbg !16290
  call void @llvm.dbg.value(metadata i32 0, metadata !16287, metadata !DIExpression()), !dbg !16291
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14001, metadata !DIExpression()) #25, !dbg !16292
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16294, !srcloc !14016
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !16296
  call void @llvm.dbg.value(metadata i32 undef, metadata !14014, metadata !DIExpression()) #25, !dbg !16296
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !16292
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16297
  br i1 %5, label %7, label %6, !dbg !16298

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !16299
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.233, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16299
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 148) #27, !dbg !16299
  unreachable, !dbg !16299

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()) #25, !dbg !16296
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #25, !dbg !16292
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16300
  call void @llvm.dbg.value(metadata i32 undef, metadata !16289, metadata !DIExpression()), !dbg !16291
  call void @llvm.dbg.value(metadata i8 poison, metadata !16286, metadata !DIExpression()), !dbg !16290
  call void @llvm.dbg.value(metadata i32 undef, metadata !16287, metadata !DIExpression()), !dbg !16291
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #26, !dbg !16301
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16285, metadata !DIExpression()), !dbg !16290
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16304
  br i1 %10, label %15, label %11, !dbg !16306

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16307, metadata !DIExpression()), !dbg !16314
  call void @llvm.dbg.value(metadata i32 %1, metadata !16312, metadata !DIExpression()), !dbg !16314
  call void @llvm.dbg.value(metadata i8* %2, metadata !16313, metadata !DIExpression()), !dbg !16314
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16194, metadata !DIExpression()), !dbg !16317
  call void @llvm.dbg.value(metadata i32 %1, metadata !16199, metadata !DIExpression()), !dbg !16317
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 7, i32 1, !dbg !16319
  store i32 %1, i32* %12, align 4, !dbg !16320
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16321
  store i8* %2, i8** %13, align 4, !dbg !16322
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #26, !dbg !16323
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #26, !dbg !16324
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #26, !dbg !16325
  call void @llvm.dbg.value(metadata i8 1, metadata !16286, metadata !DIExpression()), !dbg !16290
  br label %15, !dbg !16326

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16286, metadata !DIExpression()), !dbg !16290
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !16327
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14040, metadata !DIExpression()) #25, !dbg !16327
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16329
  br i1 %16, label %18, label %17, !dbg !16330

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !16331
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16331
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.232, i32 0, i32 0), i32 noundef 194) #27, !dbg !16331
  unreachable, !dbg !16331

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16290
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16294
  call void @llvm.dbg.value(metadata i32 %20, metadata !14013, metadata !DIExpression()) #25, !dbg !16296
  call void @llvm.dbg.value(metadata i32 %20, metadata !14007, metadata !DIExpression()) #25, !dbg !16292
  call void @llvm.dbg.value(metadata i32 %20, metadata !16289, metadata !DIExpression()), !dbg !16291
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()) #25, !dbg !16327
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #25, !dbg !16332
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !16334, !srcloc !14055
  call void @llvm.dbg.value(metadata i8 poison, metadata !16286, metadata !DIExpression()), !dbg !16290
  call void @llvm.dbg.value(metadata i32 undef, metadata !16287, metadata !DIExpression()), !dbg !16291
  ret i1 %19, !dbg !16335
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct._sfnode* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16336 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16341, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata i64 undef, metadata !16343, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !16340, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16342, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata i8** %4, metadata !16344, metadata !DIExpression()), !dbg !16346
  %6 = tail call i32 @z_pend_curr(%struct._sfnode* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !16347
  call void @llvm.dbg.value(metadata i32 %6, metadata !16345, metadata !DIExpression()), !dbg !16346
  %7 = icmp eq i8** %4, null, !dbg !16348
  br i1 %7, label %12, label %8, !dbg !16350

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16351
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16353
  %11 = load i8*, i8** %10, align 4, !dbg !16353
  store i8* %11, i8** %4, align 4, !dbg !16354
  br label %12, !dbg !16355

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16356
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16357 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !16359
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !16360
  ret void, !dbg !16361
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16362 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16372, metadata !DIExpression()), !dbg !16389
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16370, metadata !DIExpression()), !dbg !16389
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16371, metadata !DIExpression()), !dbg !16389
  %5 = icmp eq i64 %4, -1, !dbg !16390
  br i1 %5, label %63, label %6, !dbg !16392

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16393
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.285(%struct._dnode* noundef %7) #26, !dbg !16393
  br i1 %8, label %9, label %10, !dbg !16396

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 99) #27, !dbg !16397
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.289, i32 0, i32 0)) #27, !dbg !16397
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 99) #27, !dbg !16397
  unreachable, !dbg !16397

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16399
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16400
  call void @llvm.dbg.value(metadata i32 0, metadata !16373, metadata !DIExpression()), !dbg !16401
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16402, metadata !DIExpression()) #25, !dbg !16409
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16411, !srcloc !16417
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16418
  call void @llvm.dbg.value(metadata i32 undef, metadata !16415, metadata !DIExpression()) #25, !dbg !16418
  call void @llvm.dbg.value(metadata i32 undef, metadata !16408, metadata !DIExpression()) #25, !dbg !16409
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16419
  br i1 %13, label %15, label %14, !dbg !16422

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 148) #27, !dbg !16423
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.292, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16423
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 148) #27, !dbg !16423
  unreachable, !dbg !16423

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16411
  call void @llvm.dbg.value(metadata i32 %16, metadata !16414, metadata !DIExpression()) #25, !dbg !16418
  call void @llvm.dbg.value(metadata i32 %16, metadata !16408, metadata !DIExpression()) #25, !dbg !16409
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16425
  call void @llvm.dbg.value(metadata i32 %16, metadata !16379, metadata !DIExpression()), !dbg !16401
  call void @llvm.dbg.value(metadata i32 undef, metadata !16373, metadata !DIExpression()), !dbg !16401
  %17 = icmp slt i64 %4, -1, !dbg !16426
  br i1 %17, label %18, label %24, !dbg !16427

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16428
  %20 = add i64 %4, %19, !dbg !16429
  %21 = sub i64 -2, %20, !dbg !16429
  call void @llvm.dbg.value(metadata i64 %21, metadata !16383, metadata !DIExpression()), !dbg !16430
  %22 = icmp sgt i64 %21, 1, !dbg !16431
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16431
  br label %29, !dbg !16432

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16433
  %26 = tail call fastcc i32 @elapsed.293() #26, !dbg !16435
  %27 = sext i32 %26 to i64, !dbg !16435
  %28 = add nsw i64 %25, %27, !dbg !16436
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16437
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16438
  store i64 %30, i64* %31, align 8, !dbg !16439
  %32 = tail call fastcc %struct._timeout* @first() #26, !dbg !16440
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16380, metadata !DIExpression()), !dbg !16442
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16443
  br i1 %33, label %48, label %34, !dbg !16443

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16444
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16380, metadata !DIExpression()), !dbg !16442
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16448
  %38 = load i64, i64* %37, align 8, !dbg !16448
  %39 = icmp slt i64 %35, %38, !dbg !16449
  br i1 %39, label %40, label %44, !dbg !16450

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16448
  %42 = sub nsw i64 %38, %35, !dbg !16451
  store i64 %42, i64* %41, align 8, !dbg !16451
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16453
  tail call fastcc void @sys_dlist_insert.294(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #26, !dbg !16454
  br label %49, !dbg !16455

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16456
  store i64 %45, i64* %31, align 8, !dbg !16456
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #26, !dbg !16457
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16380, metadata !DIExpression()), !dbg !16442
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16443
  br i1 %47, label %48, label %34, !dbg !16443, !llvm.loop !16458

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.295(%struct._dnode* noundef nonnull %7) #26, !dbg !16460
  br label %49, !dbg !16463

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #26, !dbg !16464
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16465
  br i1 %51, label %52, label %59, !dbg !16466

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #26, !dbg !16467
  call void @llvm.dbg.value(metadata i32 %53, metadata !16386, metadata !DIExpression()), !dbg !16468
  %54 = icmp ne i32 %53, 0, !dbg !16469
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16471
  br i1 %57, label %59, label %58, !dbg !16471

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #27, !dbg !16472
  br label %59, !dbg !16474

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16475, metadata !DIExpression()) #25, !dbg !16481
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16480, metadata !DIExpression()) #25, !dbg !16481
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16483
  br i1 %60, label %62, label %61, !dbg !16486

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 194) #27, !dbg !16487
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.297, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16487
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 194) #27, !dbg !16487
  unreachable, !dbg !16487

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16475, metadata !DIExpression()) #25, !dbg !16481
  call void @llvm.dbg.value(metadata i32 %16, metadata !16489, metadata !DIExpression()) #25, !dbg !16492
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !16494, !srcloc !16495
  call void @llvm.dbg.value(metadata i32 undef, metadata !16373, metadata !DIExpression()), !dbg !16401
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.285(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !16497 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16503, metadata !DIExpression()), !dbg !16504
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16505
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16505
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16506
  ret i1 %4, !dbg !16507
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.293() unnamed_addr #1 !dbg !16508 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16511
  %2 = icmp eq i32 %1, 0, !dbg !16512
  br i1 %2, label %3, label %5, !dbg !16511

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !16513
  br label %5, !dbg !16511

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16511
  ret i32 %6, !dbg !16514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #7 !dbg !16515 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.300() #26, !dbg !16521
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16519, metadata !DIExpression()), !dbg !16522
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16523
  ret %struct._timeout* %2, !dbg !16524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.294(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16525 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16529, metadata !DIExpression()), !dbg !16533
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16530, metadata !DIExpression()), !dbg !16533
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16534
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16534
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16531, metadata !DIExpression()), !dbg !16533
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16535
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16536
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16537
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16538
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16539
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16540
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16541
  ret void, !dbg !16542
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #7 !dbg !16543 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16547, metadata !DIExpression()), !dbg !16549
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16550
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.298(%struct._dnode* noundef %2) #26, !dbg !16551
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16548, metadata !DIExpression()), !dbg !16549
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16552
  ret %struct._timeout* %4, !dbg !16553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.295(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !16554 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16559, metadata !DIExpression()), !dbg !16562
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16560, metadata !DIExpression()), !dbg !16562
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16563
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16561, metadata !DIExpression()), !dbg !16562
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16564
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16565
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16566
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16567
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16568
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16569
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16570
  ret void, !dbg !16571
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16572 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !16577
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16574, metadata !DIExpression()), !dbg !16578
  %2 = tail call fastcc i32 @elapsed.293() #26, !dbg !16579
  call void @llvm.dbg.value(metadata i32 %2, metadata !16575, metadata !DIExpression()), !dbg !16578
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16580
  br i1 %3, label %14, label %4, !dbg !16582

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16583
  %6 = load i64, i64* %5, align 8, !dbg !16583
  %7 = sext i32 %2 to i64, !dbg !16584
  %8 = sub nsw i64 %6, %7, !dbg !16585
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16586
  br i1 %9, label %14, label %10, !dbg !16587

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16588
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16588
  %13 = trunc i64 %12 to i32, !dbg !16588
  call void @llvm.dbg.value(metadata i32 %13, metadata !16576, metadata !DIExpression()), !dbg !16578
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16590
  call void @llvm.dbg.value(metadata i32 %15, metadata !16576, metadata !DIExpression()), !dbg !16578
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16591
  %17 = icmp ne i32 %16, 0, !dbg !16593
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16594
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16594
  call void @llvm.dbg.value(metadata i32 %20, metadata !16576, metadata !DIExpression()), !dbg !16578
  ret i32 %20, !dbg !16595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.298(%struct._dnode* noundef readonly %0) unnamed_addr #7 !dbg !16596 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16600, metadata !DIExpression()), !dbg !16602
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16601, metadata !DIExpression()), !dbg !16602
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16603
  br i1 %2, label %5, label %3, !dbg !16604

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.299(%struct._dnode* noundef nonnull %0) #26, !dbg !16605
  br label %5, !dbg !16604

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16604
  ret %struct._dnode* %6, !dbg !16606
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.299(%struct._dnode* noundef readonly %0) unnamed_addr #7 !dbg !16607 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16609, metadata !DIExpression()), !dbg !16611
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16610, metadata !DIExpression()), !dbg !16611
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16612
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16613
  br i1 %3, label %7, label %4, !dbg !16614

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16615
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16615
  br label %7, !dbg !16614

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16614
  ret %struct._dnode* %8, !dbg !16616
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.300() unnamed_addr #7 !dbg !16617 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16621, metadata !DIExpression()), !dbg !16622
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.301() #26, !dbg !16623
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16623
  ret %struct._dnode* %3, !dbg !16624
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.301() unnamed_addr #7 !dbg !16625 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16629, metadata !DIExpression()), !dbg !16630
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16631
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16632
  ret i1 %2, !dbg !16633
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16634 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16638, metadata !DIExpression()), !dbg !16643
  call void @llvm.dbg.value(metadata i32 -22, metadata !16639, metadata !DIExpression()), !dbg !16643
  call void @llvm.dbg.value(metadata i32 0, metadata !16640, metadata !DIExpression()), !dbg !16644
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16402, metadata !DIExpression()) #25, !dbg !16645
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16647, !srcloc !16417
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16649
  call void @llvm.dbg.value(metadata i32 undef, metadata !16415, metadata !DIExpression()) #25, !dbg !16649
  call void @llvm.dbg.value(metadata i32 undef, metadata !16408, metadata !DIExpression()) #25, !dbg !16645
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16650
  br i1 %3, label %5, label %4, !dbg !16651

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 148) #27, !dbg !16652
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.292, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16652
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 148) #27, !dbg !16652
  unreachable, !dbg !16652

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16649
  call void @llvm.dbg.value(metadata i32 undef, metadata !16408, metadata !DIExpression()) #25, !dbg !16645
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16653
  call void @llvm.dbg.value(metadata i32 undef, metadata !16642, metadata !DIExpression()), !dbg !16644
  call void @llvm.dbg.value(metadata i32 -22, metadata !16639, metadata !DIExpression()), !dbg !16643
  call void @llvm.dbg.value(metadata i32 undef, metadata !16640, metadata !DIExpression()), !dbg !16644
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16639, metadata !DIExpression()), !dbg !16643
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.285(%struct._dnode* noundef %6) #26, !dbg !16654
  br i1 %7, label %8, label %9, !dbg !16658

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !16659
  call void @llvm.dbg.value(metadata i32 0, metadata !16639, metadata !DIExpression()), !dbg !16643
  br label %9, !dbg !16661

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !16643
  call void @llvm.dbg.value(metadata i32 %10, metadata !16639, metadata !DIExpression()), !dbg !16643
  call void @llvm.dbg.value(metadata i32 undef, metadata !16475, metadata !DIExpression()) #25, !dbg !16662
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16480, metadata !DIExpression()) #25, !dbg !16662
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16664
  br i1 %11, label %13, label %12, !dbg !16665

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 194) #27, !dbg !16666
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.297, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16666
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 194) #27, !dbg !16666
  unreachable, !dbg !16666

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16647
  call void @llvm.dbg.value(metadata i32 %14, metadata !16414, metadata !DIExpression()) #25, !dbg !16649
  call void @llvm.dbg.value(metadata i32 %14, metadata !16408, metadata !DIExpression()) #25, !dbg !16645
  call void @llvm.dbg.value(metadata i32 %14, metadata !16642, metadata !DIExpression()), !dbg !16644
  call void @llvm.dbg.value(metadata i32 undef, metadata !16475, metadata !DIExpression()) #25, !dbg !16662
  call void @llvm.dbg.value(metadata i32 undef, metadata !16489, metadata !DIExpression()) #25, !dbg !16667
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !16669, !srcloc !16495
  call void @llvm.dbg.value(metadata i32 %10, metadata !16639, metadata !DIExpression()), !dbg !16643
  call void @llvm.dbg.value(metadata i32 undef, metadata !16640, metadata !DIExpression()), !dbg !16644
  ret i32 %10, !dbg !16670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !16671 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16673, metadata !DIExpression()), !dbg !16674
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !16675
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16677
  br i1 %3, label %10, label %4, !dbg !16678

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16679
  %6 = load i64, i64* %5, align 8, !dbg !16679
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16681
  %8 = load i64, i64* %7, align 8, !dbg !16682
  %9 = add nsw i64 %8, %6, !dbg !16682
  store i64 %9, i64* %7, align 8, !dbg !16682
  br label %10, !dbg !16683

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16684
  tail call fastcc void @sys_dlist_remove.304(%struct._dnode* noundef %11) #26, !dbg !16685
  ret void, !dbg !16686
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.304(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !16687 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16691, metadata !DIExpression()), !dbg !16694
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16695
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16695
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16692, metadata !DIExpression()), !dbg !16694
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16696
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16696
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16693, metadata !DIExpression()), !dbg !16694
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16697
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16698
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16699
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16700
  tail call fastcc void @sys_dnode_init.305(%struct._dnode* noundef %0) #26, !dbg !16701
  ret void, !dbg !16702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.305(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !16703 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16705, metadata !DIExpression()), !dbg !16706
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16707
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16708
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16709
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16710
  ret void, !dbg !16711
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16712 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16718, metadata !DIExpression()), !dbg !16723
  call void @llvm.dbg.value(metadata i64 0, metadata !16719, metadata !DIExpression()), !dbg !16723
  call void @llvm.dbg.value(metadata i32 0, metadata !16720, metadata !DIExpression()), !dbg !16724
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16402, metadata !DIExpression()) #25, !dbg !16725
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16727, !srcloc !16417
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16729
  call void @llvm.dbg.value(metadata i32 undef, metadata !16415, metadata !DIExpression()) #25, !dbg !16729
  call void @llvm.dbg.value(metadata i32 undef, metadata !16408, metadata !DIExpression()) #25, !dbg !16725
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16730
  br i1 %3, label %5, label %4, !dbg !16731

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 148) #27, !dbg !16732
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.292, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16732
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 148) #27, !dbg !16732
  unreachable, !dbg !16732

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16729
  call void @llvm.dbg.value(metadata i32 undef, metadata !16408, metadata !DIExpression()) #25, !dbg !16725
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16733
  call void @llvm.dbg.value(metadata i32 undef, metadata !16722, metadata !DIExpression()), !dbg !16724
  call void @llvm.dbg.value(metadata i64 0, metadata !16719, metadata !DIExpression()), !dbg !16723
  call void @llvm.dbg.value(metadata i32 undef, metadata !16720, metadata !DIExpression()), !dbg !16724
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !16734
  call void @llvm.dbg.value(metadata i64 %6, metadata !16719, metadata !DIExpression()), !dbg !16723
  call void @llvm.dbg.value(metadata i32 undef, metadata !16475, metadata !DIExpression()) #25, !dbg !16737
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16480, metadata !DIExpression()) #25, !dbg !16737
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16739
  br i1 %7, label %9, label %8, !dbg !16740

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 194) #27, !dbg !16741
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.297, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16741
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 194) #27, !dbg !16741
  unreachable, !dbg !16741

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !16727
  call void @llvm.dbg.value(metadata i32 %10, metadata !16414, metadata !DIExpression()) #25, !dbg !16729
  call void @llvm.dbg.value(metadata i32 %10, metadata !16408, metadata !DIExpression()) #25, !dbg !16725
  call void @llvm.dbg.value(metadata i32 %10, metadata !16722, metadata !DIExpression()), !dbg !16724
  call void @llvm.dbg.value(metadata i32 undef, metadata !16475, metadata !DIExpression()) #25, !dbg !16737
  call void @llvm.dbg.value(metadata i32 undef, metadata !16489, metadata !DIExpression()) #25, !dbg !16742
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #25, !dbg !16744, !srcloc !16495
  call void @llvm.dbg.value(metadata i64 %6, metadata !16719, metadata !DIExpression()), !dbg !16723
  call void @llvm.dbg.value(metadata i32 undef, metadata !16720, metadata !DIExpression()), !dbg !16724
  ret i64 %6, !dbg !16745
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16746 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16748, metadata !DIExpression()), !dbg !16752
  call void @llvm.dbg.value(metadata i64 0, metadata !16749, metadata !DIExpression()), !dbg !16752
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.306(%struct._timeout* noundef %0) #26, !dbg !16753
  br i1 %2, label %21, label %3, !dbg !16755

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !16756
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16750, metadata !DIExpression()), !dbg !16757
  call void @llvm.dbg.value(metadata i64 0, metadata !16749, metadata !DIExpression()), !dbg !16752
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16758
  br i1 %5, label %16, label %6, !dbg !16760

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16750, metadata !DIExpression()), !dbg !16757
  call void @llvm.dbg.value(metadata i64 %8, metadata !16749, metadata !DIExpression()), !dbg !16752
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16761
  %10 = load i64, i64* %9, align 8, !dbg !16761
  %11 = add nsw i64 %10, %8, !dbg !16763
  call void @llvm.dbg.value(metadata i64 %11, metadata !16749, metadata !DIExpression()), !dbg !16752
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16764
  br i1 %12, label %16, label %13, !dbg !16766

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !16767
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16750, metadata !DIExpression()), !dbg !16757
  call void @llvm.dbg.value(metadata i64 %11, metadata !16749, metadata !DIExpression()), !dbg !16752
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16758
  br i1 %15, label %16, label %6, !dbg !16760, !llvm.loop !16768

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16752
  call void @llvm.dbg.value(metadata i64 %17, metadata !16749, metadata !DIExpression()), !dbg !16752
  %18 = tail call fastcc i32 @elapsed.293() #26, !dbg !16770
  %19 = sext i32 %18 to i64, !dbg !16770
  %20 = sub nsw i64 %17, %19, !dbg !16771
  br label %21, !dbg !16772

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16752
  ret i64 %22, !dbg !16773
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.306(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #7 !dbg !16774 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16778, metadata !DIExpression()), !dbg !16779
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16780
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.285(%struct._dnode* noundef %2) #26, !dbg !16781
  %4 = xor i1 %3, true, !dbg !16782
  ret i1 %4, !dbg !16783
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16784 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16786, metadata !DIExpression()), !dbg !16791
  call void @llvm.dbg.value(metadata i64 0, metadata !16787, metadata !DIExpression()), !dbg !16791
  call void @llvm.dbg.value(metadata i32 0, metadata !16788, metadata !DIExpression()), !dbg !16792
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16402, metadata !DIExpression()) #25, !dbg !16793
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16795, !srcloc !16417
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16797
  call void @llvm.dbg.value(metadata i32 undef, metadata !16415, metadata !DIExpression()) #25, !dbg !16797
  call void @llvm.dbg.value(metadata i32 undef, metadata !16408, metadata !DIExpression()) #25, !dbg !16793
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16798
  br i1 %3, label %5, label %4, !dbg !16799

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 148) #27, !dbg !16800
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.292, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16800
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 148) #27, !dbg !16800
  unreachable, !dbg !16800

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16797
  call void @llvm.dbg.value(metadata i32 undef, metadata !16408, metadata !DIExpression()) #25, !dbg !16793
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16801
  call void @llvm.dbg.value(metadata i32 undef, metadata !16790, metadata !DIExpression()), !dbg !16792
  call void @llvm.dbg.value(metadata i64 0, metadata !16787, metadata !DIExpression()), !dbg !16791
  call void @llvm.dbg.value(metadata i32 undef, metadata !16788, metadata !DIExpression()), !dbg !16792
  %6 = load i64, i64* @curr_tick, align 8, !dbg !16802
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !16805
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !16787, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16791
  call void @llvm.dbg.value(metadata i32 undef, metadata !16475, metadata !DIExpression()) #25, !dbg !16806
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16480, metadata !DIExpression()) #25, !dbg !16806
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16808
  br i1 %8, label %10, label %9, !dbg !16809

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 194) #27, !dbg !16810
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.297, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16810
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 194) #27, !dbg !16810
  unreachable, !dbg !16810

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !16795
  call void @llvm.dbg.value(metadata i32 %11, metadata !16414, metadata !DIExpression()) #25, !dbg !16797
  call void @llvm.dbg.value(metadata i32 %11, metadata !16408, metadata !DIExpression()) #25, !dbg !16793
  call void @llvm.dbg.value(metadata i32 %11, metadata !16790, metadata !DIExpression()), !dbg !16792
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !16787, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16791
  call void @llvm.dbg.value(metadata i32 undef, metadata !16475, metadata !DIExpression()) #25, !dbg !16806
  call void @llvm.dbg.value(metadata i32 undef, metadata !16489, metadata !DIExpression()) #25, !dbg !16811
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #25, !dbg !16813, !srcloc !16495
  call void @llvm.dbg.value(metadata i32 undef, metadata !16788, metadata !DIExpression()), !dbg !16792
  %12 = add i64 %7, %6, !dbg !16814
  ret i64 %12, !dbg !16815
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16816 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16818, metadata !DIExpression()), !dbg !16822
  call void @llvm.dbg.value(metadata i32 0, metadata !16819, metadata !DIExpression()), !dbg !16823
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16402, metadata !DIExpression()) #25, !dbg !16824
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16826, !srcloc !16417
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16828
  call void @llvm.dbg.value(metadata i32 undef, metadata !16415, metadata !DIExpression()) #25, !dbg !16828
  call void @llvm.dbg.value(metadata i32 undef, metadata !16408, metadata !DIExpression()) #25, !dbg !16824
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16829
  br i1 %2, label %4, label %3, !dbg !16830

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 148) #27, !dbg !16831
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.292, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16831
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 148) #27, !dbg !16831
  unreachable, !dbg !16831

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16828
  call void @llvm.dbg.value(metadata i32 undef, metadata !16408, metadata !DIExpression()) #25, !dbg !16824
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16832
  call void @llvm.dbg.value(metadata i32 undef, metadata !16821, metadata !DIExpression()), !dbg !16823
  call void @llvm.dbg.value(metadata i32 -1, metadata !16818, metadata !DIExpression()), !dbg !16822
  call void @llvm.dbg.value(metadata i32 undef, metadata !16819, metadata !DIExpression()), !dbg !16823
  %5 = tail call fastcc i32 @next_timeout() #26, !dbg !16833
  call void @llvm.dbg.value(metadata i32 %5, metadata !16818, metadata !DIExpression()), !dbg !16822
  call void @llvm.dbg.value(metadata i32 undef, metadata !16475, metadata !DIExpression()) #25, !dbg !16836
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16480, metadata !DIExpression()) #25, !dbg !16836
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16838
  br i1 %6, label %8, label %7, !dbg !16839

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 194) #27, !dbg !16840
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.297, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16840
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 194) #27, !dbg !16840
  unreachable, !dbg !16840

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !16826
  call void @llvm.dbg.value(metadata i32 %9, metadata !16414, metadata !DIExpression()) #25, !dbg !16828
  call void @llvm.dbg.value(metadata i32 %9, metadata !16408, metadata !DIExpression()) #25, !dbg !16824
  call void @llvm.dbg.value(metadata i32 %9, metadata !16821, metadata !DIExpression()), !dbg !16823
  call void @llvm.dbg.value(metadata i32 undef, metadata !16475, metadata !DIExpression()) #25, !dbg !16836
  call void @llvm.dbg.value(metadata i32 undef, metadata !16489, metadata !DIExpression()) #25, !dbg !16841
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16843, !srcloc !16495
  call void @llvm.dbg.value(metadata i32 %5, metadata !16818, metadata !DIExpression()), !dbg !16822
  call void @llvm.dbg.value(metadata i32 undef, metadata !16819, metadata !DIExpression()), !dbg !16823
  ret i32 %5, !dbg !16844
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16845 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16847, metadata !DIExpression()), !dbg !16857
  call void @llvm.dbg.value(metadata i1 %1, metadata !16848, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16857
  call void @llvm.dbg.value(metadata i32 0, metadata !16849, metadata !DIExpression()), !dbg !16858
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16402, metadata !DIExpression()) #25, !dbg !16859
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16861, !srcloc !16417
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16863
  call void @llvm.dbg.value(metadata i32 undef, metadata !16415, metadata !DIExpression()) #25, !dbg !16863
  call void @llvm.dbg.value(metadata i32 undef, metadata !16408, metadata !DIExpression()) #25, !dbg !16859
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16864
  br i1 %4, label %6, label %5, !dbg !16865

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 148) #27, !dbg !16866
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.292, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16866
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 148) #27, !dbg !16866
  unreachable, !dbg !16866

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16863
  call void @llvm.dbg.value(metadata i32 undef, metadata !16408, metadata !DIExpression()) #25, !dbg !16859
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16867
  call void @llvm.dbg.value(metadata i32 undef, metadata !16851, metadata !DIExpression()), !dbg !16858
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()), !dbg !16858
  %7 = tail call fastcc i32 @next_timeout() #26, !dbg !16868
  call void @llvm.dbg.value(metadata i32 %7, metadata !16852, metadata !DIExpression()), !dbg !16869
  call void @llvm.dbg.value(metadata i1 undef, metadata !16855, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16869
  %8 = icmp slt i32 %7, 2, !dbg !16870
  call void @llvm.dbg.value(metadata i1 %8, metadata !16856, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16869
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !16871
  call void @llvm.dbg.value(metadata i1 %9, metadata !16855, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16869
  br i1 %10, label %14, label %11, !dbg !16871

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !16873
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !16873
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #27, !dbg !16875
  br label %14, !dbg !16876

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16475, metadata !DIExpression()) #25, !dbg !16877
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16480, metadata !DIExpression()) #25, !dbg !16877
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16879
  br i1 %15, label %17, label %16, !dbg !16880

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 194) #27, !dbg !16881
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.297, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16881
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 194) #27, !dbg !16881
  unreachable, !dbg !16881

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !16861
  call void @llvm.dbg.value(metadata i32 %18, metadata !16414, metadata !DIExpression()) #25, !dbg !16863
  call void @llvm.dbg.value(metadata i32 %18, metadata !16408, metadata !DIExpression()) #25, !dbg !16859
  call void @llvm.dbg.value(metadata i32 %18, metadata !16851, metadata !DIExpression()), !dbg !16858
  call void @llvm.dbg.value(metadata i32 undef, metadata !16475, metadata !DIExpression()) #25, !dbg !16877
  call void @llvm.dbg.value(metadata i32 undef, metadata !16489, metadata !DIExpression()) #25, !dbg !16882
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !16884, !srcloc !16495
  call void @llvm.dbg.value(metadata i32 1, metadata !16849, metadata !DIExpression()), !dbg !16858
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()), !dbg !16858
  ret void, !dbg !16885
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16886 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16890, metadata !DIExpression()), !dbg !16895
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !16896
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16402, metadata !DIExpression()) #25, !dbg !16897
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16899, !srcloc !16417
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16901
  call void @llvm.dbg.value(metadata i32 undef, metadata !16415, metadata !DIExpression()) #25, !dbg !16901
  call void @llvm.dbg.value(metadata i32 undef, metadata !16408, metadata !DIExpression()) #25, !dbg !16897
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16902
  br i1 %3, label %5, label %4, !dbg !16903

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 148) #27, !dbg !16904
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.292, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16904
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 148) #27, !dbg !16904
  unreachable, !dbg !16904

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16901
  call void @llvm.dbg.value(metadata i32 undef, metadata !16408, metadata !DIExpression()) #25, !dbg !16897
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16905
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()), !dbg !16895
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16895
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()), !dbg !16895
  %6 = tail call fastcc %struct._timeout* @first() #26, !dbg !16906
  %7 = icmp eq %struct._timeout* %6, null, !dbg !16907
  br i1 %7, label %37, label %8, !dbg !16908

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !16895
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !16909
  %14 = load i64, i64* %13, align 8, !dbg !16909
  %15 = sext i32 %11 to i64, !dbg !16910
  %16 = icmp sgt i64 %14, %15, !dbg !16911
  br i1 %16, label %35, label %17, !dbg !16912

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !16892, metadata !DIExpression()), !dbg !16913
  %18 = trunc i64 %14 to i32, !dbg !16914
  call void @llvm.dbg.value(metadata i32 %18, metadata !16894, metadata !DIExpression()), !dbg !16913
  %19 = sext i32 %18 to i64, !dbg !16915
  %20 = load i64, i64* @curr_tick, align 8, !dbg !16916
  %21 = add i64 %20, %19, !dbg !16916
  store i64 %21, i64* @curr_tick, align 8, !dbg !16916
  store i64 0, i64* %13, align 8, !dbg !16917
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #26, !dbg !16918
  call void @llvm.dbg.value(metadata i32 undef, metadata !16475, metadata !DIExpression()) #25, !dbg !16919
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16480, metadata !DIExpression()) #25, !dbg !16919
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16921
  br i1 %22, label %24, label %23, !dbg !16922

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 194) #27, !dbg !16923
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.297, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16923
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 194) #27, !dbg !16923
  unreachable, !dbg !16923

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16475, metadata !DIExpression()) #25, !dbg !16919
  call void @llvm.dbg.value(metadata i32 %12, metadata !16489, metadata !DIExpression()) #25, !dbg !16924
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !16926, !srcloc !16495
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !16927
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !16927
  tail call void %26(%struct._timeout* noundef nonnull %9) #27, !dbg !16928
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16402, metadata !DIExpression()) #25, !dbg !16929
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16931, !srcloc !16417
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16933
  call void @llvm.dbg.value(metadata i32 undef, metadata !16415, metadata !DIExpression()) #25, !dbg !16933
  call void @llvm.dbg.value(metadata i32 undef, metadata !16408, metadata !DIExpression()) #25, !dbg !16929
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16934
  br i1 %28, label %30, label %29, !dbg !16935

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 148) #27, !dbg !16936
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.292, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16936
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 148) #27, !dbg !16936
  unreachable, !dbg !16936

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16933
  call void @llvm.dbg.value(metadata i32 undef, metadata !16408, metadata !DIExpression()) #25, !dbg !16929
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16937
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()), !dbg !16895
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !16938
  %32 = sub nsw i32 %31, %18, !dbg !16938
  store i32 %32, i32* @announce_remaining, align 4, !dbg !16895
  call void @llvm.dbg.value(metadata i32 undef, metadata !16891, metadata !DIExpression()), !dbg !16895
  %33 = tail call fastcc %struct._timeout* @first() #26, !dbg !16906
  %34 = icmp eq %struct._timeout* %33, null, !dbg !16907
  br i1 %34, label %37, label %8, !dbg !16908, !llvm.loop !16939

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !16941
  store i64 %36, i64* %13, align 8, !dbg !16941
  br label %41, !dbg !16944

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !16895
  %40 = sext i32 %39 to i64, !dbg !16945
  br label %41, !dbg !16945

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !16945
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !16946
  %45 = add i64 %44, %42, !dbg !16946
  store i64 %45, i64* @curr_tick, align 8, !dbg !16946
  store i32 0, i32* @announce_remaining, align 4, !dbg !16947
  %46 = tail call fastcc i32 @next_timeout() #26, !dbg !16948
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #27, !dbg !16949
  call void @llvm.dbg.value(metadata i32 undef, metadata !16475, metadata !DIExpression()) #25, !dbg !16950
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16480, metadata !DIExpression()) #25, !dbg !16950
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16952
  br i1 %47, label %49, label %48, !dbg !16953

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 194) #27, !dbg !16954
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.297, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16954
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 194) #27, !dbg !16954
  unreachable, !dbg !16954

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !16895
  call void @llvm.dbg.value(metadata i32 %50, metadata !16475, metadata !DIExpression()) #25, !dbg !16950
  call void @llvm.dbg.value(metadata i32 %50, metadata !16489, metadata !DIExpression()) #25, !dbg !16955
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #25, !dbg !16957, !srcloc !16495
  ret void, !dbg !16958
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16959 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16963, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata i32 0, metadata !16964, metadata !DIExpression()), !dbg !16968
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16402, metadata !DIExpression()) #25, !dbg !16969
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16971, !srcloc !16417
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16973
  call void @llvm.dbg.value(metadata i32 undef, metadata !16415, metadata !DIExpression()) #25, !dbg !16973
  call void @llvm.dbg.value(metadata i32 undef, metadata !16408, metadata !DIExpression()) #25, !dbg !16969
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16974
  br i1 %2, label %4, label %3, !dbg !16975

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 148) #27, !dbg !16976
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.292, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16976
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 148) #27, !dbg !16976
  unreachable, !dbg !16976

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16973
  call void @llvm.dbg.value(metadata i32 undef, metadata !16408, metadata !DIExpression()) #25, !dbg !16969
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16977
  call void @llvm.dbg.value(metadata i32 undef, metadata !16966, metadata !DIExpression()), !dbg !16968
  call void @llvm.dbg.value(metadata i64 0, metadata !16963, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata i32 undef, metadata !16964, metadata !DIExpression()), !dbg !16968
  %5 = load i64, i64* @curr_tick, align 8, !dbg !16978
  %6 = tail call fastcc i32 @elapsed.293() #26, !dbg !16981
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16963, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16967
  call void @llvm.dbg.value(metadata i32 undef, metadata !16475, metadata !DIExpression()) #25, !dbg !16982
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16480, metadata !DIExpression()) #25, !dbg !16982
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16984
  br i1 %7, label %9, label %8, !dbg !16985

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 194) #27, !dbg !16986
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.297, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16986
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.291, i32 0, i32 0), i32 noundef 194) #27, !dbg !16986
  unreachable, !dbg !16986

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !16971
  call void @llvm.dbg.value(metadata i32 %10, metadata !16414, metadata !DIExpression()) #25, !dbg !16973
  call void @llvm.dbg.value(metadata i32 %10, metadata !16408, metadata !DIExpression()) #25, !dbg !16969
  call void @llvm.dbg.value(metadata i32 %10, metadata !16966, metadata !DIExpression()), !dbg !16968
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16963, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16967
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !16963, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16967
  call void @llvm.dbg.value(metadata i32 undef, metadata !16475, metadata !DIExpression()) #25, !dbg !16982
  call void @llvm.dbg.value(metadata i32 undef, metadata !16489, metadata !DIExpression()) #25, !dbg !16987
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #25, !dbg !16989, !srcloc !16495
  call void @llvm.dbg.value(metadata i32 undef, metadata !16964, metadata !DIExpression()), !dbg !16968
  %11 = sext i32 %6 to i64, !dbg !16981
  %12 = add i64 %5, %11, !dbg !16990
  ret i64 %12, !dbg !16991
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16992 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !16993
  %2 = trunc i64 %1 to i32, !dbg !16994
  ret i32 %2, !dbg !16995
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16996 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !16997
  ret i64 %1, !dbg !16998
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16999 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17001, metadata !DIExpression()), !dbg !17008
  %2 = icmp eq i32 %0, 0, !dbg !17009
  br i1 %2, label %10, label %3, !dbg !17011

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17012
  call void @llvm.dbg.value(metadata i32 %4, metadata !17002, metadata !DIExpression()), !dbg !17008
  %5 = mul i32 %0, 84, !dbg !17013
  call void @llvm.dbg.value(metadata i32 %5, metadata !17003, metadata !DIExpression()), !dbg !17008
  br label %6, !dbg !17014

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17015
  call void @llvm.dbg.value(metadata i32 %7, metadata !17004, metadata !DIExpression()), !dbg !17016
  %8 = sub i32 %7, %4, !dbg !17017
  %9 = icmp ult i32 %8, %5, !dbg !17019
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17020
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17021 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !17022
  ret i32 %1, !dbg !17023
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17024 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !17026
  ret i32 %1, !dbg !17027
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17028 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17032, metadata !DIExpression()), !dbg !17034
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17035

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !17036
  br label %14, !dbg !17040

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17033, metadata !DIExpression()), !dbg !17034
  %6 = icmp slt i64 %2, -1, !dbg !17041
  br i1 %6, label %7, label %9, !dbg !17044

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17045
  br label %14, !dbg !17046

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !17048
  %11 = icmp ugt i64 %2, 1, !dbg !17049
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17049
  %13 = add nsw i64 %10, %12, !dbg !17050
  br label %14, !dbg !17051

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17052
  ret i64 %15, !dbg !17053
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !17054 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17056, metadata !DIExpression()), !dbg !17060
  %2 = icmp eq i8* %0, null, !dbg !17061
  br i1 %2, label %7, label %3, !dbg !17063

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !17057, metadata !DIExpression()), !dbg !17060
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !17064
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !17064
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !17057, metadata !DIExpression()), !dbg !17060
  call void @llvm.dbg.value(metadata i8* %4, metadata !17056, metadata !DIExpression()), !dbg !17060
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !17066
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #27, !dbg !17067
  br label %7, !dbg !17068

7:                                                ; preds = %3, %1
  ret void, !dbg !17069
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17070 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17074, metadata !DIExpression()), !dbg !17077
  call void @llvm.dbg.value(metadata i32 %1, metadata !17075, metadata !DIExpression()), !dbg !17077
  %3 = icmp ugt i32 %0, 3, !dbg !17078
  %4 = and i32 %0, 3, !dbg !17078
  %5 = icmp eq i32 %4, 0, !dbg !17078
  %6 = and i1 %3, %5, !dbg !17078
  br i1 %6, label %8, label %7, !dbg !17078

7:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.316, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.318, i32 0, i32 0), i32 noundef 68) #27, !dbg !17081
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3.319, i32 0, i32 0)) #27, !dbg !17081
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.318, i32 0, i32 0), i32 noundef 68) #27, !dbg !17081
  unreachable, !dbg !17081

8:                                                ; preds = %2
  %9 = tail call i32 @llvm.ctpop.i32(i32 %0), !dbg !17083, !range !4177
  %10 = icmp ult i32 %9, 2, !dbg !17083
  br i1 %10, label %12, label %11, !dbg !17086

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.316, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.318, i32 0, i32 0), i32 noundef 71) #27, !dbg !17087
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.321, i32 0, i32 0)) #27, !dbg !17087
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.318, i32 0, i32 0), i32 noundef 71) #27, !dbg !17087
  unreachable, !dbg !17087

12:                                               ; preds = %8
  %13 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull @_system_heap, i32 noundef %0, i32 noundef %1) #26, !dbg !17089
  call void @llvm.dbg.value(metadata i8* %13, metadata !17076, metadata !DIExpression()), !dbg !17077
  ret i8* %13, !dbg !17090
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !17091 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17095, metadata !DIExpression()), !dbg !17101
  call void @llvm.dbg.value(metadata i32 %1, metadata !17096, metadata !DIExpression()), !dbg !17101
  call void @llvm.dbg.value(metadata i32 %2, metadata !17097, metadata !DIExpression()), !dbg !17101
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !17097, metadata !DIExpression(DW_OP_deref)), !dbg !17101
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !17102
  br i1 %5, label %21, label %6, !dbg !17104

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !17105
  call void @llvm.dbg.value(metadata i32 %7, metadata !17100, metadata !DIExpression()), !dbg !17101
  %8 = load i32, i32* %4, align 4, !dbg !17106
  call void @llvm.dbg.value(metadata i32 %8, metadata !17097, metadata !DIExpression()), !dbg !17101
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #27, !dbg !17107
  call void @llvm.dbg.value(metadata i8* %9, metadata !17098, metadata !DIExpression()), !dbg !17101
  %10 = icmp eq i8* %9, null, !dbg !17108
  br i1 %10, label %21, label %11, !dbg !17110

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !17111
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !17099, metadata !DIExpression()), !dbg !17101
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !17112
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !17113
  call void @llvm.dbg.value(metadata i8* %13, metadata !17099, metadata !DIExpression()), !dbg !17101
  call void @llvm.dbg.value(metadata i8* %13, metadata !17098, metadata !DIExpression()), !dbg !17101
  %14 = icmp eq i32 %1, 0, !dbg !17114
  br i1 %14, label %21, label %15, !dbg !17114

15:                                               ; preds = %11
  %16 = ptrtoint i8* %13 to i32, !dbg !17114
  %17 = add i32 %1, -1, !dbg !17114
  %18 = and i32 %17, %16, !dbg !17114
  %19 = icmp eq i32 %18, 0, !dbg !17114
  br i1 %19, label %21, label %20, !dbg !17117

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.316, i32 0, i32 0), i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6.322, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.318, i32 0, i32 0), i32 noundef 38) #27, !dbg !17118
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.323, i32 0, i32 0), i8* noundef nonnull %13, i32 noundef %1) #27, !dbg !17118
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.318, i32 0, i32 0), i32 noundef 38) #27, !dbg !17118
  unreachable, !dbg !17118

21:                                               ; preds = %11, %15, %6, %3
  %22 = phi i8* [ null, %3 ], [ null, %6 ], [ %13, %15 ], [ %13, %11 ], !dbg !17101
  ret i8* %22, !dbg !17120
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #24 !dbg !17121 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17126, metadata !DIExpression()), !dbg !17129
  call void @llvm.dbg.value(metadata i32 4, metadata !17127, metadata !DIExpression()), !dbg !17129
  call void @llvm.dbg.value(metadata i32* %1, metadata !17128, metadata !DIExpression()), !dbg !17129
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !17130
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !17130
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !17130
  store i32 %5, i32* %1, align 4, !dbg !17130
  ret i1 %4, !dbg !17131
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_malloc(i32 noundef %0) local_unnamed_addr #1 !dbg !17132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17134, metadata !DIExpression()), !dbg !17136
  %2 = tail call i8* @k_aligned_alloc(i32 noundef 4, i32 noundef %0) #26, !dbg !17137
  call void @llvm.dbg.value(metadata i8* %2, metadata !17135, metadata !DIExpression()), !dbg !17136
  ret i8* %2, !dbg !17138
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17139 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !17141, metadata !DIExpression()), !dbg !17145
  call void @llvm.dbg.value(metadata i32 %1, metadata !17142, metadata !DIExpression()), !dbg !17145
  %4 = bitcast i32* %3 to i8*, !dbg !17146
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #25, !dbg !17146
  call void @llvm.dbg.value(metadata i32* %3, metadata !17144, metadata !DIExpression(DW_OP_deref)), !dbg !17145
  %5 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* noundef nonnull %3) #26, !dbg !17147
  br i1 %5, label %12, label %6, !dbg !17149

6:                                                ; preds = %2
  %7 = load i32, i32* %3, align 4, !dbg !17150
  call void @llvm.dbg.value(metadata i32 %7, metadata !17144, metadata !DIExpression()), !dbg !17145
  %8 = tail call i8* @k_malloc(i32 noundef %7) #26, !dbg !17151
  call void @llvm.dbg.value(metadata i8* %8, metadata !17143, metadata !DIExpression()), !dbg !17145
  %9 = icmp eq i8* %8, null, !dbg !17152
  br i1 %9, label %12, label %10, !dbg !17154

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 %7, metadata !17144, metadata !DIExpression()), !dbg !17145
  %11 = tail call i8* @memset(i8* noundef nonnull %8, i32 noundef 0, i32 noundef %7) #27, !dbg !17155
  br label %12, !dbg !17157

12:                                               ; preds = %10, %6, %2
  %13 = phi i8* [ null, %2 ], [ null, %6 ], [ %8, %10 ], !dbg !17145
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #25, !dbg !17158
  ret i8* %13, !dbg !17158
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #24 !dbg !17159 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17161, metadata !DIExpression()), !dbg !17164
  call void @llvm.dbg.value(metadata i32 %1, metadata !17162, metadata !DIExpression()), !dbg !17164
  call void @llvm.dbg.value(metadata i32* %2, metadata !17163, metadata !DIExpression()), !dbg !17164
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !17165
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !17165
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !17165
  store i32 %6, i32* %2, align 4, !dbg !17165
  ret i1 %5, !dbg !17166
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_thread_system_pool_assign(%struct.k_thread* nocapture noundef writeonly %0) local_unnamed_addr #6 !dbg !17167 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17241, metadata !DIExpression()), !dbg !17242
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !17243
  store %struct.k_heap* @_system_heap, %struct.k_heap** %2, align 8, !dbg !17244
  ret void, !dbg !17245
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17246 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17248, metadata !DIExpression()), !dbg !17252
  call void @llvm.dbg.value(metadata i32 %1, metadata !17249, metadata !DIExpression()), !dbg !17252
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !17253
  br i1 %3, label %9, label %4, !dbg !17255

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17256
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, !dbg !17258
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 8, !dbg !17258
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !17251, metadata !DIExpression()), !dbg !17252
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !17259
  br i1 %8, label %12, label %9, !dbg !17261

9:                                                ; preds = %2, %4
  %10 = phi %struct.k_heap* [ %7, %4 ], [ @_system_heap, %2 ]
  %11 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %10, i32 noundef %0, i32 noundef %1) #26, !dbg !17262
  call void @llvm.dbg.value(metadata i8* %11, metadata !17250, metadata !DIExpression()), !dbg !17252
  br label %12, !dbg !17264

12:                                               ; preds = %4, %9
  %13 = phi i8* [ %11, %9 ], [ null, %4 ], !dbg !17265
  call void @llvm.dbg.value(metadata i8* %13, metadata !17250, metadata !DIExpression()), !dbg !17252
  ret i8* %13, !dbg !17266
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @main() local_unnamed_addr #1 !dbg !17267 {
  tail call void asm sideeffect "nop", ""() #25, !dbg !17269, !srcloc !17272
  ret void, !dbg !17273
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17274 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.334, i32 0, i32 0)) #27, !dbg !17276
  ret void, !dbg !17277
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !17278 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !17280, metadata !DIExpression()), !dbg !17302
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !17281, metadata !DIExpression()), !dbg !17303
  br i1 icmp ugt (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %2, label %3, !dbg !17304

2:                                                ; preds = %7, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.338, i32 0, i32 0), i32 noundef 24) #27, !dbg !17308
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.339, i32 0, i32 0)) #27, !dbg !17308
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.338, i32 0, i32 0), i32 noundef 24) #27, !dbg !17308
  unreachable, !dbg !17308

3:                                                ; preds = %1, %7
  %4 = phi %struct.k_heap* [ %12, %7 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !17281, metadata !DIExpression()), !dbg !17303
  %5 = icmp ult %struct.k_heap* %4, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17311
  br i1 %5, label %7, label %6, !dbg !17312

6:                                                ; preds = %3
  ret i32 0, !dbg !17313

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !17314
  %9 = load i8*, i8** %8, align 4, !dbg !17314
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !17317
  %11 = load i32, i32* %10, align 4, !dbg !17317
  tail call void @k_heap_init(%struct.k_heap* noundef %4, i8* noundef %9, i32 noundef %11) #26, !dbg !17318
  %12 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !17319
  call void @llvm.dbg.value(metadata %struct.k_heap* %12, metadata !17281, metadata !DIExpression()), !dbg !17303
  %13 = icmp ugt %struct.k_heap* %12, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17320
  br i1 %13, label %2, label %3, !dbg !17304, !llvm.loop !17321
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !17323 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17327, metadata !DIExpression()), !dbg !17330
  call void @llvm.dbg.value(metadata i8* %1, metadata !17328, metadata !DIExpression()), !dbg !17330
  call void @llvm.dbg.value(metadata i32 %2, metadata !17329, metadata !DIExpression()), !dbg !17330
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17331
  tail call fastcc void @z_waitq_init.340(%struct._wait_q_t* noundef nonnull %4) #26, !dbg !17332
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17333
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #27, !dbg !17334
  ret void, !dbg !17335
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.340(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !17336 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17341, metadata !DIExpression()), !dbg !17342
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17343
  tail call fastcc void @sys_dlist_init.341(%struct._dnode* noundef %2) #26, !dbg !17344
  ret void, !dbg !17345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.341(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !17346 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17351, metadata !DIExpression()), !dbg !17352
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17353
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17354
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17355
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17356
  ret void, !dbg !17357
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17358 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17369, metadata !DIExpression()), !dbg !17379
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17366, metadata !DIExpression()), !dbg !17379
  call void @llvm.dbg.value(metadata i32 %1, metadata !17367, metadata !DIExpression()), !dbg !17379
  call void @llvm.dbg.value(metadata i32 %2, metadata !17368, metadata !DIExpression()), !dbg !17379
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #27, !dbg !17380
  call void @llvm.dbg.value(metadata i64 %6, metadata !17371, metadata !DIExpression()), !dbg !17379
  call void @llvm.dbg.value(metadata i8* null, metadata !17372, metadata !DIExpression()), !dbg !17379
  %7 = icmp eq i64 %5, -1, !dbg !17381
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !17381
  call void @llvm.dbg.value(metadata i64 %8, metadata !17371, metadata !DIExpression()), !dbg !17379
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17382
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !17383, metadata !DIExpression()) #25, !dbg !17390
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17392, !srcloc !17398
  call void @llvm.dbg.value(metadata i32 undef, metadata !17395, metadata !DIExpression()) #25, !dbg !17399
  call void @llvm.dbg.value(metadata i32 undef, metadata !17396, metadata !DIExpression()) #25, !dbg !17399
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()) #25, !dbg !17390
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %9) #27, !dbg !17400
  br i1 %11, label %13, label %12, !dbg !17403

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.345, i32 0, i32 0), i32 noundef 148) #27, !dbg !17404
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.346, i32 0, i32 0), %struct._sfnode* noundef nonnull %9) #27, !dbg !17404
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.345, i32 0, i32 0), i32 noundef 148) #27, !dbg !17404
  unreachable, !dbg !17404

13:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !17395, metadata !DIExpression()) #25, !dbg !17399
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()) #25, !dbg !17390
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %9) #27, !dbg !17406
  call void @llvm.dbg.value(metadata i32 undef, metadata !17373, metadata !DIExpression()), !dbg !17379
  %14 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17407, !srcloc !17416
  call void @llvm.dbg.value(metadata i32 %14, metadata !17410, metadata !DIExpression()) #25, !dbg !17417
  %15 = icmp eq i32 %14, 0, !dbg !17418
  %16 = icmp eq i64 %5, 0, !dbg !17419
  %17 = select i1 %15, i1 true, i1 %16, !dbg !17419
  br i1 %17, label %18, label %25, !dbg !17419

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !17372, metadata !DIExpression()), !dbg !17379
  call void @llvm.dbg.value(metadata i8 0, metadata !17378, metadata !DIExpression()), !dbg !17379
  call void @llvm.dbg.value(metadata i32 undef, metadata !17373, metadata !DIExpression()), !dbg !17379
  %20 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #27, !dbg !17420
  call void @llvm.dbg.value(metadata i8* %20, metadata !17372, metadata !DIExpression()), !dbg !17379
  %21 = tail call i64 @sys_clock_tick_get() #27, !dbg !17422
  call void @llvm.dbg.value(metadata i64 %21, metadata !17370, metadata !DIExpression()), !dbg !17379
  %22 = icmp eq i8* %20, null, !dbg !17423
  br i1 %22, label %23, label %43, !dbg !17425

23:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !17373, metadata !DIExpression()), !dbg !17379
  %24 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %26, !dbg !17425

25:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.338, i32 0, i32 0), i32 noundef 76) #27, !dbg !17426
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.348, i32 0, i32 0)) #27, !dbg !17426
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.338, i32 0, i32 0), i32 noundef 76) #27, !dbg !17426
  unreachable, !dbg !17426

26:                                               ; preds = %23, %39
  %27 = phi i64 [ %21, %23 ], [ %41, %39 ]
  %28 = phi { i32, i32 } [ %10, %23 ], [ %36, %39 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !17378, metadata !DIExpression()), !dbg !17379
  %29 = sub nsw i64 %8, %27, !dbg !17428
  %30 = icmp slt i64 %29, 1, !dbg !17429
  br i1 %30, label %43, label %31, !dbg !17430

31:                                               ; preds = %26
  %32 = extractvalue { i32, i32 } %28, 0, !dbg !17379
  call void @llvm.dbg.value(metadata i8 undef, metadata !17378, metadata !DIExpression()), !dbg !17379
  %33 = insertvalue [1 x i32] poison, i32 %32, 0, !dbg !17431
  %34 = insertvalue [1 x i64] poison, i64 %29, 0, !dbg !17431
  %35 = tail call i32 @z_pend_curr(%struct._sfnode* noundef nonnull %9, [1 x i32] %33, %struct._wait_q_t* noundef nonnull %24, [1 x i64] %34) #27, !dbg !17431
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !17383, metadata !DIExpression()) #25, !dbg !17432
  %36 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17434, !srcloc !17398
  call void @llvm.dbg.value(metadata i32 undef, metadata !17395, metadata !DIExpression()) #25, !dbg !17436
  call void @llvm.dbg.value(metadata i32 undef, metadata !17396, metadata !DIExpression()) #25, !dbg !17436
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()) #25, !dbg !17432
  %37 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %9) #27, !dbg !17437
  br i1 %37, label %39, label %38, !dbg !17438

38:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.345, i32 0, i32 0), i32 noundef 148) #27, !dbg !17439
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.346, i32 0, i32 0), %struct._sfnode* noundef nonnull %9) #27, !dbg !17439
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.345, i32 0, i32 0), i32 noundef 148) #27, !dbg !17439
  unreachable, !dbg !17439

39:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i8 undef, metadata !17378, metadata !DIExpression()), !dbg !17379
  call void @llvm.dbg.value(metadata i32 undef, metadata !17395, metadata !DIExpression()) #25, !dbg !17436
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()) #25, !dbg !17432
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %9) #27, !dbg !17440
  call void @llvm.dbg.value(metadata i32 undef, metadata !17373, metadata !DIExpression()), !dbg !17379
  call void @llvm.dbg.value(metadata i8* null, metadata !17372, metadata !DIExpression()), !dbg !17379
  call void @llvm.dbg.value(metadata i32 undef, metadata !17373, metadata !DIExpression()), !dbg !17379
  %40 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #27, !dbg !17420
  call void @llvm.dbg.value(metadata i8* %40, metadata !17372, metadata !DIExpression()), !dbg !17379
  %41 = tail call i64 @sys_clock_tick_get() #27, !dbg !17422
  call void @llvm.dbg.value(metadata i64 %41, metadata !17370, metadata !DIExpression()), !dbg !17379
  %42 = icmp eq i8* %40, null, !dbg !17423
  br i1 %42, label %26, label %43, !dbg !17425, !llvm.loop !17441

43:                                               ; preds = %39, %26, %18
  %44 = phi { i32, i32 } [ %10, %18 ], [ %28, %26 ], [ %36, %39 ]
  %45 = phi i8* [ %20, %18 ], [ null, %26 ], [ %40, %39 ], !dbg !17420
  call void @llvm.dbg.value(metadata i8* %45, metadata !17372, metadata !DIExpression()), !dbg !17379
  call void @llvm.dbg.value(metadata i32 undef, metadata !17444, metadata !DIExpression()) #25, !dbg !17450
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !17449, metadata !DIExpression()) #25, !dbg !17450
  %46 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %9) #27, !dbg !17452
  br i1 %46, label %48, label %47, !dbg !17455

47:                                               ; preds = %43
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.345, i32 0, i32 0), i32 noundef 194) #27, !dbg !17456
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.350, i32 0, i32 0), %struct._sfnode* noundef nonnull %9) #27, !dbg !17456
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.345, i32 0, i32 0), i32 noundef 194) #27, !dbg !17456
  unreachable, !dbg !17456

48:                                               ; preds = %43
  %49 = extractvalue { i32, i32 } %44, 0, !dbg !17379
  call void @llvm.dbg.value(metadata i32 %49, metadata !17444, metadata !DIExpression()) #25, !dbg !17450
  call void @llvm.dbg.value(metadata i32 %49, metadata !17458, metadata !DIExpression()) #25, !dbg !17461
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %49) #25, !dbg !17463, !srcloc !17464
  ret i8* %45, !dbg !17465
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17466 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17472, metadata !DIExpression()), !dbg !17474
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17470, metadata !DIExpression()), !dbg !17474
  call void @llvm.dbg.value(metadata i32 %1, metadata !17471, metadata !DIExpression()), !dbg !17474
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !17475
  call void @llvm.dbg.value(metadata i8* %4, metadata !17473, metadata !DIExpression()), !dbg !17474
  ret i8* %4, !dbg !17476
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17477 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17481, metadata !DIExpression()), !dbg !17484
  call void @llvm.dbg.value(metadata i8* %1, metadata !17482, metadata !DIExpression()), !dbg !17484
  %3 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17485
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !17383, metadata !DIExpression()) #25, !dbg !17486
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17488, !srcloc !17398
  call void @llvm.dbg.value(metadata i32 undef, metadata !17395, metadata !DIExpression()) #25, !dbg !17490
  call void @llvm.dbg.value(metadata i32 undef, metadata !17396, metadata !DIExpression()) #25, !dbg !17490
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()) #25, !dbg !17486
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %3) #27, !dbg !17491
  br i1 %5, label %7, label %6, !dbg !17492

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.345, i32 0, i32 0), i32 noundef 148) #27, !dbg !17493
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.346, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #27, !dbg !17493
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.345, i32 0, i32 0), i32 noundef 148) #27, !dbg !17493
  unreachable, !dbg !17493

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !17488
  call void @llvm.dbg.value(metadata i32 %8, metadata !17395, metadata !DIExpression()) #25, !dbg !17490
  call void @llvm.dbg.value(metadata i32 %8, metadata !17389, metadata !DIExpression()) #25, !dbg !17486
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %3) #27, !dbg !17494
  call void @llvm.dbg.value(metadata i32 %8, metadata !17483, metadata !DIExpression()), !dbg !17484
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17495
  tail call void @sys_heap_free(%struct.sys_heap* noundef %9, i8* noundef %1) #27, !dbg !17496
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17497
  %11 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %10) #27, !dbg !17499
  %12 = icmp eq i32 %11, 0, !dbg !17500
  br i1 %12, label %15, label %13, !dbg !17501

13:                                               ; preds = %7
  %14 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !17502
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %3, [1 x i32] %14) #27, !dbg !17502
  br label %19, !dbg !17504

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !17444, metadata !DIExpression()) #25, !dbg !17505
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !17449, metadata !DIExpression()) #25, !dbg !17505
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %3) #27, !dbg !17508
  br i1 %16, label %18, label %17, !dbg !17509

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.345, i32 0, i32 0), i32 noundef 194) #27, !dbg !17510
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.350, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #27, !dbg !17510
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.345, i32 0, i32 0), i32 noundef 194) #27, !dbg !17510
  unreachable, !dbg !17510

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %8, metadata !17444, metadata !DIExpression()) #25, !dbg !17505
  call void @llvm.dbg.value(metadata i32 %8, metadata !17458, metadata !DIExpression()) #25, !dbg !17511
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !17513, !srcloc !17464
  br label %19

19:                                               ; preds = %18, %13
  ret void, !dbg !17514
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { nofree nosync nounwind willreturn }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!914, !2, !2534, !27, !432, !2536, !2538, !2571, !2609, !2611, !443, !487, !2613, !2624, !2670, !2672, !2700, !2728, !2771, !2842, !2887, !516, !651, !2915, !687, !697, !722, !946, !2920, !1082, !1148, !1440, !1657, !2958, !1770, !1860, !2960, !3045, !3109, !1911, !3112, !1918, !2282, !3130, !3132, !2302, !3173, !2419, !2460, !3176, !3178, !2503}
!llvm.ident = !{!3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180, !3180}
!llvm.module.flags = !{!3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "printk_fifo", scope: !27, file: !218, line: 37, type: !410, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !112, globals: !215, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/basic/threads/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!29 = !{!30, !101, !107}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !102, line: 506, baseType: !32, size: 32, elements: !103)
!102 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!103 = !{!104, !105, !106}
!104 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!105 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!106 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !102, line: 512, baseType: !32, size: 32, elements: !108)
!108 = !{!109, !110, !111}
!109 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!110 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!111 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!112 = !{!113, !117, !118, !119, !202, !207, !167, !107, !101, !212, !156, !213}
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !114, line: 46, baseType: !115)
!114 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !116)
!116 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!118 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !102, line: 523, size: 288, elements: !122)
!122 = !{!123, !157, !163, !168, !172, !173, !174, !178, !198}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !121, file: !102, line: 524, baseType: !124, size: 32)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!125 = !DISubroutineType(types: !126)
!126 = !{!118, !127, !154, !155}
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !131)
!130 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!131 = !{!132, !136, !137, !138, !147, !148}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !129, file: !130, line: 380, baseType: !133, size: 32)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!135 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !129, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !129, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !129, file: !130, line: 386, baseType: !139, size: 32, offset: 96)
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !141)
!141 = !{!142, !145}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !140, file: !130, line: 359, baseType: !143, size: 8)
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !144)
!144 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !140, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!146 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !129, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !129, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !151)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !130, line: 43, baseType: !152)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !153)
!153 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !102, line: 237, baseType: !143)
!155 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !102, line: 257, baseType: !156)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !121, file: !102, line: 530, baseType: !158, size: 32, offset: 32)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 32)
!159 = !DISubroutineType(types: !160)
!160 = !{!118, !127, !161}
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !102, line: 229, baseType: !156)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !121, file: !102, line: 532, baseType: !164, size: 32, offset: 64)
!164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 32)
!165 = !DISubroutineType(types: !166)
!166 = !{!118, !127, !167, !162}
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !102, line: 216, baseType: !156)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !121, file: !102, line: 535, baseType: !169, size: 32, offset: 96)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!170 = !DISubroutineType(types: !171)
!171 = !{!118, !127, !167}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !121, file: !102, line: 537, baseType: !169, size: 32, offset: 128)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !121, file: !102, line: 539, baseType: !169, size: 32, offset: 160)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !121, file: !102, line: 541, baseType: !175, size: 32, offset: 192)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!176 = !DISubroutineType(types: !177)
!177 = !{!118, !127, !154, !101, !107}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !121, file: !102, line: 544, baseType: !179, size: 32, offset: 224)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DISubroutineType(types: !181)
!181 = !{!118, !127, !182, !146}
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !102, line: 478, size: 96, elements: !184)
!184 = !{!185, !192, !197}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !183, file: !102, line: 482, baseType: !186, size: 32)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !187, line: 33, baseType: !188)
!187 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !187, line: 29, size: 32, elements: !189)
!189 = !{!190}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !188, file: !187, line: 30, baseType: !191, size: 32)
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !183, file: !102, line: 485, baseType: !193, size: 32, offset: 32)
!193 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !102, line: 464, baseType: !194)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 32)
!195 = !DISubroutineType(types: !196)
!196 = !{null, !127, !182, !167}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !183, file: !102, line: 493, baseType: !167, size: 32, offset: 64)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !121, file: !102, line: 547, baseType: !199, size: 32, offset: 256)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DISubroutineType(types: !201)
!201 = !{!156, !127}
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !204)
!204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !102, line: 428, size: 32, elements: !205)
!205 = !{!206}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !204, file: !102, line: 434, baseType: !167, size: 32)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !209)
!209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !102, line: 441, size: 32, elements: !210)
!210 = !{!211}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !209, file: !102, line: 447, baseType: !167, size: 32)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 32)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !214)
!214 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!215 = !{!25, !216, !368, !372, !374, !376, !378, !380, !385, !387, !389, !391, !393, !395, !408}
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "_k_thread_data_blink0_id", scope: !27, file: !218, line: 111, type: !219, isLocal: false, isDefinition: true, align: 32)
!218 = !DIFile(filename: "zephyr/samples/basic/threads/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !220, line: 620, size: 384, elements: !221)
!220 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!221 = !{!222, !342, !350, !351, !356, !357, !358, !359, !360, !361, !363, !367}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !219, file: !220, line: 621, baseType: !223, size: 32)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 32)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !226)
!225 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!226 = !{!227, !294, !307, !308, !309, !310, !318, !337}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !224, file: !225, line: 247, baseType: !228, size: 384)
!228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !229)
!229 = !{!230, !258, !266, !267, !268, !281, !282, !283}
!230 = !DIDerivedType(tag: DW_TAG_member, scope: !228, file: !225, line: 60, baseType: !231, size: 64)
!231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !228, file: !225, line: 60, size: 64, elements: !232)
!232 = !{!233, !249}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !231, file: !225, line: 61, baseType: !234, size: 64)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !236)
!235 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !237)
!237 = !{!238, !244}
!238 = !DIDerivedType(tag: DW_TAG_member, scope: !236, file: !235, line: 38, baseType: !239, size: 32)
!239 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !236, file: !235, line: 38, size: 32, elements: !240)
!240 = !{!241, !243}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !239, file: !235, line: 39, baseType: !242, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !239, file: !235, line: 40, baseType: !242, size: 32)
!244 = !DIDerivedType(tag: DW_TAG_member, scope: !236, file: !235, line: 42, baseType: !245, size: 32, offset: 32)
!245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !236, file: !235, line: 42, size: 32, elements: !246)
!246 = !{!247, !248}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !245, file: !235, line: 43, baseType: !242, size: 32)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !245, file: !235, line: 44, baseType: !242, size: 32)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !231, file: !225, line: 62, baseType: !250, size: 64)
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !252)
!251 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!252 = !{!253}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !250, file: !251, line: 50, baseType: !254, size: 64)
!254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !255, size: 64, elements: !256)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 32)
!256 = !{!257}
!257 = !DISubrange(count: 2)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !228, file: !225, line: 68, baseType: !259, size: 32, offset: 64)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 32)
!260 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !262)
!261 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !263)
!263 = !{!264}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !262, file: !261, line: 232, baseType: !265, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !236)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !228, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !228, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!268 = !DIDerivedType(tag: DW_TAG_member, scope: !228, file: !225, line: 90, baseType: !269, size: 16, offset: 112)
!269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !228, file: !225, line: 90, size: 16, elements: !270)
!270 = !{!271, !278}
!271 = !DIDerivedType(tag: DW_TAG_member, scope: !269, file: !225, line: 91, baseType: !272, size: 16)
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !269, file: !225, line: 91, size: 16, elements: !273)
!273 = !{!274, !277}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !272, file: !225, line: 96, baseType: !275, size: 8)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !276)
!276 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !272, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !269, file: !225, line: 100, baseType: !279, size: 16)
!279 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !280)
!280 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !228, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !228, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !228, file: !225, line: 131, baseType: !284, size: 192, offset: 192)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !285)
!285 = !{!286, !287, !293}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !284, file: !261, line: 245, baseType: !234, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !284, file: !261, line: 246, baseType: !288, size: 32, offset: 64)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !289)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 32)
!290 = !DISubroutineType(types: !291)
!291 = !{null, !292}
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 32)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !284, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !224, file: !225, line: 250, baseType: !295, size: 288, offset: 384)
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !297)
!296 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!297 = !{!298, !299, !300, !301, !302, !303, !304, !305, !306}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !295, file: !296, line: 26, baseType: !156, size: 32)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !295, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !295, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !295, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !295, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !295, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !295, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !295, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !295, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !224, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !224, file: !225, line: 256, baseType: !260, size: 64, offset: 704)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !224, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !224, file: !225, line: 300, baseType: !311, size: 96, offset: 800)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !312)
!312 = !{!313, !314, !317}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !311, file: !225, line: 153, baseType: !22, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !311, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !316, line: 214, baseType: !32)
!316 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !311, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !224, file: !225, line: 325, baseType: !319, size: 32, offset: 896)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !321)
!321 = !{!322, !331, !332}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !320, file: !220, line: 5074, baseType: !323, size: 96)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !325)
!324 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!325 = !{!326, !329, !330}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !323, file: !324, line: 57, baseType: !327, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 32)
!328 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !324, line: 57, flags: DIFlagFwdDecl)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !323, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !323, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !320, file: !220, line: 5075, baseType: !260, size: 64, offset: 96)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !320, file: !220, line: 5076, baseType: !333, size: 32, offset: 160)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !335)
!334 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!335 = !{!336}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !333, file: !334, line: 52, baseType: !22, size: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !224, file: !225, line: 343, baseType: !338, size: 64, offset: 928)
!338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !339)
!339 = !{!340, !341}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !338, file: !296, line: 63, baseType: !156, size: 32)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !338, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !219, file: !220, line: 622, baseType: !343, size: 32, offset: 32)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !345, line: 44, baseType: !346)
!345 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !347, line: 47, size: 8, elements: !348)
!347 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!348 = !{!349}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !346, file: !347, line: 48, baseType: !135, size: 8)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !219, file: !220, line: 623, baseType: !32, size: 32, offset: 64)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !219, file: !220, line: 624, baseType: !352, size: 32, offset: 96)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !345, line: 46, baseType: !353)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!354 = !DISubroutineType(types: !355)
!355 = !{null, !117, !117, !117}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !219, file: !220, line: 625, baseType: !117, size: 32, offset: 128)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !219, file: !220, line: 626, baseType: !117, size: 32, offset: 160)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !219, file: !220, line: 627, baseType: !117, size: 32, offset: 192)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !219, file: !220, line: 628, baseType: !118, size: 32, offset: 224)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !219, file: !220, line: 629, baseType: !156, size: 32, offset: 256)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !219, file: !220, line: 630, baseType: !362, size: 32, offset: 288)
!362 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !118)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !219, file: !220, line: 631, baseType: !364, size: 32, offset: 320)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!365 = !DISubroutineType(types: !366)
!366 = !{null}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !219, file: !220, line: 632, baseType: !133, size: 32, offset: 352)
!368 = !DIGlobalVariableExpression(var: !369, expr: !DIExpression())
!369 = distinct !DIGlobalVariable(name: "blink0_id", scope: !27, file: !218, line: 111, type: !370, isLocal: false, isDefinition: true)
!370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !371)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !223)
!372 = !DIGlobalVariableExpression(var: !373, expr: !DIExpression())
!373 = distinct !DIGlobalVariable(name: "_k_thread_data_blink1_id", scope: !27, file: !218, line: 113, type: !219, isLocal: false, isDefinition: true, align: 32)
!374 = !DIGlobalVariableExpression(var: !375, expr: !DIExpression())
!375 = distinct !DIGlobalVariable(name: "blink1_id", scope: !27, file: !218, line: 113, type: !370, isLocal: false, isDefinition: true)
!376 = !DIGlobalVariableExpression(var: !377, expr: !DIExpression())
!377 = distinct !DIGlobalVariable(name: "_k_thread_data_uart_out_id", scope: !27, file: !218, line: 115, type: !219, isLocal: false, isDefinition: true, align: 32)
!378 = !DIGlobalVariableExpression(var: !379, expr: !DIExpression())
!379 = distinct !DIGlobalVariable(name: "uart_out_id", scope: !27, file: !218, line: 115, type: !370, isLocal: false, isDefinition: true)
!380 = !DIGlobalVariableExpression(var: !381, expr: !DIExpression())
!381 = distinct !DIGlobalVariable(name: "_k_thread_stack_blink0_id", scope: !27, file: !218, line: 111, type: !382, isLocal: false, isDefinition: true, align: 512)
!382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !346, size: 8704, elements: !383)
!383 = !{!384}
!384 = !DISubrange(count: 1088)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "_k_thread_obj_blink0_id", scope: !27, file: !218, line: 111, type: !224, isLocal: false, isDefinition: true)
!387 = !DIGlobalVariableExpression(var: !388, expr: !DIExpression())
!388 = distinct !DIGlobalVariable(name: "_k_thread_stack_blink1_id", scope: !27, file: !218, line: 113, type: !382, isLocal: false, isDefinition: true, align: 512)
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "_k_thread_obj_blink1_id", scope: !27, file: !218, line: 113, type: !224, isLocal: false, isDefinition: true)
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "_k_thread_stack_uart_out_id", scope: !27, file: !218, line: 115, type: !382, isLocal: false, isDefinition: true, align: 512)
!393 = !DIGlobalVariableExpression(var: !394, expr: !DIExpression())
!394 = distinct !DIGlobalVariable(name: "_k_thread_obj_uart_out_id", scope: !27, file: !218, line: 115, type: !224, isLocal: false, isDefinition: true)
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "led0", scope: !27, file: !218, line: 44, type: !397, isLocal: true, isDefinition: true)
!397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !398)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "led", file: !218, line: 39, size: 96, elements: !399)
!399 = !{!400, !407}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !398, file: !218, line: 40, baseType: !401, size: 64)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !102, line: 271, size: 64, elements: !402)
!402 = !{!403, !404, !405}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !401, file: !102, line: 273, baseType: !127, size: 32)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !401, file: !102, line: 275, baseType: !154, size: 8, offset: 32)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !401, file: !102, line: 277, baseType: !406, size: 16, offset: 48)
!406 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !102, line: 249, baseType: !279)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !398, file: !218, line: 41, baseType: !143, size: 8, offset: 64)
!408 = !DIGlobalVariableExpression(var: !409, expr: !DIExpression())
!409 = distinct !DIGlobalVariable(name: "led1", scope: !27, file: !218, line: 49, type: !397, isLocal: true, isDefinition: true)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !220, line: 2208, size: 160, elements: !411)
!411 = !{!412}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !410, file: !220, line: 2209, baseType: !413, size: 160)
!413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !220, line: 1709, size: 160, elements: !414)
!414 = !{!415, !428, !429}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !413, file: !220, line: 1710, baseType: !416, size: 64)
!416 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !417, line: 46, baseType: !418)
!417 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !417, line: 41, size: 64, elements: !419)
!419 = !{!420, !427}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !418, file: !417, line: 42, baseType: !421, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !417, line: 39, baseType: !423)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !417, line: 35, size: 32, elements: !424)
!424 = !{!425}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !423, file: !417, line: 36, baseType: !426, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !417, line: 32, baseType: !156)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !418, file: !417, line: 43, baseType: !421, size: 32, offset: 32)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !413, file: !220, line: 1711, baseType: !333, size: 32, offset: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !413, file: !220, line: 1712, baseType: !260, size: 64, offset: 96)
!430 = !DIGlobalVariableExpression(var: !431, expr: !DIExpression())
!431 = distinct !DIGlobalVariable(name: "_char_out", scope: !432, file: !437, line: 54, type: !438, isLocal: false, isDefinition: true)
!432 = distinct !DICompileUnit(language: DW_LANG_C99, file: !433, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, globals: !436, splitDebugInlining: false, nameTableKind: None)
!433 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!434 = !{!30}
!435 = !{!117, !118}
!436 = !{!430}
!437 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 32)
!439 = !DISubroutineType(types: !440)
!440 = !{!118, !118}
!441 = !DIGlobalVariableExpression(var: !442, expr: !DIExpression())
!442 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !443, file: !460, line: 56, type: !461, isLocal: true, isDefinition: true, align: 32)
!443 = distinct !DICompileUnit(language: DW_LANG_C99, file: !444, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !445, globals: !459, splitDebugInlining: false, nameTableKind: None)
!444 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!445 = !{!446}
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 32)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !448, line: 379, baseType: !449)
!448 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f412cx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 370, size: 224, elements: !450)
!450 = !{!451, !453, !454, !455, !456, !457, !458}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !449, file: !448, line: 372, baseType: !452, size: 32)
!452 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !156)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !449, file: !448, line: 373, baseType: !452, size: 32, offset: 32)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !449, file: !448, line: 374, baseType: !452, size: 32, offset: 64)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !449, file: !448, line: 375, baseType: !452, size: 32, offset: 96)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !449, file: !448, line: 376, baseType: !452, size: 32, offset: 128)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !449, file: !448, line: 377, baseType: !452, size: 32, offset: 160)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !449, file: !448, line: 378, baseType: !452, size: 32, offset: 192)
!459 = !{!441}
!460 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !462)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !464)
!463 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!464 = !{!465, !484}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !462, file: !463, line: 60, baseType: !466, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 32)
!467 = !DISubroutineType(types: !468)
!468 = !{!118, !469}
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !472)
!472 = !{!473, !474, !475, !476, !482, !483}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !471, file: !130, line: 380, baseType: !133, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !471, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !471, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !471, file: !130, line: 386, baseType: !477, size: 32, offset: 96)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 32)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !479)
!479 = !{!480, !481}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !478, file: !130, line: 359, baseType: !143, size: 8)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !478, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !471, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !471, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !462, file: !463, line: 65, baseType: !469, size: 32, offset: 32)
!485 = !DIGlobalVariableExpression(var: !486, expr: !DIExpression())
!486 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !487, file: !490, line: 71, type: !491, isLocal: true, isDefinition: true, align: 32)
!487 = distinct !DICompileUnit(language: DW_LANG_C99, file: !488, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !489, splitDebugInlining: false, nameTableKind: None)
!488 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!489 = !{!485}
!490 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !492)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !493)
!493 = !{!494, !513}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !492, file: !463, line: 60, baseType: !495, size: 32)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 32)
!496 = !DISubroutineType(types: !497)
!497 = !{!118, !498}
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !500)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !501)
!501 = !{!502, !503, !504, !505, !511, !512}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !500, file: !130, line: 380, baseType: !133, size: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !500, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !500, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !500, file: !130, line: 386, baseType: !506, size: 32, offset: 96)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 32)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !508)
!508 = !{!509, !510}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !507, file: !130, line: 359, baseType: !143, size: 8)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !507, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !500, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !500, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !492, file: !463, line: 65, baseType: !498, size: 32, offset: 32)
!514 = !DIGlobalVariableExpression(var: !515, expr: !DIExpression())
!515 = distinct !DIGlobalVariable(name: "static_regions", scope: !516, file: !523, line: 62, type: !647, isLocal: true, isDefinition: true)
!516 = distinct !DICompileUnit(language: DW_LANG_C99, file: !517, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !518, globals: !519, splitDebugInlining: false, nameTableKind: None)
!517 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!518 = !{!315, !118, !156, !117}
!519 = !{!520, !514}
!520 = !DIGlobalVariableExpression(var: !521, expr: !DIExpression())
!521 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !522, file: !523, line: 198, type: !633, isLocal: true, isDefinition: true)
!522 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !523, file: !523, line: 175, type: !524, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !516, retainedNodes: !628)
!523 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!524 = !DISubroutineType(types: !525)
!525 = !{null, !526}
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 32)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !528)
!528 = !{!529, !587, !599, !600, !601, !602, !608, !623}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !527, file: !225, line: 247, baseType: !530, size: 384)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !531)
!531 = !{!532, !556, !563, !564, !565, !574, !575, !576}
!532 = !DIDerivedType(tag: DW_TAG_member, scope: !530, file: !225, line: 60, baseType: !533, size: 64)
!533 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !530, file: !225, line: 60, size: 64, elements: !534)
!534 = !{!535, !550}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !533, file: !225, line: 61, baseType: !536, size: 64)
!536 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !537)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !538)
!538 = !{!539, !545}
!539 = !DIDerivedType(tag: DW_TAG_member, scope: !537, file: !235, line: 38, baseType: !540, size: 32)
!540 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !537, file: !235, line: 38, size: 32, elements: !541)
!541 = !{!542, !544}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !540, file: !235, line: 39, baseType: !543, size: 32)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 32)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !540, file: !235, line: 40, baseType: !543, size: 32)
!545 = !DIDerivedType(tag: DW_TAG_member, scope: !537, file: !235, line: 42, baseType: !546, size: 32, offset: 32)
!546 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !537, file: !235, line: 42, size: 32, elements: !547)
!547 = !{!548, !549}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !546, file: !235, line: 43, baseType: !543, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !546, file: !235, line: 44, baseType: !543, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !533, file: !225, line: 62, baseType: !551, size: 64)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !552)
!552 = !{!553}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !551, file: !251, line: 50, baseType: !554, size: 64)
!554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !555, size: 64, elements: !256)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 32)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !530, file: !225, line: 68, baseType: !557, size: 32, offset: 64)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 32)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !560)
!560 = !{!561}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !559, file: !261, line: 232, baseType: !562, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !537)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !530, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !530, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!565 = !DIDerivedType(tag: DW_TAG_member, scope: !530, file: !225, line: 90, baseType: !566, size: 16, offset: 112)
!566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !530, file: !225, line: 90, size: 16, elements: !567)
!567 = !{!568, !573}
!568 = !DIDerivedType(tag: DW_TAG_member, scope: !566, file: !225, line: 91, baseType: !569, size: 16)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !566, file: !225, line: 91, size: 16, elements: !570)
!570 = !{!571, !572}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !569, file: !225, line: 96, baseType: !275, size: 8)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !569, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !566, file: !225, line: 100, baseType: !279, size: 16)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !530, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !530, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !530, file: !225, line: 131, baseType: !577, size: 192, offset: 192)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !578)
!578 = !{!579, !580, !586}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !577, file: !261, line: 245, baseType: !536, size: 64)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !577, file: !261, line: 246, baseType: !581, size: 32, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !582)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 32)
!583 = !DISubroutineType(types: !584)
!584 = !{null, !585}
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !577, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !527, file: !225, line: 250, baseType: !588, size: 288, offset: 384)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !589)
!589 = !{!590, !591, !592, !593, !594, !595, !596, !597, !598}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !588, file: !296, line: 26, baseType: !156, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !588, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !588, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !588, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !588, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !588, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !588, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !588, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !588, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !527, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !527, file: !225, line: 256, baseType: !558, size: 64, offset: 704)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !527, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !527, file: !225, line: 300, baseType: !603, size: 96, offset: 800)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !604)
!604 = !{!605, !606, !607}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !603, file: !225, line: 153, baseType: !22, size: 32)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !603, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !603, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !527, file: !225, line: 325, baseType: !609, size: 32, offset: 896)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !611)
!611 = !{!612, !618, !619}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !610, file: !220, line: 5074, baseType: !613, size: 96)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !614)
!614 = !{!615, !616, !617}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !613, file: !324, line: 57, baseType: !327, size: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !613, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !613, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !610, file: !220, line: 5075, baseType: !558, size: 64, offset: 96)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !610, file: !220, line: 5076, baseType: !620, size: 32, offset: 160)
!620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !621)
!621 = !{!622}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !620, file: !334, line: 52, baseType: !22, size: 32)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !527, file: !225, line: 343, baseType: !624, size: 64, offset: 928)
!624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !625)
!625 = !{!626, !627}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !624, file: !296, line: 63, baseType: !156, size: 32)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !624, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!628 = !{!629, !630, !631, !632}
!629 = !DILocalVariable(name: "thread", arg: 1, scope: !522, file: !523, line: 175, type: !526)
!630 = !DILocalVariable(name: "region_num", scope: !522, file: !523, line: 200, type: !143)
!631 = !DILocalVariable(name: "guard_start", scope: !522, file: !523, line: 265, type: !22)
!632 = !DILocalVariable(name: "guard_size", scope: !522, file: !523, line: 266, type: !315)
!633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !634, size: 96, elements: !645)
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !635, line: 52, size: 96, elements: !636)
!635 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!636 = !{!637, !638, !639}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !634, file: !635, line: 53, baseType: !22, size: 32)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !634, file: !635, line: 54, baseType: !315, size: 32, offset: 32)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !634, file: !635, line: 55, baseType: !640, size: 32, offset: 64)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !641, line: 151, baseType: !642)
!641 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!642 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !641, line: 149, size: 32, elements: !643)
!643 = !{!644}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !642, file: !641, line: 150, baseType: !156, size: 32)
!645 = !{!646}
!646 = !DISubrange(count: 1)
!647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !648, size: 96, elements: !645)
!648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !634)
!649 = !DIGlobalVariableExpression(var: !650, expr: !DIExpression())
!650 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !651, file: !684, line: 39, type: !143, isLocal: true, isDefinition: true)
!651 = distinct !DICompileUnit(language: DW_LANG_C99, file: !652, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !653, globals: !683, splitDebugInlining: false, nameTableKind: None)
!652 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!653 = !{!654, !117, !118, !671, !143}
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 32)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !656, line: 1226, baseType: !657)
!656 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!657 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 1213, size: 352, elements: !658)
!658 = !{!659, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !657, file: !656, line: 1215, baseType: !660, size: 32)
!660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !452)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !657, file: !656, line: 1216, baseType: !452, size: 32, offset: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !657, file: !656, line: 1217, baseType: !452, size: 32, offset: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !657, file: !656, line: 1218, baseType: !452, size: 32, offset: 96)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !657, file: !656, line: 1219, baseType: !452, size: 32, offset: 128)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !657, file: !656, line: 1220, baseType: !452, size: 32, offset: 160)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !657, file: !656, line: 1221, baseType: !452, size: 32, offset: 192)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !657, file: !656, line: 1222, baseType: !452, size: 32, offset: 224)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !657, file: !656, line: 1223, baseType: !452, size: 32, offset: 256)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !657, file: !656, line: 1224, baseType: !452, size: 32, offset: 288)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !657, file: !656, line: 1225, baseType: !452, size: 32, offset: 320)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 32)
!672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !674, line: 27, size: 96, elements: !675)
!674 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!675 = !{!676, !677, !678}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !673, file: !674, line: 29, baseType: !156, size: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !673, file: !674, line: 31, baseType: !133, size: 32, offset: 32)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !673, file: !674, line: 37, baseType: !679, size: 32, offset: 64)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !641, line: 146, baseType: !680)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !641, line: 141, size: 32, elements: !681)
!681 = !{!682}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !680, file: !641, line: 143, baseType: !156, size: 32)
!683 = !{!649}
!684 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!685 = !DIGlobalVariableExpression(var: !686, expr: !DIExpression())
!686 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !687, file: !694, line: 21, type: !438, isLocal: true, isDefinition: true)
!687 = distinct !DICompileUnit(language: DW_LANG_C99, file: !688, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !689, globals: !693, splitDebugInlining: false, nameTableKind: None)
!688 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!689 = !{!690, !118, !117}
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 32)
!691 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !692, line: 22, baseType: !118)
!692 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!693 = !{!685}
!694 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!695 = !DIGlobalVariableExpression(var: !696, expr: !DIExpression())
!696 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !697, file: !702, line: 13, type: !719, isLocal: true, isDefinition: true)
!697 = distinct !DICompileUnit(language: DW_LANG_C99, file: !698, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !699, splitDebugInlining: false, nameTableKind: None)
!698 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!699 = !{!700, !695}
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "mpu_config", scope: !697, file: !702, line: 37, type: !703, isLocal: false, isDefinition: true)
!702 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !704)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !674, line: 41, size: 64, elements: !705)
!705 = !{!706, !707}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !704, file: !674, line: 43, baseType: !156, size: 32)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !704, file: !674, line: 45, baseType: !708, size: 32, offset: 32)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !710)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !674, line: 27, size: 96, elements: !711)
!711 = !{!712, !713, !714}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !710, file: !674, line: 29, baseType: !156, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !710, file: !674, line: 31, baseType: !133, size: 32, offset: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !710, file: !674, line: 37, baseType: !715, size: 32, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !641, line: 146, baseType: !716)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !641, line: 141, size: 32, elements: !717)
!717 = !{!718}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !716, file: !641, line: 143, baseType: !156, size: 32)
!719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !709, size: 192, elements: !256)
!720 = !DIGlobalVariableExpression(var: !721, expr: !DIExpression())
!721 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !722, file: !826, line: 72, type: !909, isLocal: true, isDefinition: true)
!722 = distinct !DICompileUnit(language: DW_LANG_C99, file: !723, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !724, retainedTypes: !812, globals: !823, splitDebugInlining: false, nameTableKind: None)
!723 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!724 = !{!30, !725}
!725 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !448, line: 65, baseType: !118, size: 32, elements: !726)
!726 = !{!727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!727 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!728 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!729 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!730 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!731 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!732 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!733 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!734 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!735 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!736 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!737 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!738 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!739 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!740 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!741 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!742 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!743 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!744 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!745 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!746 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!747 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!748 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!749 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!750 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!751 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!752 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!753 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!754 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!755 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!756 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!757 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!758 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!759 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!760 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!761 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!762 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!763 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!764 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!765 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!766 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!767 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!768 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!769 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!770 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!771 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!772 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!773 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!774 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!775 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!776 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!777 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!778 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!779 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!780 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!781 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!782 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!783 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!784 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!785 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!786 = !DIEnumerator(name: "TIM6_IRQn", value: 54)
!787 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!788 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!789 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!790 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!791 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!792 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!793 = !DIEnumerator(name: "DFSDM1_FLT0_IRQn", value: 61)
!794 = !DIEnumerator(name: "DFSDM1_FLT1_IRQn", value: 62)
!795 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!796 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!797 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!798 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!799 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!800 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!801 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!802 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!803 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!804 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!805 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!806 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!807 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!808 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!809 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!810 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!811 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!812 = !{!315, !118, !117, !813}
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 32)
!814 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !448, line: 364, baseType: !815)
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 356, size: 192, elements: !816)
!816 = !{!817, !818, !819, !820, !821, !822}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !815, file: !448, line: 358, baseType: !452, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !815, file: !448, line: 359, baseType: !452, size: 32, offset: 32)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !815, file: !448, line: 360, baseType: !452, size: 32, offset: 64)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !815, file: !448, line: 361, baseType: !452, size: 32, offset: 96)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !815, file: !448, line: 362, baseType: !452, size: 32, offset: 128)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !815, file: !448, line: 363, baseType: !452, size: 32, offset: 160)
!823 = !{!824, !830, !846, !857, !874, !720, !876, !889, !891, !893, !895, !897, !899, !901, !903, !905, !907}
!824 = !DIGlobalVariableExpression(var: !825, expr: !DIExpression())
!825 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !722, file: !826, line: 424, type: !827, isLocal: false, isDefinition: true, align: 16)
!826 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 64, elements: !828)
!828 = !{!829}
!829 = !DISubrange(count: 4)
!830 = !DIGlobalVariableExpression(var: !831, expr: !DIExpression())
!831 = distinct !DIGlobalVariable(name: "__device_dts_ord_35", scope: !722, file: !826, line: 424, type: !832, isLocal: false, isDefinition: true, align: 32)
!832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !833)
!833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !834)
!834 = !{!835, !836, !837, !838, !844, !845}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !833, file: !130, line: 380, baseType: !133, size: 32)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !833, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !833, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !833, file: !130, line: 386, baseType: !839, size: 32, offset: 96)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 32)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !841)
!841 = !{!842, !843}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !840, file: !130, line: 359, baseType: !143, size: 8)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !840, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !833, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !833, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!846 = !DIGlobalVariableExpression(var: !847, expr: !DIExpression())
!847 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_35", scope: !722, file: !826, line: 424, type: !848, isLocal: true, isDefinition: true, align: 32)
!848 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !849)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !850)
!850 = !{!851, !856}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !849, file: !463, line: 60, baseType: !852, size: 32)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 32)
!853 = !DISubroutineType(types: !854)
!854 = !{!118, !855}
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 32)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !849, file: !463, line: 65, baseType: !855, size: 32, offset: 32)
!857 = !DIGlobalVariableExpression(var: !858, expr: !DIExpression())
!858 = distinct !DIGlobalVariable(name: "exti_data", scope: !722, file: !826, line: 423, type: !859, isLocal: true, isDefinition: true)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !826, line: 107, size: 1472, elements: !860)
!860 = !{!861}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !859, file: !826, line: 109, baseType: !862, size: 1472)
!862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !863, size: 1472, elements: !872)
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !826, line: 101, size: 64, elements: !864)
!864 = !{!865, !871}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !863, file: !826, line: 102, baseType: !866, size: 32)
!866 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !867, line: 63, baseType: !868)
!867 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 32)
!869 = !DISubroutineType(types: !870)
!870 = !{null, !118, !117}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !863, file: !826, line: 103, baseType: !117, size: 32, offset: 32)
!872 = !{!873}
!873 = !DISubrange(count: 23)
!874 = !DIGlobalVariableExpression(var: !875, expr: !DIExpression())
!875 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_35", scope: !722, file: !826, line: 424, type: !840, isLocal: true, isDefinition: true, align: 8)
!876 = !DIGlobalVariableExpression(var: !877, expr: !DIExpression())
!877 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !878, file: !826, line: 493, type: !883, isLocal: true, isDefinition: true, align: 32)
!878 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !826, file: !826, line: 460, type: !879, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !881)
!879 = !DISubroutineType(types: !880)
!880 = !{null, !855}
!881 = !{!882}
!882 = !DILocalVariable(name: "dev", arg: 1, scope: !878, file: !826, line: 460, type: !855)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !884)
!884 = !{!885, !886, !887, !888}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !883, file: !10, line: 55, baseType: !362, size: 32)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !883, file: !10, line: 57, baseType: !362, size: 32, offset: 32)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !883, file: !10, line: 59, baseType: !117, size: 32, offset: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !883, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!889 = !DIGlobalVariableExpression(var: !890, expr: !DIExpression())
!890 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !878, file: !826, line: 497, type: !883, isLocal: true, isDefinition: true, align: 32)
!891 = !DIGlobalVariableExpression(var: !892, expr: !DIExpression())
!892 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !878, file: !826, line: 507, type: !883, isLocal: true, isDefinition: true, align: 32)
!893 = !DIGlobalVariableExpression(var: !894, expr: !DIExpression())
!894 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !878, file: !826, line: 512, type: !883, isLocal: true, isDefinition: true, align: 32)
!895 = !DIGlobalVariableExpression(var: !896, expr: !DIExpression())
!896 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !878, file: !826, line: 516, type: !883, isLocal: true, isDefinition: true, align: 32)
!897 = !DIGlobalVariableExpression(var: !898, expr: !DIExpression())
!898 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !878, file: !826, line: 523, type: !883, isLocal: true, isDefinition: true, align: 32)
!899 = !DIGlobalVariableExpression(var: !900, expr: !DIExpression())
!900 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !878, file: !826, line: 527, type: !883, isLocal: true, isDefinition: true, align: 32)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !878, file: !826, line: 581, type: !883, isLocal: true, isDefinition: true, align: 32)
!903 = !DIGlobalVariableExpression(var: !904, expr: !DIExpression())
!904 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !878, file: !826, line: 586, type: !883, isLocal: true, isDefinition: true, align: 32)
!905 = !DIGlobalVariableExpression(var: !906, expr: !DIExpression())
!906 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !878, file: !826, line: 591, type: !883, isLocal: true, isDefinition: true, align: 32)
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !878, file: !826, line: 595, type: !883, isLocal: true, isDefinition: true, align: 32)
!909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 736, elements: !872)
!910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !911)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !448, line: 154, baseType: !725)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !914, file: !919, line: 22, type: !941, isLocal: false, isDefinition: true, align: 16)
!914 = distinct !DICompileUnit(language: DW_LANG_C99, file: !915, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !916, splitDebugInlining: false, nameTableKind: None)
!915 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!916 = !{!917, !912, !923, !925, !927, !929, !931, !933, !935, !937, !939}
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !914, file: !919, line: 17, type: !920, isLocal: false, isDefinition: true, align: 16)
!919 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 192, elements: !921)
!921 = !{!922}
!922 = !DISubrange(count: 12)
!923 = !DIGlobalVariableExpression(var: !924, expr: !DIExpression())
!924 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !914, file: !919, line: 29, type: !827, isLocal: false, isDefinition: true, align: 16)
!925 = !DIGlobalVariableExpression(var: !926, expr: !DIExpression())
!926 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !914, file: !919, line: 36, type: !827, isLocal: false, isDefinition: true, align: 16)
!927 = !DIGlobalVariableExpression(var: !928, expr: !DIExpression())
!928 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !914, file: !919, line: 43, type: !827, isLocal: false, isDefinition: true, align: 16)
!929 = !DIGlobalVariableExpression(var: !930, expr: !DIExpression())
!930 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !914, file: !919, line: 50, type: !827, isLocal: false, isDefinition: true, align: 16)
!931 = !DIGlobalVariableExpression(var: !932, expr: !DIExpression())
!932 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !914, file: !919, line: 57, type: !827, isLocal: false, isDefinition: true, align: 16)
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !914, file: !919, line: 64, type: !827, isLocal: false, isDefinition: true, align: 16)
!935 = !DIGlobalVariableExpression(var: !936, expr: !DIExpression())
!936 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !914, file: !919, line: 71, type: !827, isLocal: false, isDefinition: true, align: 16)
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !914, file: !919, line: 78, type: !827, isLocal: false, isDefinition: true, align: 16)
!939 = !DIGlobalVariableExpression(var: !940, expr: !DIExpression())
!940 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !914, file: !919, line: 85, type: !827, isLocal: false, isDefinition: true, align: 16)
!941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 48, elements: !942)
!942 = !{!943}
!943 = !DISubrange(count: 3)
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !946, file: !1008, line: 398, type: !1041, isLocal: true, isDefinition: true)
!946 = distinct !DICompileUnit(language: DW_LANG_C99, file: !947, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !948, retainedTypes: !961, globals: !1005, splitDebugInlining: false, nameTableKind: None)
!947 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!948 = !{!949, !30, !954}
!949 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !950, line: 197, baseType: !32, size: 32, elements: !951)
!950 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!951 = !{!952, !953}
!952 = !DIEnumerator(name: "SUCCESS", value: 0)
!953 = !DIEnumerator(name: "ERROR", value: 1)
!954 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !955, line: 44, baseType: !32, size: 32, elements: !956)
!955 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!956 = !{!957, !958, !959, !960}
!957 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!958 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!959 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!960 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!961 = !{!117, !118, !156, !962, !998, !1004}
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 32)
!963 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !448, line: 510, baseType: !964)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 477, size: 1216, elements: !965)
!965 = !{!966, !967, !968, !969, !970, !971, !972, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !964, file: !448, line: 479, baseType: !452, size: 32)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !964, file: !448, line: 480, baseType: !452, size: 32, offset: 32)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !964, file: !448, line: 481, baseType: !452, size: 32, offset: 64)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !964, file: !448, line: 482, baseType: !452, size: 32, offset: 96)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !964, file: !448, line: 483, baseType: !452, size: 32, offset: 128)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !964, file: !448, line: 484, baseType: !452, size: 32, offset: 160)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !964, file: !448, line: 485, baseType: !973, size: 64, offset: 192)
!973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 64, elements: !256)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !964, file: !448, line: 486, baseType: !452, size: 32, offset: 256)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !964, file: !448, line: 487, baseType: !452, size: 32, offset: 288)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !964, file: !448, line: 488, baseType: !973, size: 64, offset: 320)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !964, file: !448, line: 489, baseType: !452, size: 32, offset: 384)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !964, file: !448, line: 490, baseType: !452, size: 32, offset: 416)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !964, file: !448, line: 491, baseType: !973, size: 64, offset: 448)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !964, file: !448, line: 492, baseType: !452, size: 32, offset: 512)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !964, file: !448, line: 493, baseType: !452, size: 32, offset: 544)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !964, file: !448, line: 494, baseType: !973, size: 64, offset: 576)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !964, file: !448, line: 495, baseType: !452, size: 32, offset: 640)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !964, file: !448, line: 496, baseType: !452, size: 32, offset: 672)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !964, file: !448, line: 497, baseType: !973, size: 64, offset: 704)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !964, file: !448, line: 498, baseType: !452, size: 32, offset: 768)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !964, file: !448, line: 499, baseType: !452, size: 32, offset: 800)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !964, file: !448, line: 500, baseType: !973, size: 64, offset: 832)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !964, file: !448, line: 501, baseType: !452, size: 32, offset: 896)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !964, file: !448, line: 502, baseType: !452, size: 32, offset: 928)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !964, file: !448, line: 503, baseType: !973, size: 64, offset: 960)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !964, file: !448, line: 504, baseType: !452, size: 32, offset: 1024)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !964, file: !448, line: 505, baseType: !452, size: 32, offset: 1056)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !964, file: !448, line: 506, baseType: !156, size: 32, offset: 1088)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !964, file: !448, line: 507, baseType: !452, size: 32, offset: 1120)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !964, file: !448, line: 508, baseType: !452, size: 32, offset: 1152)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !964, file: !448, line: 509, baseType: !452, size: 32, offset: 1184)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 32)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1000, line: 343, size: 64, elements: !1001)
!1000 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1001 = !{!1002, !1003}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !999, file: !1000, line: 344, baseType: !156, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !999, file: !1000, line: 345, baseType: !156, size: 32, offset: 32)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 32)
!1005 = !{!1006, !1012, !1028, !1039, !944}
!1006 = !DIGlobalVariableExpression(var: !1007, expr: !DIExpression())
!1007 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !946, file: !1008, line: 752, type: !1009, isLocal: false, isDefinition: true, align: 16)
!1008 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 848, elements: !1010)
!1010 = !{!1011}
!1011 = !DISubrange(count: 53)
!1012 = !DIGlobalVariableExpression(var: !1013, expr: !DIExpression())
!1013 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !946, file: !1008, line: 752, type: !1014, isLocal: false, isDefinition: true, align: 32)
!1014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1015)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1016)
!1016 = !{!1017, !1018, !1019, !1020, !1026, !1027}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1015, file: !130, line: 380, baseType: !133, size: 32)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1015, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1015, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1015, file: !130, line: 386, baseType: !1021, size: 32, offset: 96)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1023)
!1023 = !{!1024, !1025}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1022, file: !130, line: 359, baseType: !143, size: 8)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1022, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1015, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1015, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1028 = !DIGlobalVariableExpression(var: !1029, expr: !DIExpression())
!1029 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !946, file: !1008, line: 752, type: !1030, isLocal: true, isDefinition: true, align: 32)
!1030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1031)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !1032)
!1032 = !{!1033, !1038}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1031, file: !463, line: 60, baseType: !1034, size: 32)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 32)
!1035 = !DISubroutineType(types: !1036)
!1036 = !{!118, !1037}
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 32)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1031, file: !463, line: 65, baseType: !1037, size: 32, offset: 32)
!1039 = !DIGlobalVariableExpression(var: !1040, expr: !DIExpression())
!1040 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !946, file: !1008, line: 752, type: !1022, isLocal: true, isDefinition: true, align: 8)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !955, line: 100, size: 224, elements: !1042)
!1042 = !{!1043, !1049, !1050, !1059, !1064, !1069, !1075}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1041, file: !955, line: 101, baseType: !1044, size: 32)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !955, line: 76, baseType: !1045)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!118, !1037, !1048}
!1048 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !955, line: 56, baseType: !117)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1041, file: !955, line: 102, baseType: !1044, size: 32, offset: 32)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1041, file: !955, line: 103, baseType: !1051, size: 32, offset: 64)
!1051 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !955, line: 83, baseType: !1052)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 32)
!1053 = !DISubroutineType(types: !1054)
!1054 = !{!118, !1037, !1048, !1055, !117}
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !955, line: 72, baseType: !1056)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{null, !1037, !1048, !117}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1041, file: !955, line: 104, baseType: !1060, size: 32, offset: 96)
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !955, line: 79, baseType: !1061)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 32)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!118, !1037, !1048, !1004}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1041, file: !955, line: 105, baseType: !1065, size: 32, offset: 128)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !955, line: 88, baseType: !1066)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 32)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!954, !1037, !1048}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1041, file: !955, line: 106, baseType: !1070, size: 32, offset: 160)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !955, line: 92, baseType: !1071)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 32)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!118, !1037, !1048, !1074}
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !955, line: 64, baseType: !117)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1041, file: !955, line: 107, baseType: !1076, size: 32, offset: 192)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !955, line: 96, baseType: !1077)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 32)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!118, !1037, !1048, !117}
!1080 = !DIGlobalVariableExpression(var: !1081, expr: !DIExpression())
!1081 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1082, file: !1139, line: 603, type: !1141, isLocal: true, isDefinition: true, align: 32)
!1082 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1083, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !1084, globals: !1136, splitDebugInlining: false, nameTableKind: None)
!1083 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!1084 = !{!117, !118, !1085}
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 32)
!1086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1087)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1088, line: 336, size: 160, elements: !1089)
!1088 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1089 = !{!1090, !1110, !1114, !1118, !1131}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1087, file: !1088, line: 365, baseType: !1091, size: 32)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 32)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!118, !1094, !1109}
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1096)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1097)
!1097 = !{!1098, !1099, !1100, !1101, !1107, !1108}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1096, file: !130, line: 380, baseType: !133, size: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1096, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1096, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1096, file: !130, line: 386, baseType: !1102, size: 32, offset: 96)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1104)
!1104 = !{!1105, !1106}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1103, file: !130, line: 359, baseType: !143, size: 8)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1103, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1096, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1096, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1087, file: !1088, line: 366, baseType: !1111, size: 32, offset: 32)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 32)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{null, !1094, !144}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1087, file: !1088, line: 374, baseType: !1115, size: 32, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 32)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!118, !1094}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1087, file: !1088, line: 377, baseType: !1119, size: 32, offset: 96)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 32)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!118, !1094, !1122}
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 32)
!1123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1124)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1088, line: 122, size: 64, elements: !1125)
!1125 = !{!1126, !1127, !1128, !1129, !1130}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1124, file: !1088, line: 123, baseType: !156, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1124, file: !1088, line: 124, baseType: !143, size: 8, offset: 32)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1124, file: !1088, line: 125, baseType: !143, size: 8, offset: 40)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1124, file: !1088, line: 126, baseType: !143, size: 8, offset: 48)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1124, file: !1088, line: 127, baseType: !143, size: 8, offset: 56)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1087, file: !1088, line: 379, baseType: !1132, size: 32, offset: 128)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 32)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{!118, !1094, !1135}
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 32)
!1136 = !{!1080, !1137}
!1137 = !DIGlobalVariableExpression(var: !1138, expr: !DIExpression())
!1138 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1082, file: !1139, line: 38, type: !1140, isLocal: true, isDefinition: true)
!1139 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1094)
!1141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1142)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !1143)
!1143 = !{!1144, !1145}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1142, file: !463, line: 60, baseType: !1115, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1142, file: !463, line: 65, baseType: !1094, size: 32, offset: 32)
!1146 = !DIGlobalVariableExpression(var: !1147, expr: !DIExpression())
!1147 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1148, file: !1303, line: 762, type: !1415, isLocal: true, isDefinition: true)
!1148 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1149, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1150, retainedTypes: !1157, globals: !1300, splitDebugInlining: false, nameTableKind: None)
!1149 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!1150 = !{!30, !101, !107, !1151, !954}
!1151 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !867, line: 43, baseType: !32, size: 32, elements: !1152)
!1152 = !{!1153, !1154, !1155, !1156}
!1153 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1154 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1155 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1156 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1157 = !{!117, !118, !1158, !1222, !1227, !167, !107, !101, !1232, !1233, !156, !1247, !1203, !1259, !1260, !1261}
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 32)
!1159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1160)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !102, line: 523, size: 288, elements: !1161)
!1161 = !{!1162, !1181, !1185, !1189, !1193, !1194, !1195, !1199, !1218}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1160, file: !102, line: 524, baseType: !1163, size: 32)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 32)
!1164 = !DISubroutineType(types: !1165)
!1165 = !{!118, !1166, !154, !155}
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 32)
!1167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1168)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1169)
!1169 = !{!1170, !1171, !1172, !1173, !1179, !1180}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1168, file: !130, line: 380, baseType: !133, size: 32)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1168, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1168, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1168, file: !130, line: 386, baseType: !1174, size: 32, offset: 96)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 32)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1176)
!1176 = !{!1177, !1178}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1175, file: !130, line: 359, baseType: !143, size: 8)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1175, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1168, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1168, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1160, file: !102, line: 530, baseType: !1182, size: 32, offset: 32)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 32)
!1183 = !DISubroutineType(types: !1184)
!1184 = !{!118, !1166, !161}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1160, file: !102, line: 532, baseType: !1186, size: 32, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 32)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{!118, !1166, !167, !162}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1160, file: !102, line: 535, baseType: !1190, size: 32, offset: 96)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 32)
!1191 = !DISubroutineType(types: !1192)
!1192 = !{!118, !1166, !167}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1160, file: !102, line: 537, baseType: !1190, size: 32, offset: 128)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1160, file: !102, line: 539, baseType: !1190, size: 32, offset: 160)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1160, file: !102, line: 541, baseType: !1196, size: 32, offset: 192)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 32)
!1197 = !DISubroutineType(types: !1198)
!1198 = !{!118, !1166, !154, !101, !107}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1160, file: !102, line: 544, baseType: !1200, size: 32, offset: 224)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 32)
!1201 = !DISubroutineType(types: !1202)
!1202 = !{!118, !1166, !1203, !146}
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 32)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !102, line: 478, size: 96, elements: !1205)
!1205 = !{!1206, !1212, !1217}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1204, file: !102, line: 482, baseType: !1207, size: 32)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !187, line: 33, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !187, line: 29, size: 32, elements: !1209)
!1209 = !{!1210}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1208, file: !187, line: 30, baseType: !1211, size: 32)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1204, file: !102, line: 485, baseType: !1213, size: 32, offset: 32)
!1213 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !102, line: 464, baseType: !1214)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 32)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{null, !1166, !1203, !167}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1204, file: !102, line: 493, baseType: !167, size: 32, offset: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1160, file: !102, line: 547, baseType: !1219, size: 32, offset: 256)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 32)
!1220 = !DISubroutineType(types: !1221)
!1221 = !{!156, !1166}
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 32)
!1223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1224)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !102, line: 428, size: 32, elements: !1225)
!1225 = !{!1226}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1224, file: !102, line: 434, baseType: !167, size: 32)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 32)
!1228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1229)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !102, line: 441, size: 32, elements: !1230)
!1230 = !{!1231}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1229, file: !102, line: 447, baseType: !167, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 32)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 32)
!1234 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !448, line: 396, baseType: !1235)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 385, size: 320, elements: !1236)
!1236 = !{!1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1235, file: !448, line: 387, baseType: !452, size: 32)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1235, file: !448, line: 388, baseType: !452, size: 32, offset: 32)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1235, file: !448, line: 389, baseType: !452, size: 32, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1235, file: !448, line: 390, baseType: !452, size: 32, offset: 96)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1235, file: !448, line: 391, baseType: !452, size: 32, offset: 128)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1235, file: !448, line: 392, baseType: !452, size: 32, offset: 160)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1235, file: !448, line: 393, baseType: !452, size: 32, offset: 192)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1235, file: !448, line: 394, baseType: !452, size: 32, offset: 224)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1235, file: !448, line: 395, baseType: !1246, size: 64, offset: 256)
!1246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 64, elements: !256)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !448, line: 411, baseType: !1249)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 402, size: 320, elements: !1250)
!1250 = !{!1251, !1252, !1253, !1255, !1256, !1257, !1258}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1249, file: !448, line: 404, baseType: !452, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1249, file: !448, line: 405, baseType: !452, size: 32, offset: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1249, file: !448, line: 406, baseType: !1254, size: 128, offset: 64)
!1254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 128, elements: !828)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1249, file: !448, line: 407, baseType: !156, size: 32, offset: 192)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR2", scope: !1249, file: !448, line: 408, baseType: !452, size: 32, offset: 224)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1249, file: !448, line: 409, baseType: !452, size: 32, offset: 256)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1249, file: !448, line: 410, baseType: !452, size: 32, offset: 288)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 32)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 32)
!1262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1263)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !955, line: 100, size: 224, elements: !1264)
!1264 = !{!1265, !1270, !1271, !1280, !1285, !1290, !1295}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1263, file: !955, line: 101, baseType: !1266, size: 32)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !955, line: 76, baseType: !1267)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!118, !1166, !1048}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1263, file: !955, line: 102, baseType: !1266, size: 32, offset: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1263, file: !955, line: 103, baseType: !1272, size: 32, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !955, line: 83, baseType: !1273)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 32)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{!118, !1166, !1048, !1276, !117}
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !955, line: 72, baseType: !1277)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 32)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{null, !1166, !1048, !117}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1263, file: !955, line: 104, baseType: !1281, size: 32, offset: 96)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !955, line: 79, baseType: !1282)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 32)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{!118, !1166, !1048, !1004}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1263, file: !955, line: 105, baseType: !1286, size: 32, offset: 128)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !955, line: 88, baseType: !1287)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{!954, !1166, !1048}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1263, file: !955, line: 106, baseType: !1291, size: 32, offset: 160)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !955, line: 92, baseType: !1292)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 32)
!1293 = !DISubroutineType(types: !1294)
!1294 = !{!118, !1166, !1048, !1074}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1263, file: !955, line: 107, baseType: !1296, size: 32, offset: 192)
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !955, line: 96, baseType: !1297)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 32)
!1298 = !DISubroutineType(types: !1299)
!1299 = !{!118, !1166, !1048, !117}
!1300 = !{!1301, !1307, !1309, !1319, !1321, !1323, !1325, !1330, !1332, !1334, !1339, !1341, !1343, !1345, !1347, !1349, !1351, !1353, !1355, !1357, !1359, !1361, !1363, !1365, !1367, !1381, !1383, !1385, !1387, !1389, !1391, !1393, !1395, !1397, !1399, !1401, !1403, !1405, !1407, !1409, !1146, !1411, !1413, !1426, !1428, !1430, !1432, !1434, !1436}
!1301 = !DIGlobalVariableExpression(var: !1302, expr: !DIExpression())
!1302 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1148, file: !1303, line: 762, type: !1304, isLocal: false, isDefinition: true, align: 16)
!1303 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 112, elements: !1305)
!1305 = !{!1306}
!1306 = !DISubrange(count: 7)
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1148, file: !1303, line: 762, type: !1167, isLocal: false, isDefinition: true, align: 32)
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1148, file: !1303, line: 762, type: !1311, isLocal: true, isDefinition: true, align: 32)
!1311 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1312)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !1313)
!1313 = !{!1314, !1318}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1312, file: !463, line: 60, baseType: !1315, size: 32)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 32)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{!118, !1166}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1312, file: !463, line: 65, baseType: !1166, size: 32, offset: 32)
!1319 = !DIGlobalVariableExpression(var: !1320, expr: !DIExpression())
!1320 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !1148, file: !1303, line: 766, type: !1304, isLocal: false, isDefinition: true, align: 16)
!1321 = !DIGlobalVariableExpression(var: !1322, expr: !DIExpression())
!1322 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !1148, file: !1303, line: 766, type: !1167, isLocal: false, isDefinition: true, align: 32)
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !1148, file: !1303, line: 766, type: !1311, isLocal: true, isDefinition: true, align: 32)
!1325 = !DIGlobalVariableExpression(var: !1326, expr: !DIExpression())
!1326 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1148, file: !1303, line: 770, type: !1327, isLocal: false, isDefinition: true, align: 16)
!1327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 96, elements: !1328)
!1328 = !{!1329}
!1329 = !DISubrange(count: 6)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !1148, file: !1303, line: 770, type: !1167, isLocal: false, isDefinition: true, align: 32)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !1148, file: !1303, line: 770, type: !1311, isLocal: true, isDefinition: true, align: 32)
!1334 = !DIGlobalVariableExpression(var: !1335, expr: !DIExpression())
!1335 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1148, file: !1303, line: 774, type: !1336, isLocal: false, isDefinition: true, align: 16)
!1336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 80, elements: !1337)
!1337 = !{!1338}
!1338 = !DISubrange(count: 5)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1148, file: !1303, line: 774, type: !1167, isLocal: false, isDefinition: true, align: 32)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1148, file: !1303, line: 774, type: !1311, isLocal: true, isDefinition: true, align: 32)
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1148, file: !1303, line: 778, type: !1336, isLocal: false, isDefinition: true, align: 16)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1148, file: !1303, line: 778, type: !1167, isLocal: false, isDefinition: true, align: 32)
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1148, file: !1303, line: 778, type: !1311, isLocal: true, isDefinition: true, align: 32)
!1349 = !DIGlobalVariableExpression(var: !1350, expr: !DIExpression())
!1350 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !1148, file: !1303, line: 782, type: !1336, isLocal: false, isDefinition: true, align: 16)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "__device_dts_ord_77", scope: !1148, file: !1303, line: 782, type: !1167, isLocal: false, isDefinition: true, align: 32)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_77", scope: !1148, file: !1303, line: 782, type: !1311, isLocal: true, isDefinition: true, align: 32)
!1355 = !DIGlobalVariableExpression(var: !1356, expr: !DIExpression())
!1356 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !1148, file: !1303, line: 786, type: !1336, isLocal: false, isDefinition: true, align: 16)
!1357 = !DIGlobalVariableExpression(var: !1358, expr: !DIExpression())
!1358 = distinct !DIGlobalVariable(name: "__device_dts_ord_78", scope: !1148, file: !1303, line: 786, type: !1167, isLocal: false, isDefinition: true, align: 32)
!1359 = !DIGlobalVariableExpression(var: !1360, expr: !DIExpression())
!1360 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_78", scope: !1148, file: !1303, line: 786, type: !1311, isLocal: true, isDefinition: true, align: 32)
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !1148, file: !1303, line: 790, type: !1336, isLocal: false, isDefinition: true, align: 16)
!1363 = !DIGlobalVariableExpression(var: !1364, expr: !DIExpression())
!1364 = distinct !DIGlobalVariable(name: "__device_dts_ord_79", scope: !1148, file: !1303, line: 790, type: !1167, isLocal: false, isDefinition: true, align: 32)
!1365 = !DIGlobalVariableExpression(var: !1366, expr: !DIExpression())
!1366 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_79", scope: !1148, file: !1303, line: 790, type: !1311, isLocal: true, isDefinition: true, align: 32)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1148, file: !1303, line: 762, type: !1369, isLocal: true, isDefinition: true)
!1369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1370, line: 237, size: 128, elements: !1371)
!1370 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1371 = !{!1372, !1373, !1374}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1369, file: !1370, line: 239, baseType: !1229, size: 32)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1369, file: !1370, line: 241, baseType: !1166, size: 32, offset: 32)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1369, file: !1370, line: 243, baseType: !1375, size: 64, offset: 64)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !187, line: 40, baseType: !1376)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !187, line: 35, size: 64, elements: !1377)
!1377 = !{!1378, !1380}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1376, file: !187, line: 36, baseType: !1379, size: 32)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1376, file: !187, line: 37, baseType: !1379, size: 32, offset: 32)
!1381 = !DIGlobalVariableExpression(var: !1382, expr: !DIExpression())
!1382 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1148, file: !1303, line: 762, type: !1175, isLocal: true, isDefinition: true, align: 8)
!1383 = !DIGlobalVariableExpression(var: !1384, expr: !DIExpression())
!1384 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1148, file: !1303, line: 766, type: !1369, isLocal: true, isDefinition: true)
!1385 = !DIGlobalVariableExpression(var: !1386, expr: !DIExpression())
!1386 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !1148, file: !1303, line: 766, type: !1175, isLocal: true, isDefinition: true, align: 8)
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1148, file: !1303, line: 770, type: !1369, isLocal: true, isDefinition: true)
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !1148, file: !1303, line: 770, type: !1175, isLocal: true, isDefinition: true, align: 8)
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1148, file: !1303, line: 774, type: !1369, isLocal: true, isDefinition: true)
!1393 = !DIGlobalVariableExpression(var: !1394, expr: !DIExpression())
!1394 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1148, file: !1303, line: 774, type: !1175, isLocal: true, isDefinition: true, align: 8)
!1395 = !DIGlobalVariableExpression(var: !1396, expr: !DIExpression())
!1396 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1148, file: !1303, line: 778, type: !1369, isLocal: true, isDefinition: true)
!1397 = !DIGlobalVariableExpression(var: !1398, expr: !DIExpression())
!1398 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1148, file: !1303, line: 778, type: !1175, isLocal: true, isDefinition: true, align: 8)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1148, file: !1303, line: 782, type: !1369, isLocal: true, isDefinition: true)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_77", scope: !1148, file: !1303, line: 782, type: !1175, isLocal: true, isDefinition: true, align: 8)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1148, file: !1303, line: 786, type: !1369, isLocal: true, isDefinition: true)
!1405 = !DIGlobalVariableExpression(var: !1406, expr: !DIExpression())
!1406 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_78", scope: !1148, file: !1303, line: 786, type: !1175, isLocal: true, isDefinition: true, align: 8)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1148, file: !1303, line: 790, type: !1369, isLocal: true, isDefinition: true)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_79", scope: !1148, file: !1303, line: 790, type: !1175, isLocal: true, isDefinition: true, align: 8)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1148, file: !1303, line: 656, type: !1159, isLocal: true, isDefinition: true)
!1413 = !DIGlobalVariableExpression(var: !1414, expr: !DIExpression())
!1414 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1148, file: !1303, line: 766, type: !1415, isLocal: true, isDefinition: true)
!1415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1416)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1370, line: 224, size: 160, elements: !1417)
!1417 = !{!1418, !1419, !1420, !1421}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1416, file: !1370, line: 226, baseType: !1224, size: 32)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1416, file: !1370, line: 228, baseType: !1004, size: 32, offset: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1416, file: !1370, line: 230, baseType: !118, size: 32, offset: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1416, file: !1370, line: 231, baseType: !1422, size: 64, offset: 96)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1000, line: 343, size: 64, elements: !1423)
!1423 = !{!1424, !1425}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1422, file: !1000, line: 344, baseType: !156, size: 32)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1422, file: !1000, line: 345, baseType: !156, size: 32, offset: 32)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1148, file: !1303, line: 770, type: !1415, isLocal: true, isDefinition: true)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1148, file: !1303, line: 774, type: !1415, isLocal: true, isDefinition: true)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1148, file: !1303, line: 778, type: !1415, isLocal: true, isDefinition: true)
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1148, file: !1303, line: 782, type: !1415, isLocal: true, isDefinition: true)
!1434 = !DIGlobalVariableExpression(var: !1435, expr: !DIExpression())
!1435 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1148, file: !1303, line: 786, type: !1415, isLocal: true, isDefinition: true)
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1148, file: !1303, line: 790, type: !1415, isLocal: true, isDefinition: true)
!1438 = !DIGlobalVariableExpression(var: !1439, expr: !DIExpression())
!1439 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1440, file: !1579, line: 1914, type: !1640, isLocal: true, isDefinition: true)
!1440 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1441, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1442, retainedTypes: !1475, globals: !1576, splitDebugInlining: false, nameTableKind: None)
!1441 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!1442 = !{!30, !1443, !1450, !1457, !1464, !1470, !954}
!1443 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1088, line: 47, baseType: !32, size: 32, elements: !1444)
!1444 = !{!1445, !1446, !1447, !1448, !1449}
!1445 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1446 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1447 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1448 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1449 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1450 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1088, line: 75, baseType: !32, size: 32, elements: !1451)
!1451 = !{!1452, !1453, !1454, !1455, !1456}
!1452 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1453 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1454 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1455 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1456 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1457 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1088, line: 92, baseType: !32, size: 32, elements: !1458)
!1458 = !{!1459, !1460, !1461, !1462, !1463}
!1459 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1460 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1461 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1462 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1463 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1464 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1088, line: 84, baseType: !32, size: 32, elements: !1465)
!1465 = !{!1466, !1467, !1468, !1469}
!1466 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1467 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1468 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1469 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1470 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1088, line: 107, baseType: !32, size: 32, elements: !1471)
!1471 = !{!1472, !1473, !1474}
!1472 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1473 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1474 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1475 = !{!117, !118, !1476, !144, !143, !1525, !156, !1048, !1536, !279, !213, !1575}
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 32)
!1477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1478)
!1478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1088, line: 336, size: 160, elements: !1479)
!1479 = !{!1480, !1499, !1503, !1507, !1520}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1478, file: !1088, line: 365, baseType: !1481, size: 32)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 32)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!118, !1484, !1109}
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 32)
!1485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1486)
!1486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1487)
!1487 = !{!1488, !1489, !1490, !1491, !1497, !1498}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1486, file: !130, line: 380, baseType: !133, size: 32)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1486, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1486, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1486, file: !130, line: 386, baseType: !1492, size: 32, offset: 96)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 32)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1494)
!1494 = !{!1495, !1496}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1493, file: !130, line: 359, baseType: !143, size: 8)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1493, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1486, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1486, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1478, file: !1088, line: 366, baseType: !1500, size: 32, offset: 32)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 32)
!1501 = !DISubroutineType(types: !1502)
!1502 = !{null, !1484, !144}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1478, file: !1088, line: 374, baseType: !1504, size: 32, offset: 64)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 32)
!1505 = !DISubroutineType(types: !1506)
!1506 = !{!118, !1484}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1478, file: !1088, line: 377, baseType: !1508, size: 32, offset: 96)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 32)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{!118, !1484, !1511}
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 32)
!1512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1513)
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1088, line: 122, size: 64, elements: !1514)
!1514 = !{!1515, !1516, !1517, !1518, !1519}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1513, file: !1088, line: 123, baseType: !156, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1513, file: !1088, line: 124, baseType: !143, size: 8, offset: 32)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1513, file: !1088, line: 125, baseType: !143, size: 8, offset: 40)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1513, file: !1088, line: 126, baseType: !143, size: 8, offset: 48)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1513, file: !1088, line: 127, baseType: !143, size: 8, offset: 56)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1478, file: !1088, line: 379, baseType: !1521, size: 32, offset: 128)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{!118, !1484, !1524}
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 32)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 32)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !448, line: 648, baseType: !1527)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 639, size: 224, elements: !1528)
!1528 = !{!1529, !1530, !1531, !1532, !1533, !1534, !1535}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1527, file: !448, line: 641, baseType: !452, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1527, file: !448, line: 642, baseType: !452, size: 32, offset: 32)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1527, file: !448, line: 643, baseType: !452, size: 32, offset: 64)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1527, file: !448, line: 644, baseType: !452, size: 32, offset: 96)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1527, file: !448, line: 645, baseType: !452, size: 32, offset: 128)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1527, file: !448, line: 646, baseType: !452, size: 32, offset: 160)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1527, file: !448, line: 647, baseType: !452, size: 32, offset: 192)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1538)
!1538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !955, line: 100, size: 224, elements: !1539)
!1539 = !{!1540, !1545, !1546, !1555, !1560, !1565, !1570}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1538, file: !955, line: 101, baseType: !1541, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !955, line: 76, baseType: !1542)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 32)
!1543 = !DISubroutineType(types: !1544)
!1544 = !{!118, !1484, !1048}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1538, file: !955, line: 102, baseType: !1541, size: 32, offset: 32)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1538, file: !955, line: 103, baseType: !1547, size: 32, offset: 64)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !955, line: 83, baseType: !1548)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 32)
!1549 = !DISubroutineType(types: !1550)
!1550 = !{!118, !1484, !1048, !1551, !117}
!1551 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !955, line: 72, baseType: !1552)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 32)
!1553 = !DISubroutineType(types: !1554)
!1554 = !{null, !1484, !1048, !117}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1538, file: !955, line: 104, baseType: !1556, size: 32, offset: 96)
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !955, line: 79, baseType: !1557)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!118, !1484, !1048, !1004}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1538, file: !955, line: 105, baseType: !1561, size: 32, offset: 128)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !955, line: 88, baseType: !1562)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 32)
!1563 = !DISubroutineType(types: !1564)
!1564 = !{!954, !1484, !1048}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1538, file: !955, line: 106, baseType: !1566, size: 32, offset: 160)
!1566 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !955, line: 92, baseType: !1567)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 32)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{!118, !1484, !1048, !1074}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1538, file: !955, line: 107, baseType: !1571, size: 32, offset: 192)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !955, line: 96, baseType: !1572)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 32)
!1573 = !DISubroutineType(types: !1574)
!1574 = !{!118, !1484, !1048, !117}
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 32)
!1576 = !{!1577, !1583, !1585, !1592, !1438, !1594, !1602, !1625, !1628, !1631, !1633}
!1577 = !DIGlobalVariableExpression(var: !1578, expr: !DIExpression())
!1578 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1440, file: !1579, line: 1914, type: !1580, isLocal: false, isDefinition: true, align: 16)
!1579 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 128, elements: !1581)
!1581 = !{!1582}
!1582 = !DISubrange(count: 8)
!1583 = !DIGlobalVariableExpression(var: !1584, expr: !DIExpression())
!1584 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1440, file: !1579, line: 1914, type: !1485, isLocal: false, isDefinition: true, align: 32)
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1440, file: !1579, line: 1914, type: !1587, isLocal: true, isDefinition: true, align: 32)
!1587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1588)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !1589)
!1589 = !{!1590, !1591}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1588, file: !463, line: 60, baseType: !1504, size: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1588, file: !463, line: 65, baseType: !1484, size: 32, offset: 32)
!1592 = !DIGlobalVariableExpression(var: !1593, expr: !DIExpression())
!1593 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1440, file: !1579, line: 1914, type: !1493, isLocal: true, isDefinition: true, align: 8)
!1594 = !DIGlobalVariableExpression(var: !1595, expr: !DIExpression())
!1595 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1440, file: !1579, line: 1914, type: !1596, isLocal: true, isDefinition: true)
!1596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1597, size: 64, elements: !645)
!1597 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1598)
!1598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1000, line: 343, size: 64, elements: !1599)
!1599 = !{!1600, !1601}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1598, file: !1000, line: 344, baseType: !156, size: 32)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1598, file: !1000, line: 345, baseType: !156, size: 32, offset: 32)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1440, file: !1579, line: 1914, type: !1604, isLocal: true, isDefinition: true)
!1604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1605)
!1605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1606, line: 60, size: 64, elements: !1607)
!1606 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1607 = !{!1608, !1624}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1605, file: !1606, line: 69, baseType: !1609, size: 32)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 32)
!1610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1611)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1606, line: 50, size: 64, elements: !1612)
!1612 = !{!1613, !1622, !1623}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1611, file: !1606, line: 52, baseType: !1614, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 32)
!1615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1616)
!1616 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1617, line: 37, baseType: !1618)
!1617 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1617, line: 32, size: 64, elements: !1619)
!1619 = !{!1620, !1621}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1618, file: !1617, line: 34, baseType: !156, size: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1618, file: !1617, line: 36, baseType: !156, size: 32, offset: 32)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1611, file: !1606, line: 54, baseType: !143, size: 8, offset: 32)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1611, file: !1606, line: 56, baseType: !143, size: 8, offset: 40)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1605, file: !1606, line: 71, baseType: !143, size: 8, offset: 32)
!1625 = !DIGlobalVariableExpression(var: !1626, expr: !DIExpression())
!1626 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1440, file: !1579, line: 1914, type: !1627, isLocal: true, isDefinition: true)
!1627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1610, size: 64, elements: !645)
!1628 = !DIGlobalVariableExpression(var: !1629, expr: !DIExpression())
!1629 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1440, file: !1579, line: 1914, type: !1630, isLocal: true, isDefinition: true)
!1630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1615, size: 128, elements: !256)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1440, file: !1579, line: 1539, type: !1477, isLocal: true, isDefinition: true)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1440, file: !1579, line: 1914, type: !1635, isLocal: true, isDefinition: true)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1636, line: 74, size: 64, elements: !1637)
!1636 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1637 = !{!1638, !1639}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1635, file: !1636, line: 76, baseType: !156, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1635, file: !1636, line: 78, baseType: !1484, size: 32, offset: 32)
!1640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1641)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1636, line: 22, size: 224, elements: !1642)
!1642 = !{!1643, !1644, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1641, file: !1636, line: 24, baseType: !1525, size: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1641, file: !1636, line: 26, baseType: !1645, size: 32, offset: 32)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1641, file: !1636, line: 28, baseType: !315, size: 32, offset: 64)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1641, file: !1636, line: 30, baseType: !146, size: 8, offset: 96)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1641, file: !1636, line: 32, baseType: !118, size: 32, offset: 128)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1641, file: !1636, line: 34, baseType: !146, size: 8, offset: 160)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1641, file: !1636, line: 36, baseType: !146, size: 8, offset: 168)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1641, file: !1636, line: 38, baseType: !146, size: 8, offset: 176)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1641, file: !1636, line: 40, baseType: !146, size: 8, offset: 184)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1641, file: !1636, line: 41, baseType: !1654, size: 32, offset: 192)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 32)
!1655 = !DIGlobalVariableExpression(var: !1656, expr: !DIExpression())
!1656 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1657, file: !1733, line: 65, type: !452, isLocal: true, isDefinition: true)
!1657 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1658, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1659, retainedTypes: !1660, globals: !1730, splitDebugInlining: false, nameTableKind: None)
!1658 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!1659 = !{!725}
!1660 = !{!113, !1661, !362, !143, !156, !1669, !1700}
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 32)
!1662 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !656, line: 770, baseType: !1663)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 764, size: 128, elements: !1664)
!1664 = !{!1665, !1666, !1667, !1668}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1663, file: !656, line: 766, baseType: !452, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1663, file: !656, line: 767, baseType: !452, size: 32, offset: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1663, file: !656, line: 768, baseType: !452, size: 32, offset: 64)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1663, file: !656, line: 769, baseType: !660, size: 32, offset: 96)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 32)
!1670 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !656, line: 426, baseType: !1671)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 411, size: 28704, elements: !1672)
!1672 = !{!1673, !1675, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1690, !1695, !1699}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1671, file: !656, line: 413, baseType: !1674, size: 256)
!1674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 256, elements: !1581)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1671, file: !656, line: 414, baseType: !1676, size: 768, offset: 256)
!1676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 768, elements: !1677)
!1677 = !{!1678}
!1678 = !DISubrange(count: 24)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1671, file: !656, line: 415, baseType: !1674, size: 256, offset: 1024)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1671, file: !656, line: 416, baseType: !1676, size: 768, offset: 1280)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1671, file: !656, line: 417, baseType: !1674, size: 256, offset: 2048)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1671, file: !656, line: 418, baseType: !1676, size: 768, offset: 2304)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1671, file: !656, line: 419, baseType: !1674, size: 256, offset: 3072)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1671, file: !656, line: 420, baseType: !1676, size: 768, offset: 3328)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1671, file: !656, line: 421, baseType: !1674, size: 256, offset: 4096)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1671, file: !656, line: 422, baseType: !1687, size: 1792, offset: 4352)
!1687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 1792, elements: !1688)
!1688 = !{!1689}
!1689 = !DISubrange(count: 56)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1671, file: !656, line: 423, baseType: !1691, size: 1920, offset: 6144)
!1691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1692, size: 1920, elements: !1693)
!1692 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !143)
!1693 = !{!1694}
!1694 = !DISubrange(count: 240)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1671, file: !656, line: 424, baseType: !1696, size: 20608, offset: 8064)
!1696 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 20608, elements: !1697)
!1697 = !{!1698}
!1698 = !DISubrange(count: 644)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1671, file: !656, line: 425, baseType: !452, size: 32, offset: 28672)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 32)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !1702)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !1703)
!1703 = !{!1704, !1705, !1706, !1707, !1708, !1709, !1710, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1721, !1722, !1723, !1725, !1727, !1729}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1702, file: !656, line: 447, baseType: !660, size: 32)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1702, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1702, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1702, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1702, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1702, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1702, file: !656, line: 453, baseType: !1711, size: 96, offset: 192)
!1711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1692, size: 96, elements: !921)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1702, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1702, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1702, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1702, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1702, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1702, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1702, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1702, file: !656, line: 461, baseType: !1720, size: 64, offset: 512)
!1720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !660, size: 64, elements: !256)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1702, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1702, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1702, file: !656, line: 464, baseType: !1724, size: 128, offset: 640)
!1724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !660, size: 128, elements: !828)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1702, file: !656, line: 465, baseType: !1726, size: 160, offset: 768)
!1726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !660, size: 160, elements: !1337)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1702, file: !656, line: 466, baseType: !1728, size: 160, offset: 928)
!1728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 160, elements: !1337)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1702, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!1730 = !{!1731, !1757, !1762, !1764, !1766, !1655}
!1731 = !DIGlobalVariableExpression(var: !1732, expr: !DIExpression())
!1732 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1657, file: !1733, line: 285, type: !1734, isLocal: true, isDefinition: true, align: 32)
!1733 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1734 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1735)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !1736)
!1736 = !{!1737, !1756}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1735, file: !463, line: 60, baseType: !1738, size: 32)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 32)
!1739 = !DISubroutineType(types: !1740)
!1740 = !{!118, !1741}
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1743)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1744)
!1744 = !{!1745, !1746, !1747, !1748, !1754, !1755}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1743, file: !130, line: 380, baseType: !133, size: 32)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1743, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1743, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1743, file: !130, line: 386, baseType: !1749, size: 32, offset: 96)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 32)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1751)
!1751 = !{!1752, !1753}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1750, file: !130, line: 359, baseType: !143, size: 8)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1750, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1743, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1743, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1735, file: !463, line: 65, baseType: !1741, size: 32, offset: 32)
!1757 = !DIGlobalVariableExpression(var: !1758, expr: !DIExpression())
!1758 = distinct !DIGlobalVariable(name: "lock", scope: !1657, file: !1733, line: 34, type: !1759, isLocal: true, isDefinition: true)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !1760)
!1760 = !{!1761}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1759, file: !334, line: 52, baseType: !22, size: 32)
!1762 = !DIGlobalVariableExpression(var: !1763, expr: !DIExpression())
!1763 = distinct !DIGlobalVariable(name: "last_load", scope: !1657, file: !1733, line: 36, type: !156, isLocal: true, isDefinition: true)
!1764 = !DIGlobalVariableExpression(var: !1765, expr: !DIExpression())
!1765 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1657, file: !1733, line: 48, type: !156, isLocal: true, isDefinition: true)
!1766 = !DIGlobalVariableExpression(var: !1767, expr: !DIExpression())
!1767 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1657, file: !1733, line: 54, type: !156, isLocal: true, isDefinition: true)
!1768 = !DIGlobalVariableExpression(var: !1769, expr: !DIExpression())
!1769 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1770, file: !1852, line: 22, type: !1854, isLocal: true, isDefinition: true)
!1770 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1771, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1772, retainedTypes: !1773, globals: !1849, splitDebugInlining: false, nameTableKind: None)
!1771 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!1772 = !{!101, !107}
!1773 = !{!1774, !1838, !1843, !167, !107, !101, !1848, !117}
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1776)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !102, line: 523, size: 288, elements: !1777)
!1777 = !{!1778, !1797, !1801, !1805, !1809, !1810, !1811, !1815, !1834}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1776, file: !102, line: 524, baseType: !1779, size: 32)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 32)
!1780 = !DISubroutineType(types: !1781)
!1781 = !{!118, !1782, !154, !155}
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 32)
!1783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1784)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1785)
!1785 = !{!1786, !1787, !1788, !1789, !1795, !1796}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1784, file: !130, line: 380, baseType: !133, size: 32)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1784, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1784, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1784, file: !130, line: 386, baseType: !1790, size: 32, offset: 96)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 32)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1792)
!1792 = !{!1793, !1794}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1791, file: !130, line: 359, baseType: !143, size: 8)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1791, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1784, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1784, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1776, file: !102, line: 530, baseType: !1798, size: 32, offset: 32)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 32)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{!118, !1782, !161}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1776, file: !102, line: 532, baseType: !1802, size: 32, offset: 64)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 32)
!1803 = !DISubroutineType(types: !1804)
!1804 = !{!118, !1782, !167, !162}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1776, file: !102, line: 535, baseType: !1806, size: 32, offset: 96)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 32)
!1807 = !DISubroutineType(types: !1808)
!1808 = !{!118, !1782, !167}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1776, file: !102, line: 537, baseType: !1806, size: 32, offset: 128)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1776, file: !102, line: 539, baseType: !1806, size: 32, offset: 160)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1776, file: !102, line: 541, baseType: !1812, size: 32, offset: 192)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 32)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{!118, !1782, !154, !101, !107}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1776, file: !102, line: 544, baseType: !1816, size: 32, offset: 224)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 32)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{!118, !1782, !1819, !146}
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 32)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !102, line: 478, size: 96, elements: !1821)
!1821 = !{!1822, !1828, !1833}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1820, file: !102, line: 482, baseType: !1823, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !187, line: 33, baseType: !1824)
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !187, line: 29, size: 32, elements: !1825)
!1825 = !{!1826}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1824, file: !187, line: 30, baseType: !1827, size: 32)
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1820, file: !102, line: 485, baseType: !1829, size: 32, offset: 32)
!1829 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !102, line: 464, baseType: !1830)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 32)
!1831 = !DISubroutineType(types: !1832)
!1832 = !{null, !1782, !1819, !167}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1820, file: !102, line: 493, baseType: !167, size: 32, offset: 64)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1776, file: !102, line: 547, baseType: !1835, size: 32, offset: 256)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 32)
!1836 = !DISubroutineType(types: !1837)
!1837 = !{!156, !1782}
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 32)
!1839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1840)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !102, line: 428, size: 32, elements: !1841)
!1841 = !{!1842}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1840, file: !102, line: 434, baseType: !167, size: 32)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1845)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !102, line: 441, size: 32, elements: !1846)
!1846 = !{!1847}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1845, file: !102, line: 447, baseType: !167, size: 32)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 32)
!1849 = !{!1850, !1768}
!1850 = !DIGlobalVariableExpression(var: !1851, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1851 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1770, file: !1852, line: 37, type: !1853, isLocal: true, isDefinition: true)
!1852 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !315)
!1854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1855, size: 352, elements: !1856)
!1855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1782)
!1856 = !{!1857}
!1857 = !DISubrange(count: 11)
!1858 = !DIGlobalVariableExpression(var: !1859, expr: !DIExpression())
!1859 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1860, file: !1901, line: 139, type: !1908, isLocal: false, isDefinition: true)
!1860 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1861, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1862, globals: !1898, splitDebugInlining: false, nameTableKind: None)
!1861 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!1862 = !{!1863}
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 32)
!1864 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !448, line: 510, baseType: !1865)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 477, size: 1216, elements: !1866)
!1866 = !{!1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1865, file: !448, line: 479, baseType: !452, size: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1865, file: !448, line: 480, baseType: !452, size: 32, offset: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1865, file: !448, line: 481, baseType: !452, size: 32, offset: 64)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1865, file: !448, line: 482, baseType: !452, size: 32, offset: 96)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1865, file: !448, line: 483, baseType: !452, size: 32, offset: 128)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1865, file: !448, line: 484, baseType: !452, size: 32, offset: 160)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1865, file: !448, line: 485, baseType: !973, size: 64, offset: 192)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1865, file: !448, line: 486, baseType: !452, size: 32, offset: 256)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1865, file: !448, line: 487, baseType: !452, size: 32, offset: 288)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1865, file: !448, line: 488, baseType: !973, size: 64, offset: 320)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1865, file: !448, line: 489, baseType: !452, size: 32, offset: 384)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1865, file: !448, line: 490, baseType: !452, size: 32, offset: 416)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1865, file: !448, line: 491, baseType: !973, size: 64, offset: 448)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1865, file: !448, line: 492, baseType: !452, size: 32, offset: 512)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1865, file: !448, line: 493, baseType: !452, size: 32, offset: 544)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1865, file: !448, line: 494, baseType: !973, size: 64, offset: 576)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1865, file: !448, line: 495, baseType: !452, size: 32, offset: 640)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1865, file: !448, line: 496, baseType: !452, size: 32, offset: 672)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1865, file: !448, line: 497, baseType: !973, size: 64, offset: 704)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1865, file: !448, line: 498, baseType: !452, size: 32, offset: 768)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1865, file: !448, line: 499, baseType: !452, size: 32, offset: 800)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1865, file: !448, line: 500, baseType: !973, size: 64, offset: 832)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1865, file: !448, line: 501, baseType: !452, size: 32, offset: 896)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1865, file: !448, line: 502, baseType: !452, size: 32, offset: 928)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1865, file: !448, line: 503, baseType: !973, size: 64, offset: 960)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1865, file: !448, line: 504, baseType: !452, size: 32, offset: 1024)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1865, file: !448, line: 505, baseType: !452, size: 32, offset: 1056)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1865, file: !448, line: 506, baseType: !156, size: 32, offset: 1088)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1865, file: !448, line: 507, baseType: !452, size: 32, offset: 1120)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1865, file: !448, line: 508, baseType: !452, size: 32, offset: 1152)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1865, file: !448, line: 509, baseType: !452, size: 32, offset: 1184)
!1898 = !{!1899, !1902, !1858}
!1899 = !DIGlobalVariableExpression(var: !1900, expr: !DIExpression())
!1900 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1860, file: !1901, line: 137, type: !156, isLocal: false, isDefinition: true)
!1901 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1902 = !DIGlobalVariableExpression(var: !1903, expr: !DIExpression())
!1903 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1860, file: !1901, line: 138, type: !1904, isLocal: false, isDefinition: true)
!1904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1905, size: 128, elements: !1906)
!1905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !143)
!1906 = !{!1907}
!1907 = !DISubrange(count: 16)
!1908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1905, size: 64, elements: !1581)
!1909 = !DIGlobalVariableExpression(var: !1910, expr: !DIExpression())
!1910 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1911, file: !1914, line: 23, type: !1915, isLocal: false, isDefinition: true)
!1911 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1912, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, globals: !1913, splitDebugInlining: false, nameTableKind: None)
!1912 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!1913 = !{!1909}
!1914 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!1916 = !DIGlobalVariableExpression(var: !1917, expr: !DIExpression())
!1917 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1918, file: !1922, line: 86, type: !2170, isLocal: false, isDefinition: true, align: 512)
!1918 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1919, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1920, retainedTypes: !1929, globals: !2003, splitDebugInlining: false, nameTableKind: None)
!1919 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!1920 = !{!1921, !30, !725}
!1921 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1922, line: 63, baseType: !32, size: 32, elements: !1923)
!1922 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1923 = !{!1924, !1925, !1926, !1927, !1928}
!1924 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1925 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1926 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1927 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1928 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1929 = !{!315, !117, !118, !1930, !1259, !156, !1961, !362, !143, !1986}
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1932)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1933, line: 51, size: 64, elements: !1934)
!1933 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1934 = !{!1935, !1956}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1932, file: !1933, line: 52, baseType: !1936, size: 32)
!1936 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1933, line: 38, baseType: !1937)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 32)
!1938 = !DISubroutineType(types: !1939)
!1939 = !{!118, !1940, !1955, !279}
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 32)
!1941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1942)
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1943)
!1943 = !{!1944, !1945, !1946, !1947, !1953, !1954}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1942, file: !130, line: 380, baseType: !133, size: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1942, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1942, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1942, file: !130, line: 386, baseType: !1948, size: 32, offset: 96)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 32)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1950)
!1950 = !{!1951, !1952}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1949, file: !130, line: 359, baseType: !143, size: 8)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1949, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1942, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1942, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1932, file: !1933, line: 53, baseType: !1957, size: 32, offset: 32)
!1957 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1933, line: 47, baseType: !1958)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 32)
!1959 = !DISubroutineType(types: !1960)
!1960 = !{!118, !1940, !1955, !279, !156}
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 32)
!1962 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !1963)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !1964)
!1964 = !{!1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1963, file: !656, line: 447, baseType: !660, size: 32)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1963, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1963, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1963, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1963, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1963, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1963, file: !656, line: 453, baseType: !1711, size: 96, offset: 192)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1963, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1963, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1963, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1963, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1963, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1963, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1963, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1963, file: !656, line: 461, baseType: !1720, size: 64, offset: 512)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1963, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1963, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1963, file: !656, line: 464, baseType: !1724, size: 128, offset: 640)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1963, file: !656, line: 465, baseType: !1726, size: 160, offset: 768)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1963, file: !656, line: 466, baseType: !1728, size: 160, offset: 928)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1963, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 32)
!1987 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !656, line: 426, baseType: !1988)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 411, size: 28704, elements: !1989)
!1989 = !{!1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1988, file: !656, line: 413, baseType: !1674, size: 256)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1988, file: !656, line: 414, baseType: !1676, size: 768, offset: 256)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1988, file: !656, line: 415, baseType: !1674, size: 256, offset: 1024)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1988, file: !656, line: 416, baseType: !1676, size: 768, offset: 1280)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1988, file: !656, line: 417, baseType: !1674, size: 256, offset: 2048)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1988, file: !656, line: 418, baseType: !1676, size: 768, offset: 2304)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1988, file: !656, line: 419, baseType: !1674, size: 256, offset: 3072)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1988, file: !656, line: 420, baseType: !1676, size: 768, offset: 3328)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1988, file: !656, line: 421, baseType: !1674, size: 256, offset: 4096)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1988, file: !656, line: 422, baseType: !1687, size: 1792, offset: 4352)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1988, file: !656, line: 423, baseType: !1691, size: 1920, offset: 6144)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1988, file: !656, line: 424, baseType: !1696, size: 20608, offset: 8064)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1988, file: !656, line: 425, baseType: !452, size: 32, offset: 28672)
!2003 = !{!2004, !2129, !2135, !2137, !1916, !2140, !2142, !2147}
!2004 = !DIGlobalVariableExpression(var: !2005, expr: !DIExpression())
!2005 = distinct !DIGlobalVariable(name: "_kernel", scope: !1918, file: !1922, line: 40, type: !2006, isLocal: false, isDefinition: true)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !261, line: 158, size: 288, elements: !2007)
!2007 = !{!2008, !2124}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2006, file: !261, line: 159, baseType: !2009, size: 192)
!2009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2010, size: 192, elements: !645)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !261, line: 100, size: 192, elements: !2011)
!2011 = !{!2012, !2013, !2014, !2117, !2118, !2119, !2120}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2010, file: !261, line: 102, baseType: !156, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2010, file: !261, line: 105, baseType: !1259, size: 32, offset: 32)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2010, file: !261, line: 108, baseType: !2015, size: 32, offset: 64)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 32)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !2017)
!2017 = !{!2018, !2076, !2088, !2089, !2090, !2091, !2097, !2112}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2016, file: !225, line: 247, baseType: !2019, size: 384)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !2020)
!2020 = !{!2021, !2045, !2052, !2053, !2054, !2063, !2064, !2065}
!2021 = !DIDerivedType(tag: DW_TAG_member, scope: !2019, file: !225, line: 60, baseType: !2022, size: 64)
!2022 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2019, file: !225, line: 60, size: 64, elements: !2023)
!2023 = !{!2024, !2039}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2022, file: !225, line: 61, baseType: !2025, size: 64)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2026)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2027)
!2027 = !{!2028, !2034}
!2028 = !DIDerivedType(tag: DW_TAG_member, scope: !2026, file: !235, line: 38, baseType: !2029, size: 32)
!2029 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2026, file: !235, line: 38, size: 32, elements: !2030)
!2030 = !{!2031, !2033}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2029, file: !235, line: 39, baseType: !2032, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2029, file: !235, line: 40, baseType: !2032, size: 32)
!2034 = !DIDerivedType(tag: DW_TAG_member, scope: !2026, file: !235, line: 42, baseType: !2035, size: 32, offset: 32)
!2035 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2026, file: !235, line: 42, size: 32, elements: !2036)
!2036 = !{!2037, !2038}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2035, file: !235, line: 43, baseType: !2032, size: 32)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2035, file: !235, line: 44, baseType: !2032, size: 32)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2022, file: !225, line: 62, baseType: !2040, size: 64)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !2041)
!2041 = !{!2042}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2040, file: !251, line: 50, baseType: !2043, size: 64)
!2043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2044, size: 64, elements: !256)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2019, file: !225, line: 68, baseType: !2046, size: 32, offset: 64)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 32)
!2047 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !2048)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !2049)
!2049 = !{!2050}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2048, file: !261, line: 232, baseType: !2051, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2026)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2019, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2019, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!2054 = !DIDerivedType(tag: DW_TAG_member, scope: !2019, file: !225, line: 90, baseType: !2055, size: 16, offset: 112)
!2055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2019, file: !225, line: 90, size: 16, elements: !2056)
!2056 = !{!2057, !2062}
!2057 = !DIDerivedType(tag: DW_TAG_member, scope: !2055, file: !225, line: 91, baseType: !2058, size: 16)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2055, file: !225, line: 91, size: 16, elements: !2059)
!2059 = !{!2060, !2061}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2058, file: !225, line: 96, baseType: !275, size: 8)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2058, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2055, file: !225, line: 100, baseType: !279, size: 16)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2019, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2019, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2019, file: !225, line: 131, baseType: !2066, size: 192, offset: 192)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !2067)
!2067 = !{!2068, !2069, !2075}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2066, file: !261, line: 245, baseType: !2025, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2066, file: !261, line: 246, baseType: !2070, size: 32, offset: 64)
!2070 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !2071)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 32)
!2072 = !DISubroutineType(types: !2073)
!2073 = !{null, !2074}
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2066, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2016, file: !225, line: 250, baseType: !2077, size: 288, offset: 384)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !2078)
!2078 = !{!2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2077, file: !296, line: 26, baseType: !156, size: 32)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2077, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2077, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2077, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2077, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2077, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2077, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2077, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2077, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2016, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2016, file: !225, line: 256, baseType: !2047, size: 64, offset: 704)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2016, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2016, file: !225, line: 300, baseType: !2092, size: 96, offset: 800)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !2093)
!2093 = !{!2094, !2095, !2096}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2092, file: !225, line: 153, baseType: !22, size: 32)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2092, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2092, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2016, file: !225, line: 325, baseType: !2098, size: 32, offset: 896)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 32)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !2100)
!2100 = !{!2101, !2107, !2108}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2099, file: !220, line: 5074, baseType: !2102, size: 96)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !2103)
!2103 = !{!2104, !2105, !2106}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2102, file: !324, line: 57, baseType: !327, size: 32)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2102, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2102, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2099, file: !220, line: 5075, baseType: !2047, size: 64, offset: 96)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2099, file: !220, line: 5076, baseType: !2109, size: 32, offset: 160)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !2110)
!2110 = !{!2111}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2109, file: !334, line: 52, baseType: !22, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2016, file: !225, line: 343, baseType: !2113, size: 64, offset: 928)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !2114)
!2114 = !{!2115, !2116}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2113, file: !296, line: 63, baseType: !156, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2113, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2010, file: !261, line: 111, baseType: !2015, size: 32, offset: 96)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2010, file: !261, line: 124, baseType: !118, size: 32, offset: 128)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2010, file: !261, line: 127, baseType: !143, size: 8, offset: 160)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2010, file: !261, line: 153, baseType: !2121, offset: 168)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2122, line: 33, elements: !2123)
!2122 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2123 = !{}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2006, file: !261, line: 170, baseType: !2125, size: 96, offset: 192)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !261, line: 83, size: 96, elements: !2126)
!2126 = !{!2127, !2128}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2125, file: !261, line: 86, baseType: !2015, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2125, file: !261, line: 90, baseType: !2051, size: 64, offset: 32)
!2129 = !DIGlobalVariableExpression(var: !2130, expr: !DIExpression())
!2130 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1918, file: !1922, line: 43, type: !2131, isLocal: false, isDefinition: true, align: 512)
!2131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2132, size: 8704, elements: !383)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !347, line: 47, size: 8, elements: !2133)
!2133 = !{!2134}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2132, file: !347, line: 48, baseType: !135, size: 8)
!2135 = !DIGlobalVariableExpression(var: !2136, expr: !DIExpression())
!2136 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1918, file: !1922, line: 44, type: !2016, isLocal: false, isDefinition: true)
!2137 = !DIGlobalVariableExpression(var: !2138, expr: !DIExpression())
!2138 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1918, file: !1922, line: 48, type: !2139, isLocal: false, isDefinition: true)
!2139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2016, size: 1024, elements: !645)
!2140 = !DIGlobalVariableExpression(var: !2141, expr: !DIExpression())
!2141 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1918, file: !1922, line: 217, type: !146, isLocal: false, isDefinition: true)
!2142 = !DIGlobalVariableExpression(var: !2143, expr: !DIExpression())
!2143 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1918, file: !1922, line: 50, type: !2144, isLocal: true, isDefinition: true, align: 512)
!2144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2132, size: 3072, elements: !2145)
!2145 = !{!646, !2146}
!2146 = !DISubrange(count: 384)
!2147 = !DIGlobalVariableExpression(var: !2148, expr: !DIExpression())
!2148 = distinct !DIGlobalVariable(name: "levels", scope: !2149, file: !1922, line: 232, type: !2169, isLocal: true, isDefinition: true)
!2149 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1922, file: !1922, line: 230, type: !2150, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !2152)
!2150 = !DISubroutineType(types: !2151)
!2151 = !{null, !1921}
!2152 = !{!2153, !2154, !2164, !2168}
!2153 = !DILocalVariable(name: "level", arg: 1, scope: !2149, file: !1922, line: 230, type: !1921)
!2154 = !DILocalVariable(name: "entry", scope: !2149, file: !1922, line: 244, type: !2155)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 32)
!2156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2157)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !2158)
!2158 = !{!2159, !2163}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2157, file: !463, line: 60, baseType: !2160, size: 32)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 32)
!2161 = !DISubroutineType(types: !2162)
!2162 = !{!118, !1940}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2157, file: !463, line: 65, baseType: !1940, size: 32, offset: 32)
!2164 = !DILocalVariable(name: "dev", scope: !2165, file: !1922, line: 247, type: !1940)
!2165 = distinct !DILexicalBlock(scope: !2166, file: !1922, line: 246, column: 64)
!2166 = distinct !DILexicalBlock(scope: !2167, file: !1922, line: 246, column: 2)
!2167 = distinct !DILexicalBlock(scope: !2149, file: !1922, line: 246, column: 2)
!2168 = !DILocalVariable(name: "rc", scope: !2165, file: !1922, line: 248, type: !118)
!2169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2155, size: 192, elements: !1328)
!2170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2132, size: 16896, elements: !2171)
!2171 = !{!646, !2172}
!2172 = !DISubrange(count: 2112)
!2173 = !DIGlobalVariableExpression(var: !2174, expr: !DIExpression())
!2174 = distinct !DIGlobalVariable(name: "states_str", scope: !2175, file: !2176, line: 276, type: !2299, isLocal: true, isDefinition: true)
!2175 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2176, file: !2176, line: 271, type: !2177, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !2290)
!2176 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2177 = !DISubroutineType(types: !2178)
!2178 = !{!133, !2179, !1259, !315}
!2179 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !2180)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 32)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !2182)
!2182 = !{!2183, !2241, !2253, !2254, !2255, !2256, !2262, !2277}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2181, file: !225, line: 247, baseType: !2184, size: 384)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !2185)
!2185 = !{!2186, !2210, !2217, !2218, !2219, !2228, !2229, !2230}
!2186 = !DIDerivedType(tag: DW_TAG_member, scope: !2184, file: !225, line: 60, baseType: !2187, size: 64)
!2187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2184, file: !225, line: 60, size: 64, elements: !2188)
!2188 = !{!2189, !2204}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2187, file: !225, line: 61, baseType: !2190, size: 64)
!2190 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2191)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2192)
!2192 = !{!2193, !2199}
!2193 = !DIDerivedType(tag: DW_TAG_member, scope: !2191, file: !235, line: 38, baseType: !2194, size: 32)
!2194 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2191, file: !235, line: 38, size: 32, elements: !2195)
!2195 = !{!2196, !2198}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2194, file: !235, line: 39, baseType: !2197, size: 32)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 32)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2194, file: !235, line: 40, baseType: !2197, size: 32)
!2199 = !DIDerivedType(tag: DW_TAG_member, scope: !2191, file: !235, line: 42, baseType: !2200, size: 32, offset: 32)
!2200 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2191, file: !235, line: 42, size: 32, elements: !2201)
!2201 = !{!2202, !2203}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2200, file: !235, line: 43, baseType: !2197, size: 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2200, file: !235, line: 44, baseType: !2197, size: 32)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2187, file: !225, line: 62, baseType: !2205, size: 64)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !2206)
!2206 = !{!2207}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2205, file: !251, line: 50, baseType: !2208, size: 64)
!2208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2209, size: 64, elements: !256)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 32)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2184, file: !225, line: 68, baseType: !2211, size: 32, offset: 64)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 32)
!2212 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !2213)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !2214)
!2214 = !{!2215}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2213, file: !261, line: 232, baseType: !2216, size: 64)
!2216 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2191)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2184, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2184, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!2219 = !DIDerivedType(tag: DW_TAG_member, scope: !2184, file: !225, line: 90, baseType: !2220, size: 16, offset: 112)
!2220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2184, file: !225, line: 90, size: 16, elements: !2221)
!2221 = !{!2222, !2227}
!2222 = !DIDerivedType(tag: DW_TAG_member, scope: !2220, file: !225, line: 91, baseType: !2223, size: 16)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2220, file: !225, line: 91, size: 16, elements: !2224)
!2224 = !{!2225, !2226}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2223, file: !225, line: 96, baseType: !275, size: 8)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2223, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2220, file: !225, line: 100, baseType: !279, size: 16)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2184, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2184, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2184, file: !225, line: 131, baseType: !2231, size: 192, offset: 192)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !2232)
!2232 = !{!2233, !2234, !2240}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2231, file: !261, line: 245, baseType: !2190, size: 64)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2231, file: !261, line: 246, baseType: !2235, size: 32, offset: 64)
!2235 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !2236)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 32)
!2237 = !DISubroutineType(types: !2238)
!2238 = !{null, !2239}
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 32)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2231, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2181, file: !225, line: 250, baseType: !2242, size: 288, offset: 384)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !2243)
!2243 = !{!2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2242, file: !296, line: 26, baseType: !156, size: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2242, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2242, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2242, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2242, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2242, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2242, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2242, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2242, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2181, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2181, file: !225, line: 256, baseType: !2212, size: 64, offset: 704)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2181, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2181, file: !225, line: 300, baseType: !2257, size: 96, offset: 800)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !2258)
!2258 = !{!2259, !2260, !2261}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2257, file: !225, line: 153, baseType: !22, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2257, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2257, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2181, file: !225, line: 325, baseType: !2263, size: 32, offset: 896)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 32)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !2265)
!2265 = !{!2266, !2272, !2273}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2264, file: !220, line: 5074, baseType: !2267, size: 96)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !2268)
!2268 = !{!2269, !2270, !2271}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2267, file: !324, line: 57, baseType: !327, size: 32)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2267, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2267, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2264, file: !220, line: 5075, baseType: !2212, size: 64, offset: 96)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2264, file: !220, line: 5076, baseType: !2274, size: 32, offset: 160)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !2275)
!2275 = !{!2276}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2274, file: !334, line: 52, baseType: !22, size: 32)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2181, file: !225, line: 343, baseType: !2278, size: 64, offset: 928)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !2279)
!2279 = !{!2280, !2281}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2278, file: !296, line: 63, baseType: !156, size: 32)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2278, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!2282 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2283, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2284, globals: !2286, splitDebugInlining: false, nameTableKind: None)
!2283 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2284 = !{!117, !133, !113, !143, !22, !118, !2285, !24, !315, !1259, !156, !213}
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 32)
!2286 = !{!2173, !2287}
!2287 = !DIGlobalVariableExpression(var: !2288, expr: !DIExpression())
!2288 = distinct !DIGlobalVariable(name: "states_sz", scope: !2175, file: !2176, line: 279, type: !2289, isLocal: true, isDefinition: true)
!2289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1853, size: 256, elements: !1581)
!2290 = !{!2291, !2292, !2293, !2294, !2295, !2296, !2297}
!2291 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2175, file: !2176, line: 271, type: !2179)
!2292 = !DILocalVariable(name: "buf", arg: 2, scope: !2175, file: !2176, line: 271, type: !1259)
!2293 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2175, file: !2176, line: 271, type: !315)
!2294 = !DILocalVariable(name: "off", scope: !2175, file: !2176, line: 273, type: !315)
!2295 = !DILocalVariable(name: "bit", scope: !2175, file: !2176, line: 274, type: !143)
!2296 = !DILocalVariable(name: "thread_state", scope: !2175, file: !2176, line: 275, type: !143)
!2297 = !DILocalVariable(name: "index", scope: !2298, file: !2176, line: 293, type: !143)
!2298 = distinct !DILexicalBlock(scope: !2175, file: !2176, line: 293, column: 2)
!2299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !133, size: 256, elements: !1581)
!2300 = !DIGlobalVariableExpression(var: !2301, expr: !DIExpression())
!2301 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2302, file: !2412, line: 56, type: !2399, isLocal: false, isDefinition: true)
!2302 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2303, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2304, globals: !2409, splitDebugInlining: false, nameTableKind: None)
!2303 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2304 = !{!2305, !1259, !117, !2407, !1955, !113, !362, !118, !156, !213, !2408}
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 32)
!2306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !2307)
!2307 = !{!2308, !2366, !2378, !2379, !2380, !2381, !2387, !2402}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2306, file: !225, line: 247, baseType: !2309, size: 384)
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !2310)
!2310 = !{!2311, !2335, !2342, !2343, !2344, !2353, !2354, !2355}
!2311 = !DIDerivedType(tag: DW_TAG_member, scope: !2309, file: !225, line: 60, baseType: !2312, size: 64)
!2312 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2309, file: !225, line: 60, size: 64, elements: !2313)
!2313 = !{!2314, !2329}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2312, file: !225, line: 61, baseType: !2315, size: 64)
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2316)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2317)
!2317 = !{!2318, !2324}
!2318 = !DIDerivedType(tag: DW_TAG_member, scope: !2316, file: !235, line: 38, baseType: !2319, size: 32)
!2319 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2316, file: !235, line: 38, size: 32, elements: !2320)
!2320 = !{!2321, !2323}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2319, file: !235, line: 39, baseType: !2322, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 32)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2319, file: !235, line: 40, baseType: !2322, size: 32)
!2324 = !DIDerivedType(tag: DW_TAG_member, scope: !2316, file: !235, line: 42, baseType: !2325, size: 32, offset: 32)
!2325 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2316, file: !235, line: 42, size: 32, elements: !2326)
!2326 = !{!2327, !2328}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2325, file: !235, line: 43, baseType: !2322, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2325, file: !235, line: 44, baseType: !2322, size: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2312, file: !225, line: 62, baseType: !2330, size: 64)
!2330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !2331)
!2331 = !{!2332}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2330, file: !251, line: 50, baseType: !2333, size: 64)
!2333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2334, size: 64, elements: !256)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2330, size: 32)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2309, file: !225, line: 68, baseType: !2336, size: 32, offset: 64)
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 32)
!2337 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !2338)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !2339)
!2339 = !{!2340}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2338, file: !261, line: 232, baseType: !2341, size: 64)
!2341 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2316)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2309, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2309, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!2344 = !DIDerivedType(tag: DW_TAG_member, scope: !2309, file: !225, line: 90, baseType: !2345, size: 16, offset: 112)
!2345 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2309, file: !225, line: 90, size: 16, elements: !2346)
!2346 = !{!2347, !2352}
!2347 = !DIDerivedType(tag: DW_TAG_member, scope: !2345, file: !225, line: 91, baseType: !2348, size: 16)
!2348 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2345, file: !225, line: 91, size: 16, elements: !2349)
!2349 = !{!2350, !2351}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2348, file: !225, line: 96, baseType: !275, size: 8)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2348, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2345, file: !225, line: 100, baseType: !279, size: 16)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2309, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2309, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2309, file: !225, line: 131, baseType: !2356, size: 192, offset: 192)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !2357)
!2357 = !{!2358, !2359, !2365}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2356, file: !261, line: 245, baseType: !2315, size: 64)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2356, file: !261, line: 246, baseType: !2360, size: 32, offset: 64)
!2360 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !2361)
!2361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 32)
!2362 = !DISubroutineType(types: !2363)
!2363 = !{null, !2364}
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2356, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2306, file: !225, line: 250, baseType: !2367, size: 288, offset: 384)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !2368)
!2368 = !{!2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2367, file: !296, line: 26, baseType: !156, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2367, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2367, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2367, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2367, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2367, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2367, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2367, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2367, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2306, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2306, file: !225, line: 256, baseType: !2337, size: 64, offset: 704)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2306, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2306, file: !225, line: 300, baseType: !2382, size: 96, offset: 800)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !2383)
!2383 = !{!2384, !2385, !2386}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2382, file: !225, line: 153, baseType: !22, size: 32)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2382, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2382, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2306, file: !225, line: 325, baseType: !2388, size: 32, offset: 896)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 32)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !2390)
!2390 = !{!2391, !2397, !2398}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2389, file: !220, line: 5074, baseType: !2392, size: 96)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !2393)
!2393 = !{!2394, !2395, !2396}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2392, file: !324, line: 57, baseType: !327, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2392, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2392, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2389, file: !220, line: 5075, baseType: !2337, size: 64, offset: 96)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2389, file: !220, line: 5076, baseType: !2399, size: 32, offset: 160)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !2400)
!2400 = !{!2401}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2399, file: !334, line: 52, baseType: !22, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2306, file: !225, line: 343, baseType: !2403, size: 64, offset: 928)
!2403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !2404)
!2404 = !{!2405, !2406}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2403, file: !296, line: 63, baseType: !156, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2403, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 32)
!2409 = !{!2300, !2410, !2413, !2415}
!2410 = !DIGlobalVariableExpression(var: !2411, expr: !DIExpression())
!2411 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2302, file: !2412, line: 404, type: !118, isLocal: true, isDefinition: true)
!2412 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2413 = !DIGlobalVariableExpression(var: !2414, expr: !DIExpression())
!2414 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2302, file: !2412, line: 405, type: !118, isLocal: true, isDefinition: true)
!2415 = !DIGlobalVariableExpression(var: !2416, expr: !DIExpression())
!2416 = distinct !DIGlobalVariable(name: "pending_current", scope: !2302, file: !2412, line: 425, type: !2305, isLocal: true, isDefinition: true)
!2417 = !DIGlobalVariableExpression(var: !2418, expr: !DIExpression())
!2418 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2419, file: !2449, line: 19, type: !2455, isLocal: true, isDefinition: true)
!2419 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2420, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2421, globals: !2446, splitDebugInlining: false, nameTableKind: None)
!2420 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2421 = !{!113, !117, !362, !156, !213, !118, !2422, !1259, !115}
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 32)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !2424)
!2424 = !{!2425, !2440, !2445}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2423, file: !261, line: 245, baseType: !2426, size: 64)
!2426 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2427)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2428)
!2428 = !{!2429, !2435}
!2429 = !DIDerivedType(tag: DW_TAG_member, scope: !2427, file: !235, line: 38, baseType: !2430, size: 32)
!2430 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2427, file: !235, line: 38, size: 32, elements: !2431)
!2431 = !{!2432, !2434}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2430, file: !235, line: 39, baseType: !2433, size: 32)
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2430, file: !235, line: 40, baseType: !2433, size: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, scope: !2427, file: !235, line: 42, baseType: !2436, size: 32, offset: 32)
!2436 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2427, file: !235, line: 42, size: 32, elements: !2437)
!2437 = !{!2438, !2439}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2436, file: !235, line: 43, baseType: !2433, size: 32)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2436, file: !235, line: 44, baseType: !2433, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2423, file: !261, line: 246, baseType: !2441, size: 32, offset: 64)
!2441 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !2442)
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 32)
!2443 = !DISubroutineType(types: !2444)
!2444 = !{null, !2422}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2423, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!2446 = !{!2447, !2417, !2450, !2452}
!2447 = !DIGlobalVariableExpression(var: !2448, expr: !DIExpression())
!2448 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2419, file: !2449, line: 15, type: !213, isLocal: true, isDefinition: true)
!2449 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2450 = !DIGlobalVariableExpression(var: !2451, expr: !DIExpression())
!2451 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2419, file: !2449, line: 25, type: !118, isLocal: true, isDefinition: true)
!2452 = !DIGlobalVariableExpression(var: !2453, expr: !DIExpression())
!2453 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2419, file: !2449, line: 17, type: !2454, isLocal: true, isDefinition: true)
!2454 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2427)
!2455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !2456)
!2456 = !{!2457}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2455, file: !334, line: 52, baseType: !22, size: 32)
!2458 = !DIGlobalVariableExpression(var: !2459, expr: !DIExpression())
!2459 = distinct !DIGlobalVariable(name: "kheap__system_heap", scope: !2460, file: !2466, line: 61, type: !2498, isLocal: false, isDefinition: true, align: 64)
!2460 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2461, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2462, globals: !2463, splitDebugInlining: false, nameTableKind: None)
!2461 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2462 = !{!117, !118, !22}
!2463 = !{!2464, !2458}
!2464 = !DIGlobalVariableExpression(var: !2465, expr: !DIExpression())
!2465 = distinct !DIGlobalVariable(name: "_system_heap", scope: !2460, file: !2466, line: 61, type: !2467, isLocal: false, isDefinition: true, align: 32)
!2466 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !2468)
!2468 = !{!2469, !2475, !2494}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2467, file: !220, line: 5074, baseType: !2470, size: 96)
!2470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !2471)
!2471 = !{!2472, !2473, !2474}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2470, file: !324, line: 57, baseType: !327, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2470, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2470, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2467, file: !220, line: 5075, baseType: !2476, size: 64, offset: 96)
!2476 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !2477)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !2478)
!2478 = !{!2479}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2477, file: !261, line: 232, baseType: !2480, size: 64)
!2480 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2481)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2482)
!2482 = !{!2483, !2489}
!2483 = !DIDerivedType(tag: DW_TAG_member, scope: !2481, file: !235, line: 38, baseType: !2484, size: 32)
!2484 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2481, file: !235, line: 38, size: 32, elements: !2485)
!2485 = !{!2486, !2488}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2484, file: !235, line: 39, baseType: !2487, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2484, file: !235, line: 40, baseType: !2487, size: 32)
!2489 = !DIDerivedType(tag: DW_TAG_member, scope: !2481, file: !235, line: 42, baseType: !2490, size: 32, offset: 32)
!2490 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2481, file: !235, line: 42, size: 32, elements: !2491)
!2491 = !{!2492, !2493}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2490, file: !235, line: 43, baseType: !2487, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2490, file: !235, line: 44, baseType: !2487, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2467, file: !220, line: 5076, baseType: !2495, size: 32, offset: 160)
!2495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !2496)
!2496 = !{!2497}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2495, file: !334, line: 52, baseType: !22, size: 32)
!2498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 2048, elements: !2499)
!2499 = !{!2500}
!2500 = !DISubrange(count: 256)
!2501 = !DIGlobalVariableExpression(var: !2502, expr: !DIExpression())
!2502 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2503, file: !2522, line: 55, type: !2523, isLocal: true, isDefinition: true, align: 32)
!2503 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2504, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2505, globals: !2521, splitDebugInlining: false, nameTableKind: None)
!2504 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2505 = !{!117, !113, !118, !2506}
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2508)
!2508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2509)
!2509 = !{!2510, !2516}
!2510 = !DIDerivedType(tag: DW_TAG_member, scope: !2508, file: !235, line: 38, baseType: !2511, size: 32)
!2511 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2508, file: !235, line: 38, size: 32, elements: !2512)
!2512 = !{!2513, !2515}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2511, file: !235, line: 39, baseType: !2514, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2511, file: !235, line: 40, baseType: !2514, size: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, scope: !2508, file: !235, line: 42, baseType: !2517, size: 32, offset: 32)
!2517 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2508, file: !235, line: 42, size: 32, elements: !2518)
!2518 = !{!2519, !2520}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2517, file: !235, line: 43, baseType: !2514, size: 32)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2517, file: !235, line: 44, baseType: !2514, size: 32)
!2521 = !{!2501}
!2522 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2524)
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !2525)
!2525 = !{!2526, !2533}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2524, file: !463, line: 60, baseType: !2527, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 32)
!2528 = !DISubroutineType(types: !2529)
!2529 = !{!118, !2530}
!2530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2531, size: 32)
!2531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2532)
!2532 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !463, line: 48, flags: DIFlagFwdDecl)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2524, file: !463, line: 65, baseType: !2530, size: 32, offset: 32)
!2534 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2535, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!2535 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2536 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2537, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!2537 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2538 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2539, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2540, retainedTypes: !2548, splitDebugInlining: false, nameTableKind: None)
!2539 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2540 = !{!30, !2541}
!2541 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2542, line: 54, baseType: !32, size: 32, elements: !2543)
!2542 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2543 = !{!2544, !2545, !2546, !2547}
!2544 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2545 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2546 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2547 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2548 = !{!117, !315, !1955, !24, !2549, !22, !2555, !118, !1004, !2570}
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 32)
!2550 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2542, line: 58, baseType: !2551)
!2551 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2542, line: 58, size: 64, elements: !2552)
!2552 = !{!2553}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2551, file: !2542, line: 58, baseType: !2554, size: 64)
!2554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 64, elements: !1581)
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 32)
!2556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2542, line: 68, size: 128, elements: !2557)
!2557 = !{!2558, !2561, !2562, !2563}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2556, file: !2542, line: 69, baseType: !2559, size: 64)
!2559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2560, size: 64, elements: !256)
!2560 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2542, line: 61, baseType: !156)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2556, file: !2542, line: 70, baseType: !2560, size: 32, offset: 64)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2556, file: !2542, line: 71, baseType: !156, size: 32, offset: 96)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2556, file: !2542, line: 77, baseType: !2564, offset: 128)
!2564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2565, elements: !2568)
!2565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2542, line: 64, size: 32, elements: !2566)
!2566 = !{!2567}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2565, file: !2542, line: 65, baseType: !2560, size: 32)
!2568 = !{!2569}
!2569 = !DISubrange(count: 0)
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!2571 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2572, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2573, retainedTypes: !2593, splitDebugInlining: false, nameTableKind: None)
!2572 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2573 = !{!2574, !2582}
!2574 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2575, line: 69, baseType: !32, size: 32, elements: !2576)
!2575 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2576 = !{!2577, !2578, !2579, !2580, !2581}
!2577 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2578 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2579 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2580 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2581 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2582 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2575, line: 56, baseType: !32, size: 32, elements: !2583)
!2583 = !{!2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592}
!2584 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2585 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2586 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2587 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2588 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2589 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2590 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2591 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2592 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2593 = !{!118, !2574, !2582, !2594, !276, !153, !2596, !2597, !144, !280, !133, !315, !117, !22, !32, !2599, !2600, !2601, !2602, !2603, !116, !2604, !2595, !2605, !2606, !2607, !2608}
!2594 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2575, line: 31, baseType: !2595)
!2595 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !116)
!2596 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !316, line: 329, baseType: !32)
!2597 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2575, line: 32, baseType: !2598)
!2598 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !214)
!2599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 32)
!2602 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 32)
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 32)
!2607 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !316, line: 145, baseType: !118)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 32)
!2609 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2610, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!2610 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2611 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2612, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2612 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2613 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2614, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2615, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!2614 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2615 = !{!2616, !30}
!2616 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2617, line: 27, baseType: !32, size: 32, elements: !2618)
!2617 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2618 = !{!2619, !2620, !2621, !2622, !2623}
!2619 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2620 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2621 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2622 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2623 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2624 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2625, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2626, retainedTypes: !2627, splitDebugInlining: false, nameTableKind: None)
!2625 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2626 = !{!725, !2616, !30}
!2627 = !{!911, !2628, !117, !118, !362, !156, !143, !2645}
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2629, size: 32)
!2629 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !656, line: 426, baseType: !2630)
!2630 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 411, size: 28704, elements: !2631)
!2631 = !{!2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2630, file: !656, line: 413, baseType: !1674, size: 256)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2630, file: !656, line: 414, baseType: !1676, size: 768, offset: 256)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2630, file: !656, line: 415, baseType: !1674, size: 256, offset: 1024)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2630, file: !656, line: 416, baseType: !1676, size: 768, offset: 1280)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2630, file: !656, line: 417, baseType: !1674, size: 256, offset: 2048)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2630, file: !656, line: 418, baseType: !1676, size: 768, offset: 2304)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2630, file: !656, line: 419, baseType: !1674, size: 256, offset: 3072)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2630, file: !656, line: 420, baseType: !1676, size: 768, offset: 3328)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2630, file: !656, line: 421, baseType: !1674, size: 256, offset: 4096)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2630, file: !656, line: 422, baseType: !1687, size: 1792, offset: 4352)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2630, file: !656, line: 423, baseType: !1691, size: 1920, offset: 6144)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2630, file: !656, line: 424, baseType: !1696, size: 20608, offset: 8064)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2630, file: !656, line: 425, baseType: !452, size: 32, offset: 28672)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2647)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2648)
!2648 = !{!2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2647, file: !656, line: 447, baseType: !660, size: 32)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2647, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2647, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2647, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2647, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2647, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2647, file: !656, line: 453, baseType: !1711, size: 96, offset: 192)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2647, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2647, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2647, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2647, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2647, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2647, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2647, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2647, file: !656, line: 461, baseType: !1720, size: 64, offset: 512)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2647, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2647, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2647, file: !656, line: 464, baseType: !1724, size: 128, offset: 640)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2647, file: !656, line: 465, baseType: !1726, size: 160, offset: 768)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2647, file: !656, line: 466, baseType: !1728, size: 160, offset: 928)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2647, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2670 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2671, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!2671 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2672 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2673, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2674, splitDebugInlining: false, nameTableKind: None)
!2673 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2674 = !{!117, !118, !22, !2675}
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2677)
!2677 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2678)
!2678 = !{!2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2677, file: !656, line: 447, baseType: !660, size: 32)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2677, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2677, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2677, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2677, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2677, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2677, file: !656, line: 453, baseType: !1711, size: 96, offset: 192)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2677, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2677, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2677, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2677, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2677, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2677, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2677, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2677, file: !656, line: 461, baseType: !1720, size: 64, offset: 512)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2677, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2677, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2677, file: !656, line: 464, baseType: !1724, size: 128, offset: 640)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2677, file: !656, line: 465, baseType: !1726, size: 160, offset: 768)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2677, file: !656, line: 466, baseType: !1728, size: 160, offset: 928)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2677, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2700 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2701, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2702, splitDebugInlining: false, nameTableKind: None)
!2701 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2702 = !{!2703, !117, !118}
!2703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2704, size: 32)
!2704 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2705)
!2705 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2706)
!2706 = !{!2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727}
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2705, file: !656, line: 447, baseType: !660, size: 32)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2705, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2705, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2705, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2705, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2705, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2705, file: !656, line: 453, baseType: !1711, size: 96, offset: 192)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2705, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2705, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2705, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2705, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2705, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2705, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2705, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2705, file: !656, line: 461, baseType: !1720, size: 64, offset: 512)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2705, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2705, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2705, file: !656, line: 464, baseType: !1724, size: 128, offset: 640)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2705, file: !656, line: 465, baseType: !1726, size: 160, offset: 768)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2705, file: !656, line: 466, baseType: !1728, size: 160, offset: 928)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2705, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2728 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2729, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2730, splitDebugInlining: false, nameTableKind: None)
!2729 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2730 = !{!2731, !156, !117, !118}
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 32)
!2732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2733, line: 98, size: 256, elements: !2734)
!2733 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2734 = !{!2735, !2740, !2745, !2750, !2755, !2760, !2765, !2770}
!2735 = !DIDerivedType(tag: DW_TAG_member, scope: !2732, file: !2733, line: 99, baseType: !2736, size: 32)
!2736 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2732, file: !2733, line: 99, size: 32, elements: !2737)
!2737 = !{!2738, !2739}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2736, file: !2733, line: 99, baseType: !156, size: 32)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2736, file: !2733, line: 99, baseType: !156, size: 32)
!2740 = !DIDerivedType(tag: DW_TAG_member, scope: !2732, file: !2733, line: 100, baseType: !2741, size: 32, offset: 32)
!2741 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2732, file: !2733, line: 100, size: 32, elements: !2742)
!2742 = !{!2743, !2744}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2741, file: !2733, line: 100, baseType: !156, size: 32)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2741, file: !2733, line: 100, baseType: !156, size: 32)
!2745 = !DIDerivedType(tag: DW_TAG_member, scope: !2732, file: !2733, line: 101, baseType: !2746, size: 32, offset: 64)
!2746 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2732, file: !2733, line: 101, size: 32, elements: !2747)
!2747 = !{!2748, !2749}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2746, file: !2733, line: 101, baseType: !156, size: 32)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2746, file: !2733, line: 101, baseType: !156, size: 32)
!2750 = !DIDerivedType(tag: DW_TAG_member, scope: !2732, file: !2733, line: 102, baseType: !2751, size: 32, offset: 96)
!2751 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2732, file: !2733, line: 102, size: 32, elements: !2752)
!2752 = !{!2753, !2754}
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2751, file: !2733, line: 102, baseType: !156, size: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2751, file: !2733, line: 102, baseType: !156, size: 32)
!2755 = !DIDerivedType(tag: DW_TAG_member, scope: !2732, file: !2733, line: 103, baseType: !2756, size: 32, offset: 128)
!2756 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2732, file: !2733, line: 103, size: 32, elements: !2757)
!2757 = !{!2758, !2759}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2756, file: !2733, line: 103, baseType: !156, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2756, file: !2733, line: 103, baseType: !156, size: 32)
!2760 = !DIDerivedType(tag: DW_TAG_member, scope: !2732, file: !2733, line: 104, baseType: !2761, size: 32, offset: 160)
!2761 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2732, file: !2733, line: 104, size: 32, elements: !2762)
!2762 = !{!2763, !2764}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2761, file: !2733, line: 104, baseType: !156, size: 32)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2761, file: !2733, line: 104, baseType: !156, size: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, scope: !2732, file: !2733, line: 105, baseType: !2766, size: 32, offset: 192)
!2766 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2732, file: !2733, line: 105, size: 32, elements: !2767)
!2767 = !{!2768, !2769}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2766, file: !2733, line: 105, baseType: !156, size: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2766, file: !2733, line: 105, baseType: !156, size: 32)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2732, file: !2733, line: 106, baseType: !156, size: 32, offset: 224)
!2771 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2772, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2615, retainedTypes: !2773, splitDebugInlining: false, nameTableKind: None)
!2772 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2773 = !{!2774, !117, !118, !2799, !2570, !156}
!2774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2775, size: 32)
!2775 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2776)
!2776 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2777)
!2777 = !{!2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798}
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2776, file: !656, line: 447, baseType: !660, size: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2776, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2776, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2776, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2776, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2776, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2776, file: !656, line: 453, baseType: !1711, size: 96, offset: 192)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2776, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2776, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2776, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2776, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2776, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2776, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2776, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2776, file: !656, line: 461, baseType: !1720, size: 64, offset: 512)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2776, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2776, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2776, file: !656, line: 464, baseType: !1724, size: 128, offset: 640)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2776, file: !656, line: 465, baseType: !1726, size: 160, offset: 768)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2776, file: !656, line: 466, baseType: !1728, size: 160, offset: 928)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2776, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 32)
!2800 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2733, line: 141, baseType: !2801)
!2801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2733, line: 97, size: 256, elements: !2802)
!2802 = !{!2803}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2801, file: !2733, line: 107, baseType: !2804, size: 256)
!2804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2733, line: 98, size: 256, elements: !2805)
!2805 = !{!2806, !2811, !2816, !2821, !2826, !2831, !2836, !2841}
!2806 = !DIDerivedType(tag: DW_TAG_member, scope: !2804, file: !2733, line: 99, baseType: !2807, size: 32)
!2807 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2804, file: !2733, line: 99, size: 32, elements: !2808)
!2808 = !{!2809, !2810}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2807, file: !2733, line: 99, baseType: !156, size: 32)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2807, file: !2733, line: 99, baseType: !156, size: 32)
!2811 = !DIDerivedType(tag: DW_TAG_member, scope: !2804, file: !2733, line: 100, baseType: !2812, size: 32, offset: 32)
!2812 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2804, file: !2733, line: 100, size: 32, elements: !2813)
!2813 = !{!2814, !2815}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2812, file: !2733, line: 100, baseType: !156, size: 32)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2812, file: !2733, line: 100, baseType: !156, size: 32)
!2816 = !DIDerivedType(tag: DW_TAG_member, scope: !2804, file: !2733, line: 101, baseType: !2817, size: 32, offset: 64)
!2817 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2804, file: !2733, line: 101, size: 32, elements: !2818)
!2818 = !{!2819, !2820}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2817, file: !2733, line: 101, baseType: !156, size: 32)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2817, file: !2733, line: 101, baseType: !156, size: 32)
!2821 = !DIDerivedType(tag: DW_TAG_member, scope: !2804, file: !2733, line: 102, baseType: !2822, size: 32, offset: 96)
!2822 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2804, file: !2733, line: 102, size: 32, elements: !2823)
!2823 = !{!2824, !2825}
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2822, file: !2733, line: 102, baseType: !156, size: 32)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2822, file: !2733, line: 102, baseType: !156, size: 32)
!2826 = !DIDerivedType(tag: DW_TAG_member, scope: !2804, file: !2733, line: 103, baseType: !2827, size: 32, offset: 128)
!2827 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2804, file: !2733, line: 103, size: 32, elements: !2828)
!2828 = !{!2829, !2830}
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2827, file: !2733, line: 103, baseType: !156, size: 32)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2827, file: !2733, line: 103, baseType: !156, size: 32)
!2831 = !DIDerivedType(tag: DW_TAG_member, scope: !2804, file: !2733, line: 104, baseType: !2832, size: 32, offset: 160)
!2832 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2804, file: !2733, line: 104, size: 32, elements: !2833)
!2833 = !{!2834, !2835}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2832, file: !2733, line: 104, baseType: !156, size: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2832, file: !2733, line: 104, baseType: !156, size: 32)
!2836 = !DIDerivedType(tag: DW_TAG_member, scope: !2804, file: !2733, line: 105, baseType: !2837, size: 32, offset: 192)
!2837 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2804, file: !2733, line: 105, size: 32, elements: !2838)
!2838 = !{!2839, !2840}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2837, file: !2733, line: 105, baseType: !156, size: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2837, file: !2733, line: 105, baseType: !156, size: 32)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2804, file: !2733, line: 106, baseType: !156, size: 32, offset: 224)
!2842 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2843, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1659, retainedTypes: !2844, splitDebugInlining: false, nameTableKind: None)
!2843 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2844 = !{!911, !362, !143, !156, !2845, !2862}
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2846, size: 32)
!2846 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !656, line: 426, baseType: !2847)
!2847 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 411, size: 28704, elements: !2848)
!2848 = !{!2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861}
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2847, file: !656, line: 413, baseType: !1674, size: 256)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2847, file: !656, line: 414, baseType: !1676, size: 768, offset: 256)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2847, file: !656, line: 415, baseType: !1674, size: 256, offset: 1024)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2847, file: !656, line: 416, baseType: !1676, size: 768, offset: 1280)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2847, file: !656, line: 417, baseType: !1674, size: 256, offset: 2048)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2847, file: !656, line: 418, baseType: !1676, size: 768, offset: 2304)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2847, file: !656, line: 419, baseType: !1674, size: 256, offset: 3072)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2847, file: !656, line: 420, baseType: !1676, size: 768, offset: 3328)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2847, file: !656, line: 421, baseType: !1674, size: 256, offset: 4096)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2847, file: !656, line: 422, baseType: !1687, size: 1792, offset: 4352)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2847, file: !656, line: 423, baseType: !1691, size: 1920, offset: 6144)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2847, file: !656, line: 424, baseType: !1696, size: 20608, offset: 8064)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2847, file: !656, line: 425, baseType: !452, size: 32, offset: 28672)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 32)
!2863 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2864)
!2864 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2865)
!2865 = !{!2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2864, file: !656, line: 447, baseType: !660, size: 32)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2864, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2864, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2864, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2864, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2864, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2864, file: !656, line: 453, baseType: !1711, size: 96, offset: 192)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2864, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2864, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2864, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2864, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2864, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2864, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2864, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2864, file: !656, line: 461, baseType: !1720, size: 64, offset: 512)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2864, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2864, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2864, file: !656, line: 464, baseType: !1724, size: 128, offset: 640)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2864, file: !656, line: 465, baseType: !1726, size: 160, offset: 768)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2864, file: !656, line: 466, baseType: !1728, size: 160, offset: 928)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2864, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2887 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2888, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2889, splitDebugInlining: false, nameTableKind: None)
!2888 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2889 = !{!2890, !117, !118}
!2890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2891, size: 32)
!2891 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2892)
!2892 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2893)
!2893 = !{!2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2892, file: !656, line: 447, baseType: !660, size: 32)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2892, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2892, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2892, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2892, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2892, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2892, file: !656, line: 453, baseType: !1711, size: 96, offset: 192)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2892, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2892, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2892, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2892, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2892, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2892, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2892, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2892, file: !656, line: 461, baseType: !1720, size: 64, offset: 512)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2892, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2892, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2892, file: !656, line: 464, baseType: !1724, size: 128, offset: 640)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2892, file: !656, line: 465, baseType: !1726, size: 160, offset: 768)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2892, file: !656, line: 466, baseType: !1728, size: 160, offset: 928)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2892, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2915 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2916, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2917, splitDebugInlining: false, nameTableKind: None)
!2916 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2917 = !{!135, !1259, !315, !1109, !2918, !144, !117}
!2918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2919, size: 32)
!2919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !144)
!2920 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2921, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2922, splitDebugInlining: false, nameTableKind: None)
!2921 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2922 = !{!2923}
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 32)
!2924 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !448, line: 510, baseType: !2925)
!2925 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 477, size: 1216, elements: !2926)
!2926 = !{!2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2925, file: !448, line: 479, baseType: !452, size: 32)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2925, file: !448, line: 480, baseType: !452, size: 32, offset: 32)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2925, file: !448, line: 481, baseType: !452, size: 32, offset: 64)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2925, file: !448, line: 482, baseType: !452, size: 32, offset: 96)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2925, file: !448, line: 483, baseType: !452, size: 32, offset: 128)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2925, file: !448, line: 484, baseType: !452, size: 32, offset: 160)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2925, file: !448, line: 485, baseType: !973, size: 64, offset: 192)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2925, file: !448, line: 486, baseType: !452, size: 32, offset: 256)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2925, file: !448, line: 487, baseType: !452, size: 32, offset: 288)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2925, file: !448, line: 488, baseType: !973, size: 64, offset: 320)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2925, file: !448, line: 489, baseType: !452, size: 32, offset: 384)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2925, file: !448, line: 490, baseType: !452, size: 32, offset: 416)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2925, file: !448, line: 491, baseType: !973, size: 64, offset: 448)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2925, file: !448, line: 492, baseType: !452, size: 32, offset: 512)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2925, file: !448, line: 493, baseType: !452, size: 32, offset: 544)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2925, file: !448, line: 494, baseType: !973, size: 64, offset: 576)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2925, file: !448, line: 495, baseType: !452, size: 32, offset: 640)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2925, file: !448, line: 496, baseType: !452, size: 32, offset: 672)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2925, file: !448, line: 497, baseType: !973, size: 64, offset: 704)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2925, file: !448, line: 498, baseType: !452, size: 32, offset: 768)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2925, file: !448, line: 499, baseType: !452, size: 32, offset: 800)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2925, file: !448, line: 500, baseType: !973, size: 64, offset: 832)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2925, file: !448, line: 501, baseType: !452, size: 32, offset: 896)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2925, file: !448, line: 502, baseType: !452, size: 32, offset: 928)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2925, file: !448, line: 503, baseType: !973, size: 64, offset: 960)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2925, file: !448, line: 504, baseType: !452, size: 32, offset: 1024)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2925, file: !448, line: 505, baseType: !452, size: 32, offset: 1056)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2925, file: !448, line: 506, baseType: !156, size: 32, offset: 1088)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2925, file: !448, line: 507, baseType: !452, size: 32, offset: 1120)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2925, file: !448, line: 508, baseType: !452, size: 32, offset: 1152)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2925, file: !448, line: 509, baseType: !452, size: 32, offset: 1184)
!2958 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2959, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2959 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2960 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2961, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2962, retainedTypes: !2978, splitDebugInlining: false, nameTableKind: None)
!2961 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!2962 = !{!2963, !2970, !2974}
!2963 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2964, line: 38, baseType: !32, size: 32, elements: !2965)
!2964 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2965 = !{!2966, !2967, !2968, !2969}
!2966 = !DIEnumerator(name: "HAL_OK", value: 0)
!2967 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2968 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2969 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2970 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !950, line: 184, baseType: !32, size: 32, elements: !2971)
!2971 = !{!2972, !2973}
!2972 = !DIEnumerator(name: "RESET", value: 0)
!2973 = !DIEnumerator(name: "SET", value: 1)
!2974 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !950, line: 190, baseType: !32, size: 32, elements: !2975)
!2975 = !{!2976, !2977}
!2976 = !DIEnumerator(name: "DISABLE", value: 0)
!2977 = !DIEnumerator(name: "ENABLE", value: 1)
!2978 = !{!117, !2979, !143, !156, !1575, !3014, !3020, !3031, !279, !3032, !213}
!2979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2980, size: 32)
!2980 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !448, line: 510, baseType: !2981)
!2981 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 477, size: 1216, elements: !2982)
!2982 = !{!2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013}
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2981, file: !448, line: 479, baseType: !452, size: 32)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2981, file: !448, line: 480, baseType: !452, size: 32, offset: 32)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2981, file: !448, line: 481, baseType: !452, size: 32, offset: 64)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2981, file: !448, line: 482, baseType: !452, size: 32, offset: 96)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2981, file: !448, line: 483, baseType: !452, size: 32, offset: 128)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2981, file: !448, line: 484, baseType: !452, size: 32, offset: 160)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2981, file: !448, line: 485, baseType: !973, size: 64, offset: 192)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2981, file: !448, line: 486, baseType: !452, size: 32, offset: 256)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2981, file: !448, line: 487, baseType: !452, size: 32, offset: 288)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2981, file: !448, line: 488, baseType: !973, size: 64, offset: 320)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2981, file: !448, line: 489, baseType: !452, size: 32, offset: 384)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2981, file: !448, line: 490, baseType: !452, size: 32, offset: 416)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2981, file: !448, line: 491, baseType: !973, size: 64, offset: 448)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2981, file: !448, line: 492, baseType: !452, size: 32, offset: 512)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2981, file: !448, line: 493, baseType: !452, size: 32, offset: 544)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2981, file: !448, line: 494, baseType: !973, size: 64, offset: 576)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2981, file: !448, line: 495, baseType: !452, size: 32, offset: 640)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2981, file: !448, line: 496, baseType: !452, size: 32, offset: 672)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2981, file: !448, line: 497, baseType: !973, size: 64, offset: 704)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2981, file: !448, line: 498, baseType: !452, size: 32, offset: 768)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2981, file: !448, line: 499, baseType: !452, size: 32, offset: 800)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2981, file: !448, line: 500, baseType: !973, size: 64, offset: 832)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2981, file: !448, line: 501, baseType: !452, size: 32, offset: 896)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2981, file: !448, line: 502, baseType: !452, size: 32, offset: 928)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2981, file: !448, line: 503, baseType: !973, size: 64, offset: 960)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2981, file: !448, line: 504, baseType: !452, size: 32, offset: 1024)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2981, file: !448, line: 505, baseType: !452, size: 32, offset: 1056)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2981, file: !448, line: 506, baseType: !156, size: 32, offset: 1088)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2981, file: !448, line: 507, baseType: !452, size: 32, offset: 1120)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2981, file: !448, line: 508, baseType: !452, size: 32, offset: 1152)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2981, file: !448, line: 509, baseType: !452, size: 32, offset: 1184)
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !448, line: 471, baseType: !3016)
!3016 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 467, size: 64, elements: !3017)
!3017 = !{!3018, !3019}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3016, file: !448, line: 469, baseType: !452, size: 32)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3016, file: !448, line: 470, baseType: !452, size: 32, offset: 32)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3021, size: 32)
!3021 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !448, line: 379, baseType: !3022)
!3022 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 370, size: 224, elements: !3023)
!3023 = !{!3024, !3025, !3026, !3027, !3028, !3029, !3030}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3022, file: !448, line: 372, baseType: !452, size: 32)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3022, file: !448, line: 373, baseType: !452, size: 32, offset: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3022, file: !448, line: 374, baseType: !452, size: 32, offset: 64)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3022, file: !448, line: 375, baseType: !452, size: 32, offset: 96)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3022, file: !448, line: 376, baseType: !452, size: 32, offset: 128)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3022, file: !448, line: 377, baseType: !452, size: 32, offset: 160)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3022, file: !448, line: 378, baseType: !452, size: 32, offset: 192)
!3031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 32)
!3032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 32)
!3033 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !448, line: 396, baseType: !3034)
!3034 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 385, size: 320, elements: !3035)
!3035 = !{!3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3034, file: !448, line: 387, baseType: !452, size: 32)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3034, file: !448, line: 388, baseType: !452, size: 32, offset: 32)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3034, file: !448, line: 389, baseType: !452, size: 32, offset: 64)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3034, file: !448, line: 390, baseType: !452, size: 32, offset: 96)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3034, file: !448, line: 391, baseType: !452, size: 32, offset: 128)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3034, file: !448, line: 392, baseType: !452, size: 32, offset: 160)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3034, file: !448, line: 393, baseType: !452, size: 32, offset: 192)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3034, file: !448, line: 394, baseType: !452, size: 32, offset: 224)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3034, file: !448, line: 395, baseType: !1246, size: 64, offset: 256)
!3045 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3046, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3047, retainedTypes: !3048, splitDebugInlining: false, nameTableKind: None)
!3046 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!3047 = !{!949}
!3048 = !{!3049, !156, !3057, !3063, !3074}
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3050, size: 32)
!3050 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !656, line: 770, baseType: !3051)
!3051 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 764, size: 128, elements: !3052)
!3052 = !{!3053, !3054, !3055, !3056}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3051, file: !656, line: 766, baseType: !452, size: 32)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3051, file: !656, line: 767, baseType: !452, size: 32, offset: 32)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3051, file: !656, line: 768, baseType: !452, size: 32, offset: 64)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3051, file: !656, line: 769, baseType: !660, size: 32, offset: 96)
!3057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3058, size: 32)
!3058 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !448, line: 471, baseType: !3059)
!3059 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 467, size: 64, elements: !3060)
!3060 = !{!3061, !3062}
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3059, file: !448, line: 469, baseType: !452, size: 32)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3059, file: !448, line: 470, baseType: !452, size: 32, offset: 32)
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 32)
!3064 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !448, line: 379, baseType: !3065)
!3065 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 370, size: 224, elements: !3066)
!3066 = !{!3067, !3068, !3069, !3070, !3071, !3072, !3073}
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3065, file: !448, line: 372, baseType: !452, size: 32)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3065, file: !448, line: 373, baseType: !452, size: 32, offset: 32)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3065, file: !448, line: 374, baseType: !452, size: 32, offset: 64)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3065, file: !448, line: 375, baseType: !452, size: 32, offset: 96)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3065, file: !448, line: 376, baseType: !452, size: 32, offset: 128)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3065, file: !448, line: 377, baseType: !452, size: 32, offset: 160)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3065, file: !448, line: 378, baseType: !452, size: 32, offset: 192)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 32)
!3075 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !448, line: 510, baseType: !3076)
!3076 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 477, size: 1216, elements: !3077)
!3077 = !{!3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3076, file: !448, line: 479, baseType: !452, size: 32)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3076, file: !448, line: 480, baseType: !452, size: 32, offset: 32)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3076, file: !448, line: 481, baseType: !452, size: 32, offset: 64)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3076, file: !448, line: 482, baseType: !452, size: 32, offset: 96)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3076, file: !448, line: 483, baseType: !452, size: 32, offset: 128)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3076, file: !448, line: 484, baseType: !452, size: 32, offset: 160)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3076, file: !448, line: 485, baseType: !973, size: 64, offset: 192)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3076, file: !448, line: 486, baseType: !452, size: 32, offset: 256)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3076, file: !448, line: 487, baseType: !452, size: 32, offset: 288)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3076, file: !448, line: 488, baseType: !973, size: 64, offset: 320)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3076, file: !448, line: 489, baseType: !452, size: 32, offset: 384)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3076, file: !448, line: 490, baseType: !452, size: 32, offset: 416)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3076, file: !448, line: 491, baseType: !973, size: 64, offset: 448)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3076, file: !448, line: 492, baseType: !452, size: 32, offset: 512)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3076, file: !448, line: 493, baseType: !452, size: 32, offset: 544)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3076, file: !448, line: 494, baseType: !973, size: 64, offset: 576)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3076, file: !448, line: 495, baseType: !452, size: 32, offset: 640)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3076, file: !448, line: 496, baseType: !452, size: 32, offset: 672)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3076, file: !448, line: 497, baseType: !973, size: 64, offset: 704)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3076, file: !448, line: 498, baseType: !452, size: 32, offset: 768)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3076, file: !448, line: 499, baseType: !452, size: 32, offset: 800)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3076, file: !448, line: 500, baseType: !973, size: 64, offset: 832)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3076, file: !448, line: 501, baseType: !452, size: 32, offset: 896)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3076, file: !448, line: 502, baseType: !452, size: 32, offset: 928)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3076, file: !448, line: 503, baseType: !973, size: 64, offset: 960)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3076, file: !448, line: 504, baseType: !452, size: 32, offset: 1024)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3076, file: !448, line: 505, baseType: !452, size: 32, offset: 1056)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3076, file: !448, line: 506, baseType: !156, size: 32, offset: 1088)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3076, file: !448, line: 507, baseType: !452, size: 32, offset: 1120)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3076, file: !448, line: 508, baseType: !452, size: 32, offset: 1152)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3076, file: !448, line: 509, baseType: !452, size: 32, offset: 1184)
!3109 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3110, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !3111, splitDebugInlining: false, nameTableKind: None)
!3110 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!3111 = !{!117, !315}
!3112 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3113, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3114, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!3113 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!3114 = !{!3115, !3122, !2616, !30}
!3115 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3116, line: 14, baseType: !32, size: 32, elements: !3117)
!3116 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3117 = !{!3118, !3119, !3120, !3121}
!3118 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3119 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3120 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3121 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3122 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3116, line: 42, baseType: !32, size: 32, elements: !3123)
!3123 = !{!3124, !3125, !3126, !3127, !3128, !3129}
!3124 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3125 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3126 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3127 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3128 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3129 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3130 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3131, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!3131 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!3132 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3133, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3134, retainedTypes: !3145, splitDebugInlining: false, nameTableKind: None)
!3133 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!3134 = !{!3135, !30}
!3135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_poll_states_bits", file: !220, line: 5323, baseType: !32, size: 32, elements: !3136)
!3136 = !{!3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144}
!3137 = !DIEnumerator(name: "_POLL_STATE_NOT_READY", value: 0)
!3138 = !DIEnumerator(name: "_POLL_STATE_SIGNALED", value: 1)
!3139 = !DIEnumerator(name: "_POLL_STATE_SEM_AVAILABLE", value: 2)
!3140 = !DIEnumerator(name: "_POLL_STATE_DATA_AVAILABLE", value: 3)
!3141 = !DIEnumerator(name: "_POLL_STATE_CANCELLED", value: 4)
!3142 = !DIEnumerator(name: "_POLL_STATE_MSGQ_DATA_AVAILABLE", value: 5)
!3143 = !DIEnumerator(name: "_POLL_STATE_PIPE_DATA_AVAILABLE", value: 6)
!3144 = !DIEnumerator(name: "_POLL_NUM_STATES", value: 7)
!3145 = !{!117, !143, !3146, !1259, !3156, !146, !3157, !118, !3158, !426}
!3146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3147, size: 32)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_node", file: !3148, line: 25, size: 64, elements: !3149)
!3148 = !DIFile(filename: "zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3149 = !{!3150, !3155}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3147, file: !3148, line: 26, baseType: !3151, size: 32)
!3151 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !417, line: 39, baseType: !3152)
!3152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !417, line: 35, size: 32, elements: !3153)
!3153 = !{!3154}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !3152, file: !417, line: 36, baseType: !426, size: 32)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3147, file: !3148, line: 27, baseType: !117, size: 32, offset: 32)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!3157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3151, size: 32)
!3158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3159, size: 32)
!3159 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !3160)
!3160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !3161)
!3161 = !{!3162, !3168}
!3162 = !DIDerivedType(tag: DW_TAG_member, scope: !3160, file: !235, line: 38, baseType: !3163, size: 32)
!3163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3160, file: !235, line: 38, size: 32, elements: !3164)
!3164 = !{!3165, !3167}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3163, file: !235, line: 39, baseType: !3166, size: 32)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3160, size: 32)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3163, file: !235, line: 40, baseType: !3166, size: 32)
!3168 = !DIDerivedType(tag: DW_TAG_member, scope: !3160, file: !235, line: 42, baseType: !3169, size: 32, offset: 32)
!3169 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3160, file: !235, line: 42, size: 32, elements: !3170)
!3170 = !{!3171, !3172}
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3169, file: !235, line: 43, baseType: !3166, size: 32)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3169, file: !235, line: 44, baseType: !3166, size: 32)
!3173 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3174, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !3175, splitDebugInlining: false, nameTableKind: None)
!3174 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!3175 = !{!22, !117, !118}
!3176 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3177, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!3177 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!3178 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3179, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!3179 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!3180 = !{!"Ubuntu clang version 14.0.6"}
!3181 = !{i32 7, !"Dwarf Version", i32 4}
!3182 = !{i32 2, !"Debug Info Version", i32 3}
!3183 = !{i32 1, !"wchar_size", i32 4}
!3184 = !{i32 1, !"min_enum_size", i32 4}
!3185 = !{i32 1, !"branch-target-enforcement", i32 0}
!3186 = !{i32 1, !"sign-return-address", i32 0}
!3187 = !{i32 1, !"sign-return-address-all", i32 0}
!3188 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3189 = !{i32 7, !"frame-pointer", i32 2}
!3190 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3191, file: !3191, line: 26, type: !365, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !2123)
!3191 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3192 = !DILocation(line: 28, column: 1, scope: !3190)
!3193 = !{i64 2155035562, i64 2155035582, i64 2155035645}
!3194 = !DILocation(line: 29, column: 1, scope: !3190)
!3195 = !{i64 2155035977, i64 2155035997, i64 2155036060}
!3196 = !DILocation(line: 30, column: 1, scope: !3190)
!3197 = !{i64 2155036396, i64 2155036416, i64 2155036479}
!3198 = !DILocation(line: 31, column: 1, scope: !3190)
!3199 = !{i64 2155036815, i64 2155036835, i64 2155036898}
!3200 = !DILocation(line: 33, column: 1, scope: !3190)
!3201 = !{i64 2155037107, i64 2155037127, i64 2155037190}
!3202 = !DILocation(line: 35, column: 1, scope: !3190)
!3203 = !{i64 2155037432, i64 2155037452, i64 2155037515}
!3204 = !DILocation(line: 50, column: 1, scope: !3190)
!3205 = !{i64 2155037859, i64 2155037879, i64 2155037942}
!3206 = !DILocation(line: 54, column: 1, scope: !3190)
!3207 = !{i64 2155038298, i64 2155038318, i64 2155038381}
!3208 = !DILocation(line: 61, column: 1, scope: !3190)
!3209 = !{i64 2155038615, i64 2155038635, i64 2155038698}
!3210 = !DILocation(line: 63, column: 1, scope: !3190)
!3211 = !{i64 2155038995, i64 2155039015, i64 2155039078}
!3212 = !DILocation(line: 64, column: 1, scope: !3190)
!3213 = !{i64 2155039517, i64 2155039537, i64 2155039600}
!3214 = !DILocation(line: 65, column: 1, scope: !3190)
!3215 = !{i64 2155044076, i64 2155044096, i64 2155044159}
!3216 = !DILocation(line: 66, column: 1, scope: !3190)
!3217 = !{i64 2155044558, i64 2155044578, i64 2155044641}
!3218 = !DILocation(line: 67, column: 1, scope: !3190)
!3219 = !{i64 2155045065, i64 2155045085, i64 2155045148}
!3220 = !DILocation(line: 68, column: 1, scope: !3190)
!3221 = !{i64 2155045553, i64 2155045573, i64 2155045636}
!3222 = !DILocation(line: 70, column: 1, scope: !3190)
!3223 = !{i64 2155046021, i64 2155046041, i64 2155046104}
!3224 = !DILocation(line: 71, column: 1, scope: !3190)
!3225 = !{i64 2155046463, i64 2155046483, i64 2155046546}
!3226 = !DILocation(line: 72, column: 1, scope: !3190)
!3227 = !{i64 2155046921, i64 2155046941, i64 2155047004}
!3228 = !DILocation(line: 79, column: 1, scope: !3190)
!3229 = !{i64 2155047375, i64 2155047395, i64 2155047458}
!3230 = !DILocation(line: 80, column: 1, scope: !3190)
!3231 = !{i64 2155047886, i64 2155047906, i64 2155047969}
!3232 = !DILocation(line: 82, column: 1, scope: !3190)
!3233 = !{i64 2155048377, i64 2155048397, i64 2155048460}
!3234 = !DILocation(line: 97, column: 1, scope: !3190)
!3235 = !{i64 2155048714, i64 2155048734, i64 2155048797}
!3236 = !DILocation(line: 99, column: 1, scope: !3190)
!3237 = !{i64 2155048932, i64 2155048952, i64 2155049015}
!3238 = !DILocation(line: 102, column: 1, scope: !3190)
!3239 = !{i64 2155049189, i64 2155049209, i64 2155049272}
!3240 = !DILocation(line: 105, column: 1, scope: !3190)
!3241 = !{i64 2155049429, i64 2155049449, i64 2155049512}
!3242 = !DILocation(line: 115, column: 1, scope: !3190)
!3243 = !{i64 2155049768, i64 2155049788, i64 2155049851}
!3244 = !DILocation(line: 118, column: 1, scope: !3190)
!3245 = !{i64 2155050112, i64 2155050132, i64 2155050195}
!3246 = !DILocation(line: 32, column: 1, scope: !3247)
!3247 = !DILexicalBlockFile(scope: !3190, file: !3248, discriminator: 0)
!3248 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3249 = !{i64 2155050468, i64 2155050488, i64 2155050551}
!3250 = !DILocation(line: 33, column: 1, scope: !3247)
!3251 = !{i64 2155050980, i64 2155051000, i64 2155051063}
!3252 = !DILocation(line: 53, column: 1, scope: !3247)
!3253 = !{i64 2155051488, i64 2155051508, i64 2155051571}
!3254 = !DILocation(line: 54, column: 1, scope: !3247)
!3255 = !{i64 2155051906, i64 2155051926, i64 2155051989}
!3256 = !DILocation(line: 55, column: 1, scope: !3247)
!3257 = !{i64 2155052324, i64 2155052344, i64 2155052407}
!3258 = !DILocation(line: 56, column: 1, scope: !3247)
!3259 = !{i64 2155052742, i64 2155052762, i64 2155052825}
!3260 = !DILocation(line: 57, column: 1, scope: !3247)
!3261 = !{i64 2155053160, i64 2155053180, i64 2155053243}
!3262 = !DILocation(line: 58, column: 1, scope: !3247)
!3263 = !{i64 2155057639, i64 2155057659, i64 2155057722}
!3264 = !DILocation(line: 59, column: 1, scope: !3247)
!3265 = !{i64 2155058057, i64 2155058077, i64 2155058140}
!3266 = !DILocation(line: 60, column: 1, scope: !3247)
!3267 = !{i64 2155058481, i64 2155058501, i64 2155058564}
!3268 = !DILocation(line: 61, column: 1, scope: !3247)
!3269 = !{i64 2155058798, i64 2155058818, i64 2155058881}
!3270 = !DILocation(line: 70, column: 1, scope: !3247)
!3271 = !{i64 2155059027, i64 2155059047, i64 2155059110}
!3272 = !DILocation(line: 72, column: 1, scope: !3247)
!3273 = !{i64 2155059359, i64 2155059379, i64 2155059442}
!3274 = !DILocation(line: 73, column: 1, scope: !3247)
!3275 = !{i64 2155059809, i64 2155059829, i64 2155059892}
!3276 = !DILocation(line: 74, column: 1, scope: !3247)
!3277 = !{i64 2155060259, i64 2155060279, i64 2155060342}
!3278 = !DILocation(line: 75, column: 1, scope: !3247)
!3279 = !{i64 2155060709, i64 2155060729, i64 2155060792}
!3280 = !DILocation(line: 76, column: 1, scope: !3247)
!3281 = !{i64 2155061159, i64 2155061179, i64 2155061242}
!3282 = !DILocation(line: 77, column: 1, scope: !3247)
!3283 = !{i64 2155061609, i64 2155061629, i64 2155061692}
!3284 = !DILocation(line: 78, column: 1, scope: !3247)
!3285 = !{i64 2155062059, i64 2155062079, i64 2155062142}
!3286 = !DILocation(line: 79, column: 1, scope: !3247)
!3287 = !{i64 2155062509, i64 2155062529, i64 2155062592}
!3288 = !DILocation(line: 80, column: 1, scope: !3247)
!3289 = !{i64 2155062962, i64 2155062982, i64 2155063045}
!3290 = !DILocation(line: 84, column: 1, scope: !3247)
!3291 = !{i64 2155063294, i64 2155063314, i64 2155063377}
!3292 = !DILocation(line: 91, column: 1, scope: !3247)
!3293 = !{i64 2155063691, i64 2155063711, i64 2155063774}
!3294 = !DILocation(line: 93, column: 1, scope: !3247)
!3295 = !{i64 2155064058, i64 2155064078, i64 2155064141}
!3296 = !DILocation(line: 106, column: 1, scope: !3247)
!3297 = !{i64 2155064328, i64 2155064348, i64 2155064411}
!3298 = !DILocation(line: 11, column: 1, scope: !3299)
!3299 = !DILexicalBlockFile(scope: !3190, file: !3300, discriminator: 0)
!3300 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3301 = distinct !DISubprogram(name: "blink0", scope: !218, file: !218, line: 90, type: !365, scopeLine: 91, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2123)
!3302 = !DILocation(line: 92, column: 2, scope: !3301)
!3303 = !DILocation(line: 93, column: 1, scope: !3301)
!3304 = distinct !DISubprogram(name: "blink", scope: !218, file: !218, line: 54, type: !3305, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3308)
!3305 = !DISubroutineType(types: !3306)
!3306 = !{null, !3307, !156, !156}
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 32)
!3308 = !{!3309, !3310, !3311, !3312, !3315, !3316, !3317, !3324, !3325}
!3309 = !DILocalVariable(name: "led", arg: 1, scope: !3304, file: !218, line: 54, type: !3307)
!3310 = !DILocalVariable(name: "sleep_ms", arg: 2, scope: !3304, file: !218, line: 54, type: !156)
!3311 = !DILocalVariable(name: "id", arg: 3, scope: !3304, file: !218, line: 54, type: !156)
!3312 = !DILocalVariable(name: "spec", scope: !3304, file: !218, line: 56, type: !3313)
!3313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3314, size: 32)
!3314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !401)
!3315 = !DILocalVariable(name: "cnt", scope: !3304, file: !218, line: 57, type: !118)
!3316 = !DILocalVariable(name: "ret", scope: !3304, file: !218, line: 58, type: !118)
!3317 = !DILocalVariable(name: "tx_data", scope: !3318, file: !218, line: 75, type: !3319)
!3318 = distinct !DILexicalBlock(scope: !3304, file: !218, line: 72, column: 12)
!3319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "printk_data_t", file: !218, line: 31, size: 96, elements: !3320)
!3320 = !{!3321, !3322, !3323}
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_reserved", scope: !3319, file: !218, line: 32, baseType: !117, size: 32)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "led", scope: !3319, file: !218, line: 33, baseType: !156, size: 32, offset: 32)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !3319, file: !218, line: 34, baseType: !156, size: 32, offset: 64)
!3324 = !DILocalVariable(name: "size", scope: !3318, file: !218, line: 77, type: !315)
!3325 = !DILocalVariable(name: "mem_ptr", scope: !3318, file: !218, line: 78, type: !1259)
!3326 = !DILocation(line: 0, scope: !3304)
!3327 = !DILocation(line: 60, column: 29, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3304, file: !218, line: 60, column: 6)
!3329 = !DILocation(line: 60, column: 7, scope: !3328)
!3330 = !DILocation(line: 60, column: 6, scope: !3304)
!3331 = !DILocation(line: 61, column: 51, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3328, file: !218, line: 60, column: 36)
!3333 = !DILocation(line: 61, column: 57, scope: !3332)
!3334 = !DILocation(line: 61, column: 3, scope: !3332)
!3335 = !DILocation(line: 62, column: 3, scope: !3332)
!3336 = !DILocation(line: 56, column: 42, scope: !3304)
!3337 = !DILocation(line: 65, column: 8, scope: !3304)
!3338 = !DILocation(line: 66, column: 10, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3304, file: !218, line: 66, column: 6)
!3340 = !DILocation(line: 66, column: 6, scope: !3304)
!3341 = !DILocation(line: 73, column: 22, scope: !3318)
!3342 = !DILocation(line: 73, column: 34, scope: !3318)
!3343 = !DILocation(line: 73, column: 3, scope: !3318)
!3344 = !DILocation(line: 75, column: 3, scope: !3318)
!3345 = !DILocation(line: 75, column: 24, scope: !3318)
!3346 = !DILocation(line: 75, column: 34, scope: !3318)
!3347 = !DILocation(line: 0, scope: !3318)
!3348 = !DILocation(line: 78, column: 19, scope: !3318)
!3349 = !DILocation(line: 79, column: 3, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3351, file: !218, line: 79, column: 3)
!3351 = distinct !DILexicalBlock(scope: !3318, file: !218, line: 79, column: 3)
!3352 = !DILocation(line: 79, column: 3, scope: !3351)
!3353 = !DILocation(line: 68, column: 15, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3339, file: !218, line: 66, column: 16)
!3355 = !DILocation(line: 68, column: 9, scope: !3354)
!3356 = !DILocation(line: 68, column: 25, scope: !3354)
!3357 = !DILocation(line: 68, column: 20, scope: !3354)
!3358 = !DILocation(line: 67, column: 3, scope: !3354)
!3359 = !DILocation(line: 69, column: 3, scope: !3354)
!3360 = !DILocation(line: 79, column: 3, scope: !3361)
!3361 = distinct !DILexicalBlock(scope: !3350, file: !218, line: 79, column: 3)
!3362 = !DILocation(line: 81, column: 3, scope: !3318)
!3363 = !DILocation(line: 83, column: 3, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3318, file: !218, line: 83, column: 3)
!3365 = !DILocation(line: 85, column: 3, scope: !3318)
!3366 = !DILocation(line: 86, column: 6, scope: !3318)
!3367 = !DILocation(line: 87, column: 2, scope: !3304)
!3368 = !DILocation(line: 73, column: 43, scope: !3318)
!3369 = distinct !{!3369, !3370, !3367}
!3370 = !DILocation(line: 72, column: 2, scope: !3304)
!3371 = !DILocation(line: 88, column: 1, scope: !3304)
!3372 = distinct !DISubprogram(name: "device_is_ready", scope: !3373, file: !3373, line: 47, type: !3374, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3376)
!3373 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!3374 = !DISubroutineType(types: !3375)
!3375 = !{!146, !127}
!3376 = !{!3377}
!3377 = !DILocalVariable(name: "dev", arg: 1, scope: !3372, file: !3373, line: 47, type: !127)
!3378 = !DILocation(line: 0, scope: !3372)
!3379 = !DILocation(line: 55, column: 2, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3372, file: !3373, line: 55, column: 2)
!3381 = !{i64 2154934150}
!3382 = !DILocation(line: 56, column: 9, scope: !3372)
!3383 = !DILocation(line: 56, column: 2, scope: !3372)
!3384 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !102, file: !102, line: 731, type: !3385, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3387)
!3385 = !DISubroutineType(types: !3386)
!3386 = !{!118, !3313, !155}
!3387 = !{!3388, !3389}
!3388 = !DILocalVariable(name: "spec", arg: 1, scope: !3384, file: !102, line: 731, type: !3313)
!3389 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !3384, file: !102, line: 732, type: !155)
!3390 = !DILocation(line: 0, scope: !3384)
!3391 = !DILocation(line: 734, column: 34, scope: !3384)
!3392 = !DILocation(line: 735, column: 13, scope: !3384)
!3393 = !DILocation(line: 736, column: 13, scope: !3384)
!3394 = !DILocation(line: 736, column: 7, scope: !3384)
!3395 = !DILocation(line: 736, column: 22, scope: !3384)
!3396 = !DILocation(line: 734, column: 9, scope: !3384)
!3397 = !DILocation(line: 734, column: 2, scope: !3384)
!3398 = distinct !DISubprogram(name: "gpio_pin_set", scope: !102, file: !102, line: 1287, type: !3399, scopeLine: 1289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3401)
!3399 = !DISubroutineType(types: !3400)
!3400 = !{!118, !127, !154, !118}
!3401 = !{!3402, !3403, !3404, !3405, !3407}
!3402 = !DILocalVariable(name: "port", arg: 1, scope: !3398, file: !102, line: 1287, type: !127)
!3403 = !DILocalVariable(name: "pin", arg: 2, scope: !3398, file: !102, line: 1287, type: !154)
!3404 = !DILocalVariable(name: "value", arg: 3, scope: !3398, file: !102, line: 1288, type: !118)
!3405 = !DILocalVariable(name: "cfg", scope: !3398, file: !102, line: 1290, type: !3406)
!3406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!3407 = !DILocalVariable(name: "data", scope: !3398, file: !102, line: 1292, type: !3408)
!3408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !207)
!3409 = !DILocation(line: 0, scope: !3398)
!3410 = !DILocation(line: 1291, column: 44, scope: !3398)
!3411 = !DILocation(line: 1295, column: 2, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3413, file: !102, line: 1295, column: 2)
!3413 = distinct !DILexicalBlock(scope: !3398, file: !102, line: 1295, column: 2)
!3414 = !DILocation(line: 1295, column: 2, scope: !3413)
!3415 = !DILocation(line: 1295, column: 2, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3412, file: !102, line: 1295, column: 2)
!3417 = !DILocation(line: 1293, column: 43, scope: !3398)
!3418 = !DILocation(line: 1298, column: 12, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3398, file: !102, line: 1298, column: 6)
!3420 = !DILocation(line: 1298, column: 19, scope: !3419)
!3421 = !DILocation(line: 1298, column: 6, scope: !3398)
!3422 = !DILocation(line: 1302, column: 9, scope: !3398)
!3423 = !DILocation(line: 1302, column: 2, scope: !3398)
!3424 = distinct !DISubprogram(name: "k_msleep", scope: !220, file: !220, line: 439, type: !3425, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3427)
!3425 = !DISubroutineType(types: !3426)
!3426 = !{!362, !362}
!3427 = !{!3428}
!3428 = !DILocalVariable(name: "ms", arg: 1, scope: !3424, file: !220, line: 439, type: !362)
!3429 = !DILocation(line: 0, scope: !3424)
!3430 = !DILocation(line: 441, column: 17, scope: !3424)
!3431 = !DILocation(line: 441, column: 9, scope: !3424)
!3432 = !DILocation(line: 441, column: 2, scope: !3424)
!3433 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3434, file: !3434, line: 403, type: !3435, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3437)
!3434 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3435 = !DISubroutineType(types: !3436)
!3436 = !{!213, !213}
!3437 = !{!3438}
!3438 = !DILocalVariable(name: "t", arg: 1, scope: !3433, file: !3434, line: 403, type: !213)
!3439 = !DILocation(line: 0, scope: !3433)
!3440 = !DILocalVariable(name: "t", arg: 1, scope: !3441, file: !3434, line: 102, type: !213)
!3441 = distinct !DISubprogram(name: "z_tmcvt", scope: !3434, file: !3434, line: 102, type: !3442, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3444)
!3442 = !DISubroutineType(types: !3443)
!3443 = !{!213, !213, !156, !156, !146, !146, !146, !146}
!3444 = !{!3440, !3445, !3446, !3447, !3448, !3449, !3450, !3451, !3452, !3453, !3454}
!3445 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3441, file: !3434, line: 102, type: !156)
!3446 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3441, file: !3434, line: 103, type: !156)
!3447 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3441, file: !3434, line: 103, type: !146)
!3448 = !DILocalVariable(name: "result32", arg: 5, scope: !3441, file: !3434, line: 104, type: !146)
!3449 = !DILocalVariable(name: "round_up", arg: 6, scope: !3441, file: !3434, line: 104, type: !146)
!3450 = !DILocalVariable(name: "round_off", arg: 7, scope: !3441, file: !3434, line: 105, type: !146)
!3451 = !DILocalVariable(name: "mul_ratio", scope: !3441, file: !3434, line: 107, type: !146)
!3452 = !DILocalVariable(name: "div_ratio", scope: !3441, file: !3434, line: 109, type: !146)
!3453 = !DILocalVariable(name: "off", scope: !3441, file: !3434, line: 116, type: !213)
!3454 = !DILocalVariable(name: "rdivisor", scope: !3455, file: !3434, line: 119, type: !156)
!3455 = distinct !DILexicalBlock(scope: !3456, file: !3434, line: 118, column: 18)
!3456 = distinct !DILexicalBlock(scope: !3441, file: !3434, line: 118, column: 6)
!3457 = !DILocation(line: 0, scope: !3441, inlinedAt: !3458)
!3458 = distinct !DILocation(line: 406, column: 9, scope: !3433)
!3459 = !DILocation(line: 145, column: 13, scope: !3460, inlinedAt: !3458)
!3460 = distinct !DILexicalBlock(scope: !3461, file: !3434, line: 144, column: 10)
!3461 = distinct !DILexicalBlock(scope: !3462, file: !3434, line: 142, column: 7)
!3462 = distinct !DILexicalBlock(scope: !3463, file: !3434, line: 141, column: 24)
!3463 = distinct !DILexicalBlock(scope: !3464, file: !3434, line: 141, column: 13)
!3464 = distinct !DILexicalBlock(scope: !3441, file: !3434, line: 134, column: 6)
!3465 = !DILocation(line: 406, column: 2, scope: !3433)
!3466 = distinct !DISubprogram(name: "k_sleep", scope: !3467, file: !3467, line: 91, type: !3468, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3474)
!3467 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!3468 = !DISubroutineType(types: !3469)
!3469 = !{!362, !3470}
!3470 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !3471)
!3471 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !3472)
!3472 = !{!3473}
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3471, file: !114, line: 66, baseType: !113, size: 64)
!3474 = !{!3475}
!3475 = !DILocalVariable(name: "timeout", arg: 1, scope: !3466, file: !3467, line: 91, type: !3470)
!3476 = !DILocation(line: 0, scope: !3466)
!3477 = !DILocation(line: 99, column: 2, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3466, file: !3467, line: 99, column: 2)
!3479 = !{i64 2154745751}
!3480 = !DILocation(line: 100, column: 9, scope: !3466)
!3481 = !DILocation(line: 100, column: 2, scope: !3466)
!3482 = distinct !DISubprogram(name: "gpio_pin_set_raw", scope: !102, file: !102, line: 1247, type: !3399, scopeLine: 1249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3483)
!3483 = !{!3484, !3485, !3486, !3487, !3488}
!3484 = !DILocalVariable(name: "port", arg: 1, scope: !3482, file: !102, line: 1247, type: !127)
!3485 = !DILocalVariable(name: "pin", arg: 2, scope: !3482, file: !102, line: 1247, type: !154)
!3486 = !DILocalVariable(name: "value", arg: 3, scope: !3482, file: !102, line: 1248, type: !118)
!3487 = !DILocalVariable(name: "cfg", scope: !3482, file: !102, line: 1250, type: !3406)
!3488 = !DILocalVariable(name: "ret", scope: !3482, file: !102, line: 1252, type: !118)
!3489 = !DILocation(line: 0, scope: !3482)
!3490 = !DILocation(line: 1251, column: 44, scope: !3482)
!3491 = !DILocation(line: 1254, column: 2, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3493, file: !102, line: 1254, column: 2)
!3493 = distinct !DILexicalBlock(scope: !3482, file: !102, line: 1254, column: 2)
!3494 = !DILocation(line: 1254, column: 2, scope: !3493)
!3495 = !DILocation(line: 1254, column: 2, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3492, file: !102, line: 1254, column: 2)
!3497 = !DILocation(line: 1257, column: 12, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3482, file: !102, line: 1257, column: 6)
!3499 = !DILocation(line: 1257, column: 6, scope: !3482)
!3500 = !DILocation(line: 1258, column: 9, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3498, file: !102, line: 1257, column: 18)
!3502 = !DILocation(line: 1259, column: 2, scope: !3501)
!3503 = !DILocation(line: 1260, column: 9, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3498, file: !102, line: 1259, column: 9)
!3505 = !DILocation(line: 1263, column: 2, scope: !3482)
!3506 = distinct !DISubprogram(name: "gpio_port_set_bits_raw", scope: !3507, file: !3507, line: 174, type: !170, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3508)
!3507 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!3508 = !{!3509, !3510}
!3509 = !DILocalVariable(name: "port", arg: 1, scope: !3506, file: !3507, line: 174, type: !127)
!3510 = !DILocalVariable(name: "pins", arg: 2, scope: !3506, file: !3507, line: 174, type: !167)
!3511 = !DILocation(line: 0, scope: !3506)
!3512 = !DILocation(line: 183, column: 2, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3506, file: !3507, line: 183, column: 2)
!3514 = !{i64 2155045259}
!3515 = !DILocation(line: 184, column: 9, scope: !3506)
!3516 = !DILocation(line: 184, column: 2, scope: !3506)
!3517 = distinct !DISubprogram(name: "gpio_port_clear_bits_raw", scope: !3507, file: !3507, line: 198, type: !170, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3518)
!3518 = !{!3519, !3520}
!3519 = !DILocalVariable(name: "port", arg: 1, scope: !3517, file: !3507, line: 198, type: !127)
!3520 = !DILocalVariable(name: "pins", arg: 2, scope: !3517, file: !3507, line: 198, type: !167)
!3521 = !DILocation(line: 0, scope: !3517)
!3522 = !DILocation(line: 207, column: 2, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3517, file: !3507, line: 207, column: 2)
!3524 = !{i64 2155045327}
!3525 = !DILocation(line: 208, column: 9, scope: !3517)
!3526 = !DILocation(line: 208, column: 2, scope: !3517)
!3527 = distinct !DISubprogram(name: "z_impl_gpio_port_clear_bits_raw", scope: !102, file: !102, line: 1060, type: !170, scopeLine: 1062, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3528)
!3528 = !{!3529, !3530, !3531}
!3529 = !DILocalVariable(name: "port", arg: 1, scope: !3527, file: !102, line: 1060, type: !127)
!3530 = !DILocalVariable(name: "pins", arg: 2, scope: !3527, file: !102, line: 1061, type: !167)
!3531 = !DILocalVariable(name: "api", scope: !3527, file: !102, line: 1063, type: !119)
!3532 = !DILocation(line: 0, scope: !3527)
!3533 = !DILocation(line: 1064, column: 41, scope: !3527)
!3534 = !DILocation(line: 1066, column: 14, scope: !3527)
!3535 = !DILocation(line: 1066, column: 9, scope: !3527)
!3536 = !DILocation(line: 1066, column: 2, scope: !3527)
!3537 = distinct !DISubprogram(name: "z_impl_gpio_port_set_bits_raw", scope: !102, file: !102, line: 1022, type: !170, scopeLine: 1024, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3538)
!3538 = !{!3539, !3540, !3541}
!3539 = !DILocalVariable(name: "port", arg: 1, scope: !3537, file: !102, line: 1022, type: !127)
!3540 = !DILocalVariable(name: "pins", arg: 2, scope: !3537, file: !102, line: 1023, type: !167)
!3541 = !DILocalVariable(name: "api", scope: !3537, file: !102, line: 1025, type: !119)
!3542 = !DILocation(line: 0, scope: !3537)
!3543 = !DILocation(line: 1026, column: 41, scope: !3537)
!3544 = !DILocation(line: 1028, column: 14, scope: !3537)
!3545 = !DILocation(line: 1028, column: 9, scope: !3537)
!3546 = !DILocation(line: 1028, column: 2, scope: !3537)
!3547 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !3507, file: !3507, line: 49, type: !125, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3548)
!3548 = !{!3549, !3550, !3551}
!3549 = !DILocalVariable(name: "port", arg: 1, scope: !3547, file: !3507, line: 49, type: !127)
!3550 = !DILocalVariable(name: "pin", arg: 2, scope: !3547, file: !3507, line: 49, type: !154)
!3551 = !DILocalVariable(name: "flags", arg: 3, scope: !3547, file: !3507, line: 49, type: !155)
!3552 = !DILocation(line: 0, scope: !3547)
!3553 = !DILocation(line: 59, column: 2, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3547, file: !3507, line: 59, column: 2)
!3555 = !{i64 2155044919}
!3556 = !DILocation(line: 60, column: 9, scope: !3547)
!3557 = !DILocation(line: 60, column: 2, scope: !3547)
!3558 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !102, file: !102, line: 667, type: !125, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3559)
!3559 = !{!3560, !3561, !3562, !3563, !3564, !3565}
!3560 = !DILocalVariable(name: "port", arg: 1, scope: !3558, file: !102, line: 667, type: !127)
!3561 = !DILocalVariable(name: "pin", arg: 2, scope: !3558, file: !102, line: 668, type: !154)
!3562 = !DILocalVariable(name: "flags", arg: 3, scope: !3558, file: !102, line: 669, type: !155)
!3563 = !DILocalVariable(name: "api", scope: !3558, file: !102, line: 671, type: !119)
!3564 = !DILocalVariable(name: "cfg", scope: !3558, file: !102, line: 673, type: !3406)
!3565 = !DILocalVariable(name: "data", scope: !3558, file: !102, line: 675, type: !212)
!3566 = !DILocation(line: 0, scope: !3558)
!3567 = !DILocation(line: 672, column: 41, scope: !3558)
!3568 = !DILocation(line: 674, column: 44, scope: !3558)
!3569 = !DILocation(line: 676, column: 36, scope: !3558)
!3570 = !DILocation(line: 678, column: 2, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3572, file: !102, line: 678, column: 2)
!3572 = distinct !DILexicalBlock(scope: !3558, file: !102, line: 678, column: 2)
!3573 = !DILocation(line: 678, column: 2, scope: !3572)
!3574 = !DILocation(line: 678, column: 2, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3571, file: !102, line: 678, column: 2)
!3576 = !DILocation(line: 681, column: 2, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3578, file: !102, line: 681, column: 2)
!3578 = distinct !DILexicalBlock(scope: !3558, file: !102, line: 681, column: 2)
!3579 = !DILocation(line: 681, column: 2, scope: !3578)
!3580 = !DILocation(line: 681, column: 2, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3577, file: !102, line: 681, column: 2)
!3582 = !DILocation(line: 685, column: 2, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3584, file: !102, line: 685, column: 2)
!3584 = distinct !DILexicalBlock(scope: !3558, file: !102, line: 685, column: 2)
!3585 = !DILocation(line: 685, column: 2, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3583, file: !102, line: 685, column: 2)
!3587 = !DILocation(line: 689, column: 2, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3589, file: !102, line: 689, column: 2)
!3589 = distinct !DILexicalBlock(scope: !3558, file: !102, line: 689, column: 2)
!3590 = !DILocation(line: 689, column: 2, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3588, file: !102, line: 689, column: 2)
!3592 = !DILocation(line: 692, column: 2, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3594, file: !102, line: 692, column: 2)
!3594 = distinct !DILexicalBlock(scope: !3558, file: !102, line: 692, column: 2)
!3595 = !DILocation(line: 692, column: 2, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3593, file: !102, line: 692, column: 2)
!3597 = !DILocation(line: 696, column: 2, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3599, file: !102, line: 696, column: 2)
!3599 = distinct !DILexicalBlock(scope: !3558, file: !102, line: 696, column: 2)
!3600 = !DILocation(line: 696, column: 2, scope: !3599)
!3601 = !DILocation(line: 696, column: 2, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3598, file: !102, line: 696, column: 2)
!3603 = !DILocation(line: 701, column: 6, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3558, file: !102, line: 700, column: 6)
!3605 = !DILocation(line: 708, column: 2, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3607, file: !102, line: 708, column: 2)
!3607 = distinct !DILexicalBlock(scope: !3558, file: !102, line: 708, column: 2)
!3608 = !DILocation(line: 708, column: 2, scope: !3607)
!3609 = !DILocation(line: 708, column: 2, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3606, file: !102, line: 708, column: 2)
!3611 = !DILocation(line: 711, column: 13, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3558, file: !102, line: 711, column: 6)
!3613 = !DILocation(line: 711, column: 32, scope: !3612)
!3614 = !DILocation(line: 711, column: 6, scope: !3558)
!3615 = !DILocation(line: 712, column: 9, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3612, file: !102, line: 711, column: 38)
!3617 = !DILocation(line: 712, column: 16, scope: !3616)
!3618 = !DILocation(line: 713, column: 2, scope: !3616)
!3619 = !DILocation(line: 714, column: 19, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3612, file: !102, line: 713, column: 9)
!3621 = !DILocation(line: 714, column: 9, scope: !3620)
!3622 = !DILocation(line: 714, column: 16, scope: !3620)
!3623 = !DILocation(line: 706, column: 8, scope: !3558)
!3624 = !DILocation(line: 717, column: 14, scope: !3558)
!3625 = !DILocation(line: 717, column: 9, scope: !3558)
!3626 = !DILocation(line: 717, column: 2, scope: !3558)
!3627 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !130, file: !130, line: 730, type: !3374, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3628)
!3628 = !{!3629}
!3629 = !DILocalVariable(name: "dev", arg: 1, scope: !3627, file: !130, line: 730, type: !127)
!3630 = !DILocation(line: 0, scope: !3627)
!3631 = !DILocation(line: 732, column: 9, scope: !3627)
!3632 = !DILocation(line: 732, column: 2, scope: !3627)
!3633 = distinct !DISubprogram(name: "blink1", scope: !218, file: !218, line: 95, type: !365, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2123)
!3634 = !DILocation(line: 97, column: 2, scope: !3633)
!3635 = !DILocation(line: 98, column: 1, scope: !3633)
!3636 = distinct !DISubprogram(name: "uart_out", scope: !218, file: !218, line: 100, type: !365, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3637)
!3637 = !{!3638, !3641}
!3638 = !DILocalVariable(name: "rx_data", scope: !3639, file: !218, line: 103, type: !3640)
!3639 = distinct !DILexicalBlock(scope: !3636, file: !218, line: 102, column: 12)
!3640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3319, size: 32)
!3641 = !DILocalVariable(name: "ret", scope: !3642, file: !218, line: 103, type: !117)
!3642 = distinct !DILexicalBlock(scope: !3639, file: !218, line: 103, column: 35)
!3643 = !DILocation(line: 102, column: 2, scope: !3636)
!3644 = !DILocation(line: 103, column: 35, scope: !3642)
!3645 = !DILocation(line: 0, scope: !3642)
!3646 = !DILocation(line: 0, scope: !3639)
!3647 = !DILocation(line: 106, column: 19, scope: !3639)
!3648 = !DILocation(line: 106, column: 33, scope: !3639)
!3649 = !DILocation(line: 105, column: 3, scope: !3639)
!3650 = !DILocation(line: 107, column: 3, scope: !3639)
!3651 = distinct !{!3651, !3643, !3652}
!3652 = !DILocation(line: 108, column: 2, scope: !3636)
!3653 = distinct !DISubprogram(name: "k_queue_get", scope: !3467, file: !3467, line: 649, type: !3654, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3657)
!3654 = !DISubroutineType(types: !3655)
!3655 = !{!117, !3656, !3470}
!3656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 32)
!3657 = !{!3658, !3659}
!3658 = !DILocalVariable(name: "queue", arg: 1, scope: !3653, file: !3467, line: 649, type: !3656)
!3659 = !DILocalVariable(name: "timeout", arg: 2, scope: !3653, file: !3467, line: 649, type: !3470)
!3660 = !DILocation(line: 0, scope: !3653)
!3661 = !DILocation(line: 658, column: 2, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3653, file: !3467, line: 658, column: 2)
!3663 = !{i64 2154747995}
!3664 = !DILocation(line: 659, column: 9, scope: !3653)
!3665 = !DILocation(line: 659, column: 2, scope: !3653)
!3666 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !437, file: !437, line: 45, type: !439, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3667)
!3667 = !{!3668}
!3668 = !DILocalVariable(name: "c", arg: 1, scope: !3666, file: !437, line: 45, type: !118)
!3669 = !DILocation(line: 0, scope: !3666)
!3670 = !DILocation(line: 50, column: 2, scope: !3666)
!3671 = distinct !DISubprogram(name: "__printk_hook_install", scope: !437, file: !437, line: 63, type: !3672, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3674)
!3672 = !DISubroutineType(types: !3673)
!3673 = !{null, !438}
!3674 = !{!3675}
!3675 = !DILocalVariable(name: "fn", arg: 1, scope: !3671, file: !437, line: 63, type: !438)
!3676 = !DILocation(line: 0, scope: !3671)
!3677 = !DILocation(line: 65, column: 12, scope: !3671)
!3678 = !DILocation(line: 66, column: 1, scope: !3671)
!3679 = distinct !DISubprogram(name: "__printk_get_hook", scope: !437, file: !437, line: 76, type: !3680, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !2123)
!3680 = !DISubroutineType(types: !3681)
!3681 = !{!117}
!3682 = !DILocation(line: 78, column: 9, scope: !3679)
!3683 = !DILocation(line: 78, column: 2, scope: !3679)
!3684 = distinct !DISubprogram(name: "vprintk", scope: !437, file: !437, line: 113, type: !3685, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3694)
!3685 = !DISubroutineType(types: !3686)
!3686 = !{null, !133, !3687}
!3687 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3688, line: 99, baseType: !3689)
!3688 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3689 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3688, line: 40, baseType: !3690)
!3690 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !437, baseType: !3691)
!3691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3692)
!3692 = !{!3693}
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3691, file: !437, line: 79, baseType: !117, size: 32)
!3694 = !{!3695, !3696, !3697}
!3695 = !DILocalVariable(name: "fmt", arg: 1, scope: !3684, file: !437, line: 113, type: !133)
!3696 = !DILocalVariable(name: "ap", arg: 2, scope: !3684, file: !437, line: 113, type: !3687)
!3697 = !DILocalVariable(name: "ctx", scope: !3698, file: !437, line: 121, type: !3700)
!3698 = distinct !DILexicalBlock(scope: !3699, file: !437, line: 120, column: 27)
!3699 = distinct !DILexicalBlock(scope: !3684, file: !437, line: 120, column: 6)
!3700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !437, line: 81, size: 32, elements: !3701)
!3701 = !{!3702, !3703}
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3700, file: !437, line: 85, baseType: !32, size: 32)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3700, file: !437, line: 86, baseType: !3704, offset: 32)
!3704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, elements: !2568)
!3705 = !DILocation(line: 0, scope: !3684)
!3706 = !DILocation(line: 148, column: 3, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3699, file: !437, line: 138, column: 9)
!3708 = !DILocation(line: 155, column: 1, scope: !3684)
!3709 = distinct !DISubprogram(name: "char_out", scope: !437, file: !437, line: 107, type: !3710, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3712)
!3710 = !DISubroutineType(types: !3711)
!3711 = !{!118, !118, !117}
!3712 = !{!3713, !3714}
!3713 = !DILocalVariable(name: "c", arg: 1, scope: !3709, file: !437, line: 107, type: !118)
!3714 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3709, file: !437, line: 107, type: !117)
!3715 = !DILocation(line: 0, scope: !3709)
!3716 = !DILocation(line: 110, column: 9, scope: !3709)
!3717 = !DILocation(line: 110, column: 2, scope: !3709)
!3718 = distinct !DISubprogram(name: "cbvprintf", scope: !3719, file: !3719, line: 739, type: !3720, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3726)
!3719 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3720 = !DISubroutineType(types: !3721)
!3721 = !{!118, !3722, !117, !133, !3687}
!3722 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3719, line: 297, baseType: !3723)
!3723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3724, size: 32)
!3724 = !DISubroutineType(types: !3725)
!3725 = !{!118, null}
!3726 = !{!3727, !3728, !3729, !3730}
!3727 = !DILocalVariable(name: "out", arg: 1, scope: !3718, file: !3719, line: 739, type: !3722)
!3728 = !DILocalVariable(name: "ctx", arg: 2, scope: !3718, file: !3719, line: 739, type: !117)
!3729 = !DILocalVariable(name: "format", arg: 3, scope: !3718, file: !3719, line: 739, type: !133)
!3730 = !DILocalVariable(name: "ap", arg: 4, scope: !3718, file: !3719, line: 739, type: !3687)
!3731 = !DILocation(line: 0, scope: !3718)
!3732 = !DILocation(line: 741, column: 9, scope: !3718)
!3733 = !DILocation(line: 741, column: 2, scope: !3718)
!3734 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !437, file: !437, line: 157, type: !3735, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3737)
!3735 = !DISubroutineType(types: !3736)
!3736 = !{null, !1259, !315}
!3737 = !{!3738, !3739, !3740}
!3738 = !DILocalVariable(name: "c", arg: 1, scope: !3734, file: !437, line: 157, type: !1259)
!3739 = !DILocalVariable(name: "n", arg: 2, scope: !3734, file: !437, line: 157, type: !315)
!3740 = !DILocalVariable(name: "i", scope: !3734, file: !437, line: 159, type: !315)
!3741 = !DILocation(line: 0, scope: !3734)
!3742 = !DILocation(line: 164, column: 16, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3744, file: !437, line: 164, column: 2)
!3744 = distinct !DILexicalBlock(scope: !3734, file: !437, line: 164, column: 2)
!3745 = !DILocation(line: 164, column: 2, scope: !3744)
!3746 = !DILocation(line: 165, column: 3, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3743, file: !437, line: 164, column: 26)
!3748 = !DILocation(line: 165, column: 13, scope: !3747)
!3749 = !DILocation(line: 164, column: 22, scope: !3743)
!3750 = distinct !{!3750, !3745, !3751}
!3751 = !DILocation(line: 166, column: 2, scope: !3744)
!3752 = !DILocation(line: 171, column: 1, scope: !3734)
!3753 = distinct !DISubprogram(name: "printk", scope: !437, file: !437, line: 203, type: !3754, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3756)
!3754 = !DISubroutineType(types: !3755)
!3755 = !{null, !133, null}
!3756 = !{!3757, !3758}
!3757 = !DILocalVariable(name: "fmt", arg: 1, scope: !3753, file: !437, line: 203, type: !133)
!3758 = !DILocalVariable(name: "ap", scope: !3753, file: !437, line: 205, type: !3687)
!3759 = !DILocation(line: 0, scope: !3753)
!3760 = !DILocation(line: 205, column: 2, scope: !3753)
!3761 = !DILocation(line: 205, column: 10, scope: !3753)
!3762 = !DILocation(line: 207, column: 2, scope: !3753)
!3763 = !DILocation(line: 209, column: 2, scope: !3753)
!3764 = !DILocation(line: 211, column: 2, scope: !3753)
!3765 = !DILocation(line: 212, column: 1, scope: !3753)
!3766 = distinct !DISubprogram(name: "snprintk", scope: !437, file: !437, line: 239, type: !3767, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3769)
!3767 = !DISubroutineType(types: !3768)
!3768 = !{!118, !1259, !315, !133, null}
!3769 = !{!3770, !3771, !3772, !3773, !3774}
!3770 = !DILocalVariable(name: "str", arg: 1, scope: !3766, file: !437, line: 239, type: !1259)
!3771 = !DILocalVariable(name: "size", arg: 2, scope: !3766, file: !437, line: 239, type: !315)
!3772 = !DILocalVariable(name: "fmt", arg: 3, scope: !3766, file: !437, line: 239, type: !133)
!3773 = !DILocalVariable(name: "ap", scope: !3766, file: !437, line: 241, type: !3687)
!3774 = !DILocalVariable(name: "ret", scope: !3766, file: !437, line: 242, type: !118)
!3775 = !DILocation(line: 0, scope: !3766)
!3776 = !DILocation(line: 241, column: 2, scope: !3766)
!3777 = !DILocation(line: 241, column: 10, scope: !3766)
!3778 = !DILocation(line: 244, column: 2, scope: !3766)
!3779 = !DILocation(line: 245, column: 8, scope: !3766)
!3780 = !DILocation(line: 246, column: 2, scope: !3766)
!3781 = !DILocation(line: 249, column: 1, scope: !3766)
!3782 = !DILocation(line: 248, column: 2, scope: !3766)
!3783 = distinct !DISubprogram(name: "vsnprintk", scope: !437, file: !437, line: 251, type: !3784, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3786)
!3784 = !DISubroutineType(types: !3785)
!3785 = !{!118, !1259, !315, !133, !3687}
!3786 = !{!3787, !3788, !3789, !3790, !3791}
!3787 = !DILocalVariable(name: "str", arg: 1, scope: !3783, file: !437, line: 251, type: !1259)
!3788 = !DILocalVariable(name: "size", arg: 2, scope: !3783, file: !437, line: 251, type: !315)
!3789 = !DILocalVariable(name: "fmt", arg: 3, scope: !3783, file: !437, line: 251, type: !133)
!3790 = !DILocalVariable(name: "ap", arg: 4, scope: !3783, file: !437, line: 251, type: !3687)
!3791 = !DILocalVariable(name: "ctx", scope: !3783, file: !437, line: 253, type: !3792)
!3792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !437, line: 217, size: 96, elements: !3793)
!3793 = !{!3794, !3795, !3796}
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3792, file: !437, line: 218, baseType: !1259, size: 32)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3792, file: !437, line: 219, baseType: !118, size: 32, offset: 32)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3792, file: !437, line: 220, baseType: !118, size: 32, offset: 64)
!3797 = !DILocation(line: 0, scope: !3783)
!3798 = !DILocation(line: 253, column: 2, scope: !3783)
!3799 = !DILocation(line: 253, column: 21, scope: !3783)
!3800 = !DILocation(line: 253, column: 27, scope: !3783)
!3801 = !DILocation(line: 255, column: 2, scope: !3783)
!3802 = !DILocation(line: 257, column: 10, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3783, file: !437, line: 257, column: 6)
!3804 = !DILocation(line: 257, column: 22, scope: !3803)
!3805 = !DILocation(line: 257, column: 16, scope: !3803)
!3806 = !DILocation(line: 257, column: 6, scope: !3783)
!3807 = !DILocation(line: 258, column: 3, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3803, file: !437, line: 257, column: 27)
!3809 = !DILocation(line: 258, column: 18, scope: !3808)
!3810 = !DILocation(line: 259, column: 2, scope: !3808)
!3811 = !DILocation(line: 262, column: 1, scope: !3783)
!3812 = !DILocation(line: 261, column: 2, scope: !3783)
!3813 = distinct !DISubprogram(name: "str_out", scope: !437, file: !437, line: 223, type: !3814, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3817)
!3814 = !DISubroutineType(types: !3815)
!3815 = !{!118, !118, !3816}
!3816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3792, size: 32)
!3817 = !{!3818, !3819}
!3818 = !DILocalVariable(name: "c", arg: 1, scope: !3813, file: !437, line: 223, type: !118)
!3819 = !DILocalVariable(name: "ctx", arg: 2, scope: !3813, file: !437, line: 223, type: !3816)
!3820 = !DILocation(line: 0, scope: !3813)
!3821 = !DILocation(line: 225, column: 11, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3813, file: !437, line: 225, column: 6)
!3823 = !DILocation(line: 225, column: 15, scope: !3822)
!3824 = !DILocation(line: 0, scope: !3822)
!3825 = !DILocation(line: 225, column: 23, scope: !3822)
!3826 = !DILocation(line: 225, column: 45, scope: !3822)
!3827 = !DILocation(line: 225, column: 37, scope: !3822)
!3828 = !DILocation(line: 225, column: 6, scope: !3813)
!3829 = !DILocation(line: 226, column: 8, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3822, file: !437, line: 225, column: 50)
!3831 = !DILocation(line: 226, column: 13, scope: !3830)
!3832 = !DILocation(line: 227, column: 3, scope: !3830)
!3833 = !DILocation(line: 230, column: 29, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3813, file: !437, line: 230, column: 6)
!3835 = !DILocation(line: 230, column: 17, scope: !3834)
!3836 = !DILocation(line: 230, column: 6, scope: !3813)
!3837 = !DILocation(line: 231, column: 22, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3834, file: !437, line: 230, column: 34)
!3839 = !DILocation(line: 231, column: 3, scope: !3838)
!3840 = !DILocation(line: 231, column: 26, scope: !3838)
!3841 = !DILocation(line: 232, column: 2, scope: !3838)
!3842 = !DILocation(line: 233, column: 28, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3834, file: !437, line: 232, column: 9)
!3844 = !DILocation(line: 233, column: 22, scope: !3843)
!3845 = !DILocation(line: 233, column: 3, scope: !3843)
!3846 = !DILocation(line: 233, column: 26, scope: !3843)
!3847 = !DILocation(line: 237, column: 1, scope: !3813)
!3848 = distinct !DISubprogram(name: "z_thread_entry", scope: !3849, file: !3849, line: 30, type: !3850, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !3852)
!3849 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3850 = !DISubroutineType(types: !3851)
!3851 = !{null, !352, !117, !117, !117}
!3852 = !{!3853, !3854, !3855, !3856}
!3853 = !DILocalVariable(name: "entry", arg: 1, scope: !3848, file: !3849, line: 30, type: !352)
!3854 = !DILocalVariable(name: "p1", arg: 2, scope: !3848, file: !3849, line: 31, type: !117)
!3855 = !DILocalVariable(name: "p2", arg: 3, scope: !3848, file: !3849, line: 31, type: !117)
!3856 = !DILocalVariable(name: "p3", arg: 4, scope: !3848, file: !3849, line: 31, type: !117)
!3857 = !DILocation(line: 0, scope: !3848)
!3858 = !DILocation(line: 36, column: 2, scope: !3848)
!3859 = !DILocation(line: 38, column: 17, scope: !3848)
!3860 = !DILocation(line: 38, column: 2, scope: !3848)
!3861 = !DILocation(line: 45, column: 2, scope: !3848)
!3862 = distinct !DISubprogram(name: "k_current_get", scope: !220, file: !220, line: 530, type: !3863, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !2123)
!3863 = !DISubroutineType(types: !3864)
!3864 = !{!3865}
!3865 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !3866)
!3866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3867, size: 32)
!3867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !3868)
!3868 = !{!3869, !3927, !3939, !3940, !3941, !3942, !3948, !3963}
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3867, file: !225, line: 247, baseType: !3870, size: 384)
!3870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !3871)
!3871 = !{!3872, !3896, !3903, !3904, !3905, !3914, !3915, !3916}
!3872 = !DIDerivedType(tag: DW_TAG_member, scope: !3870, file: !225, line: 60, baseType: !3873, size: 64)
!3873 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3870, file: !225, line: 60, size: 64, elements: !3874)
!3874 = !{!3875, !3890}
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3873, file: !225, line: 61, baseType: !3876, size: 64)
!3876 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !3877)
!3877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !3878)
!3878 = !{!3879, !3885}
!3879 = !DIDerivedType(tag: DW_TAG_member, scope: !3877, file: !235, line: 38, baseType: !3880, size: 32)
!3880 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3877, file: !235, line: 38, size: 32, elements: !3881)
!3881 = !{!3882, !3884}
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3880, file: !235, line: 39, baseType: !3883, size: 32)
!3883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3877, size: 32)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3880, file: !235, line: 40, baseType: !3883, size: 32)
!3885 = !DIDerivedType(tag: DW_TAG_member, scope: !3877, file: !235, line: 42, baseType: !3886, size: 32, offset: 32)
!3886 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3877, file: !235, line: 42, size: 32, elements: !3887)
!3887 = !{!3888, !3889}
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3886, file: !235, line: 43, baseType: !3883, size: 32)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3886, file: !235, line: 44, baseType: !3883, size: 32)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3873, file: !225, line: 62, baseType: !3891, size: 64)
!3891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !3892)
!3892 = !{!3893}
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3891, file: !251, line: 50, baseType: !3894, size: 64)
!3894 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3895, size: 64, elements: !256)
!3895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3891, size: 32)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3870, file: !225, line: 68, baseType: !3897, size: 32, offset: 64)
!3897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3898, size: 32)
!3898 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !3899)
!3899 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !3900)
!3900 = !{!3901}
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3899, file: !261, line: 232, baseType: !3902, size: 64)
!3902 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !3877)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3870, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3870, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!3905 = !DIDerivedType(tag: DW_TAG_member, scope: !3870, file: !225, line: 90, baseType: !3906, size: 16, offset: 112)
!3906 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3870, file: !225, line: 90, size: 16, elements: !3907)
!3907 = !{!3908, !3913}
!3908 = !DIDerivedType(tag: DW_TAG_member, scope: !3906, file: !225, line: 91, baseType: !3909, size: 16)
!3909 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3906, file: !225, line: 91, size: 16, elements: !3910)
!3910 = !{!3911, !3912}
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3909, file: !225, line: 96, baseType: !275, size: 8)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3909, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3906, file: !225, line: 100, baseType: !279, size: 16)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3870, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3870, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3870, file: !225, line: 131, baseType: !3917, size: 192, offset: 192)
!3917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !3918)
!3918 = !{!3919, !3920, !3926}
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3917, file: !261, line: 245, baseType: !3876, size: 64)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3917, file: !261, line: 246, baseType: !3921, size: 32, offset: 64)
!3921 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !3922)
!3922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3923, size: 32)
!3923 = !DISubroutineType(types: !3924)
!3924 = !{null, !3925}
!3925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3917, size: 32)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3917, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3867, file: !225, line: 250, baseType: !3928, size: 288, offset: 384)
!3928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !3929)
!3929 = !{!3930, !3931, !3932, !3933, !3934, !3935, !3936, !3937, !3938}
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3928, file: !296, line: 26, baseType: !156, size: 32)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3928, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3928, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3928, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3928, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3928, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3928, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3928, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3928, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3867, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3867, file: !225, line: 256, baseType: !3898, size: 64, offset: 704)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3867, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3867, file: !225, line: 300, baseType: !3943, size: 96, offset: 800)
!3943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !3944)
!3944 = !{!3945, !3946, !3947}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3943, file: !225, line: 153, baseType: !22, size: 32)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3943, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3943, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3867, file: !225, line: 325, baseType: !3949, size: 32, offset: 896)
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3950, size: 32)
!3950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !3951)
!3951 = !{!3952, !3958, !3959}
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3950, file: !220, line: 5074, baseType: !3953, size: 96)
!3953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !3954)
!3954 = !{!3955, !3956, !3957}
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3953, file: !324, line: 57, baseType: !327, size: 32)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3953, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3953, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3950, file: !220, line: 5075, baseType: !3898, size: 64, offset: 96)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3950, file: !220, line: 5076, baseType: !3960, size: 32, offset: 160)
!3960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !3961)
!3961 = !{!3962}
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3960, file: !334, line: 52, baseType: !22, size: 32)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3867, file: !225, line: 343, baseType: !3964, size: 64, offset: 928)
!3964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !3965)
!3965 = !{!3966, !3967}
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3964, file: !296, line: 63, baseType: !156, size: 32)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3964, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!3968 = !DILocation(line: 535, column: 9, scope: !3862)
!3969 = !DILocation(line: 535, column: 2, scope: !3862)
!3970 = distinct !DISubprogram(name: "k_thread_abort", scope: !3467, file: !3467, line: 188, type: !3971, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !3973)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{null, !3865}
!3973 = !{!3974}
!3974 = !DILocalVariable(name: "thread", arg: 1, scope: !3970, file: !3467, line: 188, type: !3865)
!3975 = !DILocation(line: 0, scope: !3970)
!3976 = !DILocation(line: 197, column: 2, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3970, file: !3467, line: 197, column: 2)
!3978 = !{i64 2154744852}
!3979 = !DILocation(line: 198, column: 2, scope: !3970)
!3980 = !DILocation(line: 199, column: 1, scope: !3970)
!3981 = distinct !DISubprogram(name: "z_current_get", scope: !3467, file: !3467, line: 173, type: !3863, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !2123)
!3982 = !DILocation(line: 180, column: 2, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3981, file: !3467, line: 180, column: 2)
!3984 = !{i64 2154744784}
!3985 = !DILocation(line: 181, column: 9, scope: !3981)
!3986 = !DILocation(line: 181, column: 2, scope: !3981)
!3987 = distinct !DISubprogram(name: "sys_heap_free", scope: !3988, file: !3988, line: 163, type: !3989, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !3997)
!3988 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3989 = !DISubroutineType(types: !3990)
!3990 = !{null, !3991, !117}
!3991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3992, size: 32)
!3992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !3993)
!3993 = !{!3994, !3995, !3996}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3992, file: !324, line: 57, baseType: !2555, size: 32)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3992, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3992, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!3997 = !{!3998, !3999, !4000, !4001}
!3998 = !DILocalVariable(name: "heap", arg: 1, scope: !3987, file: !3988, line: 163, type: !3991)
!3999 = !DILocalVariable(name: "mem", arg: 2, scope: !3987, file: !3988, line: 163, type: !117)
!4000 = !DILocalVariable(name: "h", scope: !3987, file: !3988, line: 168, type: !2555)
!4001 = !DILocalVariable(name: "c", scope: !3987, file: !3988, line: 169, type: !2560)
!4002 = !DILocation(line: 0, scope: !3987)
!4003 = !DILocation(line: 165, column: 10, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3987, file: !3988, line: 165, column: 6)
!4005 = !DILocation(line: 165, column: 6, scope: !3987)
!4006 = !DILocation(line: 168, column: 27, scope: !3987)
!4007 = !DILocation(line: 169, column: 16, scope: !3987)
!4008 = !{i32 0, i32 536870912}
!4009 = !DILocation(line: 175, column: 2, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !4011, file: !3988, line: 175, column: 2)
!4011 = distinct !DILexicalBlock(scope: !3987, file: !3988, line: 175, column: 2)
!4012 = !DILocation(line: 175, column: 2, scope: !4011)
!4013 = !DILocation(line: 175, column: 2, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4010, file: !3988, line: 175, column: 2)
!4015 = !DILocation(line: 183, column: 2, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4017, file: !3988, line: 183, column: 2)
!4017 = distinct !DILexicalBlock(scope: !3987, file: !3988, line: 183, column: 2)
!4018 = !DILocation(line: 183, column: 2, scope: !4017)
!4019 = !DILocation(line: 183, column: 2, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !4016, file: !3988, line: 183, column: 2)
!4021 = !DILocation(line: 187, column: 2, scope: !3987)
!4022 = !DILocation(line: 197, column: 2, scope: !3987)
!4023 = !DILocation(line: 198, column: 1, scope: !3987)
!4024 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3988, file: !3988, line: 157, type: !4025, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4027)
!4025 = !DISubroutineType(types: !4026)
!4026 = !{!2560, !2555, !117}
!4027 = !{!4028, !4029, !4030, !4031}
!4028 = !DILocalVariable(name: "h", arg: 1, scope: !4024, file: !3988, line: 157, type: !2555)
!4029 = !DILocalVariable(name: "p", arg: 2, scope: !4024, file: !3988, line: 157, type: !117)
!4030 = !DILocalVariable(name: "mem", scope: !4024, file: !3988, line: 159, type: !1955)
!4031 = !DILocalVariable(name: "base", scope: !4024, file: !3988, line: 159, type: !1955)
!4032 = !DILocation(line: 0, scope: !4024)
!4033 = !DILocation(line: 159, column: 39, scope: !4024)
!4034 = !DILocation(line: 160, column: 14, scope: !4024)
!4035 = !DILocation(line: 160, column: 38, scope: !4024)
!4036 = !DILocation(line: 160, column: 46, scope: !4024)
!4037 = !DILocation(line: 160, column: 2, scope: !4024)
!4038 = distinct !DISubprogram(name: "chunk_used", scope: !2542, file: !2542, line: 137, type: !4039, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4041)
!4039 = !DISubroutineType(types: !4040)
!4040 = !{!146, !2555, !2560}
!4041 = !{!4042, !4043}
!4042 = !DILocalVariable(name: "h", arg: 1, scope: !4038, file: !2542, line: 137, type: !2555)
!4043 = !DILocalVariable(name: "c", arg: 2, scope: !4038, file: !2542, line: 137, type: !2560)
!4044 = !DILocation(line: 0, scope: !4038)
!4045 = !DILocation(line: 139, column: 9, scope: !4038)
!4046 = !DILocation(line: 139, column: 42, scope: !4038)
!4047 = !DILocation(line: 139, column: 2, scope: !4038)
!4048 = distinct !DISubprogram(name: "right_chunk", scope: !2542, file: !2542, line: 204, type: !4049, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4051)
!4049 = !DISubroutineType(types: !4050)
!4050 = !{!2560, !2555, !2560}
!4051 = !{!4052, !4053}
!4052 = !DILocalVariable(name: "h", arg: 1, scope: !4048, file: !2542, line: 204, type: !2555)
!4053 = !DILocalVariable(name: "c", arg: 2, scope: !4048, file: !2542, line: 204, type: !2560)
!4054 = !DILocation(line: 0, scope: !4048)
!4055 = !DILocation(line: 206, column: 13, scope: !4048)
!4056 = !DILocation(line: 206, column: 11, scope: !4048)
!4057 = !DILocation(line: 206, column: 2, scope: !4048)
!4058 = distinct !DISubprogram(name: "left_chunk", scope: !2542, file: !2542, line: 199, type: !4049, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4059)
!4059 = !{!4060, !4061}
!4060 = !DILocalVariable(name: "h", arg: 1, scope: !4058, file: !2542, line: 199, type: !2555)
!4061 = !DILocalVariable(name: "c", arg: 2, scope: !4058, file: !2542, line: 199, type: !2560)
!4062 = !DILocation(line: 0, scope: !4058)
!4063 = !DILocation(line: 201, column: 13, scope: !4058)
!4064 = !DILocation(line: 201, column: 11, scope: !4058)
!4065 = !DILocation(line: 201, column: 2, scope: !4058)
!4066 = distinct !DISubprogram(name: "set_chunk_used", scope: !2542, file: !2542, line: 147, type: !4067, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4069)
!4067 = !DISubroutineType(types: !4068)
!4068 = !{null, !2555, !2560, !146}
!4069 = !{!4070, !4071, !4072, !4073, !4074}
!4070 = !DILocalVariable(name: "h", arg: 1, scope: !4066, file: !2542, line: 147, type: !2555)
!4071 = !DILocalVariable(name: "c", arg: 2, scope: !4066, file: !2542, line: 147, type: !2560)
!4072 = !DILocalVariable(name: "used", arg: 3, scope: !4066, file: !2542, line: 147, type: !146)
!4073 = !DILocalVariable(name: "buf", scope: !4066, file: !2542, line: 149, type: !2549)
!4074 = !DILocalVariable(name: "cmem", scope: !4066, file: !2542, line: 150, type: !117)
!4075 = !DILocation(line: 0, scope: !4066)
!4076 = !DILocation(line: 149, column: 22, scope: !4066)
!4077 = !DILocation(line: 0, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4079, file: !2542, line: 159, column: 7)
!4079 = distinct !DILexicalBlock(scope: !4080, file: !2542, line: 158, column: 9)
!4080 = distinct !DILexicalBlock(scope: !4066, file: !2542, line: 152, column: 6)
!4081 = !DILocation(line: 159, column: 7, scope: !4079)
!4082 = !DILocation(line: 165, column: 1, scope: !4066)
!4083 = distinct !DISubprogram(name: "free_chunk", scope: !3988, file: !3988, line: 133, type: !4084, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4086)
!4084 = !DISubroutineType(types: !4085)
!4085 = !{null, !2555, !2560}
!4086 = !{!4087, !4088}
!4087 = !DILocalVariable(name: "h", arg: 1, scope: !4083, file: !3988, line: 133, type: !2555)
!4088 = !DILocalVariable(name: "c", arg: 2, scope: !4083, file: !3988, line: 133, type: !2560)
!4089 = !DILocation(line: 0, scope: !4083)
!4090 = !DILocation(line: 136, column: 21, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4083, file: !3988, line: 136, column: 6)
!4092 = !DILocation(line: 136, column: 7, scope: !4091)
!4093 = !DILocation(line: 136, column: 6, scope: !4083)
!4094 = !DILocation(line: 137, column: 3, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4091, file: !3988, line: 136, column: 41)
!4096 = !DILocation(line: 138, column: 22, scope: !4095)
!4097 = !DILocation(line: 138, column: 3, scope: !4095)
!4098 = !DILocation(line: 139, column: 2, scope: !4095)
!4099 = !DILocation(line: 142, column: 21, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4083, file: !3988, line: 142, column: 6)
!4101 = !DILocation(line: 142, column: 7, scope: !4100)
!4102 = !DILocation(line: 142, column: 6, scope: !4083)
!4103 = !DILocation(line: 143, column: 3, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4100, file: !3988, line: 142, column: 40)
!4105 = !DILocation(line: 144, column: 19, scope: !4104)
!4106 = !DILocation(line: 144, column: 3, scope: !4104)
!4107 = !DILocation(line: 145, column: 7, scope: !4104)
!4108 = !DILocation(line: 146, column: 2, scope: !4104)
!4109 = !DILocation(line: 148, column: 2, scope: !4083)
!4110 = !DILocation(line: 149, column: 1, scope: !4083)
!4111 = distinct !DISubprogram(name: "free_list_remove", scope: !3988, file: !3988, line: 60, type: !4084, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4112)
!4112 = !{!4113, !4114, !4115}
!4113 = !DILocalVariable(name: "h", arg: 1, scope: !4111, file: !3988, line: 60, type: !2555)
!4114 = !DILocalVariable(name: "c", arg: 2, scope: !4111, file: !3988, line: 60, type: !2560)
!4115 = !DILocalVariable(name: "bidx", scope: !4116, file: !3988, line: 63, type: !118)
!4116 = distinct !DILexicalBlock(scope: !4117, file: !3988, line: 62, column: 31)
!4117 = distinct !DILexicalBlock(scope: !4111, file: !3988, line: 62, column: 6)
!4118 = !DILocation(line: 0, scope: !4111)
!4119 = !DILocation(line: 63, column: 28, scope: !4116)
!4120 = !{i32 0, i32 32768}
!4121 = !DILocation(line: 63, column: 14, scope: !4116)
!4122 = !DILocation(line: 0, scope: !4116)
!4123 = !DILocation(line: 64, column: 3, scope: !4116)
!4124 = !DILocation(line: 66, column: 1, scope: !4111)
!4125 = distinct !DISubprogram(name: "merge_chunks", scope: !3988, file: !3988, line: 125, type: !4126, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4128)
!4126 = !DISubroutineType(types: !4127)
!4127 = !{null, !2555, !2560, !2560}
!4128 = !{!4129, !4130, !4131, !4132}
!4129 = !DILocalVariable(name: "h", arg: 1, scope: !4125, file: !3988, line: 125, type: !2555)
!4130 = !DILocalVariable(name: "lc", arg: 2, scope: !4125, file: !3988, line: 125, type: !2560)
!4131 = !DILocalVariable(name: "rc", arg: 3, scope: !4125, file: !3988, line: 125, type: !2560)
!4132 = !DILocalVariable(name: "newsz", scope: !4125, file: !3988, line: 127, type: !4133)
!4133 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2542, line: 62, baseType: !156)
!4134 = !DILocation(line: 0, scope: !4125)
!4135 = !DILocation(line: 127, column: 20, scope: !4125)
!4136 = !DILocation(line: 127, column: 40, scope: !4125)
!4137 = !DILocation(line: 127, column: 38, scope: !4125)
!4138 = !DILocation(line: 129, column: 2, scope: !4125)
!4139 = !DILocation(line: 130, column: 25, scope: !4125)
!4140 = !DILocation(line: 130, column: 2, scope: !4125)
!4141 = !DILocation(line: 131, column: 1, scope: !4125)
!4142 = distinct !DISubprogram(name: "free_list_add", scope: !3988, file: !3988, line: 98, type: !4084, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4143)
!4143 = !{!4144, !4145, !4146}
!4144 = !DILocalVariable(name: "h", arg: 1, scope: !4142, file: !3988, line: 98, type: !2555)
!4145 = !DILocalVariable(name: "c", arg: 2, scope: !4142, file: !3988, line: 98, type: !2560)
!4146 = !DILocalVariable(name: "bidx", scope: !4147, file: !3988, line: 101, type: !118)
!4147 = distinct !DILexicalBlock(scope: !4148, file: !3988, line: 100, column: 31)
!4148 = distinct !DILexicalBlock(scope: !4142, file: !3988, line: 100, column: 6)
!4149 = !DILocation(line: 0, scope: !4142)
!4150 = !DILocation(line: 101, column: 28, scope: !4147)
!4151 = !DILocation(line: 101, column: 14, scope: !4147)
!4152 = !DILocation(line: 0, scope: !4147)
!4153 = !DILocation(line: 102, column: 3, scope: !4147)
!4154 = !DILocation(line: 104, column: 1, scope: !4142)
!4155 = distinct !DISubprogram(name: "chunk_size", scope: !2542, file: !2542, line: 142, type: !4156, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4158)
!4156 = !DISubroutineType(types: !4157)
!4157 = !{!4133, !2555, !2560}
!4158 = !{!4159, !4160}
!4159 = !DILocalVariable(name: "h", arg: 1, scope: !4155, file: !2542, line: 142, type: !2555)
!4160 = !DILocalVariable(name: "c", arg: 2, scope: !4155, file: !2542, line: 142, type: !2560)
!4161 = !DILocation(line: 0, scope: !4155)
!4162 = !DILocation(line: 144, column: 9, scope: !4155)
!4163 = !DILocation(line: 144, column: 42, scope: !4155)
!4164 = !DILocation(line: 144, column: 2, scope: !4155)
!4165 = distinct !DISubprogram(name: "bucket_idx", scope: !2542, file: !2542, line: 250, type: !4166, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4168)
!4166 = !DISubroutineType(types: !4167)
!4167 = !{!118, !2555, !4133}
!4168 = !{!4169, !4170, !4171}
!4169 = !DILocalVariable(name: "h", arg: 1, scope: !4165, file: !2542, line: 250, type: !2555)
!4170 = !DILocalVariable(name: "sz", arg: 2, scope: !4165, file: !2542, line: 250, type: !4133)
!4171 = !DILocalVariable(name: "usable_sz", scope: !4165, file: !2542, line: 252, type: !32)
!4172 = !DILocation(line: 0, scope: !4165)
!4173 = !DILocation(line: 252, column: 32, scope: !4165)
!4174 = !DILocation(line: 252, column: 30, scope: !4165)
!4175 = !DILocation(line: 252, column: 50, scope: !4165)
!4176 = !DILocation(line: 253, column: 14, scope: !4165)
!4177 = !{i32 0, i32 33}
!4178 = !DILocation(line: 253, column: 12, scope: !4165)
!4179 = !DILocation(line: 253, column: 2, scope: !4165)
!4180 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3988, file: !3988, line: 68, type: !4181, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4183)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{null, !2555, !2560, !118}
!4183 = !{!4184, !4185, !4186, !4187, !4189, !4192}
!4184 = !DILocalVariable(name: "h", arg: 1, scope: !4180, file: !3988, line: 68, type: !2555)
!4185 = !DILocalVariable(name: "c", arg: 2, scope: !4180, file: !3988, line: 68, type: !2560)
!4186 = !DILocalVariable(name: "bidx", arg: 3, scope: !4180, file: !3988, line: 68, type: !118)
!4187 = !DILocalVariable(name: "b", scope: !4180, file: !3988, line: 70, type: !4188)
!4188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2565, size: 32)
!4189 = !DILocalVariable(name: "second", scope: !4190, file: !3988, line: 84, type: !2560)
!4190 = distinct !DILexicalBlock(scope: !4191, file: !3988, line: 80, column: 9)
!4191 = distinct !DILexicalBlock(scope: !4180, file: !3988, line: 72, column: 6)
!4192 = !DILocalVariable(name: "first", scope: !4190, file: !3988, line: 85, type: !2560)
!4193 = !DILocation(line: 0, scope: !4180)
!4194 = !DILocation(line: 72, column: 9, scope: !4191)
!4195 = !DILocation(line: 72, column: 14, scope: !4191)
!4196 = !DILocation(line: 72, column: 6, scope: !4180)
!4197 = !DILocation(line: 76, column: 23, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4191, file: !3988, line: 72, column: 21)
!4199 = !DILocation(line: 76, column: 6, scope: !4198)
!4200 = !DILocation(line: 76, column: 20, scope: !4198)
!4201 = !DILocation(line: 77, column: 11, scope: !4198)
!4202 = !DILocation(line: 78, column: 3, scope: !4198)
!4203 = !DILocation(line: 79, column: 3, scope: !4198)
!4204 = !DILocation(line: 80, column: 2, scope: !4198)
!4205 = !DILocation(line: 0, scope: !4190)
!4206 = !DILocation(line: 85, column: 21, scope: !4190)
!4207 = !{i32 0, i32 65536}
!4208 = !DILocation(line: 87, column: 3, scope: !4190)
!4209 = !DILocation(line: 88, column: 3, scope: !4190)
!4210 = !DILocation(line: 89, column: 3, scope: !4190)
!4211 = !DILocation(line: 90, column: 3, scope: !4190)
!4212 = !DILocation(line: 96, column: 1, scope: !4180)
!4213 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2542, file: !2542, line: 187, type: !4126, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4214)
!4214 = !{!4215, !4216, !4217}
!4215 = !DILocalVariable(name: "h", arg: 1, scope: !4213, file: !2542, line: 187, type: !2555)
!4216 = !DILocalVariable(name: "c", arg: 2, scope: !4213, file: !2542, line: 187, type: !2560)
!4217 = !DILocalVariable(name: "prev", arg: 3, scope: !4213, file: !2542, line: 188, type: !2560)
!4218 = !DILocation(line: 0, scope: !4213)
!4219 = !DILocation(line: 190, column: 2, scope: !4213)
!4220 = !DILocation(line: 191, column: 1, scope: !4213)
!4221 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2542, file: !2542, line: 193, type: !4126, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4222)
!4222 = !{!4223, !4224, !4225}
!4223 = !DILocalVariable(name: "h", arg: 1, scope: !4221, file: !2542, line: 193, type: !2555)
!4224 = !DILocalVariable(name: "c", arg: 2, scope: !4221, file: !2542, line: 193, type: !2560)
!4225 = !DILocalVariable(name: "next", arg: 3, scope: !4221, file: !2542, line: 194, type: !2560)
!4226 = !DILocation(line: 0, scope: !4221)
!4227 = !DILocation(line: 196, column: 2, scope: !4221)
!4228 = !DILocation(line: 197, column: 1, scope: !4221)
!4229 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2542, file: !2542, line: 177, type: !4049, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4230)
!4230 = !{!4231, !4232}
!4231 = !DILocalVariable(name: "h", arg: 1, scope: !4229, file: !2542, line: 177, type: !2555)
!4232 = !DILocalVariable(name: "c", arg: 2, scope: !4229, file: !2542, line: 177, type: !2560)
!4233 = !DILocation(line: 0, scope: !4229)
!4234 = !DILocation(line: 179, column: 9, scope: !4229)
!4235 = !DILocation(line: 179, column: 2, scope: !4229)
!4236 = distinct !DISubprogram(name: "chunk_field", scope: !2542, file: !2542, line: 107, type: !4237, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4239)
!4237 = !DISubroutineType(types: !4238)
!4238 = !{!2560, !2555, !2560, !2541}
!4239 = !{!4240, !4241, !4242, !4243, !4244}
!4240 = !DILocalVariable(name: "h", arg: 1, scope: !4236, file: !2542, line: 107, type: !2555)
!4241 = !DILocalVariable(name: "c", arg: 2, scope: !4236, file: !2542, line: 107, type: !2560)
!4242 = !DILocalVariable(name: "f", arg: 3, scope: !4236, file: !2542, line: 108, type: !2541)
!4243 = !DILocalVariable(name: "buf", scope: !4236, file: !2542, line: 110, type: !2549)
!4244 = !DILocalVariable(name: "cmem", scope: !4236, file: !2542, line: 111, type: !117)
!4245 = !DILocation(line: 0, scope: !4236)
!4246 = !DILocation(line: 110, column: 22, scope: !4236)
!4247 = !DILocation(line: 111, column: 15, scope: !4236)
!4248 = !DILocation(line: 116, column: 11, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4250, file: !2542, line: 115, column: 9)
!4250 = distinct !DILexicalBlock(scope: !4236, file: !2542, line: 113, column: 6)
!4251 = !DILocation(line: 116, column: 10, scope: !4249)
!4252 = !DILocation(line: 118, column: 1, scope: !4236)
!4253 = distinct !DISubprogram(name: "chunk_buf", scope: !2542, file: !2542, line: 101, type: !4254, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4256)
!4254 = !DISubroutineType(types: !4255)
!4255 = !{!2549, !2555}
!4256 = !{!4257}
!4257 = !DILocalVariable(name: "h", arg: 1, scope: !4253, file: !2542, line: 101, type: !2555)
!4258 = !DILocation(line: 0, scope: !4253)
!4259 = !DILocation(line: 104, column: 9, scope: !4253)
!4260 = !DILocation(line: 104, column: 2, scope: !4253)
!4261 = distinct !DISubprogram(name: "chunk_set", scope: !2542, file: !2542, line: 120, type: !4262, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4264)
!4262 = !DISubroutineType(types: !4263)
!4263 = !{null, !2555, !2560, !2541, !2560}
!4264 = !{!4265, !4266, !4267, !4268, !4269, !4270}
!4265 = !DILocalVariable(name: "h", arg: 1, scope: !4261, file: !2542, line: 120, type: !2555)
!4266 = !DILocalVariable(name: "c", arg: 2, scope: !4261, file: !2542, line: 120, type: !2560)
!4267 = !DILocalVariable(name: "f", arg: 3, scope: !4261, file: !2542, line: 121, type: !2541)
!4268 = !DILocalVariable(name: "val", arg: 4, scope: !4261, file: !2542, line: 121, type: !2560)
!4269 = !DILocalVariable(name: "buf", scope: !4261, file: !2542, line: 125, type: !2549)
!4270 = !DILocalVariable(name: "cmem", scope: !4261, file: !2542, line: 126, type: !117)
!4271 = !DILocation(line: 0, scope: !4261)
!4272 = !DILocation(line: 125, column: 22, scope: !4261)
!4273 = !DILocation(line: 126, column: 15, scope: !4261)
!4274 = !DILocation(line: 133, column: 27, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4276, file: !2542, line: 131, column: 9)
!4276 = distinct !DILexicalBlock(scope: !4261, file: !2542, line: 128, column: 6)
!4277 = !DILocation(line: 133, column: 4, scope: !4275)
!4278 = !DILocation(line: 133, column: 3, scope: !4275)
!4279 = !DILocation(line: 133, column: 25, scope: !4275)
!4280 = !DILocation(line: 135, column: 1, scope: !4261)
!4281 = distinct !DISubprogram(name: "min_chunk_size", scope: !2542, file: !2542, line: 240, type: !4282, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4284)
!4282 = !DISubroutineType(types: !4283)
!4283 = !{!4133, !2555}
!4284 = !{!4285}
!4285 = !DILocalVariable(name: "h", arg: 1, scope: !4281, file: !2542, line: 240, type: !2555)
!4286 = !DILocation(line: 0, scope: !4281)
!4287 = !DILocation(line: 242, column: 9, scope: !4281)
!4288 = !DILocation(line: 242, column: 2, scope: !4281)
!4289 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2542, file: !2542, line: 235, type: !4290, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4292)
!4290 = !DISubroutineType(types: !4291)
!4291 = !{!4133, !2555, !315}
!4292 = !{!4293, !4294}
!4293 = !DILocalVariable(name: "h", arg: 1, scope: !4289, file: !2542, line: 235, type: !2555)
!4294 = !DILocalVariable(name: "bytes", arg: 2, scope: !4289, file: !2542, line: 235, type: !315)
!4295 = !DILocation(line: 0, scope: !4289)
!4296 = !DILocation(line: 237, column: 39, scope: !4289)
!4297 = !DILocation(line: 237, column: 9, scope: !4289)
!4298 = !DILocation(line: 237, column: 2, scope: !4289)
!4299 = distinct !DISubprogram(name: "chunksz", scope: !2542, file: !2542, line: 230, type: !4300, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4302)
!4300 = !DISubroutineType(types: !4301)
!4301 = !{!4133, !315}
!4302 = !{!4303}
!4303 = !DILocalVariable(name: "bytes", arg: 1, scope: !4299, file: !2542, line: 230, type: !315)
!4304 = !DILocation(line: 0, scope: !4299)
!4305 = !DILocation(line: 232, column: 29, scope: !4299)
!4306 = !DILocation(line: 232, column: 35, scope: !4299)
!4307 = !DILocation(line: 232, column: 2, scope: !4299)
!4308 = distinct !DISubprogram(name: "set_chunk_size", scope: !2542, file: !2542, line: 172, type: !4309, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4311)
!4309 = !DISubroutineType(types: !4310)
!4310 = !{null, !2555, !2560, !4133}
!4311 = !{!4312, !4313, !4314}
!4312 = !DILocalVariable(name: "h", arg: 1, scope: !4308, file: !2542, line: 172, type: !2555)
!4313 = !DILocalVariable(name: "c", arg: 2, scope: !4308, file: !2542, line: 172, type: !2560)
!4314 = !DILocalVariable(name: "size", arg: 3, scope: !4308, file: !2542, line: 172, type: !4133)
!4315 = !DILocation(line: 0, scope: !4308)
!4316 = !DILocation(line: 174, column: 38, scope: !4308)
!4317 = !DILocation(line: 174, column: 2, scope: !4308)
!4318 = !DILocation(line: 175, column: 1, scope: !4308)
!4319 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2542, file: !2542, line: 209, type: !4309, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4320)
!4320 = !{!4321, !4322, !4323}
!4321 = !DILocalVariable(name: "h", arg: 1, scope: !4319, file: !2542, line: 209, type: !2555)
!4322 = !DILocalVariable(name: "c", arg: 2, scope: !4319, file: !2542, line: 209, type: !2560)
!4323 = !DILocalVariable(name: "size", arg: 3, scope: !4319, file: !2542, line: 210, type: !4133)
!4324 = !DILocation(line: 0, scope: !4319)
!4325 = !DILocation(line: 212, column: 2, scope: !4319)
!4326 = !DILocation(line: 213, column: 1, scope: !4319)
!4327 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3988, file: !3988, line: 34, type: !4181, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4328)
!4328 = !{!4329, !4330, !4331, !4332, !4333, !4336}
!4329 = !DILocalVariable(name: "h", arg: 1, scope: !4327, file: !3988, line: 34, type: !2555)
!4330 = !DILocalVariable(name: "c", arg: 2, scope: !4327, file: !3988, line: 34, type: !2560)
!4331 = !DILocalVariable(name: "bidx", arg: 3, scope: !4327, file: !3988, line: 34, type: !118)
!4332 = !DILocalVariable(name: "b", scope: !4327, file: !3988, line: 36, type: !4188)
!4333 = !DILocalVariable(name: "first", scope: !4334, file: !3988, line: 47, type: !2560)
!4334 = distinct !DILexicalBlock(scope: !4335, file: !3988, line: 46, column: 9)
!4335 = distinct !DILexicalBlock(scope: !4327, file: !3988, line: 42, column: 6)
!4336 = !DILocalVariable(name: "second", scope: !4334, file: !3988, line: 48, type: !2560)
!4337 = !DILocation(line: 0, scope: !4327)
!4338 = !DILocation(line: 36, column: 29, scope: !4327)
!4339 = !DILocation(line: 42, column: 6, scope: !4335)
!4340 = !DILocation(line: 42, column: 28, scope: !4335)
!4341 = !DILocation(line: 42, column: 6, scope: !4327)
!4342 = !DILocation(line: 44, column: 24, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4335, file: !3988, line: 42, column: 34)
!4344 = !DILocation(line: 44, column: 23, scope: !4343)
!4345 = !DILocation(line: 44, column: 6, scope: !4343)
!4346 = !DILocation(line: 44, column: 20, scope: !4343)
!4347 = !DILocation(line: 45, column: 6, scope: !4343)
!4348 = !DILocation(line: 45, column: 11, scope: !4343)
!4349 = !DILocation(line: 46, column: 2, scope: !4343)
!4350 = !DILocation(line: 47, column: 21, scope: !4334)
!4351 = !DILocation(line: 0, scope: !4334)
!4352 = !DILocation(line: 50, column: 6, scope: !4334)
!4353 = !DILocation(line: 50, column: 11, scope: !4334)
!4354 = !DILocation(line: 51, column: 3, scope: !4334)
!4355 = !DILocation(line: 52, column: 3, scope: !4334)
!4356 = !DILocation(line: 58, column: 1, scope: !4327)
!4357 = distinct !DISubprogram(name: "next_free_chunk", scope: !2542, file: !2542, line: 182, type: !4049, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4358)
!4358 = !{!4359, !4360}
!4359 = !DILocalVariable(name: "h", arg: 1, scope: !4357, file: !2542, line: 182, type: !2555)
!4360 = !DILocalVariable(name: "c", arg: 2, scope: !4357, file: !2542, line: 182, type: !2560)
!4361 = !DILocation(line: 0, scope: !4357)
!4362 = !DILocation(line: 184, column: 9, scope: !4357)
!4363 = !DILocation(line: 184, column: 2, scope: !4357)
!4364 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3988, file: !3988, line: 200, type: !4365, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4367)
!4365 = !DISubroutineType(types: !4366)
!4366 = !{!315, !3991, !117}
!4367 = !{!4368, !4369, !4370, !4371, !4372, !4373, !4374}
!4368 = !DILocalVariable(name: "heap", arg: 1, scope: !4364, file: !3988, line: 200, type: !3991)
!4369 = !DILocalVariable(name: "mem", arg: 2, scope: !4364, file: !3988, line: 200, type: !117)
!4370 = !DILocalVariable(name: "h", scope: !4364, file: !3988, line: 202, type: !2555)
!4371 = !DILocalVariable(name: "c", scope: !4364, file: !3988, line: 203, type: !2560)
!4372 = !DILocalVariable(name: "addr", scope: !4364, file: !3988, line: 204, type: !315)
!4373 = !DILocalVariable(name: "chunk_base", scope: !4364, file: !3988, line: 205, type: !315)
!4374 = !DILocalVariable(name: "chunk_sz", scope: !4364, file: !3988, line: 206, type: !315)
!4375 = !DILocation(line: 0, scope: !4364)
!4376 = !DILocation(line: 202, column: 27, scope: !4364)
!4377 = !DILocation(line: 203, column: 16, scope: !4364)
!4378 = !DILocation(line: 204, column: 16, scope: !4364)
!4379 = !DILocation(line: 205, column: 31, scope: !4364)
!4380 = !DILocation(line: 205, column: 22, scope: !4364)
!4381 = !DILocation(line: 206, column: 20, scope: !4364)
!4382 = !DILocation(line: 206, column: 37, scope: !4364)
!4383 = !DILocation(line: 208, column: 26, scope: !4364)
!4384 = !DILocation(line: 208, column: 18, scope: !4364)
!4385 = !DILocation(line: 208, column: 2, scope: !4364)
!4386 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3988, file: !3988, line: 263, type: !4387, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4389)
!4387 = !DISubroutineType(types: !4388)
!4388 = !{!117, !3991, !315}
!4389 = !{!4390, !4391, !4392, !4393, !4394, !4395}
!4390 = !DILocalVariable(name: "heap", arg: 1, scope: !4386, file: !3988, line: 263, type: !3991)
!4391 = !DILocalVariable(name: "bytes", arg: 2, scope: !4386, file: !3988, line: 263, type: !315)
!4392 = !DILocalVariable(name: "h", scope: !4386, file: !3988, line: 265, type: !2555)
!4393 = !DILocalVariable(name: "mem", scope: !4386, file: !3988, line: 266, type: !117)
!4394 = !DILocalVariable(name: "chunk_sz", scope: !4386, file: !3988, line: 272, type: !4133)
!4395 = !DILocalVariable(name: "c", scope: !4386, file: !3988, line: 273, type: !2560)
!4396 = !DILocation(line: 0, scope: !4386)
!4397 = !DILocation(line: 265, column: 27, scope: !4386)
!4398 = !DILocation(line: 268, column: 12, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4386, file: !3988, line: 268, column: 6)
!4400 = !DILocation(line: 268, column: 18, scope: !4399)
!4401 = !DILocation(line: 268, column: 21, scope: !4399)
!4402 = !DILocation(line: 268, column: 6, scope: !4386)
!4403 = !DILocation(line: 272, column: 23, scope: !4386)
!4404 = !DILocation(line: 273, column: 16, scope: !4386)
!4405 = !DILocation(line: 274, column: 8, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4386, file: !3988, line: 274, column: 6)
!4407 = !DILocation(line: 274, column: 6, scope: !4386)
!4408 = !DILocation(line: 279, column: 6, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4386, file: !3988, line: 279, column: 6)
!4410 = !DILocation(line: 279, column: 23, scope: !4409)
!4411 = !DILocation(line: 279, column: 6, scope: !4386)
!4412 = !DILocation(line: 280, column: 24, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4409, file: !3988, line: 279, column: 35)
!4414 = !DILocation(line: 280, column: 3, scope: !4413)
!4415 = !DILocation(line: 281, column: 3, scope: !4413)
!4416 = !DILocation(line: 282, column: 2, scope: !4413)
!4417 = !DILocation(line: 284, column: 2, scope: !4386)
!4418 = !DILocation(line: 286, column: 8, scope: !4386)
!4419 = !DILocation(line: 298, column: 2, scope: !4386)
!4420 = !DILocation(line: 299, column: 1, scope: !4386)
!4421 = distinct !DISubprogram(name: "size_too_big", scope: !2542, file: !2542, line: 256, type: !4422, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4424)
!4422 = !DISubroutineType(types: !4423)
!4423 = !{!146, !2555, !315}
!4424 = !{!4425, !4426}
!4425 = !DILocalVariable(name: "h", arg: 1, scope: !4421, file: !2542, line: 256, type: !2555)
!4426 = !DILocalVariable(name: "bytes", arg: 2, scope: !4421, file: !2542, line: 256, type: !315)
!4427 = !DILocation(line: 0, scope: !4421)
!4428 = !DILocation(line: 262, column: 16, scope: !4421)
!4429 = !DILocation(line: 262, column: 36, scope: !4421)
!4430 = !DILocation(line: 262, column: 30, scope: !4421)
!4431 = !DILocation(line: 262, column: 2, scope: !4421)
!4432 = distinct !DISubprogram(name: "alloc_chunk", scope: !3988, file: !3988, line: 211, type: !4433, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4435)
!4433 = !DISubroutineType(types: !4434)
!4434 = !{!2560, !2555, !4133}
!4435 = !{!4436, !4437, !4438, !4439, !4440, !4443, !4444, !4446, !4447, !4450}
!4436 = !DILocalVariable(name: "h", arg: 1, scope: !4432, file: !3988, line: 211, type: !2555)
!4437 = !DILocalVariable(name: "sz", arg: 2, scope: !4432, file: !3988, line: 211, type: !4133)
!4438 = !DILocalVariable(name: "bi", scope: !4432, file: !3988, line: 213, type: !118)
!4439 = !DILocalVariable(name: "b", scope: !4432, file: !3988, line: 214, type: !4188)
!4440 = !DILocalVariable(name: "first", scope: !4441, file: !3988, line: 233, type: !2560)
!4441 = distinct !DILexicalBlock(scope: !4442, file: !3988, line: 232, column: 15)
!4442 = distinct !DILexicalBlock(scope: !4432, file: !3988, line: 232, column: 6)
!4443 = !DILocalVariable(name: "i", scope: !4441, file: !3988, line: 234, type: !118)
!4444 = !DILocalVariable(name: "c", scope: !4445, file: !3988, line: 236, type: !2560)
!4445 = distinct !DILexicalBlock(scope: !4441, file: !3988, line: 235, column: 6)
!4446 = !DILocalVariable(name: "bmask", scope: !4432, file: !3988, line: 249, type: !156)
!4447 = !DILocalVariable(name: "minbucket", scope: !4448, file: !3988, line: 252, type: !118)
!4448 = distinct !DILexicalBlock(scope: !4449, file: !3988, line: 251, column: 19)
!4449 = distinct !DILexicalBlock(scope: !4432, file: !3988, line: 251, column: 6)
!4450 = !DILocalVariable(name: "c", scope: !4448, file: !3988, line: 253, type: !2560)
!4451 = !DILocation(line: 0, scope: !4432)
!4452 = !DILocation(line: 213, column: 11, scope: !4432)
!4453 = !DILocation(line: 232, column: 9, scope: !4442)
!4454 = !DILocation(line: 232, column: 6, scope: !4442)
!4455 = !DILocation(line: 232, column: 6, scope: !4432)
!4456 = !DILocation(line: 236, column: 21, scope: !4445)
!4457 = !DILocation(line: 0, scope: !4441)
!4458 = !DILocation(line: 0, scope: !4445)
!4459 = !DILocation(line: 237, column: 8, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4445, file: !3988, line: 237, column: 8)
!4461 = !DILocation(line: 237, column: 25, scope: !4460)
!4462 = !DILocation(line: 237, column: 8, scope: !4445)
!4463 = !DILocation(line: 238, column: 5, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4460, file: !3988, line: 237, column: 32)
!4465 = !DILocation(line: 241, column: 14, scope: !4445)
!4466 = !DILocation(line: 241, column: 12, scope: !4445)
!4467 = !DILocation(line: 243, column: 12, scope: !4441)
!4468 = !DILocation(line: 243, column: 16, scope: !4441)
!4469 = distinct !{!4469, !4470, !4471}
!4470 = !DILocation(line: 235, column: 3, scope: !4441)
!4471 = !DILocation(line: 243, column: 35, scope: !4441)
!4472 = !DILocation(line: 249, column: 22, scope: !4432)
!4473 = !DILocation(line: 249, column: 39, scope: !4432)
!4474 = !DILocation(line: 249, column: 36, scope: !4432)
!4475 = !DILocation(line: 251, column: 12, scope: !4449)
!4476 = !DILocation(line: 251, column: 6, scope: !4432)
!4477 = !DILocation(line: 252, column: 19, scope: !4448)
!4478 = !DILocation(line: 0, scope: !4448)
!4479 = !DILocation(line: 253, column: 39, scope: !4448)
!4480 = !DILocation(line: 255, column: 3, scope: !4448)
!4481 = !DILocation(line: 261, column: 1, scope: !4432)
!4482 = distinct !DISubprogram(name: "split_chunks", scope: !3988, file: !3988, line: 109, type: !4126, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4483)
!4483 = !{!4484, !4485, !4486, !4487, !4488, !4489}
!4484 = !DILocalVariable(name: "h", arg: 1, scope: !4482, file: !3988, line: 109, type: !2555)
!4485 = !DILocalVariable(name: "lc", arg: 2, scope: !4482, file: !3988, line: 109, type: !2560)
!4486 = !DILocalVariable(name: "rc", arg: 3, scope: !4482, file: !3988, line: 109, type: !2560)
!4487 = !DILocalVariable(name: "sz0", scope: !4482, file: !3988, line: 114, type: !4133)
!4488 = !DILocalVariable(name: "lsz", scope: !4482, file: !3988, line: 115, type: !4133)
!4489 = !DILocalVariable(name: "rsz", scope: !4482, file: !3988, line: 116, type: !4133)
!4490 = !DILocation(line: 0, scope: !4482)
!4491 = !DILocation(line: 114, column: 18, scope: !4482)
!4492 = !DILocation(line: 115, column: 21, scope: !4482)
!4493 = !DILocation(line: 116, column: 22, scope: !4482)
!4494 = !DILocation(line: 118, column: 2, scope: !4482)
!4495 = !DILocation(line: 119, column: 2, scope: !4482)
!4496 = !DILocation(line: 120, column: 2, scope: !4482)
!4497 = !DILocation(line: 121, column: 25, scope: !4482)
!4498 = !DILocation(line: 121, column: 2, scope: !4482)
!4499 = !DILocation(line: 122, column: 1, scope: !4482)
!4500 = distinct !DISubprogram(name: "chunk_mem", scope: !3988, file: !3988, line: 24, type: !4501, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4503)
!4501 = !DISubroutineType(types: !4502)
!4502 = !{!117, !2555, !2560}
!4503 = !{!4504, !4505, !4506, !4507}
!4504 = !DILocalVariable(name: "h", arg: 1, scope: !4500, file: !3988, line: 24, type: !2555)
!4505 = !DILocalVariable(name: "c", arg: 2, scope: !4500, file: !3988, line: 24, type: !2560)
!4506 = !DILocalVariable(name: "buf", scope: !4500, file: !3988, line: 26, type: !2549)
!4507 = !DILocalVariable(name: "ret", scope: !4500, file: !3988, line: 27, type: !1955)
!4508 = !DILocation(line: 0, scope: !4500)
!4509 = !DILocation(line: 26, column: 22, scope: !4500)
!4510 = !DILocation(line: 27, column: 38, scope: !4500)
!4511 = !DILocation(line: 31, column: 2, scope: !4500)
!4512 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3988, file: !3988, line: 301, type: !4513, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4515)
!4513 = !DISubroutineType(types: !4514)
!4514 = !{!117, !3991, !315, !315}
!4515 = !{!4516, !4517, !4518, !4519, !4520, !4521, !4522, !4523, !4524, !4525, !4526, !4527}
!4516 = !DILocalVariable(name: "heap", arg: 1, scope: !4512, file: !3988, line: 301, type: !3991)
!4517 = !DILocalVariable(name: "align", arg: 2, scope: !4512, file: !3988, line: 301, type: !315)
!4518 = !DILocalVariable(name: "bytes", arg: 3, scope: !4512, file: !3988, line: 301, type: !315)
!4519 = !DILocalVariable(name: "h", scope: !4512, file: !3988, line: 303, type: !2555)
!4520 = !DILocalVariable(name: "gap", scope: !4512, file: !3988, line: 304, type: !315)
!4521 = !DILocalVariable(name: "rew", scope: !4512, file: !3988, line: 304, type: !315)
!4522 = !DILocalVariable(name: "padded_sz", scope: !4512, file: !3988, line: 335, type: !4133)
!4523 = !DILocalVariable(name: "c0", scope: !4512, file: !3988, line: 336, type: !2560)
!4524 = !DILocalVariable(name: "mem", scope: !4512, file: !3988, line: 341, type: !1955)
!4525 = !DILocalVariable(name: "end", scope: !4512, file: !3988, line: 345, type: !2549)
!4526 = !DILocalVariable(name: "c", scope: !4512, file: !3988, line: 348, type: !2560)
!4527 = !DILocalVariable(name: "c_end", scope: !4512, file: !3988, line: 349, type: !2560)
!4528 = !DILocation(line: 0, scope: !4512)
!4529 = !DILocation(line: 303, column: 27, scope: !4512)
!4530 = !DILocation(line: 313, column: 16, scope: !4512)
!4531 = !DILocation(line: 313, column: 14, scope: !4512)
!4532 = !DILocation(line: 314, column: 12, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4512, file: !3988, line: 314, column: 6)
!4534 = !DILocation(line: 314, column: 6, scope: !4512)
!4535 = !DILocation(line: 315, column: 9, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4533, file: !3988, line: 314, column: 20)
!4537 = !DILocation(line: 316, column: 9, scope: !4536)
!4538 = !DILocation(line: 318, column: 13, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !3988, line: 318, column: 7)
!4540 = distinct !DILexicalBlock(scope: !4533, file: !3988, line: 317, column: 9)
!4541 = !DILocation(line: 318, column: 7, scope: !4540)
!4542 = !DILocation(line: 319, column: 11, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4539, file: !3988, line: 318, column: 39)
!4544 = !DILocation(line: 319, column: 4, scope: !4543)
!4545 = !DILocation(line: 0, scope: !4533)
!4546 = !DILocation(line: 324, column: 2, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4548, file: !3988, line: 324, column: 2)
!4548 = distinct !DILexicalBlock(scope: !4512, file: !3988, line: 324, column: 2)
!4549 = !DILocation(line: 324, column: 2, scope: !4548)
!4550 = !DILocation(line: 324, column: 2, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4547, file: !3988, line: 324, column: 2)
!4552 = !DILocation(line: 326, column: 12, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4512, file: !3988, line: 326, column: 6)
!4554 = !DILocation(line: 326, column: 17, scope: !4553)
!4555 = !DILocation(line: 326, column: 20, scope: !4553)
!4556 = !DILocation(line: 326, column: 6, scope: !4512)
!4557 = !DILocation(line: 335, column: 50, scope: !4512)
!4558 = !DILocation(line: 335, column: 58, scope: !4512)
!4559 = !DILocation(line: 335, column: 24, scope: !4512)
!4560 = !DILocation(line: 336, column: 17, scope: !4512)
!4561 = !DILocation(line: 338, column: 9, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4512, file: !3988, line: 338, column: 6)
!4563 = !DILocation(line: 338, column: 6, scope: !4512)
!4564 = !DILocation(line: 341, column: 17, scope: !4512)
!4565 = !DILocation(line: 344, column: 20, scope: !4512)
!4566 = !DILocation(line: 344, column: 8, scope: !4512)
!4567 = !DILocation(line: 344, column: 47, scope: !4512)
!4568 = !DILocation(line: 345, column: 39, scope: !4512)
!4569 = !DILocation(line: 348, column: 16, scope: !4512)
!4570 = !DILocation(line: 349, column: 26, scope: !4512)
!4571 = !DILocation(line: 349, column: 24, scope: !4512)
!4572 = !DILocation(line: 353, column: 8, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4512, file: !3988, line: 353, column: 6)
!4574 = !DILocation(line: 353, column: 6, scope: !4512)
!4575 = !DILocation(line: 354, column: 3, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4573, file: !3988, line: 353, column: 14)
!4577 = !DILocation(line: 355, column: 3, scope: !4576)
!4578 = !DILocation(line: 356, column: 2, scope: !4576)
!4579 = !DILocation(line: 359, column: 6, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4512, file: !3988, line: 359, column: 6)
!4581 = !DILocation(line: 359, column: 24, scope: !4580)
!4582 = !DILocation(line: 359, column: 6, scope: !4512)
!4583 = !DILocation(line: 360, column: 3, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4580, file: !3988, line: 359, column: 33)
!4585 = !DILocation(line: 361, column: 3, scope: !4584)
!4586 = !DILocation(line: 362, column: 2, scope: !4584)
!4587 = !DILocation(line: 364, column: 2, scope: !4512)
!4588 = !DILocation(line: 377, column: 1, scope: !4512)
!4589 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3988, file: !3988, line: 379, type: !4590, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4592)
!4590 = !DISubroutineType(types: !4591)
!4591 = !{!117, !3991, !117, !315, !315}
!4592 = !{!4593, !4594, !4595, !4596, !4597, !4598, !4599, !4600, !4601, !4602, !4608, !4609}
!4593 = !DILocalVariable(name: "heap", arg: 1, scope: !4589, file: !3988, line: 379, type: !3991)
!4594 = !DILocalVariable(name: "ptr", arg: 2, scope: !4589, file: !3988, line: 379, type: !117)
!4595 = !DILocalVariable(name: "align", arg: 3, scope: !4589, file: !3988, line: 380, type: !315)
!4596 = !DILocalVariable(name: "bytes", arg: 4, scope: !4589, file: !3988, line: 380, type: !315)
!4597 = !DILocalVariable(name: "h", scope: !4589, file: !3988, line: 382, type: !2555)
!4598 = !DILocalVariable(name: "c", scope: !4589, file: !3988, line: 399, type: !2560)
!4599 = !DILocalVariable(name: "rc", scope: !4589, file: !3988, line: 400, type: !2560)
!4600 = !DILocalVariable(name: "align_gap", scope: !4589, file: !3988, line: 401, type: !315)
!4601 = !DILocalVariable(name: "chunks_need", scope: !4589, file: !3988, line: 402, type: !4133)
!4602 = !DILocalVariable(name: "split_size", scope: !4603, file: !3988, line: 435, type: !4133)
!4603 = distinct !DILexicalBlock(scope: !4604, file: !3988, line: 433, column: 61)
!4604 = distinct !DILexicalBlock(scope: !4605, file: !3988, line: 432, column: 13)
!4605 = distinct !DILexicalBlock(scope: !4606, file: !3988, line: 409, column: 13)
!4606 = distinct !DILexicalBlock(scope: !4607, file: !3988, line: 406, column: 13)
!4607 = distinct !DILexicalBlock(scope: !4589, file: !3988, line: 404, column: 6)
!4608 = !DILocalVariable(name: "ptr2", scope: !4589, file: !3988, line: 474, type: !117)
!4609 = !DILocalVariable(name: "prev_size", scope: !4610, file: !3988, line: 477, type: !315)
!4610 = distinct !DILexicalBlock(scope: !4611, file: !3988, line: 476, column: 20)
!4611 = distinct !DILexicalBlock(scope: !4589, file: !3988, line: 476, column: 6)
!4612 = !DILocation(line: 0, scope: !4589)
!4613 = !DILocation(line: 382, column: 27, scope: !4589)
!4614 = !DILocation(line: 385, column: 10, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4589, file: !3988, line: 385, column: 6)
!4616 = !DILocation(line: 385, column: 6, scope: !4589)
!4617 = !DILocation(line: 386, column: 10, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4615, file: !3988, line: 385, column: 19)
!4619 = !DILocation(line: 386, column: 3, scope: !4618)
!4620 = !DILocation(line: 388, column: 12, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4589, file: !3988, line: 388, column: 6)
!4622 = !DILocation(line: 388, column: 6, scope: !4589)
!4623 = !DILocation(line: 389, column: 3, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4621, file: !3988, line: 388, column: 18)
!4625 = !DILocation(line: 390, column: 3, scope: !4624)
!4626 = !DILocation(line: 393, column: 2, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4628, file: !3988, line: 393, column: 2)
!4628 = distinct !DILexicalBlock(scope: !4589, file: !3988, line: 393, column: 2)
!4629 = !DILocation(line: 393, column: 2, scope: !4628)
!4630 = !DILocation(line: 393, column: 2, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4627, file: !3988, line: 393, column: 2)
!4632 = !DILocation(line: 395, column: 6, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4589, file: !3988, line: 395, column: 6)
!4634 = !DILocation(line: 395, column: 6, scope: !4589)
!4635 = !DILocation(line: 399, column: 16, scope: !4589)
!4636 = !DILocation(line: 400, column: 17, scope: !4589)
!4637 = !DILocation(line: 401, column: 49, scope: !4589)
!4638 = !DILocation(line: 401, column: 36, scope: !4589)
!4639 = !DILocation(line: 402, column: 52, scope: !4589)
!4640 = !DILocation(line: 402, column: 26, scope: !4589)
!4641 = !DILocation(line: 404, column: 6, scope: !4607)
!4642 = !DILocation(line: 404, column: 12, scope: !4607)
!4643 = !DILocation(line: 406, column: 13, scope: !4606)
!4644 = !DILocation(line: 406, column: 30, scope: !4606)
!4645 = !DILocation(line: 406, column: 13, scope: !4607)
!4646 = !DILocation(line: 409, column: 30, scope: !4605)
!4647 = !DILocation(line: 409, column: 13, scope: !4606)
!4648 = !DILocation(line: 420, column: 24, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4605, file: !3988, line: 409, column: 45)
!4650 = !DILocation(line: 420, column: 3, scope: !4649)
!4651 = !DILocation(line: 421, column: 3, scope: !4649)
!4652 = !DILocation(line: 422, column: 3, scope: !4649)
!4653 = !DILocation(line: 431, column: 3, scope: !4649)
!4654 = !DILocation(line: 432, column: 14, scope: !4604)
!4655 = !DILocation(line: 432, column: 32, scope: !4604)
!4656 = !DILocation(line: 433, column: 26, scope: !4604)
!4657 = !DILocation(line: 433, column: 24, scope: !4604)
!4658 = !DILocation(line: 433, column: 44, scope: !4604)
!4659 = !DILocation(line: 432, column: 13, scope: !4605)
!4660 = !DILocation(line: 435, column: 38, scope: !4603)
!4661 = !DILocation(line: 0, scope: !4603)
!4662 = !DILocation(line: 445, column: 3, scope: !4603)
!4663 = !DILocation(line: 447, column: 20, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4603, file: !3988, line: 447, column: 7)
!4665 = !DILocation(line: 447, column: 18, scope: !4664)
!4666 = !DILocation(line: 447, column: 7, scope: !4603)
!4667 = !DILocation(line: 448, column: 27, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4664, file: !3988, line: 447, column: 39)
!4669 = !DILocation(line: 448, column: 4, scope: !4668)
!4670 = !DILocation(line: 449, column: 4, scope: !4668)
!4671 = !DILocation(line: 450, column: 3, scope: !4668)
!4672 = !DILocation(line: 452, column: 3, scope: !4603)
!4673 = !DILocation(line: 453, column: 3, scope: !4603)
!4674 = !DILocation(line: 474, column: 15, scope: !4589)
!4675 = !DILocation(line: 476, column: 11, scope: !4611)
!4676 = !DILocation(line: 476, column: 6, scope: !4589)
!4677 = !DILocation(line: 477, column: 42, scope: !4610)
!4678 = !DILocation(line: 477, column: 22, scope: !4610)
!4679 = !DILocation(line: 477, column: 60, scope: !4610)
!4680 = !DILocation(line: 0, scope: !4610)
!4681 = !DILocation(line: 479, column: 21, scope: !4610)
!4682 = !DILocation(line: 479, column: 3, scope: !4610)
!4683 = !DILocation(line: 480, column: 3, scope: !4610)
!4684 = !DILocation(line: 481, column: 2, scope: !4610)
!4685 = !DILocation(line: 483, column: 1, scope: !4589)
!4686 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2542, file: !2542, line: 245, type: !4687, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4689)
!4687 = !DISubroutineType(types: !4688)
!4688 = !{!315, !2555, !4133}
!4689 = !{!4690, !4691}
!4690 = !DILocalVariable(name: "h", arg: 1, scope: !4686, file: !2542, line: 245, type: !2555)
!4691 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4686, file: !2542, line: 245, type: !4133)
!4692 = !DILocation(line: 0, scope: !4686)
!4693 = !DILocation(line: 247, column: 20, scope: !4686)
!4694 = !DILocation(line: 247, column: 33, scope: !4686)
!4695 = !DILocation(line: 247, column: 2, scope: !4686)
!4696 = distinct !DISubprogram(name: "sys_heap_init", scope: !3988, file: !3988, line: 485, type: !4697, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !4699)
!4697 = !DISubroutineType(types: !4698)
!4698 = !{null, !3991, !117, !315}
!4699 = !{!4700, !4701, !4702, !4703, !4704, !4705, !4706, !4707, !4708, !4709}
!4700 = !DILocalVariable(name: "heap", arg: 1, scope: !4696, file: !3988, line: 485, type: !3991)
!4701 = !DILocalVariable(name: "mem", arg: 2, scope: !4696, file: !3988, line: 485, type: !117)
!4702 = !DILocalVariable(name: "bytes", arg: 3, scope: !4696, file: !3988, line: 485, type: !315)
!4703 = !DILocalVariable(name: "addr", scope: !4696, file: !3988, line: 502, type: !22)
!4704 = !DILocalVariable(name: "end", scope: !4696, file: !3988, line: 503, type: !22)
!4705 = !DILocalVariable(name: "heap_sz", scope: !4696, file: !3988, line: 504, type: !4133)
!4706 = !DILocalVariable(name: "h", scope: !4696, file: !3988, line: 509, type: !2555)
!4707 = !DILocalVariable(name: "nb_buckets", scope: !4696, file: !3988, line: 520, type: !118)
!4708 = !DILocalVariable(name: "chunk0_size", scope: !4696, file: !3988, line: 521, type: !4133)
!4709 = !DILocalVariable(name: "i", scope: !4710, file: !3988, line: 526, type: !118)
!4710 = distinct !DILexicalBlock(scope: !4696, file: !3988, line: 526, column: 2)
!4711 = !DILocation(line: 0, scope: !4696)
!4712 = !DILocation(line: 491, column: 3, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4714, file: !3988, line: 491, column: 3)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !3988, line: 491, column: 3)
!4715 = distinct !DILexicalBlock(scope: !4716, file: !3988, line: 489, column: 46)
!4716 = distinct !DILexicalBlock(scope: !4696, file: !3988, line: 489, column: 6)
!4717 = !DILocation(line: 491, column: 3, scope: !4714)
!4718 = !DILocation(line: 491, column: 3, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4713, file: !3988, line: 491, column: 3)
!4720 = !DILocation(line: 498, column: 2, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4722, file: !3988, line: 498, column: 2)
!4722 = distinct !DILexicalBlock(scope: !4696, file: !3988, line: 498, column: 2)
!4723 = !DILocation(line: 498, column: 2, scope: !4722)
!4724 = !DILocation(line: 498, column: 2, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4721, file: !3988, line: 498, column: 2)
!4726 = !DILocation(line: 499, column: 8, scope: !4696)
!4727 = !DILocation(line: 502, column: 19, scope: !4696)
!4728 = !DILocation(line: 503, column: 18, scope: !4696)
!4729 = !DILocation(line: 504, column: 27, scope: !4696)
!4730 = !DILocation(line: 504, column: 35, scope: !4696)
!4731 = !DILocation(line: 507, column: 2, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4733, file: !3988, line: 507, column: 2)
!4733 = distinct !DILexicalBlock(scope: !4696, file: !3988, line: 507, column: 2)
!4734 = !DILocation(line: 507, column: 2, scope: !4733)
!4735 = !DILocation(line: 507, column: 2, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4732, file: !3988, line: 507, column: 2)
!4737 = !DILocation(line: 509, column: 21, scope: !4696)
!4738 = !DILocation(line: 510, column: 8, scope: !4696)
!4739 = !DILocation(line: 510, column: 13, scope: !4696)
!4740 = !DILocation(line: 511, column: 5, scope: !4696)
!4741 = !DILocation(line: 511, column: 15, scope: !4696)
!4742 = !DILocation(line: 512, column: 5, scope: !4696)
!4743 = !DILocation(line: 512, column: 19, scope: !4696)
!4744 = !DILocation(line: 520, column: 19, scope: !4696)
!4745 = !DILocation(line: 522, column: 21, scope: !4696)
!4746 = !DILocation(line: 521, column: 56, scope: !4696)
!4747 = !DILocation(line: 521, column: 26, scope: !4696)
!4748 = !DILocation(line: 524, column: 2, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4750, file: !3988, line: 524, column: 2)
!4750 = distinct !DILexicalBlock(scope: !4696, file: !3988, line: 524, column: 2)
!4751 = !DILocation(line: 524, column: 2, scope: !4750)
!4752 = !DILocation(line: 0, scope: !4710)
!4753 = !DILocation(line: 526, column: 20, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4710, file: !3988, line: 526, column: 2)
!4755 = !DILocation(line: 526, column: 2, scope: !4710)
!4756 = !DILocation(line: 524, column: 2, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4749, file: !3988, line: 524, column: 2)
!4758 = !DILocation(line: 531, column: 2, scope: !4696)
!4759 = !DILocation(line: 532, column: 2, scope: !4696)
!4760 = !DILocation(line: 533, column: 2, scope: !4696)
!4761 = !DILocation(line: 536, column: 41, scope: !4696)
!4762 = !DILocation(line: 536, column: 2, scope: !4696)
!4763 = !DILocation(line: 537, column: 2, scope: !4696)
!4764 = !DILocation(line: 540, column: 2, scope: !4696)
!4765 = !DILocation(line: 541, column: 2, scope: !4696)
!4766 = !DILocation(line: 542, column: 2, scope: !4696)
!4767 = !DILocation(line: 544, column: 2, scope: !4696)
!4768 = !DILocation(line: 545, column: 1, scope: !4696)
!4769 = !DILocation(line: 527, column: 17, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4754, file: !3988, line: 526, column: 39)
!4771 = !DILocation(line: 527, column: 22, scope: !4770)
!4772 = !DILocation(line: 526, column: 35, scope: !4754)
!4773 = distinct !{!4773, !4755, !4774}
!4774 = !DILocation(line: 528, column: 2, scope: !4710)
!4775 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2575, file: !2575, line: 1338, type: !4776, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !4784)
!4776 = !DISubroutineType(types: !4777)
!4777 = !{!118, !3722, !117, !133, !4778, !156}
!4778 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3688, line: 99, baseType: !4779)
!4779 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3688, line: 40, baseType: !4780)
!4780 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2575, baseType: !4781)
!4781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4782)
!4782 = !{!4783}
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4781, file: !2575, baseType: !117, size: 32)
!4784 = !{!4785, !4786, !4787, !4788, !4789, !4790, !4794, !4795, !4796, !4798, !4803, !4848, !4851, !4854, !4855, !4856, !4857, !4858, !4859, !4860, !4863, !4864, !4865, !4869, !4872, !4874, !4877, !4878, !4879, !4884, !4890, !4893, !4897, !4903, !4907, !4910, !4912, !4915}
!4785 = !DILocalVariable(name: "out", arg: 1, scope: !4775, file: !2575, line: 1338, type: !3722)
!4786 = !DILocalVariable(name: "ctx", arg: 2, scope: !4775, file: !2575, line: 1338, type: !117)
!4787 = !DILocalVariable(name: "fp", arg: 3, scope: !4775, file: !2575, line: 1338, type: !133)
!4788 = !DILocalVariable(name: "ap", arg: 4, scope: !4775, file: !2575, line: 1339, type: !4778)
!4789 = !DILocalVariable(name: "flags", arg: 5, scope: !4775, file: !2575, line: 1339, type: !156)
!4790 = !DILocalVariable(name: "buf", scope: !4775, file: !2575, line: 1341, type: !4791)
!4791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 176, elements: !4792)
!4792 = !{!4793}
!4793 = !DISubrange(count: 22)
!4794 = !DILocalVariable(name: "count", scope: !4775, file: !2575, line: 1342, type: !315)
!4795 = !DILocalVariable(name: "sint", scope: !4775, file: !2575, line: 1343, type: !2594)
!4796 = !DILocalVariable(name: "tagged_ap", scope: !4775, file: !2575, line: 1345, type: !4797)
!4797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!4798 = !DILocalVariable(name: "rc", scope: !4799, file: !2575, line: 1377, type: !118)
!4799 = distinct !DILexicalBlock(scope: !4800, file: !2575, line: 1377, column: 4)
!4800 = distinct !DILexicalBlock(scope: !4801, file: !2575, line: 1376, column: 19)
!4801 = distinct !DILexicalBlock(scope: !4802, file: !2575, line: 1376, column: 7)
!4802 = distinct !DILexicalBlock(scope: !4775, file: !2575, line: 1375, column: 19)
!4803 = !DILocalVariable(name: "state", scope: !4802, file: !2575, line: 1395, type: !4804)
!4804 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4775, file: !2575, line: 1392, size: 192, elements: !4805)
!4805 = !{!4806, !4816}
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4804, file: !2575, line: 1393, baseType: !4807, size: 64)
!4807 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2575, line: 166, size: 64, elements: !4808)
!4808 = !{!4809, !4810, !4811, !4813, !4815}
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4807, file: !2575, line: 168, baseType: !2594, size: 64)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4807, file: !2575, line: 171, baseType: !2597, size: 64)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4807, file: !2575, line: 174, baseType: !4812, size: 64)
!4812 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4807, file: !2575, line: 177, baseType: !4814, size: 64)
!4814 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4807, file: !2575, line: 180, baseType: !117, size: 32)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4804, file: !2575, line: 1394, baseType: !4817, size: 96, offset: 64)
!4817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2575, line: 189, size: 96, elements: !4818)
!4818 = !{!4819, !4820, !4821, !4822, !4823, !4824, !4825, !4826, !4827, !4828, !4829, !4830, !4831, !4832, !4833, !4834, !4835, !4836, !4837, !4838, !4843}
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4817, file: !2575, line: 191, baseType: !146, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4817, file: !2575, line: 194, baseType: !146, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4817, file: !2575, line: 197, baseType: !146, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4817, file: !2575, line: 200, baseType: !146, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4817, file: !2575, line: 203, baseType: !146, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4817, file: !2575, line: 206, baseType: !146, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4817, file: !2575, line: 209, baseType: !146, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4817, file: !2575, line: 212, baseType: !146, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4817, file: !2575, line: 219, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4817, file: !2575, line: 222, baseType: !146, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4817, file: !2575, line: 229, baseType: !146, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4817, file: !2575, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4817, file: !2575, line: 238, baseType: !146, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4817, file: !2575, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4817, file: !2575, line: 244, baseType: !146, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4817, file: !2575, line: 247, baseType: !146, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4817, file: !2575, line: 252, baseType: !146, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4817, file: !2575, line: 257, baseType: !146, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4817, file: !2575, line: 260, baseType: !144, size: 8, offset: 24)
!4838 = !DIDerivedType(tag: DW_TAG_member, scope: !4817, file: !2575, line: 262, baseType: !4839, size: 32, offset: 32)
!4839 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4817, file: !2575, line: 262, size: 32, elements: !4840)
!4840 = !{!4841, !4842}
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4839, file: !2575, line: 267, baseType: !118, size: 32)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4839, file: !2575, line: 289, baseType: !118, size: 32)
!4843 = !DIDerivedType(tag: DW_TAG_member, scope: !4817, file: !2575, line: 292, baseType: !4844, size: 32, offset: 64)
!4844 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4817, file: !2575, line: 292, size: 32, elements: !4845)
!4845 = !{!4846, !4847}
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4844, file: !2575, line: 297, baseType: !118, size: 32)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4844, file: !2575, line: 306, baseType: !118, size: 32)
!4848 = !DILocalVariable(name: "conv", scope: !4802, file: !2575, line: 1400, type: !4849)
!4849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4850)
!4850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4817, size: 32)
!4851 = !DILocalVariable(name: "value", scope: !4802, file: !2575, line: 1401, type: !4852)
!4852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4853)
!4853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4807, size: 32)
!4854 = !DILocalVariable(name: "sp", scope: !4802, file: !2575, line: 1402, type: !133)
!4855 = !DILocalVariable(name: "width", scope: !4802, file: !2575, line: 1403, type: !118)
!4856 = !DILocalVariable(name: "precision", scope: !4802, file: !2575, line: 1404, type: !118)
!4857 = !DILocalVariable(name: "bps", scope: !4802, file: !2575, line: 1405, type: !133)
!4858 = !DILocalVariable(name: "bpe", scope: !4802, file: !2575, line: 1406, type: !133)
!4859 = !DILocalVariable(name: "sign", scope: !4802, file: !2575, line: 1407, type: !135)
!4860 = !DILocalVariable(name: "arg", scope: !4861, file: !2575, line: 1432, type: !118)
!4861 = distinct !DILexicalBlock(scope: !4862, file: !2575, line: 1431, column: 24)
!4862 = distinct !DILexicalBlock(scope: !4802, file: !2575, line: 1431, column: 7)
!4863 = !DILocalVariable(name: "specifier_cat", scope: !4802, file: !2575, line: 1468, type: !2574)
!4864 = !DILocalVariable(name: "length_mod", scope: !4802, file: !2575, line: 1470, type: !2582)
!4865 = !DILocalVariable(name: "rc", scope: !4866, file: !2575, line: 1575, type: !118)
!4866 = distinct !DILexicalBlock(scope: !4867, file: !2575, line: 1575, column: 4)
!4867 = distinct !DILexicalBlock(scope: !4868, file: !2575, line: 1574, column: 43)
!4868 = distinct !DILexicalBlock(scope: !4802, file: !2575, line: 1574, column: 7)
!4869 = !DILocalVariable(name: "rc", scope: !4870, file: !2575, line: 1584, type: !118)
!4870 = distinct !DILexicalBlock(scope: !4871, file: !2575, line: 1584, column: 4)
!4871 = distinct !DILexicalBlock(scope: !4802, file: !2575, line: 1582, column: 28)
!4872 = !DILocalVariable(name: "len", scope: !4873, file: !2575, line: 1589, type: !315)
!4873 = distinct !DILexicalBlock(scope: !4871, file: !2575, line: 1586, column: 13)
!4874 = !DILocalVariable(name: "len", scope: !4875, file: !2575, line: 1641, type: !315)
!4875 = distinct !DILexicalBlock(scope: !4876, file: !2575, line: 1640, column: 24)
!4876 = distinct !DILexicalBlock(scope: !4871, file: !2575, line: 1640, column: 8)
!4877 = !DILocalVariable(name: "nj_len", scope: !4802, file: !2575, line: 1722, type: !315)
!4878 = !DILocalVariable(name: "pad_len", scope: !4802, file: !2575, line: 1723, type: !118)
!4879 = !DILocalVariable(name: "pad", scope: !4880, file: !2575, line: 1751, type: !135)
!4880 = distinct !DILexicalBlock(scope: !4881, file: !2575, line: 1750, column: 26)
!4881 = distinct !DILexicalBlock(scope: !4882, file: !2575, line: 1750, column: 8)
!4882 = distinct !DILexicalBlock(scope: !4883, file: !2575, line: 1747, column: 18)
!4883 = distinct !DILexicalBlock(scope: !4802, file: !2575, line: 1747, column: 7)
!4884 = !DILocalVariable(name: "rc", scope: !4885, file: !2575, line: 1758, type: !118)
!4885 = distinct !DILexicalBlock(scope: !4886, file: !2575, line: 1758, column: 7)
!4886 = distinct !DILexicalBlock(scope: !4887, file: !2575, line: 1757, column: 21)
!4887 = distinct !DILexicalBlock(scope: !4888, file: !2575, line: 1757, column: 10)
!4888 = distinct !DILexicalBlock(scope: !4889, file: !2575, line: 1756, column: 26)
!4889 = distinct !DILexicalBlock(scope: !4880, file: !2575, line: 1756, column: 9)
!4890 = !DILocalVariable(name: "rc", scope: !4891, file: !2575, line: 1765, type: !118)
!4891 = distinct !DILexicalBlock(scope: !4892, file: !2575, line: 1765, column: 6)
!4892 = distinct !DILexicalBlock(scope: !4880, file: !2575, line: 1764, column: 25)
!4893 = !DILocalVariable(name: "rc", scope: !4894, file: !2575, line: 1774, type: !118)
!4894 = distinct !DILexicalBlock(scope: !4895, file: !2575, line: 1774, column: 4)
!4895 = distinct !DILexicalBlock(scope: !4896, file: !2575, line: 1773, column: 18)
!4896 = distinct !DILexicalBlock(scope: !4802, file: !2575, line: 1773, column: 7)
!4897 = !DILocalVariable(name: "rc", scope: !4898, file: !2575, line: 1819, type: !118)
!4898 = distinct !DILexicalBlock(scope: !4899, file: !2575, line: 1819, column: 5)
!4899 = distinct !DILexicalBlock(scope: !4900, file: !2575, line: 1818, column: 44)
!4900 = distinct !DILexicalBlock(scope: !4901, file: !2575, line: 1818, column: 8)
!4901 = distinct !DILexicalBlock(scope: !4902, file: !2575, line: 1817, column: 10)
!4902 = distinct !DILexicalBlock(scope: !4802, file: !2575, line: 1777, column: 7)
!4903 = !DILocalVariable(name: "rc", scope: !4904, file: !2575, line: 1823, type: !118)
!4904 = distinct !DILexicalBlock(scope: !4905, file: !2575, line: 1823, column: 5)
!4905 = distinct !DILexicalBlock(scope: !4906, file: !2575, line: 1822, column: 26)
!4906 = distinct !DILexicalBlock(scope: !4901, file: !2575, line: 1822, column: 8)
!4907 = !DILocalVariable(name: "rc", scope: !4908, file: !2575, line: 1828, type: !118)
!4908 = distinct !DILexicalBlock(scope: !4909, file: !2575, line: 1828, column: 5)
!4909 = distinct !DILexicalBlock(scope: !4901, file: !2575, line: 1827, column: 26)
!4910 = !DILocalVariable(name: "rc", scope: !4911, file: !2575, line: 1831, type: !118)
!4911 = distinct !DILexicalBlock(scope: !4901, file: !2575, line: 1831, column: 4)
!4912 = !DILocalVariable(name: "rc", scope: !4913, file: !2575, line: 1836, type: !118)
!4913 = distinct !DILexicalBlock(scope: !4914, file: !2575, line: 1836, column: 4)
!4914 = distinct !DILexicalBlock(scope: !4802, file: !2575, line: 1835, column: 21)
!4915 = !DILabel(scope: !4871, name: "prec_int_pad0", file: !2575, line: 1634)
!4916 = !DILocation(line: 0, scope: !4775)
!4917 = !DILocation(line: 1341, column: 2, scope: !4775)
!4918 = !DILocation(line: 1341, column: 7, scope: !4775)
!4919 = !DILocation(line: 1375, column: 2, scope: !4775)
!4920 = !DILocation(line: 1342, column: 9, scope: !4775)
!4921 = !DILocation(line: 1375, column: 9, scope: !4775)
!4922 = !DILocation(line: 1377, column: 4, scope: !4799)
!4923 = !DILocation(line: 0, scope: !4799)
!4924 = !DILocation(line: 1377, column: 4, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4799, file: !2575, line: 1377, column: 4)
!4926 = distinct !{!4926, !4919, !4927}
!4927 = !DILocation(line: 1839, column: 2, scope: !4775)
!4928 = !DILocation(line: 1392, column: 3, scope: !4802)
!4929 = !DILocation(line: 1395, column: 5, scope: !4802)
!4930 = !DILocation(line: 0, scope: !4802)
!4931 = !DILocation(line: 1409, column: 8, scope: !4802)
!4932 = !DILocation(line: 1414, column: 13, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4802, file: !2575, line: 1414, column: 7)
!4934 = !DILocation(line: 1414, column: 7, scope: !4802)
!4935 = !DILocation(line: 1415, column: 12, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4933, file: !2575, line: 1414, column: 25)
!4937 = !DILocation(line: 1417, column: 14, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4936, file: !2575, line: 1417, column: 8)
!4939 = !DILocation(line: 1417, column: 8, scope: !4936)
!4940 = !DILocation(line: 1418, column: 21, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4938, file: !2575, line: 1417, column: 19)
!4942 = !DILocation(line: 1419, column: 13, scope: !4941)
!4943 = !DILocation(line: 1420, column: 4, scope: !4941)
!4944 = !DILocation(line: 1421, column: 20, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4933, file: !2575, line: 1421, column: 14)
!4946 = !DILocation(line: 1421, column: 14, scope: !4933)
!4947 = !DILocation(line: 1431, column: 13, scope: !4862)
!4948 = !DILocation(line: 1431, column: 7, scope: !4802)
!4949 = !DILocation(line: 1432, column: 14, scope: !4861)
!4950 = !DILocation(line: 0, scope: !4861)
!4951 = !DILocation(line: 1434, column: 12, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4861, file: !2575, line: 1434, column: 8)
!4953 = !DILocation(line: 1434, column: 8, scope: !4861)
!4954 = !DILocation(line: 1435, column: 24, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4952, file: !2575, line: 1434, column: 17)
!4956 = !DILocation(line: 1436, column: 4, scope: !4955)
!4957 = !DILocation(line: 1439, column: 20, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4862, file: !2575, line: 1439, column: 14)
!4959 = !DILocation(line: 1439, column: 14, scope: !4862)
!4960 = !DILocation(line: 1469, column: 37, scope: !4802)
!4961 = !DILocation(line: 1448, column: 20, scope: !4802)
!4962 = !DILocation(line: 1449, column: 22, scope: !4802)
!4963 = !DILocation(line: 1471, column: 34, scope: !4802)
!4964 = !DILocation(line: 1478, column: 7, scope: !4802)
!4965 = !DILocation(line: 1479, column: 4, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4967, file: !2575, line: 1478, column: 40)
!4967 = distinct !DILexicalBlock(scope: !4802, file: !2575, line: 1478, column: 7)
!4968 = !DILocation(line: 1484, column: 19, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4966, file: !2575, line: 1479, column: 24)
!4970 = !DILocation(line: 1484, column: 17, scope: !4969)
!4971 = !DILocation(line: 1485, column: 5, scope: !4969)
!4972 = !DILocation(line: 1492, column: 20, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4974, file: !2575, line: 1491, column: 12)
!4974 = distinct !DILexicalBlock(scope: !4969, file: !2575, line: 1487, column: 9)
!4975 = !DILocation(line: 1492, column: 18, scope: !4973)
!4976 = !DILocation(line: 1494, column: 5, scope: !4969)
!4977 = !DILocation(line: 1497, column: 23, scope: !4969)
!4978 = !DILocation(line: 1496, column: 17, scope: !4969)
!4979 = !DILocation(line: 1498, column: 5, scope: !4969)
!4980 = !DILocation(line: 1501, column: 23, scope: !4969)
!4981 = !DILocation(line: 1500, column: 17, scope: !4969)
!4982 = !DILocation(line: 1502, column: 5, scope: !4969)
!4983 = !DILocation(line: 1513, column: 23, scope: !4969)
!4984 = !DILocation(line: 1513, column: 6, scope: !4969)
!4985 = !DILocation(line: 1512, column: 17, scope: !4969)
!4986 = !DILocation(line: 1514, column: 5, scope: !4969)
!4987 = !DILocation(line: 0, scope: !4969)
!4988 = !DILocation(line: 1516, column: 8, scope: !4966)
!4989 = !DILocation(line: 1517, column: 19, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4991, file: !2575, line: 1516, column: 33)
!4991 = distinct !DILexicalBlock(scope: !4966, file: !2575, line: 1516, column: 8)
!4992 = !DILocation(line: 1517, column: 17, scope: !4990)
!4993 = !DILocation(line: 1518, column: 4, scope: !4990)
!4994 = !DILocation(line: 1519, column: 19, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4996, file: !2575, line: 1518, column: 39)
!4996 = distinct !DILexicalBlock(scope: !4991, file: !2575, line: 1518, column: 15)
!4997 = !DILocation(line: 1519, column: 17, scope: !4995)
!4998 = !DILocation(line: 1520, column: 4, scope: !4995)
!4999 = !DILocation(line: 1522, column: 4, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !5001, file: !2575, line: 1521, column: 47)
!5001 = distinct !DILexicalBlock(scope: !4967, file: !2575, line: 1521, column: 14)
!5002 = !DILocation(line: 1527, column: 19, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !5000, file: !2575, line: 1522, column: 24)
!5004 = !DILocation(line: 1527, column: 17, scope: !5003)
!5005 = !DILocation(line: 1528, column: 5, scope: !5003)
!5006 = !DILocation(line: 0, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !5003, file: !2575, line: 1530, column: 9)
!5008 = !DILocation(line: 1540, column: 23, scope: !5003)
!5009 = !DILocation(line: 1539, column: 17, scope: !5003)
!5010 = !DILocation(line: 1542, column: 5, scope: !5003)
!5011 = !DILocation(line: 1545, column: 23, scope: !5003)
!5012 = !DILocation(line: 1544, column: 17, scope: !5003)
!5013 = !DILocation(line: 1547, column: 5, scope: !5003)
!5014 = !DILocation(line: 1551, column: 23, scope: !5003)
!5015 = !DILocation(line: 1551, column: 6, scope: !5003)
!5016 = !DILocation(line: 1550, column: 17, scope: !5003)
!5017 = !DILocation(line: 1552, column: 5, scope: !5003)
!5018 = !DILocation(line: 0, scope: !5003)
!5019 = !DILocation(line: 1554, column: 8, scope: !5000)
!5020 = !DILocation(line: 1555, column: 19, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5022, file: !2575, line: 1554, column: 33)
!5022 = distinct !DILexicalBlock(scope: !5000, file: !2575, line: 1554, column: 8)
!5023 = !DILocation(line: 1555, column: 17, scope: !5021)
!5024 = !DILocation(line: 1556, column: 4, scope: !5021)
!5025 = !DILocation(line: 1557, column: 19, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5027, file: !2575, line: 1556, column: 39)
!5027 = distinct !DILexicalBlock(scope: !5022, file: !2575, line: 1556, column: 15)
!5028 = !DILocation(line: 1557, column: 17, scope: !5026)
!5029 = !DILocation(line: 1558, column: 4, scope: !5026)
!5030 = !DILocation(line: 0, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5032, file: !2575, line: 1560, column: 8)
!5032 = distinct !DILexicalBlock(scope: !5033, file: !2575, line: 1559, column: 45)
!5033 = distinct !DILexicalBlock(scope: !5001, file: !2575, line: 1559, column: 14)
!5034 = !DILocation(line: 1566, column: 17, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5036, file: !2575, line: 1565, column: 46)
!5036 = distinct !DILexicalBlock(scope: !5033, file: !2575, line: 1565, column: 14)
!5037 = !DILocation(line: 1566, column: 15, scope: !5035)
!5038 = !DILocation(line: 1567, column: 3, scope: !5035)
!5039 = !DILocation(line: 1574, column: 21, scope: !4868)
!5040 = !DILocation(line: 1575, column: 4, scope: !4866)
!5041 = !DILocation(line: 0, scope: !4866)
!5042 = !DILocation(line: 1575, column: 4, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !4866, file: !2575, line: 1575, column: 4)
!5044 = !DILocation(line: 1582, column: 17, scope: !4802)
!5045 = !DILocation(line: 1582, column: 3, scope: !4802)
!5046 = !DILocation(line: 1584, column: 4, scope: !4870)
!5047 = !DILocation(line: 0, scope: !4870)
!5048 = !DILocation(line: 1584, column: 4, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !4870, file: !2575, line: 1584, column: 4)
!5050 = !DILocation(line: 1587, column: 31, scope: !4873)
!5051 = !DILocation(line: 1591, column: 18, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !4873, file: !2575, line: 1591, column: 8)
!5053 = !DILocation(line: 1591, column: 8, scope: !4873)
!5054 = !DILocation(line: 1592, column: 11, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5052, file: !2575, line: 1591, column: 24)
!5056 = !DILocation(line: 0, scope: !4873)
!5057 = !DILocation(line: 1593, column: 4, scope: !5055)
!5058 = !DILocation(line: 1594, column: 11, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5052, file: !2575, line: 1593, column: 11)
!5060 = !DILocation(line: 1604, column: 51, scope: !4871)
!5061 = !DILocation(line: 1604, column: 13, scope: !4871)
!5062 = !DILocation(line: 1604, column: 11, scope: !4871)
!5063 = !DILocation(line: 1606, column: 4, scope: !4871)
!5064 = !DILocation(line: 1609, column: 14, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !4871, file: !2575, line: 1609, column: 8)
!5066 = !DILocation(line: 1609, column: 8, scope: !4871)
!5067 = !DILocation(line: 1619, column: 18, scope: !4871)
!5068 = !DILocation(line: 1620, column: 13, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !4871, file: !2575, line: 1620, column: 8)
!5070 = !DILocation(line: 1620, column: 8, scope: !4871)
!5071 = !DILocation(line: 1622, column: 36, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5069, file: !2575, line: 1620, column: 18)
!5073 = !DILocation(line: 1622, column: 17, scope: !5072)
!5074 = !DILocation(line: 1623, column: 4, scope: !5072)
!5075 = !DILocation(line: 1632, column: 29, scope: !4871)
!5076 = !DILocation(line: 1632, column: 10, scope: !4871)
!5077 = !DILocation(line: 1632, column: 4, scope: !4871)
!5078 = !DILocation(line: 1407, column: 8, scope: !4802)
!5079 = !DILocation(line: 0, scope: !4871)
!5080 = !DILocation(line: 1634, column: 3, scope: !4871)
!5081 = !DILocation(line: 1640, column: 18, scope: !4876)
!5082 = !DILocation(line: 1640, column: 8, scope: !4871)
!5083 = !DILocation(line: 1729, column: 13, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !4802, file: !2575, line: 1729, column: 7)
!5085 = !DILocation(line: 1641, column: 22, scope: !4875)
!5086 = !DILocation(line: 0, scope: !4875)
!5087 = !DILocation(line: 1646, column: 21, scope: !4875)
!5088 = !DILocation(line: 1649, column: 13, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !4875, file: !2575, line: 1649, column: 9)
!5090 = !DILocation(line: 1649, column: 9, scope: !4875)
!5091 = !DILocation(line: 1650, column: 35, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5089, file: !2575, line: 1649, column: 34)
!5093 = !DILocation(line: 1650, column: 23, scope: !5092)
!5094 = !DILocation(line: 1651, column: 5, scope: !5092)
!5095 = !DILocation(line: 1660, column: 15, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !4871, file: !2575, line: 1660, column: 8)
!5097 = !DILocation(line: 1660, column: 19, scope: !5096)
!5098 = !DILocation(line: 1660, column: 8, scope: !4871)
!5099 = !DILocation(line: 1661, column: 23, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5096, file: !2575, line: 1660, column: 28)
!5101 = !DILocation(line: 1661, column: 11, scope: !5100)
!5102 = !DILocation(line: 1665, column: 22, scope: !5100)
!5103 = !DILocation(line: 1666, column: 21, scope: !5100)
!5104 = !DILocation(line: 1668, column: 5, scope: !5100)
!5105 = !DILocation(line: 1677, column: 30, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5107, file: !2575, line: 1676, column: 49)
!5107 = distinct !DILexicalBlock(scope: !4871, file: !2575, line: 1676, column: 8)
!5108 = !DILocation(line: 1677, column: 5, scope: !5106)
!5109 = !DILocation(line: 1680, column: 4, scope: !4871)
!5110 = !DILocation(line: 0, scope: !5052)
!5111 = !DILocation(line: 1597, column: 14, scope: !4873)
!5112 = !DILocation(line: 1699, column: 11, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !4802, file: !2575, line: 1699, column: 7)
!5114 = !DILocation(line: 1699, column: 7, scope: !4802)
!5115 = !DILocation(line: 1725, column: 7, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !4802, file: !2575, line: 1725, column: 7)
!5117 = !DILocation(line: 1725, column: 12, scope: !5116)
!5118 = !DILocation(line: 1747, column: 13, scope: !4883)
!5119 = !DILocation(line: 1747, column: 7, scope: !4802)
!5120 = !DILocation(line: 1722, column: 24, scope: !4802)
!5121 = !DILocation(line: 1725, column: 7, scope: !4802)
!5122 = !DILocation(line: 1729, column: 7, scope: !4802)
!5123 = !DILocation(line: 1736, column: 13, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !4802, file: !2575, line: 1736, column: 7)
!5125 = !DILocation(line: 1735, column: 19, scope: !4802)
!5126 = !DILocation(line: 1736, column: 7, scope: !4802)
!5127 = !DILocation(line: 1748, column: 10, scope: !4882)
!5128 = !DILocation(line: 1750, column: 15, scope: !4881)
!5129 = !DILocation(line: 1750, column: 8, scope: !4882)
!5130 = !DILocation(line: 0, scope: !4880)
!5131 = !DILocation(line: 1756, column: 15, scope: !4889)
!5132 = !DILocation(line: 1756, column: 9, scope: !4880)
!5133 = !DILocation(line: 1758, column: 7, scope: !4885)
!5134 = !DILocation(line: 0, scope: !4885)
!5135 = !DILocation(line: 1758, column: 7, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !4885, file: !2575, line: 1758, column: 7)
!5137 = !DILocation(line: 1764, column: 5, scope: !4880)
!5138 = !DILocation(line: 0, scope: !4882)
!5139 = !DILocation(line: 1764, column: 20, scope: !4880)
!5140 = !DILocation(line: 1764, column: 17, scope: !4880)
!5141 = !DILocation(line: 1765, column: 6, scope: !4891)
!5142 = !DILocation(line: 0, scope: !4891)
!5143 = !DILocation(line: 1765, column: 6, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !4891, file: !2575, line: 1765, column: 6)
!5145 = distinct !{!5145, !5137, !5146}
!5146 = !DILocation(line: 1766, column: 5, scope: !4880)
!5147 = !DILocation(line: 1773, column: 12, scope: !4896)
!5148 = !DILocation(line: 1773, column: 7, scope: !4802)
!5149 = !DILocation(line: 1773, column: 7, scope: !4896)
!5150 = !DILocation(line: 1774, column: 4, scope: !4894)
!5151 = !DILocation(line: 0, scope: !4894)
!5152 = !DILocation(line: 1774, column: 4, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !4894, file: !2575, line: 1774, column: 4)
!5154 = !DILocation(line: 1818, column: 8, scope: !4900)
!5155 = !DILocation(line: 1818, column: 27, scope: !4900)
!5156 = !DILocation(line: 1818, column: 25, scope: !4900)
!5157 = !DILocation(line: 1818, column: 8, scope: !4901)
!5158 = !DILocation(line: 1819, column: 5, scope: !4898)
!5159 = !DILocation(line: 0, scope: !4898)
!5160 = !DILocation(line: 1819, column: 5, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !4898, file: !2575, line: 1819, column: 5)
!5162 = !DILocation(line: 1822, column: 14, scope: !4906)
!5163 = !DILocation(line: 1822, column: 8, scope: !4901)
!5164 = !DILocation(line: 1823, column: 5, scope: !4904)
!5165 = !DILocation(line: 0, scope: !4904)
!5166 = !DILocation(line: 1823, column: 5, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !4904, file: !2575, line: 1823, column: 5)
!5168 = !DILocation(line: 1826, column: 20, scope: !4901)
!5169 = !DILocation(line: 1827, column: 4, scope: !4901)
!5170 = !DILocation(line: 0, scope: !4901)
!5171 = !DILocation(line: 1827, column: 21, scope: !4901)
!5172 = !DILocation(line: 1827, column: 18, scope: !4901)
!5173 = !DILocation(line: 1828, column: 5, scope: !4908)
!5174 = !DILocation(line: 0, scope: !4908)
!5175 = !DILocation(line: 1828, column: 5, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !4908, file: !2575, line: 1828, column: 5)
!5177 = distinct !{!5177, !5169, !5178}
!5178 = !DILocation(line: 1829, column: 4, scope: !4901)
!5179 = !DILocation(line: 1831, column: 4, scope: !4911)
!5180 = !DILocation(line: 0, scope: !4911)
!5181 = !DILocation(line: 1831, column: 4, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !4911, file: !2575, line: 1831, column: 4)
!5183 = !DILocation(line: 1835, column: 16, scope: !4802)
!5184 = !DILocation(line: 1835, column: 3, scope: !4802)
!5185 = !DILocation(line: 1836, column: 4, scope: !4913)
!5186 = !DILocation(line: 0, scope: !4913)
!5187 = !DILocation(line: 1836, column: 4, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !4913, file: !2575, line: 1836, column: 4)
!5189 = !DILocation(line: 1837, column: 4, scope: !4914)
!5190 = distinct !{!5190, !5184, !5191}
!5191 = !DILocation(line: 1838, column: 3, scope: !4802)
!5192 = !DILocation(line: 1844, column: 1, scope: !4775)
!5193 = distinct !DISubprogram(name: "extract_conversion", scope: !2575, file: !2575, line: 642, type: !5194, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !5196)
!5194 = !DISubroutineType(types: !5195)
!5195 = !{!133, !4850, !133}
!5196 = !{!5197, !5198}
!5197 = !DILocalVariable(name: "conv", arg: 1, scope: !5193, file: !2575, line: 642, type: !4850)
!5198 = !DILocalVariable(name: "sp", arg: 2, scope: !5193, file: !2575, line: 643, type: !133)
!5199 = !DILocation(line: 0, scope: !5193)
!5200 = !DILocation(line: 645, column: 10, scope: !5193)
!5201 = !DILocation(line: 653, column: 2, scope: !5193)
!5202 = !DILocation(line: 654, column: 6, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5193, file: !2575, line: 654, column: 6)
!5204 = !DILocation(line: 654, column: 10, scope: !5203)
!5205 = !DILocation(line: 654, column: 6, scope: !5193)
!5206 = !DILocation(line: 655, column: 24, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5203, file: !2575, line: 654, column: 18)
!5208 = !DILocation(line: 655, column: 19, scope: !5207)
!5209 = !DILocation(line: 656, column: 3, scope: !5207)
!5210 = !DILocation(line: 659, column: 7, scope: !5193)
!5211 = !DILocation(line: 660, column: 7, scope: !5193)
!5212 = !DILocation(line: 661, column: 7, scope: !5193)
!5213 = !DILocation(line: 662, column: 7, scope: !5193)
!5214 = !DILocation(line: 663, column: 7, scope: !5193)
!5215 = !DILocation(line: 665, column: 2, scope: !5193)
!5216 = !DILocation(line: 666, column: 1, scope: !5193)
!5217 = distinct !DISubprogram(name: "outs", scope: !2575, file: !2575, line: 1319, type: !5218, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !5220)
!5218 = !DISubroutineType(types: !5219)
!5219 = !{!118, !3722, !117, !133, !133}
!5220 = !{!5221, !5222, !5223, !5224, !5225, !5226}
!5221 = !DILocalVariable(name: "out", arg: 1, scope: !5217, file: !2575, line: 1319, type: !3722)
!5222 = !DILocalVariable(name: "ctx", arg: 2, scope: !5217, file: !2575, line: 1320, type: !117)
!5223 = !DILocalVariable(name: "sp", arg: 3, scope: !5217, file: !2575, line: 1321, type: !133)
!5224 = !DILocalVariable(name: "ep", arg: 4, scope: !5217, file: !2575, line: 1322, type: !133)
!5225 = !DILocalVariable(name: "count", scope: !5217, file: !2575, line: 1324, type: !315)
!5226 = !DILocalVariable(name: "rc", scope: !5227, file: !2575, line: 1327, type: !118)
!5227 = distinct !DILexicalBlock(scope: !5217, file: !2575, line: 1326, column: 45)
!5228 = !DILocation(line: 0, scope: !5217)
!5229 = !DILocation(line: 1326, column: 2, scope: !5217)
!5230 = !DILocation(line: 1324, column: 9, scope: !5217)
!5231 = !DILocation(line: 1326, column: 13, scope: !5217)
!5232 = !DILocation(line: 1326, column: 19, scope: !5217)
!5233 = !DILocation(line: 1327, column: 21, scope: !5227)
!5234 = !DILocation(line: 1326, column: 36, scope: !5217)
!5235 = !DILocation(line: 1326, column: 39, scope: !5217)
!5236 = !DILocation(line: 1327, column: 24, scope: !5227)
!5237 = !DILocation(line: 1327, column: 16, scope: !5227)
!5238 = !DILocation(line: 1327, column: 12, scope: !5227)
!5239 = !DILocation(line: 0, scope: !5227)
!5240 = !DILocation(line: 1329, column: 10, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5227, file: !2575, line: 1329, column: 7)
!5242 = !DILocation(line: 1329, column: 7, scope: !5227)
!5243 = distinct !{!5243, !5229, !5244}
!5244 = !DILocation(line: 1333, column: 2, scope: !5217)
!5245 = !DILocation(line: 1336, column: 1, scope: !5217)
!5246 = distinct !DISubprogram(name: "encode_uint", scope: !2575, file: !2575, line: 788, type: !5247, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !5249)
!5247 = !DISubroutineType(types: !5248)
!5248 = !{!1259, !2597, !4850, !1259, !133}
!5249 = !{!5250, !5251, !5252, !5253, !5254, !5255, !5257, !5258}
!5250 = !DILocalVariable(name: "value", arg: 1, scope: !5246, file: !2575, line: 788, type: !2597)
!5251 = !DILocalVariable(name: "conv", arg: 2, scope: !5246, file: !2575, line: 789, type: !4850)
!5252 = !DILocalVariable(name: "bps", arg: 3, scope: !5246, file: !2575, line: 790, type: !1259)
!5253 = !DILocalVariable(name: "bpe", arg: 4, scope: !5246, file: !2575, line: 791, type: !133)
!5254 = !DILocalVariable(name: "upcase", scope: !5246, file: !2575, line: 793, type: !146)
!5255 = !DILocalVariable(name: "radix", scope: !5246, file: !2575, line: 794, type: !5256)
!5256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5257 = !DILocalVariable(name: "bp", scope: !5246, file: !2575, line: 795, type: !1259)
!5258 = !DILocalVariable(name: "lsv", scope: !5259, file: !2575, line: 798, type: !32)
!5259 = distinct !DILexicalBlock(scope: !5246, file: !2575, line: 797, column: 5)
!5260 = !DILocation(line: 0, scope: !5246)
!5261 = !DILocation(line: 793, column: 35, scope: !5246)
!5262 = !DILocation(line: 793, column: 24, scope: !5246)
!5263 = !DILocation(line: 793, column: 16, scope: !5246)
!5264 = !DILocation(line: 794, column: 29, scope: !5246)
!5265 = !DILocation(line: 795, column: 24, scope: !5246)
!5266 = !DILocation(line: 795, column: 17, scope: !5246)
!5267 = !DILocation(line: 797, column: 2, scope: !5246)
!5268 = !DILocation(line: 802, column: 9, scope: !5259)
!5269 = !DILocation(line: 798, column: 22, scope: !5259)
!5270 = !DILocation(line: 0, scope: !5259)
!5271 = !DILocation(line: 800, column: 16, scope: !5259)
!5272 = !DILocation(line: 800, column: 11, scope: !5259)
!5273 = !DILocation(line: 800, column: 4, scope: !5259)
!5274 = !DILocation(line: 800, column: 9, scope: !5259)
!5275 = !DILocation(line: 803, column: 18, scope: !5246)
!5276 = !DILocation(line: 803, column: 24, scope: !5246)
!5277 = !DILocation(line: 803, column: 2, scope: !5259)
!5278 = distinct !{!5278, !5267, !5279}
!5279 = !DILocation(line: 803, column: 37, scope: !5246)
!5280 = !DILocation(line: 808, column: 12, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5246, file: !2575, line: 808, column: 6)
!5282 = !DILocation(line: 808, column: 6, scope: !5246)
!5283 = !DILocation(line: 809, column: 7, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5281, file: !2575, line: 808, column: 23)
!5285 = !DILocation(line: 813, column: 3, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5287, file: !2575, line: 811, column: 27)
!5287 = distinct !DILexicalBlock(scope: !5288, file: !2575, line: 811, column: 14)
!5288 = distinct !DILexicalBlock(scope: !5284, file: !2575, line: 809, column: 7)
!5289 = !DILocation(line: 0, scope: !5288)
!5290 = !DILocation(line: 818, column: 2, scope: !5246)
!5291 = distinct !DISubprogram(name: "store_count", scope: !2575, file: !2575, line: 1280, type: !5292, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !5296)
!5292 = !DISubroutineType(types: !5293)
!5293 = !{null, !5294, !117, !118}
!5294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5295, size: 32)
!5295 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4817)
!5296 = !{!5297, !5298, !5299}
!5297 = !DILocalVariable(name: "conv", arg: 1, scope: !5291, file: !2575, line: 1280, type: !5294)
!5298 = !DILocalVariable(name: "dp", arg: 2, scope: !5291, file: !2575, line: 1281, type: !117)
!5299 = !DILocalVariable(name: "count", arg: 3, scope: !5291, file: !2575, line: 1282, type: !118)
!5300 = !DILocation(line: 0, scope: !5291)
!5301 = !DILocation(line: 1284, column: 38, scope: !5291)
!5302 = !DILocation(line: 1284, column: 2, scope: !5291)
!5303 = !DILocation(line: 1286, column: 4, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5291, file: !2575, line: 1284, column: 50)
!5305 = !DILocation(line: 1286, column: 14, scope: !5304)
!5306 = !DILocation(line: 1287, column: 3, scope: !5304)
!5307 = !DILocation(line: 1289, column: 24, scope: !5304)
!5308 = !DILocation(line: 1289, column: 22, scope: !5304)
!5309 = !DILocation(line: 1290, column: 3, scope: !5304)
!5310 = !DILocation(line: 1292, column: 18, scope: !5304)
!5311 = !DILocation(line: 1292, column: 4, scope: !5304)
!5312 = !DILocation(line: 1292, column: 16, scope: !5304)
!5313 = !DILocation(line: 1293, column: 3, scope: !5304)
!5314 = !DILocation(line: 1295, column: 4, scope: !5304)
!5315 = !DILocation(line: 1295, column: 15, scope: !5304)
!5316 = !DILocation(line: 1296, column: 3, scope: !5304)
!5317 = !DILocation(line: 1298, column: 22, scope: !5304)
!5318 = !DILocation(line: 1298, column: 4, scope: !5304)
!5319 = !DILocation(line: 1298, column: 20, scope: !5304)
!5320 = !DILocation(line: 1299, column: 3, scope: !5304)
!5321 = !DILocation(line: 1301, column: 21, scope: !5304)
!5322 = !DILocation(line: 1301, column: 4, scope: !5304)
!5323 = !DILocation(line: 1301, column: 19, scope: !5304)
!5324 = !DILocation(line: 1302, column: 3, scope: !5304)
!5325 = !DILocation(line: 1304, column: 4, scope: !5304)
!5326 = !DILocation(line: 1304, column: 17, scope: !5304)
!5327 = !DILocation(line: 1305, column: 3, scope: !5304)
!5328 = !DILocation(line: 1307, column: 4, scope: !5304)
!5329 = !DILocation(line: 1307, column: 20, scope: !5304)
!5330 = !DILocation(line: 1308, column: 3, scope: !5304)
!5331 = !DILocation(line: 1316, column: 1, scope: !5291)
!5332 = distinct !DISubprogram(name: "isupper", scope: !5333, file: !5333, line: 16, type: !439, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !5334)
!5333 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5334 = !{!5335}
!5335 = !DILocalVariable(name: "a", arg: 1, scope: !5332, file: !5333, line: 16, type: !118)
!5336 = !DILocation(line: 0, scope: !5332)
!5337 = !DILocation(line: 18, column: 29, scope: !5332)
!5338 = !DILocation(line: 18, column: 45, scope: !5332)
!5339 = !DILocation(line: 18, column: 2, scope: !5332)
!5340 = distinct !DISubprogram(name: "conversion_radix", scope: !2575, file: !2575, line: 761, type: !5341, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !5343)
!5341 = !DISubroutineType(types: !5342)
!5342 = !{!315, !135}
!5343 = !{!5344}
!5344 = !DILocalVariable(name: "specifier", arg: 1, scope: !5340, file: !2575, line: 761, type: !135)
!5345 = !DILocation(line: 0, scope: !5340)
!5346 = !DILocation(line: 763, column: 2, scope: !5340)
!5347 = !DILocation(line: 770, column: 3, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5340, file: !2575, line: 763, column: 21)
!5349 = !DILocation(line: 774, column: 3, scope: !5348)
!5350 = !DILocation(line: 0, scope: !5348)
!5351 = !DILocation(line: 776, column: 1, scope: !5340)
!5352 = distinct !DISubprogram(name: "extract_flags", scope: !2575, file: !2575, line: 339, type: !5194, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !5353)
!5353 = !{!5354, !5355, !5356}
!5354 = !DILocalVariable(name: "conv", arg: 1, scope: !5352, file: !2575, line: 339, type: !4850)
!5355 = !DILocalVariable(name: "sp", arg: 2, scope: !5352, file: !2575, line: 340, type: !133)
!5356 = !DILocalVariable(name: "loop", scope: !5352, file: !2575, line: 342, type: !146)
!5357 = !DILocation(line: 0, scope: !5352)
!5358 = !DILocation(line: 344, column: 2, scope: !5352)
!5359 = !DILocation(line: 345, column: 11, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5352, file: !2575, line: 344, column: 5)
!5361 = !DILocation(line: 345, column: 3, scope: !5360)
!5362 = !DILocation(line: 351, column: 4, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5360, file: !2575, line: 345, column: 16)
!5364 = !DILocation(line: 354, column: 4, scope: !5363)
!5365 = !DILocation(line: 357, column: 4, scope: !5363)
!5366 = !DILocation(line: 360, column: 4, scope: !5363)
!5367 = !DILocation(line: 0, scope: !5363)
!5368 = !DILocation(line: 370, column: 12, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5352, file: !2575, line: 370, column: 6)
!5370 = !DILocation(line: 370, column: 22, scope: !5369)
!5371 = !DILocation(line: 371, column: 19, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5369, file: !2575, line: 370, column: 42)
!5373 = !DILocation(line: 372, column: 2, scope: !5372)
!5374 = !DILocation(line: 376, column: 2, scope: !5352)
!5375 = distinct !DISubprogram(name: "extract_width", scope: !2575, file: !2575, line: 388, type: !5194, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !5376)
!5376 = !{!5377, !5378, !5379, !5380}
!5377 = !DILocalVariable(name: "conv", arg: 1, scope: !5375, file: !2575, line: 388, type: !4850)
!5378 = !DILocalVariable(name: "sp", arg: 2, scope: !5375, file: !2575, line: 389, type: !133)
!5379 = !DILocalVariable(name: "wp", scope: !5375, file: !2575, line: 398, type: !133)
!5380 = !DILocalVariable(name: "width", scope: !5375, file: !2575, line: 399, type: !315)
!5381 = !DILocation(line: 0, scope: !5375)
!5382 = !DILocation(line: 391, column: 8, scope: !5375)
!5383 = !DILocation(line: 391, column: 22, scope: !5375)
!5384 = !DILocation(line: 393, column: 6, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5375, file: !2575, line: 393, column: 6)
!5386 = !DILocation(line: 393, column: 10, scope: !5385)
!5387 = !DILocation(line: 393, column: 6, scope: !5375)
!5388 = !DILocation(line: 394, column: 20, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5385, file: !2575, line: 393, column: 18)
!5390 = !DILocation(line: 395, column: 10, scope: !5389)
!5391 = !DILocation(line: 395, column: 3, scope: !5389)
!5392 = !DILocation(line: 399, column: 17, scope: !5375)
!5393 = !DILocation(line: 401, column: 6, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5375, file: !2575, line: 401, column: 6)
!5395 = !DILocation(line: 401, column: 9, scope: !5394)
!5396 = !DILocation(line: 401, column: 6, scope: !5375)
!5397 = !DILocation(line: 402, column: 23, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5394, file: !2575, line: 401, column: 16)
!5399 = !DILocation(line: 403, column: 9, scope: !5398)
!5400 = !DILocation(line: 403, column: 21, scope: !5398)
!5401 = !DILocation(line: 405, column: 11, scope: !5398)
!5402 = !DILocation(line: 404, column: 21, scope: !5398)
!5403 = !DILocation(line: 406, column: 2, scope: !5398)
!5404 = !DILocation(line: 409, column: 1, scope: !5375)
!5405 = distinct !DISubprogram(name: "extract_prec", scope: !2575, file: !2575, line: 420, type: !5194, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !5406)
!5406 = !{!5407, !5408, !5409}
!5407 = !DILocalVariable(name: "conv", arg: 1, scope: !5405, file: !2575, line: 420, type: !4850)
!5408 = !DILocalVariable(name: "sp", arg: 2, scope: !5405, file: !2575, line: 421, type: !133)
!5409 = !DILocalVariable(name: "prec", scope: !5405, file: !2575, line: 435, type: !315)
!5410 = !DILocation(line: 0, scope: !5405)
!5411 = !DILocation(line: 423, column: 24, scope: !5405)
!5412 = !DILocation(line: 423, column: 28, scope: !5405)
!5413 = !DILocation(line: 423, column: 8, scope: !5405)
!5414 = !DILocation(line: 423, column: 21, scope: !5405)
!5415 = !DILocation(line: 425, column: 6, scope: !5405)
!5416 = !DILocation(line: 428, column: 2, scope: !5405)
!5417 = !DILocation(line: 430, column: 6, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5405, file: !2575, line: 430, column: 6)
!5419 = !DILocation(line: 430, column: 10, scope: !5418)
!5420 = !DILocation(line: 430, column: 6, scope: !5405)
!5421 = !DILocation(line: 431, column: 19, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5418, file: !2575, line: 430, column: 18)
!5423 = !DILocation(line: 432, column: 10, scope: !5422)
!5424 = !DILocation(line: 432, column: 3, scope: !5422)
!5425 = !DILocation(line: 435, column: 16, scope: !5405)
!5426 = !DILocation(line: 437, column: 8, scope: !5405)
!5427 = !DILocation(line: 437, column: 19, scope: !5405)
!5428 = !DILocation(line: 439, column: 10, scope: !5405)
!5429 = !DILocation(line: 438, column: 20, scope: !5405)
!5430 = !DILocation(line: 441, column: 9, scope: !5405)
!5431 = !DILocation(line: 442, column: 1, scope: !5405)
!5432 = distinct !DISubprogram(name: "extract_length", scope: !2575, file: !2575, line: 453, type: !5194, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !5433)
!5433 = !{!5434, !5435}
!5434 = !DILocalVariable(name: "conv", arg: 1, scope: !5432, file: !2575, line: 453, type: !4850)
!5435 = !DILocalVariable(name: "sp", arg: 2, scope: !5432, file: !2575, line: 454, type: !133)
!5436 = !DILocation(line: 0, scope: !5432)
!5437 = !DILocation(line: 456, column: 10, scope: !5432)
!5438 = !DILocation(line: 456, column: 2, scope: !5432)
!5439 = !DILocation(line: 458, column: 8, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5441, file: !2575, line: 458, column: 7)
!5441 = distinct !DILexicalBlock(scope: !5432, file: !2575, line: 456, column: 15)
!5442 = !DILocation(line: 458, column: 7, scope: !5440)
!5443 = !DILocation(line: 458, column: 13, scope: !5440)
!5444 = !DILocation(line: 0, scope: !5440)
!5445 = !DILocation(line: 458, column: 7, scope: !5441)
!5446 = !DILocation(line: 459, column: 21, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5440, file: !2575, line: 458, column: 21)
!5448 = !DILocation(line: 460, column: 4, scope: !5447)
!5449 = !DILocation(line: 461, column: 3, scope: !5447)
!5450 = !DILocation(line: 462, column: 21, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5440, file: !2575, line: 461, column: 10)
!5452 = !DILocation(line: 466, column: 8, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5441, file: !2575, line: 466, column: 7)
!5454 = !DILocation(line: 466, column: 7, scope: !5453)
!5455 = !DILocation(line: 466, column: 13, scope: !5453)
!5456 = !DILocation(line: 0, scope: !5453)
!5457 = !DILocation(line: 466, column: 7, scope: !5441)
!5458 = !DILocation(line: 467, column: 21, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5453, file: !2575, line: 466, column: 21)
!5460 = !DILocation(line: 468, column: 4, scope: !5459)
!5461 = !DILocation(line: 469, column: 3, scope: !5459)
!5462 = !DILocation(line: 470, column: 21, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5453, file: !2575, line: 469, column: 10)
!5464 = !DILocation(line: 474, column: 9, scope: !5441)
!5465 = !DILocation(line: 474, column: 20, scope: !5441)
!5466 = !DILocation(line: 475, column: 3, scope: !5441)
!5467 = !DILocation(line: 476, column: 3, scope: !5441)
!5468 = !DILocation(line: 478, column: 9, scope: !5441)
!5469 = !DILocation(line: 478, column: 20, scope: !5441)
!5470 = !DILocation(line: 479, column: 3, scope: !5441)
!5471 = !DILocation(line: 480, column: 3, scope: !5441)
!5472 = !DILocation(line: 482, column: 9, scope: !5441)
!5473 = !DILocation(line: 482, column: 20, scope: !5441)
!5474 = !DILocation(line: 483, column: 3, scope: !5441)
!5475 = !DILocation(line: 484, column: 3, scope: !5441)
!5476 = !DILocation(line: 486, column: 9, scope: !5441)
!5477 = !DILocation(line: 486, column: 20, scope: !5441)
!5478 = !DILocation(line: 487, column: 3, scope: !5441)
!5479 = !DILocation(line: 492, column: 21, scope: !5441)
!5480 = !DILocation(line: 493, column: 3, scope: !5441)
!5481 = !DILocation(line: 495, column: 9, scope: !5441)
!5482 = !DILocation(line: 495, column: 20, scope: !5441)
!5483 = !DILocation(line: 496, column: 3, scope: !5441)
!5484 = !DILocation(line: 498, column: 2, scope: !5432)
!5485 = distinct !DISubprogram(name: "extract_specifier", scope: !2575, file: !2575, line: 513, type: !5194, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !5486)
!5486 = !{!5487, !5488, !5489, !5490}
!5487 = !DILocalVariable(name: "conv", arg: 1, scope: !5485, file: !2575, line: 513, type: !4850)
!5488 = !DILocalVariable(name: "sp", arg: 2, scope: !5485, file: !2575, line: 514, type: !133)
!5489 = !DILocalVariable(name: "unsupported", scope: !5485, file: !2575, line: 516, type: !146)
!5490 = !DILabel(scope: !5491, name: "int_conv", file: !2575, line: 526)
!5491 = distinct !DILexicalBlock(scope: !5485, file: !2575, line: 520, column: 27)
!5492 = !DILocation(line: 0, scope: !5485)
!5493 = !DILocation(line: 518, column: 20, scope: !5485)
!5494 = !DILocation(line: 518, column: 8, scope: !5485)
!5495 = !DILocation(line: 518, column: 18, scope: !5485)
!5496 = !DILocation(line: 520, column: 2, scope: !5485)
!5497 = !DILocation(line: 525, column: 3, scope: !5491)
!5498 = !DILocation(line: 0, scope: !5491)
!5499 = !DILocation(line: 526, column: 1, scope: !5491)
!5500 = !DILocation(line: 528, column: 24, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5491, file: !2575, line: 528, column: 7)
!5502 = !DILocation(line: 528, column: 7, scope: !5491)
!5503 = !DILocation(line: 535, column: 23, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5491, file: !2575, line: 535, column: 7)
!5505 = !DILocation(line: 535, column: 7, scope: !5491)
!5506 = !DILocation(line: 536, column: 36, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5504, file: !2575, line: 535, column: 31)
!5508 = !DILocation(line: 537, column: 3, scope: !5507)
!5509 = !DILocation(line: 570, column: 9, scope: !5491)
!5510 = !DILocation(line: 570, column: 23, scope: !5491)
!5511 = !DILocation(line: 575, column: 4, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5513, file: !2575, line: 573, column: 48)
!5513 = distinct !DILexicalBlock(scope: !5491, file: !2575, line: 573, column: 7)
!5514 = !DILocation(line: 603, column: 9, scope: !5491)
!5515 = !DILocation(line: 603, column: 23, scope: !5491)
!5516 = !DILocation(line: 605, column: 24, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5491, file: !2575, line: 605, column: 7)
!5518 = !DILocation(line: 605, column: 7, scope: !5491)
!5519 = !DILocation(line: 612, column: 9, scope: !5491)
!5520 = !DILocation(line: 612, column: 23, scope: !5491)
!5521 = !DILocation(line: 619, column: 24, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5491, file: !2575, line: 619, column: 7)
!5523 = !DILocation(line: 619, column: 7, scope: !5491)
!5524 = !DILocation(line: 625, column: 9, scope: !5491)
!5525 = !DILocation(line: 625, column: 17, scope: !5491)
!5526 = !DILocation(line: 626, column: 3, scope: !5491)
!5527 = !DILocation(line: 629, column: 20, scope: !5485)
!5528 = !DILocation(line: 629, column: 8, scope: !5485)
!5529 = !DILocation(line: 518, column: 23, scope: !5485)
!5530 = !DILocation(line: 631, column: 2, scope: !5485)
!5531 = distinct !DISubprogram(name: "extract_decimal", scope: !2575, file: !2575, line: 318, type: !5532, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !5535)
!5532 = !DISubroutineType(types: !5533)
!5533 = !{!315, !5534}
!5534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 32)
!5535 = !{!5536, !5537, !5538}
!5536 = !DILocalVariable(name: "str", arg: 1, scope: !5531, file: !2575, line: 318, type: !5534)
!5537 = !DILocalVariable(name: "sp", scope: !5531, file: !2575, line: 320, type: !133)
!5538 = !DILocalVariable(name: "val", scope: !5531, file: !2575, line: 321, type: !315)
!5539 = !DILocation(line: 0, scope: !5531)
!5540 = !DILocation(line: 320, column: 19, scope: !5531)
!5541 = !DILocation(line: 323, column: 37, scope: !5531)
!5542 = !DILocation(line: 323, column: 17, scope: !5531)
!5543 = !DILocation(line: 323, column: 9, scope: !5531)
!5544 = !DILocation(line: 323, column: 2, scope: !5531)
!5545 = !DILocation(line: 324, column: 13, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5531, file: !2575, line: 323, column: 43)
!5547 = !DILocation(line: 324, column: 24, scope: !5546)
!5548 = !DILocation(line: 324, column: 19, scope: !5546)
!5549 = !DILocation(line: 324, column: 27, scope: !5546)
!5550 = distinct !{!5550, !5544, !5551}
!5551 = !DILocation(line: 325, column: 2, scope: !5531)
!5552 = !DILocation(line: 326, column: 7, scope: !5531)
!5553 = !DILocation(line: 327, column: 2, scope: !5531)
!5554 = distinct !DISubprogram(name: "isdigit", scope: !5333, file: !5333, line: 43, type: !439, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !5555)
!5555 = !{!5556}
!5556 = !DILocalVariable(name: "a", arg: 1, scope: !5554, file: !5333, line: 43, type: !118)
!5557 = !DILocation(line: 0, scope: !5554)
!5558 = !DILocation(line: 45, column: 29, scope: !5554)
!5559 = !DILocation(line: 45, column: 45, scope: !5554)
!5560 = !DILocation(line: 45, column: 2, scope: !5554)
!5561 = distinct !DISubprogram(name: "assert_post_action", scope: !5562, file: !5562, line: 26, type: !5563, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !5565)
!5562 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5563 = !DISubroutineType(types: !5564)
!5564 = !{null, !133, !32}
!5565 = !{!5566, !5567}
!5566 = !DILocalVariable(name: "file", arg: 1, scope: !5561, file: !5562, line: 26, type: !133)
!5567 = !DILocalVariable(name: "line", arg: 2, scope: !5561, file: !5562, line: 26, type: !32)
!5568 = !DILocation(line: 0, scope: !5561)
!5569 = !DILocation(line: 43, column: 2, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5561, file: !5562, line: 43, column: 2)
!5571 = !{i64 2154750196, i64 2154750212, i64 2154750238, i64 2154750266, i64 2154750286}
!5572 = !DILocation(line: 44, column: 1, scope: !5561)
!5573 = distinct !DISubprogram(name: "assert_print", scope: !5562, file: !5562, line: 46, type: !3754, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !5574)
!5574 = !{!5575, !5576}
!5575 = !DILocalVariable(name: "fmt", arg: 1, scope: !5573, file: !5562, line: 46, type: !133)
!5576 = !DILocalVariable(name: "ap", scope: !5573, file: !5562, line: 48, type: !5577)
!5577 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3688, line: 99, baseType: !5578)
!5578 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3688, line: 40, baseType: !5579)
!5579 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5562, baseType: !5580)
!5580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5581)
!5581 = !{!5582}
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5580, file: !5562, line: 48, baseType: !117, size: 32)
!5583 = !DILocation(line: 0, scope: !5573)
!5584 = !DILocation(line: 48, column: 2, scope: !5573)
!5585 = !DILocation(line: 48, column: 10, scope: !5573)
!5586 = !DILocation(line: 50, column: 2, scope: !5573)
!5587 = !DILocation(line: 52, column: 2, scope: !5573)
!5588 = !DILocation(line: 54, column: 2, scope: !5573)
!5589 = !DILocation(line: 55, column: 1, scope: !5573)
!5590 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5591, file: !5591, line: 9, type: !365, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !2123)
!5591 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!5592 = !DILocation(line: 11, column: 1, scope: !5590)
!5593 = !{i64 2147561852, i64 2147561895, i64 2147561935}
!5594 = !DILocation(line: 12, column: 1, scope: !5590)
!5595 = !{i64 2147566079, i64 2147566122, i64 2147566162}
!5596 = !DILocation(line: 13, column: 1, scope: !5590)
!5597 = !{i64 2147566288, i64 2147566331, i64 2147566371}
!5598 = !DILocation(line: 14, column: 1, scope: !5590)
!5599 = !{i64 2147566457, i64 2147566500, i64 2147566540}
!5600 = !DILocation(line: 15, column: 1, scope: !5590)
!5601 = !{i64 2147566620, i64 2147566663, i64 2147566703}
!5602 = !DILocation(line: 16, column: 1, scope: !5590)
!5603 = !{i64 2147566804, i64 2147566847, i64 2147566887}
!5604 = !DILocation(line: 17, column: 1, scope: !5590)
!5605 = !{i64 2147566983, i64 2147567026, i64 2147567066}
!5606 = !DILocation(line: 18, column: 1, scope: !5590)
!5607 = !{i64 2147567225, i64 2147567268, i64 2147567308}
!5608 = !DILocation(line: 19, column: 1, scope: !5590)
!5609 = !{i64 2147567460, i64 2147567503, i64 2147567543}
!5610 = !DILocation(line: 20, column: 1, scope: !5590)
!5611 = !{i64 2147567647, i64 2147567690, i64 2147567730}
!5612 = !DILocation(line: 21, column: 1, scope: !5590)
!5613 = !{i64 2147567863, i64 2147567906, i64 2147567946}
!5614 = !DILocation(line: 22, column: 1, scope: !5590)
!5615 = !{i64 2147568066, i64 2147568109, i64 2147568149}
!5616 = !DILocation(line: 23, column: 1, scope: !5590)
!5617 = !{i64 2147568269, i64 2147568312, i64 2147568352}
!5618 = !DILocation(line: 24, column: 1, scope: !5590)
!5619 = !{i64 2147568444, i64 2147568487, i64 2147568527}
!5620 = !DILocation(line: 25, column: 1, scope: !5590)
!5621 = !{i64 2147568654, i64 2147568697, i64 2147568737}
!5622 = !DILocation(line: 26, column: 1, scope: !5590)
!5623 = !{i64 2147568858, i64 2147568901, i64 2147568941}
!5624 = !DILocation(line: 27, column: 1, scope: !5590)
!5625 = !{i64 2147569051, i64 2147569094, i64 2147569134}
!5626 = !DILocation(line: 28, column: 1, scope: !5590)
!5627 = !{i64 2147569253, i64 2147569296, i64 2147569336}
!5628 = !DILocation(line: 29, column: 1, scope: !5590)
!5629 = !{i64 2147569480, i64 2147569523, i64 2147569563}
!5630 = !DILocation(line: 30, column: 1, scope: !5590)
!5631 = !{i64 2147569682, i64 2147569725, i64 2147569765}
!5632 = !DILocation(line: 31, column: 1, scope: !5590)
!5633 = !{i64 2147569897, i64 2147569940, i64 2147569980}
!5634 = !DILocation(line: 32, column: 1, scope: !5590)
!5635 = !{i64 2147570069, i64 2147570112, i64 2147570152}
!5636 = !DILocation(line: 33, column: 1, scope: !5590)
!5637 = !{i64 2147570271, i64 2147570314, i64 2147570354}
!5638 = !DILocation(line: 34, column: 1, scope: !5590)
!5639 = !{i64 2147570497, i64 2147570540, i64 2147570580}
!5640 = !DILocation(line: 35, column: 1, scope: !5590)
!5641 = !{i64 2147570696, i64 2147570739, i64 2147570779}
!5642 = !DILocation(line: 36, column: 1, scope: !5590)
!5643 = !{i64 2147570871, i64 2147570914, i64 2147570954}
!5644 = !DILocation(line: 37, column: 1, scope: !5590)
!5645 = !{i64 2147571124, i64 2147571167, i64 2147571207}
!5646 = !DILocation(line: 38, column: 1, scope: !5590)
!5647 = !{i64 2147571365, i64 2147571408, i64 2147571448}
!5648 = !DILocation(line: 39, column: 1, scope: !5590)
!5649 = !{i64 2147571600, i64 2147571643, i64 2147571683}
!5650 = !DILocation(line: 40, column: 1, scope: !5590)
!5651 = !{i64 2147571832, i64 2147571875, i64 2147571915}
!5652 = !DILocation(line: 41, column: 1, scope: !5590)
!5653 = !{i64 2147572058, i64 2147572101, i64 2147572141}
!5654 = !DILocation(line: 42, column: 1, scope: !5590)
!5655 = !{i64 2147572284, i64 2147572327, i64 2147572367}
!5656 = !DILocation(line: 43, column: 1, scope: !5590)
!5657 = !{i64 2147572510, i64 2147572553, i64 2147572593}
!5658 = !DILocation(line: 44, column: 1, scope: !5590)
!5659 = !{i64 2147572745, i64 2147572788, i64 2147572828}
!5660 = !DILocation(line: 45, column: 1, scope: !5590)
!5661 = !{i64 2147572971, i64 2147573014, i64 2147573054}
!5662 = !DILocation(line: 46, column: 1, scope: !5590)
!5663 = !{i64 2147573218, i64 2147573261, i64 2147573301}
!5664 = !DILocation(line: 47, column: 1, scope: !5590)
!5665 = !{i64 2147573447, i64 2147573490, i64 2147573530}
!5666 = !DILocation(line: 48, column: 1, scope: !5590)
!5667 = !{i64 2147573679, i64 2147573722, i64 2147573762}
!5668 = !DILocation(line: 49, column: 1, scope: !5590)
!5669 = !{i64 2147573923, i64 2147573966, i64 2147574006}
!5670 = !DILocation(line: 50, column: 1, scope: !5590)
!5671 = !{i64 2147574161, i64 2147574204, i64 2147574244}
!5672 = !DILocation(line: 51, column: 1, scope: !5590)
!5673 = !{i64 2147574435, i64 2147574478, i64 2147574518}
!5674 = !DILocation(line: 52, column: 1, scope: !5590)
!5675 = !{i64 2147574673, i64 2147574716, i64 2147574756}
!5676 = !DILocation(line: 53, column: 1, scope: !5590)
!5677 = !{i64 2147578987, i64 2147579030, i64 2147579070}
!5678 = !DILocation(line: 54, column: 1, scope: !5590)
!5679 = !{i64 2147579231, i64 2147579274, i64 2147579314}
!5680 = !DILocation(line: 55, column: 1, scope: !5590)
!5681 = !{i64 2147579466, i64 2147579509, i64 2147579549}
!5682 = !DILocation(line: 56, column: 1, scope: !5590)
!5683 = !{i64 2147579716, i64 2147579759, i64 2147579799}
!5684 = !DILocation(line: 57, column: 1, scope: !5590)
!5685 = !{i64 2147579963, i64 2147580006, i64 2147580046}
!5686 = !DILocation(line: 58, column: 1, scope: !5590)
!5687 = !{i64 2147580198, i64 2147580241, i64 2147580281}
!5688 = !DILocation(line: 59, column: 1, scope: !5590)
!5689 = !{i64 2147580433, i64 2147580476, i64 2147580516}
!5690 = !DILocation(line: 60, column: 1, scope: !5590)
!5691 = !{i64 2147580668, i64 2147580711, i64 2147580751}
!5692 = !DILocation(line: 61, column: 1, scope: !5590)
!5693 = !{i64 2147580906, i64 2147580949, i64 2147580989}
!5694 = !DILocation(line: 62, column: 1, scope: !5590)
!5695 = !{i64 2147581147, i64 2147581190, i64 2147581230}
!5696 = !DILocation(line: 63, column: 1, scope: !5590)
!5697 = !{i64 2147581427, i64 2147581470, i64 2147581510}
!5698 = !DILocation(line: 64, column: 1, scope: !5590)
!5699 = !{i64 2147581686, i64 2147581729, i64 2147581769}
!5700 = !DILocation(line: 65, column: 1, scope: !5590)
!5701 = !{i64 2147581915, i64 2147581958, i64 2147581998}
!5702 = !DILocation(line: 66, column: 1, scope: !5590)
!5703 = !{i64 2147582141, i64 2147582184, i64 2147582224}
!5704 = !DILocation(line: 67, column: 1, scope: !5590)
!5705 = !{i64 2147582379, i64 2147582422, i64 2147582462}
!5706 = !DILocation(line: 68, column: 1, scope: !5590)
!5707 = !{i64 2147582608, i64 2147582651, i64 2147582691}
!5708 = !DILocation(line: 69, column: 1, scope: !5590)
!5709 = !{i64 2147582816, i64 2147582859, i64 2147582899}
!5710 = !DILocation(line: 70, column: 1, scope: !5590)
!5711 = !{i64 2147583027, i64 2147583070, i64 2147583110}
!5712 = !DILocation(line: 71, column: 1, scope: !5590)
!5713 = !{i64 2147583262, i64 2147583305, i64 2147583345}
!5714 = !DILocation(line: 72, column: 1, scope: !5590)
!5715 = !{i64 2147583491, i64 2147583534, i64 2147583574}
!5716 = !DILocation(line: 73, column: 1, scope: !5590)
!5717 = !{i64 2147583729, i64 2147583772, i64 2147583812}
!5718 = !DILocation(line: 74, column: 1, scope: !5590)
!5719 = !{i64 2147583961, i64 2147584004, i64 2147584044}
!5720 = !DILocation(line: 75, column: 1, scope: !5590)
!5721 = !{i64 2147584187, i64 2147584230, i64 2147584270}
!5722 = !DILocation(line: 76, column: 1, scope: !5590)
!5723 = !{i64 2147584404, i64 2147584447, i64 2147584487}
!5724 = !DILocation(line: 77, column: 1, scope: !5590)
!5725 = !{i64 2147584636, i64 2147584679, i64 2147584719}
!5726 = !DILocation(line: 78, column: 1, scope: !5590)
!5727 = !{i64 2147584862, i64 2147584905, i64 2147584945}
!5728 = !DILocation(line: 79, column: 1, scope: !5590)
!5729 = !{i64 2147585076, i64 2147585119, i64 2147585159}
!5730 = !DILocation(line: 80, column: 1, scope: !5590)
!5731 = !{i64 2147585296, i64 2147585339, i64 2147585379}
!5732 = !DILocation(line: 81, column: 1, scope: !5590)
!5733 = !{i64 2147585528, i64 2147585571, i64 2147585611}
!5734 = !DILocation(line: 82, column: 1, scope: !5590)
!5735 = !{i64 2147585736, i64 2147585779, i64 2147585819}
!5736 = !DILocation(line: 83, column: 1, scope: !5590)
!5737 = !{i64 2147585941, i64 2147585984, i64 2147586024}
!5738 = !DILocation(line: 84, column: 1, scope: !5590)
!5739 = !{i64 2147586158, i64 2147586201, i64 2147586241}
!5740 = !DILocation(line: 85, column: 1, scope: !5590)
!5741 = !{i64 2147586372, i64 2147586415, i64 2147586455}
!5742 = !DILocation(line: 86, column: 1, scope: !5590)
!5743 = !{i64 2147586598, i64 2147586641, i64 2147586681}
!5744 = !DILocation(line: 87, column: 1, scope: !5590)
!5745 = !{i64 2147586818, i64 2147586861, i64 2147586901}
!5746 = !DILocation(line: 88, column: 1, scope: !5590)
!5747 = !{i64 2147591084, i64 2147591127, i64 2147591167}
!5748 = !DILocation(line: 89, column: 1, scope: !5590)
!5749 = !{i64 2147591316, i64 2147591359, i64 2147591399}
!5750 = !DILocation(line: 90, column: 1, scope: !5590)
!5751 = !{i64 2147591551, i64 2147591594, i64 2147591634}
!5752 = !DILocation(line: 91, column: 1, scope: !5590)
!5753 = !{i64 2147591801, i64 2147591844, i64 2147591884}
!5754 = !DILocation(line: 92, column: 1, scope: !5590)
!5755 = !{i64 2147592051, i64 2147592094, i64 2147592134}
!5756 = !DILocation(line: 93, column: 1, scope: !5590)
!5757 = !{i64 2147592289, i64 2147592332, i64 2147592372}
!5758 = !DILocation(line: 94, column: 1, scope: !5590)
!5759 = !{i64 2147592500, i64 2147592543, i64 2147592583}
!5760 = !DILocation(line: 95, column: 1, scope: !5590)
!5761 = !{i64 2147592717, i64 2147592760, i64 2147592800}
!5762 = !DILocation(line: 96, column: 1, scope: !5590)
!5763 = !{i64 2147592913, i64 2147592956, i64 2147592996}
!5764 = !DILocation(line: 97, column: 1, scope: !5590)
!5765 = !{i64 2147593115, i64 2147593158, i64 2147593198}
!5766 = !DILocation(line: 98, column: 1, scope: !5590)
!5767 = !{i64 2147593308, i64 2147593351, i64 2147593391}
!5768 = !DILocation(line: 99, column: 1, scope: !5590)
!5769 = !{i64 2147593516, i64 2147593559, i64 2147593599}
!5770 = !DILocation(line: 100, column: 1, scope: !5590)
!5771 = !{i64 2147593712, i64 2147593755, i64 2147593795}
!5772 = !DILocation(line: 101, column: 1, scope: !5590)
!5773 = !{i64 2147593920, i64 2147593963, i64 2147594003}
!5774 = !DILocation(line: 102, column: 1, scope: !5590)
!5775 = !{i64 2147594131, i64 2147594174, i64 2147594214}
!5776 = !DILocation(line: 103, column: 1, scope: !5590)
!5777 = !{i64 2147594330, i64 2147594373, i64 2147594413}
!5778 = !DILocation(line: 104, column: 1, scope: !5590)
!5779 = !{i64 2147594505, i64 2147594548, i64 2147594588}
!5780 = !DILocation(line: 105, column: 1, scope: !5590)
!5781 = !{i64 2147594689, i64 2147594732, i64 2147594772}
!5782 = !DILocation(line: 106, column: 1, scope: !5590)
!5783 = !{i64 2147594891, i64 2147594934, i64 2147594974}
!5784 = !DILocation(line: 107, column: 1, scope: !5590)
!5785 = !{i64 2147595090, i64 2147595133, i64 2147595173}
!5786 = !DILocation(line: 108, column: 1, scope: !5590)
!5787 = !{i64 2147595256, i64 2147595299, i64 2147595339}
!5788 = !DILocation(line: 109, column: 1, scope: !5590)
!5789 = !{i64 2147595440, i64 2147595483, i64 2147595523}
!5790 = !DILocation(line: 110, column: 1, scope: !5590)
!5791 = !{i64 2147595630, i64 2147595673, i64 2147595713}
!5792 = !DILocation(line: 111, column: 1, scope: !5590)
!5793 = !{i64 2147595814, i64 2147595857, i64 2147595897}
!5794 = !DILocation(line: 112, column: 1, scope: !5590)
!5795 = !{i64 2147596028, i64 2147596071, i64 2147596111}
!5796 = !DILocation(line: 113, column: 1, scope: !5590)
!5797 = !{i64 2147596239, i64 2147596282, i64 2147596322}
!5798 = !DILocation(line: 114, column: 1, scope: !5590)
!5799 = !{i64 2147596462, i64 2147596505, i64 2147596545}
!5800 = !DILocation(line: 115, column: 1, scope: !5590)
!5801 = !{i64 2147596646, i64 2147596689, i64 2147596729}
!5802 = !DILocation(line: 116, column: 1, scope: !5590)
!5803 = !{i64 2147596860, i64 2147596903, i64 2147596943}
!5804 = !DILocation(line: 117, column: 1, scope: !5590)
!5805 = !{i64 2147597026, i64 2147597069, i64 2147597109}
!5806 = !DILocation(line: 118, column: 1, scope: !5590)
!5807 = !{i64 2147597207, i64 2147597250, i64 2147597290}
!5808 = !DILocation(line: 119, column: 1, scope: !5590)
!5809 = !{i64 2147597400, i64 2147597443, i64 2147597483}
!5810 = !DILocation(line: 120, column: 1, scope: !5590)
!5811 = !{i64 2147597626, i64 2147597669, i64 2147597709}
!5812 = !DILocation(line: 121, column: 1, scope: !5590)
!5813 = !{i64 2147597840, i64 2147597883, i64 2147597923}
!5814 = !DILocation(line: 122, column: 1, scope: !5590)
!5815 = !{i64 2147598066, i64 2147598109, i64 2147598149}
!5816 = !DILocation(line: 123, column: 1, scope: !5590)
!5817 = !{i64 2147598283, i64 2147598326, i64 2147598366}
!5818 = !DILocation(line: 124, column: 1, scope: !5590)
!5819 = !{i64 2147598560, i64 2147598603, i64 2147598643}
!5820 = !DILocation(line: 125, column: 1, scope: !5590)
!5821 = !{i64 2147598786, i64 2147598829, i64 2147598869}
!5822 = !DILocation(line: 126, column: 1, scope: !5590)
!5823 = !{i64 2147598994, i64 2147599037, i64 2147599077}
!5824 = !DILocation(line: 127, column: 1, scope: !5590)
!5825 = !{i64 2147599190, i64 2147599233, i64 2147599273}
!5826 = !DILocation(line: 128, column: 1, scope: !5590)
!5827 = !{i64 2147599455, i64 2147599498, i64 2147599538}
!5828 = !DILocation(line: 129, column: 1, scope: !5590)
!5829 = !{i64 2147599669, i64 2147599712, i64 2147599752}
!5830 = !DILocation(line: 130, column: 1, scope: !5590)
!5831 = !{i64 2147599844, i64 2147599887, i64 2147599927}
!5832 = !DILocation(line: 131, column: 1, scope: !5590)
!5833 = !{i64 2147600098, i64 2147600141, i64 2147600181}
!5834 = !DILocation(line: 132, column: 1, scope: !5590)
!5835 = !{i64 2147604358, i64 2147604401, i64 2147604441}
!5836 = !DILocation(line: 133, column: 1, scope: !5590)
!5837 = !{i64 2147604600, i64 2147604643, i64 2147604683}
!5838 = !DILocation(line: 134, column: 1, scope: !5590)
!5839 = !{i64 2147604763, i64 2147604806, i64 2147604846}
!5840 = !DILocation(line: 135, column: 1, scope: !5590)
!5841 = !{i64 2147604950, i64 2147604993, i64 2147605033}
!5842 = !DILocation(line: 136, column: 1, scope: !5590)
!5843 = !{i64 2147605143, i64 2147605186, i64 2147605226}
!5844 = !DILocation(line: 137, column: 1, scope: !5590)
!5845 = !{i64 2147605326, i64 2147605369, i64 2147605409}
!5846 = !DILocation(line: 138, column: 1, scope: !5590)
!5847 = !{i64 2147605540, i64 2147605583, i64 2147605623}
!5848 = !DILocation(line: 139, column: 1, scope: !5590)
!5849 = !{i64 2147605751, i64 2147605794, i64 2147605834}
!5850 = !DILocation(line: 140, column: 1, scope: !5590)
!5851 = !{i64 2147605971, i64 2147606014, i64 2147606054}
!5852 = !DILocation(line: 141, column: 1, scope: !5590)
!5853 = !{i64 2147606178, i64 2147606221, i64 2147606261}
!5854 = !DILocation(line: 142, column: 1, scope: !5590)
!5855 = !{i64 2147606451, i64 2147606494, i64 2147606534}
!5856 = !DILocation(line: 143, column: 1, scope: !5590)
!5857 = !{i64 2147606699, i64 2147606742, i64 2147606782}
!5858 = !DILocation(line: 144, column: 1, scope: !5590)
!5859 = !{i64 2147606898, i64 2147606941, i64 2147606981}
!5860 = !DILocation(line: 145, column: 1, scope: !5590)
!5861 = !{i64 2147607133, i64 2147607176, i64 2147607216}
!5862 = !DILocation(line: 146, column: 1, scope: !5590)
!5863 = !{i64 2147607383, i64 2147607426, i64 2147607466}
!5864 = !DILocation(line: 147, column: 1, scope: !5590)
!5865 = !{i64 2147607585, i64 2147607628, i64 2147607668}
!5866 = !DILocation(line: 148, column: 1, scope: !5590)
!5867 = !{i64 2147607808, i64 2147607851, i64 2147607891}
!5868 = !DILocation(line: 149, column: 1, scope: !5590)
!5869 = !{i64 2147608022, i64 2147608065, i64 2147608105}
!5870 = !DILocation(line: 150, column: 1, scope: !5590)
!5871 = !{i64 2147608266, i64 2147608309, i64 2147608349}
!5872 = !DILocation(line: 151, column: 1, scope: !5590)
!5873 = !{i64 2147608495, i64 2147608538, i64 2147608578}
!5874 = !DILocation(line: 152, column: 1, scope: !5590)
!5875 = !{i64 2147608724, i64 2147608767, i64 2147608807}
!5876 = !DILocation(line: 153, column: 1, scope: !5590)
!5877 = !{i64 2147608932, i64 2147608975, i64 2147609015}
!5878 = !DILocation(line: 154, column: 1, scope: !5590)
!5879 = !{i64 2147609170, i64 2147609213, i64 2147609253}
!5880 = !DILocation(line: 155, column: 1, scope: !5590)
!5881 = !{i64 2147609396, i64 2147609439, i64 2147609479}
!5882 = !DILocation(line: 156, column: 1, scope: !5590)
!5883 = !{i64 2147609655, i64 2147609698, i64 2147609738}
!5884 = !DILocation(line: 157, column: 1, scope: !5590)
!5885 = !{i64 2147609875, i64 2147609918, i64 2147609958}
!5886 = !DILocation(line: 158, column: 1, scope: !5590)
!5887 = !{i64 2147610107, i64 2147610150, i64 2147610190}
!5888 = !DILocation(line: 159, column: 1, scope: !5590)
!5889 = !{i64 2147610348, i64 2147610391, i64 2147610431}
!5890 = !DILocation(line: 160, column: 1, scope: !5590)
!5891 = !{i64 2147610589, i64 2147610632, i64 2147610672}
!5892 = !DILocation(line: 161, column: 1, scope: !5590)
!5893 = !{i64 2147610812, i64 2147610855, i64 2147610895}
!5894 = !DILocation(line: 162, column: 1, scope: !5590)
!5895 = !{i64 2147611029, i64 2147611072, i64 2147611112}
!5896 = !DILocation(line: 163, column: 1, scope: !5590)
!5897 = !{i64 2147611270, i64 2147611313, i64 2147611353}
!5898 = !DILocation(line: 164, column: 1, scope: !5590)
!5899 = !{i64 2147611457, i64 2147611500, i64 2147611540}
!5900 = !DILocation(line: 165, column: 1, scope: !5590)
!5901 = !{i64 2147611644, i64 2147611687, i64 2147611727}
!5902 = !DILocation(line: 166, column: 1, scope: !5590)
!5903 = !{i64 2147611807, i64 2147611850, i64 2147611890}
!5904 = !DILocation(line: 167, column: 1, scope: !5590)
!5905 = !{i64 2147612066, i64 2147612109, i64 2147612149}
!5906 = !DILocation(line: 168, column: 1, scope: !5590)
!5907 = !{i64 2147612289, i64 2147612332, i64 2147612372}
!5908 = !DILocation(line: 169, column: 1, scope: !5590)
!5909 = !{i64 2147612518, i64 2147612561, i64 2147612601}
!5910 = !DILocation(line: 170, column: 1, scope: !5590)
!5911 = !{i64 2147612714, i64 2147612757, i64 2147612797}
!5912 = !DILocation(line: 171, column: 1, scope: !5590)
!5913 = !{i64 2147616987, i64 2147617030, i64 2147617070}
!5914 = !DILocation(line: 172, column: 1, scope: !5590)
!5915 = !{i64 2147617208, i64 2147617251, i64 2147617291}
!5916 = !DILocation(line: 173, column: 1, scope: !5590)
!5917 = !{i64 2147617422, i64 2147617465, i64 2147617505}
!5918 = !DILocation(line: 174, column: 1, scope: !5590)
!5919 = !{i64 2147617612, i64 2147617655, i64 2147617695}
!5920 = !DILocation(line: 175, column: 1, scope: !5590)
!5921 = !{i64 2147617811, i64 2147617854, i64 2147617894}
!5922 = !DILocation(line: 176, column: 1, scope: !5590)
!5923 = !{i64 2147618016, i64 2147618059, i64 2147618099}
!5924 = !DILocation(line: 177, column: 1, scope: !5590)
!5925 = !{i64 2147618236, i64 2147618279, i64 2147618319}
!5926 = !DILocation(line: 178, column: 1, scope: !5590)
!5927 = !{i64 2147618437, i64 2147618480, i64 2147618520}
!5928 = !DILocation(line: 179, column: 1, scope: !5590)
!5929 = !{i64 2147618636, i64 2147618679, i64 2147618719}
!5930 = !DILocation(line: 180, column: 1, scope: !5590)
!5931 = !{i64 2147618841, i64 2147618884, i64 2147618924}
!5932 = !DILocation(line: 181, column: 1, scope: !5590)
!5933 = !{i64 2147619010, i64 2147619053, i64 2147619093}
!5934 = !DILocation(line: 182, column: 1, scope: !5590)
!5935 = !{i64 2147619194, i64 2147619237, i64 2147619277}
!5936 = !DILocation(line: 183, column: 1, scope: !5590)
!5937 = !{i64 2147619378, i64 2147619421, i64 2147619461}
!5938 = !DILocation(line: 184, column: 1, scope: !5590)
!5939 = !{i64 2147619565, i64 2147619608, i64 2147619648}
!5940 = !DILocation(line: 185, column: 1, scope: !5590)
!5941 = !{i64 2147619749, i64 2147619792, i64 2147619832}
!5942 = !DILocation(line: 186, column: 1, scope: !5590)
!5943 = !{i64 2147619987, i64 2147620030, i64 2147620070}
!5944 = !DILocation(line: 187, column: 1, scope: !5590)
!5945 = !{i64 2147620217, i64 2147620260, i64 2147620300}
!5946 = !DILocation(line: 188, column: 1, scope: !5590)
!5947 = !{i64 2147620446, i64 2147620489, i64 2147620529}
!5948 = !DILocation(line: 189, column: 1, scope: !5590)
!5949 = !{i64 2147620633, i64 2147620676, i64 2147620716}
!5950 = !DILocation(line: 190, column: 1, scope: !5590)
!5951 = !{i64 2147620829, i64 2147620872, i64 2147620912}
!5952 = !DILocation(line: 191, column: 1, scope: !5590)
!5953 = !{i64 2147621037, i64 2147621080, i64 2147621120}
!5954 = !DILocation(line: 192, column: 1, scope: !5590)
!5955 = !{i64 2147621249, i64 2147621292, i64 2147621332}
!5956 = !DILocation(line: 193, column: 1, scope: !5590)
!5957 = !{i64 2147621448, i64 2147621491, i64 2147621531}
!5958 = !DILocation(line: 194, column: 1, scope: !5590)
!5959 = !{i64 2147621686, i64 2147621729, i64 2147621769}
!5960 = !DILocation(line: 195, column: 1, scope: !5590)
!5961 = !{i64 2147621882, i64 2147621925, i64 2147621965}
!5962 = !DILocation(line: 196, column: 1, scope: !5590)
!5963 = !{i64 2147622084, i64 2147622127, i64 2147622167}
!5964 = !DILocation(line: 197, column: 1, scope: !5590)
!5965 = !{i64 2147622277, i64 2147622320, i64 2147622360}
!5966 = !DILocation(line: 198, column: 1, scope: !5590)
!5967 = !{i64 2147622511, i64 2147622554, i64 2147622594}
!5968 = !DILocation(line: 199, column: 1, scope: !5590)
!5969 = !{i64 2147622674, i64 2147622717, i64 2147622757}
!5970 = !DILocation(line: 200, column: 1, scope: !5590)
!5971 = !{i64 2147622913, i64 2147622956, i64 2147622996}
!5972 = !DILocation(line: 201, column: 1, scope: !5590)
!5973 = !{i64 2147623152, i64 2147623195, i64 2147623235}
!5974 = !DILocation(line: 202, column: 1, scope: !5590)
!5975 = !{i64 2147623388, i64 2147623431, i64 2147623471}
!5976 = !DILocation(line: 203, column: 1, scope: !5590)
!5977 = !{i64 2147623618, i64 2147623661, i64 2147623701}
!5978 = !DILocation(line: 204, column: 1, scope: !5590)
!5979 = !{i64 2147623805, i64 2147623848, i64 2147623888}
!5980 = !DILocation(line: 205, column: 1, scope: !5590)
!5981 = !{i64 2147624004, i64 2147624047, i64 2147624087}
!5982 = !DILocation(line: 206, column: 1, scope: !5590)
!5983 = !{i64 2147624275, i64 2147624318, i64 2147624358}
!5984 = !DILocation(line: 207, column: 1, scope: !5590)
!5985 = !{i64 2147624450, i64 2147624493, i64 2147624533}
!5986 = !DILocation(line: 208, column: 1, scope: !5590)
!5987 = !{i64 2147624684, i64 2147624727, i64 2147624767}
!5988 = !DILocation(line: 209, column: 1, scope: !5590)
!5989 = !{i64 2147624892, i64 2147624935, i64 2147624975}
!5990 = !DILocation(line: 210, column: 1, scope: !5590)
!5991 = !{i64 2147625110, i64 2147625153, i64 2147625193}
!5992 = !DILocation(line: 211, column: 1, scope: !5590)
!5993 = !{i64 2147625300, i64 2147625343, i64 2147625383}
!5994 = !DILocation(line: 212, column: 1, scope: !5590)
!5995 = !{i64 2147625496, i64 2147625539, i64 2147625579}
!5996 = !DILocation(line: 213, column: 1, scope: !5590)
!5997 = !{i64 2147625702, i64 2147625745, i64 2147625785}
!5998 = !DILocation(line: 214, column: 1, scope: !5590)
!5999 = !{i64 2147625907, i64 2147625950, i64 2147625990}
!6000 = !DILocation(line: 215, column: 1, scope: !5590)
!6001 = !{i64 2147630182, i64 2147630225, i64 2147630265}
!6002 = !DILocation(line: 216, column: 1, scope: !5590)
!6003 = !{i64 2147630408, i64 2147630451, i64 2147630491}
!6004 = !DILocation(line: 217, column: 1, scope: !5590)
!6005 = !{i64 2147630640, i64 2147630683, i64 2147630723}
!6006 = !DILocation(line: 218, column: 1, scope: !5590)
!6007 = !{i64 2147630824, i64 2147630867, i64 2147630907}
!6008 = !DILocation(line: 219, column: 1, scope: !5590)
!6009 = !{i64 2147631033, i64 2147631076, i64 2147631116}
!6010 = !DILocation(line: 220, column: 1, scope: !5590)
!6011 = !{i64 2147631217, i64 2147631260, i64 2147631300}
!6012 = !DILocation(line: 221, column: 1, scope: !5590)
!6013 = !{i64 2147631443, i64 2147631486, i64 2147631526}
!6014 = !DILocation(line: 222, column: 1, scope: !5590)
!6015 = !{i64 2147631669, i64 2147631712, i64 2147631752}
!6016 = !DILocation(line: 223, column: 1, scope: !5590)
!6017 = !{i64 2147631895, i64 2147631938, i64 2147631978}
!6018 = !DILocation(line: 224, column: 1, scope: !5590)
!6019 = !{i64 2147632121, i64 2147632164, i64 2147632204}
!6020 = !DILocation(line: 225, column: 1, scope: !5590)
!6021 = !{i64 2147632347, i64 2147632390, i64 2147632430}
!6022 = !DILocation(line: 226, column: 1, scope: !5590)
!6023 = !{i64 2147632579, i64 2147632622, i64 2147632662}
!6024 = !DILocation(line: 227, column: 1, scope: !5590)
!6025 = !{i64 2147632817, i64 2147632860, i64 2147632900}
!6026 = !DILocation(line: 228, column: 1, scope: !5590)
!6027 = !{i64 2147633037, i64 2147633080, i64 2147633120}
!6028 = !DILocation(line: 229, column: 1, scope: !5590)
!6029 = !{i64 2147633281, i64 2147633324, i64 2147633364}
!6030 = !DILocation(line: 230, column: 1, scope: !5590)
!6031 = !{i64 2147633522, i64 2147633565, i64 2147633605}
!6032 = !DILocation(line: 231, column: 1, scope: !5590)
!6033 = !{i64 2147633757, i64 2147633800, i64 2147633840}
!6034 = !DILocation(line: 232, column: 1, scope: !5590)
!6035 = !{i64 2147633989, i64 2147634032, i64 2147634072}
!6036 = !DILocation(line: 233, column: 1, scope: !5590)
!6037 = !{i64 2147634191, i64 2147634234, i64 2147634274}
!6038 = !DILocation(line: 234, column: 1, scope: !5590)
!6039 = !{i64 2147634441, i64 2147634484, i64 2147634524}
!6040 = !DILocation(line: 235, column: 1, scope: !5590)
!6041 = !{i64 2147634679, i64 2147634722, i64 2147634762}
!6042 = !DILocation(line: 236, column: 1, scope: !5590)
!6043 = !{i64 2147634863, i64 2147634906, i64 2147634946}
!6044 = !DILocation(line: 237, column: 1, scope: !5590)
!6045 = !{i64 2147635087, i64 2147635130, i64 2147635170}
!6046 = !DILocation(line: 238, column: 1, scope: !5590)
!6047 = !{i64 2147635325, i64 2147635368, i64 2147635408}
!6048 = !DILocation(line: 239, column: 1, scope: !5590)
!6049 = !{i64 2147635563, i64 2147635606, i64 2147635646}
!6050 = !DILocation(line: 240, column: 1, scope: !5590)
!6051 = !{i64 2147635756, i64 2147635799, i64 2147635839}
!6052 = !DILocation(line: 241, column: 1, scope: !5590)
!6053 = !{i64 2147636009, i64 2147636052, i64 2147636092}
!6054 = !DILocation(line: 242, column: 1, scope: !5590)
!6055 = !{i64 2147636223, i64 2147636266, i64 2147636306}
!6056 = !DILocation(line: 243, column: 1, scope: !5590)
!6057 = !{i64 2147636431, i64 2147636474, i64 2147636514}
!6058 = !DILocation(line: 244, column: 1, scope: !5590)
!6059 = !{i64 2147636621, i64 2147636664, i64 2147636704}
!6060 = !DILocation(line: 245, column: 1, scope: !5590)
!6061 = !{i64 2147636835, i64 2147636878, i64 2147636918}
!6062 = !DILocation(line: 246, column: 1, scope: !5590)
!6063 = !{i64 2147637097, i64 2147637140, i64 2147637180}
!6064 = !DILocation(line: 247, column: 1, scope: !5590)
!6065 = !{i64 2147637308, i64 2147637351, i64 2147637391}
!6066 = !DILocation(line: 248, column: 1, scope: !5590)
!6067 = !{i64 2147637552, i64 2147637595, i64 2147637635}
!6068 = !DILocation(line: 249, column: 1, scope: !5590)
!6069 = !{i64 2147637763, i64 2147637806, i64 2147637846}
!6070 = !DILocation(line: 250, column: 1, scope: !5590)
!6071 = !{i64 2147637992, i64 2147638035, i64 2147638075}
!6072 = !DILocation(line: 251, column: 1, scope: !5590)
!6073 = !{i64 2147638257, i64 2147638300, i64 2147638340}
!6074 = !DILocation(line: 252, column: 1, scope: !5590)
!6075 = !{i64 2147638462, i64 2147638505, i64 2147638545}
!6076 = !DILocation(line: 253, column: 1, scope: !5590)
!6077 = !{i64 2147642719, i64 2147642762, i64 2147642802}
!6078 = !DILocation(line: 254, column: 1, scope: !5590)
!6079 = !{i64 2147642942, i64 2147642985, i64 2147643025}
!6080 = !DILocation(line: 255, column: 1, scope: !5590)
!6081 = !{i64 2147643105, i64 2147643148, i64 2147643188}
!6082 = !DILocation(line: 256, column: 1, scope: !5590)
!6083 = !{i64 2147643310, i64 2147643353, i64 2147643393}
!6084 = !DILocation(line: 257, column: 1, scope: !5590)
!6085 = !{i64 2147643530, i64 2147643573, i64 2147643613}
!6086 = !DILocation(line: 258, column: 1, scope: !5590)
!6087 = !{i64 2147643744, i64 2147643787, i64 2147643827}
!6088 = !DILocation(line: 259, column: 1, scope: !5590)
!6089 = !{i64 2147643958, i64 2147644001, i64 2147644041}
!6090 = !DILocation(line: 260, column: 1, scope: !5590)
!6091 = !{i64 2147644169, i64 2147644212, i64 2147644252}
!6092 = !DILocation(line: 261, column: 1, scope: !5590)
!6093 = !{i64 2147644362, i64 2147644405, i64 2147644445}
!6094 = !DILocation(line: 262, column: 1, scope: !5590)
!6095 = !{i64 2147644561, i64 2147644604, i64 2147644644}
!6096 = !DILocation(line: 263, column: 1, scope: !5590)
!6097 = !{i64 2147644733, i64 2147644776, i64 2147644816}
!6098 = !DILocation(line: 264, column: 1, scope: !5590)
!6099 = !{i64 2147644926, i64 2147644969, i64 2147645009}
!6100 = !DILocation(line: 265, column: 1, scope: !5590)
!6101 = !{i64 2147645098, i64 2147645141, i64 2147645181}
!6102 = !DILocation(line: 266, column: 1, scope: !5590)
!6103 = !{i64 2147645288, i64 2147645331, i64 2147645371}
!6104 = !DILocation(line: 267, column: 1, scope: !5590)
!6105 = !{i64 2147645481, i64 2147645524, i64 2147645564}
!6106 = !DILocation(line: 268, column: 1, scope: !5590)
!6107 = !{i64 2147645677, i64 2147645720, i64 2147645760}
!6108 = !DILocation(line: 269, column: 1, scope: !5590)
!6109 = !{i64 2147645904, i64 2147645947, i64 2147645987}
!6110 = !DILocation(line: 270, column: 1, scope: !5590)
!6111 = !{i64 2147646121, i64 2147646164, i64 2147646204}
!6112 = !DILocation(line: 271, column: 1, scope: !5590)
!6113 = !{i64 2147646413, i64 2147646456, i64 2147646496}
!6114 = !DILocation(line: 272, column: 1, scope: !5590)
!6115 = !{i64 2147646645, i64 2147646688, i64 2147646728}
!6116 = !DILocation(line: 273, column: 1, scope: !5590)
!6117 = !{i64 2147646862, i64 2147646905, i64 2147646945}
!6118 = !DILocation(line: 274, column: 1, scope: !5590)
!6119 = !{i64 2147647069, i64 2147647112, i64 2147647152}
!6120 = !DILocation(line: 275, column: 1, scope: !5590)
!6121 = !{i64 2147647270, i64 2147647313, i64 2147647353}
!6122 = !DILocation(line: 276, column: 1, scope: !5590)
!6123 = !{i64 2147647502, i64 2147647545, i64 2147647585}
!6124 = !DILocation(line: 277, column: 1, scope: !5590)
!6125 = !{i64 2147647710, i64 2147647753, i64 2147647793}
!6126 = !DILocation(line: 278, column: 1, scope: !5590)
!6127 = !{i64 2147647900, i64 2147647943, i64 2147647983}
!6128 = !DILocation(line: 279, column: 1, scope: !5590)
!6129 = !{i64 2147648126, i64 2147648169, i64 2147648209}
!6130 = !DILocation(line: 280, column: 1, scope: !5590)
!6131 = !{i64 2147648315, i64 2147648358, i64 2147648398}
!6132 = !DILocation(line: 281, column: 1, scope: !5590)
!6133 = !{i64 2147648586, i64 2147648629, i64 2147648669}
!6134 = !DILocation(line: 282, column: 1, scope: !5590)
!6135 = !{i64 2147648806, i64 2147648849, i64 2147648889}
!6136 = !DILocation(line: 283, column: 1, scope: !5590)
!6137 = !{i64 2147649059, i64 2147649102, i64 2147649142}
!6138 = !DILocation(line: 284, column: 1, scope: !5590)
!6139 = !{i64 2147649267, i64 2147649310, i64 2147649350}
!6140 = !DILocation(line: 285, column: 1, scope: !5590)
!6141 = !{i64 2147649499, i64 2147649542, i64 2147649582}
!6142 = !DILocation(line: 286, column: 1, scope: !5590)
!6143 = !{i64 2147649710, i64 2147649753, i64 2147649793}
!6144 = !DILocation(line: 287, column: 1, scope: !5590)
!6145 = !{i64 2147649900, i64 2147649943, i64 2147649983}
!6146 = !DILocation(line: 288, column: 1, scope: !5590)
!6147 = !{i64 2147650114, i64 2147650157, i64 2147650197}
!6148 = !DILocation(line: 289, column: 1, scope: !5590)
!6149 = !{i64 2147650313, i64 2147650356, i64 2147650396}
!6150 = !DILocation(line: 290, column: 1, scope: !5590)
!6151 = !{i64 2147650500, i64 2147650543, i64 2147650583}
!6152 = !DILocation(line: 291, column: 1, scope: !5590)
!6153 = !{i64 2147650708, i64 2147650751, i64 2147650791}
!6154 = !DILocation(line: 292, column: 1, scope: !5590)
!6155 = !{i64 2147650937, i64 2147650980, i64 2147651020}
!6156 = !DILocation(line: 293, column: 1, scope: !5590)
!6157 = !{i64 2147651139, i64 2147651182, i64 2147651222}
!6158 = !DILocation(line: 294, column: 1, scope: !5590)
!6159 = !{i64 2147651338, i64 2147651381, i64 2147651421}
!6160 = !DILocation(line: 295, column: 1, scope: !5590)
!6161 = !{i64 2147651555, i64 2147651598, i64 2147651638}
!6162 = !DILocation(line: 297, column: 1, scope: !5590)
!6163 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !460, file: !460, line: 30, type: !467, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !6164)
!6164 = !{!6165, !6166}
!6165 = !DILocalVariable(name: "arg", arg: 1, scope: !6163, file: !460, line: 30, type: !469)
!6166 = !DILocalVariable(name: "key", scope: !6163, file: !460, line: 32, type: !156)
!6167 = !DILocation(line: 0, scope: !6163)
!6168 = !DILocation(line: 37, column: 2, scope: !6163)
!6169 = !DILocation(line: 38, column: 2, scope: !6163)
!6170 = !DILocation(line: 55, column: 2, scope: !6171, inlinedAt: !6178)
!6171 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6172, file: !6172, line: 42, type: !6173, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !6175)
!6172 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6173 = !DISubroutineType(types: !6174)
!6174 = !{!32}
!6175 = !{!6176, !6177}
!6176 = !DILocalVariable(name: "key", scope: !6171, file: !6172, line: 44, type: !32)
!6177 = !DILocalVariable(name: "tmp", scope: !6171, file: !6172, line: 53, type: !32)
!6178 = distinct !DILocation(line: 40, column: 8, scope: !6163)
!6179 = !{i64 2133681}
!6180 = !DILocation(line: 0, scope: !6171, inlinedAt: !6178)
!6181 = !DILocalVariable(name: "key", arg: 1, scope: !6182, file: !6172, line: 84, type: !32)
!6182 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6172, file: !6172, line: 84, type: !6183, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !6185)
!6183 = !DISubroutineType(types: !6184)
!6184 = !{null, !32}
!6185 = !{!6181}
!6186 = !DILocation(line: 0, scope: !6182, inlinedAt: !6187)
!6187 = distinct !DILocation(line: 47, column: 2, scope: !6163)
!6188 = !DILocation(line: 95, column: 2, scope: !6182, inlinedAt: !6187)
!6189 = !{i64 2134498}
!6190 = !DILocation(line: 51, column: 18, scope: !6163)
!6191 = !DILocation(line: 53, column: 2, scope: !6163)
!6192 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6193, file: !6193, line: 1609, type: !365, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !2123)
!6193 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6194 = !DILocation(line: 1611, column: 3, scope: !6192)
!6195 = !DILocation(line: 1612, column: 1, scope: !6192)
!6196 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6193, file: !6193, line: 1629, type: !365, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !2123)
!6197 = !DILocation(line: 1631, column: 3, scope: !6196)
!6198 = !DILocation(line: 1632, column: 1, scope: !6196)
!6199 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !490, file: !490, line: 26, type: !496, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !6200)
!6200 = !{!6201}
!6201 = !DILocalVariable(name: "dev", arg: 1, scope: !6199, file: !490, line: 26, type: !498)
!6202 = !DILocation(line: 0, scope: !6199)
!6203 = !DILocation(line: 68, column: 2, scope: !6199)
!6204 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6205, file: !6205, line: 57, type: !6206, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !6252)
!6205 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6206 = !DISubroutineType(types: !6207)
!6207 = !{null, !32, !6208}
!6208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6209, size: 32)
!6209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6210)
!6210 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2733, line: 141, baseType: !6211)
!6211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2733, line: 97, size: 256, elements: !6212)
!6212 = !{!6213}
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6211, file: !2733, line: 107, baseType: !6214, size: 256)
!6214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2733, line: 98, size: 256, elements: !6215)
!6215 = !{!6216, !6221, !6226, !6231, !6236, !6241, !6246, !6251}
!6216 = !DIDerivedType(tag: DW_TAG_member, scope: !6214, file: !2733, line: 99, baseType: !6217, size: 32)
!6217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6214, file: !2733, line: 99, size: 32, elements: !6218)
!6218 = !{!6219, !6220}
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6217, file: !2733, line: 99, baseType: !156, size: 32)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6217, file: !2733, line: 99, baseType: !156, size: 32)
!6221 = !DIDerivedType(tag: DW_TAG_member, scope: !6214, file: !2733, line: 100, baseType: !6222, size: 32, offset: 32)
!6222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6214, file: !2733, line: 100, size: 32, elements: !6223)
!6223 = !{!6224, !6225}
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6222, file: !2733, line: 100, baseType: !156, size: 32)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6222, file: !2733, line: 100, baseType: !156, size: 32)
!6226 = !DIDerivedType(tag: DW_TAG_member, scope: !6214, file: !2733, line: 101, baseType: !6227, size: 32, offset: 64)
!6227 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6214, file: !2733, line: 101, size: 32, elements: !6228)
!6228 = !{!6229, !6230}
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6227, file: !2733, line: 101, baseType: !156, size: 32)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6227, file: !2733, line: 101, baseType: !156, size: 32)
!6231 = !DIDerivedType(tag: DW_TAG_member, scope: !6214, file: !2733, line: 102, baseType: !6232, size: 32, offset: 96)
!6232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6214, file: !2733, line: 102, size: 32, elements: !6233)
!6233 = !{!6234, !6235}
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6232, file: !2733, line: 102, baseType: !156, size: 32)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6232, file: !2733, line: 102, baseType: !156, size: 32)
!6236 = !DIDerivedType(tag: DW_TAG_member, scope: !6214, file: !2733, line: 103, baseType: !6237, size: 32, offset: 128)
!6237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6214, file: !2733, line: 103, size: 32, elements: !6238)
!6238 = !{!6239, !6240}
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6237, file: !2733, line: 103, baseType: !156, size: 32)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6237, file: !2733, line: 103, baseType: !156, size: 32)
!6241 = !DIDerivedType(tag: DW_TAG_member, scope: !6214, file: !2733, line: 104, baseType: !6242, size: 32, offset: 160)
!6242 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6214, file: !2733, line: 104, size: 32, elements: !6243)
!6243 = !{!6244, !6245}
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6242, file: !2733, line: 104, baseType: !156, size: 32)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6242, file: !2733, line: 104, baseType: !156, size: 32)
!6246 = !DIDerivedType(tag: DW_TAG_member, scope: !6214, file: !2733, line: 105, baseType: !6247, size: 32, offset: 192)
!6247 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6214, file: !2733, line: 105, size: 32, elements: !6248)
!6248 = !{!6249, !6250}
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6247, file: !2733, line: 105, baseType: !156, size: 32)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6247, file: !2733, line: 105, baseType: !156, size: 32)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6214, file: !2733, line: 106, baseType: !156, size: 32, offset: 224)
!6252 = !{!6253, !6254}
!6253 = !DILocalVariable(name: "reason", arg: 1, scope: !6204, file: !6205, line: 57, type: !32)
!6254 = !DILocalVariable(name: "esf", arg: 2, scope: !6204, file: !6205, line: 57, type: !6208)
!6255 = !DILocation(line: 0, scope: !6204)
!6256 = !DILocation(line: 63, column: 2, scope: !6204)
!6257 = !DILocation(line: 64, column: 1, scope: !6204)
!6258 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6205, file: !6205, line: 82, type: !6259, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !6274)
!6259 = !DISubroutineType(types: !6260)
!6260 = !{null, !6208, !6261}
!6261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6262, size: 32)
!6262 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !296, line: 37, baseType: !6263)
!6263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !6264)
!6264 = !{!6265, !6266, !6267, !6268, !6269, !6270, !6271, !6272, !6273}
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6263, file: !296, line: 26, baseType: !156, size: 32)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6263, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6263, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6263, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6263, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6263, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6263, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6263, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6263, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!6274 = !{!6275, !6276, !6277}
!6275 = !DILocalVariable(name: "esf", arg: 1, scope: !6258, file: !6205, line: 82, type: !6208)
!6276 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6258, file: !6205, line: 82, type: !6261)
!6277 = !DILocalVariable(name: "reason", scope: !6258, file: !6205, line: 88, type: !32)
!6278 = !DILocation(line: 0, scope: !6258)
!6279 = !DILocation(line: 88, column: 35, scope: !6258)
!6280 = !DILocation(line: 108, column: 2, scope: !6258)
!6281 = !DILocation(line: 131, column: 1, scope: !6258)
!6282 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6205, file: !6205, line: 133, type: !6283, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !6285)
!6283 = !DISubroutineType(types: !6284)
!6284 = !{null, !117}
!6285 = !{!6286, !6287, !6288}
!6286 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6282, file: !6205, line: 133, type: !117)
!6287 = !DILocalVariable(name: "ssf_contents", scope: !6282, file: !6205, line: 135, type: !1004)
!6288 = !DILocalVariable(name: "oops_esf", scope: !6282, file: !6205, line: 136, type: !6210)
!6289 = !DILocation(line: 0, scope: !6282)
!6290 = !DILocation(line: 136, column: 2, scope: !6282)
!6291 = !DILocation(line: 136, column: 15, scope: !6282)
!6292 = !DILocation(line: 139, column: 22, scope: !6282)
!6293 = !DILocation(line: 139, column: 17, scope: !6282)
!6294 = !DILocation(line: 139, column: 20, scope: !6282)
!6295 = !DILocation(line: 141, column: 2, scope: !6282)
!6296 = !DILocation(line: 142, column: 2, scope: !6282)
!6297 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6298, file: !6298, line: 40, type: !6183, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !6299)
!6298 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6299 = !{!6300}
!6300 = !DILocalVariable(name: "irq", arg: 1, scope: !6297, file: !6298, line: 40, type: !32)
!6301 = !DILocation(line: 0, scope: !6297)
!6302 = !DILocation(line: 42, column: 2, scope: !6297)
!6303 = !DILocation(line: 43, column: 1, scope: !6297)
!6304 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !656, file: !656, line: 1684, type: !6305, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !6307)
!6305 = !DISubroutineType(types: !6306)
!6306 = !{null, !911}
!6307 = !{!6308}
!6308 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6304, file: !656, line: 1684, type: !911)
!6309 = !DILocation(line: 0, scope: !6304)
!6310 = !DILocation(line: 1686, column: 23, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6304, file: !656, line: 1686, column: 7)
!6312 = !DILocation(line: 1686, column: 7, scope: !6304)
!6313 = !DILocation(line: 1688, column: 5, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6311, file: !656, line: 1687, column: 3)
!6315 = !{i64 2151025907}
!6316 = !DILocation(line: 1689, column: 81, scope: !6314)
!6317 = !DILocation(line: 1689, column: 60, scope: !6314)
!6318 = !DILocation(line: 1689, column: 34, scope: !6314)
!6319 = !DILocation(line: 1689, column: 5, scope: !6314)
!6320 = !DILocation(line: 1689, column: 43, scope: !6314)
!6321 = !DILocation(line: 1690, column: 5, scope: !6314)
!6322 = !{i64 2151026021}
!6323 = !DILocation(line: 1691, column: 3, scope: !6314)
!6324 = !DILocation(line: 1692, column: 1, scope: !6304)
!6325 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6298, file: !6298, line: 45, type: !6183, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !6326)
!6326 = !{!6327}
!6327 = !DILocalVariable(name: "irq", arg: 1, scope: !6325, file: !6298, line: 45, type: !32)
!6328 = !DILocation(line: 0, scope: !6325)
!6329 = !DILocation(line: 47, column: 2, scope: !6325)
!6330 = !DILocation(line: 48, column: 1, scope: !6325)
!6331 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !656, file: !656, line: 1722, type: !6305, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !6332)
!6332 = !{!6333}
!6333 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6331, file: !656, line: 1722, type: !911)
!6334 = !DILocation(line: 0, scope: !6331)
!6335 = !DILocation(line: 1724, column: 23, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6331, file: !656, line: 1724, column: 7)
!6337 = !DILocation(line: 1724, column: 7, scope: !6331)
!6338 = !DILocation(line: 1726, column: 81, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6336, file: !656, line: 1725, column: 3)
!6340 = !DILocation(line: 1726, column: 60, scope: !6339)
!6341 = !DILocation(line: 1726, column: 34, scope: !6339)
!6342 = !DILocation(line: 1726, column: 5, scope: !6339)
!6343 = !DILocation(line: 1726, column: 43, scope: !6339)
!6344 = !DILocation(line: 271, column: 3, scope: !6345, inlinedAt: !6347)
!6345 = distinct !DISubprogram(name: "__DSB", scope: !6346, file: !6346, line: 269, type: !365, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !2123)
!6346 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6347 = distinct !DILocation(line: 1727, column: 5, scope: !6339)
!6348 = !{i64 3480290}
!6349 = !DILocation(line: 260, column: 3, scope: !6350, inlinedAt: !6351)
!6350 = distinct !DISubprogram(name: "__ISB", scope: !6346, file: !6346, line: 258, type: !365, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !2123)
!6351 = distinct !DILocation(line: 1728, column: 5, scope: !6339)
!6352 = !{i64 3480007}
!6353 = !DILocation(line: 1729, column: 3, scope: !6339)
!6354 = !DILocation(line: 1730, column: 1, scope: !6331)
!6355 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6298, file: !6298, line: 50, type: !6356, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !6358)
!6356 = !DISubroutineType(types: !6357)
!6357 = !{!118, !32}
!6358 = !{!6359}
!6359 = !DILocalVariable(name: "irq", arg: 1, scope: !6355, file: !6298, line: 50, type: !32)
!6360 = !DILocation(line: 0, scope: !6355)
!6361 = !DILocation(line: 52, column: 20, scope: !6355)
!6362 = !DILocation(line: 52, column: 9, scope: !6355)
!6363 = !DILocation(line: 52, column: 41, scope: !6355)
!6364 = !DILocation(line: 52, column: 39, scope: !6355)
!6365 = !DILocation(line: 52, column: 2, scope: !6355)
!6366 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6298, file: !6298, line: 64, type: !6367, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !6369)
!6367 = !DISubroutineType(types: !6368)
!6368 = !{null, !32, !32, !156}
!6369 = !{!6370, !6371, !6372}
!6370 = !DILocalVariable(name: "irq", arg: 1, scope: !6366, file: !6298, line: 64, type: !32)
!6371 = !DILocalVariable(name: "prio", arg: 2, scope: !6366, file: !6298, line: 64, type: !32)
!6372 = !DILocalVariable(name: "flags", arg: 3, scope: !6366, file: !6298, line: 64, type: !156)
!6373 = !DILocation(line: 0, scope: !6366)
!6374 = !DILocation(line: 83, column: 8, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6376, file: !6298, line: 82, column: 9)
!6376 = distinct !DILexicalBlock(scope: !6366, file: !6298, line: 76, column: 6)
!6377 = !DILocation(line: 91, column: 2, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6379, file: !6298, line: 91, column: 2)
!6379 = distinct !DILexicalBlock(scope: !6366, file: !6298, line: 91, column: 2)
!6380 = !DILocation(line: 91, column: 2, scope: !6379)
!6381 = !DILocation(line: 91, column: 2, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6378, file: !6298, line: 91, column: 2)
!6383 = !DILocation(line: 95, column: 2, scope: !6366)
!6384 = !DILocation(line: 96, column: 1, scope: !6366)
!6385 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !656, file: !656, line: 1814, type: !6386, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !6388)
!6386 = !DISubroutineType(types: !6387)
!6387 = !{null, !911, !156}
!6388 = !{!6389, !6390}
!6389 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6385, file: !656, line: 1814, type: !911)
!6390 = !DILocalVariable(name: "priority", arg: 2, scope: !6385, file: !656, line: 1814, type: !156)
!6391 = !DILocation(line: 0, scope: !6385)
!6392 = !DILocation(line: 0, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6385, file: !656, line: 1816, column: 7)
!6394 = !DILocation(line: 1816, column: 7, scope: !6385)
!6395 = !DILocation(line: 1824, column: 1, scope: !6385)
!6396 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6298, file: !6298, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2624, retainedNodes: !6397)
!6397 = !{!6398}
!6398 = !DILocalVariable(name: "unused", arg: 1, scope: !6396, file: !6298, line: 155, type: !13)
!6399 = !DILocation(line: 0, scope: !6396)
!6400 = !DILocation(line: 159, column: 2, scope: !6396)
!6401 = !DILocation(line: 160, column: 1, scope: !6396)
!6402 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6403, file: !6403, line: 87, type: !365, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2670, retainedNodes: !2123)
!6403 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6404 = !DILocation(line: 89, column: 2, scope: !6402)
!6405 = !DILocation(line: 90, column: 2, scope: !6402)
!6406 = !DILocation(line: 91, column: 1, scope: !6402)
!6407 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6403, file: !6403, line: 23, type: !365, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2123)
!6408 = !DISubprogram(name: "z_arm_int_exit", scope: !6409, file: !6409, line: 153, type: !365, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2123)
!6409 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6410 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6411, file: !6411, line: 256, type: !365, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !2123)
!6411 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6412 = !DILocation(line: 258, column: 2, scope: !6410)
!6413 = !DILocation(line: 260, column: 2, scope: !6410)
!6414 = !DILocation(line: 262, column: 2, scope: !6410)
!6415 = !DILocation(line: 263, column: 2, scope: !6410)
!6416 = !DILocation(line: 267, column: 2, scope: !6410)
!6417 = !DILocation(line: 268, column: 2, scope: !6410)
!6418 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6411, file: !6411, line: 53, type: !365, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !2123)
!6419 = !DILocation(line: 55, column: 12, scope: !6418)
!6420 = !DILocation(line: 271, column: 3, scope: !6421, inlinedAt: !6422)
!6421 = distinct !DISubprogram(name: "__DSB", scope: !6346, file: !6346, line: 269, type: !365, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !2123)
!6422 = distinct !DILocation(line: 56, column: 2, scope: !6418)
!6423 = !{i64 3478961}
!6424 = !DILocation(line: 260, column: 3, scope: !6425, inlinedAt: !6426)
!6425 = distinct !DISubprogram(name: "__ISB", scope: !6346, file: !6346, line: 258, type: !365, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !2123)
!6426 = distinct !DILocation(line: 57, column: 2, scope: !6418)
!6427 = !{i64 3478678}
!6428 = !DILocation(line: 58, column: 1, scope: !6418)
!6429 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6411, file: !6411, line: 96, type: !365, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !2123)
!6430 = !DILocation(line: 103, column: 13, scope: !6429)
!6431 = !DILocation(line: 975, column: 3, scope: !6432, inlinedAt: !6437)
!6432 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6346, file: !6346, line: 971, type: !6433, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !6435)
!6433 = !DISubroutineType(types: !6434)
!6434 = !{!156}
!6435 = !{!6436}
!6436 = !DILocalVariable(name: "result", scope: !6432, file: !6346, line: 973, type: !156)
!6437 = distinct !DILocation(line: 189, column: 16, scope: !6429)
!6438 = !{i64 3499791}
!6439 = !DILocation(line: 0, scope: !6432, inlinedAt: !6437)
!6440 = !DILocation(line: 189, column: 32, scope: !6429)
!6441 = !DILocalVariable(name: "control", arg: 1, scope: !6442, file: !6346, line: 1001, type: !156)
!6442 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6346, file: !6346, line: 1001, type: !6443, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !6445)
!6443 = !DISubroutineType(types: !6444)
!6444 = !{null, !156}
!6445 = !{!6441}
!6446 = !DILocation(line: 0, scope: !6442, inlinedAt: !6447)
!6447 = distinct !DILocation(line: 189, column: 2, scope: !6429)
!6448 = !DILocation(line: 1003, column: 3, scope: !6442, inlinedAt: !6447)
!6449 = !{i64 3500511}
!6450 = !DILocation(line: 260, column: 3, scope: !6425, inlinedAt: !6451)
!6451 = distinct !DILocation(line: 1004, column: 3, scope: !6442, inlinedAt: !6447)
!6452 = !DILocation(line: 191, column: 1, scope: !6429)
!6453 = distinct !DISubprogram(name: "arch_swap", scope: !6454, file: !6454, line: 33, type: !6356, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2700, retainedNodes: !6455)
!6454 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6455 = !{!6456}
!6456 = !DILocalVariable(name: "key", arg: 1, scope: !6453, file: !6454, line: 33, type: !32)
!6457 = !DILocation(line: 0, scope: !6453)
!6458 = !DILocation(line: 36, column: 2, scope: !6453)
!6459 = !DILocation(line: 36, column: 17, scope: !6453)
!6460 = !DILocation(line: 36, column: 25, scope: !6453)
!6461 = !DILocation(line: 37, column: 37, scope: !6453)
!6462 = !DILocation(line: 37, column: 17, scope: !6453)
!6463 = !DILocation(line: 37, column: 35, scope: !6453)
!6464 = !DILocation(line: 41, column: 12, scope: !6453)
!6465 = !DILocalVariable(name: "key", arg: 1, scope: !6466, file: !6172, line: 84, type: !32)
!6466 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6172, file: !6172, line: 84, type: !6183, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2700, retainedNodes: !6467)
!6467 = !{!6465}
!6468 = !DILocation(line: 0, scope: !6466, inlinedAt: !6469)
!6469 = distinct !DILocation(line: 44, column: 2, scope: !6453)
!6470 = !DILocation(line: 95, column: 2, scope: !6466, inlinedAt: !6469)
!6471 = !{i64 2241025}
!6472 = !DILocation(line: 53, column: 9, scope: !6453)
!6473 = !DILocation(line: 53, column: 24, scope: !6453)
!6474 = !DILocation(line: 53, column: 2, scope: !6453)
!6475 = distinct !DISubprogram(name: "arch_new_thread", scope: !6476, file: !6476, line: 56, type: !6477, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !6586)
!6476 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6477 = !DISubroutineType(types: !6478)
!6478 = !{null, !6479, !6581, !1259, !352, !117, !117, !117}
!6479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6480, size: 32)
!6480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !6481)
!6481 = !{!6482, !6540, !6552, !6553, !6554, !6555, !6561, !6576}
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6480, file: !225, line: 247, baseType: !6483, size: 384)
!6483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !6484)
!6484 = !{!6485, !6509, !6516, !6517, !6518, !6527, !6528, !6529}
!6485 = !DIDerivedType(tag: DW_TAG_member, scope: !6483, file: !225, line: 60, baseType: !6486, size: 64)
!6486 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6483, file: !225, line: 60, size: 64, elements: !6487)
!6487 = !{!6488, !6503}
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6486, file: !225, line: 61, baseType: !6489, size: 64)
!6489 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !6490)
!6490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !6491)
!6491 = !{!6492, !6498}
!6492 = !DIDerivedType(tag: DW_TAG_member, scope: !6490, file: !235, line: 38, baseType: !6493, size: 32)
!6493 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6490, file: !235, line: 38, size: 32, elements: !6494)
!6494 = !{!6495, !6497}
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6493, file: !235, line: 39, baseType: !6496, size: 32)
!6496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6490, size: 32)
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6493, file: !235, line: 40, baseType: !6496, size: 32)
!6498 = !DIDerivedType(tag: DW_TAG_member, scope: !6490, file: !235, line: 42, baseType: !6499, size: 32, offset: 32)
!6499 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6490, file: !235, line: 42, size: 32, elements: !6500)
!6500 = !{!6501, !6502}
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6499, file: !235, line: 43, baseType: !6496, size: 32)
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6499, file: !235, line: 44, baseType: !6496, size: 32)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6486, file: !225, line: 62, baseType: !6504, size: 64)
!6504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !6505)
!6505 = !{!6506}
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6504, file: !251, line: 50, baseType: !6507, size: 64)
!6507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6508, size: 64, elements: !256)
!6508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6504, size: 32)
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6483, file: !225, line: 68, baseType: !6510, size: 32, offset: 64)
!6510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6511, size: 32)
!6511 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !6512)
!6512 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !6513)
!6513 = !{!6514}
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6512, file: !261, line: 232, baseType: !6515, size: 64)
!6515 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !6490)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6483, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6483, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!6518 = !DIDerivedType(tag: DW_TAG_member, scope: !6483, file: !225, line: 90, baseType: !6519, size: 16, offset: 112)
!6519 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6483, file: !225, line: 90, size: 16, elements: !6520)
!6520 = !{!6521, !6526}
!6521 = !DIDerivedType(tag: DW_TAG_member, scope: !6519, file: !225, line: 91, baseType: !6522, size: 16)
!6522 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6519, file: !225, line: 91, size: 16, elements: !6523)
!6523 = !{!6524, !6525}
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6522, file: !225, line: 96, baseType: !275, size: 8)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6522, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6519, file: !225, line: 100, baseType: !279, size: 16)
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6483, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!6528 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6483, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6483, file: !225, line: 131, baseType: !6530, size: 192, offset: 192)
!6530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !6531)
!6531 = !{!6532, !6533, !6539}
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6530, file: !261, line: 245, baseType: !6489, size: 64)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6530, file: !261, line: 246, baseType: !6534, size: 32, offset: 64)
!6534 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !6535)
!6535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6536, size: 32)
!6536 = !DISubroutineType(types: !6537)
!6537 = !{null, !6538}
!6538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6530, size: 32)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6530, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6480, file: !225, line: 250, baseType: !6541, size: 288, offset: 384)
!6541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !6542)
!6542 = !{!6543, !6544, !6545, !6546, !6547, !6548, !6549, !6550, !6551}
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6541, file: !296, line: 26, baseType: !156, size: 32)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6541, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6541, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6541, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6541, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6541, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6541, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!6550 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6541, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6541, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!6552 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6480, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6480, file: !225, line: 256, baseType: !6511, size: 64, offset: 704)
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6480, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6480, file: !225, line: 300, baseType: !6556, size: 96, offset: 800)
!6556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !6557)
!6557 = !{!6558, !6559, !6560}
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6556, file: !225, line: 153, baseType: !22, size: 32)
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6556, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6556, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6480, file: !225, line: 325, baseType: !6562, size: 32, offset: 896)
!6562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6563, size: 32)
!6563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !6564)
!6564 = !{!6565, !6571, !6572}
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6563, file: !220, line: 5074, baseType: !6566, size: 96)
!6566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !6567)
!6567 = !{!6568, !6569, !6570}
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6566, file: !324, line: 57, baseType: !327, size: 32)
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6566, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6566, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6563, file: !220, line: 5075, baseType: !6511, size: 64, offset: 96)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6563, file: !220, line: 5076, baseType: !6573, size: 32, offset: 160)
!6573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !6574)
!6574 = !{!6575}
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6573, file: !334, line: 52, baseType: !22, size: 32)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6480, file: !225, line: 343, baseType: !6577, size: 64, offset: 928)
!6577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !6578)
!6578 = !{!6579, !6580}
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6577, file: !296, line: 63, baseType: !156, size: 32)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6577, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!6581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6582, size: 32)
!6582 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !345, line: 44, baseType: !6583)
!6583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !347, line: 47, size: 8, elements: !6584)
!6584 = !{!6585}
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6583, file: !347, line: 48, baseType: !135, size: 8)
!6586 = !{!6587, !6588, !6589, !6590, !6591, !6592, !6593, !6594}
!6587 = !DILocalVariable(name: "thread", arg: 1, scope: !6475, file: !6476, line: 56, type: !6479)
!6588 = !DILocalVariable(name: "stack", arg: 2, scope: !6475, file: !6476, line: 56, type: !6581)
!6589 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6475, file: !6476, line: 57, type: !1259)
!6590 = !DILocalVariable(name: "entry", arg: 4, scope: !6475, file: !6476, line: 57, type: !352)
!6591 = !DILocalVariable(name: "p1", arg: 5, scope: !6475, file: !6476, line: 58, type: !117)
!6592 = !DILocalVariable(name: "p2", arg: 6, scope: !6475, file: !6476, line: 58, type: !117)
!6593 = !DILocalVariable(name: "p3", arg: 7, scope: !6475, file: !6476, line: 58, type: !117)
!6594 = !DILocalVariable(name: "iframe", scope: !6475, file: !6476, line: 60, type: !2731)
!6595 = !DILocation(line: 0, scope: !6475)
!6596 = !DILocation(line: 85, column: 11, scope: !6475)
!6597 = !DILocation(line: 93, column: 10, scope: !6475)
!6598 = !DILocation(line: 98, column: 13, scope: !6475)
!6599 = !DILocation(line: 100, column: 15, scope: !6475)
!6600 = !DILocation(line: 100, column: 10, scope: !6475)
!6601 = !DILocation(line: 100, column: 13, scope: !6475)
!6602 = !DILocation(line: 101, column: 15, scope: !6475)
!6603 = !DILocation(line: 101, column: 10, scope: !6475)
!6604 = !DILocation(line: 101, column: 13, scope: !6475)
!6605 = !DILocation(line: 102, column: 15, scope: !6475)
!6606 = !DILocation(line: 102, column: 10, scope: !6475)
!6607 = !DILocation(line: 102, column: 13, scope: !6475)
!6608 = !DILocation(line: 103, column: 15, scope: !6475)
!6609 = !DILocation(line: 103, column: 10, scope: !6475)
!6610 = !DILocation(line: 103, column: 13, scope: !6475)
!6611 = !DILocation(line: 106, column: 10, scope: !6475)
!6612 = !DILocation(line: 106, column: 15, scope: !6475)
!6613 = !DILocation(line: 122, column: 29, scope: !6475)
!6614 = !DILocation(line: 122, column: 23, scope: !6475)
!6615 = !DILocation(line: 122, column: 27, scope: !6475)
!6616 = !DILocation(line: 123, column: 15, scope: !6475)
!6617 = !DILocation(line: 123, column: 23, scope: !6475)
!6618 = !DILocation(line: 143, column: 1, scope: !6475)
!6619 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6476, file: !6476, line: 385, type: !6620, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !6623)
!6620 = !DISubroutineType(types: !6621)
!6621 = !{!156, !6622, !6622}
!6622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !156)
!6623 = !{!6624, !6625, !6626, !6629}
!6624 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6619, file: !6476, line: 385, type: !6622)
!6625 = !DILocalVariable(name: "psp", arg: 2, scope: !6619, file: !6476, line: 385, type: !6622)
!6626 = !DILocalVariable(name: "thread", scope: !6619, file: !6476, line: 388, type: !6627)
!6627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6628, size: 32)
!6628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6480)
!6629 = !DILocalVariable(name: "guard_len", scope: !6619, file: !6476, line: 405, type: !156)
!6630 = !DILocation(line: 0, scope: !6619)
!6631 = !DILocation(line: 388, column: 34, scope: !6619)
!6632 = !DILocation(line: 390, column: 13, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6619, file: !6476, line: 390, column: 6)
!6634 = !DILocation(line: 390, column: 6, scope: !6619)
!6635 = !DILocation(line: 438, column: 6, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6619, file: !6476, line: 438, column: 6)
!6637 = !DILocation(line: 438, column: 6, scope: !6619)
!6638 = !DILocation(line: 442, column: 3, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6636, file: !6476, line: 440, column: 22)
!6640 = !DILocation(line: 455, column: 1, scope: !6619)
!6641 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6476, file: !6476, line: 530, type: !6642, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !6644)
!6642 = !DISubroutineType(types: !6643)
!6643 = !{null, !6479, !1259, !352}
!6644 = !{!6645, !6646, !6647}
!6645 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6641, file: !6476, line: 530, type: !6479)
!6646 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6641, file: !6476, line: 530, type: !1259)
!6647 = !DILocalVariable(name: "_main", arg: 3, scope: !6641, file: !6476, line: 531, type: !352)
!6648 = !DILocation(line: 0, scope: !6641)
!6649 = !DILocation(line: 535, column: 11, scope: !6641)
!6650 = !DILocation(line: 560, column: 2, scope: !6641)
!6651 = !DILocation(line: 576, column: 2, scope: !6641)
!6652 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6653 = !DILocation(line: 603, column: 2, scope: !6641)
!6654 = distinct !DISubprogram(name: "z_arm_fault", scope: !6655, file: !6655, line: 1036, type: !6656, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !6671)
!6655 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6656 = !DISubroutineType(types: !6657)
!6657 = !{null, !156, !156, !156, !6658}
!6658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6659, size: 32)
!6659 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !296, line: 37, baseType: !6660)
!6660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !6661)
!6661 = !{!6662, !6663, !6664, !6665, !6666, !6667, !6668, !6669, !6670}
!6662 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6660, file: !296, line: 26, baseType: !156, size: 32)
!6663 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6660, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6660, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6660, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6660, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6660, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6660, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6660, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6660, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!6671 = !{!6672, !6673, !6674, !6675, !6676, !6677, !6678, !6679, !6680, !6681}
!6672 = !DILocalVariable(name: "msp", arg: 1, scope: !6654, file: !6655, line: 1036, type: !156)
!6673 = !DILocalVariable(name: "psp", arg: 2, scope: !6654, file: !6655, line: 1036, type: !156)
!6674 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6654, file: !6655, line: 1036, type: !156)
!6675 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6654, file: !6655, line: 1037, type: !6658)
!6676 = !DILocalVariable(name: "reason", scope: !6654, file: !6655, line: 1039, type: !156)
!6677 = !DILocalVariable(name: "fault", scope: !6654, file: !6655, line: 1040, type: !118)
!6678 = !DILocalVariable(name: "recoverable", scope: !6654, file: !6655, line: 1041, type: !146)
!6679 = !DILocalVariable(name: "nested_exc", scope: !6654, file: !6655, line: 1041, type: !146)
!6680 = !DILocalVariable(name: "esf", scope: !6654, file: !6655, line: 1042, type: !2799)
!6681 = !DILocalVariable(name: "esf_copy", scope: !6654, file: !6655, line: 1047, type: !2800)
!6682 = !DILocation(line: 0, scope: !6654)
!6683 = !DILocation(line: 1040, column: 19, scope: !6654)
!6684 = !DILocation(line: 1041, column: 2, scope: !6654)
!6685 = !DILocation(line: 1047, column: 2, scope: !6654)
!6686 = !DILocation(line: 1047, column: 15, scope: !6654)
!6687 = !DILocalVariable(name: "key", arg: 1, scope: !6688, file: !6172, line: 84, type: !32)
!6688 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6172, file: !6172, line: 84, type: !6183, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !6689)
!6689 = !{!6687}
!6690 = !DILocation(line: 0, scope: !6688, inlinedAt: !6691)
!6691 = distinct !DILocation(line: 1050, column: 2, scope: !6654)
!6692 = !DILocation(line: 95, column: 2, scope: !6688, inlinedAt: !6691)
!6693 = !{i64 2274269}
!6694 = !DILocation(line: 1055, column: 9, scope: !6654)
!6695 = !DILocation(line: 1056, column: 2, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6697, file: !6655, line: 1056, column: 2)
!6697 = distinct !DILexicalBlock(scope: !6654, file: !6655, line: 1056, column: 2)
!6698 = !DILocation(line: 1056, column: 2, scope: !6697)
!6699 = !DILocation(line: 1056, column: 2, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6696, file: !6655, line: 1056, column: 2)
!6701 = !DILocation(line: 1040, column: 24, scope: !6654)
!6702 = !DILocation(line: 1063, column: 11, scope: !6654)
!6703 = !DILocation(line: 1064, column: 6, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6654, file: !6655, line: 1064, column: 6)
!6705 = !{i8 0, i8 2}
!6706 = !DILocation(line: 1064, column: 6, scope: !6654)
!6707 = !DILocation(line: 1070, column: 20, scope: !6654)
!6708 = !DILocation(line: 1070, column: 2, scope: !6654)
!6709 = !DILocation(line: 1089, column: 6, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6654, file: !6655, line: 1089, column: 6)
!6711 = !DILocation(line: 0, scope: !6710)
!6712 = !DILocation(line: 1089, column: 6, scope: !6654)
!6713 = !DILocation(line: 1090, column: 28, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6715, file: !6655, line: 1090, column: 7)
!6715 = distinct !DILexicalBlock(scope: !6710, file: !6655, line: 1089, column: 18)
!6716 = !DILocation(line: 1090, column: 44, scope: !6714)
!6717 = !DILocation(line: 1090, column: 7, scope: !6715)
!6718 = !DILocation(line: 1091, column: 24, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6714, file: !6655, line: 1090, column: 50)
!6720 = !DILocation(line: 1092, column: 3, scope: !6719)
!6721 = !DILocation(line: 1094, column: 23, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6710, file: !6655, line: 1093, column: 9)
!6723 = !DILocation(line: 1097, column: 2, scope: !6654)
!6724 = !DILocation(line: 1098, column: 1, scope: !6654)
!6725 = distinct !DISubprogram(name: "get_esf", scope: !6655, file: !6655, line: 894, type: !6726, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !6729)
!6726 = !DISubroutineType(types: !6727)
!6727 = !{!2799, !156, !156, !156, !6728}
!6728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!6729 = !{!6730, !6731, !6732, !6733, !6734, !6735}
!6730 = !DILocalVariable(name: "msp", arg: 1, scope: !6725, file: !6655, line: 894, type: !156)
!6731 = !DILocalVariable(name: "psp", arg: 2, scope: !6725, file: !6655, line: 894, type: !156)
!6732 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6725, file: !6655, line: 894, type: !156)
!6733 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6725, file: !6655, line: 895, type: !6728)
!6734 = !DILocalVariable(name: "alternative_state_exc", scope: !6725, file: !6655, line: 897, type: !146)
!6735 = !DILocalVariable(name: "ptr_esf", scope: !6725, file: !6655, line: 898, type: !2799)
!6736 = !DILocation(line: 0, scope: !6725)
!6737 = !DILocation(line: 900, column: 14, scope: !6725)
!6738 = !DILocation(line: 902, column: 49, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6725, file: !6655, line: 902, column: 6)
!6740 = !DILocation(line: 902, column: 6, scope: !6725)
!6741 = !DILocation(line: 983, column: 18, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6725, file: !6655, line: 983, column: 6)
!6743 = !DILocation(line: 991, column: 7, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6745, file: !6655, line: 990, column: 30)
!6745 = distinct !DILexicalBlock(scope: !6725, file: !6655, line: 990, column: 6)
!6746 = !DILocation(line: 998, column: 16, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6748, file: !6655, line: 995, column: 10)
!6748 = distinct !DILexicalBlock(scope: !6744, file: !6655, line: 991, column: 7)
!6749 = !DILocation(line: 1002, column: 2, scope: !6725)
!6750 = !DILocation(line: 1003, column: 1, scope: !6725)
!6751 = distinct !DISubprogram(name: "fault_handle", scope: !6655, file: !6655, line: 786, type: !6752, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !6754)
!6752 = !DISubroutineType(types: !6753)
!6753 = !{!156, !2799, !118, !6728}
!6754 = !{!6755, !6756, !6757, !6758}
!6755 = !DILocalVariable(name: "esf", arg: 1, scope: !6751, file: !6655, line: 786, type: !2799)
!6756 = !DILocalVariable(name: "fault", arg: 2, scope: !6751, file: !6655, line: 786, type: !118)
!6757 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6751, file: !6655, line: 786, type: !6728)
!6758 = !DILocalVariable(name: "reason", scope: !6751, file: !6655, line: 788, type: !156)
!6759 = !DILocation(line: 0, scope: !6751)
!6760 = !DILocation(line: 790, column: 15, scope: !6751)
!6761 = !DILocation(line: 792, column: 2, scope: !6751)
!6762 = !DILocation(line: 794, column: 12, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6751, file: !6655, line: 792, column: 17)
!6764 = !DILocation(line: 795, column: 3, scope: !6763)
!6765 = !DILocation(line: 800, column: 12, scope: !6763)
!6766 = !DILocation(line: 801, column: 3, scope: !6763)
!6767 = !DILocation(line: 803, column: 12, scope: !6763)
!6768 = !DILocation(line: 804, column: 3, scope: !6763)
!6769 = !DILocation(line: 806, column: 12, scope: !6763)
!6770 = !DILocation(line: 807, column: 3, scope: !6763)
!6771 = !DILocation(line: 814, column: 3, scope: !6763)
!6772 = !DILocation(line: 815, column: 3, scope: !6763)
!6773 = !DILocation(line: 829, column: 2, scope: !6751)
!6774 = distinct !DISubprogram(name: "hard_fault", scope: !6655, file: !6655, line: 709, type: !6775, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !6777)
!6775 = !DISubroutineType(types: !6776)
!6776 = !{!156, !2799, !6728}
!6777 = !{!6778, !6779, !6780}
!6778 = !DILocalVariable(name: "esf", arg: 1, scope: !6774, file: !6655, line: 709, type: !2799)
!6779 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6774, file: !6655, line: 709, type: !6728)
!6780 = !DILocalVariable(name: "reason", scope: !6774, file: !6655, line: 711, type: !156)
!6781 = !DILocation(line: 0, scope: !6774)
!6782 = !DILocation(line: 732, column: 15, scope: !6774)
!6783 = !DILocation(line: 734, column: 12, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6774, file: !6655, line: 734, column: 6)
!6785 = !DILocation(line: 734, column: 17, scope: !6784)
!6786 = !DILocation(line: 734, column: 41, scope: !6784)
!6787 = !DILocation(line: 734, column: 6, scope: !6774)
!6788 = !DILocation(line: 736, column: 19, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6784, file: !6655, line: 736, column: 13)
!6790 = !DILocation(line: 736, column: 49, scope: !6789)
!6791 = !DILocation(line: 736, column: 13, scope: !6784)
!6792 = !DILocation(line: 738, column: 19, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6789, file: !6655, line: 738, column: 13)
!6794 = !DILocation(line: 738, column: 24, scope: !6793)
!6795 = !DILocation(line: 738, column: 47, scope: !6793)
!6796 = !DILocation(line: 738, column: 13, scope: !6789)
!6797 = !DILocation(line: 740, column: 7, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6799, file: !6655, line: 740, column: 7)
!6799 = distinct !DILexicalBlock(scope: !6793, file: !6655, line: 738, column: 53)
!6800 = !DILocation(line: 740, column: 7, scope: !6799)
!6801 = !DILocation(line: 742, column: 24, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6798, file: !6655, line: 740, column: 38)
!6803 = !DILocation(line: 743, column: 3, scope: !6802)
!6804 = !DILocation(line: 743, column: 20, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6798, file: !6655, line: 743, column: 14)
!6806 = !DILocation(line: 743, column: 25, scope: !6805)
!6807 = !DILocation(line: 743, column: 52, scope: !6805)
!6808 = !DILocation(line: 743, column: 14, scope: !6798)
!6809 = !DILocation(line: 744, column: 13, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6805, file: !6655, line: 743, column: 58)
!6811 = !DILocation(line: 745, column: 3, scope: !6810)
!6812 = !DILocation(line: 745, column: 20, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6805, file: !6655, line: 745, column: 14)
!6814 = !DILocation(line: 745, column: 25, scope: !6813)
!6815 = !DILocation(line: 745, column: 52, scope: !6813)
!6816 = !DILocation(line: 745, column: 14, scope: !6805)
!6817 = !DILocation(line: 746, column: 13, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6813, file: !6655, line: 745, column: 58)
!6819 = !DILocation(line: 747, column: 3, scope: !6818)
!6820 = !DILocation(line: 747, column: 20, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6813, file: !6655, line: 747, column: 14)
!6822 = !DILocation(line: 747, column: 52, scope: !6821)
!6823 = !DILocation(line: 747, column: 14, scope: !6813)
!6824 = !DILocation(line: 748, column: 13, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6821, file: !6655, line: 747, column: 58)
!6826 = !DILocation(line: 754, column: 4, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6828, file: !6655, line: 754, column: 4)
!6828 = distinct !DILexicalBlock(scope: !6829, file: !6655, line: 754, column: 4)
!6829 = distinct !DILexicalBlock(scope: !6830, file: !6655, line: 754, column: 4)
!6830 = distinct !DILexicalBlock(scope: !6821, file: !6655, line: 753, column: 10)
!6831 = !DILocation(line: 758, column: 3, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6833, file: !6655, line: 758, column: 3)
!6833 = distinct !DILexicalBlock(scope: !6834, file: !6655, line: 758, column: 3)
!6834 = distinct !DILexicalBlock(scope: !6835, file: !6655, line: 758, column: 3)
!6835 = distinct !DILexicalBlock(scope: !6793, file: !6655, line: 757, column: 9)
!6836 = !DILocation(line: 766, column: 2, scope: !6774)
!6837 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6655, file: !6655, line: 229, type: !6752, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !6838)
!6838 = !{!6839, !6840, !6841, !6842, !6843, !6844, !6847}
!6839 = !DILocalVariable(name: "esf", arg: 1, scope: !6837, file: !6655, line: 229, type: !2799)
!6840 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6837, file: !6655, line: 229, type: !118)
!6841 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6837, file: !6655, line: 230, type: !6728)
!6842 = !DILocalVariable(name: "reason", scope: !6837, file: !6655, line: 232, type: !156)
!6843 = !DILocalVariable(name: "mmfar", scope: !6837, file: !6655, line: 233, type: !156)
!6844 = !DILocalVariable(name: "temp", scope: !6845, file: !6655, line: 254, type: !156)
!6845 = distinct !DILexicalBlock(scope: !6846, file: !6655, line: 244, column: 48)
!6846 = distinct !DILexicalBlock(scope: !6837, file: !6655, line: 244, column: 6)
!6847 = !DILocalVariable(name: "min_stack_ptr", scope: !6848, file: !6655, line: 309, type: !156)
!6848 = distinct !DILexicalBlock(scope: !6849, file: !6655, line: 308, column: 43)
!6849 = distinct !DILexicalBlock(scope: !6850, file: !6655, line: 308, column: 7)
!6850 = distinct !DILexicalBlock(scope: !6851, file: !6655, line: 289, column: 40)
!6851 = distinct !DILexicalBlock(scope: !6837, file: !6655, line: 288, column: 6)
!6852 = !DILocation(line: 0, scope: !6837)
!6853 = !DILocation(line: 237, column: 12, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6837, file: !6655, line: 237, column: 6)
!6855 = !DILocation(line: 241, column: 12, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6837, file: !6655, line: 241, column: 6)
!6857 = !DILocation(line: 244, column: 12, scope: !6846)
!6858 = !DILocation(line: 244, column: 17, scope: !6846)
!6859 = !DILocation(line: 244, column: 42, scope: !6846)
!6860 = !DILocation(line: 244, column: 6, scope: !6837)
!6861 = !DILocation(line: 254, column: 24, scope: !6845)
!6862 = !DILocation(line: 0, scope: !6845)
!6863 = !DILocation(line: 256, column: 13, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6845, file: !6655, line: 256, column: 7)
!6865 = !DILocation(line: 256, column: 18, scope: !6864)
!6866 = !DILocation(line: 256, column: 44, scope: !6864)
!6867 = !DILocation(line: 256, column: 7, scope: !6845)
!6868 = !DILocation(line: 259, column: 24, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6870, file: !6655, line: 259, column: 8)
!6870 = distinct !DILexicalBlock(scope: !6864, file: !6655, line: 256, column: 50)
!6871 = !DILocation(line: 259, column: 8, scope: !6870)
!6872 = !DILocation(line: 261, column: 15, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6869, file: !6655, line: 259, column: 30)
!6874 = !DILocation(line: 262, column: 4, scope: !6873)
!6875 = !DILocation(line: 265, column: 12, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6837, file: !6655, line: 265, column: 6)
!6877 = !DILocation(line: 269, column: 12, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6837, file: !6655, line: 269, column: 6)
!6879 = !DILocation(line: 288, column: 12, scope: !6851)
!6880 = !DILocation(line: 288, column: 17, scope: !6851)
!6881 = !DILocation(line: 288, column: 41, scope: !6851)
!6882 = !DILocation(line: 289, column: 9, scope: !6851)
!6883 = !DILocation(line: 289, column: 14, scope: !6851)
!6884 = !DILocation(line: 288, column: 6, scope: !6837)
!6885 = !DILocation(line: 308, column: 12, scope: !6849)
!6886 = !DILocation(line: 308, column: 17, scope: !6849)
!6887 = !DILocation(line: 308, column: 7, scope: !6850)
!6888 = !DILocation(line: 310, column: 6, scope: !6848)
!6889 = !DILocation(line: 309, column: 29, scope: !6848)
!6890 = !DILocation(line: 0, scope: !6848)
!6891 = !DILocation(line: 312, column: 8, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6848, file: !6655, line: 312, column: 8)
!6893 = !DILocation(line: 312, column: 8, scope: !6848)
!6894 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6895, file: !6346, line: 1099, type: !156)
!6895 = distinct !DISubprogram(name: "__set_PSP", scope: !6346, file: !6346, line: 1099, type: !6443, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !6896)
!6896 = !{!6894}
!6897 = !DILocation(line: 0, scope: !6895, inlinedAt: !6898)
!6898 = distinct !DILocation(line: 338, column: 5, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6892, file: !6655, line: 312, column: 23)
!6900 = !DILocation(line: 1101, column: 3, scope: !6895, inlinedAt: !6898)
!6901 = !{i64 3529930}
!6902 = !DILocation(line: 341, column: 4, scope: !6899)
!6903 = !DILocation(line: 342, column: 5, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6905, file: !6655, line: 342, column: 5)
!6905 = distinct !DILexicalBlock(scope: !6906, file: !6655, line: 342, column: 5)
!6906 = distinct !DILexicalBlock(scope: !6892, file: !6655, line: 341, column: 11)
!6907 = !DILocation(line: 342, column: 5, scope: !6905)
!6908 = !DILocation(line: 342, column: 5, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6904, file: !6655, line: 342, column: 5)
!6910 = !DILocation(line: 360, column: 12, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6837, file: !6655, line: 360, column: 6)
!6912 = !DILocation(line: 360, column: 17, scope: !6911)
!6913 = !DILocation(line: 360, column: 41, scope: !6911)
!6914 = !DILocation(line: 360, column: 6, scope: !6837)
!6915 = !DILocation(line: 361, column: 14, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6911, file: !6655, line: 360, column: 47)
!6917 = !DILocation(line: 362, column: 2, scope: !6916)
!6918 = !DILocation(line: 366, column: 12, scope: !6837)
!6919 = !DILocation(line: 369, column: 15, scope: !6837)
!6920 = !DILocation(line: 371, column: 2, scope: !6837)
!6921 = distinct !DISubprogram(name: "bus_fault", scope: !6655, file: !6655, line: 383, type: !6922, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !6924)
!6922 = !DISubroutineType(types: !6923)
!6923 = !{!118, !2799, !118, !6728}
!6924 = !{!6925, !6926, !6927, !6928, !6929}
!6925 = !DILocalVariable(name: "esf", arg: 1, scope: !6921, file: !6655, line: 383, type: !2799)
!6926 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6921, file: !6655, line: 383, type: !118)
!6927 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6921, file: !6655, line: 383, type: !6728)
!6928 = !DILocalVariable(name: "reason", scope: !6921, file: !6655, line: 385, type: !156)
!6929 = !DILocalVariable(name: "bfar", scope: !6930, file: !6655, line: 405, type: !156)
!6930 = distinct !DILexicalBlock(scope: !6931, file: !6655, line: 395, column: 42)
!6931 = distinct !DILexicalBlock(scope: !6921, file: !6655, line: 395, column: 6)
!6932 = !DILocation(line: 0, scope: !6921)
!6933 = !DILocation(line: 389, column: 11, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6921, file: !6655, line: 389, column: 6)
!6935 = !DILocation(line: 392, column: 11, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6921, file: !6655, line: 392, column: 6)
!6937 = !DILocation(line: 395, column: 11, scope: !6931)
!6938 = !DILocation(line: 395, column: 16, scope: !6931)
!6939 = !DILocation(line: 395, column: 6, scope: !6921)
!6940 = !DILocation(line: 405, column: 3, scope: !6930)
!6941 = !DILocation(line: 0, scope: !6930)
!6942 = !DILocation(line: 407, column: 13, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6930, file: !6655, line: 407, column: 7)
!6944 = !DILocation(line: 407, column: 18, scope: !6943)
!6945 = !DILocation(line: 407, column: 44, scope: !6943)
!6946 = !DILocation(line: 407, column: 7, scope: !6930)
!6947 = !DILocation(line: 411, column: 15, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6949, file: !6655, line: 409, column: 30)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !6655, line: 409, column: 8)
!6950 = distinct !DILexicalBlock(scope: !6943, file: !6655, line: 407, column: 50)
!6951 = !DILocation(line: 412, column: 4, scope: !6948)
!6952 = !DILocation(line: 415, column: 11, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6921, file: !6655, line: 415, column: 6)
!6954 = !DILocation(line: 418, column: 12, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6921, file: !6655, line: 418, column: 6)
!6956 = !DILocation(line: 418, column: 17, scope: !6955)
!6957 = !DILocation(line: 418, column: 41, scope: !6955)
!6958 = !DILocation(line: 418, column: 6, scope: !6921)
!6959 = !DILocation(line: 423, column: 18, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6955, file: !6655, line: 423, column: 13)
!6961 = !DILocation(line: 524, column: 12, scope: !6921)
!6962 = !DILocation(line: 526, column: 15, scope: !6921)
!6963 = !DILocation(line: 528, column: 2, scope: !6921)
!6964 = distinct !DISubprogram(name: "usage_fault", scope: !6655, file: !6655, line: 539, type: !6965, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !6969)
!6965 = !DISubroutineType(types: !6966)
!6966 = !{!156, !6967}
!6967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6968, size: 32)
!6968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2800)
!6969 = !{!6970, !6971}
!6970 = !DILocalVariable(name: "esf", arg: 1, scope: !6964, file: !6655, line: 539, type: !6967)
!6971 = !DILocalVariable(name: "reason", scope: !6964, file: !6655, line: 541, type: !156)
!6972 = !DILocation(line: 0, scope: !6964)
!6973 = !DILocation(line: 546, column: 12, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6964, file: !6655, line: 546, column: 6)
!6975 = !DILocation(line: 549, column: 12, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6964, file: !6655, line: 549, column: 6)
!6977 = !DILocation(line: 567, column: 12, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6964, file: !6655, line: 567, column: 6)
!6979 = !DILocation(line: 570, column: 12, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6964, file: !6655, line: 570, column: 6)
!6981 = !DILocation(line: 573, column: 12, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6964, file: !6655, line: 573, column: 6)
!6983 = !DILocation(line: 576, column: 12, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6964, file: !6655, line: 576, column: 6)
!6985 = !DILocation(line: 581, column: 12, scope: !6964)
!6986 = !DILocation(line: 583, column: 2, scope: !6964)
!6987 = distinct !DISubprogram(name: "debug_monitor", scope: !6655, file: !6655, line: 632, type: !6988, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !6990)
!6988 = !DISubroutineType(types: !6989)
!6989 = !{null, !2799, !6728}
!6990 = !{!6991, !6992}
!6991 = !DILocalVariable(name: "esf", arg: 1, scope: !6987, file: !6655, line: 632, type: !2799)
!6992 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6987, file: !6655, line: 632, type: !6728)
!6993 = !DILocation(line: 0, scope: !6987)
!6994 = !DILocation(line: 634, column: 15, scope: !6987)
!6995 = !DILocation(line: 652, column: 1, scope: !6987)
!6996 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6655, file: !6655, line: 658, type: !6997, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !6999)
!6997 = !DISubroutineType(types: !6998)
!6998 = !{!146, !2799}
!6999 = !{!7000, !7001, !7002}
!7000 = !DILocalVariable(name: "esf", arg: 1, scope: !6996, file: !6655, line: 658, type: !2799)
!7001 = !DILocalVariable(name: "ret_addr", scope: !6996, file: !6655, line: 660, type: !2570)
!7002 = !DILocalVariable(name: "fault_insn", scope: !6996, file: !6655, line: 686, type: !279)
!7003 = !DILocation(line: 0, scope: !6996)
!7004 = !DILocation(line: 660, column: 46, scope: !6996)
!7005 = !DILocation(line: 660, column: 23, scope: !6996)
!7006 = !DILocation(line: 682, column: 11, scope: !6996)
!7007 = !DILocation(line: 271, column: 3, scope: !7008, inlinedAt: !7009)
!7008 = distinct !DISubprogram(name: "__DSB", scope: !6346, file: !6346, line: 269, type: !365, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !2123)
!7009 = distinct !DILocation(line: 683, column: 2, scope: !6996)
!7010 = !{i64 3506065}
!7011 = !DILocation(line: 260, column: 3, scope: !7012, inlinedAt: !7013)
!7012 = distinct !DISubprogram(name: "__ISB", scope: !6346, file: !6346, line: 258, type: !365, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !2123)
!7013 = distinct !DILocation(line: 684, column: 2, scope: !6996)
!7014 = !{i64 3505782}
!7015 = !DILocation(line: 686, column: 35, scope: !6996)
!7016 = !DILocation(line: 686, column: 24, scope: !6996)
!7017 = !DILocation(line: 688, column: 11, scope: !6996)
!7018 = !DILocation(line: 271, column: 3, scope: !7008, inlinedAt: !7019)
!7019 = distinct !DILocation(line: 689, column: 2, scope: !6996)
!7020 = !DILocation(line: 260, column: 3, scope: !7012, inlinedAt: !7021)
!7021 = distinct !DILocation(line: 690, column: 2, scope: !6996)
!7022 = !DILocation(line: 693, column: 45, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !6996, file: !6655, line: 693, column: 6)
!7024 = !DILocation(line: 699, column: 1, scope: !6996)
!7025 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6655, file: !6655, line: 1107, type: !365, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !2123)
!7026 = !DILocation(line: 1111, column: 11, scope: !7025)
!7027 = !DILocation(line: 1136, column: 1, scope: !7025)
!7028 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7029, file: !7029, line: 26, type: !365, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !7030)
!7029 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7030 = !{!7031}
!7031 = !DILocalVariable(name: "irq", scope: !7028, file: !7029, line: 28, type: !118)
!7032 = !DILocation(line: 0, scope: !7028)
!7033 = !DILocation(line: 30, column: 2, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7028, file: !7029, line: 30, column: 2)
!7035 = !DILocation(line: 31, column: 3, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7037, file: !7029, line: 30, column: 39)
!7037 = distinct !DILexicalBlock(scope: !7034, file: !7029, line: 30, column: 2)
!7038 = !DILocation(line: 30, column: 35, scope: !7037)
!7039 = !DILocation(line: 30, column: 13, scope: !7037)
!7040 = distinct !{!7040, !7033, !7041}
!7041 = !DILocation(line: 32, column: 2, scope: !7034)
!7042 = !DILocation(line: 33, column: 1, scope: !7028)
!7043 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !656, file: !656, line: 1814, type: !6386, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !7044)
!7044 = !{!7045, !7046}
!7045 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7043, file: !656, line: 1814, type: !911)
!7046 = !DILocalVariable(name: "priority", arg: 2, scope: !7043, file: !656, line: 1814, type: !156)
!7047 = !DILocation(line: 0, scope: !7043)
!7048 = !DILocation(line: 1816, column: 7, scope: !7043)
!7049 = !DILocation(line: 0, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7043, file: !656, line: 1816, column: 7)
!7051 = !DILocation(line: 1824, column: 1, scope: !7043)
!7052 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7053, file: !7053, line: 27, type: !7054, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2887, retainedNodes: !7159)
!7053 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7054 = !DISubroutineType(types: !7055)
!7055 = !{null, !7056}
!7056 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !7057)
!7057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7058, size: 32)
!7058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !7059)
!7059 = !{!7060, !7118, !7130, !7131, !7132, !7133, !7139, !7154}
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7058, file: !225, line: 247, baseType: !7061, size: 384)
!7061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !7062)
!7062 = !{!7063, !7087, !7094, !7095, !7096, !7105, !7106, !7107}
!7063 = !DIDerivedType(tag: DW_TAG_member, scope: !7061, file: !225, line: 60, baseType: !7064, size: 64)
!7064 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7061, file: !225, line: 60, size: 64, elements: !7065)
!7065 = !{!7066, !7081}
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7064, file: !225, line: 61, baseType: !7067, size: 64)
!7067 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !7068)
!7068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !7069)
!7069 = !{!7070, !7076}
!7070 = !DIDerivedType(tag: DW_TAG_member, scope: !7068, file: !235, line: 38, baseType: !7071, size: 32)
!7071 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7068, file: !235, line: 38, size: 32, elements: !7072)
!7072 = !{!7073, !7075}
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7071, file: !235, line: 39, baseType: !7074, size: 32)
!7074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7068, size: 32)
!7075 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7071, file: !235, line: 40, baseType: !7074, size: 32)
!7076 = !DIDerivedType(tag: DW_TAG_member, scope: !7068, file: !235, line: 42, baseType: !7077, size: 32, offset: 32)
!7077 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7068, file: !235, line: 42, size: 32, elements: !7078)
!7078 = !{!7079, !7080}
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7077, file: !235, line: 43, baseType: !7074, size: 32)
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7077, file: !235, line: 44, baseType: !7074, size: 32)
!7081 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7064, file: !225, line: 62, baseType: !7082, size: 64)
!7082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !7083)
!7083 = !{!7084}
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7082, file: !251, line: 50, baseType: !7085, size: 64)
!7085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7086, size: 64, elements: !256)
!7086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7082, size: 32)
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7061, file: !225, line: 68, baseType: !7088, size: 32, offset: 64)
!7088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7089, size: 32)
!7089 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !7090)
!7090 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !7091)
!7091 = !{!7092}
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7090, file: !261, line: 232, baseType: !7093, size: 64)
!7093 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !7068)
!7094 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7061, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7061, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!7096 = !DIDerivedType(tag: DW_TAG_member, scope: !7061, file: !225, line: 90, baseType: !7097, size: 16, offset: 112)
!7097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7061, file: !225, line: 90, size: 16, elements: !7098)
!7098 = !{!7099, !7104}
!7099 = !DIDerivedType(tag: DW_TAG_member, scope: !7097, file: !225, line: 91, baseType: !7100, size: 16)
!7100 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7097, file: !225, line: 91, size: 16, elements: !7101)
!7101 = !{!7102, !7103}
!7102 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7100, file: !225, line: 96, baseType: !275, size: 8)
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7100, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!7104 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7097, file: !225, line: 100, baseType: !279, size: 16)
!7105 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7061, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!7106 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7061, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!7107 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7061, file: !225, line: 131, baseType: !7108, size: 192, offset: 192)
!7108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !7109)
!7109 = !{!7110, !7111, !7117}
!7110 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7108, file: !261, line: 245, baseType: !7067, size: 64)
!7111 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7108, file: !261, line: 246, baseType: !7112, size: 32, offset: 64)
!7112 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !7113)
!7113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7114, size: 32)
!7114 = !DISubroutineType(types: !7115)
!7115 = !{null, !7116}
!7116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7108, size: 32)
!7117 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7108, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!7118 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7058, file: !225, line: 250, baseType: !7119, size: 288, offset: 384)
!7119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !7120)
!7120 = !{!7121, !7122, !7123, !7124, !7125, !7126, !7127, !7128, !7129}
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7119, file: !296, line: 26, baseType: !156, size: 32)
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7119, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!7123 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7119, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7119, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!7125 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7119, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!7126 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7119, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!7127 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7119, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!7128 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7119, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!7129 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7119, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!7130 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7058, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!7131 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7058, file: !225, line: 256, baseType: !7089, size: 64, offset: 704)
!7132 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7058, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!7133 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7058, file: !225, line: 300, baseType: !7134, size: 96, offset: 800)
!7134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !7135)
!7135 = !{!7136, !7137, !7138}
!7136 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7134, file: !225, line: 153, baseType: !22, size: 32)
!7137 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7134, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7134, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!7139 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7058, file: !225, line: 325, baseType: !7140, size: 32, offset: 896)
!7140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7141, size: 32)
!7141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !7142)
!7142 = !{!7143, !7149, !7150}
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7141, file: !220, line: 5074, baseType: !7144, size: 96)
!7144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !7145)
!7145 = !{!7146, !7147, !7148}
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7144, file: !324, line: 57, baseType: !327, size: 32)
!7147 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7144, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7144, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!7149 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7141, file: !220, line: 5075, baseType: !7089, size: 64, offset: 96)
!7150 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7141, file: !220, line: 5076, baseType: !7151, size: 32, offset: 160)
!7151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !7152)
!7152 = !{!7153}
!7153 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7151, file: !334, line: 52, baseType: !22, size: 32)
!7154 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7058, file: !225, line: 343, baseType: !7155, size: 64, offset: 928)
!7155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !7156)
!7156 = !{!7157, !7158}
!7157 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7155, file: !296, line: 63, baseType: !156, size: 32)
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7155, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!7159 = !{!7160}
!7160 = !DILocalVariable(name: "thread", arg: 1, scope: !7052, file: !7053, line: 27, type: !7056)
!7161 = !DILocation(line: 0, scope: !7052)
!7162 = !DILocation(line: 29, column: 6, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7052, file: !7053, line: 29, column: 6)
!7164 = !DILocation(line: 29, column: 15, scope: !7163)
!7165 = !DILocation(line: 29, column: 6, scope: !7052)
!7166 = !DILocation(line: 1031, column: 3, scope: !7167, inlinedAt: !7170)
!7167 = distinct !DISubprogram(name: "__get_IPSR", scope: !6346, file: !6346, line: 1027, type: !6433, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2887, retainedNodes: !7168)
!7168 = !{!7169}
!7169 = !DILocalVariable(name: "result", scope: !7167, file: !6346, line: 1029, type: !156)
!7170 = distinct !DILocation(line: 48, column: 10, scope: !7171, inlinedAt: !7175)
!7171 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7172, file: !7172, line: 46, type: !7173, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2887, retainedNodes: !2123)
!7172 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7173 = !DISubroutineType(types: !7174)
!7174 = !{!146}
!7175 = distinct !DILocation(line: 30, column: 7, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7177, file: !7053, line: 30, column: 7)
!7177 = distinct !DILexicalBlock(scope: !7163, file: !7053, line: 29, column: 26)
!7178 = !{i64 3494913}
!7179 = !DILocation(line: 0, scope: !7167, inlinedAt: !7170)
!7180 = !DILocation(line: 48, column: 9, scope: !7171, inlinedAt: !7175)
!7181 = !DILocation(line: 30, column: 7, scope: !7177)
!7182 = !DILocation(line: 42, column: 14, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7176, file: !7053, line: 30, column: 25)
!7184 = !DILocation(line: 48, column: 15, scope: !7183)
!7185 = !DILocation(line: 49, column: 3, scope: !7183)
!7186 = !DILocation(line: 52, column: 2, scope: !7052)
!7187 = !DILocation(line: 53, column: 1, scope: !7052)
!7188 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !523, file: !523, line: 127, type: !365, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !516, retainedNodes: !2123)
!7189 = !DILocation(line: 134, column: 2, scope: !7188)
!7190 = !DILocation(line: 156, column: 1, scope: !7188)
!7191 = !DILocation(line: 0, scope: !522)
!7192 = !DILocation(line: 289, column: 36, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !522, file: !523, line: 285, column: 2)
!7194 = !DILocation(line: 289, column: 42, scope: !7193)
!7195 = !DILocation(line: 300, column: 36, scope: !522)
!7196 = !DILocation(line: 301, column: 35, scope: !522)
!7197 = !DILocation(line: 302, column: 37, scope: !522)
!7198 = !DILocation(line: 311, column: 2, scope: !522)
!7199 = !DILocation(line: 316, column: 1, scope: !522)
!7200 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !684, file: !684, line: 180, type: !365, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !2123)
!7201 = !DILocation(line: 188, column: 12, scope: !7200)
!7202 = !DILocation(line: 271, column: 3, scope: !7203, inlinedAt: !7204)
!7203 = distinct !DISubprogram(name: "__DSB", scope: !6346, file: !6346, line: 269, type: !365, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !2123)
!7204 = distinct !DILocation(line: 192, column: 2, scope: !7200)
!7205 = !{i64 3666729}
!7206 = !DILocation(line: 260, column: 3, scope: !7207, inlinedAt: !7208)
!7207 = distinct !DISubprogram(name: "__ISB", scope: !6346, file: !6346, line: 258, type: !365, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !2123)
!7208 = distinct !DILocation(line: 193, column: 2, scope: !7200)
!7209 = !{i64 3666446}
!7210 = !DILocation(line: 194, column: 1, scope: !7200)
!7211 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !684, file: !684, line: 199, type: !365, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !2123)
!7212 = !DILocation(line: 282, column: 3, scope: !7213, inlinedAt: !7214)
!7213 = distinct !DISubprogram(name: "__DMB", scope: !6346, file: !6346, line: 280, type: !365, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !2123)
!7214 = distinct !DILocation(line: 202, column: 2, scope: !7211)
!7215 = !{i64 3667005}
!7216 = !DILocation(line: 205, column: 12, scope: !7211)
!7217 = !DILocation(line: 206, column: 1, scope: !7211)
!7218 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !684, file: !684, line: 275, type: !7219, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7232)
!7219 = !DISubroutineType(types: !7220)
!7220 = !{null, !7221, !1905, !6622, !6622}
!7221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7222, size: 32)
!7222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7223)
!7223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !635, line: 52, size: 96, elements: !7224)
!7224 = !{!7225, !7226, !7227}
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7223, file: !635, line: 53, baseType: !22, size: 32)
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7223, file: !635, line: 54, baseType: !315, size: 32, offset: 32)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7223, file: !635, line: 55, baseType: !7228, size: 32, offset: 64)
!7228 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !641, line: 151, baseType: !7229)
!7229 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !641, line: 149, size: 32, elements: !7230)
!7230 = !{!7231}
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7229, file: !641, line: 150, baseType: !156, size: 32)
!7232 = !{!7233, !7234, !7235, !7236}
!7233 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7218, file: !684, line: 276, type: !7221)
!7234 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7218, file: !684, line: 276, type: !1905)
!7235 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7218, file: !684, line: 277, type: !6622)
!7236 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7218, file: !684, line: 277, type: !6622)
!7237 = !DILocation(line: 0, scope: !7218)
!7238 = !DILocation(line: 279, column: 6, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7218, file: !684, line: 279, column: 6)
!7240 = !DILocation(line: 280, column: 57, scope: !7239)
!7241 = !DILocation(line: 279, column: 6, scope: !7218)
!7242 = !DILocation(line: 282, column: 3, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7244, file: !684, line: 282, column: 3)
!7244 = distinct !DILexicalBlock(scope: !7245, file: !684, line: 282, column: 3)
!7245 = distinct !DILexicalBlock(scope: !7246, file: !684, line: 282, column: 3)
!7246 = distinct !DILexicalBlock(scope: !7239, file: !684, line: 280, column: 69)
!7247 = !DILocation(line: 285, column: 1, scope: !7218)
!7248 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7249, file: !7249, line: 220, type: !7250, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7252)
!7249 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7250 = !DISubroutineType(types: !7251)
!7251 = !{!118, !7221, !1905, !6622, !6622}
!7252 = !{!7253, !7254, !7255, !7256, !7257}
!7253 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7248, file: !7249, line: 221, type: !7221)
!7254 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7248, file: !7249, line: 221, type: !1905)
!7255 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7248, file: !7249, line: 222, type: !6622)
!7256 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7248, file: !7249, line: 223, type: !6622)
!7257 = !DILocalVariable(name: "mpu_reg_index", scope: !7248, file: !7249, line: 225, type: !118)
!7258 = !DILocation(line: 0, scope: !7248)
!7259 = !DILocation(line: 225, column: 22, scope: !7248)
!7260 = !DILocation(line: 233, column: 18, scope: !7248)
!7261 = !DILocation(line: 236, column: 23, scope: !7248)
!7262 = !DILocation(line: 236, column: 21, scope: !7248)
!7263 = !DILocation(line: 238, column: 2, scope: !7248)
!7264 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !684, file: !684, line: 105, type: !7265, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7267)
!7265 = !DISubroutineType(types: !7266)
!7266 = !{!118, !7221, !143, !143, !146}
!7267 = !{!7268, !7269, !7270, !7271, !7272, !7273}
!7268 = !DILocalVariable(name: "regions", arg: 1, scope: !7264, file: !684, line: 106, type: !7221)
!7269 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7264, file: !684, line: 106, type: !143)
!7270 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7264, file: !684, line: 106, type: !143)
!7271 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7264, file: !684, line: 107, type: !146)
!7272 = !DILocalVariable(name: "i", scope: !7264, file: !684, line: 109, type: !118)
!7273 = !DILocalVariable(name: "reg_index", scope: !7264, file: !684, line: 110, type: !118)
!7274 = !DILocation(line: 0, scope: !7264)
!7275 = !DILocation(line: 110, column: 18, scope: !7264)
!7276 = !DILocation(line: 112, column: 16, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7278, file: !684, line: 112, column: 2)
!7278 = distinct !DILexicalBlock(scope: !7264, file: !684, line: 112, column: 2)
!7279 = !DILocation(line: 112, column: 2, scope: !7278)
!7280 = !DILocation(line: 113, column: 7, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7282, file: !684, line: 113, column: 7)
!7282 = distinct !DILexicalBlock(scope: !7277, file: !684, line: 112, column: 36)
!7283 = !DILocation(line: 113, column: 18, scope: !7281)
!7284 = !DILocation(line: 113, column: 23, scope: !7281)
!7285 = !DILocation(line: 113, column: 7, scope: !7282)
!7286 = !DILocation(line: 118, column: 23, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7282, file: !684, line: 118, column: 7)
!7288 = !DILocation(line: 119, column: 7, scope: !7287)
!7289 = !DILocation(line: 118, column: 7, scope: !7282)
!7290 = !DILocation(line: 124, column: 36, scope: !7282)
!7291 = !DILocation(line: 124, column: 15, scope: !7282)
!7292 = !DILocation(line: 126, column: 17, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7282, file: !684, line: 126, column: 7)
!7294 = !DILocation(line: 126, column: 7, scope: !7282)
!7295 = !DILocation(line: 131, column: 12, scope: !7282)
!7296 = !DILocation(line: 132, column: 2, scope: !7282)
!7297 = !DILocation(line: 112, column: 32, scope: !7277)
!7298 = distinct !{!7298, !7279, !7299}
!7299 = !DILocation(line: 132, column: 2, scope: !7278)
!7300 = !DILocation(line: 135, column: 1, scope: !7264)
!7301 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7249, file: !7249, line: 63, type: !7302, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7304)
!7302 = !DISubroutineType(types: !7303)
!7303 = !{!118, !7221}
!7304 = !{!7305, !7306}
!7305 = !DILocalVariable(name: "part", arg: 1, scope: !7301, file: !7249, line: 63, type: !7221)
!7306 = !DILocalVariable(name: "partition_is_valid", scope: !7301, file: !7249, line: 70, type: !118)
!7307 = !DILocation(line: 0, scope: !7301)
!7308 = !DILocation(line: 71, column: 11, scope: !7301)
!7309 = !DILocation(line: 71, column: 37, scope: !7301)
!7310 = !DILocation(line: 72, column: 3, scope: !7301)
!7311 = !DILocation(line: 71, column: 30, scope: !7301)
!7312 = !DILocation(line: 75, column: 11, scope: !7301)
!7313 = !DILocation(line: 75, column: 17, scope: !7301)
!7314 = !DILocation(line: 75, column: 38, scope: !7301)
!7315 = !DILocation(line: 77, column: 2, scope: !7301)
!7316 = distinct !DISubprogram(name: "mpu_configure_region", scope: !684, file: !684, line: 79, type: !7317, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7319)
!7317 = !DISubroutineType(types: !7318)
!7318 = !{!118, !1905, !7221}
!7319 = !{!7320, !7321, !7322}
!7320 = !DILocalVariable(name: "index", arg: 1, scope: !7316, file: !684, line: 79, type: !1905)
!7321 = !DILocalVariable(name: "new_region", arg: 2, scope: !7316, file: !684, line: 80, type: !7221)
!7322 = !DILocalVariable(name: "region_conf", scope: !7316, file: !684, line: 82, type: !673)
!7323 = !DILocation(line: 0, scope: !7316)
!7324 = !DILocation(line: 82, column: 2, scope: !7316)
!7325 = !DILocation(line: 82, column: 24, scope: !7316)
!7326 = !DILocation(line: 87, column: 33, scope: !7316)
!7327 = !DILocation(line: 87, column: 14, scope: !7316)
!7328 = !DILocation(line: 87, column: 19, scope: !7316)
!7329 = !DILocation(line: 91, column: 55, scope: !7316)
!7330 = !DILocation(line: 92, column: 16, scope: !7316)
!7331 = !DILocation(line: 92, column: 53, scope: !7316)
!7332 = !DILocation(line: 91, column: 2, scope: !7316)
!7333 = !DILocation(line: 95, column: 9, scope: !7316)
!7334 = !DILocation(line: 97, column: 1, scope: !7316)
!7335 = !DILocation(line: 95, column: 2, scope: !7316)
!7336 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7249, file: !7249, line: 113, type: !7337, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7342)
!7337 = !DISubroutineType(types: !7338)
!7338 = !{null, !7339, !7340, !156, !156}
!7339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!7340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7341, size: 32)
!7341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7228)
!7342 = !{!7343, !7344, !7345, !7346}
!7343 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7336, file: !7249, line: 114, type: !7339)
!7344 = !DILocalVariable(name: "attr", arg: 2, scope: !7336, file: !7249, line: 115, type: !7340)
!7345 = !DILocalVariable(name: "base", arg: 3, scope: !7336, file: !7249, line: 115, type: !156)
!7346 = !DILocalVariable(name: "size", arg: 4, scope: !7336, file: !7249, line: 115, type: !156)
!7347 = !DILocation(line: 0, scope: !7336)
!7348 = !DILocation(line: 127, column: 23, scope: !7336)
!7349 = !DILocation(line: 127, column: 35, scope: !7336)
!7350 = !DILocation(line: 127, column: 33, scope: !7336)
!7351 = !DILocation(line: 127, column: 10, scope: !7336)
!7352 = !DILocation(line: 127, column: 15, scope: !7336)
!7353 = !DILocation(line: 129, column: 1, scope: !7336)
!7354 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !684, file: !684, line: 57, type: !7355, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7357)
!7355 = !DISubroutineType(types: !7356)
!7356 = !{!118, !1905, !671}
!7357 = !{!7358, !7359}
!7358 = !DILocalVariable(name: "index", arg: 1, scope: !7354, file: !684, line: 57, type: !1905)
!7359 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7354, file: !684, line: 58, type: !671)
!7360 = !DILocation(line: 0, scope: !7354)
!7361 = !DILocation(line: 61, column: 6, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7354, file: !684, line: 61, column: 6)
!7363 = !DILocation(line: 61, column: 12, scope: !7362)
!7364 = !DILocation(line: 61, column: 6, scope: !7354)
!7365 = !DILocation(line: 71, column: 2, scope: !7354)
!7366 = !DILocation(line: 73, column: 2, scope: !7354)
!7367 = !DILocation(line: 74, column: 1, scope: !7354)
!7368 = distinct !DISubprogram(name: "region_init", scope: !7249, file: !7249, line: 29, type: !7369, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7371)
!7369 = !DISubroutineType(types: !7370)
!7370 = !{null, !6622, !671}
!7371 = !{!7372, !7373}
!7372 = !DILocalVariable(name: "index", arg: 1, scope: !7368, file: !7249, line: 29, type: !6622)
!7373 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7368, file: !7249, line: 30, type: !671)
!7374 = !DILocation(line: 0, scope: !7368)
!7375 = !DILocation(line: 33, column: 2, scope: !7368)
!7376 = !DILocation(line: 47, column: 28, scope: !7368)
!7377 = !DILocation(line: 47, column: 33, scope: !7368)
!7378 = !DILocation(line: 48, column: 26, scope: !7368)
!7379 = !DILocation(line: 47, column: 12, scope: !7368)
!7380 = !DILocation(line: 49, column: 32, scope: !7368)
!7381 = !DILocation(line: 49, column: 37, scope: !7368)
!7382 = !DILocation(line: 49, column: 12, scope: !7368)
!7383 = !DILocation(line: 53, column: 1, scope: !7368)
!7384 = distinct !DISubprogram(name: "set_region_number", scope: !7385, file: !7385, line: 32, type: !6443, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7386)
!7385 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7386 = !{!7387}
!7387 = !DILocalVariable(name: "index", arg: 1, scope: !7384, file: !7385, line: 32, type: !156)
!7388 = !DILocation(line: 0, scope: !7384)
!7389 = !DILocation(line: 34, column: 11, scope: !7384)
!7390 = !DILocation(line: 35, column: 1, scope: !7384)
!7391 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7249, file: !7249, line: 88, type: !7392, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7394)
!7392 = !DISubroutineType(types: !7393)
!7393 = !{!156, !156}
!7394 = !{!7395}
!7395 = !DILocalVariable(name: "size", arg: 1, scope: !7391, file: !7249, line: 88, type: !156)
!7396 = !DILocation(line: 0, scope: !7391)
!7397 = !DILocation(line: 91, column: 11, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7391, file: !7249, line: 91, column: 6)
!7399 = !DILocation(line: 91, column: 6, scope: !7391)
!7400 = !DILocation(line: 100, column: 11, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7391, file: !7249, line: 100, column: 6)
!7402 = !DILocation(line: 100, column: 6, scope: !7391)
!7403 = !DILocation(line: 104, column: 35, scope: !7391)
!7404 = !DILocation(line: 104, column: 16, scope: !7391)
!7405 = !DILocation(line: 104, column: 50, scope: !7391)
!7406 = !DILocation(line: 104, column: 72, scope: !7391)
!7407 = !DILocation(line: 104, column: 2, scope: !7391)
!7408 = !DILocation(line: 106, column: 1, scope: !7391)
!7409 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !684, file: !684, line: 307, type: !7410, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7412)
!7410 = !DISubroutineType(types: !7411)
!7411 = !{null, !7221, !143}
!7412 = !{!7413, !7414}
!7413 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7409, file: !684, line: 308, type: !7221)
!7414 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7409, file: !684, line: 308, type: !143)
!7415 = !DILocation(line: 0, scope: !7409)
!7416 = !DILocation(line: 310, column: 6, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7409, file: !684, line: 310, column: 6)
!7418 = !DILocation(line: 311, column: 3, scope: !7417)
!7419 = !DILocation(line: 310, column: 6, scope: !7409)
!7420 = !DILocation(line: 313, column: 3, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7422, file: !684, line: 313, column: 3)
!7422 = distinct !DILexicalBlock(scope: !7423, file: !684, line: 313, column: 3)
!7423 = distinct !DILexicalBlock(scope: !7424, file: !684, line: 313, column: 3)
!7424 = distinct !DILexicalBlock(scope: !7417, file: !684, line: 311, column: 15)
!7425 = !DILocation(line: 316, column: 1, scope: !7409)
!7426 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7249, file: !7249, line: 249, type: !7427, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7429)
!7427 = !DISubroutineType(types: !7428)
!7428 = !{!118, !7221, !143}
!7429 = !{!7430, !7431, !7432, !7433}
!7430 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7426, file: !7249, line: 250, type: !7221)
!7431 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7426, file: !7249, line: 250, type: !143)
!7432 = !DILocalVariable(name: "mpu_reg_index", scope: !7426, file: !7249, line: 252, type: !118)
!7433 = !DILocalVariable(name: "i", scope: !7434, file: !7249, line: 264, type: !118)
!7434 = distinct !DILexicalBlock(scope: !7435, file: !7249, line: 264, column: 3)
!7435 = distinct !DILexicalBlock(scope: !7436, file: !7249, line: 261, column: 32)
!7436 = distinct !DILexicalBlock(scope: !7426, file: !7249, line: 261, column: 6)
!7437 = !DILocation(line: 0, scope: !7426)
!7438 = !DILocation(line: 252, column: 22, scope: !7426)
!7439 = !DILocation(line: 258, column: 18, scope: !7426)
!7440 = !DILocation(line: 261, column: 20, scope: !7436)
!7441 = !DILocation(line: 261, column: 6, scope: !7426)
!7442 = !DILocation(line: 0, scope: !7434)
!7443 = !DILocation(line: 265, column: 4, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7445, file: !7249, line: 264, column: 59)
!7445 = distinct !DILexicalBlock(scope: !7434, file: !7249, line: 264, column: 3)
!7446 = !DILocation(line: 264, column: 55, scope: !7445)
!7447 = !DILocation(line: 264, column: 33, scope: !7445)
!7448 = !DILocation(line: 264, column: 3, scope: !7434)
!7449 = distinct !{!7449, !7448, !7450}
!7450 = !DILocation(line: 266, column: 3, scope: !7434)
!7451 = !DILocation(line: 269, column: 2, scope: !7426)
!7452 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7453, file: !7453, line: 218, type: !6443, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7454)
!7453 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7454 = !{!7455}
!7455 = !DILocalVariable(name: "rnr", arg: 1, scope: !7452, file: !7453, line: 218, type: !156)
!7456 = !DILocation(line: 0, scope: !7452)
!7457 = !DILocation(line: 220, column: 12, scope: !7452)
!7458 = !DILocation(line: 221, column: 13, scope: !7452)
!7459 = !DILocation(line: 222, column: 1, scope: !7452)
!7460 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !684, file: !684, line: 326, type: !7461, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7463)
!7461 = !DISubroutineType(types: !7462)
!7462 = !{!118}
!7463 = !{!7464}
!7464 = !DILocalVariable(name: "r_index", scope: !7460, file: !684, line: 328, type: !156)
!7465 = !DILocation(line: 330, column: 17, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7460, file: !684, line: 330, column: 6)
!7467 = !DILocation(line: 330, column: 29, scope: !7466)
!7468 = !DILocation(line: 330, column: 6, scope: !7460)
!7469 = !DILocation(line: 337, column: 3, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7471, file: !684, line: 337, column: 3)
!7471 = distinct !DILexicalBlock(scope: !7472, file: !684, line: 337, column: 3)
!7472 = distinct !DILexicalBlock(scope: !7473, file: !684, line: 337, column: 3)
!7473 = distinct !DILexicalBlock(scope: !7466, file: !684, line: 330, column: 50)
!7474 = !DILocation(line: 347, column: 2, scope: !7460)
!7475 = !DILocation(line: 0, scope: !7460)
!7476 = !DILocation(line: 364, column: 29, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7478, file: !684, line: 364, column: 2)
!7478 = distinct !DILexicalBlock(scope: !7460, file: !684, line: 364, column: 2)
!7479 = !DILocation(line: 364, column: 2, scope: !7478)
!7480 = !DILocation(line: 365, column: 25, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7477, file: !684, line: 364, column: 66)
!7482 = !DILocation(line: 365, column: 3, scope: !7481)
!7483 = !DILocation(line: 364, column: 62, scope: !7477)
!7484 = distinct !{!7484, !7479, !7485}
!7485 = !DILocation(line: 366, column: 2, scope: !7478)
!7486 = !DILocation(line: 369, column: 23, scope: !7460)
!7487 = !DILocation(line: 369, column: 21, scope: !7460)
!7488 = !DILocation(line: 372, column: 2, scope: !7460)
!7489 = !DILocation(line: 433, column: 2, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7491, file: !684, line: 433, column: 2)
!7491 = distinct !DILexicalBlock(scope: !7460, file: !684, line: 433, column: 2)
!7492 = !DILocation(line: 433, column: 2, scope: !7491)
!7493 = !DILocation(line: 433, column: 2, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7490, file: !684, line: 433, column: 2)
!7495 = !DILocation(line: 444, column: 1, scope: !7460)
!7496 = distinct !DISubprogram(name: "strcpy", scope: !7497, file: !7497, line: 20, type: !7498, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !7502)
!7497 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7498 = !DISubroutineType(types: !7499)
!7499 = !{!1259, !7500, !7501}
!7500 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1259)
!7501 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !133)
!7502 = !{!7503, !7504, !7505}
!7503 = !DILocalVariable(name: "d", arg: 1, scope: !7496, file: !7497, line: 20, type: !7500)
!7504 = !DILocalVariable(name: "s", arg: 2, scope: !7496, file: !7497, line: 20, type: !7501)
!7505 = !DILocalVariable(name: "dest", scope: !7496, file: !7497, line: 22, type: !1259)
!7506 = !DILocation(line: 0, scope: !7496)
!7507 = !DILocation(line: 24, column: 9, scope: !7496)
!7508 = !DILocation(line: 24, column: 12, scope: !7496)
!7509 = !DILocation(line: 24, column: 2, scope: !7496)
!7510 = !DILocation(line: 25, column: 6, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7496, file: !7497, line: 24, column: 21)
!7512 = !DILocation(line: 26, column: 4, scope: !7511)
!7513 = !DILocation(line: 27, column: 4, scope: !7511)
!7514 = distinct !{!7514, !7509, !7515}
!7515 = !DILocation(line: 28, column: 2, scope: !7496)
!7516 = !DILocation(line: 30, column: 5, scope: !7496)
!7517 = !DILocation(line: 32, column: 2, scope: !7496)
!7518 = distinct !DISubprogram(name: "strncpy", scope: !7497, file: !7497, line: 42, type: !7519, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !7521)
!7519 = !DISubroutineType(types: !7520)
!7520 = !{!1259, !7500, !7501, !315}
!7521 = !{!7522, !7523, !7524, !7525}
!7522 = !DILocalVariable(name: "d", arg: 1, scope: !7518, file: !7497, line: 42, type: !7500)
!7523 = !DILocalVariable(name: "s", arg: 2, scope: !7518, file: !7497, line: 42, type: !7501)
!7524 = !DILocalVariable(name: "n", arg: 3, scope: !7518, file: !7497, line: 42, type: !315)
!7525 = !DILocalVariable(name: "dest", scope: !7518, file: !7497, line: 44, type: !1259)
!7526 = !DILocation(line: 0, scope: !7518)
!7527 = !DILocation(line: 46, column: 12, scope: !7518)
!7528 = !DILocation(line: 46, column: 17, scope: !7518)
!7529 = !DILocation(line: 46, column: 20, scope: !7518)
!7530 = !DILocation(line: 46, column: 23, scope: !7518)
!7531 = !DILocation(line: 46, column: 2, scope: !7518)
!7532 = !DILocation(line: 47, column: 6, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7518, file: !7497, line: 46, column: 32)
!7534 = !DILocation(line: 48, column: 4, scope: !7533)
!7535 = !DILocation(line: 49, column: 4, scope: !7533)
!7536 = !DILocation(line: 50, column: 4, scope: !7533)
!7537 = distinct !{!7537, !7531, !7538}
!7538 = !DILocation(line: 51, column: 2, scope: !7518)
!7539 = !DILocation(line: 54, column: 6, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7518, file: !7497, line: 53, column: 16)
!7541 = !DILocation(line: 55, column: 4, scope: !7540)
!7542 = !DILocation(line: 56, column: 4, scope: !7540)
!7543 = !DILocation(line: 53, column: 11, scope: !7518)
!7544 = !DILocation(line: 53, column: 2, scope: !7518)
!7545 = distinct !{!7545, !7544, !7546}
!7546 = !DILocation(line: 57, column: 2, scope: !7518)
!7547 = !DILocation(line: 59, column: 2, scope: !7518)
!7548 = distinct !DISubprogram(name: "strchr", scope: !7497, file: !7497, line: 69, type: !7549, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !7551)
!7549 = !DISubroutineType(types: !7550)
!7550 = !{!1259, !133, !118}
!7551 = !{!7552, !7553, !7554}
!7552 = !DILocalVariable(name: "s", arg: 1, scope: !7548, file: !7497, line: 69, type: !133)
!7553 = !DILocalVariable(name: "c", arg: 2, scope: !7548, file: !7497, line: 69, type: !118)
!7554 = !DILocalVariable(name: "tmp", scope: !7548, file: !7497, line: 71, type: !135)
!7555 = !DILocation(line: 0, scope: !7548)
!7556 = !DILocation(line: 73, column: 2, scope: !7548)
!7557 = !DILocation(line: 73, column: 10, scope: !7548)
!7558 = !DILocation(line: 73, column: 13, scope: !7548)
!7559 = !DILocation(line: 73, column: 21, scope: !7548)
!7560 = !DILocation(line: 74, column: 4, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7548, file: !7497, line: 73, column: 38)
!7562 = distinct !{!7562, !7556, !7563}
!7563 = !DILocation(line: 75, column: 2, scope: !7548)
!7564 = !DILocation(line: 77, column: 9, scope: !7548)
!7565 = !DILocation(line: 77, column: 2, scope: !7548)
!7566 = distinct !DISubprogram(name: "strrchr", scope: !7497, file: !7497, line: 87, type: !7549, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !7567)
!7567 = !{!7568, !7569, !7570}
!7568 = !DILocalVariable(name: "s", arg: 1, scope: !7566, file: !7497, line: 87, type: !133)
!7569 = !DILocalVariable(name: "c", arg: 2, scope: !7566, file: !7497, line: 87, type: !118)
!7570 = !DILocalVariable(name: "match", scope: !7566, file: !7497, line: 89, type: !1259)
!7571 = !DILocation(line: 0, scope: !7566)
!7572 = !DILocation(line: 91, column: 2, scope: !7566)
!7573 = !DILocation(line: 92, column: 7, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !7497, line: 92, column: 7)
!7575 = distinct !DILexicalBlock(scope: !7566, file: !7497, line: 91, column: 5)
!7576 = !DILocation(line: 92, column: 10, scope: !7574)
!7577 = !DILocation(line: 92, column: 7, scope: !7575)
!7578 = !DILocation(line: 95, column: 13, scope: !7566)
!7579 = !DILocation(line: 95, column: 2, scope: !7575)
!7580 = distinct !{!7580, !7572, !7581}
!7581 = !DILocation(line: 95, column: 15, scope: !7566)
!7582 = !DILocation(line: 97, column: 2, scope: !7566)
!7583 = distinct !DISubprogram(name: "strlen", scope: !7497, file: !7497, line: 107, type: !7584, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !7586)
!7584 = !DISubroutineType(types: !7585)
!7585 = !{!315, !133}
!7586 = !{!7587, !7588}
!7587 = !DILocalVariable(name: "s", arg: 1, scope: !7583, file: !7497, line: 107, type: !133)
!7588 = !DILocalVariable(name: "n", scope: !7583, file: !7497, line: 109, type: !315)
!7589 = !DILocation(line: 0, scope: !7583)
!7590 = !DILocation(line: 111, column: 9, scope: !7583)
!7591 = !DILocation(line: 111, column: 12, scope: !7583)
!7592 = !DILocation(line: 111, column: 2, scope: !7583)
!7593 = !DILocation(line: 112, column: 4, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7583, file: !7497, line: 111, column: 21)
!7595 = !DILocation(line: 113, column: 4, scope: !7594)
!7596 = distinct !{!7596, !7592, !7597}
!7597 = !DILocation(line: 114, column: 2, scope: !7583)
!7598 = !DILocation(line: 116, column: 2, scope: !7583)
!7599 = distinct !DISubprogram(name: "strnlen", scope: !7497, file: !7497, line: 126, type: !7600, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !7602)
!7600 = !DISubroutineType(types: !7601)
!7601 = !{!315, !133, !315}
!7602 = !{!7603, !7604, !7605}
!7603 = !DILocalVariable(name: "s", arg: 1, scope: !7599, file: !7497, line: 126, type: !133)
!7604 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7599, file: !7497, line: 126, type: !315)
!7605 = !DILocalVariable(name: "n", scope: !7599, file: !7497, line: 128, type: !315)
!7606 = !DILocation(line: 0, scope: !7599)
!7607 = !DILocation(line: 130, column: 9, scope: !7599)
!7608 = !DILocation(line: 130, column: 12, scope: !7599)
!7609 = !DILocation(line: 130, column: 20, scope: !7599)
!7610 = !DILocation(line: 130, column: 2, scope: !7599)
!7611 = !DILocation(line: 131, column: 4, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7599, file: !7497, line: 130, column: 35)
!7613 = !DILocation(line: 132, column: 4, scope: !7612)
!7614 = distinct !{!7614, !7610, !7615}
!7615 = !DILocation(line: 133, column: 2, scope: !7599)
!7616 = !DILocation(line: 135, column: 2, scope: !7599)
!7617 = distinct !DISubprogram(name: "strcmp", scope: !7497, file: !7497, line: 145, type: !7618, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !7620)
!7618 = !DISubroutineType(types: !7619)
!7619 = !{!118, !133, !133}
!7620 = !{!7621, !7622}
!7621 = !DILocalVariable(name: "s1", arg: 1, scope: !7617, file: !7497, line: 145, type: !133)
!7622 = !DILocalVariable(name: "s2", arg: 2, scope: !7617, file: !7497, line: 145, type: !133)
!7623 = !DILocation(line: 0, scope: !7617)
!7624 = !DILocation(line: 147, column: 10, scope: !7617)
!7625 = !DILocation(line: 147, column: 17, scope: !7617)
!7626 = !DILocation(line: 147, column: 14, scope: !7617)
!7627 = !DILocation(line: 147, column: 22, scope: !7617)
!7628 = !DILocation(line: 148, column: 5, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7617, file: !7497, line: 147, column: 40)
!7630 = !DILocation(line: 149, column: 5, scope: !7629)
!7631 = distinct !{!7631, !7632, !7633}
!7632 = !DILocation(line: 147, column: 2, scope: !7617)
!7633 = !DILocation(line: 150, column: 2, scope: !7617)
!7634 = !DILocation(line: 152, column: 9, scope: !7617)
!7635 = !DILocation(line: 152, column: 15, scope: !7617)
!7636 = !DILocation(line: 152, column: 13, scope: !7617)
!7637 = !DILocation(line: 152, column: 2, scope: !7617)
!7638 = distinct !DISubprogram(name: "strncmp", scope: !7497, file: !7497, line: 162, type: !7639, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !7641)
!7639 = !DISubroutineType(types: !7640)
!7640 = !{!118, !133, !133, !315}
!7641 = !{!7642, !7643, !7644}
!7642 = !DILocalVariable(name: "s1", arg: 1, scope: !7638, file: !7497, line: 162, type: !133)
!7643 = !DILocalVariable(name: "s2", arg: 2, scope: !7638, file: !7497, line: 162, type: !133)
!7644 = !DILocalVariable(name: "n", arg: 3, scope: !7638, file: !7497, line: 162, type: !315)
!7645 = !DILocation(line: 0, scope: !7638)
!7646 = !DILocation(line: 164, column: 17, scope: !7638)
!7647 = !DILocation(line: 164, column: 21, scope: !7638)
!7648 = !DILocation(line: 164, column: 28, scope: !7638)
!7649 = !DILocation(line: 164, column: 25, scope: !7638)
!7650 = !DILocation(line: 164, column: 33, scope: !7638)
!7651 = !DILocation(line: 165, column: 5, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7638, file: !7497, line: 164, column: 51)
!7653 = !DILocation(line: 166, column: 5, scope: !7652)
!7654 = !DILocation(line: 167, column: 4, scope: !7652)
!7655 = distinct !{!7655, !7656, !7657}
!7656 = !DILocation(line: 164, column: 2, scope: !7638)
!7657 = !DILocation(line: 168, column: 2, scope: !7638)
!7658 = !DILocation(line: 170, column: 25, scope: !7638)
!7659 = !DILocation(line: 170, column: 31, scope: !7638)
!7660 = !DILocation(line: 170, column: 29, scope: !7638)
!7661 = !DILocation(line: 170, column: 9, scope: !7638)
!7662 = !DILocation(line: 170, column: 2, scope: !7638)
!7663 = distinct !DISubprogram(name: "strtok_r", scope: !7497, file: !7497, line: 180, type: !7664, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !7667)
!7664 = !DISubroutineType(types: !7665)
!7665 = !{!1259, !1259, !133, !7666}
!7666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 32)
!7667 = !{!7668, !7669, !7670, !7671, !7672}
!7668 = !DILocalVariable(name: "str", arg: 1, scope: !7663, file: !7497, line: 180, type: !1259)
!7669 = !DILocalVariable(name: "sep", arg: 2, scope: !7663, file: !7497, line: 180, type: !133)
!7670 = !DILocalVariable(name: "state", arg: 3, scope: !7663, file: !7497, line: 180, type: !7666)
!7671 = !DILocalVariable(name: "start", scope: !7663, file: !7497, line: 182, type: !1259)
!7672 = !DILocalVariable(name: "end", scope: !7663, file: !7497, line: 182, type: !1259)
!7673 = !DILocation(line: 0, scope: !7663)
!7674 = !DILocation(line: 184, column: 10, scope: !7663)
!7675 = !DILocation(line: 184, column: 22, scope: !7663)
!7676 = !DILocation(line: 187, column: 9, scope: !7663)
!7677 = !DILocation(line: 187, column: 16, scope: !7663)
!7678 = !DILocation(line: 187, column: 19, scope: !7663)
!7679 = !DILocation(line: 187, column: 2, scope: !7663)
!7680 = !DILocation(line: 188, column: 8, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7663, file: !7497, line: 187, column: 40)
!7682 = distinct !{!7682, !7679, !7683}
!7683 = !DILocation(line: 189, column: 2, scope: !7663)
!7684 = !DILocation(line: 198, column: 9, scope: !7663)
!7685 = !DILocation(line: 198, column: 18, scope: !7663)
!7686 = !DILocation(line: 198, column: 17, scope: !7663)
!7687 = !DILocation(line: 198, column: 2, scope: !7663)
!7688 = !DILocation(line: 199, column: 6, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7663, file: !7497, line: 198, column: 37)
!7690 = !DILocation(line: 198, column: 14, scope: !7663)
!7691 = distinct !{!7691, !7687, !7692}
!7692 = !DILocation(line: 200, column: 2, scope: !7663)
!7693 = !DILocation(line: 203, column: 8, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7695, file: !7497, line: 202, column: 20)
!7695 = distinct !DILexicalBlock(scope: !7663, file: !7497, line: 202, column: 6)
!7696 = !DILocation(line: 204, column: 16, scope: !7694)
!7697 = !DILocation(line: 205, column: 2, scope: !7694)
!7698 = !DILocation(line: 210, column: 1, scope: !7663)
!7699 = distinct !DISubprogram(name: "strcat", scope: !7497, file: !7497, line: 212, type: !7498, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !7700)
!7700 = !{!7701, !7702}
!7701 = !DILocalVariable(name: "dest", arg: 1, scope: !7699, file: !7497, line: 212, type: !7500)
!7702 = !DILocalVariable(name: "src", arg: 2, scope: !7699, file: !7497, line: 212, type: !7501)
!7703 = !DILocation(line: 0, scope: !7699)
!7704 = !DILocation(line: 214, column: 16, scope: !7699)
!7705 = !DILocation(line: 214, column: 14, scope: !7699)
!7706 = !DILocation(line: 214, column: 2, scope: !7699)
!7707 = !DILocation(line: 215, column: 2, scope: !7699)
!7708 = distinct !DISubprogram(name: "strncat", scope: !7497, file: !7497, line: 218, type: !7519, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !7709)
!7709 = !{!7710, !7711, !7712, !7713, !7714}
!7710 = !DILocalVariable(name: "dest", arg: 1, scope: !7708, file: !7497, line: 218, type: !7500)
!7711 = !DILocalVariable(name: "src", arg: 2, scope: !7708, file: !7497, line: 218, type: !7501)
!7712 = !DILocalVariable(name: "n", arg: 3, scope: !7708, file: !7497, line: 219, type: !315)
!7713 = !DILocalVariable(name: "orig_dest", scope: !7708, file: !7497, line: 221, type: !1259)
!7714 = !DILocalVariable(name: "len", scope: !7708, file: !7497, line: 222, type: !315)
!7715 = !DILocation(line: 0, scope: !7708)
!7716 = !DILocation(line: 222, column: 15, scope: !7708)
!7717 = !DILocation(line: 224, column: 7, scope: !7708)
!7718 = !DILocation(line: 225, column: 14, scope: !7708)
!7719 = !DILocation(line: 225, column: 19, scope: !7708)
!7720 = !DILocation(line: 225, column: 11, scope: !7708)
!7721 = !DILocation(line: 225, column: 23, scope: !7708)
!7722 = !DILocation(line: 225, column: 28, scope: !7708)
!7723 = !DILocation(line: 225, column: 2, scope: !7708)
!7724 = !DILocation(line: 226, column: 17, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7708, file: !7497, line: 225, column: 38)
!7726 = !DILocation(line: 226, column: 8, scope: !7725)
!7727 = !DILocation(line: 226, column: 11, scope: !7725)
!7728 = distinct !{!7728, !7723, !7729}
!7729 = !DILocation(line: 227, column: 2, scope: !7708)
!7730 = !DILocation(line: 228, column: 8, scope: !7708)
!7731 = !DILocation(line: 230, column: 2, scope: !7708)
!7732 = distinct !DISubprogram(name: "memcmp", scope: !7497, file: !7497, line: 239, type: !7733, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !7735)
!7733 = !DISubroutineType(types: !7734)
!7734 = !{!118, !13, !13, !315}
!7735 = !{!7736, !7737, !7738, !7739, !7740}
!7736 = !DILocalVariable(name: "m1", arg: 1, scope: !7732, file: !7497, line: 239, type: !13)
!7737 = !DILocalVariable(name: "m2", arg: 2, scope: !7732, file: !7497, line: 239, type: !13)
!7738 = !DILocalVariable(name: "n", arg: 3, scope: !7732, file: !7497, line: 239, type: !315)
!7739 = !DILocalVariable(name: "c1", scope: !7732, file: !7497, line: 241, type: !133)
!7740 = !DILocalVariable(name: "c2", scope: !7732, file: !7497, line: 242, type: !133)
!7741 = !DILocation(line: 0, scope: !7732)
!7742 = !DILocation(line: 244, column: 7, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7732, file: !7497, line: 244, column: 6)
!7744 = !DILocation(line: 244, column: 6, scope: !7732)
!7745 = !DILocation(line: 248, column: 10, scope: !7732)
!7746 = !DILocation(line: 248, column: 14, scope: !7732)
!7747 = !DILocation(line: 248, column: 19, scope: !7732)
!7748 = !DILocation(line: 248, column: 2, scope: !7732)
!7749 = !DILocation(line: 248, column: 23, scope: !7732)
!7750 = !DILocation(line: 248, column: 30, scope: !7732)
!7751 = !DILocation(line: 248, column: 27, scope: !7732)
!7752 = !DILocation(line: 249, column: 5, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7732, file: !7497, line: 248, column: 36)
!7754 = !DILocation(line: 250, column: 5, scope: !7753)
!7755 = distinct !{!7755, !7748, !7756}
!7756 = !DILocation(line: 251, column: 2, scope: !7732)
!7757 = !DILocation(line: 253, column: 9, scope: !7732)
!7758 = !DILocation(line: 253, column: 15, scope: !7732)
!7759 = !DILocation(line: 253, column: 13, scope: !7732)
!7760 = !DILocation(line: 253, column: 2, scope: !7732)
!7761 = !DILocation(line: 254, column: 1, scope: !7732)
!7762 = distinct !DISubprogram(name: "memmove", scope: !7497, file: !7497, line: 263, type: !7763, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !7765)
!7763 = !DISubroutineType(types: !7764)
!7764 = !{!117, !117, !13, !315}
!7765 = !{!7766, !7767, !7768, !7769, !7770}
!7766 = !DILocalVariable(name: "d", arg: 1, scope: !7762, file: !7497, line: 263, type: !117)
!7767 = !DILocalVariable(name: "s", arg: 2, scope: !7762, file: !7497, line: 263, type: !13)
!7768 = !DILocalVariable(name: "n", arg: 3, scope: !7762, file: !7497, line: 263, type: !315)
!7769 = !DILocalVariable(name: "dest", scope: !7762, file: !7497, line: 265, type: !1259)
!7770 = !DILocalVariable(name: "src", scope: !7762, file: !7497, line: 266, type: !133)
!7771 = !DILocation(line: 0, scope: !7762)
!7772 = !DILocation(line: 268, column: 21, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7762, file: !7497, line: 268, column: 6)
!7774 = !DILocation(line: 268, column: 28, scope: !7773)
!7775 = !DILocation(line: 268, column: 6, scope: !7762)
!7776 = !DILocation(line: 280, column: 12, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7773, file: !7497, line: 278, column: 9)
!7778 = !DILocation(line: 280, column: 3, scope: !7777)
!7779 = !DILocation(line: 275, column: 5, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7781, file: !7497, line: 274, column: 17)
!7781 = distinct !DILexicalBlock(scope: !7773, file: !7497, line: 268, column: 33)
!7782 = !DILocation(line: 276, column: 14, scope: !7780)
!7783 = !DILocation(line: 276, column: 4, scope: !7780)
!7784 = !DILocation(line: 276, column: 12, scope: !7780)
!7785 = !DILocation(line: 274, column: 12, scope: !7781)
!7786 = !DILocation(line: 274, column: 3, scope: !7781)
!7787 = distinct !{!7787, !7786, !7788}
!7788 = !DILocation(line: 277, column: 3, scope: !7781)
!7789 = !DILocation(line: 281, column: 12, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7777, file: !7497, line: 280, column: 17)
!7791 = !DILocation(line: 281, column: 10, scope: !7790)
!7792 = !DILocation(line: 282, column: 8, scope: !7790)
!7793 = !DILocation(line: 283, column: 7, scope: !7790)
!7794 = !DILocation(line: 284, column: 5, scope: !7790)
!7795 = distinct !{!7795, !7778, !7796}
!7796 = !DILocation(line: 285, column: 3, scope: !7777)
!7797 = !DILocation(line: 288, column: 2, scope: !7762)
!7798 = distinct !DISubprogram(name: "memcpy", scope: !7497, file: !7497, line: 298, type: !7799, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !7803)
!7799 = !DISubroutineType(types: !7800)
!7800 = !{!117, !7801, !7802, !315}
!7801 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !117)
!7802 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7803 = !{!7804, !7805, !7806, !7807, !7808}
!7804 = !DILocalVariable(name: "d", arg: 1, scope: !7798, file: !7497, line: 298, type: !7801)
!7805 = !DILocalVariable(name: "s", arg: 2, scope: !7798, file: !7497, line: 298, type: !7802)
!7806 = !DILocalVariable(name: "n", arg: 3, scope: !7798, file: !7497, line: 298, type: !315)
!7807 = !DILocalVariable(name: "d_byte", scope: !7798, file: !7497, line: 302, type: !1109)
!7808 = !DILocalVariable(name: "s_byte", scope: !7798, file: !7497, line: 303, type: !2918)
!7809 = !DILocation(line: 0, scope: !7798)
!7810 = !DILocation(line: 337, column: 11, scope: !7798)
!7811 = !DILocation(line: 337, column: 2, scope: !7798)
!7812 = !DILocation(line: 338, column: 25, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7798, file: !7497, line: 337, column: 16)
!7814 = !DILocation(line: 338, column: 17, scope: !7813)
!7815 = !DILocation(line: 338, column: 11, scope: !7813)
!7816 = !DILocation(line: 338, column: 15, scope: !7813)
!7817 = !DILocation(line: 339, column: 4, scope: !7813)
!7818 = distinct !{!7818, !7811, !7819}
!7819 = !DILocation(line: 340, column: 2, scope: !7798)
!7820 = !DILocation(line: 342, column: 2, scope: !7798)
!7821 = distinct !DISubprogram(name: "memset", scope: !7497, file: !7497, line: 352, type: !7822, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !7824)
!7822 = !DISubroutineType(types: !7823)
!7823 = !{!117, !117, !118, !315}
!7824 = !{!7825, !7826, !7827, !7828, !7829}
!7825 = !DILocalVariable(name: "buf", arg: 1, scope: !7821, file: !7497, line: 352, type: !117)
!7826 = !DILocalVariable(name: "c", arg: 2, scope: !7821, file: !7497, line: 352, type: !118)
!7827 = !DILocalVariable(name: "n", arg: 3, scope: !7821, file: !7497, line: 352, type: !315)
!7828 = !DILocalVariable(name: "d_byte", scope: !7821, file: !7497, line: 356, type: !1109)
!7829 = !DILocalVariable(name: "c_byte", scope: !7821, file: !7497, line: 357, type: !144)
!7830 = !DILocation(line: 0, scope: !7821)
!7831 = !DILocation(line: 357, column: 25, scope: !7821)
!7832 = !DILocation(line: 389, column: 11, scope: !7821)
!7833 = !DILocation(line: 389, column: 2, scope: !7821)
!7834 = !DILocation(line: 390, column: 11, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7821, file: !7497, line: 389, column: 16)
!7836 = !DILocation(line: 390, column: 15, scope: !7835)
!7837 = !DILocation(line: 391, column: 4, scope: !7835)
!7838 = distinct !{!7838, !7833, !7839}
!7839 = !DILocation(line: 392, column: 2, scope: !7821)
!7840 = !DILocation(line: 394, column: 2, scope: !7821)
!7841 = distinct !DISubprogram(name: "memchr", scope: !7497, file: !7497, line: 404, type: !7842, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2915, retainedNodes: !7844)
!7842 = !DISubroutineType(types: !7843)
!7843 = !{!117, !13, !118, !315}
!7844 = !{!7845, !7846, !7847, !7848}
!7845 = !DILocalVariable(name: "s", arg: 1, scope: !7841, file: !7497, line: 404, type: !13)
!7846 = !DILocalVariable(name: "c", arg: 2, scope: !7841, file: !7497, line: 404, type: !118)
!7847 = !DILocalVariable(name: "n", arg: 3, scope: !7841, file: !7497, line: 404, type: !315)
!7848 = !DILocalVariable(name: "p", scope: !7849, file: !7497, line: 407, type: !2918)
!7849 = distinct !DILexicalBlock(scope: !7850, file: !7497, line: 406, column: 14)
!7850 = distinct !DILexicalBlock(scope: !7841, file: !7497, line: 406, column: 6)
!7851 = !DILocation(line: 0, scope: !7841)
!7852 = !DILocation(line: 406, column: 8, scope: !7850)
!7853 = !DILocation(line: 406, column: 6, scope: !7841)
!7854 = !DILocation(line: 409, column: 3, scope: !7849)
!7855 = !DILocation(line: 0, scope: !7849)
!7856 = !DILocation(line: 410, column: 8, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7858, file: !7497, line: 410, column: 8)
!7858 = distinct !DILexicalBlock(scope: !7849, file: !7497, line: 409, column: 6)
!7859 = !DILocation(line: 410, column: 13, scope: !7857)
!7860 = !DILocation(line: 410, column: 8, scope: !7858)
!7861 = distinct !{!7861, !7854, !7862}
!7862 = !DILocation(line: 414, column: 20, scope: !7849)
!7863 = !DILocation(line: 417, column: 2, scope: !7841)
!7864 = !DILocation(line: 418, column: 1, scope: !7841)
!7865 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !694, file: !694, line: 23, type: !3672, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7866)
!7866 = !{!7867}
!7867 = !DILocalVariable(name: "hook", arg: 1, scope: !7865, file: !694, line: 23, type: !438)
!7868 = !DILocation(line: 0, scope: !7865)
!7869 = !DILocation(line: 25, column: 15, scope: !7865)
!7870 = !DILocation(line: 26, column: 1, scope: !7865)
!7871 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !694, file: !694, line: 14, type: !439, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7872)
!7872 = !{!7873}
!7873 = !DILocalVariable(name: "c", arg: 1, scope: !7871, file: !694, line: 14, type: !118)
!7874 = !DILocation(line: 0, scope: !7871)
!7875 = !DILocation(line: 18, column: 2, scope: !7871)
!7876 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !694, file: !694, line: 28, type: !7877, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7879)
!7877 = !DISubroutineType(types: !7878)
!7878 = !{!118, !118, !690}
!7879 = !{!7880, !7881}
!7880 = !DILocalVariable(name: "c", arg: 1, scope: !7876, file: !694, line: 28, type: !118)
!7881 = !DILocalVariable(name: "stream", arg: 2, scope: !7876, file: !694, line: 28, type: !690)
!7882 = !DILocation(line: 0, scope: !7876)
!7883 = !DILocation(line: 30, column: 27, scope: !7876)
!7884 = !DILocation(line: 30, column: 50, scope: !7876)
!7885 = !DILocation(line: 30, column: 9, scope: !7876)
!7886 = !DILocation(line: 30, column: 2, scope: !7876)
!7887 = distinct !DISubprogram(name: "fputc", scope: !694, file: !694, line: 41, type: !7877, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7888)
!7888 = !{!7889, !7890}
!7889 = !DILocalVariable(name: "c", arg: 1, scope: !7887, file: !694, line: 41, type: !118)
!7890 = !DILocalVariable(name: "stream", arg: 2, scope: !7887, file: !694, line: 41, type: !690)
!7891 = !DILocation(line: 0, scope: !7887)
!7892 = !DILocation(line: 43, column: 9, scope: !7887)
!7893 = !DILocation(line: 43, column: 2, scope: !7887)
!7894 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7895, file: !7895, line: 72, type: !7877, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7896)
!7895 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!7896 = !{!7897, !7898}
!7897 = !DILocalVariable(name: "c", arg: 1, scope: !7894, file: !7895, line: 72, type: !118)
!7898 = !DILocalVariable(name: "stream", arg: 2, scope: !7894, file: !7895, line: 72, type: !690)
!7899 = !DILocation(line: 0, scope: !7894)
!7900 = !DILocation(line: 81, column: 2, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7894, file: !7895, line: 81, column: 2)
!7902 = !{i64 2154810401}
!7903 = !DILocation(line: 82, column: 9, scope: !7894)
!7904 = !DILocation(line: 82, column: 2, scope: !7894)
!7905 = distinct !DISubprogram(name: "fputs", scope: !694, file: !694, line: 46, type: !7906, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7909)
!7906 = !DISubroutineType(types: !7907)
!7907 = !{!118, !7501, !7908}
!7908 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !690)
!7909 = !{!7910, !7911, !7912, !7913}
!7910 = !DILocalVariable(name: "s", arg: 1, scope: !7905, file: !694, line: 46, type: !7501)
!7911 = !DILocalVariable(name: "stream", arg: 2, scope: !7905, file: !694, line: 46, type: !7908)
!7912 = !DILocalVariable(name: "len", scope: !7905, file: !694, line: 48, type: !118)
!7913 = !DILocalVariable(name: "ret", scope: !7905, file: !694, line: 49, type: !118)
!7914 = !DILocation(line: 0, scope: !7905)
!7915 = !DILocation(line: 48, column: 12, scope: !7905)
!7916 = !DILocation(line: 51, column: 8, scope: !7905)
!7917 = !DILocation(line: 53, column: 13, scope: !7905)
!7918 = !DILocation(line: 53, column: 9, scope: !7905)
!7919 = !DILocation(line: 53, column: 2, scope: !7905)
!7920 = distinct !DISubprogram(name: "fwrite", scope: !694, file: !694, line: 99, type: !7921, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7923)
!7921 = !DISubroutineType(types: !7922)
!7922 = !{!315, !7802, !315, !315, !7908}
!7923 = !{!7924, !7925, !7926, !7927}
!7924 = !DILocalVariable(name: "ptr", arg: 1, scope: !7920, file: !694, line: 99, type: !7802)
!7925 = !DILocalVariable(name: "size", arg: 2, scope: !7920, file: !694, line: 99, type: !315)
!7926 = !DILocalVariable(name: "nitems", arg: 3, scope: !7920, file: !694, line: 99, type: !315)
!7927 = !DILocalVariable(name: "stream", arg: 4, scope: !7920, file: !694, line: 100, type: !7908)
!7928 = !DILocation(line: 0, scope: !7920)
!7929 = !DILocation(line: 102, column: 9, scope: !7920)
!7930 = !DILocation(line: 102, column: 2, scope: !7920)
!7931 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7895, file: !7895, line: 96, type: !7921, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7932)
!7932 = !{!7933, !7934, !7935, !7936}
!7933 = !DILocalVariable(name: "ptr", arg: 1, scope: !7931, file: !7895, line: 96, type: !7802)
!7934 = !DILocalVariable(name: "size", arg: 2, scope: !7931, file: !7895, line: 96, type: !315)
!7935 = !DILocalVariable(name: "nitems", arg: 3, scope: !7931, file: !7895, line: 96, type: !315)
!7936 = !DILocalVariable(name: "stream", arg: 4, scope: !7931, file: !7895, line: 96, type: !7908)
!7937 = !DILocation(line: 0, scope: !7931)
!7938 = !DILocation(line: 107, column: 2, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7931, file: !7895, line: 107, column: 2)
!7940 = !{i64 2154810505}
!7941 = !DILocation(line: 108, column: 9, scope: !7931)
!7942 = !DILocation(line: 108, column: 2, scope: !7931)
!7943 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !694, file: !694, line: 56, type: !7921, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7944)
!7944 = !{!7945, !7946, !7947, !7948, !7949, !7950, !7951, !7952}
!7945 = !DILocalVariable(name: "ptr", arg: 1, scope: !7943, file: !694, line: 56, type: !7802)
!7946 = !DILocalVariable(name: "size", arg: 2, scope: !7943, file: !694, line: 56, type: !315)
!7947 = !DILocalVariable(name: "nitems", arg: 3, scope: !7943, file: !694, line: 57, type: !315)
!7948 = !DILocalVariable(name: "stream", arg: 4, scope: !7943, file: !694, line: 57, type: !7908)
!7949 = !DILocalVariable(name: "i", scope: !7943, file: !694, line: 59, type: !315)
!7950 = !DILocalVariable(name: "j", scope: !7943, file: !694, line: 60, type: !315)
!7951 = !DILocalVariable(name: "p", scope: !7943, file: !694, line: 61, type: !2918)
!7952 = !DILabel(scope: !7943, name: "done", file: !694, line: 82)
!7953 = !DILocation(line: 0, scope: !7943)
!7954 = !DILocation(line: 63, column: 14, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7943, file: !694, line: 63, column: 6)
!7956 = !DILocation(line: 63, column: 24, scope: !7955)
!7957 = !DILocation(line: 72, column: 3, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7943, file: !694, line: 70, column: 5)
!7959 = !DILocation(line: 0, scope: !7958)
!7960 = !DILocation(line: 73, column: 8, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7962, file: !694, line: 73, column: 8)
!7962 = distinct !DILexicalBlock(scope: !7958, file: !694, line: 72, column: 6)
!7963 = !DILocation(line: 73, column: 29, scope: !7961)
!7964 = !DILocation(line: 73, column: 27, scope: !7961)
!7965 = !DILocation(line: 73, column: 21, scope: !7961)
!7966 = !DILocation(line: 73, column: 33, scope: !7961)
!7967 = !DILocation(line: 73, column: 8, scope: !7962)
!7968 = !DILocation(line: 76, column: 5, scope: !7962)
!7969 = !DILocation(line: 77, column: 14, scope: !7958)
!7970 = !DILocation(line: 77, column: 3, scope: !7962)
!7971 = distinct !{!7971, !7957, !7972}
!7972 = !DILocation(line: 77, column: 17, scope: !7958)
!7973 = !DILocation(line: 79, column: 4, scope: !7958)
!7974 = !DILocation(line: 80, column: 13, scope: !7943)
!7975 = !DILocation(line: 80, column: 2, scope: !7958)
!7976 = distinct !{!7976, !7977, !7978}
!7977 = !DILocation(line: 70, column: 2, scope: !7943)
!7978 = !DILocation(line: 80, column: 16, scope: !7943)
!7979 = !DILocation(line: 82, column: 1, scope: !7943)
!7980 = !DILocation(line: 83, column: 17, scope: !7943)
!7981 = !DILocation(line: 83, column: 2, scope: !7943)
!7982 = !DILocation(line: 84, column: 1, scope: !7943)
!7983 = distinct !DISubprogram(name: "puts", scope: !694, file: !694, line: 106, type: !7984, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7986)
!7984 = !DISubroutineType(types: !7985)
!7985 = !{!118, !133}
!7986 = !{!7987}
!7987 = !DILocalVariable(name: "s", arg: 1, scope: !7983, file: !694, line: 106, type: !133)
!7988 = !DILocation(line: 0, scope: !7983)
!7989 = !DILocation(line: 108, column: 6, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7983, file: !694, line: 108, column: 6)
!7991 = !DILocation(line: 108, column: 23, scope: !7990)
!7992 = !DILocation(line: 108, column: 6, scope: !7983)
!7993 = !DILocation(line: 112, column: 9, scope: !7983)
!7994 = !DILocation(line: 112, column: 29, scope: !7983)
!7995 = !DILocation(line: 112, column: 2, scope: !7983)
!7996 = !DILocation(line: 113, column: 1, scope: !7983)
!7997 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !826, file: !826, line: 368, type: !879, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !7998)
!7998 = !{!7999}
!7999 = !DILocalVariable(name: "dev", arg: 1, scope: !7997, file: !826, line: 368, type: !855)
!8000 = !DILocation(line: 0, scope: !7997)
!8001 = !DILocation(line: 370, column: 2, scope: !7997)
!8002 = !DILocation(line: 371, column: 1, scope: !7997)
!8003 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !826, file: !826, line: 243, type: !8004, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8006)
!8004 = !DISubroutineType(types: !8005)
!8005 = !{null, !118, !118, !855}
!8006 = !{!8007, !8008, !8009, !8010, !8012}
!8007 = !DILocalVariable(name: "min", arg: 1, scope: !8003, file: !826, line: 243, type: !118)
!8008 = !DILocalVariable(name: "max", arg: 2, scope: !8003, file: !826, line: 243, type: !118)
!8009 = !DILocalVariable(name: "dev", arg: 3, scope: !8003, file: !826, line: 243, type: !855)
!8010 = !DILocalVariable(name: "data", scope: !8003, file: !826, line: 245, type: !8011)
!8011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 32)
!8012 = !DILocalVariable(name: "line", scope: !8003, file: !826, line: 246, type: !118)
!8013 = !DILocation(line: 0, scope: !8003)
!8014 = !DILocation(line: 245, column: 38, scope: !8003)
!8015 = !DILocation(line: 249, column: 24, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8017, file: !826, line: 249, column: 2)
!8017 = distinct !DILexicalBlock(scope: !8003, file: !826, line: 249, column: 2)
!8018 = !DILocation(line: 249, column: 2, scope: !8017)
!8019 = !DILocation(line: 251, column: 7, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8021, file: !826, line: 251, column: 7)
!8021 = distinct !DILexicalBlock(scope: !8016, file: !826, line: 249, column: 39)
!8022 = !DILocation(line: 251, column: 7, scope: !8021)
!8023 = !DILocation(line: 253, column: 4, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8020, file: !826, line: 251, column: 36)
!8025 = !DILocation(line: 256, column: 24, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8024, file: !826, line: 256, column: 8)
!8027 = !DILocation(line: 256, column: 9, scope: !8026)
!8028 = !DILocation(line: 256, column: 8, scope: !8024)
!8029 = !DILocation(line: 260, column: 43, scope: !8024)
!8030 = !DILocation(line: 260, column: 4, scope: !8024)
!8031 = !DILocation(line: 261, column: 3, scope: !8024)
!8032 = !DILocation(line: 249, column: 35, scope: !8016)
!8033 = distinct !{!8033, !8018, !8034}
!8034 = !DILocation(line: 262, column: 2, scope: !8017)
!8035 = !DILocation(line: 263, column: 1, scope: !8003)
!8036 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !826, file: !826, line: 158, type: !439, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8037)
!8037 = !{!8038}
!8038 = !DILocalVariable(name: "line", arg: 1, scope: !8036, file: !826, line: 158, type: !118)
!8039 = !DILocation(line: 0, scope: !8036)
!8040 = !DILocation(line: 170, column: 38, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8042, file: !826, line: 160, column: 17)
!8042 = distinct !DILexicalBlock(scope: !8036, file: !826, line: 160, column: 6)
!8043 = !DILocation(line: 170, column: 10, scope: !8041)
!8044 = !DILocation(line: 176, column: 1, scope: !8036)
!8045 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !826, file: !826, line: 183, type: !8046, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8048)
!8046 = !DISubroutineType(types: !8047)
!8047 = !{null, !118}
!8048 = !{!8049}
!8049 = !DILocalVariable(name: "line", arg: 1, scope: !8045, file: !826, line: 183, type: !118)
!8050 = !DILocation(line: 0, scope: !8045)
!8051 = !DILocation(line: 195, column: 28, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8053, file: !826, line: 185, column: 17)
!8053 = distinct !DILexicalBlock(scope: !8045, file: !826, line: 185, column: 6)
!8054 = !DILocation(line: 195, column: 3, scope: !8052)
!8055 = !DILocation(line: 200, column: 1, scope: !8045)
!8056 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8057, file: !8057, line: 910, type: !6443, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8058)
!8057 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8058 = !{!8059}
!8059 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8056, file: !8057, line: 910, type: !156)
!8060 = !DILocation(line: 0, scope: !8056)
!8061 = !DILocation(line: 912, column: 3, scope: !8056)
!8062 = !DILocation(line: 913, column: 1, scope: !8056)
!8063 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8057, file: !8057, line: 834, type: !7392, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8064)
!8064 = !{!8065}
!8065 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8063, file: !8057, line: 834, type: !156)
!8066 = !DILocation(line: 0, scope: !8063)
!8067 = !DILocation(line: 836, column: 11, scope: !8063)
!8068 = !DILocation(line: 836, column: 40, scope: !8063)
!8069 = !DILocation(line: 836, column: 3, scope: !8063)
!8070 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !826, file: !826, line: 304, type: !879, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8071)
!8071 = !{!8072}
!8072 = !DILocalVariable(name: "dev", arg: 1, scope: !8070, file: !826, line: 304, type: !855)
!8073 = !DILocation(line: 0, scope: !8070)
!8074 = !DILocation(line: 306, column: 2, scope: !8070)
!8075 = !DILocation(line: 307, column: 1, scope: !8070)
!8076 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !826, file: !826, line: 299, type: !879, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8077)
!8077 = !{!8078}
!8078 = !DILocalVariable(name: "dev", arg: 1, scope: !8076, file: !826, line: 299, type: !855)
!8079 = !DILocation(line: 0, scope: !8076)
!8080 = !DILocation(line: 301, column: 2, scope: !8076)
!8081 = !DILocation(line: 302, column: 1, scope: !8076)
!8082 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !826, file: !826, line: 294, type: !879, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8083)
!8083 = !{!8084}
!8084 = !DILocalVariable(name: "dev", arg: 1, scope: !8082, file: !826, line: 294, type: !855)
!8085 = !DILocation(line: 0, scope: !8082)
!8086 = !DILocation(line: 296, column: 2, scope: !8082)
!8087 = !DILocation(line: 297, column: 1, scope: !8082)
!8088 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !826, file: !826, line: 397, type: !879, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8089)
!8089 = !{!8090}
!8090 = !DILocalVariable(name: "dev", arg: 1, scope: !8088, file: !826, line: 397, type: !855)
!8091 = !DILocation(line: 0, scope: !8088)
!8092 = !DILocation(line: 399, column: 2, scope: !8088)
!8093 = !DILocation(line: 400, column: 1, scope: !8088)
!8094 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !826, file: !826, line: 392, type: !879, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8095)
!8095 = !{!8096}
!8096 = !DILocalVariable(name: "dev", arg: 1, scope: !8094, file: !826, line: 392, type: !855)
!8097 = !DILocation(line: 0, scope: !8094)
!8098 = !DILocation(line: 394, column: 2, scope: !8094)
!8099 = !DILocation(line: 395, column: 1, scope: !8094)
!8100 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !826, file: !826, line: 289, type: !879, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8101)
!8101 = !{!8102}
!8102 = !DILocalVariable(name: "dev", arg: 1, scope: !8100, file: !826, line: 289, type: !855)
!8103 = !DILocation(line: 0, scope: !8100)
!8104 = !DILocation(line: 291, column: 2, scope: !8100)
!8105 = !DILocation(line: 292, column: 1, scope: !8100)
!8106 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !826, file: !826, line: 387, type: !879, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8107)
!8107 = !{!8108}
!8108 = !DILocalVariable(name: "dev", arg: 1, scope: !8106, file: !826, line: 387, type: !855)
!8109 = !DILocation(line: 0, scope: !8106)
!8110 = !DILocation(line: 389, column: 2, scope: !8106)
!8111 = !DILocation(line: 390, column: 1, scope: !8106)
!8112 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !826, file: !826, line: 382, type: !879, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8113)
!8113 = !{!8114}
!8114 = !DILocalVariable(name: "dev", arg: 1, scope: !8112, file: !826, line: 382, type: !855)
!8115 = !DILocation(line: 0, scope: !8112)
!8116 = !DILocation(line: 384, column: 2, scope: !8112)
!8117 = !DILocation(line: 385, column: 1, scope: !8112)
!8118 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !826, file: !826, line: 373, type: !879, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8119)
!8119 = !{!8120}
!8120 = !DILocalVariable(name: "dev", arg: 1, scope: !8118, file: !826, line: 373, type: !855)
!8121 = !DILocation(line: 0, scope: !8118)
!8122 = !DILocation(line: 375, column: 2, scope: !8118)
!8123 = !DILocation(line: 376, column: 1, scope: !8118)
!8124 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !826, file: !826, line: 284, type: !879, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8125)
!8125 = !{!8126}
!8126 = !DILocalVariable(name: "dev", arg: 1, scope: !8124, file: !826, line: 284, type: !855)
!8127 = !DILocation(line: 0, scope: !8124)
!8128 = !DILocation(line: 286, column: 2, scope: !8124)
!8129 = !DILocation(line: 287, column: 1, scope: !8124)
!8130 = distinct !DISubprogram(name: "stm32_exti_init", scope: !826, file: !826, line: 416, type: !853, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8131)
!8131 = !{!8132}
!8132 = !DILocalVariable(name: "dev", arg: 1, scope: !8130, file: !826, line: 416, type: !855)
!8133 = !DILocation(line: 0, scope: !8130)
!8134 = !DILocation(line: 418, column: 2, scope: !8130)
!8135 = !DILocation(line: 420, column: 2, scope: !8130)
!8136 = !DILocation(line: 0, scope: !878)
!8137 = !DILocation(line: 493, column: 2, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !878, file: !826, line: 493, column: 2)
!8139 = !DILocation(line: 497, column: 2, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !878, file: !826, line: 497, column: 2)
!8141 = !DILocation(line: 507, column: 2, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !878, file: !826, line: 507, column: 2)
!8143 = !DILocation(line: 512, column: 2, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !878, file: !826, line: 512, column: 2)
!8145 = !DILocation(line: 516, column: 2, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !878, file: !826, line: 516, column: 2)
!8147 = !DILocation(line: 523, column: 2, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !878, file: !826, line: 523, column: 2)
!8149 = !DILocation(line: 527, column: 2, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !878, file: !826, line: 527, column: 2)
!8151 = !DILocation(line: 581, column: 2, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !878, file: !826, line: 581, column: 2)
!8153 = !DILocation(line: 586, column: 2, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !878, file: !826, line: 586, column: 2)
!8155 = !DILocation(line: 591, column: 2, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !878, file: !826, line: 591, column: 2)
!8157 = !DILocation(line: 595, column: 2, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !878, file: !826, line: 595, column: 2)
!8159 = !DILocation(line: 607, column: 1, scope: !878)
!8160 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !826, file: !826, line: 112, type: !8046, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8161)
!8161 = !{!8162, !8163}
!8162 = !DILocalVariable(name: "line", arg: 1, scope: !8160, file: !826, line: 112, type: !118)
!8163 = !DILocalVariable(name: "irqnum", scope: !8160, file: !826, line: 114, type: !118)
!8164 = !DILocation(line: 0, scope: !8160)
!8165 = !DILocation(line: 122, column: 13, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8160, file: !826, line: 122, column: 6)
!8167 = !DILocation(line: 122, column: 6, scope: !8160)
!8168 = !DILocation(line: 123, column: 3, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8170, file: !826, line: 123, column: 3)
!8170 = distinct !DILexicalBlock(scope: !8171, file: !826, line: 123, column: 3)
!8171 = distinct !DILexicalBlock(scope: !8172, file: !826, line: 123, column: 3)
!8172 = distinct !DILexicalBlock(scope: !8166, file: !826, line: 122, column: 22)
!8173 = !DILocation(line: 121, column: 11, scope: !8160)
!8174 = !DILocation(line: 130, column: 26, scope: !8160)
!8175 = !DILocation(line: 130, column: 2, scope: !8160)
!8176 = !DILocation(line: 134, column: 2, scope: !8160)
!8177 = !DILocation(line: 135, column: 1, scope: !8160)
!8178 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8057, file: !8057, line: 268, type: !6443, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8179)
!8179 = !{!8180}
!8180 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8178, file: !8057, line: 268, type: !156)
!8181 = !DILocation(line: 0, scope: !8178)
!8182 = !DILocation(line: 270, column: 3, scope: !8178)
!8183 = !DILocation(line: 271, column: 1, scope: !8178)
!8184 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !826, file: !826, line: 137, type: !8046, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8185)
!8185 = !{!8186}
!8186 = !DILocalVariable(name: "line", arg: 1, scope: !8184, file: !826, line: 137, type: !118)
!8187 = !DILocation(line: 0, scope: !8184)
!8188 = !DILocation(line: 141, column: 11, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8184, file: !826, line: 141, column: 6)
!8190 = !DILocation(line: 141, column: 6, scope: !8184)
!8191 = !DILocation(line: 145, column: 28, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8189, file: !826, line: 141, column: 17)
!8193 = !DILocation(line: 145, column: 3, scope: !8192)
!8194 = !DILocation(line: 147, column: 2, scope: !8192)
!8195 = !DILocation(line: 151, column: 1, scope: !8184)
!8196 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8057, file: !8057, line: 309, type: !6443, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8197)
!8197 = !{!8198}
!8198 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8196, file: !8057, line: 309, type: !156)
!8199 = !DILocation(line: 0, scope: !8196)
!8200 = !DILocation(line: 311, column: 3, scope: !8196)
!8201 = !DILocation(line: 312, column: 1, scope: !8196)
!8202 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !826, file: !826, line: 202, type: !8203, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8205)
!8203 = !DISubroutineType(types: !8204)
!8204 = !{null, !118, !118}
!8205 = !{!8206, !8207}
!8206 = !DILocalVariable(name: "line", arg: 1, scope: !8202, file: !826, line: 202, type: !118)
!8207 = !DILocalVariable(name: "trigger", arg: 2, scope: !8202, file: !826, line: 202, type: !118)
!8208 = !DILocation(line: 0, scope: !8202)
!8209 = !DILocation(line: 211, column: 2, scope: !8202)
!8210 = !DILocation(line: 213, column: 36, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8202, file: !826, line: 211, column: 19)
!8212 = !DILocation(line: 213, column: 3, scope: !8211)
!8213 = !DILocation(line: 214, column: 3, scope: !8211)
!8214 = !DILocation(line: 215, column: 3, scope: !8211)
!8215 = !DILocation(line: 217, column: 35, scope: !8211)
!8216 = !DILocation(line: 217, column: 3, scope: !8211)
!8217 = !DILocation(line: 218, column: 3, scope: !8211)
!8218 = !DILocation(line: 219, column: 3, scope: !8211)
!8219 = !DILocation(line: 221, column: 36, scope: !8211)
!8220 = !DILocation(line: 221, column: 3, scope: !8211)
!8221 = !DILocation(line: 222, column: 3, scope: !8211)
!8222 = !DILocation(line: 223, column: 3, scope: !8211)
!8223 = !DILocation(line: 225, column: 35, scope: !8211)
!8224 = !DILocation(line: 225, column: 3, scope: !8211)
!8225 = !DILocation(line: 226, column: 3, scope: !8211)
!8226 = !DILocation(line: 227, column: 3, scope: !8211)
!8227 = !DILocation(line: 232, column: 1, scope: !8202)
!8228 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8057, file: !8057, line: 573, type: !6443, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8229)
!8229 = !{!8230}
!8230 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8228, file: !8057, line: 573, type: !156)
!8231 = !DILocation(line: 0, scope: !8228)
!8232 = !DILocation(line: 575, column: 3, scope: !8228)
!8233 = !DILocation(line: 577, column: 1, scope: !8228)
!8234 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8057, file: !8057, line: 703, type: !6443, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8235)
!8235 = !{!8236}
!8236 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8234, file: !8057, line: 703, type: !156)
!8237 = !DILocation(line: 0, scope: !8234)
!8238 = !DILocation(line: 705, column: 3, scope: !8234)
!8239 = !DILocation(line: 706, column: 1, scope: !8234)
!8240 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8057, file: !8057, line: 529, type: !6443, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8241)
!8241 = !{!8242}
!8242 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8240, file: !8057, line: 529, type: !156)
!8243 = !DILocation(line: 0, scope: !8240)
!8244 = !DILocation(line: 531, column: 3, scope: !8240)
!8245 = !DILocation(line: 533, column: 1, scope: !8240)
!8246 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8057, file: !8057, line: 661, type: !6443, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8247)
!8247 = !{!8248}
!8248 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8246, file: !8057, line: 661, type: !156)
!8249 = !DILocation(line: 0, scope: !8246)
!8250 = !DILocation(line: 663, column: 3, scope: !8246)
!8251 = !DILocation(line: 664, column: 1, scope: !8246)
!8252 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !826, file: !826, line: 433, type: !8253, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8255)
!8253 = !DISubroutineType(types: !8254)
!8254 = !{!118, !118, !866, !117}
!8255 = !{!8256, !8257, !8258, !8259, !8261}
!8256 = !DILocalVariable(name: "line", arg: 1, scope: !8252, file: !826, line: 433, type: !118)
!8257 = !DILocalVariable(name: "cb", arg: 2, scope: !8252, file: !826, line: 433, type: !866)
!8258 = !DILocalVariable(name: "arg", arg: 3, scope: !8252, file: !826, line: 433, type: !117)
!8259 = !DILocalVariable(name: "dev", scope: !8252, file: !826, line: 435, type: !8260)
!8260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!8261 = !DILocalVariable(name: "data", scope: !8252, file: !826, line: 436, type: !8011)
!8262 = !DILocation(line: 0, scope: !8252)
!8263 = !DILocation(line: 438, column: 21, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8252, file: !826, line: 438, column: 6)
!8265 = !DILocation(line: 438, column: 6, scope: !8264)
!8266 = !DILocation(line: 438, column: 6, scope: !8252)
!8267 = !DILocation(line: 442, column: 20, scope: !8252)
!8268 = !DILocation(line: 443, column: 17, scope: !8252)
!8269 = !DILocation(line: 443, column: 22, scope: !8252)
!8270 = !DILocation(line: 445, column: 2, scope: !8252)
!8271 = !DILocation(line: 446, column: 1, scope: !8252)
!8272 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !826, file: !826, line: 448, type: !8046, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8273)
!8273 = !{!8274, !8275, !8276}
!8274 = !DILocalVariable(name: "line", arg: 1, scope: !8272, file: !826, line: 448, type: !118)
!8275 = !DILocalVariable(name: "dev", scope: !8272, file: !826, line: 450, type: !8260)
!8276 = !DILocalVariable(name: "data", scope: !8272, file: !826, line: 451, type: !8011)
!8277 = !DILocation(line: 0, scope: !8272)
!8278 = !DILocation(line: 453, column: 17, scope: !8272)
!8279 = !DILocation(line: 453, column: 20, scope: !8272)
!8280 = !DILocation(line: 454, column: 17, scope: !8272)
!8281 = !DILocation(line: 454, column: 22, scope: !8272)
!8282 = !DILocation(line: 455, column: 1, scope: !8272)
!8283 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1008, file: !1008, line: 183, type: !1046, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !8284)
!8284 = !{!8285, !8286, !8287, !8288, !8289}
!8285 = !DILocalVariable(name: "dev", arg: 1, scope: !8283, file: !1008, line: 183, type: !1037)
!8286 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8283, file: !1008, line: 184, type: !1048)
!8287 = !DILocalVariable(name: "pclken", scope: !8283, file: !1008, line: 186, type: !998)
!8288 = !DILocalVariable(name: "reg", scope: !8283, file: !1008, line: 187, type: !1575)
!8289 = !DILocalVariable(name: "reg_val", scope: !8283, file: !1008, line: 188, type: !156)
!8290 = !DILocation(line: 0, scope: !8283)
!8291 = !DILocation(line: 192, column: 6, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8283, file: !1008, line: 192, column: 6)
!8293 = !DILocation(line: 192, column: 6, scope: !8283)
!8294 = !DILocation(line: 197, column: 52, scope: !8283)
!8295 = !DILocation(line: 197, column: 8, scope: !8283)
!8296 = !DILocation(line: 198, column: 12, scope: !8283)
!8297 = !DILocation(line: 199, column: 21, scope: !8283)
!8298 = !DILocation(line: 199, column: 10, scope: !8283)
!8299 = !DILocation(line: 200, column: 7, scope: !8283)
!8300 = !DILocation(line: 202, column: 2, scope: !8283)
!8301 = !DILocation(line: 203, column: 1, scope: !8283)
!8302 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1008, file: !1008, line: 205, type: !1046, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !8303)
!8303 = !{!8304, !8305, !8306, !8307, !8308}
!8304 = !DILocalVariable(name: "dev", arg: 1, scope: !8302, file: !1008, line: 205, type: !1037)
!8305 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8302, file: !1008, line: 206, type: !1048)
!8306 = !DILocalVariable(name: "pclken", scope: !8302, file: !1008, line: 208, type: !998)
!8307 = !DILocalVariable(name: "reg", scope: !8302, file: !1008, line: 209, type: !1575)
!8308 = !DILocalVariable(name: "reg_val", scope: !8302, file: !1008, line: 210, type: !156)
!8309 = !DILocation(line: 0, scope: !8302)
!8310 = !DILocation(line: 214, column: 6, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8302, file: !1008, line: 214, column: 6)
!8312 = !DILocation(line: 214, column: 6, scope: !8302)
!8313 = !DILocation(line: 219, column: 52, scope: !8302)
!8314 = !DILocation(line: 219, column: 8, scope: !8302)
!8315 = !DILocation(line: 220, column: 12, scope: !8302)
!8316 = !DILocation(line: 221, column: 22, scope: !8302)
!8317 = !DILocation(line: 221, column: 13, scope: !8302)
!8318 = !DILocation(line: 221, column: 10, scope: !8302)
!8319 = !DILocation(line: 222, column: 7, scope: !8302)
!8320 = !DILocation(line: 224, column: 2, scope: !8302)
!8321 = !DILocation(line: 225, column: 1, scope: !8302)
!8322 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1008, file: !1008, line: 262, type: !1062, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !8323)
!8323 = !{!8324, !8325, !8326, !8327, !8328, !8329, !8330, !8331}
!8324 = !DILocalVariable(name: "clock", arg: 1, scope: !8322, file: !1008, line: 262, type: !1037)
!8325 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8322, file: !1008, line: 263, type: !1048)
!8326 = !DILocalVariable(name: "rate", arg: 3, scope: !8322, file: !1008, line: 264, type: !1004)
!8327 = !DILocalVariable(name: "pclken", scope: !8322, file: !1008, line: 266, type: !998)
!8328 = !DILocalVariable(name: "ahb_clock", scope: !8322, file: !1008, line: 273, type: !156)
!8329 = !DILocalVariable(name: "apb1_clock", scope: !8322, file: !1008, line: 274, type: !156)
!8330 = !DILocalVariable(name: "apb2_clock", scope: !8322, file: !1008, line: 276, type: !156)
!8331 = !DILocalVariable(name: "ahb3_clock", scope: !8322, file: !1008, line: 286, type: !156)
!8332 = !DILocation(line: 0, scope: !8322)
!8333 = !DILocation(line: 273, column: 23, scope: !8322)
!8334 = !DILocation(line: 274, column: 24, scope: !8322)
!8335 = !DILocation(line: 299, column: 18, scope: !8322)
!8336 = !DILocation(line: 299, column: 2, scope: !8322)
!8337 = !DILocation(line: 319, column: 3, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8322, file: !1008, line: 299, column: 23)
!8339 = !DILocation(line: 323, column: 3, scope: !8338)
!8340 = !DILocation(line: 346, column: 33, scope: !8338)
!8341 = !DILocation(line: 346, column: 11, scope: !8338)
!8342 = !DILocation(line: 350, column: 3, scope: !8338)
!8343 = !DILocation(line: 354, column: 33, scope: !8338)
!8344 = !DILocation(line: 354, column: 11, scope: !8338)
!8345 = !DILocation(line: 358, column: 3, scope: !8338)
!8346 = !DILocation(line: 374, column: 3, scope: !8338)
!8347 = !DILocation(line: 379, column: 3, scope: !8338)
!8348 = !DILocation(line: 0, scope: !8338)
!8349 = !DILocation(line: 396, column: 1, scope: !8322)
!8350 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1008, file: !1008, line: 227, type: !1078, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !8351)
!8351 = !{!8352, !8353, !8354, !8355, !8356, !8357, !8358, !8359}
!8352 = !DILocalVariable(name: "dev", arg: 1, scope: !8350, file: !1008, line: 227, type: !1037)
!8353 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8350, file: !1008, line: 228, type: !1048)
!8354 = !DILocalVariable(name: "data", arg: 3, scope: !8350, file: !1008, line: 229, type: !117)
!8355 = !DILocalVariable(name: "pclken", scope: !8350, file: !1008, line: 233, type: !998)
!8356 = !DILocalVariable(name: "reg", scope: !8350, file: !1008, line: 234, type: !1575)
!8357 = !DILocalVariable(name: "reg_val", scope: !8350, file: !1008, line: 235, type: !156)
!8358 = !DILocalVariable(name: "dt_val", scope: !8350, file: !1008, line: 235, type: !156)
!8359 = !DILocalVariable(name: "err", scope: !8350, file: !1008, line: 236, type: !118)
!8360 = !DILocation(line: 0, scope: !8350)
!8361 = !DILocation(line: 241, column: 30, scope: !8350)
!8362 = !DILocation(line: 241, column: 8, scope: !8350)
!8363 = !DILocation(line: 242, column: 10, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8350, file: !1008, line: 242, column: 6)
!8365 = !DILocation(line: 242, column: 6, scope: !8350)
!8366 = !DILocation(line: 247, column: 11, scope: !8350)
!8367 = !DILocation(line: 248, column: 6, scope: !8350)
!8368 = !DILocation(line: 247, column: 44, scope: !8350)
!8369 = !DILocation(line: 250, column: 6, scope: !8350)
!8370 = !DILocation(line: 249, column: 52, scope: !8350)
!8371 = !DILocation(line: 249, column: 8, scope: !8350)
!8372 = !DILocation(line: 251, column: 12, scope: !8350)
!8373 = !DILocation(line: 252, column: 10, scope: !8350)
!8374 = !DILocation(line: 253, column: 7, scope: !8350)
!8375 = !DILocation(line: 255, column: 2, scope: !8350)
!8376 = !DILocation(line: 260, column: 1, scope: !8350)
!8377 = distinct !DISubprogram(name: "enabled_clock", scope: !1008, file: !1008, line: 100, type: !8378, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !8380)
!8378 = !DISubroutineType(types: !8379)
!8379 = !{!118, !156}
!8380 = !{!8381, !8382}
!8381 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8377, file: !1008, line: 100, type: !156)
!8382 = !DILocalVariable(name: "r", scope: !8377, file: !1008, line: 102, type: !118)
!8383 = !DILocation(line: 0, scope: !8377)
!8384 = !DILocation(line: 104, column: 2, scope: !8377)
!8385 = !DILocation(line: 180, column: 2, scope: !8377)
!8386 = !DILocation(line: 181, column: 1, scope: !8377)
!8387 = distinct !DISubprogram(name: "get_bus_clock", scope: !1008, file: !1008, line: 79, type: !8388, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !8390)
!8388 = !DISubroutineType(types: !8389)
!8389 = !{!156, !156, !156}
!8390 = !{!8391, !8392}
!8391 = !DILocalVariable(name: "clock", arg: 1, scope: !8387, file: !1008, line: 79, type: !156)
!8392 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8387, file: !1008, line: 79, type: !156)
!8393 = !DILocation(line: 0, scope: !8387)
!8394 = !DILocation(line: 81, column: 15, scope: !8387)
!8395 = !DILocation(line: 81, column: 2, scope: !8387)
!8396 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1008, file: !1008, line: 68, type: !8397, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !8399)
!8397 = !DISubroutineType(types: !8398)
!8398 = !{!156, !156, !118, !118, !118}
!8399 = !{!8400, !8401, !8402, !8403}
!8400 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8396, file: !1008, line: 68, type: !156)
!8401 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8396, file: !1008, line: 69, type: !118)
!8402 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8396, file: !1008, line: 70, type: !118)
!8403 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8396, file: !1008, line: 71, type: !118)
!8404 = !DILocation(line: 0, scope: !8396)
!8405 = !DILocation(line: 75, column: 22, scope: !8396)
!8406 = !DILocation(line: 76, column: 13, scope: !8396)
!8407 = !DILocation(line: 75, column: 34, scope: !8396)
!8408 = !DILocation(line: 75, column: 2, scope: !8396)
!8409 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1008, file: !1008, line: 641, type: !1035, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !8410)
!8410 = !{!8411, !8412, !8413}
!8411 = !DILocalVariable(name: "dev", arg: 1, scope: !8409, file: !1008, line: 641, type: !1037)
!8412 = !DILocalVariable(name: "old_flash_freq", scope: !8409, file: !1008, line: 664, type: !156)
!8413 = !DILocalVariable(name: "new_flash_freq", scope: !8409, file: !1008, line: 665, type: !156)
!8414 = !DILocation(line: 0, scope: !8409)
!8415 = !DILocation(line: 646, column: 2, scope: !8409)
!8416 = !DILocation(line: 667, column: 19, scope: !8409)
!8417 = !DILocation(line: 674, column: 21, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8409, file: !1008, line: 674, column: 6)
!8419 = !DILocation(line: 674, column: 6, scope: !8409)
!8420 = !DILocation(line: 675, column: 3, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8418, file: !1008, line: 674, column: 59)
!8422 = !DILocation(line: 676, column: 2, scope: !8421)
!8423 = !DILocation(line: 680, column: 2, scope: !8409)
!8424 = !DILocation(line: 683, column: 2, scope: !8409)
!8425 = !DILocation(line: 690, column: 3, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8427, file: !1008, line: 689, column: 9)
!8427 = distinct !DILexicalBlock(scope: !8409, file: !1008, line: 685, column: 6)
!8428 = !DILocation(line: 695, column: 2, scope: !8409)
!8429 = !DILocation(line: 696, column: 2, scope: !8409)
!8430 = !DILocation(line: 696, column: 9, scope: !8409)
!8431 = !DILocation(line: 696, column: 34, scope: !8409)
!8432 = distinct !{!8432, !8429, !8433}
!8433 = !DILocation(line: 697, column: 2, scope: !8409)
!8434 = !DILocation(line: 720, column: 21, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8409, file: !1008, line: 720, column: 6)
!8436 = !DILocation(line: 720, column: 6, scope: !8409)
!8437 = !DILocation(line: 721, column: 3, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8435, file: !1008, line: 720, column: 60)
!8439 = !DILocation(line: 722, column: 2, scope: !8438)
!8440 = !DILocation(line: 725, column: 18, scope: !8409)
!8441 = !DILocation(line: 728, column: 2, scope: !8409)
!8442 = !DILocation(line: 730, column: 2, scope: !8409)
!8443 = !DILocation(line: 745, column: 2, scope: !8409)
!8444 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8445, file: !8445, line: 3275, type: !6433, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !2123)
!8445 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8446 = !DILocation(line: 3277, column: 21, scope: !8444)
!8447 = !DILocation(line: 3277, column: 3, scope: !8444)
!8448 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1008, file: !1008, line: 507, type: !365, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !2123)
!8449 = !DILocation(line: 516, column: 4, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8451, file: !1008, line: 515, column: 10)
!8451 = distinct !DILexicalBlock(scope: !8452, file: !1008, line: 513, column: 7)
!8452 = distinct !DILexicalBlock(scope: !8453, file: !1008, line: 510, column: 37)
!8453 = distinct !DILexicalBlock(scope: !8448, file: !1008, line: 510, column: 6)
!8454 = !DILocation(line: 526, column: 3, scope: !8452)
!8455 = !DILocation(line: 527, column: 3, scope: !8452)
!8456 = !DILocation(line: 527, column: 10, scope: !8452)
!8457 = !DILocation(line: 527, column: 31, scope: !8452)
!8458 = distinct !{!8458, !8455, !8459}
!8459 = !DILocation(line: 529, column: 3, scope: !8452)
!8460 = !DILocation(line: 583, column: 3, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8462, file: !1008, line: 577, column: 37)
!8462 = distinct !DILexicalBlock(scope: !8448, file: !1008, line: 577, column: 6)
!8463 = !DILocation(line: 584, column: 3, scope: !8461)
!8464 = !DILocation(line: 584, column: 10, scope: !8461)
!8465 = !DILocation(line: 584, column: 31, scope: !8461)
!8466 = distinct !{!8466, !8463, !8467}
!8467 = !DILocation(line: 585, column: 3, scope: !8461)
!8468 = !DILocation(line: 627, column: 1, scope: !8448)
!8469 = distinct !DISubprogram(name: "set_up_plls", scope: !1008, file: !1008, line: 448, type: !365, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !2123)
!8470 = !DILocation(line: 460, column: 6, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8469, file: !1008, line: 460, column: 6)
!8472 = !DILocation(line: 460, column: 31, scope: !8471)
!8473 = !DILocation(line: 460, column: 6, scope: !8469)
!8474 = !DILocation(line: 461, column: 3, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8471, file: !1008, line: 460, column: 67)
!8476 = !DILocation(line: 462, column: 3, scope: !8475)
!8477 = !DILocation(line: 463, column: 2, scope: !8475)
!8478 = !DILocation(line: 464, column: 2, scope: !8469)
!8479 = !DILocation(line: 488, column: 2, scope: !8469)
!8480 = !DILocation(line: 492, column: 2, scope: !8469)
!8481 = !DILocation(line: 496, column: 2, scope: !8469)
!8482 = !DILocation(line: 499, column: 2, scope: !8469)
!8483 = !DILocation(line: 500, column: 2, scope: !8469)
!8484 = !DILocation(line: 500, column: 9, scope: !8469)
!8485 = !DILocation(line: 500, column: 30, scope: !8469)
!8486 = distinct !{!8486, !8483, !8487}
!8487 = !DILocation(line: 502, column: 2, scope: !8469)
!8488 = !DILocation(line: 505, column: 1, scope: !8469)
!8489 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8445, file: !8445, line: 3224, type: !6443, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !8490)
!8490 = !{!8491}
!8491 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8489, file: !8445, line: 3224, type: !156)
!8492 = !DILocation(line: 0, scope: !8489)
!8493 = !DILocation(line: 3226, column: 3, scope: !8489)
!8494 = !DILocation(line: 3227, column: 1, scope: !8489)
!8495 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8445, file: !8445, line: 3188, type: !6443, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !8496)
!8496 = !{!8497}
!8497 = !DILocalVariable(name: "Source", arg: 1, scope: !8495, file: !8445, line: 3188, type: !156)
!8498 = !DILocation(line: 0, scope: !8495)
!8499 = !DILocation(line: 3190, column: 3, scope: !8495)
!8500 = !DILocation(line: 3191, column: 1, scope: !8495)
!8501 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8445, file: !8445, line: 3204, type: !6433, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !2123)
!8502 = !DILocation(line: 3206, column: 21, scope: !8501)
!8503 = !DILocation(line: 3206, column: 3, scope: !8501)
!8504 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8445, file: !8445, line: 3240, type: !6443, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !8505)
!8505 = !{!8506}
!8506 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8504, file: !8445, line: 3240, type: !156)
!8507 = !DILocation(line: 0, scope: !8504)
!8508 = !DILocation(line: 3242, column: 3, scope: !8504)
!8509 = !DILocation(line: 3243, column: 1, scope: !8504)
!8510 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8445, file: !8445, line: 3256, type: !6443, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !8511)
!8511 = !{!8512}
!8512 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8510, file: !8445, line: 3256, type: !156)
!8513 = !DILocation(line: 0, scope: !8510)
!8514 = !DILocation(line: 3258, column: 3, scope: !8510)
!8515 = !DILocation(line: 3259, column: 1, scope: !8510)
!8516 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1008, file: !1008, line: 409, type: !365, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !2123)
!8517 = !DILocation(line: 412, column: 6, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8516, file: !1008, line: 412, column: 6)
!8519 = !DILocation(line: 412, column: 27, scope: !8518)
!8520 = !DILocation(line: 412, column: 6, scope: !8516)
!8521 = !DILocation(line: 414, column: 3, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8518, file: !1008, line: 412, column: 33)
!8523 = !DILocation(line: 415, column: 3, scope: !8522)
!8524 = !DILocation(line: 415, column: 10, scope: !8522)
!8525 = !DILocation(line: 415, column: 31, scope: !8522)
!8526 = distinct !{!8526, !8523, !8527}
!8527 = !DILocation(line: 417, column: 3, scope: !8522)
!8528 = !DILocation(line: 421, column: 2, scope: !8516)
!8529 = !DILocation(line: 422, column: 2, scope: !8516)
!8530 = !DILocation(line: 422, column: 9, scope: !8516)
!8531 = !DILocation(line: 422, column: 34, scope: !8516)
!8532 = distinct !{!8532, !8529, !8533}
!8533 = !DILocation(line: 423, column: 2, scope: !8516)
!8534 = !DILocation(line: 424, column: 1, scope: !8516)
!8535 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8445, file: !8445, line: 4195, type: !365, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !2123)
!8536 = !DILocation(line: 4197, column: 3, scope: !8535)
!8537 = !DILocation(line: 4198, column: 1, scope: !8535)
!8538 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8445, file: !8445, line: 4184, type: !365, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !2123)
!8539 = !DILocation(line: 4186, column: 3, scope: !8538)
!8540 = !DILocation(line: 4187, column: 1, scope: !8538)
!8541 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8445, file: !8445, line: 4205, type: !6433, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !2123)
!8542 = !DILocation(line: 4207, column: 11, scope: !8541)
!8543 = !DILocation(line: 4207, column: 44, scope: !8541)
!8544 = !DILocation(line: 4207, column: 3, scope: !8541)
!8545 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8445, file: !8445, line: 3007, type: !6433, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !2123)
!8546 = !DILocation(line: 3009, column: 11, scope: !8545)
!8547 = !DILocation(line: 3009, column: 44, scope: !8545)
!8548 = !DILocation(line: 3009, column: 3, scope: !8545)
!8549 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8445, file: !8445, line: 2987, type: !365, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !2123)
!8550 = !DILocation(line: 2989, column: 3, scope: !8549)
!8551 = !DILocation(line: 2990, column: 1, scope: !8549)
!8552 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8445, file: !8445, line: 2939, type: !365, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !2123)
!8553 = !DILocation(line: 2941, column: 3, scope: !8552)
!8554 = !DILocation(line: 2942, column: 1, scope: !8552)
!8555 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8445, file: !8445, line: 2949, type: !365, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !2123)
!8556 = !DILocation(line: 2951, column: 3, scope: !8555)
!8557 = !DILocation(line: 2952, column: 1, scope: !8555)
!8558 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8445, file: !8445, line: 2969, type: !6433, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !2123)
!8559 = !DILocation(line: 2971, column: 11, scope: !8558)
!8560 = !DILocation(line: 2971, column: 44, scope: !8558)
!8561 = !DILocation(line: 2971, column: 3, scope: !8558)
!8562 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8445, file: !8445, line: 3143, type: !365, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !2123)
!8563 = !DILocation(line: 3145, column: 3, scope: !8562)
!8564 = !DILocation(line: 3146, column: 1, scope: !8562)
!8565 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8445, file: !8445, line: 3163, type: !6433, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !946, retainedNodes: !2123)
!8566 = !DILocation(line: 3165, column: 11, scope: !8565)
!8567 = !DILocation(line: 3165, column: 46, scope: !8565)
!8568 = !DILocation(line: 3165, column: 3, scope: !8565)
!8569 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8570, file: !8570, line: 40, type: !6433, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !2123)
!8570 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8571 = !DILocation(line: 45, column: 3, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8573, file: !8570, line: 44, column: 44)
!8573 = distinct !DILexicalBlock(scope: !8574, file: !8570, line: 44, column: 13)
!8574 = distinct !DILexicalBlock(scope: !8569, file: !8570, line: 42, column: 6)
!8575 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8570, file: !8570, line: 56, type: !365, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !2123)
!8576 = !DILocation(line: 58, column: 2, scope: !8575)
!8577 = !DILocation(line: 62, column: 1, scope: !8575)
!8578 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8445, file: !8445, line: 4304, type: !8579, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !8581)
!8579 = !DISubroutineType(types: !8580)
!8580 = !{null, !156, !156, !156, !156}
!8581 = !{!8582, !8583, !8584, !8585}
!8582 = !DILocalVariable(name: "Source", arg: 1, scope: !8578, file: !8445, line: 4304, type: !156)
!8583 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8578, file: !8445, line: 4304, type: !156)
!8584 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8578, file: !8445, line: 4304, type: !156)
!8585 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8578, file: !8445, line: 4304, type: !156)
!8586 = !DILocation(line: 0, scope: !8578)
!8587 = !DILocation(line: 4306, column: 3, scope: !8578)
!8588 = !DILocation(line: 4308, column: 3, scope: !8578)
!8589 = !DILocation(line: 4312, column: 1, scope: !8578)
!8590 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8570, file: !8570, line: 69, type: !365, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !2123)
!8591 = !DILocation(line: 72, column: 2, scope: !8590)
!8592 = !DILocation(line: 73, column: 1, scope: !8590)
!8593 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8594, file: !8594, line: 1185, type: !6443, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2920, retainedNodes: !8595)
!8594 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8595 = !{!8596, !8597}
!8596 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8593, file: !8594, line: 1185, type: !156)
!8597 = !DILocalVariable(name: "tmpreg", scope: !8593, file: !8594, line: 1187, type: !452)
!8598 = !DILocation(line: 0, scope: !8593)
!8599 = !DILocation(line: 1187, column: 3, scope: !8593)
!8600 = !DILocation(line: 1187, column: 17, scope: !8593)
!8601 = !DILocation(line: 1188, column: 3, scope: !8593)
!8602 = !DILocation(line: 1190, column: 12, scope: !8593)
!8603 = !DILocation(line: 1190, column: 10, scope: !8593)
!8604 = !DILocation(line: 1191, column: 9, scope: !8593)
!8605 = !DILocation(line: 1192, column: 1, scope: !8593)
!8606 = distinct !DISubprogram(name: "uart_console_init", scope: !1139, file: !1139, line: 588, type: !1116, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1082, retainedNodes: !8607)
!8607 = !{!8608}
!8608 = !DILocalVariable(name: "arg", arg: 1, scope: !8606, file: !1139, line: 588, type: !1094)
!8609 = !DILocation(line: 0, scope: !8606)
!8610 = !DILocation(line: 593, column: 7, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8606, file: !1139, line: 593, column: 6)
!8612 = !DILocation(line: 593, column: 6, scope: !8606)
!8613 = !DILocation(line: 597, column: 2, scope: !8606)
!8614 = !DILocation(line: 599, column: 2, scope: !8606)
!8615 = !DILocation(line: 600, column: 1, scope: !8606)
!8616 = distinct !DISubprogram(name: "device_is_ready", scope: !3373, file: !3373, line: 47, type: !8617, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1082, retainedNodes: !8619)
!8617 = !DISubroutineType(types: !8618)
!8618 = !{!146, !1094}
!8619 = !{!8620}
!8620 = !DILocalVariable(name: "dev", arg: 1, scope: !8616, file: !3373, line: 47, type: !1094)
!8621 = !DILocation(line: 0, scope: !8616)
!8622 = !DILocation(line: 55, column: 2, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8616, file: !3373, line: 55, column: 2)
!8624 = !{i64 2154961469}
!8625 = !DILocation(line: 56, column: 9, scope: !8616)
!8626 = !DILocation(line: 56, column: 2, scope: !8616)
!8627 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1139, file: !1139, line: 573, type: !365, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1082, retainedNodes: !2123)
!8628 = !DILocation(line: 576, column: 2, scope: !8627)
!8629 = !DILocation(line: 579, column: 2, scope: !8627)
!8630 = !DILocation(line: 581, column: 1, scope: !8627)
!8631 = distinct !DISubprogram(name: "console_out", scope: !1139, file: !1139, line: 77, type: !439, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1082, retainedNodes: !8632)
!8632 = !{!8633}
!8633 = !DILocalVariable(name: "c", arg: 1, scope: !8631, file: !1139, line: 77, type: !118)
!8634 = !DILocation(line: 0, scope: !8631)
!8635 = !DILocation(line: 89, column: 11, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8631, file: !1139, line: 89, column: 6)
!8637 = !DILocation(line: 89, column: 6, scope: !8631)
!8638 = !DILocation(line: 90, column: 3, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8636, file: !1139, line: 89, column: 17)
!8640 = !DILocation(line: 91, column: 2, scope: !8639)
!8641 = !DILocation(line: 92, column: 34, scope: !8631)
!8642 = !DILocation(line: 92, column: 2, scope: !8631)
!8643 = !DILocation(line: 94, column: 2, scope: !8631)
!8644 = distinct !DISubprogram(name: "uart_poll_out", scope: !8645, file: !8645, line: 95, type: !1112, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1082, retainedNodes: !8646)
!8645 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/threads")
!8646 = !{!8647, !8648}
!8647 = !DILocalVariable(name: "dev", arg: 1, scope: !8644, file: !8645, line: 95, type: !1094)
!8648 = !DILocalVariable(name: "out_char", arg: 2, scope: !8644, file: !8645, line: 95, type: !144)
!8649 = !DILocation(line: 0, scope: !8644)
!8650 = !DILocation(line: 105, column: 2, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8644, file: !8645, line: 105, column: 2)
!8652 = !{i64 2155044860}
!8653 = !DILocation(line: 106, column: 2, scope: !8644)
!8654 = !DILocation(line: 107, column: 1, scope: !8644)
!8655 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1088, file: !1088, line: 574, type: !1112, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1082, retainedNodes: !8656)
!8656 = !{!8657, !8658, !8659}
!8657 = !DILocalVariable(name: "dev", arg: 1, scope: !8655, file: !1088, line: 574, type: !1094)
!8658 = !DILocalVariable(name: "out_char", arg: 2, scope: !8655, file: !1088, line: 575, type: !144)
!8659 = !DILocalVariable(name: "api", scope: !8655, file: !1088, line: 577, type: !1085)
!8660 = !DILocation(line: 0, scope: !8655)
!8661 = !DILocation(line: 578, column: 40, scope: !8655)
!8662 = !DILocation(line: 580, column: 7, scope: !8655)
!8663 = !DILocation(line: 580, column: 2, scope: !8655)
!8664 = !DILocation(line: 581, column: 1, scope: !8655)
!8665 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !130, file: !130, line: 730, type: !8617, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1082, retainedNodes: !8666)
!8666 = !{!8667}
!8667 = !DILocalVariable(name: "dev", arg: 1, scope: !8665, file: !130, line: 730, type: !1094)
!8668 = !DILocation(line: 0, scope: !8665)
!8669 = !DILocation(line: 732, column: 9, scope: !8665)
!8670 = !DILocation(line: 732, column: 2, scope: !8665)
!8671 = distinct !DISubprogram(name: "uart_register_input", scope: !1139, file: !1139, line: 560, type: !8672, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1082, retainedNodes: !8717)
!8672 = !DISubroutineType(types: !8673)
!8673 = !{null, !8674, !8674, !8714}
!8674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8675, size: 32)
!8675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !220, line: 2208, size: 160, elements: !8676)
!8676 = !{!8677}
!8677 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8675, file: !220, line: 2209, baseType: !8678, size: 160)
!8678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !220, line: 1709, size: 160, elements: !8679)
!8679 = !{!8680, !8691, !8695}
!8680 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8678, file: !220, line: 1710, baseType: !8681, size: 64)
!8681 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !417, line: 46, baseType: !8682)
!8682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !417, line: 41, size: 64, elements: !8683)
!8683 = !{!8684, !8690}
!8684 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8682, file: !417, line: 42, baseType: !8685, size: 32)
!8685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8686, size: 32)
!8686 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !417, line: 39, baseType: !8687)
!8687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !417, line: 35, size: 32, elements: !8688)
!8688 = !{!8689}
!8689 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8687, file: !417, line: 36, baseType: !426, size: 32)
!8690 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8682, file: !417, line: 43, baseType: !8685, size: 32, offset: 32)
!8691 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8678, file: !220, line: 1711, baseType: !8692, size: 32, offset: 64)
!8692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !8693)
!8693 = !{!8694}
!8694 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8692, file: !334, line: 52, baseType: !22, size: 32)
!8695 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8678, file: !220, line: 1712, baseType: !8696, size: 64, offset: 96)
!8696 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !8697)
!8697 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !8698)
!8698 = !{!8699}
!8699 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8697, file: !261, line: 232, baseType: !8700, size: 64)
!8700 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !8701)
!8701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !8702)
!8702 = !{!8703, !8709}
!8703 = !DIDerivedType(tag: DW_TAG_member, scope: !8701, file: !235, line: 38, baseType: !8704, size: 32)
!8704 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8701, file: !235, line: 38, size: 32, elements: !8705)
!8705 = !{!8706, !8708}
!8706 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8704, file: !235, line: 39, baseType: !8707, size: 32)
!8707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8701, size: 32)
!8708 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8704, file: !235, line: 40, baseType: !8707, size: 32)
!8709 = !DIDerivedType(tag: DW_TAG_member, scope: !8701, file: !235, line: 42, baseType: !8710, size: 32, offset: 32)
!8710 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8701, file: !235, line: 42, size: 32, elements: !8711)
!8711 = !{!8712, !8713}
!8712 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8710, file: !235, line: 43, baseType: !8707, size: 32)
!8713 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8710, file: !235, line: 44, baseType: !8707, size: 32)
!8714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8715, size: 32)
!8715 = !DISubroutineType(types: !8716)
!8716 = !{!143, !1259, !143}
!8717 = !{!8718, !8719, !8720}
!8718 = !DILocalVariable(name: "avail", arg: 1, scope: !8671, file: !1139, line: 560, type: !8674)
!8719 = !DILocalVariable(name: "lines", arg: 2, scope: !8671, file: !1139, line: 560, type: !8674)
!8720 = !DILocalVariable(name: "completion", arg: 3, scope: !8671, file: !1139, line: 561, type: !8714)
!8721 = !DILocation(line: 0, scope: !8671)
!8722 = !DILocation(line: 566, column: 1, scope: !8671)
!8723 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1303, file: !1303, line: 523, type: !1164, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !8724)
!8724 = !{!8725, !8726, !8727, !8728, !8729}
!8725 = !DILocalVariable(name: "dev", arg: 1, scope: !8723, file: !1303, line: 523, type: !1166)
!8726 = !DILocalVariable(name: "pin", arg: 2, scope: !8723, file: !1303, line: 524, type: !154)
!8727 = !DILocalVariable(name: "flags", arg: 3, scope: !8723, file: !1303, line: 524, type: !155)
!8728 = !DILocalVariable(name: "err", scope: !8723, file: !1303, line: 526, type: !118)
!8729 = !DILocalVariable(name: "pincfg", scope: !8723, file: !1303, line: 527, type: !118)
!8730 = !DILocation(line: 0, scope: !8723)
!8731 = !DILocation(line: 527, column: 2, scope: !8723)
!8732 = !DILocation(line: 532, column: 8, scope: !8723)
!8733 = !DILocation(line: 533, column: 10, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8723, file: !1303, line: 533, column: 6)
!8735 = !DILocation(line: 533, column: 6, scope: !8723)
!8736 = !DILocation(line: 543, column: 13, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8723, file: !1303, line: 543, column: 6)
!8738 = !DILocation(line: 543, column: 28, scope: !8737)
!8739 = !DILocation(line: 543, column: 6, scope: !8723)
!8740 = !DILocation(line: 544, column: 14, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8742, file: !1303, line: 544, column: 7)
!8742 = distinct !DILexicalBlock(scope: !8737, file: !1303, line: 543, column: 34)
!8743 = !DILocation(line: 544, column: 39, scope: !8741)
!8744 = !DILocation(line: 544, column: 7, scope: !8742)
!8745 = !DILocation(line: 545, column: 38, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8741, file: !1303, line: 544, column: 45)
!8747 = !DILocation(line: 545, column: 4, scope: !8746)
!8748 = !DILocation(line: 546, column: 3, scope: !8746)
!8749 = !DILocation(line: 546, column: 21, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8741, file: !1303, line: 546, column: 14)
!8751 = !DILocation(line: 546, column: 45, scope: !8750)
!8752 = !DILocation(line: 546, column: 14, scope: !8741)
!8753 = !DILocation(line: 547, column: 40, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8750, file: !1303, line: 546, column: 51)
!8755 = !DILocation(line: 547, column: 4, scope: !8754)
!8756 = !DILocation(line: 548, column: 3, scope: !8754)
!8757 = !DILocation(line: 551, column: 32, scope: !8723)
!8758 = !DILocation(line: 551, column: 37, scope: !8723)
!8759 = !DILocation(line: 551, column: 2, scope: !8723)
!8760 = !DILocation(line: 554, column: 6, scope: !8723)
!8761 = !DILocation(line: 562, column: 1, scope: !8723)
!8762 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1303, file: !1303, line: 410, type: !8763, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !8765)
!8763 = !DISubroutineType(types: !8764)
!8764 = !{!118, !1166, !1004}
!8765 = !{!8766, !8767, !8768, !8770}
!8766 = !DILocalVariable(name: "dev", arg: 1, scope: !8762, file: !1303, line: 410, type: !1166)
!8767 = !DILocalVariable(name: "value", arg: 2, scope: !8762, file: !1303, line: 410, type: !1004)
!8768 = !DILocalVariable(name: "cfg", scope: !8762, file: !1303, line: 412, type: !8769)
!8769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 32)
!8770 = !DILocalVariable(name: "gpio", scope: !8762, file: !1303, line: 413, type: !1233)
!8771 = !DILocation(line: 0, scope: !8762)
!8772 = !DILocation(line: 412, column: 45, scope: !8762)
!8773 = !DILocation(line: 413, column: 44, scope: !8762)
!8774 = !DILocation(line: 415, column: 11, scope: !8762)
!8775 = !DILocation(line: 415, column: 9, scope: !8762)
!8776 = !DILocation(line: 417, column: 2, scope: !8762)
!8777 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1303, file: !1303, line: 420, type: !1187, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !8778)
!8778 = !{!8779, !8780, !8781, !8782, !8783, !8784}
!8779 = !DILocalVariable(name: "dev", arg: 1, scope: !8777, file: !1303, line: 420, type: !1166)
!8780 = !DILocalVariable(name: "mask", arg: 2, scope: !8777, file: !1303, line: 421, type: !167)
!8781 = !DILocalVariable(name: "value", arg: 3, scope: !8777, file: !1303, line: 422, type: !162)
!8782 = !DILocalVariable(name: "cfg", scope: !8777, file: !1303, line: 424, type: !8769)
!8783 = !DILocalVariable(name: "gpio", scope: !8777, file: !1303, line: 425, type: !1233)
!8784 = !DILocalVariable(name: "port_value", scope: !8777, file: !1303, line: 426, type: !156)
!8785 = !DILocation(line: 0, scope: !8777)
!8786 = !DILocation(line: 424, column: 45, scope: !8777)
!8787 = !DILocation(line: 425, column: 44, scope: !8777)
!8788 = !DILocation(line: 430, column: 15, scope: !8777)
!8789 = !DILocation(line: 431, column: 46, scope: !8777)
!8790 = !DILocation(line: 431, column: 44, scope: !8777)
!8791 = !DILocation(line: 431, column: 61, scope: !8777)
!8792 = !DILocation(line: 431, column: 53, scope: !8777)
!8793 = !DILocation(line: 431, column: 2, scope: !8777)
!8794 = !DILocation(line: 435, column: 2, scope: !8777)
!8795 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1303, file: !1303, line: 438, type: !1191, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !8796)
!8796 = !{!8797, !8798, !8799, !8800}
!8797 = !DILocalVariable(name: "dev", arg: 1, scope: !8795, file: !1303, line: 438, type: !1166)
!8798 = !DILocalVariable(name: "pins", arg: 2, scope: !8795, file: !1303, line: 439, type: !167)
!8799 = !DILocalVariable(name: "cfg", scope: !8795, file: !1303, line: 441, type: !8769)
!8800 = !DILocalVariable(name: "gpio", scope: !8795, file: !1303, line: 442, type: !1233)
!8801 = !DILocation(line: 0, scope: !8795)
!8802 = !DILocation(line: 441, column: 45, scope: !8795)
!8803 = !DILocation(line: 442, column: 44, scope: !8795)
!8804 = !DILocation(line: 448, column: 2, scope: !8795)
!8805 = !DILocation(line: 450, column: 2, scope: !8795)
!8806 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1303, file: !1303, line: 453, type: !1191, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !8807)
!8807 = !{!8808, !8809, !8810, !8811}
!8808 = !DILocalVariable(name: "dev", arg: 1, scope: !8806, file: !1303, line: 453, type: !1166)
!8809 = !DILocalVariable(name: "pins", arg: 2, scope: !8806, file: !1303, line: 454, type: !167)
!8810 = !DILocalVariable(name: "cfg", scope: !8806, file: !1303, line: 456, type: !8769)
!8811 = !DILocalVariable(name: "gpio", scope: !8806, file: !1303, line: 457, type: !1233)
!8812 = !DILocation(line: 0, scope: !8806)
!8813 = !DILocation(line: 456, column: 45, scope: !8806)
!8814 = !DILocation(line: 457, column: 44, scope: !8806)
!8815 = !DILocation(line: 467, column: 2, scope: !8806)
!8816 = !DILocation(line: 470, column: 2, scope: !8806)
!8817 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1303, file: !1303, line: 473, type: !1191, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !8818)
!8818 = !{!8819, !8820, !8821, !8822}
!8819 = !DILocalVariable(name: "dev", arg: 1, scope: !8817, file: !1303, line: 473, type: !1166)
!8820 = !DILocalVariable(name: "pins", arg: 2, scope: !8817, file: !1303, line: 474, type: !167)
!8821 = !DILocalVariable(name: "cfg", scope: !8817, file: !1303, line: 476, type: !8769)
!8822 = !DILocalVariable(name: "gpio", scope: !8817, file: !1303, line: 477, type: !1233)
!8823 = !DILocation(line: 0, scope: !8817)
!8824 = !DILocation(line: 476, column: 45, scope: !8817)
!8825 = !DILocation(line: 477, column: 44, scope: !8817)
!8826 = !DILocation(line: 484, column: 2, scope: !8817)
!8827 = !DILocation(line: 487, column: 2, scope: !8817)
!8828 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1303, file: !1303, line: 594, type: !1197, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !8829)
!8829 = !{!8830, !8831, !8832, !8833, !8834, !8835, !8837, !8838, !8839}
!8830 = !DILocalVariable(name: "dev", arg: 1, scope: !8828, file: !1303, line: 594, type: !1166)
!8831 = !DILocalVariable(name: "pin", arg: 2, scope: !8828, file: !1303, line: 595, type: !154)
!8832 = !DILocalVariable(name: "mode", arg: 3, scope: !8828, file: !1303, line: 596, type: !101)
!8833 = !DILocalVariable(name: "trig", arg: 4, scope: !8828, file: !1303, line: 597, type: !107)
!8834 = !DILocalVariable(name: "cfg", scope: !8828, file: !1303, line: 599, type: !8769)
!8835 = !DILocalVariable(name: "data", scope: !8828, file: !1303, line: 600, type: !8836)
!8836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 32)
!8837 = !DILocalVariable(name: "edge", scope: !8828, file: !1303, line: 601, type: !118)
!8838 = !DILocalVariable(name: "err", scope: !8828, file: !1303, line: 602, type: !118)
!8839 = !DILabel(scope: !8828, name: "exit", file: !1303, line: 643)
!8840 = !DILocation(line: 0, scope: !8828)
!8841 = !DILocation(line: 599, column: 45, scope: !8828)
!8842 = !DILocation(line: 604, column: 6, scope: !8828)
!8843 = !DILocation(line: 605, column: 34, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !1303, line: 605, column: 7)
!8845 = distinct !DILexicalBlock(scope: !8846, file: !1303, line: 604, column: 38)
!8846 = distinct !DILexicalBlock(scope: !8828, file: !1303, line: 604, column: 6)
!8847 = !DILocation(line: 605, column: 7, scope: !8844)
!8848 = !DILocation(line: 605, column: 47, scope: !8844)
!8849 = !DILocation(line: 605, column: 39, scope: !8844)
!8850 = !DILocation(line: 605, column: 7, scope: !8845)
!8851 = !DILocation(line: 606, column: 4, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8844, file: !1303, line: 605, column: 53)
!8853 = !DILocation(line: 607, column: 4, scope: !8852)
!8854 = !DILocation(line: 608, column: 4, scope: !8852)
!8855 = !DILocation(line: 609, column: 3, scope: !8852)
!8856 = !DILocation(line: 600, column: 38, scope: !8828)
!8857 = !DILocation(line: 620, column: 30, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8828, file: !1303, line: 620, column: 6)
!8859 = !DILocation(line: 620, column: 6, scope: !8858)
!8860 = !DILocation(line: 620, column: 57, scope: !8858)
!8861 = !DILocation(line: 620, column: 6, scope: !8828)
!8862 = !DILocation(line: 625, column: 29, scope: !8828)
!8863 = !DILocation(line: 625, column: 2, scope: !8828)
!8864 = !DILocation(line: 627, column: 2, scope: !8828)
!8865 = !DILocation(line: 630, column: 3, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8828, file: !1303, line: 627, column: 16)
!8867 = !DILocation(line: 633, column: 3, scope: !8866)
!8868 = !DILocation(line: 636, column: 3, scope: !8866)
!8869 = !DILocation(line: 639, column: 2, scope: !8828)
!8870 = !DILocation(line: 641, column: 2, scope: !8828)
!8871 = !DILocation(line: 643, column: 1, scope: !8828)
!8872 = !DILocation(line: 644, column: 2, scope: !8828)
!8873 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1303, file: !1303, line: 647, type: !1201, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !8874)
!8874 = !{!8875, !8876, !8877, !8878}
!8875 = !DILocalVariable(name: "dev", arg: 1, scope: !8873, file: !1303, line: 647, type: !1166)
!8876 = !DILocalVariable(name: "callback", arg: 2, scope: !8873, file: !1303, line: 648, type: !1203)
!8877 = !DILocalVariable(name: "set", arg: 3, scope: !8873, file: !1303, line: 649, type: !146)
!8878 = !DILocalVariable(name: "data", scope: !8873, file: !1303, line: 651, type: !8836)
!8879 = !DILocation(line: 0, scope: !8873)
!8880 = !DILocation(line: 651, column: 38, scope: !8873)
!8881 = !DILocation(line: 653, column: 37, scope: !8873)
!8882 = !DILocation(line: 653, column: 9, scope: !8873)
!8883 = !DILocation(line: 653, column: 2, scope: !8873)
!8884 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8885, file: !8885, line: 38, type: !8886, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !8889)
!8885 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8886 = !DISubroutineType(types: !8887)
!8887 = !{!118, !8888, !1203, !146}
!8888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 32)
!8889 = !{!8890, !8891, !8892}
!8890 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8884, file: !8885, line: 38, type: !8888)
!8891 = !DILocalVariable(name: "callback", arg: 2, scope: !8884, file: !8885, line: 39, type: !1203)
!8892 = !DILocalVariable(name: "set", arg: 3, scope: !8884, file: !8885, line: 40, type: !146)
!8893 = !DILocation(line: 0, scope: !8884)
!8894 = !DILocation(line: 42, column: 2, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8896, file: !8885, line: 42, column: 2)
!8896 = distinct !DILexicalBlock(scope: !8884, file: !8885, line: 42, column: 2)
!8897 = !DILocation(line: 42, column: 2, scope: !8896)
!8898 = !DILocation(line: 42, column: 2, scope: !8899)
!8899 = distinct !DILexicalBlock(scope: !8895, file: !8885, line: 42, column: 2)
!8900 = !DILocation(line: 43, column: 2, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8902, file: !8885, line: 43, column: 2)
!8902 = distinct !DILexicalBlock(scope: !8884, file: !8885, line: 43, column: 2)
!8903 = !DILocation(line: 43, column: 2, scope: !8902)
!8904 = !DILocation(line: 43, column: 2, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8901, file: !8885, line: 43, column: 2)
!8906 = !DILocation(line: 45, column: 7, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8884, file: !8885, line: 45, column: 6)
!8908 = !DILocation(line: 45, column: 6, scope: !8884)
!8909 = !DILocation(line: 46, column: 56, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8911, file: !8885, line: 46, column: 7)
!8911 = distinct !DILexicalBlock(scope: !8907, file: !8885, line: 45, column: 38)
!8912 = !DILocation(line: 46, column: 8, scope: !8910)
!8913 = !DILocation(line: 46, column: 7, scope: !8911)
!8914 = !DILocation(line: 51, column: 13, scope: !8907)
!8915 = !DILocation(line: 56, column: 43, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8917, file: !8885, line: 55, column: 11)
!8917 = distinct !DILexicalBlock(scope: !8884, file: !8885, line: 55, column: 6)
!8918 = !DILocation(line: 56, column: 3, scope: !8916)
!8919 = !DILocation(line: 57, column: 2, scope: !8916)
!8920 = !DILocation(line: 60, column: 1, scope: !8884)
!8921 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !187, file: !187, line: 261, type: !8922, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !8924)
!8922 = !DISubroutineType(types: !8923)
!8923 = !{!146, !8888}
!8924 = !{!8925}
!8925 = !DILocalVariable(name: "list", arg: 1, scope: !8921, file: !187, line: 261, type: !8888)
!8926 = !DILocation(line: 0, scope: !8921)
!8927 = !DILocation(line: 261, column: 1, scope: !8921)
!8928 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !187, file: !187, line: 417, type: !8929, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !8931)
!8929 = !DISubroutineType(types: !8930)
!8930 = !{!146, !8888, !1379}
!8931 = !{!8932, !8933, !8934, !8935}
!8932 = !DILocalVariable(name: "list", arg: 1, scope: !8928, file: !187, line: 417, type: !8888)
!8933 = !DILocalVariable(name: "node", arg: 2, scope: !8928, file: !187, line: 417, type: !1379)
!8934 = !DILocalVariable(name: "prev", scope: !8928, file: !187, line: 417, type: !1379)
!8935 = !DILocalVariable(name: "test", scope: !8928, file: !187, line: 417, type: !1379)
!8936 = !DILocation(line: 0, scope: !8928)
!8937 = !DILocation(line: 417, column: 1, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8928, file: !187, line: 417, column: 1)
!8939 = !DILocation(line: 417, column: 1, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8938, file: !187, line: 417, column: 1)
!8941 = !DILocation(line: 417, column: 1, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8943, file: !187, line: 417, column: 1)
!8943 = distinct !DILexicalBlock(scope: !8940, file: !187, line: 417, column: 1)
!8944 = !DILocation(line: 417, column: 1, scope: !8943)
!8945 = distinct !{!8945, !8937, !8937}
!8946 = !DILocation(line: 417, column: 1, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8942, file: !187, line: 417, column: 1)
!8948 = !DILocation(line: 417, column: 1, scope: !8928)
!8949 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !187, file: !187, line: 298, type: !8950, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !8952)
!8950 = !DISubroutineType(types: !8951)
!8951 = !{null, !8888, !1379}
!8952 = !{!8953, !8954}
!8953 = !DILocalVariable(name: "list", arg: 1, scope: !8949, file: !187, line: 298, type: !8888)
!8954 = !DILocalVariable(name: "node", arg: 2, scope: !8949, file: !187, line: 298, type: !1379)
!8955 = !DILocation(line: 0, scope: !8949)
!8956 = !DILocation(line: 298, column: 1, scope: !8949)
!8957 = !DILocation(line: 298, column: 1, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8949, file: !187, line: 298, column: 1)
!8959 = !DILocation(line: 298, column: 1, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8958, file: !187, line: 298, column: 1)
!8961 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !187, file: !187, line: 231, type: !8962, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !8964)
!8962 = !DISubroutineType(types: !8963)
!8963 = !{!1379, !8888}
!8964 = !{!8965}
!8965 = !DILocalVariable(name: "list", arg: 1, scope: !8961, file: !187, line: 231, type: !8888)
!8966 = !DILocation(line: 0, scope: !8961)
!8967 = !DILocation(line: 233, column: 15, scope: !8961)
!8968 = !DILocation(line: 233, column: 2, scope: !8961)
!8969 = distinct !DISubprogram(name: "z_snode_next_set", scope: !187, file: !187, line: 209, type: !8970, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !8972)
!8970 = !DISubroutineType(types: !8971)
!8971 = !{null, !1379, !1379}
!8972 = !{!8973, !8974}
!8973 = !DILocalVariable(name: "parent", arg: 1, scope: !8969, file: !187, line: 209, type: !1379)
!8974 = !DILocalVariable(name: "child", arg: 2, scope: !8969, file: !187, line: 209, type: !1379)
!8975 = !DILocation(line: 0, scope: !8969)
!8976 = !DILocation(line: 211, column: 10, scope: !8969)
!8977 = !DILocation(line: 211, column: 15, scope: !8969)
!8978 = !DILocation(line: 212, column: 1, scope: !8969)
!8979 = distinct !DISubprogram(name: "z_slist_head_set", scope: !187, file: !187, line: 214, type: !8950, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !8980)
!8980 = !{!8981, !8982}
!8981 = !DILocalVariable(name: "list", arg: 1, scope: !8979, file: !187, line: 214, type: !8888)
!8982 = !DILocalVariable(name: "node", arg: 2, scope: !8979, file: !187, line: 214, type: !1379)
!8983 = !DILocation(line: 0, scope: !8979)
!8984 = !DILocation(line: 216, column: 8, scope: !8979)
!8985 = !DILocation(line: 216, column: 13, scope: !8979)
!8986 = !DILocation(line: 217, column: 1, scope: !8979)
!8987 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !187, file: !187, line: 243, type: !8962, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !8988)
!8988 = !{!8989}
!8989 = !DILocalVariable(name: "list", arg: 1, scope: !8987, file: !187, line: 243, type: !8888)
!8990 = !DILocation(line: 0, scope: !8987)
!8991 = !DILocation(line: 245, column: 15, scope: !8987)
!8992 = !DILocation(line: 245, column: 2, scope: !8987)
!8993 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !187, file: !187, line: 219, type: !8950, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !8994)
!8994 = !{!8995, !8996}
!8995 = !DILocalVariable(name: "list", arg: 1, scope: !8993, file: !187, line: 219, type: !8888)
!8996 = !DILocalVariable(name: "node", arg: 2, scope: !8993, file: !187, line: 219, type: !1379)
!8997 = !DILocation(line: 0, scope: !8993)
!8998 = !DILocation(line: 221, column: 8, scope: !8993)
!8999 = !DILocation(line: 221, column: 13, scope: !8993)
!9000 = !DILocation(line: 222, column: 1, scope: !8993)
!9001 = distinct !DISubprogram(name: "sys_slist_remove", scope: !187, file: !187, line: 401, type: !9002, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9004)
!9002 = !DISubroutineType(types: !9003)
!9003 = !{null, !8888, !1379, !1379}
!9004 = !{!9005, !9006, !9007}
!9005 = !DILocalVariable(name: "list", arg: 1, scope: !9001, file: !187, line: 401, type: !8888)
!9006 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9001, file: !187, line: 401, type: !1379)
!9007 = !DILocalVariable(name: "node", arg: 3, scope: !9001, file: !187, line: 401, type: !1379)
!9008 = !DILocation(line: 0, scope: !9001)
!9009 = !DILocation(line: 401, column: 1, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !9001, file: !187, line: 401, column: 1)
!9011 = !DILocation(line: 0, scope: !9010)
!9012 = !DILocation(line: 401, column: 1, scope: !9001)
!9013 = !DILocation(line: 401, column: 1, scope: !9014)
!9014 = distinct !DILexicalBlock(scope: !9010, file: !187, line: 401, column: 1)
!9015 = !DILocation(line: 401, column: 1, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9014, file: !187, line: 401, column: 1)
!9017 = !DILocation(line: 401, column: 1, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !9016, file: !187, line: 401, column: 1)
!9019 = !DILocation(line: 401, column: 1, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9010, file: !187, line: 401, column: 1)
!9021 = !DILocation(line: 401, column: 1, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9020, file: !187, line: 401, column: 1)
!9023 = !DILocation(line: 401, column: 1, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9022, file: !187, line: 401, column: 1)
!9025 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !187, file: !187, line: 285, type: !9026, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9028)
!9026 = !DISubroutineType(types: !9027)
!9027 = !{!1379, !1379}
!9028 = !{!9029}
!9029 = !DILocalVariable(name: "node", arg: 1, scope: !9025, file: !187, line: 285, type: !1379)
!9030 = !DILocation(line: 0, scope: !9025)
!9031 = !DILocation(line: 285, column: 1, scope: !9025)
!9032 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !187, file: !187, line: 274, type: !9026, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9033)
!9033 = !{!9034}
!9034 = !DILocalVariable(name: "node", arg: 1, scope: !9032, file: !187, line: 274, type: !1379)
!9035 = !DILocation(line: 0, scope: !9032)
!9036 = !DILocation(line: 274, column: 1, scope: !9032)
!9037 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !187, file: !187, line: 204, type: !9026, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9038)
!9038 = !{!9039}
!9039 = !DILocalVariable(name: "node", arg: 1, scope: !9037, file: !187, line: 204, type: !1379)
!9040 = !DILocation(line: 0, scope: !9037)
!9041 = !DILocation(line: 206, column: 15, scope: !9037)
!9042 = !DILocation(line: 206, column: 2, scope: !9037)
!9043 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1303, file: !1303, line: 342, type: !439, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9044)
!9044 = !{!9045, !9046, !9047}
!9045 = !DILocalVariable(name: "pin", arg: 1, scope: !9043, file: !1303, line: 342, type: !118)
!9046 = !DILocalVariable(name: "line", scope: !9043, file: !1303, line: 344, type: !156)
!9047 = !DILocalVariable(name: "port", scope: !9043, file: !1303, line: 345, type: !118)
!9048 = !DILocation(line: 0, scope: !9043)
!9049 = !DILocation(line: 344, column: 18, scope: !9043)
!9050 = !{i32 983040, i32 0}
!9051 = !DILocation(line: 356, column: 9, scope: !9043)
!9052 = !DILocation(line: 370, column: 2, scope: !9043)
!9053 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1303, file: !1303, line: 37, type: !869, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9054)
!9054 = !{!9055, !9056, !9057}
!9055 = !DILocalVariable(name: "line", arg: 1, scope: !9053, file: !1303, line: 37, type: !118)
!9056 = !DILocalVariable(name: "arg", arg: 2, scope: !9053, file: !1303, line: 37, type: !117)
!9057 = !DILocalVariable(name: "data", scope: !9053, file: !1303, line: 39, type: !8836)
!9058 = !DILocation(line: 0, scope: !9053)
!9059 = !DILocation(line: 41, column: 29, scope: !9053)
!9060 = !DILocation(line: 41, column: 39, scope: !9053)
!9061 = !DILocation(line: 41, column: 44, scope: !9053)
!9062 = !DILocation(line: 41, column: 2, scope: !9053)
!9063 = !DILocation(line: 42, column: 1, scope: !9053)
!9064 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1303, file: !1303, line: 376, type: !9065, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9067)
!9065 = !DISubroutineType(types: !9066)
!9066 = !{!118, !118, !118}
!9067 = !{!9068, !9069, !9070, !9072, !9073}
!9068 = !DILocalVariable(name: "port", arg: 1, scope: !9064, file: !1303, line: 376, type: !118)
!9069 = !DILocalVariable(name: "pin", arg: 2, scope: !9064, file: !1303, line: 376, type: !118)
!9070 = !DILocalVariable(name: "clk", scope: !9064, file: !1303, line: 386, type: !9071)
!9071 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1166)
!9072 = !DILocalVariable(name: "pclken", scope: !9064, file: !1303, line: 387, type: !1422)
!9073 = !DILocalVariable(name: "ret", scope: !9064, file: !1303, line: 396, type: !118)
!9074 = !DILocation(line: 0, scope: !9064)
!9075 = !DILocation(line: 387, column: 2, scope: !9064)
!9076 = !DILocation(line: 387, column: 22, scope: !9064)
!9077 = !DILocation(line: 399, column: 8, scope: !9064)
!9078 = !DILocation(line: 400, column: 10, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9064, file: !1303, line: 400, column: 6)
!9080 = !DILocation(line: 400, column: 6, scope: !9064)
!9081 = !DILocation(line: 405, column: 2, scope: !9064)
!9082 = !DILocation(line: 407, column: 2, scope: !9064)
!9083 = !DILocation(line: 408, column: 1, scope: !9064)
!9084 = distinct !DISubprogram(name: "clock_control_on", scope: !955, file: !955, line: 123, type: !1268, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9085)
!9085 = !{!9086, !9087, !9088}
!9086 = !DILocalVariable(name: "dev", arg: 1, scope: !9084, file: !955, line: 123, type: !1166)
!9087 = !DILocalVariable(name: "sys", arg: 2, scope: !9084, file: !955, line: 124, type: !1048)
!9088 = !DILocalVariable(name: "api", scope: !9084, file: !955, line: 126, type: !1261)
!9089 = !DILocation(line: 0, scope: !9084)
!9090 = !DILocation(line: 127, column: 49, scope: !9084)
!9091 = !DILocation(line: 129, column: 14, scope: !9084)
!9092 = !DILocation(line: 129, column: 9, scope: !9084)
!9093 = !DILocation(line: 129, column: 2, scope: !9084)
!9094 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1303, file: !1303, line: 311, type: !8203, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9095)
!9095 = !{!9096, !9097, !9098}
!9096 = !DILocalVariable(name: "port", arg: 1, scope: !9094, file: !1303, line: 311, type: !118)
!9097 = !DILocalVariable(name: "pin", arg: 2, scope: !9094, file: !1303, line: 311, type: !118)
!9098 = !DILocalVariable(name: "line", scope: !9094, file: !1303, line: 313, type: !156)
!9099 = !DILocation(line: 0, scope: !9094)
!9100 = !DILocation(line: 313, column: 18, scope: !9094)
!9101 = !DILocation(line: 337, column: 2, scope: !9094)
!9102 = !DILocation(line: 340, column: 1, scope: !9094)
!9103 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1303, file: !1303, line: 295, type: !9104, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9106)
!9104 = !DISubroutineType(types: !9105)
!9105 = !{!156, !118}
!9106 = !{!9107}
!9107 = !DILocalVariable(name: "pin", arg: 1, scope: !9103, file: !1303, line: 295, type: !118)
!9108 = !DILocation(line: 0, scope: !9103)
!9109 = !DILocation(line: 307, column: 46, scope: !9103)
!9110 = !DILocation(line: 307, column: 27, scope: !9103)
!9111 = !DILocation(line: 307, column: 32, scope: !9103)
!9112 = !DILocation(line: 307, column: 14, scope: !9103)
!9113 = !DILocation(line: 307, column: 39, scope: !9103)
!9114 = !DILocation(line: 307, column: 2, scope: !9103)
!9115 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6193, file: !6193, line: 671, type: !9116, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9118)
!9116 = !DISubroutineType(types: !9117)
!9117 = !{null, !156, !156}
!9118 = !{!9119, !9120}
!9119 = !DILocalVariable(name: "Port", arg: 1, scope: !9115, file: !6193, line: 671, type: !156)
!9120 = !DILocalVariable(name: "Line", arg: 2, scope: !9115, file: !6193, line: 671, type: !156)
!9121 = !DILocation(line: 0, scope: !9115)
!9122 = !DILocation(line: 673, column: 3, scope: !9115)
!9123 = !DILocalVariable(name: "value", arg: 1, scope: !9124, file: !6346, line: 373, type: !156)
!9124 = distinct !DISubprogram(name: "__RBIT", scope: !6346, file: !6346, line: 373, type: !7392, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9125)
!9125 = !{!9123, !9126}
!9126 = !DILocalVariable(name: "result", scope: !9124, file: !6346, line: 375, type: !156)
!9127 = !DILocation(line: 0, scope: !9124, inlinedAt: !9128)
!9128 = distinct !DILocation(line: 673, column: 3, scope: !9115)
!9129 = !DILocation(line: 380, column: 4, scope: !9124, inlinedAt: !9128)
!9130 = !{i64 3502213}
!9131 = !DILocalVariable(name: "value", arg: 1, scope: !9132, file: !6346, line: 403, type: !156)
!9132 = distinct !DISubprogram(name: "__CLZ", scope: !6346, file: !6346, line: 403, type: !9133, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9135)
!9133 = !DISubroutineType(types: !9134)
!9134 = !{!143, !156}
!9135 = !{!9131}
!9136 = !DILocation(line: 0, scope: !9132, inlinedAt: !9137)
!9137 = distinct !DILocation(line: 673, column: 3, scope: !9115)
!9138 = !DILocation(line: 414, column: 7, scope: !9132, inlinedAt: !9137)
!9139 = !DILocation(line: 674, column: 1, scope: !9115)
!9140 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8885, file: !8885, line: 69, type: !9141, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9143)
!9141 = !DISubroutineType(types: !9142)
!9142 = !{null, !8888, !1166, !156}
!9143 = !{!9144, !9145, !9146, !9147, !9148}
!9144 = !DILocalVariable(name: "list", arg: 1, scope: !9140, file: !8885, line: 69, type: !8888)
!9145 = !DILocalVariable(name: "port", arg: 2, scope: !9140, file: !8885, line: 70, type: !1166)
!9146 = !DILocalVariable(name: "pins", arg: 3, scope: !9140, file: !8885, line: 71, type: !156)
!9147 = !DILocalVariable(name: "cb", scope: !9140, file: !8885, line: 73, type: !1203)
!9148 = !DILocalVariable(name: "tmp", scope: !9140, file: !8885, line: 73, type: !1203)
!9149 = !DILocation(line: 0, scope: !9140)
!9150 = !DILocation(line: 75, column: 2, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !9140, file: !8885, line: 75, column: 2)
!9152 = !DILocation(line: 0, scope: !9151)
!9153 = !DILocation(line: 76, column: 11, scope: !9154)
!9154 = distinct !DILexicalBlock(scope: !9155, file: !8885, line: 76, column: 7)
!9155 = distinct !DILexicalBlock(scope: !9156, file: !8885, line: 75, column: 57)
!9156 = distinct !DILexicalBlock(scope: !9151, file: !8885, line: 75, column: 2)
!9157 = !DILocation(line: 76, column: 20, scope: !9154)
!9158 = !DILocation(line: 76, column: 7, scope: !9155)
!9159 = !DILocation(line: 77, column: 4, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9161, file: !8885, line: 77, column: 4)
!9161 = distinct !DILexicalBlock(scope: !9162, file: !8885, line: 77, column: 4)
!9162 = distinct !DILexicalBlock(scope: !9154, file: !8885, line: 76, column: 28)
!9163 = !DILocation(line: 77, column: 4, scope: !9161)
!9164 = !DILocation(line: 77, column: 4, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9160, file: !8885, line: 77, column: 4)
!9166 = !DILocation(line: 78, column: 4, scope: !9162)
!9167 = !DILocation(line: 79, column: 3, scope: !9162)
!9168 = !DILocation(line: 75, column: 2, scope: !9156)
!9169 = !DILocation(line: 81, column: 1, scope: !9140)
!9170 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6193, file: !6193, line: 710, type: !7392, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9171)
!9171 = !{!9172}
!9172 = !DILocalVariable(name: "Line", arg: 1, scope: !9170, file: !6193, line: 710, type: !156)
!9173 = !DILocation(line: 0, scope: !9170)
!9174 = !DILocation(line: 712, column: 21, scope: !9170)
!9175 = !DILocation(line: 0, scope: !9124, inlinedAt: !9176)
!9176 = distinct !DILocation(line: 712, column: 76, scope: !9170)
!9177 = !DILocation(line: 380, column: 4, scope: !9124, inlinedAt: !9176)
!9178 = !DILocation(line: 0, scope: !9132, inlinedAt: !9179)
!9179 = distinct !DILocation(line: 712, column: 76, scope: !9170)
!9180 = !DILocation(line: 414, column: 7, scope: !9132, inlinedAt: !9179)
!9181 = !DILocation(line: 712, column: 73, scope: !9170)
!9182 = !DILocation(line: 712, column: 3, scope: !9170)
!9183 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9184, file: !9184, line: 910, type: !9185, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9187)
!9184 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9185 = !DISubroutineType(types: !9186)
!9186 = !{null, !1233, !156}
!9187 = !{!9188, !9189}
!9188 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9183, file: !9184, line: 910, type: !1233)
!9189 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9183, file: !9184, line: 910, type: !156)
!9190 = !DILocation(line: 0, scope: !9183)
!9191 = !DILocation(line: 912, column: 3, scope: !9183)
!9192 = !DILocation(line: 913, column: 1, scope: !9183)
!9193 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9184, file: !9184, line: 823, type: !9194, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9196)
!9194 = !DISubroutineType(types: !9195)
!9195 = !{!156, !1233}
!9196 = !{!9197}
!9197 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9193, file: !9184, line: 823, type: !1233)
!9198 = !DILocation(line: 0, scope: !9193)
!9199 = !DILocation(line: 825, column: 21, scope: !9193)
!9200 = !DILocation(line: 825, column: 3, scope: !9193)
!9201 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9184, file: !9184, line: 812, type: !9185, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9202)
!9202 = !{!9203, !9204}
!9203 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9201, file: !9184, line: 812, type: !1233)
!9204 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9201, file: !9184, line: 812, type: !156)
!9205 = !DILocation(line: 0, scope: !9201)
!9206 = !DILocation(line: 814, column: 3, scope: !9201)
!9207 = !DILocation(line: 815, column: 1, scope: !9201)
!9208 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9184, file: !9184, line: 771, type: !9194, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9209)
!9209 = !{!9210}
!9210 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9208, file: !9184, line: 771, type: !1233)
!9211 = !DILocation(line: 0, scope: !9208)
!9212 = !DILocation(line: 773, column: 21, scope: !9208)
!9213 = !DILocation(line: 773, column: 3, scope: !9208)
!9214 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1303, file: !1303, line: 47, type: !9215, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9217)
!9215 = !DISubroutineType(types: !9216)
!9216 = !{!118, !155, !2599}
!9217 = !{!9218, !9219}
!9218 = !DILocalVariable(name: "flags", arg: 1, scope: !9214, file: !1303, line: 47, type: !155)
!9219 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9214, file: !1303, line: 47, type: !2599)
!9220 = !DILocation(line: 0, scope: !9214)
!9221 = !DILocation(line: 50, column: 13, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !9214, file: !1303, line: 50, column: 6)
!9223 = !DILocation(line: 50, column: 28, scope: !9222)
!9224 = !DILocation(line: 50, column: 6, scope: !9214)
!9225 = !DILocation(line: 53, column: 11, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9222, file: !1303, line: 50, column: 34)
!9227 = !DILocation(line: 55, column: 14, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9226, file: !1303, line: 55, column: 7)
!9229 = !DILocation(line: 55, column: 35, scope: !9228)
!9230 = !DILocation(line: 55, column: 7, scope: !9226)
!9231 = !DILocation(line: 56, column: 14, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9233, file: !1303, line: 56, column: 8)
!9233 = distinct !DILexicalBlock(scope: !9228, file: !1303, line: 55, column: 41)
!9234 = !DILocation(line: 56, column: 8, scope: !9233)
!9235 = !DILocation(line: 0, scope: !9228)
!9236 = !DILocation(line: 66, column: 14, scope: !9237)
!9237 = distinct !DILexicalBlock(scope: !9226, file: !1303, line: 66, column: 7)
!9238 = !DILocation(line: 66, column: 30, scope: !9237)
!9239 = !DILocation(line: 66, column: 7, scope: !9226)
!9240 = !DILocation(line: 67, column: 12, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9237, file: !1303, line: 66, column: 36)
!9242 = !DILocation(line: 68, column: 3, scope: !9241)
!9243 = !DILocation(line: 68, column: 21, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !9237, file: !1303, line: 68, column: 14)
!9245 = !DILocation(line: 68, column: 39, scope: !9244)
!9246 = !DILocation(line: 68, column: 14, scope: !9237)
!9247 = !DILocation(line: 69, column: 12, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9244, file: !1303, line: 68, column: 45)
!9249 = !DILocation(line: 70, column: 3, scope: !9248)
!9250 = !DILocation(line: 72, column: 21, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9222, file: !1303, line: 72, column: 14)
!9252 = !DILocation(line: 72, column: 35, scope: !9251)
!9253 = !DILocation(line: 72, column: 14, scope: !9222)
!9254 = !DILocation(line: 77, column: 14, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9256, file: !1303, line: 77, column: 7)
!9256 = distinct !DILexicalBlock(scope: !9251, file: !1303, line: 72, column: 41)
!9257 = !DILocation(line: 77, column: 30, scope: !9255)
!9258 = !DILocation(line: 77, column: 7, scope: !9256)
!9259 = !DILocation(line: 0, scope: !9222)
!9260 = !DILocation(line: 90, column: 1, scope: !9214)
!9261 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1303, file: !1303, line: 157, type: !9262, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9264)
!9262 = !DISubroutineType(types: !9263)
!9263 = !{null, !1166, !118, !118, !118}
!9264 = !{!9265, !9266, !9267, !9268, !9269, !9270, !9271, !9272, !9273, !9274, !9275}
!9265 = !DILocalVariable(name: "dev", arg: 1, scope: !9261, file: !1303, line: 157, type: !1166)
!9266 = !DILocalVariable(name: "pin", arg: 2, scope: !9261, file: !1303, line: 157, type: !118)
!9267 = !DILocalVariable(name: "conf", arg: 3, scope: !9261, file: !1303, line: 158, type: !118)
!9268 = !DILocalVariable(name: "func", arg: 4, scope: !9261, file: !1303, line: 158, type: !118)
!9269 = !DILocalVariable(name: "cfg", scope: !9261, file: !1303, line: 160, type: !8769)
!9270 = !DILocalVariable(name: "gpio", scope: !9261, file: !1303, line: 161, type: !1233)
!9271 = !DILocalVariable(name: "pin_ll", scope: !9261, file: !1303, line: 163, type: !118)
!9272 = !DILocalVariable(name: "mode", scope: !9261, file: !1303, line: 227, type: !32)
!9273 = !DILocalVariable(name: "otype", scope: !9261, file: !1303, line: 227, type: !32)
!9274 = !DILocalVariable(name: "ospeed", scope: !9261, file: !1303, line: 227, type: !32)
!9275 = !DILocalVariable(name: "pupd", scope: !9261, file: !1303, line: 227, type: !32)
!9276 = !DILocation(line: 0, scope: !9261)
!9277 = !DILocation(line: 160, column: 45, scope: !9261)
!9278 = !DILocation(line: 161, column: 44, scope: !9261)
!9279 = !DILocation(line: 163, column: 15, scope: !9261)
!9280 = !DILocation(line: 229, column: 14, scope: !9261)
!9281 = !DILocation(line: 246, column: 47, scope: !9261)
!9282 = !DILocation(line: 246, column: 2, scope: !9261)
!9283 = !DILocation(line: 248, column: 43, scope: !9261)
!9284 = !DILocation(line: 248, column: 2, scope: !9261)
!9285 = !DILocation(line: 250, column: 40, scope: !9261)
!9286 = !DILocation(line: 250, column: 2, scope: !9261)
!9287 = !DILocation(line: 252, column: 11, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9261, file: !1303, line: 252, column: 6)
!9289 = !DILocation(line: 252, column: 6, scope: !9261)
!9290 = !DILocation(line: 253, column: 11, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9292, file: !1303, line: 253, column: 7)
!9292 = distinct !DILexicalBlock(scope: !9288, file: !1303, line: 252, column: 36)
!9293 = !DILocation(line: 253, column: 7, scope: !9292)
!9294 = !DILocation(line: 254, column: 4, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9291, file: !1303, line: 253, column: 16)
!9296 = !DILocation(line: 255, column: 3, scope: !9295)
!9297 = !DILocation(line: 256, column: 4, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9291, file: !1303, line: 255, column: 10)
!9299 = !DILocation(line: 260, column: 40, scope: !9261)
!9300 = !DILocation(line: 260, column: 2, scope: !9261)
!9301 = !DILocation(line: 265, column: 1, scope: !9261)
!9302 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1303, file: !1303, line: 137, type: !9104, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9303)
!9303 = !{!9304, !9305}
!9304 = !DILocalVariable(name: "pin", arg: 1, scope: !9302, file: !1303, line: 137, type: !118)
!9305 = !DILocalVariable(name: "pinval", scope: !9302, file: !1303, line: 139, type: !156)
!9306 = !DILocation(line: 0, scope: !9302)
!9307 = !DILocation(line: 149, column: 13, scope: !9302)
!9308 = !DILocation(line: 151, column: 2, scope: !9302)
!9309 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9184, file: !9184, line: 342, type: !9310, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9312)
!9310 = !DISubroutineType(types: !9311)
!9311 = !{null, !1233, !156, !156}
!9312 = !{!9313, !9314, !9315}
!9313 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9309, file: !9184, line: 342, type: !1233)
!9314 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9309, file: !9184, line: 342, type: !156)
!9315 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9309, file: !9184, line: 342, type: !156)
!9316 = !DILocation(line: 0, scope: !9309)
!9317 = !DILocation(line: 344, column: 3, scope: !9309)
!9318 = !DILocation(line: 345, column: 1, scope: !9309)
!9319 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9184, file: !9184, line: 413, type: !9310, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9320)
!9320 = !{!9321, !9322, !9323}
!9321 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9319, file: !9184, line: 413, type: !1233)
!9322 = !DILocalVariable(name: "Pin", arg: 2, scope: !9319, file: !9184, line: 413, type: !156)
!9323 = !DILocalVariable(name: "Speed", arg: 3, scope: !9319, file: !9184, line: 413, type: !156)
!9324 = !DILocation(line: 0, scope: !9319)
!9325 = !DILocation(line: 415, column: 3, scope: !9319)
!9326 = !DILocation(line: 0, scope: !9124, inlinedAt: !9327)
!9327 = distinct !DILocation(line: 415, column: 3, scope: !9319)
!9328 = !DILocation(line: 380, column: 4, scope: !9124, inlinedAt: !9327)
!9329 = !DILocation(line: 0, scope: !9132, inlinedAt: !9330)
!9330 = distinct !DILocation(line: 415, column: 3, scope: !9319)
!9331 = !DILocation(line: 414, column: 7, scope: !9132, inlinedAt: !9330)
!9332 = !DILocation(line: 0, scope: !9124, inlinedAt: !9333)
!9333 = distinct !DILocation(line: 415, column: 3, scope: !9319)
!9334 = !DILocation(line: 0, scope: !9132, inlinedAt: !9335)
!9335 = distinct !DILocation(line: 415, column: 3, scope: !9319)
!9336 = !DILocation(line: 417, column: 1, scope: !9319)
!9337 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9184, file: !9184, line: 484, type: !9310, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9338)
!9338 = !{!9339, !9340, !9341}
!9339 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9337, file: !9184, line: 484, type: !1233)
!9340 = !DILocalVariable(name: "Pin", arg: 2, scope: !9337, file: !9184, line: 484, type: !156)
!9341 = !DILocalVariable(name: "Pull", arg: 3, scope: !9337, file: !9184, line: 484, type: !156)
!9342 = !DILocation(line: 0, scope: !9337)
!9343 = !DILocation(line: 486, column: 3, scope: !9337)
!9344 = !DILocation(line: 0, scope: !9124, inlinedAt: !9345)
!9345 = distinct !DILocation(line: 486, column: 3, scope: !9337)
!9346 = !DILocation(line: 380, column: 4, scope: !9124, inlinedAt: !9345)
!9347 = !DILocation(line: 0, scope: !9132, inlinedAt: !9348)
!9348 = distinct !DILocation(line: 486, column: 3, scope: !9337)
!9349 = !DILocation(line: 414, column: 7, scope: !9132, inlinedAt: !9348)
!9350 = !DILocation(line: 0, scope: !9124, inlinedAt: !9351)
!9351 = distinct !DILocation(line: 486, column: 3, scope: !9337)
!9352 = !DILocation(line: 0, scope: !9132, inlinedAt: !9353)
!9353 = distinct !DILocation(line: 486, column: 3, scope: !9337)
!9354 = !DILocation(line: 487, column: 1, scope: !9337)
!9355 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9184, file: !9184, line: 556, type: !9310, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9356)
!9356 = !{!9357, !9358, !9359}
!9357 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9355, file: !9184, line: 556, type: !1233)
!9358 = !DILocalVariable(name: "Pin", arg: 2, scope: !9355, file: !9184, line: 556, type: !156)
!9359 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9355, file: !9184, line: 556, type: !156)
!9360 = !DILocation(line: 0, scope: !9355)
!9361 = !DILocation(line: 558, column: 3, scope: !9355)
!9362 = !DILocation(line: 0, scope: !9124, inlinedAt: !9363)
!9363 = distinct !DILocation(line: 558, column: 3, scope: !9355)
!9364 = !DILocation(line: 380, column: 4, scope: !9124, inlinedAt: !9363)
!9365 = !DILocation(line: 0, scope: !9132, inlinedAt: !9366)
!9366 = distinct !DILocation(line: 558, column: 3, scope: !9355)
!9367 = !DILocation(line: 414, column: 7, scope: !9132, inlinedAt: !9366)
!9368 = !DILocation(line: 0, scope: !9124, inlinedAt: !9369)
!9369 = distinct !DILocation(line: 558, column: 3, scope: !9355)
!9370 = !DILocation(line: 0, scope: !9132, inlinedAt: !9371)
!9371 = distinct !DILocation(line: 558, column: 3, scope: !9355)
!9372 = !DILocation(line: 560, column: 1, scope: !9355)
!9373 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9184, file: !9184, line: 633, type: !9310, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9374)
!9374 = !{!9375, !9376, !9377}
!9375 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9373, file: !9184, line: 633, type: !1233)
!9376 = !DILocalVariable(name: "Pin", arg: 2, scope: !9373, file: !9184, line: 633, type: !156)
!9377 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9373, file: !9184, line: 633, type: !156)
!9378 = !DILocation(line: 0, scope: !9373)
!9379 = !DILocation(line: 635, column: 3, scope: !9373)
!9380 = !DILocation(line: 0, scope: !9124, inlinedAt: !9381)
!9381 = distinct !DILocation(line: 635, column: 3, scope: !9373)
!9382 = !DILocation(line: 380, column: 4, scope: !9124, inlinedAt: !9381)
!9383 = !DILocation(line: 0, scope: !9132, inlinedAt: !9384)
!9384 = distinct !DILocation(line: 635, column: 3, scope: !9373)
!9385 = !DILocation(line: 414, column: 7, scope: !9132, inlinedAt: !9384)
!9386 = !DILocation(line: 0, scope: !9124, inlinedAt: !9387)
!9387 = distinct !DILocation(line: 635, column: 3, scope: !9373)
!9388 = !DILocation(line: 0, scope: !9132, inlinedAt: !9389)
!9389 = distinct !DILocation(line: 635, column: 3, scope: !9373)
!9390 = !DILocation(line: 637, column: 1, scope: !9373)
!9391 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9184, file: !9184, line: 273, type: !9310, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9392)
!9392 = !{!9393, !9394, !9395}
!9393 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9391, file: !9184, line: 273, type: !1233)
!9394 = !DILocalVariable(name: "Pin", arg: 2, scope: !9391, file: !9184, line: 273, type: !156)
!9395 = !DILocalVariable(name: "Mode", arg: 3, scope: !9391, file: !9184, line: 273, type: !156)
!9396 = !DILocation(line: 0, scope: !9391)
!9397 = !DILocation(line: 275, column: 3, scope: !9391)
!9398 = !DILocation(line: 0, scope: !9124, inlinedAt: !9399)
!9399 = distinct !DILocation(line: 275, column: 3, scope: !9391)
!9400 = !DILocation(line: 380, column: 4, scope: !9124, inlinedAt: !9399)
!9401 = !DILocation(line: 0, scope: !9132, inlinedAt: !9402)
!9402 = distinct !DILocation(line: 275, column: 3, scope: !9391)
!9403 = !DILocation(line: 414, column: 7, scope: !9132, inlinedAt: !9402)
!9404 = !DILocation(line: 0, scope: !9124, inlinedAt: !9405)
!9405 = distinct !DILocation(line: 275, column: 3, scope: !9391)
!9406 = !DILocation(line: 0, scope: !9132, inlinedAt: !9407)
!9407 = distinct !DILocation(line: 275, column: 3, scope: !9391)
!9408 = !DILocation(line: 276, column: 1, scope: !9391)
!9409 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1303, file: !1303, line: 698, type: !1316, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9410)
!9410 = !{!9411, !9412, !9413}
!9411 = !DILocalVariable(name: "dev", arg: 1, scope: !9409, file: !1303, line: 698, type: !1166)
!9412 = !DILocalVariable(name: "data", scope: !9409, file: !1303, line: 700, type: !8836)
!9413 = !DILocalVariable(name: "ret", scope: !9409, file: !1303, line: 701, type: !118)
!9414 = !DILocation(line: 0, scope: !9409)
!9415 = !DILocation(line: 700, column: 38, scope: !9409)
!9416 = !DILocation(line: 703, column: 8, scope: !9409)
!9417 = !DILocation(line: 703, column: 12, scope: !9409)
!9418 = !DILocation(line: 705, column: 7, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9409, file: !1303, line: 705, column: 6)
!9420 = !DILocation(line: 705, column: 6, scope: !9409)
!9421 = !DILocation(line: 722, column: 8, scope: !9409)
!9422 = !DILocation(line: 723, column: 10, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9409, file: !1303, line: 723, column: 6)
!9424 = !DILocation(line: 723, column: 6, scope: !9409)
!9425 = !DILocation(line: 731, column: 1, scope: !9409)
!9426 = distinct !DISubprogram(name: "device_is_ready", scope: !3373, file: !3373, line: 47, type: !9427, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9429)
!9427 = !DISubroutineType(types: !9428)
!9428 = !{!146, !1166}
!9429 = !{!9430}
!9430 = !DILocalVariable(name: "dev", arg: 1, scope: !9426, file: !3373, line: 47, type: !1166)
!9431 = !DILocation(line: 0, scope: !9426)
!9432 = !DILocation(line: 55, column: 2, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9426, file: !3373, line: 55, column: 2)
!9434 = !{i64 2154952676}
!9435 = !DILocation(line: 56, column: 9, scope: !9426)
!9436 = !DILocation(line: 56, column: 2, scope: !9426)
!9437 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1303, file: !1303, line: 270, type: !9438, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9440)
!9438 = !DISubroutineType(types: !9439)
!9439 = !{!118, !1166, !146}
!9440 = !{!9441, !9442, !9443, !9444, !9445}
!9441 = !DILocalVariable(name: "dev", arg: 1, scope: !9437, file: !1303, line: 270, type: !1166)
!9442 = !DILocalVariable(name: "on", arg: 2, scope: !9437, file: !1303, line: 270, type: !146)
!9443 = !DILocalVariable(name: "cfg", scope: !9437, file: !1303, line: 272, type: !8769)
!9444 = !DILocalVariable(name: "ret", scope: !9437, file: !1303, line: 273, type: !118)
!9445 = !DILocalVariable(name: "clk", scope: !9437, file: !1303, line: 278, type: !9071)
!9446 = !DILocation(line: 0, scope: !9437)
!9447 = !DILocation(line: 272, column: 45, scope: !9437)
!9448 = !DILocation(line: 282, column: 38, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9450, file: !1303, line: 280, column: 10)
!9450 = distinct !DILexicalBlock(scope: !9437, file: !1303, line: 280, column: 6)
!9451 = !DILocation(line: 282, column: 6, scope: !9449)
!9452 = !DILocation(line: 281, column: 9, scope: !9449)
!9453 = !DILocation(line: 293, column: 1, scope: !9437)
!9454 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !130, file: !130, line: 730, type: !9427, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9455)
!9455 = !{!9456}
!9456 = !DILocalVariable(name: "dev", arg: 1, scope: !9454, file: !130, line: 730, type: !1166)
!9457 = !DILocation(line: 0, scope: !9454)
!9458 = !DILocation(line: 732, column: 9, scope: !9454)
!9459 = !DILocation(line: 732, column: 2, scope: !9454)
!9460 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1303, file: !1303, line: 496, type: !9461, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1148, retainedNodes: !9463)
!9461 = !DISubroutineType(types: !9462)
!9462 = !{!118, !1166, !118, !118, !118}
!9463 = !{!9464, !9465, !9466, !9467, !9468, !9469}
!9464 = !DILocalVariable(name: "dev", arg: 1, scope: !9460, file: !1303, line: 496, type: !1166)
!9465 = !DILocalVariable(name: "pin", arg: 2, scope: !9460, file: !1303, line: 496, type: !118)
!9466 = !DILocalVariable(name: "conf", arg: 3, scope: !9460, file: !1303, line: 496, type: !118)
!9467 = !DILocalVariable(name: "func", arg: 4, scope: !9460, file: !1303, line: 496, type: !118)
!9468 = !DILocalVariable(name: "ret", scope: !9460, file: !1303, line: 498, type: !118)
!9469 = !DILocalVariable(name: "gpio_out", scope: !9470, file: !1303, line: 508, type: !156)
!9470 = distinct !DILexicalBlock(scope: !9471, file: !1303, line: 507, column: 27)
!9471 = distinct !DILexicalBlock(scope: !9460, file: !1303, line: 507, column: 6)
!9472 = !DILocation(line: 0, scope: !9460)
!9473 = !DILocation(line: 505, column: 2, scope: !9460)
!9474 = !DILocation(line: 507, column: 11, scope: !9471)
!9475 = !DILocation(line: 507, column: 6, scope: !9460)
!9476 = !DILocation(line: 508, column: 28, scope: !9470)
!9477 = !DILocation(line: 0, scope: !9470)
!9478 = !DILocation(line: 510, column: 16, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9470, file: !1303, line: 510, column: 7)
!9480 = !DILocation(line: 0, scope: !9479)
!9481 = !DILocation(line: 510, column: 7, scope: !9470)
!9482 = !DILocation(line: 511, column: 4, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9479, file: !1303, line: 510, column: 32)
!9484 = !DILocation(line: 512, column: 3, scope: !9483)
!9485 = !DILocation(line: 513, column: 4, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9487, file: !1303, line: 512, column: 39)
!9487 = distinct !DILexicalBlock(scope: !9479, file: !1303, line: 512, column: 14)
!9488 = !DILocation(line: 514, column: 3, scope: !9486)
!9489 = !DILocation(line: 518, column: 1, scope: !9460)
!9490 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1579, file: !1579, line: 526, type: !1482, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9491)
!9491 = !{!9492, !9493, !9494}
!9492 = !DILocalVariable(name: "dev", arg: 1, scope: !9490, file: !1579, line: 526, type: !1484)
!9493 = !DILocalVariable(name: "c", arg: 2, scope: !9490, file: !1579, line: 526, type: !1109)
!9494 = !DILocalVariable(name: "config", scope: !9490, file: !1579, line: 528, type: !9495)
!9495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 32)
!9496 = !DILocation(line: 0, scope: !9490)
!9497 = !DILocation(line: 528, column: 48, scope: !9490)
!9498 = !DILocation(line: 531, column: 40, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9490, file: !1579, line: 531, column: 6)
!9500 = !DILocation(line: 531, column: 6, scope: !9499)
!9501 = !DILocation(line: 531, column: 6, scope: !9490)
!9502 = !DILocation(line: 532, column: 34, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9499, file: !1579, line: 531, column: 48)
!9504 = !DILocation(line: 532, column: 3, scope: !9503)
!9505 = !DILocation(line: 533, column: 2, scope: !9503)
!9506 = !DILocation(line: 539, column: 42, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9490, file: !1579, line: 539, column: 6)
!9508 = !DILocation(line: 539, column: 7, scope: !9507)
!9509 = !DILocation(line: 539, column: 6, scope: !9490)
!9510 = !DILocation(line: 543, column: 52, scope: !9490)
!9511 = !DILocation(line: 543, column: 22, scope: !9490)
!9512 = !DILocation(line: 543, column: 5, scope: !9490)
!9513 = !DILocation(line: 545, column: 2, scope: !9490)
!9514 = !DILocation(line: 546, column: 1, scope: !9490)
!9515 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1579, file: !1579, line: 548, type: !1501, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9516)
!9516 = !{!9517, !9518, !9519, !9520}
!9517 = !DILocalVariable(name: "dev", arg: 1, scope: !9515, file: !1579, line: 548, type: !1484)
!9518 = !DILocalVariable(name: "c", arg: 2, scope: !9515, file: !1579, line: 549, type: !144)
!9519 = !DILocalVariable(name: "config", scope: !9515, file: !1579, line: 551, type: !9495)
!9520 = !DILocalVariable(name: "key", scope: !9515, file: !1579, line: 555, type: !32)
!9521 = !DILocation(line: 0, scope: !9515)
!9522 = !DILocation(line: 551, column: 48, scope: !9515)
!9523 = !DILocation(line: 562, column: 2, scope: !9515)
!9524 = !DILocation(line: 563, column: 41, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9526, file: !1579, line: 563, column: 7)
!9526 = distinct !DILexicalBlock(scope: !9515, file: !1579, line: 562, column: 12)
!9527 = !DILocation(line: 563, column: 7, scope: !9525)
!9528 = !DILocation(line: 563, column: 7, scope: !9526)
!9529 = !DILocation(line: 55, column: 2, scope: !9530, inlinedAt: !9534)
!9530 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6172, file: !6172, line: 42, type: !6173, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9531)
!9531 = !{!9532, !9533}
!9532 = !DILocalVariable(name: "key", scope: !9530, file: !6172, line: 44, type: !32)
!9533 = !DILocalVariable(name: "tmp", scope: !9530, file: !6172, line: 53, type: !32)
!9534 = distinct !DILocation(line: 564, column: 10, scope: !9535)
!9535 = distinct !DILexicalBlock(scope: !9525, file: !1579, line: 563, column: 49)
!9536 = !{i64 2290626}
!9537 = !DILocation(line: 0, scope: !9530, inlinedAt: !9534)
!9538 = !DILocation(line: 565, column: 42, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9535, file: !1579, line: 565, column: 8)
!9540 = !DILocation(line: 565, column: 8, scope: !9539)
!9541 = !DILocation(line: 565, column: 8, scope: !9535)
!9542 = !DILocalVariable(name: "key", arg: 1, scope: !9543, file: !6172, line: 84, type: !32)
!9543 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6172, file: !6172, line: 84, type: !6183, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9544)
!9544 = !{!9542}
!9545 = !DILocation(line: 0, scope: !9543, inlinedAt: !9546)
!9546 = distinct !DILocation(line: 568, column: 4, scope: !9535)
!9547 = !DILocation(line: 95, column: 2, scope: !9543, inlinedAt: !9546)
!9548 = !{i64 2291443}
!9549 = !DILocation(line: 569, column: 3, scope: !9535)
!9550 = distinct !{!9550, !9523, !9551}
!9551 = !DILocation(line: 570, column: 2, scope: !9515)
!9552 = !DILocation(line: 592, column: 33, scope: !9515)
!9553 = !DILocation(line: 592, column: 2, scope: !9515)
!9554 = !DILocation(line: 0, scope: !9543, inlinedAt: !9555)
!9555 = distinct !DILocation(line: 593, column: 2, scope: !9515)
!9556 = !DILocation(line: 95, column: 2, scope: !9543, inlinedAt: !9555)
!9557 = !DILocation(line: 594, column: 1, scope: !9515)
!9558 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1579, file: !1579, line: 596, type: !1505, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9559)
!9559 = !{!9560, !9561, !9562}
!9560 = !DILocalVariable(name: "dev", arg: 1, scope: !9558, file: !1579, line: 596, type: !1484)
!9561 = !DILocalVariable(name: "config", scope: !9558, file: !1579, line: 598, type: !9495)
!9562 = !DILocalVariable(name: "err", scope: !9558, file: !1579, line: 599, type: !156)
!9563 = !DILocation(line: 0, scope: !9558)
!9564 = !DILocation(line: 598, column: 48, scope: !9558)
!9565 = !DILocation(line: 606, column: 40, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9558, file: !1579, line: 606, column: 6)
!9567 = !DILocation(line: 606, column: 6, scope: !9566)
!9568 = !DILocation(line: 606, column: 6, scope: !9558)
!9569 = !DILocation(line: 610, column: 39, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9558, file: !1579, line: 610, column: 6)
!9571 = !DILocation(line: 610, column: 6, scope: !9570)
!9572 = !DILocation(line: 610, column: 6, scope: !9558)
!9573 = !DILocation(line: 614, column: 39, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9558, file: !1579, line: 614, column: 6)
!9575 = !DILocation(line: 614, column: 6, scope: !9574)
!9576 = !DILocation(line: 614, column: 6, scope: !9558)
!9577 = !DILocation(line: 619, column: 40, scope: !9578)
!9578 = distinct !DILexicalBlock(scope: !9558, file: !1579, line: 619, column: 6)
!9579 = !DILocation(line: 619, column: 6, scope: !9578)
!9580 = !DILocation(line: 619, column: 6, scope: !9558)
!9581 = !DILocation(line: 623, column: 10, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9558, file: !1579, line: 623, column: 6)
!9583 = !DILocation(line: 623, column: 6, scope: !9558)
!9584 = !DILocation(line: 624, column: 34, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9582, file: !1579, line: 623, column: 24)
!9586 = !DILocation(line: 624, column: 3, scope: !9585)
!9587 = !DILocation(line: 625, column: 2, scope: !9585)
!9588 = !DILocation(line: 632, column: 10, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9558, file: !1579, line: 632, column: 6)
!9590 = !DILocation(line: 632, column: 6, scope: !9558)
!9591 = !DILocation(line: 633, column: 34, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9589, file: !1579, line: 632, column: 32)
!9593 = !DILocation(line: 633, column: 3, scope: !9592)
!9594 = !DILocation(line: 634, column: 2, scope: !9592)
!9595 = !DILocation(line: 636, column: 10, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9558, file: !1579, line: 636, column: 6)
!9597 = !DILocation(line: 636, column: 6, scope: !9558)
!9598 = !DILocation(line: 637, column: 33, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9596, file: !1579, line: 636, column: 31)
!9600 = !DILocation(line: 637, column: 3, scope: !9599)
!9601 = !DILocation(line: 638, column: 2, scope: !9599)
!9602 = !DILocation(line: 640, column: 10, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9558, file: !1579, line: 640, column: 6)
!9604 = !DILocation(line: 640, column: 6, scope: !9558)
!9605 = !DILocation(line: 641, column: 33, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9603, file: !1579, line: 640, column: 32)
!9607 = !DILocation(line: 641, column: 3, scope: !9606)
!9608 = !DILocation(line: 642, column: 2, scope: !9606)
!9609 = !DILocation(line: 646, column: 32, scope: !9558)
!9610 = !DILocation(line: 646, column: 2, scope: !9558)
!9611 = !DILocation(line: 648, column: 2, scope: !9558)
!9612 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1579, file: !1579, line: 419, type: !1509, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9613)
!9613 = !{!9614, !9615, !9616, !9617, !9619, !9620, !9621, !9622}
!9614 = !DILocalVariable(name: "dev", arg: 1, scope: !9612, file: !1579, line: 419, type: !1484)
!9615 = !DILocalVariable(name: "cfg", arg: 2, scope: !9612, file: !1579, line: 420, type: !1511)
!9616 = !DILocalVariable(name: "config", scope: !9612, file: !1579, line: 422, type: !9495)
!9617 = !DILocalVariable(name: "data", scope: !9612, file: !1579, line: 423, type: !9618)
!9618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 32)
!9619 = !DILocalVariable(name: "parity", scope: !9612, file: !1579, line: 424, type: !6622)
!9620 = !DILocalVariable(name: "stopbits", scope: !9612, file: !1579, line: 425, type: !6622)
!9621 = !DILocalVariable(name: "databits", scope: !9612, file: !1579, line: 426, type: !6622)
!9622 = !DILocalVariable(name: "flowctrl", scope: !9612, file: !1579, line: 428, type: !6622)
!9623 = !DILocation(line: 0, scope: !9612)
!9624 = !DILocation(line: 422, column: 48, scope: !9612)
!9625 = !DILocation(line: 423, column: 38, scope: !9612)
!9626 = !DILocation(line: 424, column: 56, scope: !9612)
!9627 = !DILocation(line: 424, column: 51, scope: !9612)
!9628 = !DILocation(line: 424, column: 26, scope: !9612)
!9629 = !DILocation(line: 425, column: 60, scope: !9612)
!9630 = !DILocation(line: 425, column: 55, scope: !9612)
!9631 = !DILocation(line: 425, column: 28, scope: !9612)
!9632 = !DILocation(line: 426, column: 60, scope: !9612)
!9633 = !DILocation(line: 426, column: 55, scope: !9612)
!9634 = !DILocation(line: 426, column: 28, scope: !9612)
!9635 = !DILocation(line: 428, column: 58, scope: !9612)
!9636 = !DILocation(line: 428, column: 53, scope: !9612)
!9637 = !DILocation(line: 428, column: 28, scope: !9612)
!9638 = !DILocation(line: 431, column: 44, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9612, file: !1579, line: 431, column: 6)
!9640 = !DILocation(line: 438, column: 22, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9612, file: !1579, line: 437, column: 6)
!9642 = !DILocation(line: 437, column: 6, scope: !9612)
!9643 = !DILocation(line: 448, column: 6, scope: !9612)
!9644 = !DILocation(line: 465, column: 47, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9612, file: !1579, line: 465, column: 6)
!9646 = !DILocation(line: 475, column: 21, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9612, file: !1579, line: 475, column: 6)
!9648 = !DILocation(line: 475, column: 6, scope: !9612)
!9649 = !DILocation(line: 476, column: 8, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9651, file: !1579, line: 476, column: 7)
!9651 = distinct !DILexicalBlock(scope: !9647, file: !1579, line: 475, column: 49)
!9652 = !DILocation(line: 477, column: 34, scope: !9650)
!9653 = !DILocation(line: 476, column: 7, scope: !9651)
!9654 = !DILocation(line: 482, column: 27, scope: !9612)
!9655 = !DILocation(line: 482, column: 2, scope: !9612)
!9656 = !DILocation(line: 484, column: 16, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9612, file: !1579, line: 484, column: 6)
!9658 = !DILocation(line: 484, column: 13, scope: !9657)
!9659 = !DILocation(line: 484, column: 6, scope: !9612)
!9660 = !DILocation(line: 485, column: 3, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9657, file: !1579, line: 484, column: 44)
!9662 = !DILocation(line: 486, column: 2, scope: !9661)
!9663 = !DILocation(line: 488, column: 18, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9612, file: !1579, line: 488, column: 6)
!9665 = !DILocation(line: 488, column: 15, scope: !9664)
!9666 = !DILocation(line: 488, column: 6, scope: !9612)
!9667 = !DILocation(line: 489, column: 3, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9664, file: !1579, line: 488, column: 48)
!9669 = !DILocation(line: 490, column: 2, scope: !9668)
!9670 = !DILocation(line: 492, column: 18, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9612, file: !1579, line: 492, column: 6)
!9672 = !DILocation(line: 492, column: 15, scope: !9671)
!9673 = !DILocation(line: 492, column: 6, scope: !9612)
!9674 = !DILocation(line: 493, column: 3, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9671, file: !1579, line: 492, column: 48)
!9676 = !DILocation(line: 494, column: 2, scope: !9675)
!9677 = !DILocation(line: 496, column: 18, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9612, file: !1579, line: 496, column: 6)
!9679 = !DILocation(line: 496, column: 15, scope: !9678)
!9680 = !DILocation(line: 496, column: 6, scope: !9612)
!9681 = !DILocation(line: 497, column: 3, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9678, file: !1579, line: 496, column: 46)
!9683 = !DILocation(line: 498, column: 2, scope: !9682)
!9684 = !DILocation(line: 500, column: 11, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9612, file: !1579, line: 500, column: 6)
!9686 = !DILocation(line: 500, column: 29, scope: !9685)
!9687 = !DILocation(line: 500, column: 20, scope: !9685)
!9688 = !DILocation(line: 500, column: 6, scope: !9612)
!9689 = !DILocation(line: 501, column: 3, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9685, file: !1579, line: 500, column: 40)
!9691 = !DILocation(line: 502, column: 26, scope: !9690)
!9692 = !DILocation(line: 502, column: 19, scope: !9690)
!9693 = !DILocation(line: 503, column: 2, scope: !9690)
!9694 = !DILocation(line: 505, column: 26, scope: !9612)
!9695 = !DILocation(line: 505, column: 2, scope: !9612)
!9696 = !DILocation(line: 506, column: 2, scope: !9612)
!9697 = !DILocation(line: 507, column: 1, scope: !9612)
!9698 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1579, file: !1579, line: 509, type: !1522, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9699)
!9699 = !{!9700, !9701, !9702}
!9700 = !DILocalVariable(name: "dev", arg: 1, scope: !9698, file: !1579, line: 509, type: !1484)
!9701 = !DILocalVariable(name: "cfg", arg: 2, scope: !9698, file: !1579, line: 510, type: !1524)
!9702 = !DILocalVariable(name: "data", scope: !9698, file: !1579, line: 512, type: !9618)
!9703 = !DILocation(line: 0, scope: !9698)
!9704 = !DILocation(line: 512, column: 38, scope: !9698)
!9705 = !DILocation(line: 514, column: 24, scope: !9698)
!9706 = !DILocation(line: 514, column: 7, scope: !9698)
!9707 = !DILocation(line: 514, column: 16, scope: !9698)
!9708 = !DILocation(line: 515, column: 41, scope: !9698)
!9709 = !{i32 0, i32 1537}
!9710 = !DILocation(line: 515, column: 16, scope: !9698)
!9711 = !DILocation(line: 515, column: 7, scope: !9698)
!9712 = !DILocation(line: 515, column: 14, scope: !9698)
!9713 = !DILocation(line: 517, column: 3, scope: !9698)
!9714 = !{i32 0, i32 12289}
!9715 = !DILocation(line: 516, column: 19, scope: !9698)
!9716 = !DILocation(line: 516, column: 7, scope: !9698)
!9717 = !DILocation(line: 516, column: 17, scope: !9698)
!9718 = !DILocation(line: 519, column: 3, scope: !9698)
!9719 = !DILocation(line: 519, column: 33, scope: !9698)
!9720 = !DILocation(line: 518, column: 19, scope: !9698)
!9721 = !DILocation(line: 518, column: 7, scope: !9698)
!9722 = !DILocation(line: 518, column: 17, scope: !9698)
!9723 = !DILocation(line: 521, column: 3, scope: !9698)
!9724 = !{i32 0, i32 769}
!9725 = !DILocation(line: 520, column: 19, scope: !9698)
!9726 = !DILocation(line: 520, column: 7, scope: !9698)
!9727 = !DILocation(line: 520, column: 17, scope: !9698)
!9728 = !DILocation(line: 522, column: 2, scope: !9698)
!9729 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1579, file: !1579, line: 205, type: !9730, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9732)
!9730 = !DISubroutineType(types: !9731)
!9731 = !{!156, !1484}
!9732 = !{!9733, !9734}
!9733 = !DILocalVariable(name: "dev", arg: 1, scope: !9729, file: !1579, line: 205, type: !1484)
!9734 = !DILocalVariable(name: "config", scope: !9729, file: !1579, line: 207, type: !9495)
!9735 = !DILocation(line: 0, scope: !9729)
!9736 = !DILocation(line: 207, column: 48, scope: !9729)
!9737 = !DILocation(line: 209, column: 36, scope: !9729)
!9738 = !DILocation(line: 209, column: 9, scope: !9729)
!9739 = !DILocation(line: 209, column: 2, scope: !9729)
!9740 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1579, file: !1579, line: 270, type: !9741, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9743)
!9741 = !DISubroutineType(types: !9742)
!9742 = !{!1450, !156}
!9743 = !{!9744}
!9744 = !DILocalVariable(name: "parity", arg: 1, scope: !9740, file: !1579, line: 270, type: !156)
!9745 = !DILocation(line: 0, scope: !9740)
!9746 = !DILocation(line: 272, column: 2, scope: !9740)
!9747 = !DILocation(line: 281, column: 1, scope: !9740)
!9748 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1579, file: !1579, line: 220, type: !9730, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9749)
!9749 = !{!9750, !9751}
!9750 = !DILocalVariable(name: "dev", arg: 1, scope: !9748, file: !1579, line: 220, type: !1484)
!9751 = !DILocalVariable(name: "config", scope: !9748, file: !1579, line: 222, type: !9495)
!9752 = !DILocation(line: 0, scope: !9748)
!9753 = !DILocation(line: 222, column: 48, scope: !9748)
!9754 = !DILocation(line: 224, column: 44, scope: !9748)
!9755 = !DILocation(line: 224, column: 9, scope: !9748)
!9756 = !DILocation(line: 224, column: 2, scope: !9748)
!9757 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1579, file: !1579, line: 304, type: !9758, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9760)
!9758 = !DISubroutineType(types: !9759)
!9759 = !{!1464, !156}
!9760 = !{!9761}
!9761 = !DILocalVariable(name: "sb", arg: 1, scope: !9757, file: !1579, line: 304, type: !156)
!9762 = !DILocation(line: 0, scope: !9757)
!9763 = !DILocation(line: 306, column: 2, scope: !9757)
!9764 = !DILocation(line: 0, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9757, file: !1579, line: 306, column: 14)
!9766 = !DILocation(line: 323, column: 1, scope: !9757)
!9767 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1579, file: !1579, line: 235, type: !9730, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9768)
!9768 = !{!9769, !9770}
!9769 = !DILocalVariable(name: "dev", arg: 1, scope: !9767, file: !1579, line: 235, type: !1484)
!9770 = !DILocalVariable(name: "config", scope: !9767, file: !1579, line: 237, type: !9495)
!9771 = !DILocation(line: 0, scope: !9767)
!9772 = !DILocation(line: 237, column: 48, scope: !9767)
!9773 = !DILocation(line: 239, column: 39, scope: !9767)
!9774 = !DILocation(line: 239, column: 9, scope: !9767)
!9775 = !DILocation(line: 239, column: 2, scope: !9767)
!9776 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1579, file: !1579, line: 355, type: !9777, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9779)
!9777 = !DISubroutineType(types: !9778)
!9778 = !{!1457, !156, !156}
!9779 = !{!9780, !9781}
!9780 = !DILocalVariable(name: "db", arg: 1, scope: !9776, file: !1579, line: 355, type: !156)
!9781 = !DILocalVariable(name: "p", arg: 2, scope: !9776, file: !1579, line: 356, type: !156)
!9782 = !DILocation(line: 0, scope: !9776)
!9783 = !DILocation(line: 358, column: 2, scope: !9776)
!9784 = !DILocation(line: 384, column: 1, scope: !9776)
!9785 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1579, file: !1579, line: 250, type: !9730, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9786)
!9786 = !{!9787, !9788}
!9787 = !DILocalVariable(name: "dev", arg: 1, scope: !9785, file: !1579, line: 250, type: !1484)
!9788 = !DILocalVariable(name: "config", scope: !9785, file: !1579, line: 252, type: !9495)
!9789 = !DILocation(line: 0, scope: !9785)
!9790 = !DILocation(line: 252, column: 48, scope: !9785)
!9791 = !DILocation(line: 254, column: 40, scope: !9785)
!9792 = !DILocation(line: 254, column: 9, scope: !9785)
!9793 = !DILocation(line: 254, column: 2, scope: !9785)
!9794 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1579, file: !1579, line: 409, type: !9795, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9797)
!9795 = !DISubroutineType(types: !9796)
!9796 = !{!1470, !156}
!9797 = !{!9798}
!9798 = !DILocalVariable(name: "fc", arg: 1, scope: !9794, file: !1579, line: 409, type: !156)
!9799 = !DILocation(line: 0, scope: !9794)
!9800 = !DILocation(line: 411, column: 9, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9794, file: !1579, line: 411, column: 6)
!9802 = !DILocation(line: 416, column: 1, scope: !9794)
!9803 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9804, file: !9804, line: 967, type: !9805, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9807)
!9804 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9805 = !DISubroutineType(types: !9806)
!9806 = !{!156, !1525}
!9807 = !{!9808}
!9808 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9803, file: !9804, line: 967, type: !1525)
!9809 = !DILocation(line: 0, scope: !9803)
!9810 = !DILocation(line: 969, column: 21, scope: !9803)
!9811 = !DILocation(line: 969, column: 3, scope: !9803)
!9812 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9804, file: !9804, line: 601, type: !9805, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9813)
!9813 = !{!9814}
!9814 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9812, file: !9804, line: 601, type: !1525)
!9815 = !DILocation(line: 0, scope: !9812)
!9816 = !DILocation(line: 603, column: 21, scope: !9812)
!9817 = !DILocation(line: 603, column: 3, scope: !9812)
!9818 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9804, file: !9804, line: 820, type: !9805, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9819)
!9819 = !{!9820}
!9820 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9818, file: !9804, line: 820, type: !1525)
!9821 = !DILocation(line: 0, scope: !9818)
!9822 = !DILocation(line: 822, column: 21, scope: !9818)
!9823 = !DILocation(line: 822, column: 3, scope: !9818)
!9824 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9804, file: !9804, line: 547, type: !9805, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9825)
!9825 = !{!9826}
!9826 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9824, file: !9804, line: 547, type: !1525)
!9827 = !DILocation(line: 0, scope: !9824)
!9828 = !DILocation(line: 549, column: 21, scope: !9824)
!9829 = !DILocation(line: 549, column: 3, scope: !9824)
!9830 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1579, file: !1579, line: 257, type: !9831, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9833)
!9831 = !DISubroutineType(types: !9832)
!9832 = !{!156, !1450}
!9833 = !{!9834}
!9834 = !DILocalVariable(name: "parity", arg: 1, scope: !9830, file: !1579, line: 257, type: !1450)
!9835 = !DILocation(line: 0, scope: !9830)
!9836 = !DILocation(line: 259, column: 2, scope: !9830)
!9837 = !DILocation(line: 268, column: 1, scope: !9830)
!9838 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1579, file: !1579, line: 283, type: !9839, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9841)
!9839 = !DISubroutineType(types: !9840)
!9840 = !{!156, !1464}
!9841 = !{!9842}
!9842 = !DILocalVariable(name: "sb", arg: 1, scope: !9838, file: !1579, line: 283, type: !1464)
!9843 = !DILocation(line: 0, scope: !9838)
!9844 = !DILocation(line: 285, column: 2, scope: !9838)
!9845 = !DILocation(line: 0, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9838, file: !1579, line: 285, column: 14)
!9847 = !DILocation(line: 302, column: 1, scope: !9838)
!9848 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1579, file: !1579, line: 325, type: !9849, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9851)
!9849 = !DISubroutineType(types: !9850)
!9850 = !{!156, !1457, !1450}
!9851 = !{!9852, !9853}
!9852 = !DILocalVariable(name: "db", arg: 1, scope: !9848, file: !1579, line: 325, type: !1457)
!9853 = !DILocalVariable(name: "p", arg: 2, scope: !9848, file: !1579, line: 326, type: !1450)
!9854 = !DILocation(line: 0, scope: !9848)
!9855 = !DILocation(line: 328, column: 2, scope: !9848)
!9856 = !DILocation(line: 353, column: 1, scope: !9848)
!9857 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1579, file: !1579, line: 393, type: !9858, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9860)
!9858 = !DISubroutineType(types: !9859)
!9859 = !{!156, !1470}
!9860 = !{!9861}
!9861 = !DILocalVariable(name: "fc", arg: 1, scope: !9857, file: !1579, line: 393, type: !1470)
!9862 = !DILocation(line: 0, scope: !9857)
!9863 = !DILocation(line: 395, column: 9, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9857, file: !1579, line: 395, column: 6)
!9865 = !DILocation(line: 400, column: 1, scope: !9857)
!9866 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9804, file: !9804, line: 424, type: !9867, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9869)
!9867 = !DISubroutineType(types: !9868)
!9868 = !{null, !1525}
!9869 = !{!9870}
!9870 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9866, file: !9804, line: 424, type: !1525)
!9871 = !DILocation(line: 0, scope: !9866)
!9872 = !DILocation(line: 426, column: 3, scope: !9866)
!9873 = !DILocation(line: 427, column: 1, scope: !9866)
!9874 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1579, file: !1579, line: 197, type: !9875, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9877)
!9875 = !DISubroutineType(types: !9876)
!9876 = !{null, !1484, !156}
!9877 = !{!9878, !9879, !9880}
!9878 = !DILocalVariable(name: "dev", arg: 1, scope: !9874, file: !1579, line: 197, type: !1484)
!9879 = !DILocalVariable(name: "parity", arg: 2, scope: !9874, file: !1579, line: 198, type: !156)
!9880 = !DILocalVariable(name: "config", scope: !9874, file: !1579, line: 200, type: !9495)
!9881 = !DILocation(line: 0, scope: !9874)
!9882 = !DILocation(line: 200, column: 48, scope: !9874)
!9883 = !DILocation(line: 202, column: 29, scope: !9874)
!9884 = !DILocation(line: 202, column: 2, scope: !9874)
!9885 = !DILocation(line: 203, column: 1, scope: !9874)
!9886 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1579, file: !1579, line: 212, type: !9875, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9887)
!9887 = !{!9888, !9889, !9890}
!9888 = !DILocalVariable(name: "dev", arg: 1, scope: !9886, file: !1579, line: 212, type: !1484)
!9889 = !DILocalVariable(name: "stopbits", arg: 2, scope: !9886, file: !1579, line: 213, type: !156)
!9890 = !DILocalVariable(name: "config", scope: !9886, file: !1579, line: 215, type: !9495)
!9891 = !DILocation(line: 0, scope: !9886)
!9892 = !DILocation(line: 215, column: 48, scope: !9886)
!9893 = !DILocation(line: 217, column: 37, scope: !9886)
!9894 = !DILocation(line: 217, column: 2, scope: !9886)
!9895 = !DILocation(line: 218, column: 1, scope: !9886)
!9896 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1579, file: !1579, line: 227, type: !9875, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9897)
!9897 = !{!9898, !9899, !9900}
!9898 = !DILocalVariable(name: "dev", arg: 1, scope: !9896, file: !1579, line: 227, type: !1484)
!9899 = !DILocalVariable(name: "databits", arg: 2, scope: !9896, file: !1579, line: 228, type: !156)
!9900 = !DILocalVariable(name: "config", scope: !9896, file: !1579, line: 230, type: !9495)
!9901 = !DILocation(line: 0, scope: !9896)
!9902 = !DILocation(line: 230, column: 48, scope: !9896)
!9903 = !DILocation(line: 232, column: 32, scope: !9896)
!9904 = !DILocation(line: 232, column: 2, scope: !9896)
!9905 = !DILocation(line: 233, column: 1, scope: !9896)
!9906 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1579, file: !1579, line: 242, type: !9875, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9907)
!9907 = !{!9908, !9909, !9910}
!9908 = !DILocalVariable(name: "dev", arg: 1, scope: !9906, file: !1579, line: 242, type: !1484)
!9909 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !9906, file: !1579, line: 243, type: !156)
!9910 = !DILocalVariable(name: "config", scope: !9906, file: !1579, line: 245, type: !9495)
!9911 = !DILocation(line: 0, scope: !9906)
!9912 = !DILocation(line: 245, column: 48, scope: !9906)
!9913 = !DILocation(line: 247, column: 33, scope: !9906)
!9914 = !DILocation(line: 247, column: 2, scope: !9906)
!9915 = !DILocation(line: 248, column: 1, scope: !9906)
!9916 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1579, file: !1579, line: 107, type: !9875, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9917)
!9917 = !{!9918, !9919, !9920, !9921, !9922}
!9918 = !DILocalVariable(name: "dev", arg: 1, scope: !9916, file: !1579, line: 107, type: !1484)
!9919 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !9916, file: !1579, line: 107, type: !156)
!9920 = !DILocalVariable(name: "config", scope: !9916, file: !1579, line: 109, type: !9495)
!9921 = !DILocalVariable(name: "data", scope: !9916, file: !1579, line: 110, type: !9618)
!9922 = !DILocalVariable(name: "clock_rate", scope: !9916, file: !1579, line: 112, type: !156)
!9923 = !DILocation(line: 0, scope: !9916)
!9924 = !DILocation(line: 109, column: 48, scope: !9916)
!9925 = !DILocation(line: 110, column: 38, scope: !9916)
!9926 = !DILocation(line: 112, column: 2, scope: !9916)
!9927 = !DILocation(line: 123, column: 36, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9929, file: !1579, line: 123, column: 7)
!9929 = distinct !DILexicalBlock(scope: !9930, file: !1579, line: 122, column: 9)
!9930 = distinct !DILexicalBlock(scope: !9916, file: !1579, line: 115, column: 6)
!9931 = !DILocation(line: 124, column: 42, scope: !9928)
!9932 = !DILocation(line: 123, column: 7, scope: !9928)
!9933 = !DILocation(line: 125, column: 22, scope: !9928)
!9934 = !DILocation(line: 123, column: 7, scope: !9929)
!9935 = !DILocation(line: 176, column: 36, scope: !9916)
!9936 = !DILocation(line: 176, column: 3, scope: !9916)
!9937 = !DILocation(line: 179, column: 32, scope: !9916)
!9938 = !DILocation(line: 180, column: 10, scope: !9916)
!9939 = !DILocation(line: 179, column: 3, scope: !9916)
!9940 = !DILocation(line: 189, column: 3, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9942, file: !1579, line: 189, column: 3)
!9942 = distinct !DILexicalBlock(scope: !9916, file: !1579, line: 189, column: 3)
!9943 = !DILocation(line: 189, column: 3, scope: !9942)
!9944 = !DILocation(line: 189, column: 3, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9941, file: !1579, line: 189, column: 3)
!9946 = !DILocation(line: 195, column: 1, scope: !9916)
!9947 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9804, file: !9804, line: 410, type: !9867, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9948)
!9948 = !{!9949}
!9949 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9947, file: !9804, line: 410, type: !1525)
!9950 = !DILocation(line: 0, scope: !9947)
!9951 = !DILocation(line: 412, column: 3, scope: !9947)
!9952 = !DILocation(line: 413, column: 1, scope: !9947)
!9953 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !955, file: !955, line: 216, type: !1558, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9954)
!9954 = !{!9955, !9956, !9957, !9958}
!9955 = !DILocalVariable(name: "dev", arg: 1, scope: !9953, file: !955, line: 216, type: !1484)
!9956 = !DILocalVariable(name: "sys", arg: 2, scope: !9953, file: !955, line: 217, type: !1048)
!9957 = !DILocalVariable(name: "rate", arg: 3, scope: !9953, file: !955, line: 218, type: !1004)
!9958 = !DILocalVariable(name: "api", scope: !9953, file: !955, line: 220, type: !1536)
!9959 = !DILocation(line: 0, scope: !9953)
!9960 = !DILocation(line: 221, column: 49, scope: !9953)
!9961 = !DILocation(line: 223, column: 11, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9953, file: !955, line: 223, column: 6)
!9963 = !DILocation(line: 223, column: 20, scope: !9962)
!9964 = !DILocation(line: 223, column: 6, scope: !9953)
!9965 = !DILocation(line: 227, column: 9, scope: !9953)
!9966 = !DILocation(line: 227, column: 2, scope: !9953)
!9967 = !DILocation(line: 228, column: 1, scope: !9953)
!9968 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9804, file: !9804, line: 615, type: !9969, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9971)
!9969 = !DISubroutineType(types: !9970)
!9970 = !{null, !1525, !156}
!9971 = !{!9972, !9973}
!9972 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9968, file: !9804, line: 615, type: !1525)
!9973 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !9968, file: !9804, line: 615, type: !156)
!9974 = !DILocation(line: 0, scope: !9968)
!9975 = !DILocation(line: 617, column: 3, scope: !9968)
!9976 = !DILocation(line: 618, column: 1, scope: !9968)
!9977 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9804, file: !9804, line: 1020, type: !9978, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9980)
!9978 = !DISubroutineType(types: !9979)
!9979 = !{null, !1525, !156, !156, !156}
!9980 = !{!9981, !9982, !9983, !9984}
!9981 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9977, file: !9804, line: 1020, type: !1525)
!9982 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !9977, file: !9804, line: 1020, type: !156)
!9983 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !9977, file: !9804, line: 1020, type: !156)
!9984 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !9977, file: !9804, line: 1021, type: !156)
!9985 = !DILocation(line: 0, scope: !9977)
!9986 = !DILocation(line: 1029, column: 30, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9988, file: !9804, line: 1028, column: 3)
!9988 = distinct !DILexicalBlock(scope: !9977, file: !9804, line: 1023, column: 7)
!9989 = !DILocation(line: 1029, column: 19, scope: !9987)
!9990 = !DILocation(line: 1029, column: 13, scope: !9987)
!9991 = !DILocation(line: 1029, column: 17, scope: !9987)
!9992 = !DILocation(line: 1031, column: 1, scope: !9977)
!9993 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9804, file: !9804, line: 949, type: !9969, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !9994)
!9994 = !{!9995, !9996}
!9995 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9993, file: !9804, line: 949, type: !1525)
!9996 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !9993, file: !9804, line: 949, type: !156)
!9997 = !DILocation(line: 0, scope: !9993)
!9998 = !DILocation(line: 951, column: 3, scope: !9993)
!9999 = !DILocation(line: 952, column: 1, scope: !9993)
!10000 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9804, file: !9804, line: 588, type: !9969, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10001)
!10001 = !{!10002, !10003}
!10002 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10000, file: !9804, line: 588, type: !1525)
!10003 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10000, file: !9804, line: 588, type: !156)
!10004 = !DILocation(line: 0, scope: !10000)
!10005 = !DILocation(line: 590, column: 3, scope: !10000)
!10006 = !DILocation(line: 591, column: 1, scope: !10000)
!10007 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9804, file: !9804, line: 805, type: !9969, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10008)
!10008 = !{!10009, !10010}
!10009 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10007, file: !9804, line: 805, type: !1525)
!10010 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10007, file: !9804, line: 805, type: !156)
!10011 = !DILocation(line: 0, scope: !10007)
!10012 = !DILocation(line: 807, column: 3, scope: !10007)
!10013 = !DILocation(line: 808, column: 1, scope: !10007)
!10014 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9804, file: !9804, line: 532, type: !9969, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10015)
!10015 = !{!10016, !10017}
!10016 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10014, file: !9804, line: 532, type: !1525)
!10017 = !DILocalVariable(name: "Parity", arg: 2, scope: !10014, file: !9804, line: 532, type: !156)
!10018 = !DILocation(line: 0, scope: !10014)
!10019 = !DILocation(line: 534, column: 3, scope: !10014)
!10020 = !DILocation(line: 535, column: 1, scope: !10014)
!10021 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9804, file: !9804, line: 1770, type: !9805, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10022)
!10022 = !{!10023}
!10023 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10021, file: !9804, line: 1770, type: !1525)
!10024 = !DILocation(line: 0, scope: !10021)
!10025 = !DILocation(line: 1772, column: 11, scope: !10021)
!10026 = !DILocation(line: 1772, column: 46, scope: !10021)
!10027 = !DILocation(line: 1772, column: 3, scope: !10021)
!10028 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9804, file: !9804, line: 1737, type: !9805, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10029)
!10029 = !{!10030}
!10030 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10028, file: !9804, line: 1737, type: !1525)
!10031 = !DILocation(line: 0, scope: !10028)
!10032 = !DILocation(line: 1739, column: 11, scope: !10028)
!10033 = !DILocation(line: 1739, column: 3, scope: !10028)
!10034 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9804, file: !9804, line: 1748, type: !9805, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10035)
!10035 = !{!10036}
!10036 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10034, file: !9804, line: 1748, type: !1525)
!10037 = !DILocation(line: 0, scope: !10034)
!10038 = !DILocation(line: 1750, column: 11, scope: !10034)
!10039 = !DILocation(line: 1750, column: 45, scope: !10034)
!10040 = !DILocation(line: 1750, column: 3, scope: !10034)
!10041 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9804, file: !9804, line: 1827, type: !9805, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10042)
!10042 = !{!10043}
!10043 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10041, file: !9804, line: 1827, type: !1525)
!10044 = !DILocation(line: 0, scope: !10041)
!10045 = !DILocation(line: 1829, column: 11, scope: !10041)
!10046 = !DILocation(line: 1829, column: 46, scope: !10041)
!10047 = !DILocation(line: 1829, column: 3, scope: !10041)
!10048 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9804, file: !9804, line: 1992, type: !9867, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10049)
!10049 = !{!10050}
!10050 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10048, file: !9804, line: 1992, type: !1525)
!10051 = !DILocation(line: 0, scope: !10048)
!10052 = !DILocation(line: 1994, column: 3, scope: !10048)
!10053 = !DILocation(line: 1995, column: 1, scope: !10048)
!10054 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9804, file: !9804, line: 1934, type: !9867, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10055)
!10055 = !{!10056, !10057}
!10056 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10054, file: !9804, line: 1934, type: !1525)
!10057 = !DILocalVariable(name: "tmpreg", scope: !10054, file: !9804, line: 1936, type: !452)
!10058 = !DILocation(line: 0, scope: !10054)
!10059 = !DILocation(line: 1936, column: 3, scope: !10054)
!10060 = !DILocation(line: 1936, column: 17, scope: !10054)
!10061 = !DILocation(line: 1937, column: 20, scope: !10054)
!10062 = !DILocation(line: 1937, column: 10, scope: !10054)
!10063 = !DILocation(line: 1938, column: 10, scope: !10054)
!10064 = !DILocation(line: 1939, column: 20, scope: !10054)
!10065 = !DILocation(line: 1939, column: 10, scope: !10054)
!10066 = !DILocation(line: 1940, column: 10, scope: !10054)
!10067 = !DILocation(line: 1941, column: 1, scope: !10054)
!10068 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9804, file: !9804, line: 1877, type: !9867, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10069)
!10069 = !{!10070, !10071}
!10070 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10068, file: !9804, line: 1877, type: !1525)
!10071 = !DILocalVariable(name: "tmpreg", scope: !10068, file: !9804, line: 1879, type: !452)
!10072 = !DILocation(line: 0, scope: !10068)
!10073 = !DILocation(line: 1879, column: 3, scope: !10068)
!10074 = !DILocation(line: 1879, column: 17, scope: !10068)
!10075 = !DILocation(line: 1880, column: 20, scope: !10068)
!10076 = !DILocation(line: 1880, column: 10, scope: !10068)
!10077 = !DILocation(line: 1881, column: 10, scope: !10068)
!10078 = !DILocation(line: 1882, column: 20, scope: !10068)
!10079 = !DILocation(line: 1882, column: 10, scope: !10068)
!10080 = !DILocation(line: 1883, column: 10, scope: !10068)
!10081 = !DILocation(line: 1884, column: 1, scope: !10068)
!10082 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9804, file: !9804, line: 1896, type: !9867, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10083)
!10083 = !{!10084, !10085}
!10084 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10082, file: !9804, line: 1896, type: !1525)
!10085 = !DILocalVariable(name: "tmpreg", scope: !10082, file: !9804, line: 1898, type: !452)
!10086 = !DILocation(line: 0, scope: !10082)
!10087 = !DILocation(line: 1898, column: 3, scope: !10082)
!10088 = !DILocation(line: 1898, column: 17, scope: !10082)
!10089 = !DILocation(line: 1899, column: 20, scope: !10082)
!10090 = !DILocation(line: 1899, column: 10, scope: !10082)
!10091 = !DILocation(line: 1900, column: 10, scope: !10082)
!10092 = !DILocation(line: 1901, column: 20, scope: !10082)
!10093 = !DILocation(line: 1901, column: 10, scope: !10082)
!10094 = !DILocation(line: 1902, column: 10, scope: !10082)
!10095 = !DILocation(line: 1903, column: 1, scope: !10082)
!10096 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9804, file: !9804, line: 1915, type: !9867, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10097)
!10097 = !{!10098, !10099}
!10098 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10096, file: !9804, line: 1915, type: !1525)
!10099 = !DILocalVariable(name: "tmpreg", scope: !10096, file: !9804, line: 1917, type: !452)
!10100 = !DILocation(line: 0, scope: !10096)
!10101 = !DILocation(line: 1917, column: 3, scope: !10096)
!10102 = !DILocation(line: 1917, column: 17, scope: !10096)
!10103 = !DILocation(line: 1918, column: 20, scope: !10096)
!10104 = !DILocation(line: 1918, column: 10, scope: !10096)
!10105 = !DILocation(line: 1919, column: 10, scope: !10096)
!10106 = !DILocation(line: 1920, column: 20, scope: !10096)
!10107 = !DILocation(line: 1920, column: 10, scope: !10096)
!10108 = !DILocation(line: 1921, column: 10, scope: !10096)
!10109 = !DILocation(line: 1922, column: 1, scope: !10096)
!10110 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9804, file: !9804, line: 1814, type: !9805, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10111)
!10111 = !{!10112}
!10112 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10110, file: !9804, line: 1814, type: !1525)
!10113 = !DILocation(line: 0, scope: !10110)
!10114 = !DILocation(line: 1816, column: 11, scope: !10110)
!10115 = !DILocation(line: 1816, column: 46, scope: !10110)
!10116 = !DILocation(line: 1816, column: 3, scope: !10110)
!10117 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9804, file: !9804, line: 2426, type: !10118, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10120)
!10118 = !DISubroutineType(types: !10119)
!10119 = !{null, !1525, !143}
!10120 = !{!10121, !10122}
!10121 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10117, file: !9804, line: 2426, type: !1525)
!10122 = !DILocalVariable(name: "Value", arg: 2, scope: !10117, file: !9804, line: 2426, type: !143)
!10123 = !DILocation(line: 0, scope: !10117)
!10124 = !DILocation(line: 2428, column: 16, scope: !10117)
!10125 = !DILocation(line: 2428, column: 11, scope: !10117)
!10126 = !DILocation(line: 2428, column: 14, scope: !10117)
!10127 = !DILocation(line: 2429, column: 1, scope: !10117)
!10128 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9804, file: !9804, line: 1792, type: !9805, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10129)
!10129 = !{!10130}
!10130 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10128, file: !9804, line: 1792, type: !1525)
!10131 = !DILocation(line: 0, scope: !10128)
!10132 = !DILocation(line: 1794, column: 11, scope: !10128)
!10133 = !DILocation(line: 1794, column: 47, scope: !10128)
!10134 = !DILocation(line: 1794, column: 3, scope: !10128)
!10135 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9804, file: !9804, line: 2403, type: !10136, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10138)
!10136 = !DISubroutineType(types: !10137)
!10137 = !{!143, !1525}
!10138 = !{!10139}
!10139 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10135, file: !9804, line: 2403, type: !1525)
!10140 = !DILocation(line: 0, scope: !10135)
!10141 = !DILocation(line: 2405, column: 20, scope: !10135)
!10142 = !DILocation(line: 2405, column: 10, scope: !10135)
!10143 = !DILocation(line: 2405, column: 3, scope: !10135)
!10144 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1579, file: !1579, line: 1583, type: !1505, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10145)
!10145 = !{!10146, !10147, !10148, !10149, !10150, !10151}
!10146 = !DILocalVariable(name: "dev", arg: 1, scope: !10144, file: !1579, line: 1583, type: !1484)
!10147 = !DILocalVariable(name: "config", scope: !10144, file: !1579, line: 1585, type: !9495)
!10148 = !DILocalVariable(name: "data", scope: !10144, file: !1579, line: 1586, type: !9618)
!10149 = !DILocalVariable(name: "ll_parity", scope: !10144, file: !1579, line: 1587, type: !156)
!10150 = !DILocalVariable(name: "ll_datawidth", scope: !10144, file: !1579, line: 1588, type: !156)
!10151 = !DILocalVariable(name: "err", scope: !10144, file: !1579, line: 1589, type: !118)
!10152 = !DILocation(line: 0, scope: !10144)
!10153 = !DILocation(line: 1585, column: 48, scope: !10144)
!10154 = !DILocation(line: 1586, column: 38, scope: !10144)
!10155 = !DILocation(line: 1591, column: 2, scope: !10144)
!10156 = !DILocation(line: 1593, column: 29, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10144, file: !1579, line: 1593, column: 6)
!10158 = !DILocation(line: 1593, column: 7, scope: !10157)
!10159 = !DILocation(line: 1593, column: 6, scope: !10144)
!10160 = !DILocation(line: 1599, column: 31, scope: !10144)
!10161 = !DILocation(line: 1599, column: 71, scope: !10144)
!10162 = !DILocation(line: 1599, column: 8, scope: !10144)
!10163 = !DILocation(line: 1600, column: 10, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10144, file: !1579, line: 1600, column: 6)
!10165 = !DILocation(line: 1600, column: 6, scope: !10144)
!10166 = !DILocation(line: 1616, column: 36, scope: !10144)
!10167 = !DILocation(line: 1616, column: 8, scope: !10144)
!10168 = !DILocation(line: 1617, column: 10, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10144, file: !1579, line: 1617, column: 6)
!10170 = !DILocation(line: 1617, column: 6, scope: !10144)
!10171 = !DILocation(line: 1621, column: 27, scope: !10144)
!10172 = !DILocation(line: 1621, column: 2, scope: !10144)
!10173 = !DILocation(line: 1624, column: 40, scope: !10144)
!10174 = !DILocation(line: 1624, column: 2, scope: !10144)
!10175 = !DILocation(line: 1630, column: 14, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10144, file: !1579, line: 1630, column: 6)
!10177 = !DILocation(line: 1630, column: 6, scope: !10144)
!10178 = !DILocation(line: 1638, column: 2, scope: !10179)
!10179 = distinct !DILexicalBlock(scope: !10180, file: !1579, line: 1634, column: 34)
!10180 = distinct !DILexicalBlock(scope: !10176, file: !1579, line: 1634, column: 13)
!10181 = !DILocation(line: 0, scope: !10176)
!10182 = !DILocation(line: 1649, column: 35, scope: !10144)
!10183 = !DILocation(line: 1649, column: 2, scope: !10144)
!10184 = !DILocation(line: 1654, column: 14, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10144, file: !1579, line: 1654, column: 6)
!10186 = !DILocation(line: 1654, column: 6, scope: !10144)
!10187 = !DILocation(line: 1655, column: 3, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10185, file: !1579, line: 1654, column: 31)
!10189 = !DILocation(line: 1656, column: 2, scope: !10188)
!10190 = !DILocation(line: 1659, column: 37, scope: !10144)
!10191 = !DILocation(line: 1659, column: 2, scope: !10144)
!10192 = !DILocation(line: 1662, column: 14, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10144, file: !1579, line: 1662, column: 6)
!10194 = !DILocation(line: 1662, column: 6, scope: !10144)
!10195 = !DILocation(line: 1663, column: 37, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !10193, file: !1579, line: 1662, column: 27)
!10197 = !DILocation(line: 1663, column: 3, scope: !10196)
!10198 = !DILocation(line: 1664, column: 2, scope: !10196)
!10199 = !DILocation(line: 1684, column: 26, scope: !10144)
!10200 = !DILocation(line: 1684, column: 2, scope: !10144)
!10201 = !DILocation(line: 1722, column: 2, scope: !10144)
!10202 = !DILocation(line: 1724, column: 1, scope: !10144)
!10203 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1579, file: !1579, line: 651, type: !10204, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10206)
!10204 = !DISubroutineType(types: !10205)
!10205 = !{null, !1484}
!10206 = !{!10207, !10208, !10209}
!10207 = !DILocalVariable(name: "dev", arg: 1, scope: !10203, file: !1579, line: 651, type: !1484)
!10208 = !DILocalVariable(name: "data", scope: !10203, file: !1579, line: 653, type: !9618)
!10209 = !DILocalVariable(name: "clk", scope: !10203, file: !1579, line: 654, type: !10210)
!10210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1484)
!10211 = !DILocation(line: 0, scope: !10203)
!10212 = !DILocation(line: 653, column: 38, scope: !10203)
!10213 = !DILocation(line: 656, column: 8, scope: !10203)
!10214 = !DILocation(line: 656, column: 14, scope: !10203)
!10215 = !DILocation(line: 657, column: 1, scope: !10203)
!10216 = distinct !DISubprogram(name: "device_is_ready", scope: !3373, file: !3373, line: 47, type: !10217, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10219)
!10217 = !DISubroutineType(types: !10218)
!10218 = !{!146, !1484}
!10219 = !{!10220}
!10220 = !DILocalVariable(name: "dev", arg: 1, scope: !10216, file: !3373, line: 47, type: !1484)
!10221 = !DILocation(line: 0, scope: !10216)
!10222 = !DILocation(line: 55, column: 2, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10216, file: !3373, line: 55, column: 2)
!10224 = !{i64 2155043839}
!10225 = !DILocation(line: 56, column: 9, scope: !10216)
!10226 = !DILocation(line: 56, column: 2, scope: !10216)
!10227 = distinct !DISubprogram(name: "clock_control_on", scope: !955, file: !955, line: 123, type: !1543, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10228)
!10228 = !{!10229, !10230, !10231}
!10229 = !DILocalVariable(name: "dev", arg: 1, scope: !10227, file: !955, line: 123, type: !1484)
!10230 = !DILocalVariable(name: "sys", arg: 2, scope: !10227, file: !955, line: 124, type: !1048)
!10231 = !DILocalVariable(name: "api", scope: !10227, file: !955, line: 126, type: !1536)
!10232 = !DILocation(line: 0, scope: !10227)
!10233 = !DILocation(line: 127, column: 49, scope: !10227)
!10234 = !DILocation(line: 129, column: 14, scope: !10227)
!10235 = !DILocation(line: 129, column: 9, scope: !10227)
!10236 = !DILocation(line: 129, column: 2, scope: !10227)
!10237 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1606, file: !1606, line: 342, type: !10238, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10240)
!10238 = !DISubroutineType(types: !10239)
!10239 = !{!118, !1654, !143}
!10240 = !{!10241, !10242, !10243, !10244}
!10241 = !DILocalVariable(name: "config", arg: 1, scope: !10237, file: !1606, line: 342, type: !1654)
!10242 = !DILocalVariable(name: "id", arg: 2, scope: !10237, file: !1606, line: 343, type: !143)
!10243 = !DILocalVariable(name: "ret", scope: !10237, file: !1606, line: 345, type: !118)
!10244 = !DILocalVariable(name: "state", scope: !10237, file: !1606, line: 346, type: !1609)
!10245 = !DILocation(line: 0, scope: !10237)
!10246 = !DILocation(line: 346, column: 2, scope: !10237)
!10247 = !DILocation(line: 348, column: 8, scope: !10237)
!10248 = !DILocation(line: 349, column: 10, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10237, file: !1606, line: 349, column: 6)
!10250 = !DILocation(line: 349, column: 6, scope: !10237)
!10251 = !DILocation(line: 353, column: 44, scope: !10237)
!10252 = !DILocation(line: 353, column: 9, scope: !10237)
!10253 = !DILocation(line: 353, column: 2, scope: !10237)
!10254 = !DILocation(line: 354, column: 1, scope: !10237)
!10255 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9804, file: !9804, line: 497, type: !9969, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10256)
!10256 = !{!10257, !10258, !10259}
!10257 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10255, file: !9804, line: 497, type: !1525)
!10258 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10255, file: !9804, line: 497, type: !156)
!10259 = !DILocalVariable(name: "val", scope: !10260, file: !9804, line: 499, type: !156)
!10260 = distinct !DILexicalBlock(scope: !10255, file: !9804, line: 499, column: 3)
!10261 = !DILocation(line: 0, scope: !10255)
!10262 = !DILocation(line: 499, column: 3, scope: !10260)
!10263 = !DILocalVariable(name: "addr", arg: 1, scope: !10264, file: !6346, line: 476, type: !1575)
!10264 = distinct !DISubprogram(name: "__LDREXW", scope: !6346, file: !6346, line: 476, type: !10265, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10267)
!10265 = !DISubroutineType(types: !10266)
!10266 = !{!156, !1575}
!10267 = !{!10263, !10268}
!10268 = !DILocalVariable(name: "result", scope: !10264, file: !6346, line: 478, type: !156)
!10269 = !DILocation(line: 0, scope: !10264, inlinedAt: !10270)
!10270 = distinct !DILocation(line: 499, column: 3, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10260, file: !9804, line: 499, column: 3)
!10272 = !DILocation(line: 480, column: 4, scope: !10264, inlinedAt: !10270)
!10273 = !{i64 3529820}
!10274 = !DILocation(line: 499, column: 3, scope: !10271)
!10275 = !DILocation(line: 0, scope: !10260)
!10276 = !DILocalVariable(name: "value", arg: 1, scope: !10277, file: !6346, line: 527, type: !156)
!10277 = distinct !DISubprogram(name: "__STREXW", scope: !6346, file: !6346, line: 527, type: !10278, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10280)
!10278 = !DISubroutineType(types: !10279)
!10279 = !{!156, !156, !1575}
!10280 = !{!10276, !10281, !10282}
!10281 = !DILocalVariable(name: "addr", arg: 2, scope: !10277, file: !6346, line: 527, type: !1575)
!10282 = !DILocalVariable(name: "result", scope: !10277, file: !6346, line: 529, type: !156)
!10283 = !DILocation(line: 0, scope: !10277, inlinedAt: !10284)
!10284 = distinct !DILocation(line: 499, column: 3, scope: !10260)
!10285 = !DILocation(line: 531, column: 4, scope: !10277, inlinedAt: !10284)
!10286 = !{i64 3531256}
!10287 = distinct !{!10287, !10262, !10262}
!10288 = !DILocation(line: 500, column: 1, scope: !10255)
!10289 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9804, file: !9804, line: 850, type: !9978, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10290)
!10290 = !{!10291, !10292, !10293, !10294}
!10291 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10289, file: !9804, line: 850, type: !1525)
!10292 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10289, file: !9804, line: 850, type: !156)
!10293 = !DILocalVariable(name: "Parity", arg: 3, scope: !10289, file: !9804, line: 850, type: !156)
!10294 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10289, file: !9804, line: 851, type: !156)
!10295 = !DILocation(line: 0, scope: !10289)
!10296 = !DILocation(line: 853, column: 3, scope: !10289)
!10297 = !DILocation(line: 854, column: 3, scope: !10289)
!10298 = !DILocation(line: 855, column: 1, scope: !10289)
!10299 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9804, file: !9804, line: 1337, type: !9867, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10300)
!10300 = !{!10301}
!10301 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10299, file: !9804, line: 1337, type: !1525)
!10302 = !DILocation(line: 0, scope: !10299)
!10303 = !DILocation(line: 1339, column: 3, scope: !10299)
!10304 = !DILocation(line: 1340, column: 1, scope: !10299)
!10305 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1606, file: !1606, line: 316, type: !10306, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10308)
!10306 = !DISubroutineType(types: !10307)
!10307 = !{!118, !1654, !1609}
!10308 = !{!10309, !10310, !10311}
!10309 = !DILocalVariable(name: "config", arg: 1, scope: !10305, file: !1606, line: 317, type: !1654)
!10310 = !DILocalVariable(name: "state", arg: 2, scope: !10305, file: !1606, line: 318, type: !1609)
!10311 = !DILocalVariable(name: "reg", scope: !10305, file: !1606, line: 320, type: !22)
!10312 = !DILocation(line: 0, scope: !10305)
!10313 = !DILocation(line: 329, column: 39, scope: !10305)
!10314 = !DILocation(line: 329, column: 52, scope: !10305)
!10315 = !DILocation(line: 329, column: 9, scope: !10305)
!10316 = !DILocation(line: 329, column: 2, scope: !10305)
!10317 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !130, file: !130, line: 730, type: !10217, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1440, retainedNodes: !10318)
!10318 = !{!10319}
!10319 = !DILocalVariable(name: "dev", arg: 1, scope: !10317, file: !130, line: 730, type: !1484)
!10320 = !DILocation(line: 0, scope: !10317)
!10321 = !DILocation(line: 732, column: 9, scope: !10317)
!10322 = !DILocation(line: 732, column: 2, scope: !10317)
!10323 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1733, file: !1733, line: 270, type: !1739, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10324)
!10324 = !{!10325}
!10325 = !DILocalVariable(name: "dev", arg: 1, scope: !10323, file: !1733, line: 270, type: !1741)
!10326 = !DILocation(line: 0, scope: !10323)
!10327 = !DILocation(line: 274, column: 2, scope: !10323)
!10328 = !DILocation(line: 275, column: 12, scope: !10323)
!10329 = !DILocation(line: 276, column: 15, scope: !10323)
!10330 = !DILocation(line: 277, column: 16, scope: !10323)
!10331 = !DILocation(line: 278, column: 15, scope: !10323)
!10332 = !DILocation(line: 279, column: 16, scope: !10323)
!10333 = !DILocation(line: 282, column: 2, scope: !10323)
!10334 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !656, file: !656, line: 1814, type: !6386, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10335)
!10335 = !{!10336, !10337}
!10336 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10334, file: !656, line: 1814, type: !911)
!10337 = !DILocalVariable(name: "priority", arg: 2, scope: !10334, file: !656, line: 1814, type: !156)
!10338 = !DILocation(line: 0, scope: !10334)
!10339 = !DILocation(line: 1822, column: 46, scope: !10340)
!10340 = distinct !DILexicalBlock(scope: !10341, file: !656, line: 1821, column: 3)
!10341 = distinct !DILexicalBlock(scope: !10334, file: !656, line: 1816, column: 7)
!10342 = !DILocation(line: 1824, column: 1, scope: !10334)
!10343 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1733, file: !1733, line: 118, type: !6283, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10344)
!10344 = !{!10345, !10346}
!10345 = !DILocalVariable(name: "arg", arg: 1, scope: !10343, file: !1733, line: 118, type: !117)
!10346 = !DILocalVariable(name: "dticks", scope: !10343, file: !1733, line: 121, type: !156)
!10347 = !DILocation(line: 0, scope: !10343)
!10348 = !DILocation(line: 124, column: 2, scope: !10343)
!10349 = !DILocation(line: 129, column: 17, scope: !10343)
!10350 = !DILocation(line: 129, column: 14, scope: !10343)
!10351 = !DILocation(line: 130, column: 15, scope: !10343)
!10352 = !DILocation(line: 145, column: 27, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10354, file: !1733, line: 132, column: 16)
!10354 = distinct !DILexicalBlock(scope: !10343, file: !1733, line: 132, column: 6)
!10355 = !DILocation(line: 145, column: 25, scope: !10353)
!10356 = !DILocation(line: 145, column: 45, scope: !10353)
!10357 = !DILocation(line: 146, column: 30, scope: !10353)
!10358 = !DILocation(line: 146, column: 20, scope: !10353)
!10359 = !DILocation(line: 147, column: 3, scope: !10353)
!10360 = !DILocation(line: 151, column: 2, scope: !10343)
!10361 = !DILocation(line: 152, column: 1, scope: !10343)
!10362 = distinct !DISubprogram(name: "elapsed", scope: !1733, file: !1733, line: 85, type: !6433, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10363)
!10363 = !{!10364, !10365, !10366}
!10364 = !DILocalVariable(name: "val1", scope: !10362, file: !1733, line: 87, type: !156)
!10365 = !DILocalVariable(name: "ctrl", scope: !10362, file: !1733, line: 88, type: !156)
!10366 = !DILocalVariable(name: "val2", scope: !10362, file: !1733, line: 89, type: !156)
!10367 = !DILocation(line: 87, column: 27, scope: !10362)
!10368 = !DILocation(line: 0, scope: !10362)
!10369 = !DILocation(line: 88, column: 27, scope: !10362)
!10370 = !DILocation(line: 89, column: 27, scope: !10362)
!10371 = !DILocation(line: 105, column: 12, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10362, file: !1733, line: 105, column: 6)
!10373 = !DILocation(line: 106, column: 6, scope: !10372)
!10374 = !DILocation(line: 107, column: 16, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10372, file: !1733, line: 106, column: 24)
!10376 = !DILocation(line: 111, column: 18, scope: !10375)
!10377 = !DILocation(line: 112, column: 2, scope: !10375)
!10378 = !DILocation(line: 114, column: 20, scope: !10362)
!10379 = !DILocation(line: 114, column: 30, scope: !10362)
!10380 = !DILocation(line: 114, column: 28, scope: !10362)
!10381 = !DILocation(line: 114, column: 2, scope: !10362)
!10382 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1733, file: !1733, line: 154, type: !10383, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10385)
!10383 = !DISubroutineType(types: !10384)
!10384 = !{null, !362, !146}
!10385 = !{!10386, !10387, !10388, !10389, !10390, !10391, !10392, !10397, !10398}
!10386 = !DILocalVariable(name: "ticks", arg: 1, scope: !10382, file: !1733, line: 154, type: !362)
!10387 = !DILocalVariable(name: "idle", arg: 2, scope: !10382, file: !1733, line: 154, type: !146)
!10388 = !DILocalVariable(name: "delay", scope: !10382, file: !1733, line: 169, type: !156)
!10389 = !DILocalVariable(name: "val1", scope: !10382, file: !1733, line: 170, type: !156)
!10390 = !DILocalVariable(name: "val2", scope: !10382, file: !1733, line: 170, type: !156)
!10391 = !DILocalVariable(name: "last_load_", scope: !10382, file: !1733, line: 171, type: !156)
!10392 = !DILocalVariable(name: "key", scope: !10382, file: !1733, line: 176, type: !10393)
!10393 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !10394)
!10394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !10395)
!10395 = !{!10396}
!10396 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10394, file: !334, line: 33, baseType: !118, size: 32)
!10397 = !DILocalVariable(name: "pending", scope: !10382, file: !1733, line: 178, type: !156)
!10398 = !DILocalVariable(name: "unannounced", scope: !10382, file: !1733, line: 185, type: !156)
!10399 = !DILocation(line: 0, scope: !10382)
!10400 = !DILocation(line: 162, column: 49, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10382, file: !1733, line: 162, column: 6)
!10402 = !DILocation(line: 163, column: 17, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10401, file: !1733, line: 162, column: 78)
!10404 = !DILocation(line: 164, column: 13, scope: !10403)
!10405 = !DILocation(line: 165, column: 3, scope: !10403)
!10406 = !DILocation(line: 171, column: 24, scope: !10382)
!10407 = !DILocation(line: 173, column: 10, scope: !10382)
!10408 = !DILocation(line: 174, column: 10, scope: !10382)
!10409 = !DILocalVariable(name: "l", arg: 1, scope: !10410, file: !334, line: 136, type: !10413)
!10410 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !10411, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10414)
!10411 = !DISubroutineType(types: !10412)
!10412 = !{!10393, !10413}
!10413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 32)
!10414 = !{!10409, !10415}
!10415 = !DILocalVariable(name: "k", scope: !10410, file: !334, line: 139, type: !10393)
!10416 = !DILocation(line: 0, scope: !10410, inlinedAt: !10417)
!10417 = distinct !DILocation(line: 176, column: 25, scope: !10382)
!10418 = !DILocation(line: 55, column: 2, scope: !10419, inlinedAt: !10423)
!10419 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6172, file: !6172, line: 42, type: !6173, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10420)
!10420 = !{!10421, !10422}
!10421 = !DILocalVariable(name: "key", scope: !10419, file: !6172, line: 44, type: !32)
!10422 = !DILocalVariable(name: "tmp", scope: !10419, file: !6172, line: 53, type: !32)
!10423 = distinct !DILocation(line: 145, column: 10, scope: !10410, inlinedAt: !10417)
!10424 = !{i64 2223907}
!10425 = !DILocation(line: 0, scope: !10419, inlinedAt: !10423)
!10426 = !DILocation(line: 148, column: 2, scope: !10427, inlinedAt: !10417)
!10427 = distinct !DILexicalBlock(scope: !10428, file: !334, line: 148, column: 2)
!10428 = distinct !DILexicalBlock(scope: !10410, file: !334, line: 148, column: 2)
!10429 = !DILocation(line: 148, column: 2, scope: !10428, inlinedAt: !10417)
!10430 = !DILocation(line: 148, column: 2, scope: !10431, inlinedAt: !10417)
!10431 = distinct !DILexicalBlock(scope: !10427, file: !334, line: 148, column: 2)
!10432 = !DILocation(line: 160, column: 2, scope: !10410, inlinedAt: !10417)
!10433 = !DILocation(line: 178, column: 21, scope: !10382)
!10434 = !DILocation(line: 180, column: 18, scope: !10382)
!10435 = !DILocation(line: 182, column: 14, scope: !10382)
!10436 = !DILocation(line: 183, column: 15, scope: !10382)
!10437 = !DILocation(line: 185, column: 39, scope: !10382)
!10438 = !DILocation(line: 185, column: 37, scope: !10382)
!10439 = !DILocation(line: 187, column: 27, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10382, file: !1733, line: 187, column: 6)
!10441 = !DILocation(line: 187, column: 6, scope: !10382)
!10442 = !DILocation(line: 202, column: 27, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10440, file: !1733, line: 195, column: 9)
!10444 = !DILocation(line: 202, column: 48, scope: !10443)
!10445 = !DILocation(line: 203, column: 9, scope: !10443)
!10446 = !DILocation(line: 204, column: 11, scope: !10443)
!10447 = !DILocation(line: 205, column: 13, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10443, file: !1733, line: 205, column: 7)
!10449 = !DILocation(line: 205, column: 7, scope: !10443)
!10450 = !DILocation(line: 0, scope: !10440)
!10451 = !DILocation(line: 212, column: 18, scope: !10382)
!10452 = !DILocation(line: 214, column: 28, scope: !10382)
!10453 = !DILocation(line: 214, column: 16, scope: !10382)
!10454 = !DILocation(line: 215, column: 15, scope: !10382)
!10455 = !DILocation(line: 227, column: 11, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10382, file: !1733, line: 227, column: 6)
!10457 = !DILocation(line: 227, column: 6, scope: !10382)
!10458 = !DILocation(line: 228, column: 15, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10456, file: !1733, line: 227, column: 19)
!10460 = !DILocation(line: 228, column: 38, scope: !10459)
!10461 = !DILocation(line: 228, column: 24, scope: !10459)
!10462 = !DILocation(line: 229, column: 2, scope: !10459)
!10463 = !DILocation(line: 230, column: 24, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10456, file: !1733, line: 229, column: 9)
!10465 = !DILocation(line: 230, column: 15, scope: !10464)
!10466 = !DILocation(line: 0, scope: !10456)
!10467 = !DILocalVariable(name: "key", arg: 2, scope: !10468, file: !334, line: 190, type: !10393)
!10468 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !10469, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10471)
!10469 = !DISubroutineType(types: !10470)
!10470 = !{null, !10413, !10393}
!10471 = !{!10472, !10467}
!10472 = !DILocalVariable(name: "l", arg: 1, scope: !10468, file: !334, line: 189, type: !10413)
!10473 = !DILocation(line: 0, scope: !10468, inlinedAt: !10474)
!10474 = distinct !DILocation(line: 232, column: 2, scope: !10382)
!10475 = !DILocation(line: 194, column: 2, scope: !10476, inlinedAt: !10474)
!10476 = distinct !DILexicalBlock(scope: !10477, file: !334, line: 194, column: 2)
!10477 = distinct !DILexicalBlock(scope: !10468, file: !334, line: 194, column: 2)
!10478 = !DILocation(line: 194, column: 2, scope: !10477, inlinedAt: !10474)
!10479 = !DILocation(line: 194, column: 2, scope: !10480, inlinedAt: !10474)
!10480 = distinct !DILexicalBlock(scope: !10476, file: !334, line: 194, column: 2)
!10481 = !DILocalVariable(name: "key", arg: 1, scope: !10482, file: !6172, line: 84, type: !32)
!10482 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6172, file: !6172, line: 84, type: !6183, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10483)
!10483 = !{!10481}
!10484 = !DILocation(line: 0, scope: !10482, inlinedAt: !10485)
!10485 = distinct !DILocation(line: 215, column: 2, scope: !10468, inlinedAt: !10474)
!10486 = !DILocation(line: 95, column: 2, scope: !10482, inlinedAt: !10485)
!10487 = !{i64 2224724}
!10488 = !DILocation(line: 234, column: 1, scope: !10382)
!10489 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1733, file: !1733, line: 236, type: !6433, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10490)
!10490 = !{!10491, !10492}
!10491 = !DILocalVariable(name: "key", scope: !10489, file: !1733, line: 242, type: !10393)
!10492 = !DILocalVariable(name: "cyc", scope: !10489, file: !1733, line: 243, type: !156)
!10493 = !DILocation(line: 0, scope: !10410, inlinedAt: !10494)
!10494 = distinct !DILocation(line: 242, column: 25, scope: !10489)
!10495 = !DILocation(line: 55, column: 2, scope: !10419, inlinedAt: !10496)
!10496 = distinct !DILocation(line: 145, column: 10, scope: !10410, inlinedAt: !10494)
!10497 = !DILocation(line: 0, scope: !10419, inlinedAt: !10496)
!10498 = !DILocation(line: 148, column: 2, scope: !10427, inlinedAt: !10494)
!10499 = !DILocation(line: 148, column: 2, scope: !10428, inlinedAt: !10494)
!10500 = !DILocation(line: 148, column: 2, scope: !10431, inlinedAt: !10494)
!10501 = !DILocation(line: 160, column: 2, scope: !10410, inlinedAt: !10494)
!10502 = !DILocation(line: 0, scope: !10489)
!10503 = !DILocation(line: 243, column: 17, scope: !10489)
!10504 = !DILocation(line: 243, column: 29, scope: !10489)
!10505 = !DILocation(line: 243, column: 43, scope: !10489)
!10506 = !DILocation(line: 0, scope: !10468, inlinedAt: !10507)
!10507 = distinct !DILocation(line: 245, column: 2, scope: !10489)
!10508 = !DILocation(line: 194, column: 2, scope: !10476, inlinedAt: !10507)
!10509 = !DILocation(line: 194, column: 2, scope: !10477, inlinedAt: !10507)
!10510 = !DILocation(line: 194, column: 2, scope: !10480, inlinedAt: !10507)
!10511 = !DILocation(line: 243, column: 27, scope: !10489)
!10512 = !DILocation(line: 243, column: 41, scope: !10489)
!10513 = !DILocation(line: 0, scope: !10482, inlinedAt: !10514)
!10514 = distinct !DILocation(line: 215, column: 2, scope: !10468, inlinedAt: !10507)
!10515 = !DILocation(line: 95, column: 2, scope: !10482, inlinedAt: !10514)
!10516 = !DILocation(line: 246, column: 13, scope: !10489)
!10517 = !DILocation(line: 246, column: 2, scope: !10489)
!10518 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1733, file: !1733, line: 249, type: !6433, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10519)
!10519 = !{!10520, !10521}
!10520 = !DILocalVariable(name: "key", scope: !10518, file: !1733, line: 251, type: !10393)
!10521 = !DILocalVariable(name: "ret", scope: !10518, file: !1733, line: 252, type: !156)
!10522 = !DILocation(line: 0, scope: !10410, inlinedAt: !10523)
!10523 = distinct !DILocation(line: 251, column: 25, scope: !10518)
!10524 = !DILocation(line: 55, column: 2, scope: !10419, inlinedAt: !10525)
!10525 = distinct !DILocation(line: 145, column: 10, scope: !10410, inlinedAt: !10523)
!10526 = !DILocation(line: 0, scope: !10419, inlinedAt: !10525)
!10527 = !DILocation(line: 148, column: 2, scope: !10427, inlinedAt: !10523)
!10528 = !DILocation(line: 148, column: 2, scope: !10428, inlinedAt: !10523)
!10529 = !DILocation(line: 148, column: 2, scope: !10431, inlinedAt: !10523)
!10530 = !DILocation(line: 160, column: 2, scope: !10410, inlinedAt: !10523)
!10531 = !DILocation(line: 0, scope: !10518)
!10532 = !DILocation(line: 252, column: 17, scope: !10518)
!10533 = !DILocation(line: 252, column: 29, scope: !10518)
!10534 = !DILocation(line: 0, scope: !10468, inlinedAt: !10535)
!10535 = distinct !DILocation(line: 254, column: 2, scope: !10518)
!10536 = !DILocation(line: 194, column: 2, scope: !10476, inlinedAt: !10535)
!10537 = !DILocation(line: 194, column: 2, scope: !10477, inlinedAt: !10535)
!10538 = !DILocation(line: 194, column: 2, scope: !10480, inlinedAt: !10535)
!10539 = !DILocation(line: 252, column: 27, scope: !10518)
!10540 = !DILocation(line: 0, scope: !10482, inlinedAt: !10541)
!10541 = distinct !DILocation(line: 215, column: 2, scope: !10468, inlinedAt: !10535)
!10542 = !DILocation(line: 95, column: 2, scope: !10482, inlinedAt: !10541)
!10543 = !DILocation(line: 255, column: 2, scope: !10518)
!10544 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1733, file: !1733, line: 258, type: !365, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !2123)
!10545 = !DILocation(line: 260, column: 6, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !10544, file: !1733, line: 260, column: 6)
!10547 = !DILocation(line: 260, column: 16, scope: !10546)
!10548 = !DILocation(line: 260, column: 6, scope: !10544)
!10549 = !DILocation(line: 261, column: 17, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10546, file: !1733, line: 260, column: 34)
!10551 = !DILocation(line: 262, column: 2, scope: !10550)
!10552 = !DILocation(line: 263, column: 1, scope: !10544)
!10553 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1733, file: !1733, line: 265, type: !365, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !2123)
!10554 = !DILocation(line: 267, column: 16, scope: !10553)
!10555 = !DILocation(line: 268, column: 1, scope: !10553)
!10556 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10557, file: !10557, line: 9, type: !10558, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2958, retainedNodes: !10581)
!10557 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10558 = !DISubroutineType(types: !10559)
!10559 = !{!118, !10560, !143, !10580}
!10560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10561, size: 32)
!10561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10562)
!10562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1606, line: 60, size: 64, elements: !10563)
!10563 = !{!10564, !10579}
!10564 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10562, file: !1606, line: 69, baseType: !10565, size: 32)
!10565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10566, size: 32)
!10566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10567)
!10567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1606, line: 50, size: 64, elements: !10568)
!10568 = !{!10569, !10577, !10578}
!10569 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10567, file: !1606, line: 52, baseType: !10570, size: 32)
!10570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10571, size: 32)
!10571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10572)
!10572 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1617, line: 37, baseType: !10573)
!10573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1617, line: 32, size: 64, elements: !10574)
!10574 = !{!10575, !10576}
!10575 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10573, file: !1617, line: 34, baseType: !156, size: 32)
!10576 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10573, file: !1617, line: 36, baseType: !156, size: 32, offset: 32)
!10577 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10567, file: !1606, line: 54, baseType: !143, size: 8, offset: 32)
!10578 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10567, file: !1606, line: 56, baseType: !143, size: 8, offset: 40)
!10579 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10562, file: !1606, line: 71, baseType: !143, size: 8, offset: 32)
!10580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10565, size: 32)
!10581 = !{!10582, !10583, !10584}
!10582 = !DILocalVariable(name: "config", arg: 1, scope: !10556, file: !10557, line: 9, type: !10560)
!10583 = !DILocalVariable(name: "id", arg: 2, scope: !10556, file: !10557, line: 9, type: !143)
!10584 = !DILocalVariable(name: "state", arg: 3, scope: !10556, file: !10557, line: 10, type: !10580)
!10585 = !DILocation(line: 0, scope: !10556)
!10586 = !DILocation(line: 12, column: 20, scope: !10556)
!10587 = !DILocation(line: 13, column: 27, scope: !10556)
!10588 = !DILocation(line: 13, column: 42, scope: !10556)
!10589 = !DILocation(line: 13, column: 19, scope: !10556)
!10590 = !DILocation(line: 13, column: 16, scope: !10556)
!10591 = !DILocation(line: 13, column: 2, scope: !10556)
!10592 = distinct !{!10592, !10591, !10593}
!10593 = !DILocation(line: 19, column: 2, scope: !10556)
!10594 = !DILocation(line: 14, column: 23, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10596, file: !10557, line: 14, column: 7)
!10596 = distinct !DILexicalBlock(scope: !10556, file: !10557, line: 13, column: 54)
!10597 = !DILocation(line: 14, column: 10, scope: !10595)
!10598 = !DILocation(line: 18, column: 11, scope: !10596)
!10599 = !DILocation(line: 14, column: 7, scope: !10596)
!10600 = !DILocation(line: 22, column: 1, scope: !10556)
!10601 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1852, file: !1852, line: 193, type: !10602, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1770, retainedNodes: !10611)
!10602 = !DISubroutineType(types: !10603)
!10603 = !{!118, !10604, !143, !22}
!10604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10605, size: 32)
!10605 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10606)
!10606 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1617, line: 37, baseType: !10607)
!10607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1617, line: 32, size: 64, elements: !10608)
!10608 = !{!10609, !10610}
!10609 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10607, file: !1617, line: 34, baseType: !156, size: 32)
!10610 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10607, file: !1617, line: 36, baseType: !156, size: 32, offset: 32)
!10611 = !{!10612, !10613, !10614, !10615, !10616, !10617, !10618, !10619, !10621}
!10612 = !DILocalVariable(name: "pins", arg: 1, scope: !10601, file: !1852, line: 193, type: !10604)
!10613 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10601, file: !1852, line: 193, type: !143)
!10614 = !DILocalVariable(name: "reg", arg: 3, scope: !10601, file: !1852, line: 194, type: !22)
!10615 = !DILocalVariable(name: "pin", scope: !10601, file: !1852, line: 196, type: !156)
!10616 = !DILocalVariable(name: "mux", scope: !10601, file: !1852, line: 196, type: !156)
!10617 = !DILocalVariable(name: "pin_cgf", scope: !10601, file: !1852, line: 197, type: !156)
!10618 = !DILocalVariable(name: "ret", scope: !10601, file: !1852, line: 198, type: !118)
!10619 = !DILocalVariable(name: "i", scope: !10620, file: !1852, line: 209, type: !143)
!10620 = distinct !DILexicalBlock(scope: !10601, file: !1852, line: 209, column: 2)
!10621 = !DILocalVariable(name: "gpio_out", scope: !10622, file: !1852, line: 239, type: !156)
!10622 = distinct !DILexicalBlock(scope: !10623, file: !1852, line: 238, column: 55)
!10623 = distinct !DILexicalBlock(scope: !10624, file: !1852, line: 238, column: 14)
!10624 = distinct !DILexicalBlock(scope: !10625, file: !1852, line: 236, column: 14)
!10625 = distinct !DILexicalBlock(scope: !10626, file: !1852, line: 234, column: 7)
!10626 = distinct !DILexicalBlock(scope: !10627, file: !1852, line: 209, column: 41)
!10627 = distinct !DILexicalBlock(scope: !10620, file: !1852, line: 209, column: 2)
!10628 = !DILocation(line: 0, scope: !10601)
!10629 = !DILocation(line: 0, scope: !10620)
!10630 = !DILocation(line: 209, column: 25, scope: !10627)
!10631 = !DILocation(line: 209, column: 2, scope: !10620)
!10632 = distinct !{!10632, !10631, !10633}
!10633 = !DILocation(line: 259, column: 2, scope: !10620)
!10634 = !DILocation(line: 210, column: 17, scope: !10626)
!10635 = !DILocation(line: 234, column: 7, scope: !10625)
!10636 = !DILocation(line: 234, column: 33, scope: !10625)
!10637 = !DILocation(line: 234, column: 7, scope: !10626)
!10638 = !DILocation(line: 235, column: 22, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10625, file: !1852, line: 234, column: 49)
!10640 = !DILocation(line: 235, column: 29, scope: !10639)
!10641 = !DILocation(line: 236, column: 3, scope: !10639)
!10642 = !DILocation(line: 236, column: 14, scope: !10625)
!10643 = !DILocation(line: 239, column: 32, scope: !10622)
!10644 = !DILocation(line: 0, scope: !10622)
!10645 = !DILocation(line: 241, column: 8, scope: !10622)
!10646 = !DILocation(line: 246, column: 3, scope: !10622)
!10647 = !DILocation(line: 252, column: 9, scope: !10626)
!10648 = !DILocation(line: 255, column: 9, scope: !10626)
!10649 = !DILocation(line: 256, column: 11, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10626, file: !1852, line: 256, column: 7)
!10651 = !DILocation(line: 209, column: 37, scope: !10627)
!10652 = !DILocation(line: 256, column: 7, scope: !10626)
!10653 = !DILocation(line: 262, column: 1, scope: !10601)
!10654 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1852, file: !1852, line: 176, type: !10655, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1770, retainedNodes: !10657)
!10655 = !DISubroutineType(types: !10656)
!10656 = !{!118, !156, !156, !156}
!10657 = !{!10658, !10659, !10660, !10661}
!10658 = !DILocalVariable(name: "pin", arg: 1, scope: !10654, file: !1852, line: 176, type: !156)
!10659 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10654, file: !1852, line: 176, type: !156)
!10660 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10654, file: !1852, line: 176, type: !156)
!10661 = !DILocalVariable(name: "port_device", scope: !10654, file: !1852, line: 178, type: !1782)
!10662 = !DILocation(line: 0, scope: !10654)
!10663 = !DILocation(line: 180, column: 22, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10654, file: !1852, line: 180, column: 6)
!10665 = !DILocation(line: 180, column: 6, scope: !10654)
!10666 = !DILocation(line: 180, column: 6, scope: !10664)
!10667 = !DILocation(line: 184, column: 16, scope: !10654)
!10668 = !DILocation(line: 186, column: 19, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10654, file: !1852, line: 186, column: 6)
!10670 = !DILocation(line: 186, column: 28, scope: !10669)
!10671 = !DILocation(line: 186, column: 33, scope: !10669)
!10672 = !DILocation(line: 186, column: 6, scope: !10654)
!10673 = !DILocation(line: 190, column: 43, scope: !10654)
!10674 = !DILocation(line: 190, column: 9, scope: !10654)
!10675 = !DILocation(line: 190, column: 2, scope: !10654)
!10676 = !DILocation(line: 191, column: 1, scope: !10654)
!10677 = distinct !DISubprogram(name: "device_is_ready", scope: !3373, file: !3373, line: 47, type: !10678, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1770, retainedNodes: !10680)
!10678 = !DISubroutineType(types: !10679)
!10679 = !{!146, !1782}
!10680 = !{!10681}
!10681 = !DILocalVariable(name: "dev", arg: 1, scope: !10677, file: !3373, line: 47, type: !1782)
!10682 = !DILocation(line: 0, scope: !10677)
!10683 = !DILocation(line: 55, column: 2, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10677, file: !3373, line: 55, column: 2)
!10685 = !{i64 2149461977}
!10686 = !DILocation(line: 56, column: 9, scope: !10677)
!10687 = !DILocation(line: 56, column: 2, scope: !10677)
!10688 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !130, file: !130, line: 730, type: !10678, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1770, retainedNodes: !10689)
!10689 = !{!10690}
!10690 = !DILocalVariable(name: "dev", arg: 1, scope: !10688, file: !130, line: 730, type: !1782)
!10691 = !DILocation(line: 0, scope: !10688)
!10692 = !DILocation(line: 732, column: 9, scope: !10688)
!10693 = !DILocation(line: 732, column: 2, scope: !10688)
!10694 = distinct !DISubprogram(name: "SystemInit", scope: !1901, file: !1901, line: 167, type: !365, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1860, retainedNodes: !2123)
!10695 = !DILocation(line: 182, column: 1, scope: !10694)
!10696 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1901, file: !1901, line: 220, type: !365, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1860, retainedNodes: !10697)
!10697 = !{!10698, !10699, !10700, !10701, !10702}
!10698 = !DILocalVariable(name: "tmp", scope: !10696, file: !1901, line: 222, type: !156)
!10699 = !DILocalVariable(name: "pllvco", scope: !10696, file: !1901, line: 222, type: !156)
!10700 = !DILocalVariable(name: "pllp", scope: !10696, file: !1901, line: 222, type: !156)
!10701 = !DILocalVariable(name: "pllsource", scope: !10696, file: !1901, line: 222, type: !156)
!10702 = !DILocalVariable(name: "pllm", scope: !10696, file: !1901, line: 222, type: !156)
!10703 = !DILocation(line: 0, scope: !10696)
!10704 = !DILocation(line: 225, column: 14, scope: !10696)
!10705 = !DILocation(line: 225, column: 19, scope: !10696)
!10706 = !DILocation(line: 227, column: 3, scope: !10696)
!10707 = !DILocation(line: 240, column: 25, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10696, file: !1901, line: 228, column: 3)
!10709 = !DILocation(line: 241, column: 19, scope: !10708)
!10710 = !DILocation(line: 241, column: 27, scope: !10708)
!10711 = !DILocation(line: 0, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10708, file: !1901, line: 243, column: 11)
!10713 = !DILocation(line: 254, column: 22, scope: !10708)
!10714 = !DILocation(line: 254, column: 62, scope: !10708)
!10715 = !DILocation(line: 255, column: 31, scope: !10708)
!10716 = !DILocation(line: 256, column: 7, scope: !10708)
!10717 = !DILocation(line: 0, scope: !10708)
!10718 = !DILocation(line: 263, column: 30, scope: !10696)
!10719 = !DILocation(line: 263, column: 52, scope: !10696)
!10720 = !DILocation(line: 263, column: 9, scope: !10696)
!10721 = !DILocation(line: 265, column: 19, scope: !10696)
!10722 = !DILocation(line: 266, column: 1, scope: !10696)
!10723 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !10724, file: !10724, line: 200, type: !10725, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2123)
!10724 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10725 = !DISubroutineType(types: !10726)
!10726 = !{!10727}
!10727 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2964, line: 44, baseType: !2963)
!10728 = !DILocation(line: 202, column: 3, scope: !10723)
!10729 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !10724, file: !10724, line: 219, type: !10730, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !10755)
!10730 = !DISubroutineType(types: !10731)
!10731 = !{!10727, !10732}
!10732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10733, size: 32)
!10733 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !10734, line: 70, baseType: !10735)
!10734 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10735 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10734, line: 49, size: 416, elements: !10736)
!10736 = !{!10737, !10738, !10739, !10740, !10741, !10742, !10743}
!10737 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !10735, file: !10734, line: 51, baseType: !156, size: 32)
!10738 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !10735, file: !10734, line: 54, baseType: !156, size: 32, offset: 32)
!10739 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !10735, file: !10734, line: 57, baseType: !156, size: 32, offset: 64)
!10740 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !10735, file: !10734, line: 60, baseType: !156, size: 32, offset: 96)
!10741 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !10735, file: !10734, line: 63, baseType: !156, size: 32, offset: 128)
!10742 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !10735, file: !10734, line: 66, baseType: !156, size: 32, offset: 160)
!10743 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !10735, file: !10734, line: 69, baseType: !10744, size: 224, offset: 192)
!10744 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !10745, line: 73, baseType: !10746)
!10745 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10746 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10745, line: 45, size: 224, elements: !10747)
!10747 = !{!10748, !10749, !10750, !10751, !10752, !10753, !10754}
!10748 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !10746, file: !10745, line: 47, baseType: !156, size: 32)
!10749 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !10746, file: !10745, line: 50, baseType: !156, size: 32, offset: 32)
!10750 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10746, file: !10745, line: 53, baseType: !156, size: 32, offset: 64)
!10751 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10746, file: !10745, line: 56, baseType: !156, size: 32, offset: 96)
!10752 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10746, file: !10745, line: 60, baseType: !156, size: 32, offset: 128)
!10753 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !10746, file: !10745, line: 63, baseType: !156, size: 32, offset: 160)
!10754 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !10746, file: !10745, line: 68, baseType: !156, size: 32, offset: 192)
!10755 = !{!10756, !10757, !10758, !10759, !10763}
!10756 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10729, file: !10724, line: 219, type: !10732)
!10757 = !DILocalVariable(name: "tickstart", scope: !10729, file: !10724, line: 221, type: !156)
!10758 = !DILocalVariable(name: "pll_config", scope: !10729, file: !10724, line: 221, type: !156)
!10759 = !DILocalVariable(name: "pwrclkchanged", scope: !10760, file: !10724, line: 391, type: !10762)
!10760 = distinct !DILexicalBlock(scope: !10761, file: !10724, line: 390, column: 3)
!10761 = distinct !DILexicalBlock(scope: !10729, file: !10724, line: 389, column: 6)
!10762 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !950, line: 188, baseType: !2970)
!10763 = !DILocalVariable(name: "tmpreg", scope: !10764, file: !10724, line: 400, type: !452)
!10764 = distinct !DILexicalBlock(scope: !10765, file: !10724, line: 400, column: 7)
!10765 = distinct !DILexicalBlock(scope: !10766, file: !10724, line: 399, column: 5)
!10766 = distinct !DILexicalBlock(scope: !10760, file: !10724, line: 398, column: 8)
!10767 = !DILocation(line: 0, scope: !10729)
!10768 = !DILocation(line: 224, column: 24, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10729, file: !10724, line: 224, column: 6)
!10770 = !DILocation(line: 224, column: 6, scope: !10729)
!10771 = !DILocation(line: 232, column: 27, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10729, file: !10724, line: 232, column: 6)
!10773 = !DILocation(line: 232, column: 43, scope: !10772)
!10774 = !DILocation(line: 232, column: 69, scope: !10772)
!10775 = !DILocation(line: 232, column: 6, scope: !10729)
!10776 = !DILocation(line: 237, column: 9, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10778, file: !10724, line: 237, column: 8)
!10778 = distinct !DILexicalBlock(scope: !10772, file: !10724, line: 233, column: 3)
!10779 = !DILocation(line: 237, column: 39, scope: !10777)
!10780 = !DILocation(line: 237, column: 60, scope: !10777)
!10781 = !DILocation(line: 238, column: 9, scope: !10777)
!10782 = !DILocation(line: 238, column: 39, scope: !10777)
!10783 = !DILocation(line: 238, column: 60, scope: !10777)
!10784 = !DILocation(line: 238, column: 70, scope: !10777)
!10785 = !DILocation(line: 238, column: 78, scope: !10777)
!10786 = !DILocation(line: 238, column: 100, scope: !10777)
!10787 = !DILocation(line: 237, column: 8, scope: !10778)
!10788 = !DILocation(line: 240, column: 11, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10790, file: !10724, line: 240, column: 10)
!10790 = distinct !DILexicalBlock(scope: !10777, file: !10724, line: 239, column: 5)
!10791 = !DILocation(line: 240, column: 57, scope: !10789)
!10792 = !DILocation(line: 240, column: 80, scope: !10789)
!10793 = !DILocation(line: 240, column: 89, scope: !10789)
!10794 = !DILocation(line: 240, column: 10, scope: !10790)
!10795 = !DILocation(line: 248, column: 7, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10797, file: !10724, line: 248, column: 7)
!10797 = distinct !DILexicalBlock(scope: !10798, file: !10724, line: 248, column: 7)
!10798 = distinct !DILexicalBlock(scope: !10777, file: !10724, line: 246, column: 5)
!10799 = !DILocation(line: 248, column: 7, scope: !10797)
!10800 = !DILocation(line: 248, column: 7, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10796, file: !10724, line: 248, column: 7)
!10802 = !DILocation(line: 248, column: 7, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10804, file: !10724, line: 248, column: 7)
!10804 = distinct !DILexicalBlock(scope: !10796, file: !10724, line: 248, column: 7)
!10805 = !DILocation(line: 248, column: 7, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10804, file: !10724, line: 248, column: 7)
!10807 = !DILocation(line: 0, scope: !10796)
!10808 = !DILocation(line: 251, column: 30, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10798, file: !10724, line: 251, column: 10)
!10810 = !DILocation(line: 251, column: 40, scope: !10809)
!10811 = !DILocation(line: 0, scope: !10809)
!10812 = !DILocation(line: 251, column: 10, scope: !10798)
!10813 = !DILocation(line: 257, column: 15, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10809, file: !10724, line: 252, column: 7)
!10815 = !DILocation(line: 257, column: 51, scope: !10814)
!10816 = !DILocation(line: 257, column: 9, scope: !10814)
!10817 = !DILocation(line: 259, column: 15, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10819, file: !10724, line: 259, column: 14)
!10819 = distinct !DILexicalBlock(scope: !10814, file: !10724, line: 258, column: 9)
!10820 = !DILocation(line: 259, column: 29, scope: !10818)
!10821 = !DILocation(line: 259, column: 43, scope: !10818)
!10822 = !DILocation(line: 259, column: 14, scope: !10819)
!10823 = distinct !{!10823, !10816, !10824}
!10824 = !DILocation(line: 263, column: 9, scope: !10814)
!10825 = !DILocation(line: 271, column: 15, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10809, file: !10724, line: 266, column: 7)
!10827 = !DILocation(line: 271, column: 9, scope: !10826)
!10828 = !DILocation(line: 273, column: 15, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10830, file: !10724, line: 273, column: 14)
!10830 = distinct !DILexicalBlock(scope: !10826, file: !10724, line: 272, column: 9)
!10831 = !DILocation(line: 273, column: 29, scope: !10829)
!10832 = !DILocation(line: 273, column: 43, scope: !10829)
!10833 = !DILocation(line: 273, column: 14, scope: !10830)
!10834 = distinct !{!10834, !10827, !10835}
!10835 = !DILocation(line: 277, column: 9, scope: !10826)
!10836 = !DILocation(line: 282, column: 27, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10729, file: !10724, line: 282, column: 6)
!10838 = !DILocation(line: 282, column: 43, scope: !10837)
!10839 = !DILocation(line: 282, column: 69, scope: !10837)
!10840 = !DILocation(line: 282, column: 6, scope: !10729)
!10841 = !DILocation(line: 289, column: 9, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10843, file: !10724, line: 289, column: 8)
!10843 = distinct !DILexicalBlock(scope: !10837, file: !10724, line: 283, column: 3)
!10844 = !DILocation(line: 289, column: 39, scope: !10842)
!10845 = !DILocation(line: 289, column: 60, scope: !10842)
!10846 = !DILocation(line: 290, column: 9, scope: !10842)
!10847 = !DILocation(line: 290, column: 39, scope: !10842)
!10848 = !DILocation(line: 290, column: 60, scope: !10842)
!10849 = !DILocation(line: 290, column: 70, scope: !10842)
!10850 = !DILocation(line: 290, column: 78, scope: !10842)
!10851 = !DILocation(line: 290, column: 100, scope: !10842)
!10852 = !DILocation(line: 289, column: 8, scope: !10843)
!10853 = !DILocation(line: 293, column: 11, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10855, file: !10724, line: 293, column: 10)
!10855 = distinct !DILexicalBlock(scope: !10842, file: !10724, line: 291, column: 5)
!10856 = !DILocation(line: 293, column: 57, scope: !10854)
!10857 = !DILocation(line: 293, column: 80, scope: !10854)
!10858 = !DILocation(line: 293, column: 89, scope: !10854)
!10859 = !DILocation(line: 293, column: 10, scope: !10855)
!10860 = !DILocation(line: 307, column: 30, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !10862, file: !10724, line: 307, column: 10)
!10862 = distinct !DILexicalBlock(scope: !10842, file: !10724, line: 305, column: 5)
!10863 = !DILocation(line: 307, column: 39, scope: !10861)
!10864 = !DILocation(line: 307, column: 10, scope: !10862)
!10865 = !DILocation(line: 310, column: 9, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10861, file: !10724, line: 308, column: 7)
!10867 = !DILocation(line: 313, column: 21, scope: !10866)
!10868 = !DILocation(line: 316, column: 9, scope: !10866)
!10869 = !DILocation(line: 316, column: 15, scope: !10866)
!10870 = !DILocation(line: 316, column: 51, scope: !10866)
!10871 = !DILocation(line: 318, column: 15, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10873, file: !10724, line: 318, column: 14)
!10873 = distinct !DILexicalBlock(scope: !10866, file: !10724, line: 317, column: 9)
!10874 = !DILocation(line: 318, column: 29, scope: !10872)
!10875 = !DILocation(line: 318, column: 43, scope: !10872)
!10876 = !DILocation(line: 318, column: 14, scope: !10873)
!10877 = distinct !{!10877, !10868, !10878}
!10878 = !DILocation(line: 322, column: 9, scope: !10866)
!10879 = !DILocation(line: 330, column: 9, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10861, file: !10724, line: 328, column: 7)
!10881 = !DILocation(line: 333, column: 21, scope: !10880)
!10882 = !DILocation(line: 336, column: 9, scope: !10880)
!10883 = !DILocation(line: 336, column: 15, scope: !10880)
!10884 = !DILocation(line: 338, column: 15, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !10886, file: !10724, line: 338, column: 14)
!10886 = distinct !DILexicalBlock(scope: !10880, file: !10724, line: 337, column: 9)
!10887 = !DILocation(line: 338, column: 29, scope: !10885)
!10888 = !DILocation(line: 338, column: 43, scope: !10885)
!10889 = !DILocation(line: 338, column: 14, scope: !10886)
!10890 = distinct !{!10890, !10882, !10891}
!10891 = !DILocation(line: 342, column: 9, scope: !10880)
!10892 = !DILocation(line: 0, scope: !10842)
!10893 = !DILocation(line: 347, column: 27, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10729, file: !10724, line: 347, column: 6)
!10895 = !DILocation(line: 347, column: 43, scope: !10894)
!10896 = !DILocation(line: 347, column: 69, scope: !10894)
!10897 = !DILocation(line: 347, column: 6, scope: !10729)
!10898 = !DILocation(line: 353, column: 28, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10900, file: !10724, line: 353, column: 8)
!10900 = distinct !DILexicalBlock(scope: !10894, file: !10724, line: 348, column: 3)
!10901 = !DILocation(line: 353, column: 37, scope: !10899)
!10902 = !DILocation(line: 353, column: 8, scope: !10900)
!10903 = !DILocation(line: 356, column: 7, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10899, file: !10724, line: 354, column: 5)
!10905 = !DILocation(line: 359, column: 19, scope: !10904)
!10906 = !DILocation(line: 362, column: 7, scope: !10904)
!10907 = !DILocation(line: 362, column: 13, scope: !10904)
!10908 = !DILocation(line: 362, column: 49, scope: !10904)
!10909 = !DILocation(line: 364, column: 13, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10911, file: !10724, line: 364, column: 12)
!10911 = distinct !DILexicalBlock(scope: !10904, file: !10724, line: 363, column: 7)
!10912 = !DILocation(line: 364, column: 27, scope: !10910)
!10913 = !DILocation(line: 364, column: 41, scope: !10910)
!10914 = !DILocation(line: 364, column: 12, scope: !10911)
!10915 = distinct !{!10915, !10906, !10916}
!10916 = !DILocation(line: 368, column: 7, scope: !10904)
!10917 = !DILocation(line: 373, column: 7, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10899, file: !10724, line: 371, column: 5)
!10919 = !DILocation(line: 376, column: 19, scope: !10918)
!10920 = !DILocation(line: 379, column: 7, scope: !10918)
!10921 = !DILocation(line: 379, column: 13, scope: !10918)
!10922 = !DILocation(line: 381, column: 13, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10924, file: !10724, line: 381, column: 12)
!10924 = distinct !DILexicalBlock(scope: !10918, file: !10724, line: 380, column: 7)
!10925 = !DILocation(line: 381, column: 27, scope: !10923)
!10926 = !DILocation(line: 381, column: 41, scope: !10923)
!10927 = !DILocation(line: 381, column: 12, scope: !10924)
!10928 = distinct !{!10928, !10920, !10929}
!10929 = !DILocation(line: 385, column: 7, scope: !10918)
!10930 = !DILocation(line: 389, column: 27, scope: !10761)
!10931 = !DILocation(line: 389, column: 43, scope: !10761)
!10932 = !DILocation(line: 389, column: 69, scope: !10761)
!10933 = !DILocation(line: 389, column: 6, scope: !10729)
!10934 = !DILocation(line: 0, scope: !10760)
!10935 = !DILocation(line: 398, column: 8, scope: !10766)
!10936 = !DILocation(line: 398, column: 8, scope: !10760)
!10937 = !DILocation(line: 400, column: 7, scope: !10764)
!10938 = !DILocation(line: 400, column: 7, scope: !10765)
!10939 = !DILocation(line: 402, column: 5, scope: !10765)
!10940 = !DILocation(line: 404, column: 8, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10760, file: !10724, line: 404, column: 8)
!10942 = !DILocation(line: 404, column: 8, scope: !10760)
!10943 = !DILocation(line: 407, column: 7, scope: !10944)
!10944 = distinct !DILexicalBlock(scope: !10941, file: !10724, line: 405, column: 5)
!10945 = !DILocation(line: 410, column: 19, scope: !10944)
!10946 = !DILocation(line: 412, column: 7, scope: !10944)
!10947 = !DILocation(line: 412, column: 13, scope: !10944)
!10948 = !DILocation(line: 414, column: 13, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10950, file: !10724, line: 414, column: 12)
!10950 = distinct !DILexicalBlock(scope: !10944, file: !10724, line: 413, column: 7)
!10951 = !DILocation(line: 414, column: 27, scope: !10949)
!10952 = !DILocation(line: 414, column: 40, scope: !10949)
!10953 = !DILocation(line: 414, column: 12, scope: !10950)
!10954 = distinct !{!10954, !10946, !10955}
!10955 = !DILocation(line: 418, column: 7, scope: !10944)
!10956 = !DILocation(line: 422, column: 5, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10958, file: !10724, line: 422, column: 5)
!10958 = distinct !DILexicalBlock(scope: !10760, file: !10724, line: 422, column: 5)
!10959 = !DILocation(line: 422, column: 5, scope: !10958)
!10960 = !DILocation(line: 422, column: 5, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10957, file: !10724, line: 422, column: 5)
!10962 = !DILocation(line: 422, column: 5, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10964, file: !10724, line: 422, column: 5)
!10964 = distinct !DILexicalBlock(scope: !10957, file: !10724, line: 422, column: 5)
!10965 = !DILocation(line: 422, column: 5, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10964, file: !10724, line: 422, column: 5)
!10967 = !DILocation(line: 0, scope: !10957)
!10968 = !DILocation(line: 424, column: 28, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10760, file: !10724, line: 424, column: 8)
!10970 = !DILocation(line: 424, column: 38, scope: !10969)
!10971 = !DILocation(line: 0, scope: !10969)
!10972 = !DILocation(line: 424, column: 8, scope: !10760)
!10973 = !DILocation(line: 430, column: 13, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10969, file: !10724, line: 425, column: 5)
!10975 = !DILocation(line: 430, column: 49, scope: !10974)
!10976 = !DILocation(line: 430, column: 7, scope: !10974)
!10977 = !DILocation(line: 432, column: 13, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !10979, file: !10724, line: 432, column: 12)
!10979 = distinct !DILexicalBlock(scope: !10974, file: !10724, line: 431, column: 7)
!10980 = !DILocation(line: 432, column: 27, scope: !10978)
!10981 = !DILocation(line: 432, column: 41, scope: !10978)
!10982 = !DILocation(line: 432, column: 12, scope: !10979)
!10983 = distinct !{!10983, !10976, !10984}
!10984 = !DILocation(line: 436, column: 7, scope: !10974)
!10985 = !DILocation(line: 444, column: 13, scope: !10986)
!10986 = distinct !DILexicalBlock(scope: !10969, file: !10724, line: 439, column: 5)
!10987 = !DILocation(line: 444, column: 7, scope: !10986)
!10988 = !DILocation(line: 446, column: 13, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10990, file: !10724, line: 446, column: 12)
!10990 = distinct !DILexicalBlock(scope: !10986, file: !10724, line: 445, column: 7)
!10991 = !DILocation(line: 446, column: 27, scope: !10989)
!10992 = !DILocation(line: 446, column: 41, scope: !10989)
!10993 = !DILocation(line: 446, column: 12, scope: !10990)
!10994 = distinct !{!10994, !10987, !10995}
!10995 = !DILocation(line: 450, column: 7, scope: !10986)
!10996 = !DILocation(line: 454, column: 8, scope: !10760)
!10997 = !DILocation(line: 456, column: 7, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10999, file: !10724, line: 455, column: 5)
!10999 = distinct !DILexicalBlock(scope: !10760, file: !10724, line: 454, column: 8)
!11000 = !DILocation(line: 457, column: 5, scope: !10998)
!11001 = !DILocation(line: 462, column: 31, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10729, file: !10724, line: 462, column: 7)
!11003 = !DILocation(line: 462, column: 41, scope: !11002)
!11004 = !DILocation(line: 462, column: 7, scope: !10729)
!11005 = !DILocation(line: 465, column: 8, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !11007, file: !10724, line: 465, column: 8)
!11007 = distinct !DILexicalBlock(scope: !11002, file: !10724, line: 463, column: 3)
!11008 = !DILocation(line: 465, column: 38, scope: !11006)
!11009 = !DILocation(line: 465, column: 8, scope: !11007)
!11010 = !DILocation(line: 467, column: 44, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !11012, file: !10724, line: 467, column: 10)
!11012 = distinct !DILexicalBlock(scope: !11006, file: !10724, line: 466, column: 5)
!11013 = !DILocation(line: 0, scope: !11011)
!11014 = !DILocation(line: 467, column: 10, scope: !11012)
!11015 = !DILocation(line: 483, column: 15, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11011, file: !10724, line: 468, column: 7)
!11017 = !DILocation(line: 483, column: 9, scope: !11016)
!11018 = !DILocation(line: 485, column: 15, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !11020, file: !10724, line: 485, column: 14)
!11020 = distinct !DILexicalBlock(scope: !11016, file: !10724, line: 484, column: 9)
!11021 = !DILocation(line: 485, column: 29, scope: !11019)
!11022 = !DILocation(line: 485, column: 43, scope: !11019)
!11023 = !DILocation(line: 485, column: 14, scope: !11020)
!11024 = distinct !{!11024, !11017, !11025}
!11025 = !DILocation(line: 489, column: 9, scope: !11016)
!11026 = !DILocation(line: 492, column: 9, scope: !11016)
!11027 = !DILocation(line: 498, column: 9, scope: !11016)
!11028 = !DILocation(line: 501, column: 21, scope: !11016)
!11029 = !DILocation(line: 504, column: 9, scope: !11016)
!11030 = !DILocation(line: 504, column: 15, scope: !11016)
!11031 = !DILocation(line: 504, column: 51, scope: !11016)
!11032 = !DILocation(line: 506, column: 15, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11034, file: !10724, line: 506, column: 14)
!11034 = distinct !DILexicalBlock(scope: !11016, file: !10724, line: 505, column: 9)
!11035 = !DILocation(line: 506, column: 29, scope: !11033)
!11036 = !DILocation(line: 506, column: 43, scope: !11033)
!11037 = !DILocation(line: 506, column: 14, scope: !11034)
!11038 = distinct !{!11038, !11029, !11039}
!11039 = !DILocation(line: 510, column: 9, scope: !11016)
!11040 = !DILocation(line: 521, column: 15, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11011, file: !10724, line: 513, column: 7)
!11042 = !DILocation(line: 521, column: 9, scope: !11041)
!11043 = !DILocation(line: 523, column: 15, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !11045, file: !10724, line: 523, column: 14)
!11045 = distinct !DILexicalBlock(scope: !11041, file: !10724, line: 522, column: 9)
!11046 = !DILocation(line: 523, column: 29, scope: !11044)
!11047 = !DILocation(line: 523, column: 43, scope: !11044)
!11048 = !DILocation(line: 523, column: 14, scope: !11045)
!11049 = distinct !{!11049, !11042, !11050}
!11050 = !DILocation(line: 527, column: 9, scope: !11041)
!11051 = !DILocation(line: 533, column: 44, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !11053, file: !10724, line: 533, column: 10)
!11053 = distinct !DILexicalBlock(scope: !11006, file: !10724, line: 531, column: 5)
!11054 = !DILocation(line: 533, column: 10, scope: !11053)
!11055 = !DILocation(line: 540, column: 27, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11052, file: !10724, line: 538, column: 7)
!11057 = !DILocation(line: 543, column: 14, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11056, file: !10724, line: 542, column: 13)
!11059 = !DILocation(line: 543, column: 81, scope: !11058)
!11060 = !DILocation(line: 543, column: 55, scope: !11058)
!11061 = !DILocation(line: 543, column: 92, scope: !11058)
!11062 = !DILocation(line: 544, column: 14, scope: !11058)
!11063 = !DILocation(line: 544, column: 80, scope: !11058)
!11064 = !DILocation(line: 544, column: 53, scope: !11058)
!11065 = !DILocation(line: 544, column: 111, scope: !11058)
!11066 = !DILocation(line: 545, column: 14, scope: !11058)
!11067 = !DILocation(line: 545, column: 80, scope: !11058)
!11068 = !DILocation(line: 545, column: 86, scope: !11058)
!11069 = !DILocation(line: 545, column: 53, scope: !11058)
!11070 = !DILocation(line: 545, column: 111, scope: !11058)
!11071 = !DILocation(line: 546, column: 14, scope: !11058)
!11072 = !DILocation(line: 546, column: 82, scope: !11058)
!11073 = !DILocation(line: 546, column: 101, scope: !11058)
!11074 = !DILocation(line: 546, column: 53, scope: !11058)
!11075 = !DILocation(line: 546, column: 126, scope: !11058)
!11076 = !DILocation(line: 547, column: 14, scope: !11058)
!11077 = !DILocation(line: 547, column: 80, scope: !11058)
!11078 = !DILocation(line: 547, column: 85, scope: !11058)
!11079 = !DILocation(line: 547, column: 53, scope: !11058)
!11080 = !DILocation(line: 547, column: 111, scope: !11058)
!11081 = !DILocation(line: 548, column: 14, scope: !11058)
!11082 = !DILocation(line: 548, column: 80, scope: !11058)
!11083 = !DILocation(line: 548, column: 85, scope: !11058)
!11084 = !DILocation(line: 548, column: 53, scope: !11058)
!11085 = !DILocation(line: 542, column: 13, scope: !11056)
!11086 = !DILocation(line: 563, column: 3, scope: !10729)
!11087 = !DILocation(line: 564, column: 1, scope: !10729)
!11088 = !DISubprogram(name: "HAL_GetTick", scope: !11089, file: !11089, line: 234, type: !6433, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2123)
!11089 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11090 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !10724, file: !10724, line: 591, type: !11091, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !11102)
!11091 = !DISubroutineType(types: !11092)
!11092 = !{!10727, !11093, !156}
!11093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11094, size: 32)
!11094 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !10734, line: 92, baseType: !11095)
!11095 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10734, line: 75, size: 160, elements: !11096)
!11096 = !{!11097, !11098, !11099, !11100, !11101}
!11097 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11095, file: !10734, line: 77, baseType: !156, size: 32)
!11098 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11095, file: !10734, line: 80, baseType: !156, size: 32, offset: 32)
!11099 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11095, file: !10734, line: 83, baseType: !156, size: 32, offset: 64)
!11100 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11095, file: !10734, line: 86, baseType: !156, size: 32, offset: 96)
!11101 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11095, file: !10734, line: 89, baseType: !156, size: 32, offset: 128)
!11102 = !{!11103, !11104, !11105}
!11103 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11090, file: !10724, line: 591, type: !11093)
!11104 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11090, file: !10724, line: 591, type: !156)
!11105 = !DILocalVariable(name: "tickstart", scope: !11090, file: !10724, line: 593, type: !156)
!11106 = !DILocation(line: 0, scope: !11090)
!11107 = !DILocation(line: 596, column: 24, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11090, file: !10724, line: 596, column: 6)
!11109 = !DILocation(line: 596, column: 6, scope: !11090)
!11110 = !DILocation(line: 610, column: 17, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11090, file: !10724, line: 610, column: 6)
!11112 = !DILocation(line: 610, column: 15, scope: !11111)
!11113 = !DILocation(line: 610, column: 6, scope: !11090)
!11114 = !DILocation(line: 613, column: 5, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11111, file: !10724, line: 611, column: 3)
!11116 = !DILocation(line: 617, column: 8, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11115, file: !10724, line: 617, column: 8)
!11118 = !DILocation(line: 617, column: 34, scope: !11117)
!11119 = !DILocation(line: 617, column: 8, scope: !11115)
!11120 = !DILocation(line: 624, column: 27, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11090, file: !10724, line: 624, column: 6)
!11122 = !DILocation(line: 624, column: 38, scope: !11121)
!11123 = !DILocation(line: 624, column: 60, scope: !11121)
!11124 = !DILocation(line: 624, column: 6, scope: !11090)
!11125 = !DILocation(line: 628, column: 40, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11127, file: !10724, line: 628, column: 8)
!11127 = distinct !DILexicalBlock(scope: !11121, file: !10724, line: 625, column: 3)
!11128 = !DILocation(line: 628, column: 63, scope: !11126)
!11129 = !DILocation(line: 628, column: 8, scope: !11127)
!11130 = !DILocation(line: 630, column: 7, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11126, file: !10724, line: 629, column: 5)
!11132 = !DILocation(line: 633, column: 29, scope: !11133)
!11133 = distinct !DILexicalBlock(scope: !11127, file: !10724, line: 633, column: 8)
!11134 = !DILocation(line: 631, column: 5, scope: !11131)
!11135 = !DILocation(line: 633, column: 40, scope: !11133)
!11136 = !DILocation(line: 633, column: 63, scope: !11133)
!11137 = !DILocation(line: 633, column: 8, scope: !11127)
!11138 = !DILocation(line: 635, column: 7, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11133, file: !10724, line: 634, column: 5)
!11140 = !DILocation(line: 636, column: 5, scope: !11139)
!11141 = !DILocation(line: 639, column: 5, scope: !11127)
!11142 = !DILocation(line: 643, column: 27, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11090, file: !10724, line: 643, column: 6)
!11144 = !DILocation(line: 640, column: 3, scope: !11127)
!11145 = !DILocation(line: 643, column: 38, scope: !11143)
!11146 = !DILocation(line: 643, column: 62, scope: !11143)
!11147 = !DILocation(line: 643, column: 6, scope: !11090)
!11148 = !DILocation(line: 648, column: 27, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11150, file: !10724, line: 648, column: 8)
!11150 = distinct !DILexicalBlock(scope: !11143, file: !10724, line: 644, column: 3)
!11151 = !DILocation(line: 648, column: 8, scope: !11150)
!11152 = !DILocation(line: 651, column: 10, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11154, file: !10724, line: 651, column: 10)
!11154 = distinct !DILexicalBlock(scope: !11149, file: !10724, line: 649, column: 5)
!11155 = !DILocation(line: 651, column: 46, scope: !11153)
!11156 = !DILocation(line: 651, column: 10, scope: !11154)
!11157 = !DILocation(line: 661, column: 10, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11159, file: !10724, line: 661, column: 10)
!11159 = distinct !DILexicalBlock(scope: !11160, file: !10724, line: 659, column: 5)
!11160 = distinct !DILexicalBlock(scope: !11149, file: !10724, line: 657, column: 13)
!11161 = !DILocation(line: 661, column: 46, scope: !11158)
!11162 = !DILocation(line: 661, column: 10, scope: !11159)
!11163 = !DILocation(line: 670, column: 10, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11165, file: !10724, line: 670, column: 10)
!11165 = distinct !DILexicalBlock(scope: !11160, file: !10724, line: 668, column: 5)
!11166 = !DILocation(line: 670, column: 46, scope: !11164)
!11167 = !DILocation(line: 670, column: 10, scope: !11165)
!11168 = !DILocation(line: 676, column: 5, scope: !11150)
!11169 = !DILocation(line: 679, column: 17, scope: !11150)
!11170 = !DILocation(line: 681, column: 5, scope: !11150)
!11171 = !DILocation(line: 681, column: 12, scope: !11150)
!11172 = !DILocation(line: 681, column: 65, scope: !11150)
!11173 = !DILocation(line: 681, column: 78, scope: !11150)
!11174 = !DILocation(line: 681, column: 42, scope: !11150)
!11175 = !DILocation(line: 683, column: 12, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11177, file: !10724, line: 683, column: 11)
!11177 = distinct !DILexicalBlock(scope: !11150, file: !10724, line: 682, column: 5)
!11178 = !DILocation(line: 683, column: 26, scope: !11176)
!11179 = !DILocation(line: 683, column: 39, scope: !11176)
!11180 = !DILocation(line: 683, column: 11, scope: !11177)
!11181 = distinct !{!11181, !11170, !11182}
!11182 = !DILocation(line: 687, column: 5, scope: !11150)
!11183 = !DILocation(line: 691, column: 17, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11090, file: !10724, line: 691, column: 6)
!11185 = !DILocation(line: 691, column: 15, scope: !11184)
!11186 = !DILocation(line: 691, column: 6, scope: !11090)
!11187 = !DILocation(line: 694, column: 5, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11184, file: !10724, line: 692, column: 3)
!11189 = !DILocation(line: 698, column: 8, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11188, file: !10724, line: 698, column: 8)
!11191 = !DILocation(line: 698, column: 34, scope: !11190)
!11192 = !DILocation(line: 698, column: 8, scope: !11188)
!11193 = !DILocation(line: 705, column: 27, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11090, file: !10724, line: 705, column: 6)
!11195 = !DILocation(line: 705, column: 38, scope: !11194)
!11196 = !DILocation(line: 705, column: 61, scope: !11194)
!11197 = !DILocation(line: 705, column: 6, scope: !11090)
!11198 = !DILocation(line: 708, column: 5, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11194, file: !10724, line: 706, column: 3)
!11200 = !DILocation(line: 712, column: 27, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !11090, file: !10724, line: 712, column: 6)
!11202 = !DILocation(line: 709, column: 3, scope: !11199)
!11203 = !DILocation(line: 712, column: 38, scope: !11201)
!11204 = !DILocation(line: 712, column: 61, scope: !11201)
!11205 = !DILocation(line: 712, column: 6, scope: !11090)
!11206 = !DILocation(line: 715, column: 5, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11201, file: !10724, line: 713, column: 3)
!11208 = !DILocation(line: 716, column: 3, scope: !11207)
!11209 = !DILocation(line: 719, column: 21, scope: !11090)
!11210 = !DILocation(line: 719, column: 70, scope: !11090)
!11211 = !DILocation(line: 719, column: 91, scope: !11090)
!11212 = !DILocation(line: 719, column: 50, scope: !11090)
!11213 = !DILocation(line: 719, column: 47, scope: !11090)
!11214 = !DILocation(line: 719, column: 19, scope: !11090)
!11215 = !DILocation(line: 722, column: 17, scope: !11090)
!11216 = !DILocation(line: 722, column: 3, scope: !11090)
!11217 = !DILocation(line: 724, column: 3, scope: !11090)
!11218 = !DILocation(line: 725, column: 1, scope: !11090)
!11219 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !10724, file: !10724, line: 885, type: !6433, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !11220)
!11220 = !{!11221, !11222, !11223, !11224}
!11221 = !DILocalVariable(name: "pllm", scope: !11219, file: !10724, line: 887, type: !156)
!11222 = !DILocalVariable(name: "pllvco", scope: !11219, file: !10724, line: 887, type: !156)
!11223 = !DILocalVariable(name: "pllp", scope: !11219, file: !10724, line: 887, type: !156)
!11224 = !DILocalVariable(name: "sysclockfreq", scope: !11219, file: !10724, line: 888, type: !156)
!11225 = !DILocation(line: 0, scope: !11219)
!11226 = !DILocation(line: 891, column: 16, scope: !11219)
!11227 = !DILocation(line: 891, column: 21, scope: !11219)
!11228 = !DILocation(line: 891, column: 3, scope: !11219)
!11229 = !DILocation(line: 907, column: 19, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11231, file: !10724, line: 904, column: 5)
!11231 = distinct !DILexicalBlock(scope: !11219, file: !10724, line: 892, column: 3)
!11232 = !DILocation(line: 907, column: 27, scope: !11230)
!11233 = !DILocation(line: 908, column: 10, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11230, file: !10724, line: 908, column: 10)
!11235 = !DILocation(line: 0, scope: !11234)
!11236 = !DILocation(line: 918, column: 23, scope: !11230)
!11237 = !DILocation(line: 918, column: 82, scope: !11230)
!11238 = !DILocation(line: 920, column: 28, scope: !11230)
!11239 = !DILocation(line: 921, column: 7, scope: !11230)
!11240 = !DILocation(line: 0, scope: !11231)
!11241 = !DILocation(line: 929, column: 3, scope: !11219)
!11242 = !DISubprogram(name: "HAL_InitTick", scope: !11089, file: !11089, line: 223, type: !11243, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2123)
!11243 = !DISubroutineType(types: !11244)
!11244 = !{!10727, !156}
!11245 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !10724, file: !10724, line: 775, type: !11246, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !11248)
!11246 = !DISubroutineType(types: !11247)
!11247 = !{null, !156, !156, !156}
!11248 = !{!11249, !11250, !11251, !11252, !11262}
!11249 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11245, file: !10724, line: 775, type: !156)
!11250 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11245, file: !10724, line: 775, type: !156)
!11251 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11245, file: !10724, line: 775, type: !156)
!11252 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11245, file: !10724, line: 777, type: !11253)
!11253 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11254, line: 62, baseType: !11255)
!11254 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11255 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11254, line: 46, size: 160, elements: !11256)
!11256 = !{!11257, !11258, !11259, !11260, !11261}
!11257 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11255, file: !11254, line: 48, baseType: !156, size: 32)
!11258 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11255, file: !11254, line: 51, baseType: !156, size: 32, offset: 32)
!11259 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11255, file: !11254, line: 54, baseType: !156, size: 32, offset: 64)
!11260 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11255, file: !11254, line: 57, baseType: !156, size: 32, offset: 96)
!11261 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11255, file: !11254, line: 60, baseType: !156, size: 32, offset: 128)
!11262 = !DILocalVariable(name: "tmpreg", scope: !11263, file: !10724, line: 787, type: !452)
!11263 = distinct !DILexicalBlock(scope: !11264, file: !10724, line: 787, column: 5)
!11264 = distinct !DILexicalBlock(scope: !11265, file: !10724, line: 783, column: 3)
!11265 = distinct !DILexicalBlock(scope: !11245, file: !10724, line: 782, column: 6)
!11266 = !DILocation(line: 0, scope: !11245)
!11267 = !DILocation(line: 777, column: 3, scope: !11245)
!11268 = !DILocation(line: 777, column: 20, scope: !11245)
!11269 = !DILocation(line: 782, column: 15, scope: !11265)
!11270 = !DILocation(line: 782, column: 6, scope: !11245)
!11271 = !DILocation(line: 787, column: 5, scope: !11263)
!11272 = !DILocation(line: 787, column: 5, scope: !11264)
!11273 = !DILocation(line: 790, column: 21, scope: !11264)
!11274 = !DILocation(line: 790, column: 25, scope: !11264)
!11275 = !DILocation(line: 791, column: 21, scope: !11264)
!11276 = !DILocation(line: 791, column: 26, scope: !11264)
!11277 = !DILocation(line: 792, column: 21, scope: !11264)
!11278 = !DILocation(line: 792, column: 27, scope: !11264)
!11279 = !DILocation(line: 793, column: 21, scope: !11264)
!11280 = !DILocation(line: 793, column: 26, scope: !11264)
!11281 = !DILocation(line: 794, column: 21, scope: !11264)
!11282 = !DILocation(line: 794, column: 31, scope: !11264)
!11283 = !DILocation(line: 795, column: 5, scope: !11264)
!11284 = !DILocation(line: 798, column: 5, scope: !11264)
!11285 = !DILocation(line: 804, column: 3, scope: !11264)
!11286 = !DILocation(line: 830, column: 1, scope: !11245)
!11287 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11254, file: !11254, line: 224, type: !11288, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2123)
!11288 = !DISubroutineType(types: !11289)
!11289 = !{null, !3032, !11290}
!11290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11253, size: 32)
!11291 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !10724, file: !10724, line: 841, type: !365, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2123)
!11292 = !DILocation(line: 843, column: 38, scope: !11291)
!11293 = !DILocation(line: 844, column: 1, scope: !11291)
!11294 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !10724, file: !10724, line: 850, type: !365, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2123)
!11295 = !DILocation(line: 852, column: 38, scope: !11294)
!11296 = !DILocation(line: 853, column: 1, scope: !11294)
!11297 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !10724, file: !10724, line: 941, type: !6433, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2123)
!11298 = !DILocation(line: 943, column: 10, scope: !11297)
!11299 = !DILocation(line: 943, column: 3, scope: !11297)
!11300 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !10724, file: !10724, line: 952, type: !6433, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2123)
!11301 = !DILocation(line: 955, column: 11, scope: !11300)
!11302 = !DILocation(line: 955, column: 56, scope: !11300)
!11303 = !DILocation(line: 955, column: 78, scope: !11300)
!11304 = !DILocation(line: 955, column: 36, scope: !11300)
!11305 = !DILocation(line: 955, column: 33, scope: !11300)
!11306 = !DILocation(line: 955, column: 3, scope: !11300)
!11307 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !10724, file: !10724, line: 964, type: !6433, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2123)
!11308 = !DILocation(line: 967, column: 11, scope: !11307)
!11309 = !DILocation(line: 967, column: 55, scope: !11307)
!11310 = !DILocation(line: 967, column: 77, scope: !11307)
!11311 = !DILocation(line: 967, column: 35, scope: !11307)
!11312 = !DILocation(line: 967, column: 32, scope: !11307)
!11313 = !DILocation(line: 967, column: 3, scope: !11307)
!11314 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !10724, file: !10724, line: 977, type: !11315, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !11317)
!11315 = !DISubroutineType(types: !11316)
!11316 = !{null, !10732}
!11317 = !{!11318}
!11318 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11314, file: !10724, line: 977, type: !10732)
!11319 = !DILocation(line: 0, scope: !11314)
!11320 = !DILocation(line: 980, column: 22, scope: !11314)
!11321 = !DILocation(line: 980, column: 37, scope: !11314)
!11322 = !DILocation(line: 983, column: 12, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11314, file: !10724, line: 983, column: 6)
!11324 = !DILocation(line: 983, column: 15, scope: !11323)
!11325 = !DILocation(line: 983, column: 31, scope: !11323)
!11326 = !DILocation(line: 983, column: 6, scope: !11314)
!11327 = !DILocation(line: 985, column: 24, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11323, file: !10724, line: 984, column: 3)
!11329 = !DILocation(line: 985, column: 33, scope: !11328)
!11330 = !DILocation(line: 986, column: 3, scope: !11328)
!11331 = !DILocation(line: 987, column: 17, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11323, file: !10724, line: 987, column: 11)
!11333 = !DILocation(line: 987, column: 20, scope: !11332)
!11334 = !DILocation(line: 987, column: 35, scope: !11332)
!11335 = !DILocation(line: 0, scope: !11332)
!11336 = !DILocation(line: 987, column: 11, scope: !11323)
!11337 = !DILocation(line: 989, column: 33, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11332, file: !10724, line: 988, column: 3)
!11339 = !DILocation(line: 990, column: 3, scope: !11338)
!11340 = !DILocation(line: 993, column: 33, scope: !11341)
!11341 = distinct !DILexicalBlock(scope: !11332, file: !10724, line: 992, column: 3)
!11342 = !DILocation(line: 997, column: 12, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11314, file: !10724, line: 997, column: 6)
!11344 = !DILocation(line: 997, column: 15, scope: !11343)
!11345 = !DILocation(line: 1003, column: 24, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11343, file: !10724, line: 1002, column: 3)
!11347 = !DILocation(line: 1003, column: 33, scope: !11346)
!11348 = !DILocation(line: 1006, column: 61, scope: !11314)
!11349 = !DILocation(line: 1006, column: 81, scope: !11314)
!11350 = !DILocation(line: 1006, column: 22, scope: !11314)
!11351 = !DILocation(line: 1006, column: 42, scope: !11314)
!11352 = !DILocation(line: 1009, column: 12, scope: !11353)
!11353 = distinct !DILexicalBlock(scope: !11314, file: !10724, line: 1009, column: 6)
!11354 = !DILocation(line: 1009, column: 17, scope: !11353)
!11355 = !DILocation(line: 1009, column: 35, scope: !11353)
!11356 = !DILocation(line: 1009, column: 6, scope: !11314)
!11357 = !DILocation(line: 1011, column: 24, scope: !11358)
!11358 = distinct !DILexicalBlock(scope: !11353, file: !10724, line: 1010, column: 3)
!11359 = !DILocation(line: 1011, column: 33, scope: !11358)
!11360 = !DILocation(line: 1012, column: 3, scope: !11358)
!11361 = !DILocation(line: 1013, column: 17, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11353, file: !10724, line: 1013, column: 11)
!11363 = !DILocation(line: 1013, column: 22, scope: !11362)
!11364 = !DILocation(line: 1013, column: 39, scope: !11362)
!11365 = !DILocation(line: 0, scope: !11362)
!11366 = !DILocation(line: 1013, column: 11, scope: !11353)
!11367 = !DILocation(line: 1015, column: 33, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11362, file: !10724, line: 1014, column: 3)
!11369 = !DILocation(line: 1016, column: 3, scope: !11368)
!11370 = !DILocation(line: 1019, column: 33, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11362, file: !10724, line: 1018, column: 3)
!11372 = !DILocation(line: 1023, column: 12, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11314, file: !10724, line: 1023, column: 6)
!11374 = !DILocation(line: 1023, column: 16, scope: !11373)
!11375 = !DILocation(line: 1029, column: 24, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11373, file: !10724, line: 1028, column: 3)
!11377 = !DILocation(line: 1029, column: 33, scope: !11376)
!11378 = !DILocation(line: 1033, column: 12, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11314, file: !10724, line: 1033, column: 6)
!11380 = !DILocation(line: 1033, column: 15, scope: !11379)
!11381 = !DILocation(line: 1033, column: 30, scope: !11379)
!11382 = !DILocation(line: 1033, column: 6, scope: !11314)
!11383 = !DILocation(line: 1039, column: 28, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11379, file: !10724, line: 1038, column: 3)
!11385 = !DILocation(line: 1039, column: 37, scope: !11384)
!11386 = !DILocation(line: 1041, column: 54, scope: !11314)
!11387 = !DILocation(line: 1041, column: 62, scope: !11314)
!11388 = !DILocation(line: 1041, column: 26, scope: !11314)
!11389 = !DILocation(line: 1041, column: 36, scope: !11314)
!11390 = !DILocation(line: 1042, column: 49, scope: !11314)
!11391 = !DILocation(line: 1042, column: 57, scope: !11314)
!11392 = !DILocation(line: 1042, column: 26, scope: !11314)
!11393 = !DILocation(line: 1042, column: 31, scope: !11314)
!11394 = !DILocation(line: 1043, column: 50, scope: !11314)
!11395 = !DILocation(line: 1043, column: 78, scope: !11314)
!11396 = !DILocation(line: 1043, column: 26, scope: !11314)
!11397 = !DILocation(line: 1043, column: 31, scope: !11314)
!11398 = !DILocation(line: 1044, column: 52, scope: !11314)
!11399 = !DILocation(line: 1044, column: 102, scope: !11314)
!11400 = !DILocation(line: 1044, column: 109, scope: !11314)
!11401 = !DILocation(line: 1044, column: 26, scope: !11314)
!11402 = !DILocation(line: 1044, column: 31, scope: !11314)
!11403 = !DILocation(line: 1045, column: 50, scope: !11314)
!11404 = !DILocation(line: 1045, column: 78, scope: !11314)
!11405 = !DILocation(line: 1045, column: 26, scope: !11314)
!11406 = !DILocation(line: 1045, column: 31, scope: !11314)
!11407 = !DILocation(line: 1046, column: 1, scope: !11314)
!11408 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !10724, file: !10724, line: 1056, type: !11409, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !11411)
!11409 = !DISubroutineType(types: !11410)
!11410 = !{null, !11093, !1004}
!11411 = !{!11412, !11413}
!11412 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11408, file: !10724, line: 1056, type: !11093)
!11413 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11408, file: !10724, line: 1056, type: !1004)
!11414 = !DILocation(line: 0, scope: !11408)
!11415 = !DILocation(line: 1059, column: 22, scope: !11408)
!11416 = !DILocation(line: 1059, column: 32, scope: !11408)
!11417 = !DILocation(line: 1062, column: 53, scope: !11408)
!11418 = !DILocation(line: 1062, column: 58, scope: !11408)
!11419 = !DILocation(line: 1062, column: 22, scope: !11408)
!11420 = !DILocation(line: 1062, column: 35, scope: !11408)
!11421 = !DILocation(line: 1065, column: 54, scope: !11408)
!11422 = !DILocation(line: 1065, column: 59, scope: !11408)
!11423 = !DILocation(line: 1065, column: 22, scope: !11408)
!11424 = !DILocation(line: 1065, column: 36, scope: !11408)
!11425 = !DILocation(line: 1068, column: 55, scope: !11408)
!11426 = !DILocation(line: 1068, column: 60, scope: !11408)
!11427 = !DILocation(line: 1068, column: 22, scope: !11408)
!11428 = !DILocation(line: 1068, column: 37, scope: !11408)
!11429 = !DILocation(line: 1071, column: 56, scope: !11408)
!11430 = !DILocation(line: 1071, column: 79, scope: !11408)
!11431 = !DILocation(line: 1071, column: 22, scope: !11408)
!11432 = !DILocation(line: 1071, column: 37, scope: !11408)
!11433 = !DILocation(line: 1074, column: 34, scope: !11408)
!11434 = !DILocation(line: 1074, column: 38, scope: !11408)
!11435 = !DILocation(line: 1074, column: 14, scope: !11408)
!11436 = !DILocation(line: 1075, column: 1, scope: !11408)
!11437 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !10724, file: !10724, line: 1082, type: !365, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2123)
!11438 = !DILocation(line: 1085, column: 6, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11437, file: !10724, line: 1085, column: 6)
!11440 = !DILocation(line: 1085, column: 6, scope: !11437)
!11441 = !DILocation(line: 1088, column: 5, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11439, file: !10724, line: 1086, column: 3)
!11443 = !DILocation(line: 1091, column: 5, scope: !11442)
!11444 = !DILocation(line: 1092, column: 3, scope: !11442)
!11445 = !DILocation(line: 1093, column: 1, scope: !11437)
!11446 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !10724, file: !10724, line: 1099, type: !365, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2123)
!11447 = !DILocation(line: 1104, column: 1, scope: !11446)
!11448 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11449, file: !11449, line: 257, type: !6443, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11450)
!11449 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11450 = !{!11451}
!11451 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11448, file: !11449, line: 257, type: !156)
!11452 = !DILocation(line: 0, scope: !11448)
!11453 = !DILocation(line: 260, column: 3, scope: !11448)
!11454 = !DILocation(line: 261, column: 1, scope: !11448)
!11455 = distinct !DISubprogram(name: "LL_InitTick", scope: !11456, file: !11456, line: 260, type: !9116, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11457)
!11456 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11457 = !{!11458, !11459}
!11458 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11455, file: !11456, line: 260, type: !156)
!11459 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11455, file: !11456, line: 260, type: !156)
!11460 = !DILocation(line: 0, scope: !11455)
!11461 = !DILocation(line: 263, column: 46, scope: !11455)
!11462 = !DILocation(line: 263, column: 55, scope: !11455)
!11463 = !DILocation(line: 263, column: 18, scope: !11455)
!11464 = !DILocation(line: 264, column: 18, scope: !11455)
!11465 = !DILocation(line: 265, column: 18, scope: !11455)
!11466 = !DILocation(line: 267, column: 1, scope: !11455)
!11467 = distinct !DISubprogram(name: "LL_mDelay", scope: !11449, file: !11449, line: 273, type: !6443, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11468)
!11468 = !{!11469, !11470}
!11469 = !DILocalVariable(name: "Delay", arg: 1, scope: !11467, file: !11449, line: 273, type: !156)
!11470 = !DILocalVariable(name: "tmp", scope: !11467, file: !11449, line: 275, type: !452)
!11471 = !DILocation(line: 0, scope: !11467)
!11472 = !DILocation(line: 275, column: 3, scope: !11467)
!11473 = !DILocation(line: 275, column: 18, scope: !11467)
!11474 = !DILocation(line: 275, column: 33, scope: !11467)
!11475 = !DILocation(line: 277, column: 10, scope: !11467)
!11476 = !DILocation(line: 280, column: 12, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11467, file: !11449, line: 280, column: 6)
!11478 = !DILocation(line: 285, column: 3, scope: !11467)
!11479 = !DILocation(line: 287, column: 18, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11481, file: !11449, line: 287, column: 8)
!11481 = distinct !DILexicalBlock(scope: !11467, file: !11449, line: 286, column: 3)
!11482 = !DILocation(line: 292, column: 1, scope: !11467)
!11483 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11449, file: !11449, line: 323, type: !6443, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11484)
!11484 = !{!11485}
!11485 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11483, file: !11449, line: 323, type: !156)
!11486 = !DILocation(line: 0, scope: !11483)
!11487 = !DILocation(line: 326, column: 19, scope: !11483)
!11488 = !DILocation(line: 327, column: 1, scope: !11483)
!11489 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11449, file: !11449, line: 338, type: !11490, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11493)
!11490 = !DISubroutineType(types: !11491)
!11491 = !{!11492, !156}
!11492 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !950, line: 201, baseType: !949)
!11493 = !{!11494, !11495, !11496, !11497, !11498}
!11494 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11489, file: !11449, line: 338, type: !156)
!11495 = !DILocalVariable(name: "timeout", scope: !11489, file: !11449, line: 340, type: !156)
!11496 = !DILocalVariable(name: "getlatency", scope: !11489, file: !11449, line: 341, type: !156)
!11497 = !DILocalVariable(name: "latency", scope: !11489, file: !11449, line: 342, type: !156)
!11498 = !DILocalVariable(name: "status", scope: !11489, file: !11449, line: 343, type: !11492)
!11499 = !DILocation(line: 0, scope: !11489)
!11500 = !DILocation(line: 347, column: 21, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11489, file: !11449, line: 347, column: 6)
!11502 = !DILocation(line: 347, column: 6, scope: !11489)
!11503 = !DILocation(line: 353, column: 8, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11505, file: !11449, line: 353, column: 8)
!11505 = distinct !DILexicalBlock(scope: !11501, file: !11449, line: 352, column: 3)
!11506 = !DILocation(line: 353, column: 40, scope: !11504)
!11507 = !DILocation(line: 353, column: 8, scope: !11505)
!11508 = !DILocation(line: 374, column: 55, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11510, file: !11449, line: 374, column: 10)
!11510 = distinct !DILexicalBlock(scope: !11504, file: !11449, line: 354, column: 5)
!11511 = !DILocation(line: 368, column: 26, scope: !11512)
!11512 = distinct !DILexicalBlock(scope: !11510, file: !11449, line: 368, column: 10)
!11513 = !DILocation(line: 368, column: 55, scope: !11512)
!11514 = !DILocation(line: 380, column: 57, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11516, file: !11449, line: 380, column: 12)
!11516 = distinct !DILexicalBlock(scope: !11509, file: !11449, line: 379, column: 7)
!11517 = !DILocation(line: 387, column: 8, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11505, file: !11449, line: 387, column: 8)
!11519 = !DILocation(line: 387, column: 40, scope: !11518)
!11520 = !DILocation(line: 387, column: 8, scope: !11505)
!11521 = !DILocation(line: 407, column: 26, scope: !11522)
!11522 = distinct !DILexicalBlock(scope: !11523, file: !11449, line: 407, column: 10)
!11523 = distinct !DILexicalBlock(scope: !11518, file: !11449, line: 388, column: 5)
!11524 = !DILocation(line: 407, column: 55, scope: !11522)
!11525 = !DILocation(line: 413, column: 28, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11527, file: !11449, line: 413, column: 12)
!11527 = distinct !DILexicalBlock(scope: !11522, file: !11449, line: 412, column: 7)
!11528 = !DILocation(line: 413, column: 57, scope: !11526)
!11529 = !DILocation(line: 0, scope: !11505)
!11530 = !DILocation(line: 420, column: 8, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11505, file: !11449, line: 420, column: 8)
!11532 = !DILocation(line: 420, column: 40, scope: !11531)
!11533 = !DILocation(line: 420, column: 8, scope: !11505)
!11534 = !DILocation(line: 429, column: 26, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11536, file: !11449, line: 429, column: 10)
!11536 = distinct !DILexicalBlock(scope: !11531, file: !11449, line: 421, column: 5)
!11537 = !DILocation(line: 429, column: 55, scope: !11535)
!11538 = !DILocation(line: 435, column: 28, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11540, file: !11449, line: 435, column: 12)
!11540 = distinct !DILexicalBlock(scope: !11535, file: !11449, line: 434, column: 7)
!11541 = !DILocation(line: 435, column: 57, scope: !11539)
!11542 = !DILocation(line: 444, column: 5, scope: !11505)
!11543 = !DILocation(line: 448, column: 5, scope: !11505)
!11544 = !DILocation(line: 451, column: 18, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11505, file: !11449, line: 449, column: 5)
!11546 = !DILocation(line: 452, column: 12, scope: !11545)
!11547 = !DILocation(line: 453, column: 26, scope: !11505)
!11548 = !DILocation(line: 453, column: 38, scope: !11505)
!11549 = !DILocation(line: 453, column: 5, scope: !11545)
!11550 = distinct !{!11550, !11543, !11551}
!11551 = !DILocation(line: 453, column: 54, scope: !11505)
!11552 = !DILocation(line: 0, scope: !11501)
!11553 = !DILocation(line: 464, column: 3, scope: !11489)
!11554 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11555, file: !11555, line: 519, type: !6433, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !2123)
!11555 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11556 = !DILocation(line: 521, column: 21, scope: !11554)
!11557 = !DILocation(line: 521, column: 3, scope: !11554)
!11558 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6193, file: !6193, line: 1543, type: !6443, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11559)
!11559 = !{!11560}
!11560 = !DILocalVariable(name: "Latency", arg: 1, scope: !11558, file: !6193, line: 1543, type: !156)
!11561 = !DILocation(line: 0, scope: !11558)
!11562 = !DILocation(line: 1545, column: 3, scope: !11558)
!11563 = !DILocation(line: 1546, column: 1, scope: !11558)
!11564 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6193, file: !6193, line: 1569, type: !6433, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !2123)
!11565 = !DILocation(line: 1571, column: 21, scope: !11564)
!11566 = !DILocation(line: 1571, column: 3, scope: !11564)
!11567 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11449, file: !11449, line: 483, type: !11568, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11584)
!11568 = !DISubroutineType(types: !11569)
!11569 = !{!11492, !11570, !11577}
!11570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11571, size: 32)
!11571 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11456, line: 114, baseType: !11572)
!11572 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11456, line: 94, size: 96, elements: !11573)
!11573 = !{!11574, !11575, !11576}
!11574 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11572, file: !11456, line: 96, baseType: !156, size: 32)
!11575 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11572, file: !11456, line: 102, baseType: !156, size: 32, offset: 32)
!11576 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11572, file: !11456, line: 109, baseType: !156, size: 32, offset: 64)
!11577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11578, size: 32)
!11578 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11456, line: 139, baseType: !11579)
!11579 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11456, line: 119, size: 96, elements: !11580)
!11580 = !{!11581, !11582, !11583}
!11581 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11579, file: !11456, line: 121, baseType: !156, size: 32)
!11582 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11579, file: !11456, line: 127, baseType: !156, size: 32, offset: 32)
!11583 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11579, file: !11456, line: 133, baseType: !156, size: 32, offset: 64)
!11584 = !{!11585, !11586, !11587, !11588}
!11585 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11567, file: !11449, line: 483, type: !11570)
!11586 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11567, file: !11449, line: 484, type: !11577)
!11587 = !DILocalVariable(name: "status", scope: !11567, file: !11449, line: 486, type: !11492)
!11588 = !DILocalVariable(name: "pllfreq", scope: !11567, file: !11449, line: 487, type: !156)
!11589 = !DILocation(line: 0, scope: !11567)
!11590 = !DILocation(line: 490, column: 6, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11567, file: !11449, line: 490, column: 6)
!11592 = !DILocation(line: 490, column: 25, scope: !11591)
!11593 = !DILocation(line: 490, column: 6, scope: !11567)
!11594 = !DILocation(line: 493, column: 15, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11591, file: !11449, line: 491, column: 3)
!11596 = !DILocation(line: 496, column: 8, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11595, file: !11449, line: 496, column: 8)
!11598 = !DILocation(line: 496, column: 29, scope: !11597)
!11599 = !DILocation(line: 496, column: 8, scope: !11595)
!11600 = !DILocation(line: 498, column: 7, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11597, file: !11449, line: 497, column: 5)
!11602 = !DILocation(line: 499, column: 7, scope: !11601)
!11603 = !DILocation(line: 499, column: 14, scope: !11601)
!11604 = !DILocation(line: 499, column: 35, scope: !11601)
!11605 = distinct !{!11605, !11602, !11606}
!11606 = !DILocation(line: 502, column: 7, scope: !11601)
!11607 = !DILocation(line: 506, column: 76, scope: !11595)
!11608 = !DILocation(line: 506, column: 103, scope: !11595)
!11609 = !DILocation(line: 507, column: 54, scope: !11595)
!11610 = !DILocation(line: 506, column: 5, scope: !11595)
!11611 = !DILocation(line: 510, column: 14, scope: !11595)
!11612 = !DILocation(line: 511, column: 3, scope: !11595)
!11613 = !DILocation(line: 0, scope: !11591)
!11614 = !DILocation(line: 518, column: 3, scope: !11567)
!11615 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11449, file: !11449, line: 642, type: !11616, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11618)
!11616 = !DISubroutineType(types: !11617)
!11617 = !{!11492}
!11618 = !{!11619}
!11619 = !DILocalVariable(name: "status", scope: !11615, file: !11449, line: 644, type: !11492)
!11620 = !DILocation(line: 0, scope: !11615)
!11621 = !DILocation(line: 647, column: 6, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11615, file: !11449, line: 647, column: 6)
!11623 = !DILocation(line: 647, column: 27, scope: !11622)
!11624 = !DILocation(line: 663, column: 6, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11615, file: !11449, line: 663, column: 6)
!11626 = !DILocation(line: 663, column: 30, scope: !11625)
!11627 = !DILocation(line: 663, column: 6, scope: !11615)
!11628 = !DILocation(line: 669, column: 3, scope: !11615)
!11629 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11449, file: !11449, line: 611, type: !11630, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11632)
!11630 = !DISubroutineType(types: !11631)
!11631 = !{!156, !156, !11570}
!11632 = !{!11633, !11634, !11635}
!11633 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11629, file: !11449, line: 611, type: !156)
!11634 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11629, file: !11449, line: 611, type: !11570)
!11635 = !DILocalVariable(name: "pllfreq", scope: !11629, file: !11449, line: 613, type: !156)
!11636 = !DILocation(line: 0, scope: !11629)
!11637 = !DILocation(line: 622, column: 56, scope: !11629)
!11638 = !DILocation(line: 622, column: 61, scope: !11629)
!11639 = !DILocation(line: 622, column: 32, scope: !11629)
!11640 = !DILocation(line: 626, column: 45, scope: !11629)
!11641 = !DILocation(line: 626, column: 50, scope: !11629)
!11642 = !DILocation(line: 626, column: 21, scope: !11629)
!11643 = !DILocation(line: 630, column: 47, scope: !11629)
!11644 = !DILocation(line: 630, column: 82, scope: !11629)
!11645 = !DILocation(line: 630, column: 21, scope: !11629)
!11646 = !DILocation(line: 633, column: 3, scope: !11629)
!11647 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8445, file: !8445, line: 3007, type: !6433, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !2123)
!11648 = !DILocation(line: 3009, column: 11, scope: !11647)
!11649 = !DILocation(line: 3009, column: 44, scope: !11647)
!11650 = !DILocation(line: 3009, column: 3, scope: !11647)
!11651 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8445, file: !8445, line: 2987, type: !365, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !2123)
!11652 = !DILocation(line: 2989, column: 3, scope: !11651)
!11653 = !DILocation(line: 2990, column: 1, scope: !11651)
!11654 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8445, file: !8445, line: 4304, type: !8579, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11655)
!11655 = !{!11656, !11657, !11658, !11659}
!11656 = !DILocalVariable(name: "Source", arg: 1, scope: !11654, file: !8445, line: 4304, type: !156)
!11657 = !DILocalVariable(name: "PLLM", arg: 2, scope: !11654, file: !8445, line: 4304, type: !156)
!11658 = !DILocalVariable(name: "PLLN", arg: 3, scope: !11654, file: !8445, line: 4304, type: !156)
!11659 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !11654, file: !8445, line: 4304, type: !156)
!11660 = !DILocation(line: 0, scope: !11654)
!11661 = !DILocation(line: 4306, column: 3, scope: !11654)
!11662 = !DILocation(line: 4308, column: 3, scope: !11654)
!11663 = !DILocation(line: 4312, column: 1, scope: !11654)
!11664 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11449, file: !11449, line: 681, type: !11665, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11667)
!11665 = !DISubroutineType(types: !11666)
!11666 = !{!11492, !156, !11577}
!11667 = !{!11668, !11669, !11670, !11671}
!11668 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !11664, file: !11449, line: 681, type: !156)
!11669 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11664, file: !11449, line: 681, type: !11577)
!11670 = !DILocalVariable(name: "status", scope: !11664, file: !11449, line: 683, type: !11492)
!11671 = !DILocalVariable(name: "hclk_frequency", scope: !11664, file: !11449, line: 684, type: !156)
!11672 = !DILocation(line: 0, scope: !11664)
!11673 = !DILocation(line: 691, column: 20, scope: !11664)
!11674 = !DILocation(line: 694, column: 6, scope: !11675)
!11675 = distinct !DILexicalBlock(scope: !11664, file: !11449, line: 694, column: 6)
!11676 = !DILocation(line: 694, column: 22, scope: !11675)
!11677 = !DILocation(line: 694, column: 6, scope: !11664)
!11678 = !DILocation(line: 697, column: 14, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11675, file: !11449, line: 695, column: 3)
!11680 = !DILocation(line: 701, column: 13, scope: !11681)
!11681 = distinct !DILexicalBlock(scope: !11664, file: !11449, line: 701, column: 6)
!11682 = !DILocation(line: 701, column: 6, scope: !11664)
!11683 = !DILocation(line: 704, column: 5, scope: !11684)
!11684 = distinct !DILexicalBlock(scope: !11681, file: !11449, line: 702, column: 3)
!11685 = !DILocation(line: 705, column: 5, scope: !11684)
!11686 = !DILocation(line: 705, column: 12, scope: !11684)
!11687 = !DILocation(line: 705, column: 33, scope: !11684)
!11688 = distinct !{!11688, !11685, !11689}
!11689 = !DILocation(line: 708, column: 5, scope: !11684)
!11690 = !DILocation(line: 711, column: 49, scope: !11684)
!11691 = !DILocation(line: 711, column: 5, scope: !11684)
!11692 = !DILocation(line: 712, column: 5, scope: !11684)
!11693 = !DILocation(line: 713, column: 5, scope: !11684)
!11694 = !DILocation(line: 713, column: 12, scope: !11684)
!11695 = !DILocation(line: 713, column: 37, scope: !11684)
!11696 = distinct !{!11696, !11693, !11697}
!11697 = !DILocation(line: 716, column: 5, scope: !11684)
!11698 = !DILocation(line: 719, column: 50, scope: !11684)
!11699 = !DILocation(line: 719, column: 5, scope: !11684)
!11700 = !DILocation(line: 720, column: 50, scope: !11684)
!11701 = !DILocation(line: 720, column: 5, scope: !11684)
!11702 = !DILocation(line: 721, column: 3, scope: !11684)
!11703 = !DILocation(line: 724, column: 6, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11664, file: !11449, line: 724, column: 6)
!11705 = !DILocation(line: 724, column: 22, scope: !11704)
!11706 = !DILocation(line: 724, column: 6, scope: !11664)
!11707 = !DILocation(line: 727, column: 14, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11704, file: !11449, line: 725, column: 3)
!11709 = !DILocation(line: 728, column: 3, scope: !11708)
!11710 = !DILocation(line: 731, column: 13, scope: !11711)
!11711 = distinct !DILexicalBlock(scope: !11664, file: !11449, line: 731, column: 6)
!11712 = !DILocation(line: 731, column: 6, scope: !11664)
!11713 = !DILocation(line: 733, column: 5, scope: !11714)
!11714 = distinct !DILexicalBlock(scope: !11711, file: !11449, line: 732, column: 3)
!11715 = !DILocation(line: 734, column: 3, scope: !11714)
!11716 = !DILocation(line: 736, column: 3, scope: !11664)
!11717 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8445, file: !8445, line: 4184, type: !365, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !2123)
!11718 = !DILocation(line: 4186, column: 3, scope: !11717)
!11719 = !DILocation(line: 4187, column: 1, scope: !11717)
!11720 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8445, file: !8445, line: 4205, type: !6433, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !2123)
!11721 = !DILocation(line: 4207, column: 11, scope: !11720)
!11722 = !DILocation(line: 4207, column: 44, scope: !11720)
!11723 = !DILocation(line: 4207, column: 3, scope: !11720)
!11724 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8445, file: !8445, line: 3224, type: !6443, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11725)
!11725 = !{!11726}
!11726 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11724, file: !8445, line: 3224, type: !156)
!11727 = !DILocation(line: 0, scope: !11724)
!11728 = !DILocation(line: 3226, column: 3, scope: !11724)
!11729 = !DILocation(line: 3227, column: 1, scope: !11724)
!11730 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8445, file: !8445, line: 3188, type: !6443, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11731)
!11731 = !{!11732}
!11732 = !DILocalVariable(name: "Source", arg: 1, scope: !11730, file: !8445, line: 3188, type: !156)
!11733 = !DILocation(line: 0, scope: !11730)
!11734 = !DILocation(line: 3190, column: 3, scope: !11730)
!11735 = !DILocation(line: 3191, column: 1, scope: !11730)
!11736 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8445, file: !8445, line: 3204, type: !6433, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !2123)
!11737 = !DILocation(line: 3206, column: 21, scope: !11736)
!11738 = !DILocation(line: 3206, column: 3, scope: !11736)
!11739 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8445, file: !8445, line: 3240, type: !6443, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11740)
!11740 = !{!11741}
!11741 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11739, file: !8445, line: 3240, type: !156)
!11742 = !DILocation(line: 0, scope: !11739)
!11743 = !DILocation(line: 3242, column: 3, scope: !11739)
!11744 = !DILocation(line: 3243, column: 1, scope: !11739)
!11745 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8445, file: !8445, line: 3256, type: !6443, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11746)
!11746 = !{!11747}
!11747 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11745, file: !8445, line: 3256, type: !156)
!11748 = !DILocation(line: 0, scope: !11745)
!11749 = !DILocation(line: 3258, column: 3, scope: !11745)
!11750 = !DILocation(line: 3259, column: 1, scope: !11745)
!11751 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8445, file: !8445, line: 5153, type: !6433, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !2123)
!11752 = !DILocation(line: 5155, column: 11, scope: !11751)
!11753 = !DILocation(line: 5155, column: 47, scope: !11751)
!11754 = !DILocation(line: 5155, column: 3, scope: !11751)
!11755 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11449, file: !11449, line: 540, type: !11756, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11758)
!11756 = !DISubroutineType(types: !11757)
!11757 = !{!11492, !156, !156, !11570, !11577}
!11758 = !{!11759, !11760, !11761, !11762, !11763, !11764}
!11759 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !11755, file: !11449, line: 540, type: !156)
!11760 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !11755, file: !11449, line: 540, type: !156)
!11761 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !11755, file: !11449, line: 541, type: !11570)
!11762 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !11755, file: !11449, line: 541, type: !11577)
!11763 = !DILocalVariable(name: "status", scope: !11755, file: !11449, line: 543, type: !11492)
!11764 = !DILocalVariable(name: "pllfreq", scope: !11755, file: !11449, line: 544, type: !156)
!11765 = !DILocation(line: 0, scope: !11755)
!11766 = !DILocation(line: 551, column: 6, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11755, file: !11449, line: 551, column: 6)
!11768 = !DILocation(line: 551, column: 25, scope: !11767)
!11769 = !DILocation(line: 551, column: 6, scope: !11755)
!11770 = !DILocation(line: 554, column: 15, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11767, file: !11449, line: 552, column: 3)
!11772 = !DILocation(line: 557, column: 8, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11771, file: !11449, line: 557, column: 8)
!11774 = !DILocation(line: 557, column: 29, scope: !11773)
!11775 = !DILocation(line: 557, column: 8, scope: !11771)
!11776 = !DILocation(line: 560, column: 20, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11778, file: !11449, line: 560, column: 10)
!11778 = distinct !DILexicalBlock(scope: !11773, file: !11449, line: 558, column: 5)
!11779 = !DILocation(line: 560, column: 10, scope: !11778)
!11780 = !DILocation(line: 562, column: 9, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11777, file: !11449, line: 561, column: 7)
!11782 = !DILocation(line: 563, column: 7, scope: !11781)
!11783 = !DILocation(line: 566, column: 9, scope: !11784)
!11784 = distinct !DILexicalBlock(scope: !11777, file: !11449, line: 565, column: 7)
!11785 = !DILocation(line: 570, column: 7, scope: !11778)
!11786 = !DILocation(line: 571, column: 7, scope: !11778)
!11787 = !DILocation(line: 571, column: 14, scope: !11778)
!11788 = !DILocation(line: 571, column: 35, scope: !11778)
!11789 = distinct !{!11789, !11786, !11790}
!11790 = !DILocation(line: 574, column: 7, scope: !11778)
!11791 = !DILocation(line: 578, column: 76, scope: !11771)
!11792 = !DILocation(line: 578, column: 103, scope: !11771)
!11793 = !DILocation(line: 579, column: 54, scope: !11771)
!11794 = !DILocation(line: 578, column: 5, scope: !11771)
!11795 = !DILocation(line: 582, column: 14, scope: !11771)
!11796 = !DILocation(line: 583, column: 3, scope: !11771)
!11797 = !DILocation(line: 0, scope: !11767)
!11798 = !DILocation(line: 590, column: 3, scope: !11755)
!11799 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8445, file: !8445, line: 2969, type: !6433, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !2123)
!11800 = !DILocation(line: 2971, column: 11, scope: !11799)
!11801 = !DILocation(line: 2971, column: 44, scope: !11799)
!11802 = !DILocation(line: 2971, column: 3, scope: !11799)
!11803 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8445, file: !8445, line: 2929, type: !365, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !2123)
!11804 = !DILocation(line: 2931, column: 3, scope: !11803)
!11805 = !DILocation(line: 2932, column: 1, scope: !11803)
!11806 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8445, file: !8445, line: 2939, type: !365, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !2123)
!11807 = !DILocation(line: 2941, column: 3, scope: !11806)
!11808 = !DILocation(line: 2942, column: 1, scope: !11806)
!11809 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8445, file: !8445, line: 2949, type: !365, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !2123)
!11810 = !DILocation(line: 2951, column: 3, scope: !11809)
!11811 = !DILocation(line: 2952, column: 1, scope: !11809)
!11812 = distinct !DISubprogram(name: "z_device_state_init", scope: !11813, file: !11813, line: 23, type: !365, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !11814)
!11813 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11814 = !{!11815}
!11815 = !DILocalVariable(name: "dev", scope: !11812, file: !11813, line: 25, type: !11816)
!11816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11817, size: 32)
!11817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11818)
!11818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !11819)
!11819 = !{!11820, !11821, !11822, !11823, !11829, !11830}
!11820 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11818, file: !130, line: 380, baseType: !133, size: 32)
!11821 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11818, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!11822 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11818, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!11823 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11818, file: !130, line: 386, baseType: !11824, size: 32, offset: 96)
!11824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11825, size: 32)
!11825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !11826)
!11826 = !{!11827, !11828}
!11827 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11825, file: !130, line: 359, baseType: !143, size: 8)
!11828 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11825, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11829 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11818, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!11830 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11818, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!11831 = !DILocation(line: 0, scope: !11812)
!11832 = !DILocation(line: 31, column: 1, scope: !11812)
!11833 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11813, file: !11813, line: 33, type: !11834, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !11836)
!11834 = !DISubroutineType(types: !11835)
!11835 = !{!11816, !133}
!11836 = !{!11837, !11838}
!11837 = !DILocalVariable(name: "name", arg: 1, scope: !11833, file: !11813, line: 33, type: !133)
!11838 = !DILocalVariable(name: "dev", scope: !11833, file: !11813, line: 35, type: !11816)
!11839 = !DILocation(line: 0, scope: !11833)
!11840 = !DILocation(line: 40, column: 12, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11833, file: !11813, line: 40, column: 6)
!11842 = !DILocation(line: 40, column: 21, scope: !11841)
!11843 = !DILocation(line: 40, column: 25, scope: !11841)
!11844 = !DILocation(line: 40, column: 33, scope: !11841)
!11845 = !DILocation(line: 40, column: 6, scope: !11833)
!11846 = !DILocation(line: 55, column: 2, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11833, file: !11813, line: 55, column: 2)
!11848 = !DILocation(line: 50, column: 7, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11850, file: !11813, line: 50, column: 7)
!11850 = distinct !DILexicalBlock(scope: !11851, file: !11813, line: 49, column: 57)
!11851 = distinct !DILexicalBlock(scope: !11852, file: !11813, line: 49, column: 2)
!11852 = distinct !DILexicalBlock(scope: !11833, file: !11813, line: 49, column: 2)
!11853 = !DILocation(line: 50, column: 30, scope: !11849)
!11854 = !DILocation(line: 50, column: 39, scope: !11849)
!11855 = !DILocation(line: 50, column: 44, scope: !11849)
!11856 = !DILocation(line: 50, column: 7, scope: !11850)
!11857 = !DILocation(line: 49, column: 53, scope: !11851)
!11858 = !DILocation(line: 49, column: 33, scope: !11851)
!11859 = !DILocation(line: 49, column: 2, scope: !11852)
!11860 = distinct !{!11860, !11859, !11861}
!11861 = !DILocation(line: 53, column: 2, scope: !11852)
!11862 = !DILocation(line: 56, column: 7, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11864, file: !11813, line: 56, column: 7)
!11864 = distinct !DILexicalBlock(scope: !11865, file: !11813, line: 55, column: 57)
!11865 = distinct !DILexicalBlock(scope: !11847, file: !11813, line: 55, column: 2)
!11866 = !DILocation(line: 56, column: 30, scope: !11863)
!11867 = !DILocation(line: 56, column: 52, scope: !11863)
!11868 = !DILocation(line: 56, column: 34, scope: !11863)
!11869 = !DILocation(line: 56, column: 58, scope: !11863)
!11870 = !DILocation(line: 56, column: 7, scope: !11864)
!11871 = !DILocation(line: 55, column: 53, scope: !11865)
!11872 = !DILocation(line: 55, column: 33, scope: !11865)
!11873 = distinct !{!11873, !11846, !11874}
!11874 = !DILocation(line: 59, column: 2, scope: !11847)
!11875 = !DILocation(line: 62, column: 1, scope: !11833)
!11876 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11813, file: !11813, line: 93, type: !11877, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !11879)
!11877 = !DISubroutineType(types: !11878)
!11878 = !{!146, !11816}
!11879 = !{!11880}
!11880 = !DILocalVariable(name: "dev", arg: 1, scope: !11876, file: !11813, line: 93, type: !11816)
!11881 = !DILocation(line: 0, scope: !11876)
!11882 = !DILocation(line: 99, column: 10, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11876, file: !11813, line: 99, column: 6)
!11884 = !DILocation(line: 99, column: 6, scope: !11876)
!11885 = !DILocation(line: 103, column: 14, scope: !11876)
!11886 = !DILocation(line: 103, column: 21, scope: !11876)
!11887 = !DILocation(line: 103, column: 33, scope: !11876)
!11888 = !DILocation(line: 103, column: 49, scope: !11876)
!11889 = !DILocation(line: 103, column: 58, scope: !11876)
!11890 = !DILocation(line: 104, column: 1, scope: !11876)
!11891 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11813, file: !11813, line: 87, type: !11892, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !11895)
!11892 = !DISubroutineType(types: !11893)
!11893 = !{!315, !11894}
!11894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11816, size: 32)
!11895 = !{!11896}
!11896 = !DILocalVariable(name: "devices", arg: 1, scope: !11891, file: !11813, line: 87, type: !11894)
!11897 = !DILocation(line: 0, scope: !11891)
!11898 = !DILocation(line: 89, column: 11, scope: !11891)
!11899 = !DILocation(line: 90, column: 2, scope: !11891)
!11900 = distinct !DISubprogram(name: "device_required_foreach", scope: !11813, file: !11813, line: 125, type: !11901, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !11907)
!11901 = !DISubroutineType(types: !11902)
!11902 = !{!118, !11816, !11903, !117}
!11903 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !130, line: 471, baseType: !11904)
!11904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11905, size: 32)
!11905 = !DISubroutineType(types: !11906)
!11906 = !{!118, !11816, !117}
!11907 = !{!11908, !11909, !11910, !11911, !11912}
!11908 = !DILocalVariable(name: "dev", arg: 1, scope: !11900, file: !11813, line: 125, type: !11816)
!11909 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11900, file: !11813, line: 126, type: !11903)
!11910 = !DILocalVariable(name: "context", arg: 3, scope: !11900, file: !11813, line: 127, type: !117)
!11911 = !DILocalVariable(name: "handle_count", scope: !11900, file: !11813, line: 129, type: !315)
!11912 = !DILocalVariable(name: "handles", scope: !11900, file: !11813, line: 130, type: !149)
!11913 = !DILocation(line: 0, scope: !11900)
!11914 = !DILocation(line: 129, column: 2, scope: !11900)
!11915 = !DILocation(line: 129, column: 9, scope: !11900)
!11916 = !DILocation(line: 130, column: 35, scope: !11900)
!11917 = !DILocation(line: 132, column: 33, scope: !11900)
!11918 = !DILocation(line: 132, column: 9, scope: !11900)
!11919 = !DILocation(line: 133, column: 1, scope: !11900)
!11920 = !DILocation(line: 132, column: 2, scope: !11900)
!11921 = distinct !DISubprogram(name: "device_required_handles_get", scope: !130, file: !130, line: 493, type: !11922, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !11924)
!11922 = !DISubroutineType(types: !11923)
!11923 = !{!149, !11816, !2606}
!11924 = !{!11925, !11926, !11927, !11928}
!11925 = !DILocalVariable(name: "dev", arg: 1, scope: !11921, file: !130, line: 493, type: !11816)
!11926 = !DILocalVariable(name: "count", arg: 2, scope: !11921, file: !130, line: 493, type: !2606)
!11927 = !DILocalVariable(name: "rv", scope: !11921, file: !130, line: 495, type: !149)
!11928 = !DILocalVariable(name: "i", scope: !11929, file: !130, line: 498, type: !315)
!11929 = distinct !DILexicalBlock(scope: !11930, file: !130, line: 497, column: 18)
!11930 = distinct !DILexicalBlock(scope: !11921, file: !130, line: 497, column: 6)
!11931 = !DILocation(line: 0, scope: !11921)
!11932 = !DILocation(line: 495, column: 35, scope: !11921)
!11933 = !DILocation(line: 497, column: 9, scope: !11930)
!11934 = !DILocation(line: 497, column: 6, scope: !11921)
!11935 = !DILocation(line: 0, scope: !11929)
!11936 = !DILocation(line: 500, column: 11, scope: !11929)
!11937 = !DILocation(line: 500, column: 40, scope: !11929)
!11938 = !DILocation(line: 502, column: 4, scope: !11939)
!11939 = distinct !DILexicalBlock(scope: !11929, file: !130, line: 501, column: 40)
!11940 = distinct !{!11940, !11941, !11942}
!11941 = !DILocation(line: 500, column: 3, scope: !11929)
!11942 = !DILocation(line: 503, column: 3, scope: !11929)
!11943 = !DILocation(line: 504, column: 10, scope: !11929)
!11944 = !DILocation(line: 505, column: 2, scope: !11929)
!11945 = !DILocation(line: 507, column: 2, scope: !11921)
!11946 = distinct !DISubprogram(name: "device_visitor", scope: !11813, file: !11813, line: 106, type: !11947, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !11949)
!11947 = !DISubroutineType(types: !11948)
!11948 = !{!118, !149, !315, !11903, !117}
!11949 = !{!11950, !11951, !11952, !11953, !11954, !11956, !11959, !11960}
!11950 = !DILocalVariable(name: "handles", arg: 1, scope: !11946, file: !11813, line: 106, type: !149)
!11951 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11946, file: !11813, line: 107, type: !315)
!11952 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11946, file: !11813, line: 108, type: !11903)
!11953 = !DILocalVariable(name: "context", arg: 4, scope: !11946, file: !11813, line: 109, type: !117)
!11954 = !DILocalVariable(name: "i", scope: !11955, file: !11813, line: 112, type: !315)
!11955 = distinct !DILexicalBlock(scope: !11946, file: !11813, line: 112, column: 2)
!11956 = !DILocalVariable(name: "dh", scope: !11957, file: !11813, line: 113, type: !151)
!11957 = distinct !DILexicalBlock(scope: !11958, file: !11813, line: 112, column: 44)
!11958 = distinct !DILexicalBlock(scope: !11955, file: !11813, line: 112, column: 2)
!11959 = !DILocalVariable(name: "rdev", scope: !11957, file: !11813, line: 114, type: !11816)
!11960 = !DILocalVariable(name: "rc", scope: !11957, file: !11813, line: 115, type: !118)
!11961 = !DILocation(line: 0, scope: !11946)
!11962 = !DILocation(line: 0, scope: !11955)
!11963 = !DILocation(line: 112, column: 23, scope: !11958)
!11964 = !DILocation(line: 112, column: 2, scope: !11955)
!11965 = distinct !{!11965, !11964, !11966}
!11966 = !DILocation(line: 120, column: 2, scope: !11955)
!11967 = !DILocation(line: 113, column: 24, scope: !11957)
!11968 = !DILocation(line: 0, scope: !11957)
!11969 = !DILocation(line: 114, column: 31, scope: !11957)
!11970 = !DILocation(line: 115, column: 12, scope: !11957)
!11971 = !DILocation(line: 117, column: 10, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11957, file: !11813, line: 117, column: 7)
!11973 = !DILocation(line: 112, column: 39, scope: !11958)
!11974 = !DILocation(line: 123, column: 1, scope: !11946)
!11975 = distinct !DISubprogram(name: "device_from_handle", scope: !130, file: !130, line: 439, type: !11976, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !11978)
!11976 = !DISubroutineType(types: !11977)
!11977 = !{!11816, !151}
!11978 = !{!11979, !11980, !11981}
!11979 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11975, file: !130, line: 439, type: !151)
!11980 = !DILocalVariable(name: "dev", scope: !11975, file: !130, line: 443, type: !11816)
!11981 = !DILocalVariable(name: "numdev", scope: !11975, file: !130, line: 444, type: !315)
!11982 = !DILocation(line: 0, scope: !11975)
!11983 = !DILocation(line: 446, column: 7, scope: !11984)
!11984 = distinct !DILexicalBlock(scope: !11975, file: !130, line: 446, column: 6)
!11985 = !DILocation(line: 446, column: 18, scope: !11984)
!11986 = !DILocation(line: 446, column: 23, scope: !11984)
!11987 = !DILocation(line: 450, column: 2, scope: !11975)
!11988 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11813, file: !11813, line: 135, type: !11901, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !11989)
!11989 = !{!11990, !11991, !11992, !11993, !11994}
!11990 = !DILocalVariable(name: "dev", arg: 1, scope: !11988, file: !11813, line: 135, type: !11816)
!11991 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11988, file: !11813, line: 136, type: !11903)
!11992 = !DILocalVariable(name: "context", arg: 3, scope: !11988, file: !11813, line: 137, type: !117)
!11993 = !DILocalVariable(name: "handle_count", scope: !11988, file: !11813, line: 139, type: !315)
!11994 = !DILocalVariable(name: "handles", scope: !11988, file: !11813, line: 140, type: !149)
!11995 = !DILocation(line: 0, scope: !11988)
!11996 = !DILocation(line: 139, column: 2, scope: !11988)
!11997 = !DILocation(line: 139, column: 9, scope: !11988)
!11998 = !DILocation(line: 140, column: 35, scope: !11988)
!11999 = !DILocation(line: 142, column: 33, scope: !11988)
!12000 = !DILocation(line: 142, column: 9, scope: !11988)
!12001 = !DILocation(line: 143, column: 1, scope: !11988)
!12002 = !DILocation(line: 142, column: 2, scope: !11988)
!12003 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !130, file: !130, line: 573, type: !11922, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3109, retainedNodes: !12004)
!12004 = !{!12005, !12006, !12007, !12008, !12009}
!12005 = !DILocalVariable(name: "dev", arg: 1, scope: !12003, file: !130, line: 573, type: !11816)
!12006 = !DILocalVariable(name: "count", arg: 2, scope: !12003, file: !130, line: 573, type: !2606)
!12007 = !DILocalVariable(name: "rv", scope: !12003, file: !130, line: 575, type: !149)
!12008 = !DILocalVariable(name: "region", scope: !12003, file: !130, line: 576, type: !315)
!12009 = !DILocalVariable(name: "i", scope: !12003, file: !130, line: 577, type: !315)
!12010 = !DILocation(line: 0, scope: !12003)
!12011 = !DILocation(line: 575, column: 35, scope: !12003)
!12012 = !DILocation(line: 579, column: 9, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !12003, file: !130, line: 579, column: 6)
!12014 = !DILocation(line: 579, column: 6, scope: !12003)
!12015 = !DILocation(line: 582, column: 8, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !12017, file: !130, line: 582, column: 8)
!12017 = distinct !DILexicalBlock(scope: !12018, file: !130, line: 581, column: 23)
!12018 = distinct !DILexicalBlock(scope: !12013, file: !130, line: 579, column: 18)
!12019 = !DILocation(line: 582, column: 12, scope: !12016)
!12020 = !DILocation(line: 585, column: 6, scope: !12017)
!12021 = !DILocation(line: 0, scope: !12018)
!12022 = !DILocation(line: 581, column: 17, scope: !12018)
!12023 = !DILocation(line: 581, column: 3, scope: !12018)
!12024 = !DILocation(line: 588, column: 10, scope: !12018)
!12025 = !DILocation(line: 588, column: 16, scope: !12018)
!12026 = !DILocation(line: 589, column: 4, scope: !12027)
!12027 = distinct !DILexicalBlock(scope: !12018, file: !130, line: 588, column: 39)
!12028 = !DILocation(line: 588, column: 3, scope: !12018)
!12029 = distinct !{!12029, !12028, !12030}
!12030 = !DILocation(line: 590, column: 3, scope: !12018)
!12031 = !DILocation(line: 591, column: 10, scope: !12018)
!12032 = !DILocation(line: 592, column: 2, scope: !12018)
!12033 = !DILocation(line: 575, column: 25, scope: !12003)
!12034 = !DILocation(line: 594, column: 2, scope: !12003)
!12035 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1914, file: !1914, line: 49, type: !12036, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1911, retainedNodes: !2123)
!12036 = !DISubroutineType(types: !12037)
!12037 = !{!2599}
!12038 = !DILocation(line: 51, column: 10, scope: !12035)
!12039 = !DILocation(line: 51, column: 20, scope: !12035)
!12040 = !DILocation(line: 51, column: 2, scope: !12035)
!12041 = distinct !DISubprogram(name: "coredump", scope: !3116, file: !3116, line: 209, type: !12042, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !12190)
!12042 = !DISubroutineType(types: !12043)
!12043 = !{null, !32, !12044, !12088}
!12044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12045, size: 32)
!12045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12046)
!12046 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2733, line: 141, baseType: !12047)
!12047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2733, line: 97, size: 256, elements: !12048)
!12048 = !{!12049}
!12049 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12047, file: !2733, line: 107, baseType: !12050, size: 256)
!12050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2733, line: 98, size: 256, elements: !12051)
!12051 = !{!12052, !12057, !12062, !12067, !12072, !12077, !12082, !12087}
!12052 = !DIDerivedType(tag: DW_TAG_member, scope: !12050, file: !2733, line: 99, baseType: !12053, size: 32)
!12053 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12050, file: !2733, line: 99, size: 32, elements: !12054)
!12054 = !{!12055, !12056}
!12055 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12053, file: !2733, line: 99, baseType: !156, size: 32)
!12056 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12053, file: !2733, line: 99, baseType: !156, size: 32)
!12057 = !DIDerivedType(tag: DW_TAG_member, scope: !12050, file: !2733, line: 100, baseType: !12058, size: 32, offset: 32)
!12058 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12050, file: !2733, line: 100, size: 32, elements: !12059)
!12059 = !{!12060, !12061}
!12060 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12058, file: !2733, line: 100, baseType: !156, size: 32)
!12061 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12058, file: !2733, line: 100, baseType: !156, size: 32)
!12062 = !DIDerivedType(tag: DW_TAG_member, scope: !12050, file: !2733, line: 101, baseType: !12063, size: 32, offset: 64)
!12063 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12050, file: !2733, line: 101, size: 32, elements: !12064)
!12064 = !{!12065, !12066}
!12065 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12063, file: !2733, line: 101, baseType: !156, size: 32)
!12066 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12063, file: !2733, line: 101, baseType: !156, size: 32)
!12067 = !DIDerivedType(tag: DW_TAG_member, scope: !12050, file: !2733, line: 102, baseType: !12068, size: 32, offset: 96)
!12068 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12050, file: !2733, line: 102, size: 32, elements: !12069)
!12069 = !{!12070, !12071}
!12070 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12068, file: !2733, line: 102, baseType: !156, size: 32)
!12071 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12068, file: !2733, line: 102, baseType: !156, size: 32)
!12072 = !DIDerivedType(tag: DW_TAG_member, scope: !12050, file: !2733, line: 103, baseType: !12073, size: 32, offset: 128)
!12073 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12050, file: !2733, line: 103, size: 32, elements: !12074)
!12074 = !{!12075, !12076}
!12075 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12073, file: !2733, line: 103, baseType: !156, size: 32)
!12076 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12073, file: !2733, line: 103, baseType: !156, size: 32)
!12077 = !DIDerivedType(tag: DW_TAG_member, scope: !12050, file: !2733, line: 104, baseType: !12078, size: 32, offset: 160)
!12078 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12050, file: !2733, line: 104, size: 32, elements: !12079)
!12079 = !{!12080, !12081}
!12080 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12078, file: !2733, line: 104, baseType: !156, size: 32)
!12081 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12078, file: !2733, line: 104, baseType: !156, size: 32)
!12082 = !DIDerivedType(tag: DW_TAG_member, scope: !12050, file: !2733, line: 105, baseType: !12083, size: 32, offset: 192)
!12083 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12050, file: !2733, line: 105, size: 32, elements: !12084)
!12084 = !{!12085, !12086}
!12085 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12083, file: !2733, line: 105, baseType: !156, size: 32)
!12086 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12083, file: !2733, line: 105, baseType: !156, size: 32)
!12087 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12050, file: !2733, line: 106, baseType: !156, size: 32, offset: 224)
!12088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12089, size: 32)
!12089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !12090)
!12090 = !{!12091, !12149, !12161, !12162, !12163, !12164, !12170, !12185}
!12091 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12089, file: !225, line: 247, baseType: !12092, size: 384)
!12092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !12093)
!12093 = !{!12094, !12118, !12125, !12126, !12127, !12136, !12137, !12138}
!12094 = !DIDerivedType(tag: DW_TAG_member, scope: !12092, file: !225, line: 60, baseType: !12095, size: 64)
!12095 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12092, file: !225, line: 60, size: 64, elements: !12096)
!12096 = !{!12097, !12112}
!12097 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12095, file: !225, line: 61, baseType: !12098, size: 64)
!12098 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !12099)
!12099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !12100)
!12100 = !{!12101, !12107}
!12101 = !DIDerivedType(tag: DW_TAG_member, scope: !12099, file: !235, line: 38, baseType: !12102, size: 32)
!12102 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12099, file: !235, line: 38, size: 32, elements: !12103)
!12103 = !{!12104, !12106}
!12104 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12102, file: !235, line: 39, baseType: !12105, size: 32)
!12105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12099, size: 32)
!12106 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12102, file: !235, line: 40, baseType: !12105, size: 32)
!12107 = !DIDerivedType(tag: DW_TAG_member, scope: !12099, file: !235, line: 42, baseType: !12108, size: 32, offset: 32)
!12108 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12099, file: !235, line: 42, size: 32, elements: !12109)
!12109 = !{!12110, !12111}
!12110 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12108, file: !235, line: 43, baseType: !12105, size: 32)
!12111 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12108, file: !235, line: 44, baseType: !12105, size: 32)
!12112 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12095, file: !225, line: 62, baseType: !12113, size: 64)
!12113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !12114)
!12114 = !{!12115}
!12115 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12113, file: !251, line: 50, baseType: !12116, size: 64)
!12116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12117, size: 64, elements: !256)
!12117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12113, size: 32)
!12118 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12092, file: !225, line: 68, baseType: !12119, size: 32, offset: 64)
!12119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12120, size: 32)
!12120 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !12121)
!12121 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !12122)
!12122 = !{!12123}
!12123 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12121, file: !261, line: 232, baseType: !12124, size: 64)
!12124 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !12099)
!12125 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12092, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!12126 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12092, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!12127 = !DIDerivedType(tag: DW_TAG_member, scope: !12092, file: !225, line: 90, baseType: !12128, size: 16, offset: 112)
!12128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12092, file: !225, line: 90, size: 16, elements: !12129)
!12129 = !{!12130, !12135}
!12130 = !DIDerivedType(tag: DW_TAG_member, scope: !12128, file: !225, line: 91, baseType: !12131, size: 16)
!12131 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12128, file: !225, line: 91, size: 16, elements: !12132)
!12132 = !{!12133, !12134}
!12133 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12131, file: !225, line: 96, baseType: !275, size: 8)
!12134 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12131, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!12135 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12128, file: !225, line: 100, baseType: !279, size: 16)
!12136 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12092, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!12137 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12092, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!12138 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12092, file: !225, line: 131, baseType: !12139, size: 192, offset: 192)
!12139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !12140)
!12140 = !{!12141, !12142, !12148}
!12141 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12139, file: !261, line: 245, baseType: !12098, size: 64)
!12142 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12139, file: !261, line: 246, baseType: !12143, size: 32, offset: 64)
!12143 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !12144)
!12144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12145, size: 32)
!12145 = !DISubroutineType(types: !12146)
!12146 = !{null, !12147}
!12147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12139, size: 32)
!12148 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12139, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!12149 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12089, file: !225, line: 250, baseType: !12150, size: 288, offset: 384)
!12150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !12151)
!12151 = !{!12152, !12153, !12154, !12155, !12156, !12157, !12158, !12159, !12160}
!12152 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12150, file: !296, line: 26, baseType: !156, size: 32)
!12153 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12150, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!12154 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12150, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!12155 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12150, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!12156 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12150, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!12157 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12150, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!12158 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12150, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!12159 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12150, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!12160 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12150, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!12161 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12089, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!12162 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12089, file: !225, line: 256, baseType: !12120, size: 64, offset: 704)
!12163 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12089, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!12164 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12089, file: !225, line: 300, baseType: !12165, size: 96, offset: 800)
!12165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !12166)
!12166 = !{!12167, !12168, !12169}
!12167 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12165, file: !225, line: 153, baseType: !22, size: 32)
!12168 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12165, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!12169 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12165, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!12170 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12089, file: !225, line: 325, baseType: !12171, size: 32, offset: 896)
!12171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12172, size: 32)
!12172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !12173)
!12173 = !{!12174, !12180, !12181}
!12174 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12172, file: !220, line: 5074, baseType: !12175, size: 96)
!12175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !12176)
!12176 = !{!12177, !12178, !12179}
!12177 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12175, file: !324, line: 57, baseType: !327, size: 32)
!12178 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12175, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!12179 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12175, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!12180 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12172, file: !220, line: 5075, baseType: !12120, size: 64, offset: 96)
!12181 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12172, file: !220, line: 5076, baseType: !12182, size: 32, offset: 160)
!12182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !12183)
!12183 = !{!12184}
!12184 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !12182, file: !334, line: 52, baseType: !22, size: 32)
!12185 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12089, file: !225, line: 343, baseType: !12186, size: 64, offset: 928)
!12186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !12187)
!12187 = !{!12188, !12189}
!12188 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12186, file: !296, line: 63, baseType: !156, size: 32)
!12189 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12186, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!12190 = !{!12191, !12192, !12193}
!12191 = !DILocalVariable(name: "reason", arg: 1, scope: !12041, file: !3116, line: 209, type: !32)
!12192 = !DILocalVariable(name: "esf", arg: 2, scope: !12041, file: !3116, line: 209, type: !12044)
!12193 = !DILocalVariable(name: "thread", arg: 3, scope: !12041, file: !3116, line: 210, type: !12088)
!12194 = !DILocation(line: 0, scope: !12041)
!12195 = !DILocation(line: 212, column: 1, scope: !12041)
!12196 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3116, file: !3116, line: 214, type: !12197, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !12199)
!12197 = !DISubroutineType(types: !12198)
!12198 = !{null, !22, !22}
!12199 = !{!12200, !12201}
!12200 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12196, file: !3116, line: 214, type: !22)
!12201 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12196, file: !3116, line: 214, type: !22)
!12202 = !DILocation(line: 0, scope: !12196)
!12203 = !DILocation(line: 216, column: 1, scope: !12196)
!12204 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3116, file: !3116, line: 218, type: !12205, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !12207)
!12205 = !DISubroutineType(types: !12206)
!12206 = !{null, !1955, !315}
!12207 = !{!12208, !12209}
!12208 = !DILocalVariable(name: "buf", arg: 1, scope: !12204, file: !3116, line: 218, type: !1955)
!12209 = !DILocalVariable(name: "buflen", arg: 2, scope: !12204, file: !3116, line: 218, type: !315)
!12210 = !DILocation(line: 0, scope: !12204)
!12211 = !DILocation(line: 220, column: 1, scope: !12204)
!12212 = distinct !DISubprogram(name: "coredump_query", scope: !3116, file: !3116, line: 222, type: !12213, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !12215)
!12213 = !DISubroutineType(types: !12214)
!12214 = !{!118, !3115, !117}
!12215 = !{!12216, !12217}
!12216 = !DILocalVariable(name: "query_id", arg: 1, scope: !12212, file: !3116, line: 222, type: !3115)
!12217 = !DILocalVariable(name: "arg", arg: 2, scope: !12212, file: !3116, line: 222, type: !117)
!12218 = !DILocation(line: 0, scope: !12212)
!12219 = !DILocation(line: 224, column: 2, scope: !12212)
!12220 = distinct !DISubprogram(name: "coredump_cmd", scope: !3116, file: !3116, line: 227, type: !12221, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !12223)
!12221 = !DISubroutineType(types: !12222)
!12222 = !{!118, !3122, !117}
!12223 = !{!12224, !12225}
!12224 = !DILocalVariable(name: "query_id", arg: 1, scope: !12220, file: !3116, line: 227, type: !3122)
!12225 = !DILocalVariable(name: "arg", arg: 2, scope: !12220, file: !3116, line: 227, type: !117)
!12226 = !DILocation(line: 0, scope: !12220)
!12227 = !DILocation(line: 229, column: 2, scope: !12220)
!12228 = distinct !DISubprogram(name: "arch_system_halt", scope: !12229, file: !12229, line: 23, type: !6183, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !12230)
!12229 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12230 = !{!12231}
!12231 = !DILocalVariable(name: "reason", arg: 1, scope: !12228, file: !12229, line: 23, type: !32)
!12232 = !DILocation(line: 0, scope: !12228)
!12233 = !DILocation(line: 55, column: 2, scope: !12234, inlinedAt: !12238)
!12234 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6172, file: !6172, line: 42, type: !6173, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !12235)
!12235 = !{!12236, !12237}
!12236 = !DILocalVariable(name: "key", scope: !12234, file: !6172, line: 44, type: !32)
!12237 = !DILocalVariable(name: "tmp", scope: !12234, file: !6172, line: 53, type: !32)
!12238 = distinct !DILocation(line: 31, column: 8, scope: !12228)
!12239 = !{i64 2243186}
!12240 = !DILocation(line: 0, scope: !12234, inlinedAt: !12238)
!12241 = !DILocation(line: 32, column: 2, scope: !12228)
!12242 = !DILocation(line: 32, column: 2, scope: !12243)
!12243 = distinct !DILexicalBlock(scope: !12244, file: !12229, line: 32, column: 2)
!12244 = distinct !DILexicalBlock(scope: !12228, file: !12229, line: 32, column: 2)
!12245 = distinct !{!12245, !12246, !12247}
!12246 = !DILocation(line: 32, column: 2, scope: !12244)
!12247 = !DILocation(line: 34, column: 2, scope: !12244)
!12248 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12229, file: !12229, line: 39, type: !12249, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !12251)
!12249 = !DISubroutineType(types: !12250)
!12250 = !{null, !32, !12044}
!12251 = !{!12252, !12253}
!12252 = !DILocalVariable(name: "reason", arg: 1, scope: !12248, file: !12229, line: 39, type: !32)
!12253 = !DILocalVariable(name: "esf", arg: 2, scope: !12248, file: !12229, line: 40, type: !12044)
!12254 = !DILocation(line: 0, scope: !12248)
!12255 = !DILocation(line: 46, column: 2, scope: !12248)
!12256 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12229, file: !12229, line: 81, type: !6183, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !12257)
!12257 = !{!12258}
!12258 = !DILocalVariable(name: "reason", arg: 1, scope: !12256, file: !12229, line: 81, type: !32)
!12259 = !DILocation(line: 0, scope: !12256)
!12260 = !DILocation(line: 83, column: 2, scope: !12256)
!12261 = distinct !DISubprogram(name: "z_fatal_error", scope: !12229, file: !12229, line: 96, type: !12249, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !12262)
!12262 = !{!12263, !12264, !12265, !12266}
!12263 = !DILocalVariable(name: "reason", arg: 1, scope: !12261, file: !12229, line: 96, type: !32)
!12264 = !DILocalVariable(name: "esf", arg: 2, scope: !12261, file: !12229, line: 96, type: !12044)
!12265 = !DILocalVariable(name: "key", scope: !12261, file: !12229, line: 102, type: !32)
!12266 = !DILocalVariable(name: "thread", scope: !12261, file: !12229, line: 103, type: !12088)
!12267 = !DILocation(line: 0, scope: !12261)
!12268 = !DILocation(line: 55, column: 2, scope: !12234, inlinedAt: !12269)
!12269 = distinct !DILocation(line: 102, column: 21, scope: !12261)
!12270 = !DILocation(line: 0, scope: !12234, inlinedAt: !12269)
!12271 = !DILocation(line: 131, column: 2, scope: !12261)
!12272 = !DILocation(line: 147, column: 3, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12274, file: !12229, line: 147, column: 3)
!12274 = distinct !DILexicalBlock(scope: !12275, file: !12229, line: 147, column: 3)
!12275 = distinct !DILexicalBlock(scope: !12276, file: !12229, line: 146, column: 32)
!12276 = distinct !DILexicalBlock(scope: !12261, file: !12229, line: 146, column: 6)
!12277 = !DILocation(line: 147, column: 3, scope: !12274)
!12278 = !DILocation(line: 147, column: 3, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12273, file: !12229, line: 147, column: 3)
!12280 = !DILocation(line: 104, column: 4, scope: !12261)
!12281 = !DILocalVariable(name: "key", arg: 1, scope: !12282, file: !6172, line: 84, type: !32)
!12282 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6172, file: !6172, line: 84, type: !6183, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !12283)
!12283 = !{!12281}
!12284 = !DILocation(line: 0, scope: !12282, inlinedAt: !12285)
!12285 = distinct !DILocation(line: 186, column: 2, scope: !12261)
!12286 = !DILocation(line: 95, column: 2, scope: !12282, inlinedAt: !12285)
!12287 = !{i64 2244003}
!12288 = !DILocation(line: 189, column: 3, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12290, file: !12229, line: 188, column: 41)
!12290 = distinct !DILexicalBlock(scope: !12261, file: !12229, line: 188, column: 6)
!12291 = !DILocation(line: 191, column: 1, scope: !12261)
!12292 = distinct !DISubprogram(name: "k_current_get", scope: !220, file: !220, line: 530, type: !12293, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !2123)
!12293 = !DISubroutineType(types: !12294)
!12294 = !{!12295}
!12295 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !12088)
!12296 = !DILocation(line: 535, column: 9, scope: !12292)
!12297 = !DILocation(line: 535, column: 2, scope: !12292)
!12298 = distinct !DISubprogram(name: "k_thread_abort", scope: !3467, file: !3467, line: 188, type: !12299, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !12301)
!12299 = !DISubroutineType(types: !12300)
!12300 = !{null, !12295}
!12301 = !{!12302}
!12302 = !DILocalVariable(name: "thread", arg: 1, scope: !12298, file: !3467, line: 188, type: !12295)
!12303 = !DILocation(line: 0, scope: !12298)
!12304 = !DILocation(line: 197, column: 2, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12298, file: !3467, line: 197, column: 2)
!12306 = !{i64 2154748557}
!12307 = !DILocation(line: 198, column: 2, scope: !12298)
!12308 = !DILocation(line: 199, column: 1, scope: !12298)
!12309 = distinct !DISubprogram(name: "z_current_get", scope: !3467, file: !3467, line: 173, type: !12293, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !2123)
!12310 = !DILocation(line: 180, column: 2, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12309, file: !3467, line: 180, column: 2)
!12312 = !{i64 2154748489}
!12313 = !DILocation(line: 181, column: 9, scope: !12309)
!12314 = !DILocation(line: 181, column: 2, scope: !12309)
!12315 = distinct !DISubprogram(name: "z_early_memset", scope: !1922, file: !1922, line: 108, type: !12316, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !12318)
!12316 = !DISubroutineType(types: !12317)
!12317 = !{null, !117, !118, !315}
!12318 = !{!12319, !12320, !12321}
!12319 = !DILocalVariable(name: "dst", arg: 1, scope: !12315, file: !1922, line: 108, type: !117)
!12320 = !DILocalVariable(name: "c", arg: 2, scope: !12315, file: !1922, line: 108, type: !118)
!12321 = !DILocalVariable(name: "n", arg: 3, scope: !12315, file: !1922, line: 108, type: !315)
!12322 = !DILocation(line: 0, scope: !12315)
!12323 = !DILocation(line: 110, column: 9, scope: !12315)
!12324 = !DILocation(line: 111, column: 1, scope: !12315)
!12325 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1922, file: !1922, line: 121, type: !12326, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !12328)
!12326 = !DISubroutineType(types: !12327)
!12327 = !{null, !117, !13, !315}
!12328 = !{!12329, !12330, !12331}
!12329 = !DILocalVariable(name: "dst", arg: 1, scope: !12325, file: !1922, line: 121, type: !117)
!12330 = !DILocalVariable(name: "src", arg: 2, scope: !12325, file: !1922, line: 121, type: !13)
!12331 = !DILocalVariable(name: "n", arg: 3, scope: !12325, file: !1922, line: 121, type: !315)
!12332 = !DILocation(line: 0, scope: !12325)
!12333 = !DILocation(line: 123, column: 9, scope: !12325)
!12334 = !DILocation(line: 124, column: 1, scope: !12325)
!12335 = distinct !DISubprogram(name: "z_bss_zero", scope: !1922, file: !1922, line: 132, type: !365, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !2123)
!12336 = !DILocation(line: 143, column: 2, scope: !12335)
!12337 = !DILocation(line: 168, column: 1, scope: !12335)
!12338 = distinct !DISubprogram(name: "z_init_cpu", scope: !1922, file: !1922, line: 372, type: !8046, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !12339)
!12339 = !{!12340}
!12340 = !DILocalVariable(name: "id", arg: 1, scope: !12338, file: !1922, line: 372, type: !118)
!12341 = !DILocation(line: 0, scope: !12338)
!12342 = !DILocation(line: 374, column: 2, scope: !12338)
!12343 = !DILocation(line: 375, column: 34, scope: !12338)
!12344 = !DILocation(line: 375, column: 19, scope: !12338)
!12345 = !DILocation(line: 375, column: 31, scope: !12338)
!12346 = !DILocation(line: 376, column: 24, scope: !12338)
!12347 = !DILocation(line: 376, column: 19, scope: !12338)
!12348 = !DILocation(line: 376, column: 22, scope: !12338)
!12349 = !DILocation(line: 378, column: 26, scope: !12338)
!12350 = !DILocation(line: 378, column: 4, scope: !12338)
!12351 = !DILocation(line: 378, column: 50, scope: !12338)
!12352 = !DILocation(line: 377, column: 19, scope: !12338)
!12353 = !DILocation(line: 377, column: 29, scope: !12338)
!12354 = !DILocation(line: 384, column: 1, scope: !12338)
!12355 = distinct !DISubprogram(name: "init_idle_thread", scope: !1922, file: !1922, line: 343, type: !8046, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !12356)
!12356 = !{!12357, !12358, !12359, !12362}
!12357 = !DILocalVariable(name: "i", arg: 1, scope: !12355, file: !1922, line: 343, type: !118)
!12358 = !DILocalVariable(name: "thread", scope: !12355, file: !1922, line: 345, type: !2015)
!12359 = !DILocalVariable(name: "stack", scope: !12355, file: !1922, line: 346, type: !12360)
!12360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12361, size: 32)
!12361 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !345, line: 44, baseType: !2132)
!12362 = !DILocalVariable(name: "tname", scope: !12355, file: !1922, line: 358, type: !1259)
!12363 = !DILocation(line: 0, scope: !12355)
!12364 = !DILocation(line: 345, column: 29, scope: !12355)
!12365 = !DILocation(line: 346, column: 28, scope: !12355)
!12366 = !DILocation(line: 362, column: 37, scope: !12355)
!12367 = !DILocation(line: 362, column: 36, scope: !12355)
!12368 = !DILocation(line: 361, column: 2, scope: !12355)
!12369 = !DILocation(line: 365, column: 2, scope: !12355)
!12370 = !DILocation(line: 370, column: 1, scope: !12355)
!12371 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !347, file: !347, line: 331, type: !12372, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !12374)
!12372 = !DISubroutineType(types: !12373)
!12373 = !{!1259, !12360}
!12374 = !{!12375}
!12375 = !DILocalVariable(name: "sym", arg: 1, scope: !12371, file: !347, line: 331, type: !12360)
!12376 = !DILocation(line: 0, scope: !12371)
!12377 = !DILocation(line: 333, column: 21, scope: !12371)
!12378 = !DILocation(line: 333, column: 2, scope: !12371)
!12379 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12380, file: !12380, line: 155, type: !12381, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !12383)
!12380 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12381 = !DISubroutineType(types: !12382)
!12382 = !{null, !2015}
!12383 = !{!12384}
!12384 = !DILocalVariable(name: "thread", arg: 1, scope: !12379, file: !12380, line: 155, type: !2015)
!12385 = !DILocation(line: 0, scope: !12379)
!12386 = !DILocation(line: 157, column: 15, scope: !12379)
!12387 = !DILocation(line: 157, column: 28, scope: !12379)
!12388 = !DILocation(line: 158, column: 1, scope: !12379)
!12389 = distinct !DISubprogram(name: "z_cstart", scope: !1922, file: !1922, line: 501, type: !365, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !12390)
!12390 = !{!12391}
!12391 = !DILocalVariable(name: "dummy_thread", scope: !12389, file: !1922, line: 518, type: !2016)
!12392 = !DILocation(line: 507, column: 2, scope: !12389)
!12393 = !DILocation(line: 43, column: 14, scope: !12394, inlinedAt: !12398)
!12394 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12395, file: !12395, line: 40, type: !365, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !12396)
!12395 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12396 = !{!12397}
!12397 = !DILocalVariable(name: "msp", scope: !12394, file: !12395, line: 42, type: !156)
!12398 = distinct !DILocation(line: 44, column: 2, scope: !12399, inlinedAt: !12401)
!12399 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12400, file: !12400, line: 42, type: !365, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !2123)
!12400 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12401 = distinct !DILocation(line: 510, column: 2, scope: !12389)
!12402 = !DILocation(line: 43, column: 3, scope: !12394, inlinedAt: !12398)
!12403 = !DILocation(line: 43, column: 60, scope: !12394, inlinedAt: !12398)
!12404 = !DILocation(line: 0, scope: !12394, inlinedAt: !12398)
!12405 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12406, file: !6346, line: 1153, type: !156)
!12406 = distinct !DISubprogram(name: "__set_MSP", scope: !6346, file: !6346, line: 1153, type: !6443, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !12407)
!12407 = !{!12405}
!12408 = !DILocation(line: 0, scope: !12406, inlinedAt: !12409)
!12409 = distinct !DILocation(line: 46, column: 2, scope: !12394, inlinedAt: !12398)
!12410 = !DILocation(line: 1155, column: 3, scope: !12406, inlinedAt: !12409)
!12411 = !{i64 3517562}
!12412 = !DILocation(line: 62, column: 11, scope: !12394, inlinedAt: !12398)
!12413 = !DILocation(line: 102, column: 2, scope: !12414, inlinedAt: !12415)
!12414 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7172, file: !7172, line: 97, type: !365, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !2123)
!12415 = distinct !DILocation(line: 45, column: 2, scope: !12399, inlinedAt: !12401)
!12416 = !DILocation(line: 108, column: 2, scope: !12414, inlinedAt: !12415)
!12417 = !DILocation(line: 112, column: 2, scope: !12414, inlinedAt: !12415)
!12418 = !DILocation(line: 113, column: 2, scope: !12414, inlinedAt: !12415)
!12419 = !DILocation(line: 114, column: 2, scope: !12414, inlinedAt: !12415)
!12420 = !DILocation(line: 116, column: 2, scope: !12414, inlinedAt: !12415)
!12421 = !DILocation(line: 123, column: 13, scope: !12414, inlinedAt: !12415)
!12422 = !DILocation(line: 46, column: 2, scope: !12399, inlinedAt: !12401)
!12423 = !DILocation(line: 47, column: 2, scope: !12399, inlinedAt: !12401)
!12424 = !DILocation(line: 174, column: 12, scope: !12425, inlinedAt: !12426)
!12425 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7172, file: !7172, line: 169, type: !365, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !2123)
!12426 = distinct !DILocation(line: 48, column: 2, scope: !12399, inlinedAt: !12401)
!12427 = !DILocation(line: 179, column: 12, scope: !12425, inlinedAt: !12426)
!12428 = !DILocation(line: 50, column: 2, scope: !12399, inlinedAt: !12401)
!12429 = !DILocation(line: 57, column: 2, scope: !12399, inlinedAt: !12401)
!12430 = !DILocation(line: 518, column: 2, scope: !12389)
!12431 = !DILocation(line: 518, column: 18, scope: !12389)
!12432 = !DILocation(line: 520, column: 2, scope: !12389)
!12433 = !DILocation(line: 523, column: 2, scope: !12389)
!12434 = !DILocation(line: 526, column: 2, scope: !12389)
!12435 = !DILocation(line: 527, column: 2, scope: !12389)
!12436 = !DILocation(line: 543, column: 24, scope: !12389)
!12437 = !DILocation(line: 543, column: 2, scope: !12389)
!12438 = !DILocation(line: 0, scope: !2149)
!12439 = !DILocation(line: 246, column: 15, scope: !2167)
!12440 = !DILocation(line: 246, column: 36, scope: !2166)
!12441 = !DILocation(line: 246, column: 2, scope: !2167)
!12442 = !DILocation(line: 247, column: 37, scope: !2165)
!12443 = !DILocation(line: 0, scope: !2165)
!12444 = !DILocation(line: 248, column: 19, scope: !2165)
!12445 = !DILocation(line: 248, column: 12, scope: !2165)
!12446 = !DILocation(line: 250, column: 11, scope: !12447)
!12447 = distinct !DILexicalBlock(scope: !2165, file: !1922, line: 250, column: 7)
!12448 = !DILocation(line: 250, column: 7, scope: !2165)
!12449 = !DILocation(line: 254, column: 11, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12451, file: !1922, line: 254, column: 8)
!12451 = distinct !DILexicalBlock(scope: !12447, file: !1922, line: 250, column: 20)
!12452 = !DILocation(line: 254, column: 8, scope: !12451)
!12453 = !DILocation(line: 255, column: 9, scope: !12454)
!12454 = distinct !DILexicalBlock(scope: !12450, file: !1922, line: 254, column: 17)
!12455 = !DILocation(line: 258, column: 9, scope: !12454)
!12456 = !DILocation(line: 261, column: 28, scope: !12454)
!12457 = !DILocation(line: 261, column: 10, scope: !12454)
!12458 = !DILocation(line: 261, column: 17, scope: !12454)
!12459 = !DILocation(line: 261, column: 26, scope: !12454)
!12460 = !DILocation(line: 262, column: 4, scope: !12454)
!12461 = !DILocation(line: 263, column: 9, scope: !12451)
!12462 = !DILocation(line: 263, column: 16, scope: !12451)
!12463 = !DILocation(line: 263, column: 28, scope: !12451)
!12464 = !DILocation(line: 264, column: 3, scope: !12451)
!12465 = !DILocation(line: 246, column: 60, scope: !2166)
!12466 = distinct !{!12466, !12441, !12467}
!12467 = !DILocation(line: 265, column: 2, scope: !2167)
!12468 = !DILocation(line: 266, column: 1, scope: !2149)
!12469 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !656, file: !656, line: 1814, type: !6386, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !12470)
!12470 = !{!12471, !12472}
!12471 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12469, file: !656, line: 1814, type: !911)
!12472 = !DILocalVariable(name: "priority", arg: 2, scope: !12469, file: !656, line: 1814, type: !156)
!12473 = !DILocation(line: 0, scope: !12469)
!12474 = !DILocation(line: 1822, column: 48, scope: !12475)
!12475 = distinct !DILexicalBlock(scope: !12476, file: !656, line: 1821, column: 3)
!12476 = distinct !DILexicalBlock(scope: !12469, file: !656, line: 1816, column: 7)
!12477 = !DILocation(line: 1822, column: 32, scope: !12475)
!12478 = !DILocation(line: 1822, column: 40, scope: !12475)
!12479 = !DILocation(line: 1822, column: 5, scope: !12475)
!12480 = !DILocation(line: 1822, column: 46, scope: !12475)
!12481 = !DILocation(line: 1824, column: 1, scope: !12469)
!12482 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12400, file: !12400, line: 32, type: !365, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2123)
!12483 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12484, file: !12484, line: 215, type: !12381, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !12485)
!12484 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12485 = !{!12486}
!12486 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12483, file: !12484, line: 215, type: !2015)
!12487 = !DILocation(line: 0, scope: !12483)
!12488 = !DILocation(line: 217, column: 21, scope: !12483)
!12489 = !DILocation(line: 217, column: 34, scope: !12483)
!12490 = !DILocation(line: 221, column: 21, scope: !12483)
!12491 = !DILocation(line: 221, column: 34, scope: !12483)
!12492 = !DILocation(line: 223, column: 27, scope: !12483)
!12493 = !DILocation(line: 223, column: 33, scope: !12483)
!12494 = !DILocation(line: 224, column: 27, scope: !12483)
!12495 = !DILocation(line: 224, column: 32, scope: !12483)
!12496 = !DILocation(line: 230, column: 2, scope: !12483)
!12497 = !DILocation(line: 239, column: 24, scope: !12483)
!12498 = !DILocation(line: 240, column: 1, scope: !12483)
!12499 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1922, file: !1922, line: 399, type: !12500, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !12502)
!12500 = !DISubroutineType(types: !12501)
!12501 = !{!1259}
!12502 = !{!12503}
!12503 = !DILocalVariable(name: "stack_ptr", scope: !12499, file: !1922, line: 401, type: !1259)
!12504 = !DILocation(line: 404, column: 2, scope: !12499)
!12505 = !DILocation(line: 416, column: 24, scope: !12499)
!12506 = !DILocation(line: 418, column: 14, scope: !12499)
!12507 = !DILocation(line: 0, scope: !12499)
!12508 = !DILocation(line: 423, column: 2, scope: !12499)
!12509 = !DILocation(line: 424, column: 2, scope: !12499)
!12510 = !DILocation(line: 426, column: 2, scope: !12499)
!12511 = !DILocation(line: 428, column: 2, scope: !12499)
!12512 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1922, file: !1922, line: 432, type: !12513, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !12515)
!12513 = !DISubroutineType(types: !12514)
!12514 = !{null, !1259}
!12515 = !{!12516}
!12516 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12512, file: !1922, line: 432, type: !1259)
!12517 = !DILocation(line: 0, scope: !12512)
!12518 = !DILocation(line: 435, column: 2, scope: !12512)
!12519 = !DILocation(line: 445, column: 2, scope: !12512)
!12520 = distinct !DISubprogram(name: "bg_thread_main", scope: !1922, file: !1922, line: 277, type: !354, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1918, retainedNodes: !12521)
!12521 = !{!12522, !12523, !12524}
!12522 = !DILocalVariable(name: "unused1", arg: 1, scope: !12520, file: !1922, line: 277, type: !117)
!12523 = !DILocalVariable(name: "unused2", arg: 2, scope: !12520, file: !1922, line: 277, type: !117)
!12524 = !DILocalVariable(name: "unused3", arg: 3, scope: !12520, file: !1922, line: 277, type: !117)
!12525 = !DILocation(line: 0, scope: !12520)
!12526 = !DILocation(line: 291, column: 20, scope: !12520)
!12527 = !DILocation(line: 293, column: 2, scope: !12520)
!12528 = !DILocation(line: 297, column: 2, scope: !12520)
!12529 = !DILocation(line: 305, column: 2, scope: !12520)
!12530 = !DILocation(line: 307, column: 2, scope: !12520)
!12531 = !DILocation(line: 330, column: 8, scope: !12520)
!12532 = !DILocation(line: 333, column: 34, scope: !12520)
!12533 = !DILocation(line: 339, column: 1, scope: !12520)
!12534 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2176, file: !2176, line: 45, type: !12535, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12543)
!12535 = !DISubroutineType(types: !12536)
!12536 = !{null, !12537, !117}
!12537 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !220, line: 103, baseType: !12538)
!12538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12539, size: 32)
!12539 = !DISubroutineType(types: !12540)
!12540 = !{null, !12541, !117}
!12541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12542, size: 32)
!12542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2181)
!12543 = !{!12544, !12545}
!12544 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12534, file: !2176, line: 45, type: !12537)
!12545 = !DILocalVariable(name: "user_data", arg: 2, scope: !12534, file: !2176, line: 45, type: !117)
!12546 = !DILocation(line: 0, scope: !12534)
!12547 = !DILocation(line: 71, column: 1, scope: !12534)
!12548 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2176, file: !2176, line: 73, type: !12535, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12549)
!12549 = !{!12550, !12551}
!12550 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12548, file: !2176, line: 73, type: !12537)
!12551 = !DILocalVariable(name: "user_data", arg: 2, scope: !12548, file: !2176, line: 73, type: !117)
!12552 = !DILocation(line: 0, scope: !12548)
!12553 = !DILocation(line: 95, column: 1, scope: !12548)
!12554 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2176, file: !2176, line: 97, type: !7173, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !2123)
!12555 = !DILocation(line: 1031, column: 3, scope: !12556, inlinedAt: !12559)
!12556 = distinct !DISubprogram(name: "__get_IPSR", scope: !6346, file: !6346, line: 1027, type: !6433, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12557)
!12557 = !{!12558}
!12558 = !DILocalVariable(name: "result", scope: !12556, file: !6346, line: 1029, type: !156)
!12559 = distinct !DILocation(line: 48, column: 10, scope: !12560, inlinedAt: !12561)
!12560 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7172, file: !7172, line: 46, type: !7173, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !2123)
!12561 = distinct !DILocation(line: 99, column: 9, scope: !12554)
!12562 = !{i64 3523213}
!12563 = !DILocation(line: 0, scope: !12556, inlinedAt: !12559)
!12564 = !DILocation(line: 48, column: 9, scope: !12560, inlinedAt: !12561)
!12565 = !DILocation(line: 99, column: 2, scope: !12554)
!12566 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2176, file: !2176, line: 106, type: !365, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !2123)
!12567 = !DILocation(line: 108, column: 2, scope: !12566)
!12568 = !DILocation(line: 108, column: 17, scope: !12566)
!12569 = !DILocation(line: 108, column: 30, scope: !12566)
!12570 = !DILocation(line: 109, column: 1, scope: !12566)
!12571 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2176, file: !2176, line: 116, type: !365, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !2123)
!12572 = !DILocation(line: 118, column: 2, scope: !12571)
!12573 = !DILocation(line: 118, column: 17, scope: !12571)
!12574 = !DILocation(line: 118, column: 30, scope: !12571)
!12575 = !DILocation(line: 119, column: 1, scope: !12571)
!12576 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2176, file: !2176, line: 126, type: !7173, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !2123)
!12577 = !DILocation(line: 128, column: 10, scope: !12576)
!12578 = !DILocation(line: 128, column: 25, scope: !12576)
!12579 = !DILocation(line: 128, column: 38, scope: !12576)
!12580 = !DILocation(line: 128, column: 53, scope: !12576)
!12581 = !DILocation(line: 128, column: 2, scope: !12576)
!12582 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2176, file: !2176, line: 187, type: !12583, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12585)
!12583 = !DISubroutineType(types: !12584)
!12584 = !{!118, !2180, !133}
!12585 = !{!12586, !12587}
!12586 = !DILocalVariable(name: "thread", arg: 1, scope: !12582, file: !2176, line: 187, type: !2180)
!12587 = !DILocalVariable(name: "value", arg: 2, scope: !12582, file: !2176, line: 187, type: !133)
!12588 = !DILocation(line: 0, scope: !12582)
!12589 = !DILocation(line: 206, column: 2, scope: !12582)
!12590 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2176, file: !2176, line: 238, type: !12591, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12593)
!12591 = !DISubroutineType(types: !12592)
!12592 = !{!133, !2180}
!12593 = !{!12594}
!12594 = !DILocalVariable(name: "thread", arg: 1, scope: !12590, file: !2176, line: 238, type: !2180)
!12595 = !DILocation(line: 0, scope: !12590)
!12596 = !DILocation(line: 244, column: 2, scope: !12590)
!12597 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2176, file: !2176, line: 248, type: !12598, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12600)
!12598 = !DISubroutineType(types: !12599)
!12599 = !{!118, !2179, !1259, !315}
!12600 = !{!12601, !12602, !12603}
!12601 = !DILocalVariable(name: "thread", arg: 1, scope: !12597, file: !2176, line: 248, type: !2179)
!12602 = !DILocalVariable(name: "buf", arg: 2, scope: !12597, file: !2176, line: 248, type: !1259)
!12603 = !DILocalVariable(name: "size", arg: 3, scope: !12597, file: !2176, line: 248, type: !315)
!12604 = !DILocation(line: 0, scope: !12597)
!12605 = !DILocation(line: 257, column: 2, scope: !12597)
!12606 = !DILocation(line: 0, scope: !2175)
!12607 = !DILocation(line: 281, column: 11, scope: !12608)
!12608 = distinct !DILexicalBlock(scope: !2175, file: !2176, line: 281, column: 6)
!12609 = !DILocation(line: 281, column: 20, scope: !12608)
!12610 = !DILocation(line: 275, column: 45, scope: !2175)
!12611 = !DILocation(line: 285, column: 10, scope: !2175)
!12612 = !DILocation(line: 0, scope: !2298)
!12613 = !DILocation(line: 293, column: 39, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !2298, file: !2176, line: 293, column: 2)
!12615 = !DILocation(line: 293, column: 2, scope: !2298)
!12616 = !DILocation(line: 273, column: 14, scope: !2175)
!12617 = !DILocation(line: 309, column: 2, scope: !2175)
!12618 = !DILocation(line: 309, column: 11, scope: !2175)
!12619 = !DILocation(line: 311, column: 2, scope: !2175)
!12620 = !DILocation(line: 293, column: 26, scope: !12614)
!12621 = !DILocation(line: 294, column: 9, scope: !12622)
!12622 = distinct !DILexicalBlock(scope: !12614, file: !2176, line: 293, column: 54)
!12623 = !DILocation(line: 295, column: 21, scope: !12624)
!12624 = distinct !DILexicalBlock(scope: !12622, file: !2176, line: 295, column: 7)
!12625 = !DILocation(line: 295, column: 28, scope: !12624)
!12626 = !DILocation(line: 295, column: 7, scope: !12622)
!12627 = !DILocation(line: 299, column: 25, scope: !12622)
!12628 = !DILocation(line: 299, column: 41, scope: !12622)
!12629 = !DILocation(line: 300, column: 7, scope: !12622)
!12630 = !DILocation(line: 300, column: 26, scope: !12622)
!12631 = !DILocation(line: 299, column: 10, scope: !12622)
!12632 = !DILocation(line: 299, column: 7, scope: !12622)
!12633 = !DILocation(line: 302, column: 16, scope: !12622)
!12634 = !DILocation(line: 304, column: 20, scope: !12635)
!12635 = distinct !DILexicalBlock(scope: !12622, file: !2176, line: 304, column: 7)
!12636 = !DILocation(line: 304, column: 7, scope: !12622)
!12637 = !DILocation(line: 305, column: 26, scope: !12638)
!12638 = distinct !DILexicalBlock(scope: !12635, file: !2176, line: 304, column: 26)
!12639 = !DILocation(line: 305, column: 42, scope: !12638)
!12640 = !DILocation(line: 305, column: 11, scope: !12638)
!12641 = !DILocation(line: 305, column: 8, scope: !12638)
!12642 = !DILocation(line: 306, column: 3, scope: !12638)
!12643 = !DILocation(line: 293, column: 50, scope: !12614)
!12644 = !DILocation(line: 312, column: 1, scope: !2175)
!12645 = distinct !DISubprogram(name: "copy_bytes", scope: !2176, file: !2176, line: 261, type: !12646, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12648)
!12646 = !DISubroutineType(types: !12647)
!12647 = !{!315, !1259, !315, !133, !315}
!12648 = !{!12649, !12650, !12651, !12652, !12653}
!12649 = !DILocalVariable(name: "dest", arg: 1, scope: !12645, file: !2176, line: 261, type: !1259)
!12650 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12645, file: !2176, line: 261, type: !315)
!12651 = !DILocalVariable(name: "src", arg: 3, scope: !12645, file: !2176, line: 261, type: !133)
!12652 = !DILocalVariable(name: "src_size", arg: 4, scope: !12645, file: !2176, line: 261, type: !315)
!12653 = !DILocalVariable(name: "bytes_to_copy", scope: !12645, file: !2176, line: 263, type: !315)
!12654 = !DILocation(line: 0, scope: !12645)
!12655 = !DILocation(line: 265, column: 18, scope: !12645)
!12656 = !DILocation(line: 266, column: 2, scope: !12645)
!12657 = !DILocation(line: 268, column: 2, scope: !12645)
!12658 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2176, file: !2176, line: 383, type: !12659, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12661)
!12659 = !DISubroutineType(types: !12660)
!12660 = !{null, !2180}
!12661 = !{!12662}
!12662 = !DILocalVariable(name: "thread", arg: 1, scope: !12658, file: !2176, line: 383, type: !2180)
!12663 = !DILocation(line: 0, scope: !12658)
!12664 = !DILocation(line: 387, column: 2, scope: !12658)
!12665 = !DILocation(line: 388, column: 1, scope: !12658)
!12666 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2176, file: !2176, line: 528, type: !12667, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12674)
!12667 = !DISubroutineType(types: !12668)
!12668 = !{!1259, !2180, !12669, !315, !352, !117, !117, !117, !118, !156, !133}
!12669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12670, size: 32)
!12670 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !345, line: 44, baseType: !12671)
!12671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !347, line: 47, size: 8, elements: !12672)
!12672 = !{!12673}
!12673 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12671, file: !347, line: 48, baseType: !135, size: 8)
!12674 = !{!12675, !12676, !12677, !12678, !12679, !12680, !12681, !12682, !12683, !12684, !12685}
!12675 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12666, file: !2176, line: 528, type: !2180)
!12676 = !DILocalVariable(name: "stack", arg: 2, scope: !12666, file: !2176, line: 529, type: !12669)
!12677 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12666, file: !2176, line: 529, type: !315)
!12678 = !DILocalVariable(name: "entry", arg: 4, scope: !12666, file: !2176, line: 530, type: !352)
!12679 = !DILocalVariable(name: "p1", arg: 5, scope: !12666, file: !2176, line: 531, type: !117)
!12680 = !DILocalVariable(name: "p2", arg: 6, scope: !12666, file: !2176, line: 531, type: !117)
!12681 = !DILocalVariable(name: "p3", arg: 7, scope: !12666, file: !2176, line: 531, type: !117)
!12682 = !DILocalVariable(name: "prio", arg: 8, scope: !12666, file: !2176, line: 532, type: !118)
!12683 = !DILocalVariable(name: "options", arg: 9, scope: !12666, file: !2176, line: 532, type: !156)
!12684 = !DILocalVariable(name: "name", arg: 10, scope: !12666, file: !2176, line: 532, type: !133)
!12685 = !DILocalVariable(name: "stack_ptr", scope: !12666, file: !2176, line: 534, type: !1259)
!12686 = !DILocation(line: 0, scope: !12666)
!12687 = !DILocation(line: 536, column: 2, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12689, file: !2176, line: 536, column: 2)
!12689 = distinct !DILexicalBlock(scope: !12690, file: !2176, line: 536, column: 2)
!12690 = distinct !DILexicalBlock(scope: !12666, file: !2176, line: 536, column: 2)
!12691 = !DILocation(line: 536, column: 2, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12688, file: !2176, line: 536, column: 2)
!12693 = !DILocation(line: 550, column: 28, scope: !12666)
!12694 = !DILocation(line: 550, column: 2, scope: !12666)
!12695 = !DILocation(line: 553, column: 34, scope: !12666)
!12696 = !DILocation(line: 553, column: 2, scope: !12666)
!12697 = !DILocation(line: 554, column: 14, scope: !12666)
!12698 = !DILocation(line: 564, column: 2, scope: !12666)
!12699 = !DILocation(line: 567, column: 14, scope: !12666)
!12700 = !DILocation(line: 567, column: 24, scope: !12666)
!12701 = !DILocation(line: 612, column: 7, scope: !12702)
!12702 = distinct !DILexicalBlock(scope: !12666, file: !2176, line: 612, column: 6)
!12703 = !DILocation(line: 612, column: 6, scope: !12666)
!12704 = !DILocation(line: 627, column: 40, scope: !12666)
!12705 = !DILocation(line: 637, column: 2, scope: !12666)
!12706 = !DILocation(line: 613, column: 15, scope: !12707)
!12707 = distinct !DILexicalBlock(scope: !12702, file: !2176, line: 612, column: 17)
!12708 = !DILocation(line: 613, column: 29, scope: !12707)
!12709 = !DILocation(line: 638, column: 1, scope: !12666)
!12710 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12380, file: !12380, line: 78, type: !12711, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12713)
!12711 = !DISubroutineType(types: !12712)
!12712 = !{!146, !117}
!12713 = !{!12714}
!12714 = !DILocalVariable(name: "entry_point", arg: 1, scope: !12710, file: !12380, line: 78, type: !117)
!12715 = !DILocation(line: 0, scope: !12710)
!12716 = !DILocation(line: 80, column: 21, scope: !12710)
!12717 = !DILocation(line: 80, column: 2, scope: !12710)
!12718 = distinct !DISubprogram(name: "z_waitq_init", scope: !12719, file: !12719, line: 47, type: !12720, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12722)
!12719 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12720 = !DISubroutineType(types: !12721)
!12721 = !{null, !2211}
!12722 = !{!12723}
!12723 = !DILocalVariable(name: "w", arg: 1, scope: !12718, file: !12719, line: 47, type: !2211)
!12724 = !DILocation(line: 0, scope: !12718)
!12725 = !DILocation(line: 49, column: 21, scope: !12718)
!12726 = !DILocation(line: 49, column: 2, scope: !12718)
!12727 = !DILocation(line: 50, column: 1, scope: !12718)
!12728 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2176, file: !2176, line: 791, type: !12729, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12732)
!12729 = !DISubroutineType(types: !12730)
!12730 = !{null, !12731, !118, !156, !32}
!12731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 32)
!12732 = !{!12733, !12734, !12735, !12736}
!12733 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12728, file: !2176, line: 791, type: !12731)
!12734 = !DILocalVariable(name: "priority", arg: 2, scope: !12728, file: !2176, line: 791, type: !118)
!12735 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12728, file: !2176, line: 792, type: !156)
!12736 = !DILocalVariable(name: "options", arg: 4, scope: !12728, file: !2176, line: 792, type: !32)
!12737 = !DILocation(line: 0, scope: !12728)
!12738 = !DILocation(line: 795, column: 15, scope: !12728)
!12739 = !DILocation(line: 795, column: 25, scope: !12728)
!12740 = !DILocation(line: 796, column: 30, scope: !12728)
!12741 = !DILocation(line: 796, column: 15, scope: !12728)
!12742 = !DILocation(line: 796, column: 28, scope: !12728)
!12743 = !DILocation(line: 797, column: 30, scope: !12728)
!12744 = !DILocation(line: 797, column: 15, scope: !12728)
!12745 = !DILocation(line: 797, column: 28, scope: !12728)
!12746 = !DILocation(line: 799, column: 22, scope: !12728)
!12747 = !DILocation(line: 799, column: 15, scope: !12728)
!12748 = !DILocation(line: 799, column: 20, scope: !12728)
!12749 = !DILocation(line: 801, column: 15, scope: !12728)
!12750 = !DILocation(line: 801, column: 28, scope: !12728)
!12751 = !DILocation(line: 814, column: 2, scope: !12728)
!12752 = !DILocation(line: 815, column: 1, scope: !12728)
!12753 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2176, file: !2176, line: 449, type: !12754, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12756)
!12754 = !DISubroutineType(types: !12755)
!12755 = !{!1259, !2180, !12669, !315}
!12756 = !{!12757, !12758, !12759, !12760, !12761, !12762, !12763, !12764}
!12757 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12753, file: !2176, line: 449, type: !2180)
!12758 = !DILocalVariable(name: "stack", arg: 2, scope: !12753, file: !2176, line: 450, type: !12669)
!12759 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12753, file: !2176, line: 450, type: !315)
!12760 = !DILocalVariable(name: "stack_obj_size", scope: !12753, file: !2176, line: 452, type: !315)
!12761 = !DILocalVariable(name: "stack_buf_size", scope: !12753, file: !2176, line: 452, type: !315)
!12762 = !DILocalVariable(name: "stack_ptr", scope: !12753, file: !2176, line: 453, type: !1259)
!12763 = !DILocalVariable(name: "stack_buf_start", scope: !12753, file: !2176, line: 453, type: !1259)
!12764 = !DILocalVariable(name: "delta", scope: !12753, file: !2176, line: 454, type: !315)
!12765 = !DILocation(line: 0, scope: !12753)
!12766 = !DILocation(line: 465, column: 20, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12753, file: !2176, line: 463, column: 2)
!12768 = !DILocation(line: 466, column: 21, scope: !12767)
!12769 = !DILocation(line: 473, column: 28, scope: !12753)
!12770 = !DILocation(line: 514, column: 33, scope: !12753)
!12771 = !DILocation(line: 514, column: 25, scope: !12753)
!12772 = !DILocation(line: 514, column: 31, scope: !12753)
!12773 = !DILocation(line: 515, column: 25, scope: !12753)
!12774 = !DILocation(line: 515, column: 30, scope: !12753)
!12775 = !DILocation(line: 516, column: 25, scope: !12753)
!12776 = !DILocation(line: 516, column: 31, scope: !12753)
!12777 = !DILocation(line: 520, column: 2, scope: !12753)
!12778 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !347, file: !347, line: 331, type: !12779, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12781)
!12779 = !DISubroutineType(types: !12780)
!12780 = !{!1259, !12669}
!12781 = !{!12782}
!12782 = !DILocalVariable(name: "sym", arg: 1, scope: !12778, file: !347, line: 331, type: !12669)
!12783 = !DILocation(line: 0, scope: !12778)
!12784 = !DILocation(line: 333, column: 21, scope: !12778)
!12785 = !DILocation(line: 333, column: 2, scope: !12778)
!12786 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12787, file: !12787, line: 40, type: !12788, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12790)
!12787 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12788 = !DISubroutineType(types: !12789)
!12789 = !{null, !12731}
!12790 = !{!12791}
!12791 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12786, file: !12787, line: 40, type: !12731)
!12792 = !DILocation(line: 0, scope: !12786)
!12793 = !DILocation(line: 42, column: 31, scope: !12786)
!12794 = !DILocation(line: 42, column: 2, scope: !12786)
!12795 = !DILocation(line: 43, column: 1, scope: !12786)
!12796 = distinct !DISubprogram(name: "z_init_timeout", scope: !12787, file: !12787, line: 25, type: !2237, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12797)
!12797 = !{!12798}
!12798 = !DILocalVariable(name: "to", arg: 1, scope: !12796, file: !12787, line: 25, type: !2239)
!12799 = !DILocation(line: 0, scope: !12796)
!12800 = !DILocation(line: 27, column: 22, scope: !12796)
!12801 = !DILocation(line: 27, column: 2, scope: !12796)
!12802 = !DILocation(line: 28, column: 1, scope: !12796)
!12803 = distinct !DISubprogram(name: "sys_dnode_init", scope: !235, file: !235, line: 211, type: !12804, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12806)
!12804 = !DISubroutineType(types: !12805)
!12805 = !{null, !2285}
!12806 = !{!12807}
!12807 = !DILocalVariable(name: "node", arg: 1, scope: !12803, file: !235, line: 211, type: !2285)
!12808 = !DILocation(line: 0, scope: !12803)
!12809 = !DILocation(line: 213, column: 8, scope: !12803)
!12810 = !DILocation(line: 213, column: 13, scope: !12803)
!12811 = !DILocation(line: 214, column: 8, scope: !12803)
!12812 = !DILocation(line: 214, column: 13, scope: !12803)
!12813 = !DILocation(line: 215, column: 1, scope: !12803)
!12814 = distinct !DISubprogram(name: "sys_dlist_init", scope: !235, file: !235, line: 197, type: !12815, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12818)
!12815 = !DISubroutineType(types: !12816)
!12816 = !{null, !12817}
!12817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 32)
!12818 = !{!12819}
!12819 = !DILocalVariable(name: "list", arg: 1, scope: !12814, file: !235, line: 197, type: !12817)
!12820 = !DILocation(line: 0, scope: !12814)
!12821 = !DILocation(line: 199, column: 8, scope: !12814)
!12822 = !DILocation(line: 199, column: 13, scope: !12814)
!12823 = !DILocation(line: 200, column: 8, scope: !12814)
!12824 = !DILocation(line: 200, column: 13, scope: !12814)
!12825 = !DILocation(line: 201, column: 1, scope: !12814)
!12826 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2176, file: !2176, line: 641, type: !12827, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12833)
!12827 = !DISubroutineType(types: !12828)
!12828 = !{!2179, !2180, !12669, !315, !352, !117, !117, !117, !118, !156, !12829}
!12829 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !12830)
!12830 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !12831)
!12831 = !{!12832}
!12832 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12830, file: !114, line: 66, baseType: !113, size: 64)
!12833 = !{!12834, !12835, !12836, !12837, !12838, !12839, !12840, !12841, !12842, !12843}
!12834 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12826, file: !2176, line: 641, type: !2180)
!12835 = !DILocalVariable(name: "stack", arg: 2, scope: !12826, file: !2176, line: 642, type: !12669)
!12836 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12826, file: !2176, line: 643, type: !315)
!12837 = !DILocalVariable(name: "entry", arg: 4, scope: !12826, file: !2176, line: 643, type: !352)
!12838 = !DILocalVariable(name: "p1", arg: 5, scope: !12826, file: !2176, line: 644, type: !117)
!12839 = !DILocalVariable(name: "p2", arg: 6, scope: !12826, file: !2176, line: 644, type: !117)
!12840 = !DILocalVariable(name: "p3", arg: 7, scope: !12826, file: !2176, line: 644, type: !117)
!12841 = !DILocalVariable(name: "prio", arg: 8, scope: !12826, file: !2176, line: 645, type: !118)
!12842 = !DILocalVariable(name: "options", arg: 9, scope: !12826, file: !2176, line: 645, type: !156)
!12843 = !DILocalVariable(name: "delay", arg: 10, scope: !12826, file: !2176, line: 645, type: !12829)
!12844 = !DILocation(line: 0, scope: !12826)
!12845 = !DILocation(line: 1031, column: 3, scope: !12556, inlinedAt: !12846)
!12846 = distinct !DILocation(line: 48, column: 10, scope: !12560, inlinedAt: !12847)
!12847 = distinct !DILocation(line: 647, column: 2, scope: !12848)
!12848 = distinct !DILexicalBlock(scope: !12849, file: !2176, line: 647, column: 2)
!12849 = distinct !DILexicalBlock(scope: !12826, file: !2176, line: 647, column: 2)
!12850 = !DILocation(line: 0, scope: !12556, inlinedAt: !12846)
!12851 = !DILocation(line: 48, column: 9, scope: !12560, inlinedAt: !12847)
!12852 = !DILocation(line: 647, column: 2, scope: !12849)
!12853 = !DILocation(line: 647, column: 2, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12848, file: !2176, line: 647, column: 2)
!12855 = !DILocation(line: 649, column: 2, scope: !12826)
!12856 = !DILocation(line: 652, column: 7, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12826, file: !2176, line: 652, column: 6)
!12858 = !DILocation(line: 652, column: 6, scope: !12826)
!12859 = !DILocation(line: 653, column: 3, scope: !12860)
!12860 = distinct !DILexicalBlock(scope: !12857, file: !2176, line: 652, column: 39)
!12861 = !DILocation(line: 654, column: 2, scope: !12860)
!12862 = !DILocation(line: 656, column: 2, scope: !12826)
!12863 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2176, file: !2176, line: 401, type: !12864, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12866)
!12864 = !DISubroutineType(types: !12865)
!12865 = !{null, !2180, !12829}
!12866 = !{!12867, !12868}
!12867 = !DILocalVariable(name: "thread", arg: 1, scope: !12863, file: !2176, line: 401, type: !2180)
!12868 = !DILocalVariable(name: "delay", arg: 2, scope: !12863, file: !2176, line: 401, type: !12829)
!12869 = !DILocation(line: 0, scope: !12863)
!12870 = !DILocation(line: 404, column: 6, scope: !12871)
!12871 = distinct !DILexicalBlock(scope: !12863, file: !2176, line: 404, column: 6)
!12872 = !DILocation(line: 404, column: 6, scope: !12863)
!12873 = !DILocation(line: 405, column: 3, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !12871, file: !2176, line: 404, column: 38)
!12875 = !DILocation(line: 406, column: 2, scope: !12874)
!12876 = !DILocation(line: 407, column: 3, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12871, file: !2176, line: 406, column: 9)
!12878 = !DILocation(line: 413, column: 1, scope: !12863)
!12879 = distinct !DISubprogram(name: "k_thread_start", scope: !3467, file: !3467, line: 205, type: !12880, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12882)
!12880 = !DISubroutineType(types: !12881)
!12881 = !{null, !2179}
!12882 = !{!12883}
!12883 = !DILocalVariable(name: "thread", arg: 1, scope: !12879, file: !3467, line: 205, type: !2179)
!12884 = !DILocation(line: 0, scope: !12879)
!12885 = !DILocation(line: 214, column: 2, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12879, file: !3467, line: 214, column: 2)
!12887 = !{i64 2154773781}
!12888 = !DILocation(line: 215, column: 2, scope: !12879)
!12889 = !DILocation(line: 216, column: 1, scope: !12879)
!12890 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12787, file: !12787, line: 47, type: !12864, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12891)
!12891 = !{!12892, !12893}
!12892 = !DILocalVariable(name: "thread", arg: 1, scope: !12890, file: !12787, line: 47, type: !2180)
!12893 = !DILocalVariable(name: "ticks", arg: 2, scope: !12890, file: !12787, line: 47, type: !12829)
!12894 = !DILocation(line: 0, scope: !12890)
!12895 = !DILocation(line: 49, column: 30, scope: !12890)
!12896 = !DILocation(line: 49, column: 2, scope: !12890)
!12897 = !DILocation(line: 50, column: 1, scope: !12890)
!12898 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2176, file: !2176, line: 748, type: !365, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12899)
!12899 = !{!12900, !12917}
!12900 = !DILocalVariable(name: "thread_data", scope: !12901, file: !2176, line: 750, type: !12902)
!12901 = distinct !DILexicalBlock(scope: !12898, file: !2176, line: 750, column: 2)
!12902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12903, size: 32)
!12903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !220, line: 620, size: 384, elements: !12904)
!12904 = !{!12905, !12906, !12907, !12908, !12909, !12910, !12911, !12912, !12913, !12914, !12915, !12916}
!12905 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12903, file: !220, line: 621, baseType: !2180, size: 32)
!12906 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12903, file: !220, line: 622, baseType: !12669, size: 32, offset: 32)
!12907 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12903, file: !220, line: 623, baseType: !32, size: 32, offset: 64)
!12908 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12903, file: !220, line: 624, baseType: !352, size: 32, offset: 96)
!12909 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12903, file: !220, line: 625, baseType: !117, size: 32, offset: 128)
!12910 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12903, file: !220, line: 626, baseType: !117, size: 32, offset: 160)
!12911 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12903, file: !220, line: 627, baseType: !117, size: 32, offset: 192)
!12912 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12903, file: !220, line: 628, baseType: !118, size: 32, offset: 224)
!12913 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12903, file: !220, line: 629, baseType: !156, size: 32, offset: 256)
!12914 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12903, file: !220, line: 630, baseType: !362, size: 32, offset: 288)
!12915 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12903, file: !220, line: 631, baseType: !364, size: 32, offset: 320)
!12916 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12903, file: !220, line: 632, baseType: !133, size: 32, offset: 352)
!12917 = !DILocalVariable(name: "thread_data", scope: !12918, file: !2176, line: 781, type: !12902)
!12918 = distinct !DILexicalBlock(scope: !12898, file: !2176, line: 781, column: 2)
!12919 = !DILocation(line: 0, scope: !12901)
!12920 = !DILocation(line: 750, column: 2, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12922, file: !2176, line: 750, column: 2)
!12922 = distinct !DILexicalBlock(scope: !12923, file: !2176, line: 750, column: 2)
!12923 = distinct !DILexicalBlock(scope: !12901, file: !2176, line: 750, column: 2)
!12924 = !DILocation(line: 750, column: 2, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12926, file: !2176, line: 750, column: 2)
!12926 = distinct !DILexicalBlock(scope: !12921, file: !2176, line: 750, column: 2)
!12927 = !DILocation(line: 750, column: 2, scope: !12922)
!12928 = !DILocation(line: 750, column: 2, scope: !12901)
!12929 = !DILocation(line: 780, column: 2, scope: !12898)
!12930 = !DILocation(line: 0, scope: !12918)
!12931 = !DILocation(line: 781, column: 2, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12933, file: !2176, line: 781, column: 2)
!12933 = distinct !DILexicalBlock(scope: !12934, file: !2176, line: 781, column: 2)
!12934 = distinct !DILexicalBlock(scope: !12918, file: !2176, line: 781, column: 2)
!12935 = !DILocation(line: 752, column: 17, scope: !12936)
!12936 = distinct !DILexicalBlock(scope: !12923, file: !2176, line: 750, column: 38)
!12937 = !DILocation(line: 753, column: 17, scope: !12936)
!12938 = !DILocation(line: 754, column: 17, scope: !12936)
!12939 = !DILocation(line: 755, column: 17, scope: !12936)
!12940 = !DILocation(line: 756, column: 17, scope: !12936)
!12941 = !DILocation(line: 757, column: 17, scope: !12936)
!12942 = !DILocation(line: 758, column: 17, scope: !12936)
!12943 = !DILocation(line: 759, column: 17, scope: !12936)
!12944 = !DILocation(line: 760, column: 17, scope: !12936)
!12945 = !DILocation(line: 751, column: 3, scope: !12936)
!12946 = !DILocation(line: 763, column: 16, scope: !12936)
!12947 = !DILocation(line: 763, column: 29, scope: !12936)
!12948 = !DILocation(line: 763, column: 39, scope: !12936)
!12949 = !DILocation(line: 750, column: 2, scope: !12923)
!12950 = !DILocation(line: 750, column: 2, scope: !12926)
!12951 = distinct !{!12951, !12928, !12952}
!12952 = !DILocation(line: 764, column: 2, scope: !12901)
!12953 = !DILocation(line: 781, column: 2, scope: !12954)
!12954 = distinct !DILexicalBlock(scope: !12955, file: !2176, line: 781, column: 2)
!12955 = distinct !DILexicalBlock(scope: !12932, file: !2176, line: 781, column: 2)
!12956 = !DILocation(line: 781, column: 2, scope: !12933)
!12957 = !DILocation(line: 781, column: 2, scope: !12918)
!12958 = !DILocation(line: 787, column: 2, scope: !12898)
!12959 = !DILocation(line: 788, column: 1, scope: !12898)
!12960 = !DILocation(line: 782, column: 20, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !12962, file: !2176, line: 782, column: 7)
!12962 = distinct !DILexicalBlock(scope: !12934, file: !2176, line: 781, column: 38)
!12963 = !DILocation(line: 782, column: 31, scope: !12961)
!12964 = !DILocation(line: 782, column: 7, scope: !12962)
!12965 = !DILocation(line: 783, column: 37, scope: !12966)
!12966 = distinct !DILexicalBlock(scope: !12961, file: !2176, line: 782, column: 51)
!12967 = !DILocation(line: 784, column: 10, scope: !12966)
!12968 = !DILocation(line: 783, column: 4, scope: !12966)
!12969 = !DILocation(line: 785, column: 3, scope: !12966)
!12970 = !DILocation(line: 781, column: 2, scope: !12934)
!12971 = !DILocation(line: 781, column: 2, scope: !12955)
!12972 = distinct !{!12972, !12957, !12973}
!12973 = !DILocation(line: 786, column: 2, scope: !12918)
!12974 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3434, file: !3434, line: 403, type: !3435, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12975)
!12975 = !{!12976}
!12976 = !DILocalVariable(name: "t", arg: 1, scope: !12974, file: !3434, line: 403, type: !213)
!12977 = !DILocation(line: 0, scope: !12974)
!12978 = !DILocalVariable(name: "t", arg: 1, scope: !12979, file: !3434, line: 102, type: !213)
!12979 = distinct !DISubprogram(name: "z_tmcvt", scope: !3434, file: !3434, line: 102, type: !3442, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !12980)
!12980 = !{!12978, !12981, !12982, !12983, !12984, !12985, !12986, !12987, !12988, !12989, !12990}
!12981 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12979, file: !3434, line: 102, type: !156)
!12982 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12979, file: !3434, line: 103, type: !156)
!12983 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12979, file: !3434, line: 103, type: !146)
!12984 = !DILocalVariable(name: "result32", arg: 5, scope: !12979, file: !3434, line: 104, type: !146)
!12985 = !DILocalVariable(name: "round_up", arg: 6, scope: !12979, file: !3434, line: 104, type: !146)
!12986 = !DILocalVariable(name: "round_off", arg: 7, scope: !12979, file: !3434, line: 105, type: !146)
!12987 = !DILocalVariable(name: "mul_ratio", scope: !12979, file: !3434, line: 107, type: !146)
!12988 = !DILocalVariable(name: "div_ratio", scope: !12979, file: !3434, line: 109, type: !146)
!12989 = !DILocalVariable(name: "off", scope: !12979, file: !3434, line: 116, type: !213)
!12990 = !DILocalVariable(name: "rdivisor", scope: !12991, file: !3434, line: 119, type: !156)
!12991 = distinct !DILexicalBlock(scope: !12992, file: !3434, line: 118, column: 18)
!12992 = distinct !DILexicalBlock(scope: !12979, file: !3434, line: 118, column: 6)
!12993 = !DILocation(line: 0, scope: !12979, inlinedAt: !12994)
!12994 = distinct !DILocation(line: 406, column: 9, scope: !12974)
!12995 = !DILocation(line: 145, column: 13, scope: !12996, inlinedAt: !12994)
!12996 = distinct !DILexicalBlock(scope: !12997, file: !3434, line: 144, column: 10)
!12997 = distinct !DILexicalBlock(scope: !12998, file: !3434, line: 142, column: 7)
!12998 = distinct !DILexicalBlock(scope: !12999, file: !3434, line: 141, column: 24)
!12999 = distinct !DILexicalBlock(scope: !13000, file: !3434, line: 141, column: 13)
!13000 = distinct !DILexicalBlock(scope: !12979, file: !3434, line: 134, column: 6)
!13001 = !DILocation(line: 406, column: 2, scope: !12974)
!13002 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2176, file: !2176, line: 817, type: !3850, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !13003)
!13003 = !{!13004, !13005, !13006, !13007}
!13004 = !DILocalVariable(name: "entry", arg: 1, scope: !13002, file: !2176, line: 817, type: !352)
!13005 = !DILocalVariable(name: "p1", arg: 2, scope: !13002, file: !2176, line: 818, type: !117)
!13006 = !DILocalVariable(name: "p2", arg: 3, scope: !13002, file: !2176, line: 818, type: !117)
!13007 = !DILocalVariable(name: "p3", arg: 4, scope: !13002, file: !2176, line: 818, type: !117)
!13008 = !DILocation(line: 0, scope: !13002)
!13009 = !DILocation(line: 822, column: 2, scope: !13002)
!13010 = !DILocation(line: 822, column: 17, scope: !13002)
!13011 = !DILocation(line: 822, column: 30, scope: !13002)
!13012 = !DILocation(line: 823, column: 2, scope: !13002)
!13013 = !DILocation(line: 845, column: 2, scope: !13002)
!13014 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2176, file: !2176, line: 853, type: !13015, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !13018)
!13015 = !DISubroutineType(types: !13016)
!13016 = !{!146, !13017}
!13017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 32)
!13018 = !{!13019, !13020}
!13019 = !DILocalVariable(name: "l", arg: 1, scope: !13014, file: !2176, line: 853, type: !13017)
!13020 = !DILocalVariable(name: "thread_cpu", scope: !13014, file: !2176, line: 855, type: !22)
!13021 = !DILocation(line: 0, scope: !13014)
!13022 = !DILocation(line: 855, column: 28, scope: !13014)
!13023 = !DILocation(line: 857, column: 17, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !13014, file: !2176, line: 857, column: 6)
!13025 = !DILocation(line: 857, column: 6, scope: !13014)
!13026 = !DILocation(line: 858, column: 19, scope: !13027)
!13027 = distinct !DILexicalBlock(scope: !13028, file: !2176, line: 858, column: 7)
!13028 = distinct !DILexicalBlock(scope: !13024, file: !2176, line: 857, column: 24)
!13029 = !DILocation(line: 858, column: 42, scope: !13027)
!13030 = !DILocation(line: 858, column: 28, scope: !13027)
!13031 = !DILocation(line: 858, column: 25, scope: !13027)
!13032 = !DILocation(line: 858, column: 7, scope: !13028)
!13033 = !DILocation(line: 862, column: 2, scope: !13014)
!13034 = !DILocation(line: 863, column: 1, scope: !13014)
!13035 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2176, file: !2176, line: 865, type: !13015, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !13036)
!13036 = !{!13037}
!13037 = !DILocalVariable(name: "l", arg: 1, scope: !13035, file: !2176, line: 865, type: !13017)
!13038 = !DILocation(line: 0, scope: !13035)
!13039 = !DILocation(line: 867, column: 9, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !13035, file: !2176, line: 867, column: 6)
!13041 = !DILocation(line: 867, column: 38, scope: !13040)
!13042 = !DILocation(line: 867, column: 24, scope: !13040)
!13043 = !DILocation(line: 867, column: 54, scope: !13040)
!13044 = !DILocation(line: 867, column: 43, scope: !13040)
!13045 = !DILocation(line: 867, column: 41, scope: !13040)
!13046 = !DILocation(line: 867, column: 20, scope: !13040)
!13047 = !DILocation(line: 867, column: 6, scope: !13035)
!13048 = !DILocation(line: 870, column: 16, scope: !13035)
!13049 = !DILocation(line: 871, column: 2, scope: !13035)
!13050 = !DILocation(line: 872, column: 1, scope: !13035)
!13051 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2176, file: !2176, line: 874, type: !13052, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !13054)
!13052 = !DISubroutineType(types: !13053)
!13053 = !{null, !13017}
!13054 = !{!13055}
!13055 = !DILocalVariable(name: "l", arg: 1, scope: !13051, file: !2176, line: 874, type: !13017)
!13056 = !DILocation(line: 0, scope: !13051)
!13057 = !DILocation(line: 876, column: 32, scope: !13051)
!13058 = !DILocation(line: 876, column: 18, scope: !13051)
!13059 = !DILocation(line: 876, column: 48, scope: !13051)
!13060 = !DILocation(line: 876, column: 37, scope: !13051)
!13061 = !DILocation(line: 876, column: 35, scope: !13051)
!13062 = !DILocation(line: 876, column: 5, scope: !13051)
!13063 = !DILocation(line: 876, column: 16, scope: !13051)
!13064 = !DILocation(line: 877, column: 1, scope: !13051)
!13065 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2176, file: !2176, line: 888, type: !13066, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !13068)
!13066 = !DISubroutineType(types: !13067)
!13067 = !{!118, !2180}
!13068 = !{!13069}
!13069 = !DILocalVariable(name: "thread", arg: 1, scope: !13065, file: !2176, line: 888, type: !2180)
!13070 = !DILocation(line: 0, scope: !13065)
!13071 = !DILocation(line: 893, column: 2, scope: !13065)
!13072 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2176, file: !2176, line: 897, type: !13073, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !13075)
!13073 = !DISubroutineType(types: !13074)
!13074 = !{!118, !2180, !32}
!13075 = !{!13076, !13077}
!13076 = !DILocalVariable(name: "thread", arg: 1, scope: !13072, file: !2176, line: 897, type: !2180)
!13077 = !DILocalVariable(name: "options", arg: 2, scope: !13072, file: !2176, line: 897, type: !32)
!13078 = !DILocation(line: 0, scope: !13072)
!13079 = !DILocation(line: 902, column: 2, scope: !13072)
!13080 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2176, file: !2176, line: 1072, type: !13081, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !13086)
!13081 = !DISubroutineType(types: !13082)
!13082 = !{!118, !2179, !13083}
!13083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13084, size: 32)
!13084 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !225, line: 234, baseType: !13085)
!13085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !225, line: 192, elements: !2123)
!13086 = !{!13087, !13088}
!13087 = !DILocalVariable(name: "thread", arg: 1, scope: !13080, file: !2176, line: 1072, type: !2179)
!13088 = !DILocalVariable(name: "stats", arg: 2, scope: !13080, file: !2176, line: 1073, type: !13083)
!13089 = !DILocation(line: 0, scope: !13080)
!13090 = !DILocation(line: 1075, column: 14, scope: !13091)
!13091 = distinct !DILexicalBlock(scope: !13080, file: !2176, line: 1075, column: 6)
!13092 = !DILocation(line: 1075, column: 23, scope: !13091)
!13093 = !DILocation(line: 1086, column: 1, scope: !13080)
!13094 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2176, file: !2176, line: 1088, type: !13095, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !13097)
!13095 = !DISubroutineType(types: !13096)
!13096 = !{!118, !13083}
!13097 = !{!13098}
!13098 = !DILocalVariable(name: "stats", arg: 1, scope: !13094, file: !2176, line: 1088, type: !13083)
!13099 = !DILocation(line: 0, scope: !13094)
!13100 = !DILocation(line: 1094, column: 12, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13094, file: !2176, line: 1094, column: 6)
!13102 = !DILocation(line: 1120, column: 1, scope: !13094)
!13103 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13104, file: !13104, line: 20, type: !365, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3130, retainedNodes: !2123)
!13104 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13105 = !DILocation(line: 30, column: 2, scope: !13103)
!13106 = !DILocation(line: 31, column: 1, scope: !13103)
!13107 = distinct !DISubprogram(name: "idle", scope: !13104, file: !13104, line: 33, type: !354, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3130, retainedNodes: !13108)
!13108 = !{!13109, !13110, !13111}
!13109 = !DILocalVariable(name: "unused1", arg: 1, scope: !13107, file: !13104, line: 33, type: !117)
!13110 = !DILocalVariable(name: "unused2", arg: 2, scope: !13107, file: !13104, line: 33, type: !117)
!13111 = !DILocalVariable(name: "unused3", arg: 3, scope: !13107, file: !13104, line: 33, type: !117)
!13112 = !DILocation(line: 0, scope: !13107)
!13113 = !DILocation(line: 39, column: 2, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !13115, file: !13104, line: 39, column: 2)
!13115 = distinct !DILexicalBlock(scope: !13107, file: !13104, line: 39, column: 2)
!13116 = !DILocation(line: 39, column: 2, scope: !13115)
!13117 = !DILocation(line: 39, column: 2, scope: !13118)
!13118 = distinct !DILexicalBlock(scope: !13114, file: !13104, line: 39, column: 2)
!13119 = !DILocation(line: 55, column: 2, scope: !13120, inlinedAt: !13124)
!13120 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6172, file: !6172, line: 42, type: !6173, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3130, retainedNodes: !13121)
!13121 = !{!13122, !13123}
!13122 = !DILocalVariable(name: "key", scope: !13120, file: !6172, line: 44, type: !32)
!13123 = !DILocalVariable(name: "tmp", scope: !13120, file: !6172, line: 53, type: !32)
!13124 = distinct !DILocation(line: 62, column: 10, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13107, file: !13104, line: 41, column: 15)
!13126 = !{i64 2241528}
!13127 = !DILocation(line: 0, scope: !13120, inlinedAt: !13124)
!13128 = !DILocation(line: 86, column: 3, scope: !13125)
!13129 = !DILocation(line: 41, column: 2, scope: !13107)
!13130 = distinct !{!13130, !13129, !13131}
!13131 = !DILocation(line: 105, column: 2, scope: !13107)
!13132 = distinct !DISubprogram(name: "k_cpu_idle", scope: !220, file: !220, line: 5627, type: !365, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3130, retainedNodes: !2123)
!13133 = !DILocation(line: 5629, column: 2, scope: !13132)
!13134 = !DILocation(line: 5630, column: 1, scope: !13132)
!13135 = !DISubprogram(name: "arch_cpu_idle", scope: !345, file: !345, line: 167, type: !365, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2123)
!13136 = distinct !DISubprogram(name: "z_queue_node_peek", scope: !3148, file: !3148, line: 30, type: !13137, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13139)
!13137 = !DISubroutineType(types: !13138)
!13138 = !{!117, !3157, !146}
!13139 = !{!13140, !13141, !13142, !13143}
!13140 = !DILocalVariable(name: "node", arg: 1, scope: !13136, file: !3148, line: 30, type: !3157)
!13141 = !DILocalVariable(name: "needs_free", arg: 2, scope: !13136, file: !3148, line: 30, type: !146)
!13142 = !DILocalVariable(name: "ret", scope: !13136, file: !3148, line: 32, type: !117)
!13143 = !DILocalVariable(name: "anode", scope: !13144, file: !3148, line: 40, type: !3146)
!13144 = distinct !DILexicalBlock(scope: !13145, file: !3148, line: 34, column: 68)
!13145 = distinct !DILexicalBlock(scope: !13136, file: !3148, line: 34, column: 6)
!13146 = !DILocation(line: 0, scope: !13136)
!13147 = !DILocation(line: 34, column: 12, scope: !13145)
!13148 = !DILocation(line: 34, column: 21, scope: !13145)
!13149 = !DILocation(line: 34, column: 25, scope: !13145)
!13150 = !DILocation(line: 34, column: 52, scope: !13145)
!13151 = !DILocation(line: 34, column: 6, scope: !13136)
!13152 = !DILocation(line: 0, scope: !13144)
!13153 = !DILocation(line: 43, column: 16, scope: !13144)
!13154 = !DILocation(line: 44, column: 7, scope: !13144)
!13155 = !DILocation(line: 42, column: 11, scope: !13144)
!13156 = !DILocation(line: 45, column: 4, scope: !13157)
!13157 = distinct !DILexicalBlock(scope: !13158, file: !3148, line: 44, column: 19)
!13158 = distinct !DILexicalBlock(scope: !13144, file: !3148, line: 44, column: 7)
!13159 = !DILocation(line: 46, column: 3, scope: !13157)
!13160 = !DILocation(line: 52, column: 9, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13145, file: !3148, line: 47, column: 9)
!13162 = !DILocation(line: 0, scope: !13145)
!13163 = !DILocation(line: 55, column: 2, scope: !13136)
!13164 = distinct !DISubprogram(name: "sys_sfnode_flags_get", scope: !417, file: !417, line: 270, type: !13165, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13167)
!13165 = !DISubroutineType(types: !13166)
!13166 = !{!143, !3157}
!13167 = !{!13168}
!13168 = !DILocalVariable(name: "node", arg: 1, scope: !13164, file: !417, line: 270, type: !3157)
!13169 = !DILocation(line: 0, scope: !13164)
!13170 = !DILocation(line: 272, column: 15, scope: !13164)
!13171 = !DILocation(line: 272, column: 9, scope: !13164)
!13172 = !DILocation(line: 272, column: 2, scope: !13164)
!13173 = distinct !DISubprogram(name: "z_impl_k_queue_init", scope: !3148, file: !3148, line: 58, type: !13174, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13195)
!13174 = !DISubroutineType(types: !13175)
!13175 = !{null, !13176}
!13176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13177, size: 32)
!13177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !220, line: 1709, size: 160, elements: !13178)
!13178 = !{!13179, !13185, !13189}
!13179 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !13177, file: !220, line: 1710, baseType: !13180, size: 64)
!13180 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !417, line: 46, baseType: !13181)
!13181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !417, line: 41, size: 64, elements: !13182)
!13182 = !{!13183, !13184}
!13183 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13181, file: !417, line: 42, baseType: !3157, size: 32)
!13184 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13181, file: !417, line: 43, baseType: !3157, size: 32, offset: 32)
!13185 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13177, file: !220, line: 1711, baseType: !13186, size: 32, offset: 64)
!13186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !13187)
!13187 = !{!13188}
!13188 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13186, file: !334, line: 52, baseType: !22, size: 32)
!13189 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13177, file: !220, line: 1712, baseType: !13190, size: 64, offset: 96)
!13190 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !13191)
!13191 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !13192)
!13192 = !{!13193}
!13193 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13191, file: !261, line: 232, baseType: !13194, size: 64)
!13194 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !3160)
!13195 = !{!13196}
!13196 = !DILocalVariable(name: "queue", arg: 1, scope: !13173, file: !3148, line: 58, type: !13176)
!13197 = !DILocation(line: 0, scope: !13173)
!13198 = !DILocation(line: 60, column: 26, scope: !13173)
!13199 = !DILocation(line: 60, column: 2, scope: !13173)
!13200 = !DILocation(line: 61, column: 16, scope: !13173)
!13201 = !DILocation(line: 62, column: 23, scope: !13173)
!13202 = !DILocation(line: 62, column: 2, scope: !13173)
!13203 = !DILocation(line: 70, column: 1, scope: !13173)
!13204 = distinct !DISubprogram(name: "sys_sflist_init", scope: !417, file: !417, line: 202, type: !13205, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13208)
!13205 = !DISubroutineType(types: !13206)
!13206 = !{null, !13207}
!13207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13180, size: 32)
!13208 = !{!13209}
!13209 = !DILocalVariable(name: "list", arg: 1, scope: !13204, file: !417, line: 202, type: !13207)
!13210 = !DILocation(line: 0, scope: !13204)
!13211 = !DILocation(line: 204, column: 8, scope: !13204)
!13212 = !DILocation(line: 204, column: 13, scope: !13204)
!13213 = !DILocation(line: 205, column: 8, scope: !13204)
!13214 = !DILocation(line: 205, column: 13, scope: !13204)
!13215 = !DILocation(line: 206, column: 1, scope: !13204)
!13216 = distinct !DISubprogram(name: "z_waitq_init", scope: !12719, file: !12719, line: 47, type: !13217, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13220)
!13217 = !DISubroutineType(types: !13218)
!13218 = !{null, !13219}
!13219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13190, size: 32)
!13220 = !{!13221}
!13221 = !DILocalVariable(name: "w", arg: 1, scope: !13216, file: !12719, line: 47, type: !13219)
!13222 = !DILocation(line: 0, scope: !13216)
!13223 = !DILocation(line: 49, column: 21, scope: !13216)
!13224 = !DILocation(line: 49, column: 2, scope: !13216)
!13225 = !DILocation(line: 50, column: 1, scope: !13216)
!13226 = distinct !DISubprogram(name: "sys_dlist_init", scope: !235, file: !235, line: 197, type: !13227, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13230)
!13227 = !DISubroutineType(types: !13228)
!13228 = !{null, !13229}
!13229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13194, size: 32)
!13230 = !{!13231}
!13231 = !DILocalVariable(name: "list", arg: 1, scope: !13226, file: !235, line: 197, type: !13229)
!13232 = !DILocation(line: 0, scope: !13226)
!13233 = !DILocation(line: 199, column: 8, scope: !13226)
!13234 = !DILocation(line: 199, column: 13, scope: !13226)
!13235 = !DILocation(line: 200, column: 8, scope: !13226)
!13236 = !DILocation(line: 200, column: 13, scope: !13226)
!13237 = !DILocation(line: 201, column: 1, scope: !13226)
!13238 = distinct !DISubprogram(name: "z_impl_k_queue_cancel_wait", scope: !3148, file: !3148, line: 94, type: !13174, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13239)
!13239 = !{!13240, !13241, !13246}
!13240 = !DILocalVariable(name: "queue", arg: 1, scope: !13238, file: !3148, line: 94, type: !13176)
!13241 = !DILocalVariable(name: "key", scope: !13238, file: !3148, line: 98, type: !13242)
!13242 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !13243)
!13243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !13244)
!13244 = !{!13245}
!13245 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13243, file: !334, line: 33, baseType: !118, size: 32)
!13246 = !DILocalVariable(name: "first_pending_thread", scope: !13238, file: !3148, line: 99, type: !13247)
!13247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13248, size: 32)
!13248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !13249)
!13249 = !{!13250, !13288, !13300, !13301, !13302, !13303, !13309, !13321}
!13250 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13248, file: !225, line: 247, baseType: !13251, size: 384)
!13251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !13252)
!13252 = !{!13253, !13263, !13264, !13265, !13266, !13275, !13276, !13277}
!13253 = !DIDerivedType(tag: DW_TAG_member, scope: !13251, file: !225, line: 60, baseType: !13254, size: 64)
!13254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13251, file: !225, line: 60, size: 64, elements: !13255)
!13255 = !{!13256, !13257}
!13256 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13254, file: !225, line: 61, baseType: !3159, size: 64)
!13257 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13254, file: !225, line: 62, baseType: !13258, size: 64)
!13258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !13259)
!13259 = !{!13260}
!13260 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13258, file: !251, line: 50, baseType: !13261, size: 64)
!13261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13262, size: 64, elements: !256)
!13262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13258, size: 32)
!13263 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13251, file: !225, line: 68, baseType: !13219, size: 32, offset: 64)
!13264 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13251, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!13265 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13251, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!13266 = !DIDerivedType(tag: DW_TAG_member, scope: !13251, file: !225, line: 90, baseType: !13267, size: 16, offset: 112)
!13267 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13251, file: !225, line: 90, size: 16, elements: !13268)
!13268 = !{!13269, !13274}
!13269 = !DIDerivedType(tag: DW_TAG_member, scope: !13267, file: !225, line: 91, baseType: !13270, size: 16)
!13270 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13267, file: !225, line: 91, size: 16, elements: !13271)
!13271 = !{!13272, !13273}
!13272 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13270, file: !225, line: 96, baseType: !275, size: 8)
!13273 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13270, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!13274 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13267, file: !225, line: 100, baseType: !279, size: 16)
!13275 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13251, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!13276 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13251, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!13277 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13251, file: !225, line: 131, baseType: !13278, size: 192, offset: 192)
!13278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !13279)
!13279 = !{!13280, !13281, !13287}
!13280 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13278, file: !261, line: 245, baseType: !3159, size: 64)
!13281 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13278, file: !261, line: 246, baseType: !13282, size: 32, offset: 64)
!13282 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !13283)
!13283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13284, size: 32)
!13284 = !DISubroutineType(types: !13285)
!13285 = !{null, !13286}
!13286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13278, size: 32)
!13287 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13278, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!13288 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13248, file: !225, line: 250, baseType: !13289, size: 288, offset: 384)
!13289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !13290)
!13290 = !{!13291, !13292, !13293, !13294, !13295, !13296, !13297, !13298, !13299}
!13291 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13289, file: !296, line: 26, baseType: !156, size: 32)
!13292 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13289, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!13293 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13289, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!13294 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13289, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!13295 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13289, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!13296 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13289, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!13297 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13289, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!13298 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13289, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!13299 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13289, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!13300 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13248, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!13301 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13248, file: !225, line: 256, baseType: !13190, size: 64, offset: 704)
!13302 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13248, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!13303 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13248, file: !225, line: 300, baseType: !13304, size: 96, offset: 800)
!13304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !13305)
!13305 = !{!13306, !13307, !13308}
!13306 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13304, file: !225, line: 153, baseType: !22, size: 32)
!13307 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13304, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!13308 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13304, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!13309 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13248, file: !225, line: 325, baseType: !13310, size: 32, offset: 896)
!13310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13311, size: 32)
!13311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !13312)
!13312 = !{!13313, !13319, !13320}
!13313 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13311, file: !220, line: 5074, baseType: !13314, size: 96)
!13314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !13315)
!13315 = !{!13316, !13317, !13318}
!13316 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13314, file: !324, line: 57, baseType: !327, size: 32)
!13317 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13314, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!13318 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13314, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!13319 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13311, file: !220, line: 5075, baseType: !13190, size: 64, offset: 96)
!13320 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13311, file: !220, line: 5076, baseType: !13186, size: 32, offset: 160)
!13321 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13248, file: !225, line: 343, baseType: !13322, size: 64, offset: 928)
!13322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !13323)
!13323 = !{!13324, !13325}
!13324 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13322, file: !296, line: 63, baseType: !156, size: 32)
!13325 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13322, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!13326 = !DILocation(line: 0, scope: !13238)
!13327 = !DILocation(line: 98, column: 45, scope: !13238)
!13328 = !DILocalVariable(name: "l", arg: 1, scope: !13329, file: !334, line: 136, type: !13332)
!13329 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !13330, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13333)
!13330 = !DISubroutineType(types: !13331)
!13331 = !{!13242, !13332}
!13332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13186, size: 32)
!13333 = !{!13328, !13334}
!13334 = !DILocalVariable(name: "k", scope: !13329, file: !334, line: 139, type: !13242)
!13335 = !DILocation(line: 0, scope: !13329, inlinedAt: !13336)
!13336 = distinct !DILocation(line: 98, column: 25, scope: !13238)
!13337 = !DILocation(line: 55, column: 2, scope: !13338, inlinedAt: !13342)
!13338 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6172, file: !6172, line: 42, type: !6173, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13339)
!13339 = !{!13340, !13341}
!13340 = !DILocalVariable(name: "key", scope: !13338, file: !6172, line: 44, type: !32)
!13341 = !DILocalVariable(name: "tmp", scope: !13338, file: !6172, line: 53, type: !32)
!13342 = distinct !DILocation(line: 145, column: 10, scope: !13329, inlinedAt: !13336)
!13343 = !{i64 2249269}
!13344 = !DILocation(line: 0, scope: !13338, inlinedAt: !13342)
!13345 = !DILocation(line: 148, column: 2, scope: !13346, inlinedAt: !13336)
!13346 = distinct !DILexicalBlock(scope: !13347, file: !334, line: 148, column: 2)
!13347 = distinct !DILexicalBlock(scope: !13329, file: !334, line: 148, column: 2)
!13348 = !DILocation(line: 148, column: 2, scope: !13347, inlinedAt: !13336)
!13349 = !DILocation(line: 148, column: 2, scope: !13350, inlinedAt: !13336)
!13350 = distinct !DILexicalBlock(scope: !13346, file: !334, line: 148, column: 2)
!13351 = !DILocation(line: 160, column: 2, scope: !13329, inlinedAt: !13336)
!13352 = !DILocation(line: 101, column: 55, scope: !13238)
!13353 = !DILocation(line: 101, column: 25, scope: !13238)
!13354 = !DILocation(line: 103, column: 27, scope: !13355)
!13355 = distinct !DILexicalBlock(scope: !13238, file: !3148, line: 103, column: 6)
!13356 = !DILocation(line: 103, column: 6, scope: !13238)
!13357 = !DILocation(line: 104, column: 3, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13355, file: !3148, line: 103, column: 36)
!13359 = !DILocation(line: 105, column: 2, scope: !13358)
!13360 = !DILocation(line: 108, column: 2, scope: !13238)
!13361 = !DILocation(line: 109, column: 1, scope: !13238)
!13362 = distinct !DISubprogram(name: "prepare_thread_to_run", scope: !3148, file: !3148, line: 81, type: !13363, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13365)
!13363 = !DISubroutineType(types: !13364)
!13364 = !{null, !13247, !117}
!13365 = !{!13366, !13367}
!13366 = !DILocalVariable(name: "thread", arg: 1, scope: !13362, file: !3148, line: 81, type: !13247)
!13367 = !DILocalVariable(name: "data", arg: 2, scope: !13362, file: !3148, line: 81, type: !117)
!13368 = !DILocation(line: 0, scope: !13362)
!13369 = !DILocalVariable(name: "thread", arg: 1, scope: !13370, file: !13371, line: 134, type: !13247)
!13370 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13371, file: !13371, line: 134, type: !13372, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13374)
!13371 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13372 = !DISubroutineType(types: !13373)
!13373 = !{null, !13247, !32, !117}
!13374 = !{!13369, !13375, !13376}
!13375 = !DILocalVariable(name: "value", arg: 2, scope: !13370, file: !13371, line: 135, type: !32)
!13376 = !DILocalVariable(name: "data", arg: 3, scope: !13370, file: !13371, line: 136, type: !117)
!13377 = !DILocation(line: 0, scope: !13370, inlinedAt: !13378)
!13378 = distinct !DILocation(line: 83, column: 2, scope: !13362)
!13379 = !DILocalVariable(name: "thread", arg: 1, scope: !13380, file: !12400, line: 65, type: !13247)
!13380 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12400, file: !12400, line: 65, type: !13381, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13383)
!13381 = !DISubroutineType(types: !13382)
!13382 = !{null, !13247, !32}
!13383 = !{!13379, !13384}
!13384 = !DILocalVariable(name: "value", arg: 2, scope: !13380, file: !12400, line: 65, type: !32)
!13385 = !DILocation(line: 0, scope: !13380, inlinedAt: !13386)
!13386 = distinct !DILocation(line: 138, column: 2, scope: !13370, inlinedAt: !13378)
!13387 = !DILocation(line: 67, column: 15, scope: !13380, inlinedAt: !13386)
!13388 = !DILocation(line: 67, column: 33, scope: !13380, inlinedAt: !13386)
!13389 = !DILocation(line: 139, column: 15, scope: !13370, inlinedAt: !13378)
!13390 = !DILocation(line: 139, column: 25, scope: !13370, inlinedAt: !13378)
!13391 = !DILocation(line: 84, column: 2, scope: !13362)
!13392 = !DILocation(line: 85, column: 1, scope: !13362)
!13393 = distinct !DISubprogram(name: "k_queue_insert", scope: !3148, file: !3148, line: 175, type: !13394, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13396)
!13394 = !DISubroutineType(types: !13395)
!13395 = !{null, !13176, !117, !117}
!13396 = !{!13397, !13398, !13399}
!13397 = !DILocalVariable(name: "queue", arg: 1, scope: !13393, file: !3148, line: 175, type: !13176)
!13398 = !DILocalVariable(name: "prev", arg: 2, scope: !13393, file: !3148, line: 175, type: !117)
!13399 = !DILocalVariable(name: "data", arg: 3, scope: !13393, file: !3148, line: 175, type: !117)
!13400 = !DILocation(line: 0, scope: !13393)
!13401 = !DILocation(line: 179, column: 8, scope: !13393)
!13402 = !DILocation(line: 182, column: 1, scope: !13393)
!13403 = distinct !DISubprogram(name: "queue_insert", scope: !3148, file: !3148, line: 120, type: !13404, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13406)
!13404 = !DISubroutineType(types: !13405)
!13405 = !{!362, !13176, !117, !117, !146, !146}
!13406 = !{!13407, !13408, !13409, !13410, !13411, !13412, !13413, !13414}
!13407 = !DILocalVariable(name: "queue", arg: 1, scope: !13403, file: !3148, line: 120, type: !13176)
!13408 = !DILocalVariable(name: "prev", arg: 2, scope: !13403, file: !3148, line: 120, type: !117)
!13409 = !DILocalVariable(name: "data", arg: 3, scope: !13403, file: !3148, line: 120, type: !117)
!13410 = !DILocalVariable(name: "alloc", arg: 4, scope: !13403, file: !3148, line: 121, type: !146)
!13411 = !DILocalVariable(name: "is_append", arg: 5, scope: !13403, file: !3148, line: 121, type: !146)
!13412 = !DILocalVariable(name: "first_pending_thread", scope: !13403, file: !3148, line: 123, type: !13247)
!13413 = !DILocalVariable(name: "key", scope: !13403, file: !3148, line: 124, type: !13242)
!13414 = !DILocalVariable(name: "anode", scope: !13415, file: !3148, line: 146, type: !3146)
!13415 = distinct !DILexicalBlock(scope: !13416, file: !3148, line: 145, column: 13)
!13416 = distinct !DILexicalBlock(scope: !13403, file: !3148, line: 145, column: 6)
!13417 = !DILocation(line: 0, scope: !13403)
!13418 = !DILocation(line: 124, column: 45, scope: !13403)
!13419 = !DILocation(line: 0, scope: !13329, inlinedAt: !13420)
!13420 = distinct !DILocation(line: 124, column: 25, scope: !13403)
!13421 = !DILocation(line: 55, column: 2, scope: !13338, inlinedAt: !13422)
!13422 = distinct !DILocation(line: 145, column: 10, scope: !13329, inlinedAt: !13420)
!13423 = !DILocation(line: 0, scope: !13338, inlinedAt: !13422)
!13424 = !DILocation(line: 148, column: 2, scope: !13346, inlinedAt: !13420)
!13425 = !DILocation(line: 148, column: 2, scope: !13347, inlinedAt: !13420)
!13426 = !DILocation(line: 148, column: 2, scope: !13350, inlinedAt: !13420)
!13427 = !DILocation(line: 160, column: 2, scope: !13329, inlinedAt: !13420)
!13428 = !DILocation(line: 128, column: 6, scope: !13403)
!13429 = !DILocation(line: 129, column: 39, scope: !13430)
!13430 = distinct !DILexicalBlock(scope: !13431, file: !3148, line: 128, column: 17)
!13431 = distinct !DILexicalBlock(scope: !13403, file: !3148, line: 128, column: 6)
!13432 = !DILocation(line: 129, column: 10, scope: !13430)
!13433 = !DILocation(line: 130, column: 2, scope: !13430)
!13434 = !DILocation(line: 131, column: 55, scope: !13403)
!13435 = !DILocation(line: 131, column: 25, scope: !13403)
!13436 = !DILocation(line: 133, column: 27, scope: !13437)
!13437 = distinct !DILexicalBlock(scope: !13403, file: !3148, line: 133, column: 6)
!13438 = !DILocation(line: 133, column: 6, scope: !13403)
!13439 = !DILocation(line: 136, column: 3, scope: !13440)
!13440 = distinct !DILexicalBlock(scope: !13437, file: !3148, line: 133, column: 36)
!13441 = !DILocation(line: 137, column: 3, scope: !13440)
!13442 = !DILocation(line: 141, column: 3, scope: !13440)
!13443 = !DILocation(line: 145, column: 6, scope: !13403)
!13444 = !DILocation(line: 148, column: 11, scope: !13415)
!13445 = !DILocation(line: 0, scope: !13415)
!13446 = !DILocation(line: 149, column: 13, scope: !13447)
!13447 = distinct !DILexicalBlock(scope: !13415, file: !3148, line: 149, column: 7)
!13448 = !DILocation(line: 149, column: 7, scope: !13415)
!13449 = !DILocalVariable(name: "key", arg: 2, scope: !13450, file: !334, line: 190, type: !13242)
!13450 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !13451, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13453)
!13451 = !DISubroutineType(types: !13452)
!13452 = !{null, !13332, !13242}
!13453 = !{!13454, !13449}
!13454 = !DILocalVariable(name: "l", arg: 1, scope: !13450, file: !334, line: 189, type: !13332)
!13455 = !DILocation(line: 0, scope: !13450, inlinedAt: !13456)
!13456 = distinct !DILocation(line: 150, column: 4, scope: !13457)
!13457 = distinct !DILexicalBlock(scope: !13447, file: !3148, line: 149, column: 22)
!13458 = !DILocation(line: 194, column: 2, scope: !13459, inlinedAt: !13456)
!13459 = distinct !DILexicalBlock(scope: !13460, file: !334, line: 194, column: 2)
!13460 = distinct !DILexicalBlock(scope: !13450, file: !334, line: 194, column: 2)
!13461 = !DILocation(line: 194, column: 2, scope: !13460, inlinedAt: !13456)
!13462 = !DILocation(line: 194, column: 2, scope: !13463, inlinedAt: !13456)
!13463 = distinct !DILexicalBlock(scope: !13459, file: !334, line: 194, column: 2)
!13464 = !DILocalVariable(name: "key", arg: 1, scope: !13465, file: !6172, line: 84, type: !32)
!13465 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6172, file: !6172, line: 84, type: !6183, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13466)
!13466 = !{!13464}
!13467 = !DILocation(line: 0, scope: !13465, inlinedAt: !13468)
!13468 = distinct !DILocation(line: 215, column: 2, scope: !13450, inlinedAt: !13456)
!13469 = !DILocation(line: 95, column: 2, scope: !13465, inlinedAt: !13468)
!13470 = !{i64 2250086}
!13471 = !DILocation(line: 157, column: 10, scope: !13415)
!13472 = !DILocation(line: 157, column: 15, scope: !13415)
!13473 = !DILocation(line: 158, column: 27, scope: !13415)
!13474 = !DILocation(line: 158, column: 3, scope: !13415)
!13475 = !DILocation(line: 161, column: 19, scope: !13476)
!13476 = distinct !DILexicalBlock(scope: !13416, file: !3148, line: 160, column: 9)
!13477 = !DILocation(line: 161, column: 3, scope: !13476)
!13478 = !DILocation(line: 166, column: 42, scope: !13403)
!13479 = !DILocation(line: 166, column: 28, scope: !13403)
!13480 = !DILocation(line: 166, column: 36, scope: !13403)
!13481 = !DILocation(line: 166, column: 2, scope: !13403)
!13482 = !DILocation(line: 168, column: 2, scope: !13403)
!13483 = !DILocation(line: 172, column: 2, scope: !13403)
!13484 = !DILocation(line: 173, column: 1, scope: !13403)
!13485 = distinct !DISubprogram(name: "sys_sflist_peek_tail", scope: !417, file: !417, line: 255, type: !13486, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13488)
!13486 = !DISubroutineType(types: !13487)
!13487 = !{!3157, !13207}
!13488 = !{!13489}
!13489 = !DILocalVariable(name: "list", arg: 1, scope: !13485, file: !417, line: 255, type: !13207)
!13490 = !DILocation(line: 0, scope: !13485)
!13491 = !DILocation(line: 257, column: 15, scope: !13485)
!13492 = !DILocation(line: 257, column: 2, scope: !13485)
!13493 = distinct !DISubprogram(name: "z_thread_malloc", scope: !13371, file: !13371, line: 102, type: !13494, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13495)
!13494 = !DISubroutineType(types: !3111)
!13495 = !{!13496}
!13496 = !DILocalVariable(name: "size", arg: 1, scope: !13493, file: !13371, line: 102, type: !315)
!13497 = !DILocation(line: 0, scope: !13493)
!13498 = !DILocation(line: 104, column: 9, scope: !13493)
!13499 = !DILocation(line: 104, column: 2, scope: !13493)
!13500 = distinct !DISubprogram(name: "sys_sfnode_init", scope: !417, file: !417, line: 288, type: !13501, scopeLine: 289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13503)
!13501 = !DISubroutineType(types: !13502)
!13502 = !{null, !3157, !143}
!13503 = !{!13504, !13505}
!13504 = !DILocalVariable(name: "node", arg: 1, scope: !13500, file: !417, line: 288, type: !3157)
!13505 = !DILocalVariable(name: "flags", arg: 2, scope: !13500, file: !417, line: 288, type: !143)
!13506 = !DILocation(line: 0, scope: !13500)
!13507 = !DILocation(line: 290, column: 2, scope: !13508)
!13508 = distinct !DILexicalBlock(scope: !13509, file: !417, line: 290, column: 2)
!13509 = distinct !DILexicalBlock(scope: !13500, file: !417, line: 290, column: 2)
!13510 = !DILocation(line: 290, column: 2, scope: !13509)
!13511 = !DILocation(line: 290, column: 2, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13508, file: !417, line: 290, column: 2)
!13513 = !DILocation(line: 291, column: 8, scope: !13500)
!13514 = !DILocation(line: 291, column: 23, scope: !13500)
!13515 = !DILocation(line: 292, column: 1, scope: !13500)
!13516 = distinct !DISubprogram(name: "sys_sflist_insert", scope: !417, file: !417, line: 420, type: !13517, scopeLine: 420, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13519)
!13517 = !DISubroutineType(types: !13518)
!13518 = !{null, !13207, !3157, !3157}
!13519 = !{!13520, !13521, !13522}
!13520 = !DILocalVariable(name: "list", arg: 1, scope: !13516, file: !417, line: 420, type: !13207)
!13521 = !DILocalVariable(name: "prev", arg: 2, scope: !13516, file: !417, line: 420, type: !3157)
!13522 = !DILocalVariable(name: "node", arg: 3, scope: !13516, file: !417, line: 420, type: !3157)
!13523 = !DILocation(line: 0, scope: !13516)
!13524 = !DILocation(line: 420, column: 1, scope: !13525)
!13525 = distinct !DILexicalBlock(scope: !13516, file: !417, line: 420, column: 1)
!13526 = !DILocation(line: 420, column: 1, scope: !13516)
!13527 = !DILocation(line: 420, column: 1, scope: !13528)
!13528 = distinct !DILexicalBlock(scope: !13525, file: !417, line: 420, column: 1)
!13529 = !DILocation(line: 420, column: 1, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !13525, file: !417, line: 420, column: 1)
!13531 = !DILocation(line: 420, column: 1, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13530, file: !417, line: 420, column: 1)
!13533 = !DILocation(line: 420, column: 1, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13530, file: !417, line: 420, column: 1)
!13535 = distinct !DISubprogram(name: "sys_sflist_prepend", scope: !417, file: !417, line: 360, type: !13536, scopeLine: 360, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13538)
!13536 = !DISubroutineType(types: !13537)
!13537 = !{null, !13207, !3157}
!13538 = !{!13539, !13540}
!13539 = !DILocalVariable(name: "list", arg: 1, scope: !13535, file: !417, line: 360, type: !13207)
!13540 = !DILocalVariable(name: "node", arg: 2, scope: !13535, file: !417, line: 360, type: !3157)
!13541 = !DILocation(line: 0, scope: !13535)
!13542 = !DILocation(line: 360, column: 1, scope: !13535)
!13543 = !DILocation(line: 360, column: 1, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13535, file: !417, line: 360, column: 1)
!13545 = !DILocation(line: 360, column: 1, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13544, file: !417, line: 360, column: 1)
!13547 = distinct !DISubprogram(name: "z_sfnode_next_peek", scope: !417, file: !417, line: 211, type: !13548, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13550)
!13548 = !DISubroutineType(types: !13549)
!13549 = !{!3157, !3157}
!13550 = !{!13551}
!13551 = !DILocalVariable(name: "node", arg: 1, scope: !13547, file: !417, line: 211, type: !3157)
!13552 = !DILocation(line: 0, scope: !13547)
!13553 = !DILocation(line: 213, column: 32, scope: !13547)
!13554 = !DILocation(line: 213, column: 47, scope: !13547)
!13555 = !DILocation(line: 213, column: 9, scope: !13547)
!13556 = !DILocation(line: 213, column: 2, scope: !13547)
!13557 = distinct !DISubprogram(name: "sys_sflist_append", scope: !417, file: !417, line: 373, type: !13536, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13558)
!13558 = !{!13559, !13560}
!13559 = !DILocalVariable(name: "list", arg: 1, scope: !13557, file: !417, line: 373, type: !13207)
!13560 = !DILocalVariable(name: "node", arg: 2, scope: !13557, file: !417, line: 373, type: !3157)
!13561 = !DILocation(line: 0, scope: !13557)
!13562 = !DILocation(line: 373, column: 1, scope: !13557)
!13563 = !DILocation(line: 373, column: 1, scope: !13564)
!13564 = distinct !DILexicalBlock(scope: !13557, file: !417, line: 373, column: 1)
!13565 = !DILocation(line: 373, column: 1, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13564, file: !417, line: 373, column: 1)
!13567 = !DILocation(line: 373, column: 1, scope: !13568)
!13568 = distinct !DILexicalBlock(scope: !13564, file: !417, line: 373, column: 1)
!13569 = distinct !DISubprogram(name: "z_sfnode_next_set", scope: !417, file: !417, line: 218, type: !13570, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13572)
!13570 = !DISubroutineType(types: !13571)
!13571 = !{null, !3157, !3157}
!13572 = !{!13573, !13574, !13575}
!13573 = !DILocalVariable(name: "parent", arg: 1, scope: !13569, file: !417, line: 218, type: !3157)
!13574 = !DILocalVariable(name: "child", arg: 2, scope: !13569, file: !417, line: 219, type: !3157)
!13575 = !DILocalVariable(name: "cur_flags", scope: !13569, file: !417, line: 221, type: !143)
!13576 = !DILocation(line: 0, scope: !13569)
!13577 = !DILocation(line: 221, column: 22, scope: !13569)
!13578 = !DILocation(line: 223, column: 27, scope: !13569)
!13579 = !DILocation(line: 223, column: 39, scope: !13569)
!13580 = !DILocation(line: 223, column: 37, scope: !13569)
!13581 = !DILocation(line: 223, column: 10, scope: !13569)
!13582 = !DILocation(line: 223, column: 25, scope: !13569)
!13583 = !DILocation(line: 224, column: 1, scope: !13569)
!13584 = distinct !DISubprogram(name: "z_sflist_tail_set", scope: !417, file: !417, line: 231, type: !13536, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13585)
!13585 = !{!13586, !13587}
!13586 = !DILocalVariable(name: "list", arg: 1, scope: !13584, file: !417, line: 231, type: !13207)
!13587 = !DILocalVariable(name: "node", arg: 2, scope: !13584, file: !417, line: 231, type: !3157)
!13588 = !DILocation(line: 0, scope: !13584)
!13589 = !DILocation(line: 233, column: 8, scope: !13584)
!13590 = !DILocation(line: 233, column: 13, scope: !13584)
!13591 = !DILocation(line: 234, column: 1, scope: !13584)
!13592 = distinct !DISubprogram(name: "z_sflist_head_set", scope: !417, file: !417, line: 226, type: !13536, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13593)
!13593 = !{!13594, !13595}
!13594 = !DILocalVariable(name: "list", arg: 1, scope: !13592, file: !417, line: 226, type: !13207)
!13595 = !DILocalVariable(name: "node", arg: 2, scope: !13592, file: !417, line: 226, type: !3157)
!13596 = !DILocation(line: 0, scope: !13592)
!13597 = !DILocation(line: 228, column: 8, scope: !13592)
!13598 = !DILocation(line: 228, column: 13, scope: !13592)
!13599 = !DILocation(line: 229, column: 1, scope: !13592)
!13600 = distinct !DISubprogram(name: "sys_sflist_peek_head", scope: !417, file: !417, line: 243, type: !13486, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13601)
!13601 = !{!13602}
!13602 = !DILocalVariable(name: "list", arg: 1, scope: !13600, file: !417, line: 243, type: !13207)
!13603 = !DILocation(line: 0, scope: !13600)
!13604 = !DILocation(line: 245, column: 15, scope: !13600)
!13605 = !DILocation(line: 245, column: 2, scope: !13600)
!13606 = distinct !DISubprogram(name: "k_queue_append", scope: !3148, file: !3148, line: 184, type: !13607, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13609)
!13607 = !DISubroutineType(types: !13608)
!13608 = !{null, !13176, !117}
!13609 = !{!13610, !13611}
!13610 = !DILocalVariable(name: "queue", arg: 1, scope: !13606, file: !3148, line: 184, type: !13176)
!13611 = !DILocalVariable(name: "data", arg: 2, scope: !13606, file: !3148, line: 184, type: !117)
!13612 = !DILocation(line: 0, scope: !13606)
!13613 = !DILocation(line: 188, column: 8, scope: !13606)
!13614 = !DILocation(line: 191, column: 1, scope: !13606)
!13615 = distinct !DISubprogram(name: "k_queue_prepend", scope: !3148, file: !3148, line: 193, type: !13607, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13616)
!13616 = !{!13617, !13618}
!13617 = !DILocalVariable(name: "queue", arg: 1, scope: !13615, file: !3148, line: 193, type: !13176)
!13618 = !DILocalVariable(name: "data", arg: 2, scope: !13615, file: !3148, line: 193, type: !117)
!13619 = !DILocation(line: 0, scope: !13615)
!13620 = !DILocation(line: 197, column: 8, scope: !13615)
!13621 = !DILocation(line: 200, column: 1, scope: !13615)
!13622 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_append", scope: !3148, file: !3148, line: 202, type: !13623, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13625)
!13623 = !DISubroutineType(types: !13624)
!13624 = !{!362, !13176, !117}
!13625 = !{!13626, !13627, !13628}
!13626 = !DILocalVariable(name: "queue", arg: 1, scope: !13622, file: !3148, line: 202, type: !13176)
!13627 = !DILocalVariable(name: "data", arg: 2, scope: !13622, file: !3148, line: 202, type: !117)
!13628 = !DILocalVariable(name: "ret", scope: !13622, file: !3148, line: 206, type: !362)
!13629 = !DILocation(line: 0, scope: !13622)
!13630 = !DILocation(line: 206, column: 16, scope: !13622)
!13631 = !DILocation(line: 210, column: 2, scope: !13622)
!13632 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_prepend", scope: !3148, file: !3148, line: 223, type: !13623, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13633)
!13633 = !{!13634, !13635, !13636}
!13634 = !DILocalVariable(name: "queue", arg: 1, scope: !13632, file: !3148, line: 223, type: !13176)
!13635 = !DILocalVariable(name: "data", arg: 2, scope: !13632, file: !3148, line: 223, type: !117)
!13636 = !DILocalVariable(name: "ret", scope: !13632, file: !3148, line: 227, type: !362)
!13637 = !DILocation(line: 0, scope: !13632)
!13638 = !DILocation(line: 227, column: 16, scope: !13632)
!13639 = !DILocation(line: 231, column: 2, scope: !13632)
!13640 = distinct !DISubprogram(name: "k_queue_append_list", scope: !3148, file: !3148, line: 244, type: !13641, scopeLine: 245, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13643)
!13641 = !DISubroutineType(types: !13642)
!13642 = !{!118, !13176, !117, !117}
!13643 = !{!13644, !13645, !13646, !13647, !13648}
!13644 = !DILocalVariable(name: "queue", arg: 1, scope: !13640, file: !3148, line: 244, type: !13176)
!13645 = !DILocalVariable(name: "head", arg: 2, scope: !13640, file: !3148, line: 244, type: !117)
!13646 = !DILocalVariable(name: "tail", arg: 3, scope: !13640, file: !3148, line: 244, type: !117)
!13647 = !DILocalVariable(name: "key", scope: !13640, file: !3148, line: 255, type: !13242)
!13648 = !DILocalVariable(name: "thread", scope: !13640, file: !3148, line: 256, type: !13247)
!13649 = !DILocation(line: 0, scope: !13640)
!13650 = !DILocation(line: 249, column: 2, scope: !13651)
!13651 = distinct !DILexicalBlock(scope: !13640, file: !3148, line: 249, column: 2)
!13652 = !DILocation(line: 255, column: 45, scope: !13640)
!13653 = !DILocation(line: 0, scope: !13329, inlinedAt: !13654)
!13654 = distinct !DILocation(line: 255, column: 25, scope: !13640)
!13655 = !DILocation(line: 55, column: 2, scope: !13338, inlinedAt: !13656)
!13656 = distinct !DILocation(line: 145, column: 10, scope: !13329, inlinedAt: !13654)
!13657 = !DILocation(line: 0, scope: !13338, inlinedAt: !13656)
!13658 = !DILocation(line: 148, column: 2, scope: !13346, inlinedAt: !13654)
!13659 = !DILocation(line: 148, column: 2, scope: !13347, inlinedAt: !13654)
!13660 = !DILocation(line: 148, column: 2, scope: !13350, inlinedAt: !13654)
!13661 = !DILocation(line: 160, column: 2, scope: !13329, inlinedAt: !13654)
!13662 = !DILocation(line: 259, column: 42, scope: !13663)
!13663 = distinct !DILexicalBlock(scope: !13664, file: !3148, line: 258, column: 20)
!13664 = distinct !DILexicalBlock(scope: !13640, file: !3148, line: 258, column: 6)
!13665 = !DILocation(line: 259, column: 12, scope: !13663)
!13666 = !DILocation(line: 262, column: 24, scope: !13640)
!13667 = !DILocation(line: 262, column: 2, scope: !13640)
!13668 = !DILocation(line: 263, column: 3, scope: !13669)
!13669 = distinct !DILexicalBlock(scope: !13640, file: !3148, line: 262, column: 45)
!13670 = !DILocation(line: 264, column: 11, scope: !13669)
!13671 = !DILocation(line: 264, column: 10, scope: !13669)
!13672 = !DILocation(line: 265, column: 12, scope: !13669)
!13673 = !DILocation(line: 262, column: 15, scope: !13640)
!13674 = distinct !{!13674, !13667, !13675}
!13675 = !DILocation(line: 266, column: 2, scope: !13640)
!13676 = !DILocation(line: 268, column: 6, scope: !13640)
!13677 = !DILocation(line: 269, column: 34, scope: !13678)
!13678 = distinct !DILexicalBlock(scope: !13679, file: !3148, line: 268, column: 20)
!13679 = distinct !DILexicalBlock(scope: !13640, file: !3148, line: 268, column: 6)
!13680 = !DILocation(line: 269, column: 3, scope: !13678)
!13681 = !DILocation(line: 270, column: 2, scope: !13678)
!13682 = !DILocation(line: 275, column: 2, scope: !13640)
!13683 = !DILocation(line: 277, column: 1, scope: !13640)
!13684 = distinct !DISubprogram(name: "sys_sflist_append_list", scope: !417, file: !417, line: 391, type: !13685, scopeLine: 391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13687)
!13685 = !DISubroutineType(types: !13686)
!13686 = !{null, !13207, !117, !117}
!13687 = !{!13688, !13689, !13690}
!13688 = !DILocalVariable(name: "list", arg: 1, scope: !13684, file: !417, line: 391, type: !13207)
!13689 = !DILocalVariable(name: "head", arg: 2, scope: !13684, file: !417, line: 391, type: !117)
!13690 = !DILocalVariable(name: "tail", arg: 3, scope: !13684, file: !417, line: 391, type: !117)
!13691 = !DILocation(line: 0, scope: !13684)
!13692 = !DILocation(line: 391, column: 1, scope: !13693)
!13693 = distinct !DILexicalBlock(scope: !13684, file: !417, line: 391, column: 1)
!13694 = !DILocation(line: 391, column: 1, scope: !13695)
!13695 = distinct !DILexicalBlock(scope: !13696, file: !417, line: 391, column: 1)
!13696 = distinct !DILexicalBlock(scope: !13693, file: !417, line: 391, column: 1)
!13697 = !DILocation(line: 0, scope: !13695)
!13698 = !DILocation(line: 391, column: 1, scope: !13696)
!13699 = !DILocation(line: 391, column: 1, scope: !13700)
!13700 = distinct !DILexicalBlock(scope: !13695, file: !417, line: 391, column: 1)
!13701 = !DILocation(line: 391, column: 1, scope: !13702)
!13702 = distinct !DILexicalBlock(scope: !13695, file: !417, line: 391, column: 1)
!13703 = !DILocation(line: 391, column: 1, scope: !13684)
!13704 = distinct !DISubprogram(name: "k_queue_merge_slist", scope: !3148, file: !3148, line: 279, type: !13705, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13719)
!13705 = !DISubroutineType(types: !13706)
!13706 = !{!118, !13176, !13707}
!13707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13708, size: 32)
!13708 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !187, line: 40, baseType: !13709)
!13709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !187, line: 35, size: 64, elements: !13710)
!13710 = !{!13711, !13718}
!13711 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13709, file: !187, line: 36, baseType: !13712, size: 32)
!13712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13713, size: 32)
!13713 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !187, line: 33, baseType: !13714)
!13714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !187, line: 29, size: 32, elements: !13715)
!13715 = !{!13716}
!13716 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13714, file: !187, line: 30, baseType: !13717, size: 32)
!13717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13714, size: 32)
!13718 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13709, file: !187, line: 37, baseType: !13712, size: 32, offset: 32)
!13719 = !{!13720, !13721, !13722}
!13720 = !DILocalVariable(name: "queue", arg: 1, scope: !13704, file: !3148, line: 279, type: !13176)
!13721 = !DILocalVariable(name: "list", arg: 2, scope: !13704, file: !3148, line: 279, type: !13707)
!13722 = !DILocalVariable(name: "ret", scope: !13704, file: !3148, line: 281, type: !118)
!13723 = !DILocation(line: 0, scope: !13704)
!13724 = !DILocation(line: 286, column: 2, scope: !13725)
!13725 = distinct !DILexicalBlock(scope: !13704, file: !3148, line: 286, column: 2)
!13726 = !DILocation(line: 286, column: 2, scope: !13704)
!13727 = !DILocation(line: 301, column: 41, scope: !13704)
!13728 = !DILocation(line: 301, column: 53, scope: !13704)
!13729 = !DILocation(line: 301, column: 8, scope: !13704)
!13730 = !DILocation(line: 302, column: 2, scope: !13731)
!13731 = distinct !DILexicalBlock(scope: !13704, file: !3148, line: 302, column: 2)
!13732 = !DILocation(line: 302, column: 2, scope: !13704)
!13733 = !DILocation(line: 307, column: 2, scope: !13704)
!13734 = !DILocation(line: 311, column: 2, scope: !13704)
!13735 = !DILocation(line: 312, column: 1, scope: !13704)
!13736 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !187, file: !187, line: 261, type: !13737, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13739)
!13737 = !DISubroutineType(types: !13738)
!13738 = !{!146, !13707}
!13739 = !{!13740}
!13740 = !DILocalVariable(name: "list", arg: 1, scope: !13736, file: !187, line: 261, type: !13707)
!13741 = !DILocation(line: 0, scope: !13736)
!13742 = !DILocation(line: 261, column: 1, scope: !13736)
!13743 = distinct !DISubprogram(name: "sys_slist_init", scope: !187, file: !187, line: 196, type: !13744, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13746)
!13744 = !DISubroutineType(types: !13745)
!13745 = !{null, !13707}
!13746 = !{!13747}
!13747 = !DILocalVariable(name: "list", arg: 1, scope: !13743, file: !187, line: 196, type: !13707)
!13748 = !DILocation(line: 0, scope: !13743)
!13749 = !DILocation(line: 198, column: 8, scope: !13743)
!13750 = !DILocation(line: 198, column: 13, scope: !13743)
!13751 = !DILocation(line: 199, column: 8, scope: !13743)
!13752 = !DILocation(line: 199, column: 13, scope: !13743)
!13753 = !DILocation(line: 200, column: 1, scope: !13743)
!13754 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !187, file: !187, line: 231, type: !13755, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13757)
!13755 = !DISubroutineType(types: !13756)
!13756 = !{!13712, !13707}
!13757 = !{!13758}
!13758 = !DILocalVariable(name: "list", arg: 1, scope: !13754, file: !187, line: 231, type: !13707)
!13759 = !DILocation(line: 0, scope: !13754)
!13760 = !DILocation(line: 233, column: 15, scope: !13754)
!13761 = !DILocation(line: 233, column: 2, scope: !13754)
!13762 = distinct !DISubprogram(name: "z_impl_k_queue_get", scope: !3148, file: !3148, line: 314, type: !13763, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13769)
!13763 = !DISubroutineType(types: !13764)
!13764 = !{!117, !13176, !13765}
!13765 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !13766)
!13766 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !13767)
!13767 = !{!13768}
!13768 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13766, file: !114, line: 66, baseType: !113, size: 64)
!13769 = !{!13770, !13771, !13772, !13773, !13774, !13777}
!13770 = !DILocalVariable(name: "queue", arg: 1, scope: !13762, file: !3148, line: 314, type: !13176)
!13771 = !DILocalVariable(name: "timeout", arg: 2, scope: !13762, file: !3148, line: 314, type: !13765)
!13772 = !DILocalVariable(name: "key", scope: !13762, file: !3148, line: 316, type: !13242)
!13773 = !DILocalVariable(name: "data", scope: !13762, file: !3148, line: 317, type: !117)
!13774 = !DILocalVariable(name: "node", scope: !13775, file: !3148, line: 322, type: !3157)
!13775 = distinct !DILexicalBlock(scope: !13776, file: !3148, line: 321, column: 52)
!13776 = distinct !DILexicalBlock(scope: !13762, file: !3148, line: 321, column: 6)
!13777 = !DILocalVariable(name: "ret", scope: !13762, file: !3148, line: 343, type: !118)
!13778 = !DILocation(line: 0, scope: !13762)
!13779 = !DILocation(line: 316, column: 45, scope: !13762)
!13780 = !DILocation(line: 0, scope: !13329, inlinedAt: !13781)
!13781 = distinct !DILocation(line: 316, column: 25, scope: !13762)
!13782 = !DILocation(line: 55, column: 2, scope: !13338, inlinedAt: !13783)
!13783 = distinct !DILocation(line: 145, column: 10, scope: !13329, inlinedAt: !13781)
!13784 = !DILocation(line: 0, scope: !13338, inlinedAt: !13783)
!13785 = !DILocation(line: 148, column: 2, scope: !13346, inlinedAt: !13781)
!13786 = !DILocation(line: 148, column: 2, scope: !13347, inlinedAt: !13781)
!13787 = !DILocation(line: 148, column: 2, scope: !13350, inlinedAt: !13781)
!13788 = !DILocation(line: 160, column: 2, scope: !13329, inlinedAt: !13781)
!13789 = !DILocation(line: 321, column: 6, scope: !13776)
!13790 = !DILocation(line: 321, column: 6, scope: !13762)
!13791 = !{!"branch_weights", i32 1, i32 2000}
!13792 = !DILocation(line: 324, column: 10, scope: !13775)
!13793 = !DILocation(line: 0, scope: !13775)
!13794 = !DILocation(line: 325, column: 10, scope: !13775)
!13795 = !DILocation(line: 0, scope: !13450, inlinedAt: !13796)
!13796 = distinct !DILocation(line: 326, column: 3, scope: !13775)
!13797 = !DILocation(line: 194, column: 2, scope: !13459, inlinedAt: !13796)
!13798 = !DILocation(line: 194, column: 2, scope: !13460, inlinedAt: !13796)
!13799 = !DILocation(line: 194, column: 2, scope: !13463, inlinedAt: !13796)
!13800 = !DILocation(line: 0, scope: !13465, inlinedAt: !13801)
!13801 = distinct !DILocation(line: 215, column: 2, scope: !13450, inlinedAt: !13796)
!13802 = !DILocation(line: 95, column: 2, scope: !13465, inlinedAt: !13801)
!13803 = !DILocation(line: 335, column: 6, scope: !13804)
!13804 = distinct !DILexicalBlock(scope: !13762, file: !3148, line: 335, column: 6)
!13805 = !DILocation(line: 335, column: 6, scope: !13762)
!13806 = !DILocation(line: 0, scope: !13450, inlinedAt: !13807)
!13807 = distinct !DILocation(line: 336, column: 3, scope: !13808)
!13808 = distinct !DILexicalBlock(scope: !13804, file: !3148, line: 335, column: 40)
!13809 = !DILocation(line: 194, column: 2, scope: !13459, inlinedAt: !13807)
!13810 = !DILocation(line: 194, column: 2, scope: !13460, inlinedAt: !13807)
!13811 = !DILocation(line: 194, column: 2, scope: !13463, inlinedAt: !13807)
!13812 = !DILocation(line: 0, scope: !13465, inlinedAt: !13813)
!13813 = distinct !DILocation(line: 215, column: 2, scope: !13450, inlinedAt: !13807)
!13814 = !DILocation(line: 95, column: 2, scope: !13465, inlinedAt: !13813)
!13815 = !DILocation(line: 340, column: 3, scope: !13808)
!13816 = !DILocation(line: 343, column: 51, scope: !13762)
!13817 = !DILocation(line: 343, column: 12, scope: !13762)
!13818 = !DILocation(line: 348, column: 14, scope: !13762)
!13819 = !DILocation(line: 348, column: 9, scope: !13762)
!13820 = !DILocation(line: 348, column: 29, scope: !13762)
!13821 = !DILocation(line: 348, column: 44, scope: !13762)
!13822 = !DILocation(line: 349, column: 1, scope: !13762)
!13823 = distinct !DISubprogram(name: "sys_sflist_is_empty", scope: !417, file: !417, line: 323, type: !13824, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13826)
!13824 = !DISubroutineType(types: !13825)
!13825 = !{!146, !13207}
!13826 = !{!13827}
!13827 = !DILocalVariable(name: "list", arg: 1, scope: !13823, file: !417, line: 323, type: !13207)
!13828 = !DILocation(line: 0, scope: !13823)
!13829 = !DILocation(line: 323, column: 1, scope: !13823)
!13830 = distinct !DISubprogram(name: "sys_sflist_get_not_empty", scope: !417, file: !417, line: 434, type: !13486, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13831)
!13831 = !{!13832, !13833}
!13832 = !DILocalVariable(name: "list", arg: 1, scope: !13830, file: !417, line: 434, type: !13207)
!13833 = !DILocalVariable(name: "node", scope: !13830, file: !417, line: 434, type: !3157)
!13834 = !DILocation(line: 0, scope: !13830)
!13835 = !DILocation(line: 434, column: 1, scope: !13830)
!13836 = !DILocation(line: 434, column: 1, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13830, file: !417, line: 434, column: 1)
!13838 = !DILocation(line: 434, column: 1, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13837, file: !417, line: 434, column: 1)
!13840 = distinct !DISubprogram(name: "k_queue_remove", scope: !3148, file: !3148, line: 351, type: !13841, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13843)
!13841 = !DISubroutineType(types: !13842)
!13842 = !{!146, !13176, !117}
!13843 = !{!13844, !13845, !13846}
!13844 = !DILocalVariable(name: "queue", arg: 1, scope: !13840, file: !3148, line: 351, type: !13176)
!13845 = !DILocalVariable(name: "data", arg: 2, scope: !13840, file: !3148, line: 351, type: !117)
!13846 = !DILocalVariable(name: "ret", scope: !13840, file: !3148, line: 355, type: !146)
!13847 = !DILocation(line: 0, scope: !13840)
!13848 = !DILocation(line: 355, column: 48, scope: !13840)
!13849 = !DILocation(line: 355, column: 56, scope: !13840)
!13850 = !DILocation(line: 355, column: 13, scope: !13840)
!13851 = !DILocation(line: 359, column: 2, scope: !13840)
!13852 = distinct !DISubprogram(name: "sys_sflist_find_and_remove", scope: !417, file: !417, line: 478, type: !13853, scopeLine: 478, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13855)
!13853 = !DISubroutineType(types: !13854)
!13854 = !{!146, !13207, !3157}
!13855 = !{!13856, !13857, !13858, !13859}
!13856 = !DILocalVariable(name: "list", arg: 1, scope: !13852, file: !417, line: 478, type: !13207)
!13857 = !DILocalVariable(name: "node", arg: 2, scope: !13852, file: !417, line: 478, type: !3157)
!13858 = !DILocalVariable(name: "prev", scope: !13852, file: !417, line: 478, type: !3157)
!13859 = !DILocalVariable(name: "test", scope: !13852, file: !417, line: 478, type: !3157)
!13860 = !DILocation(line: 0, scope: !13852)
!13861 = !DILocation(line: 478, column: 1, scope: !13862)
!13862 = distinct !DILexicalBlock(scope: !13852, file: !417, line: 478, column: 1)
!13863 = !DILocation(line: 478, column: 1, scope: !13864)
!13864 = distinct !DILexicalBlock(scope: !13862, file: !417, line: 478, column: 1)
!13865 = !DILocation(line: 478, column: 1, scope: !13866)
!13866 = distinct !DILexicalBlock(scope: !13867, file: !417, line: 478, column: 1)
!13867 = distinct !DILexicalBlock(scope: !13864, file: !417, line: 478, column: 1)
!13868 = !DILocation(line: 478, column: 1, scope: !13867)
!13869 = distinct !{!13869, !13861, !13861}
!13870 = !DILocation(line: 478, column: 1, scope: !13871)
!13871 = distinct !DILexicalBlock(scope: !13866, file: !417, line: 478, column: 1)
!13872 = !DILocation(line: 478, column: 1, scope: !13852)
!13873 = distinct !DISubprogram(name: "sys_sflist_remove", scope: !417, file: !417, line: 463, type: !13517, scopeLine: 463, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13874)
!13874 = !{!13875, !13876, !13877}
!13875 = !DILocalVariable(name: "list", arg: 1, scope: !13873, file: !417, line: 463, type: !13207)
!13876 = !DILocalVariable(name: "prev_node", arg: 2, scope: !13873, file: !417, line: 463, type: !3157)
!13877 = !DILocalVariable(name: "node", arg: 3, scope: !13873, file: !417, line: 463, type: !3157)
!13878 = !DILocation(line: 0, scope: !13873)
!13879 = !DILocation(line: 463, column: 1, scope: !13880)
!13880 = distinct !DILexicalBlock(scope: !13873, file: !417, line: 463, column: 1)
!13881 = !DILocation(line: 0, scope: !13880)
!13882 = !DILocation(line: 463, column: 1, scope: !13873)
!13883 = !DILocation(line: 463, column: 1, scope: !13884)
!13884 = distinct !DILexicalBlock(scope: !13880, file: !417, line: 463, column: 1)
!13885 = !DILocation(line: 463, column: 1, scope: !13886)
!13886 = distinct !DILexicalBlock(scope: !13884, file: !417, line: 463, column: 1)
!13887 = !DILocation(line: 463, column: 1, scope: !13888)
!13888 = distinct !DILexicalBlock(scope: !13886, file: !417, line: 463, column: 1)
!13889 = !DILocation(line: 463, column: 1, scope: !13890)
!13890 = distinct !DILexicalBlock(scope: !13880, file: !417, line: 463, column: 1)
!13891 = !DILocation(line: 463, column: 1, scope: !13892)
!13892 = distinct !DILexicalBlock(scope: !13890, file: !417, line: 463, column: 1)
!13893 = !DILocation(line: 463, column: 1, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13892, file: !417, line: 463, column: 1)
!13895 = distinct !DISubprogram(name: "sys_sflist_peek_next", scope: !417, file: !417, line: 347, type: !13548, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13896)
!13896 = !{!13897}
!13897 = !DILocalVariable(name: "node", arg: 1, scope: !13895, file: !417, line: 347, type: !3157)
!13898 = !DILocation(line: 0, scope: !13895)
!13899 = !DILocation(line: 347, column: 1, scope: !13895)
!13900 = distinct !DISubprogram(name: "sys_sflist_peek_next_no_check", scope: !417, file: !417, line: 336, type: !13548, scopeLine: 336, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13901)
!13901 = !{!13902}
!13902 = !DILocalVariable(name: "node", arg: 1, scope: !13900, file: !417, line: 336, type: !3157)
!13903 = !DILocation(line: 0, scope: !13900)
!13904 = !DILocation(line: 336, column: 1, scope: !13900)
!13905 = distinct !DISubprogram(name: "k_queue_unique_append", scope: !3148, file: !3148, line: 362, type: !13841, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13906)
!13906 = !{!13907, !13908, !13909}
!13907 = !DILocalVariable(name: "queue", arg: 1, scope: !13905, file: !3148, line: 362, type: !13176)
!13908 = !DILocalVariable(name: "data", arg: 2, scope: !13905, file: !3148, line: 362, type: !117)
!13909 = !DILocalVariable(name: "test", scope: !13905, file: !3148, line: 366, type: !3157)
!13910 = !DILocation(line: 0, scope: !13905)
!13911 = !DILocation(line: 368, column: 2, scope: !13912)
!13912 = distinct !DILexicalBlock(scope: !13905, file: !3148, line: 368, column: 2)
!13913 = !DILocation(line: 368, column: 2, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13912, file: !3148, line: 368, column: 2)
!13915 = !DILocation(line: 369, column: 12, scope: !13916)
!13916 = distinct !DILexicalBlock(scope: !13917, file: !3148, line: 369, column: 7)
!13917 = distinct !DILexicalBlock(scope: !13914, file: !3148, line: 368, column: 49)
!13918 = !DILocation(line: 369, column: 7, scope: !13917)
!13919 = distinct !{!13919, !13911, !13920}
!13920 = !DILocation(line: 374, column: 2, scope: !13912)
!13921 = !DILocation(line: 376, column: 2, scope: !13905)
!13922 = !DILocation(line: 380, column: 2, scope: !13905)
!13923 = !DILocation(line: 381, column: 1, scope: !13905)
!13924 = distinct !DISubprogram(name: "z_impl_k_queue_peek_head", scope: !3148, file: !3148, line: 383, type: !13925, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13927)
!13925 = !DISubroutineType(types: !13926)
!13926 = !{!117, !13176}
!13927 = !{!13928, !13929}
!13928 = !DILocalVariable(name: "queue", arg: 1, scope: !13924, file: !3148, line: 383, type: !13176)
!13929 = !DILocalVariable(name: "ret", scope: !13924, file: !3148, line: 385, type: !117)
!13930 = !DILocation(line: 0, scope: !13924)
!13931 = !DILocation(line: 385, column: 61, scope: !13924)
!13932 = !DILocation(line: 385, column: 32, scope: !13924)
!13933 = !DILocation(line: 385, column: 14, scope: !13924)
!13934 = !DILocation(line: 389, column: 2, scope: !13924)
!13935 = distinct !DISubprogram(name: "z_impl_k_queue_peek_tail", scope: !3148, file: !3148, line: 392, type: !13925, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !13936)
!13936 = !{!13937, !13938}
!13937 = !DILocalVariable(name: "queue", arg: 1, scope: !13935, file: !3148, line: 392, type: !13176)
!13938 = !DILocalVariable(name: "ret", scope: !13935, file: !3148, line: 394, type: !117)
!13939 = !DILocation(line: 0, scope: !13935)
!13940 = !DILocation(line: 394, column: 61, scope: !13935)
!13941 = !DILocation(line: 394, column: 32, scope: !13935)
!13942 = !DILocation(line: 394, column: 14, scope: !13935)
!13943 = !DILocation(line: 398, column: 2, scope: !13935)
!13944 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2412, file: !2412, line: 93, type: !13945, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !13947)
!13945 = !DISubroutineType(types: !13946)
!13946 = !{!362, !2305, !2305}
!13947 = !{!13948, !13949, !13950, !13951}
!13948 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13944, file: !2412, line: 93, type: !2305)
!13949 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13944, file: !2412, line: 94, type: !2305)
!13950 = !DILocalVariable(name: "b1", scope: !13944, file: !2412, line: 97, type: !362)
!13951 = !DILocalVariable(name: "b2", scope: !13944, file: !2412, line: 98, type: !362)
!13952 = !DILocation(line: 0, scope: !13944)
!13953 = !DILocation(line: 97, column: 30, scope: !13944)
!13954 = !DILocation(line: 98, column: 30, scope: !13944)
!13955 = !DILocation(line: 100, column: 9, scope: !13956)
!13956 = distinct !DILexicalBlock(scope: !13944, file: !2412, line: 100, column: 6)
!13957 = !DILocation(line: 100, column: 6, scope: !13944)
!13958 = !DILocation(line: 125, column: 1, scope: !13944)
!13959 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2412, file: !2412, line: 428, type: !13960, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !13962)
!13960 = !DISubroutineType(types: !13961)
!13961 = !{null, !2305}
!13962 = !{!13963}
!13963 = !DILocalVariable(name: "curr", arg: 1, scope: !13959, file: !2412, line: 428, type: !2305)
!13964 = !DILocation(line: 0, scope: !13959)
!13965 = !DILocation(line: 434, column: 6, scope: !13966)
!13966 = distinct !DILexicalBlock(scope: !13959, file: !2412, line: 434, column: 6)
!13967 = !DILocation(line: 434, column: 23, scope: !13966)
!13968 = !DILocation(line: 434, column: 6, scope: !13959)
!13969 = !DILocation(line: 435, column: 50, scope: !13970)
!13970 = distinct !DILexicalBlock(scope: !13966, file: !2412, line: 434, column: 29)
!13971 = !DILocation(line: 435, column: 48, scope: !13970)
!13972 = !DILocation(line: 435, column: 29, scope: !13970)
!13973 = !DILocation(line: 436, column: 24, scope: !13970)
!13974 = !DILocation(line: 436, column: 3, scope: !13970)
!13975 = !DILocation(line: 437, column: 2, scope: !13970)
!13976 = !DILocation(line: 438, column: 1, scope: !13959)
!13977 = distinct !DISubprogram(name: "slice_time", scope: !2412, file: !2412, line: 407, type: !13978, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !13980)
!13978 = !DISubroutineType(types: !13979)
!13979 = !{!118, !2305}
!13980 = !{!13981, !13982}
!13981 = !DILocalVariable(name: "curr", arg: 1, scope: !13977, file: !2412, line: 407, type: !2305)
!13982 = !DILocalVariable(name: "ret", scope: !13977, file: !2412, line: 409, type: !118)
!13983 = !DILocation(line: 0, scope: !13977)
!13984 = !DILocation(line: 409, column: 12, scope: !13977)
!13985 = !DILocation(line: 416, column: 2, scope: !13977)
!13986 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2412, file: !2412, line: 440, type: !13987, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !13989)
!13987 = !DISubroutineType(types: !13988)
!13988 = !{null, !362, !118}
!13989 = !{!13990, !13991, !13992, !13998}
!13990 = !DILocalVariable(name: "slice", arg: 1, scope: !13986, file: !2412, line: 440, type: !362)
!13991 = !DILocalVariable(name: "prio", arg: 2, scope: !13986, file: !2412, line: 440, type: !118)
!13992 = !DILocalVariable(name: "__i", scope: !13993, file: !2412, line: 442, type: !13994)
!13993 = distinct !DILexicalBlock(scope: !13986, file: !2412, line: 442, column: 2)
!13994 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !13995)
!13995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !13996)
!13996 = !{!13997}
!13997 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13995, file: !334, line: 33, baseType: !118, size: 32)
!13998 = !DILocalVariable(name: "__key", scope: !13993, file: !2412, line: 442, type: !13994)
!13999 = !DILocation(line: 0, scope: !13986)
!14000 = !DILocation(line: 0, scope: !13993)
!14001 = !DILocalVariable(name: "l", arg: 1, scope: !14002, file: !334, line: 136, type: !14005)
!14002 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !14003, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14006)
!14003 = !DISubroutineType(types: !14004)
!14004 = !{!13994, !14005}
!14005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 32)
!14006 = !{!14001, !14007}
!14007 = !DILocalVariable(name: "k", scope: !14002, file: !334, line: 139, type: !13994)
!14008 = !DILocation(line: 0, scope: !14002, inlinedAt: !14009)
!14009 = distinct !DILocation(line: 442, column: 2, scope: !13993)
!14010 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !14015)
!14011 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6172, file: !6172, line: 42, type: !6173, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14012)
!14012 = !{!14013, !14014}
!14013 = !DILocalVariable(name: "key", scope: !14011, file: !6172, line: 44, type: !32)
!14014 = !DILocalVariable(name: "tmp", scope: !14011, file: !6172, line: 53, type: !32)
!14015 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !14009)
!14016 = !{i64 2285499}
!14017 = !DILocation(line: 0, scope: !14011, inlinedAt: !14015)
!14018 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !14009)
!14019 = distinct !DILexicalBlock(scope: !14020, file: !334, line: 148, column: 2)
!14020 = distinct !DILexicalBlock(scope: !14002, file: !334, line: 148, column: 2)
!14021 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !14009)
!14022 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !14009)
!14023 = distinct !DILexicalBlock(scope: !14019, file: !334, line: 148, column: 2)
!14024 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !14009)
!14025 = !DILocation(line: 443, column: 29, scope: !14026)
!14026 = distinct !DILexicalBlock(scope: !14027, file: !2412, line: 442, column: 26)
!14027 = distinct !DILexicalBlock(scope: !13993, file: !2412, line: 442, column: 2)
!14028 = !DILocation(line: 444, column: 17, scope: !14026)
!14029 = !DILocation(line: 445, column: 51, scope: !14030)
!14030 = distinct !DILexicalBlock(scope: !14026, file: !2412, line: 445, column: 7)
!14031 = !DILocation(line: 445, column: 7, scope: !14026)
!14032 = !DILocation(line: 0, scope: !14026)
!14033 = !DILocation(line: 451, column: 18, scope: !14026)
!14034 = !DILocation(line: 452, column: 3, scope: !14026)
!14035 = !DILocalVariable(name: "key", arg: 2, scope: !14036, file: !334, line: 190, type: !13994)
!14036 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !14037, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14039)
!14037 = !DISubroutineType(types: !14038)
!14038 = !{null, !14005, !13994}
!14039 = !{!14040, !14035}
!14040 = !DILocalVariable(name: "l", arg: 1, scope: !14036, file: !334, line: 189, type: !14005)
!14041 = !DILocation(line: 0, scope: !14036, inlinedAt: !14042)
!14042 = distinct !DILocation(line: 442, column: 2, scope: !14027)
!14043 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !14042)
!14044 = distinct !DILexicalBlock(scope: !14045, file: !334, line: 194, column: 2)
!14045 = distinct !DILexicalBlock(scope: !14036, file: !334, line: 194, column: 2)
!14046 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !14042)
!14047 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !14042)
!14048 = distinct !DILexicalBlock(scope: !14044, file: !334, line: 194, column: 2)
!14049 = !DILocalVariable(name: "key", arg: 1, scope: !14050, file: !6172, line: 84, type: !32)
!14050 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6172, file: !6172, line: 84, type: !6183, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14051)
!14051 = !{!14049}
!14052 = !DILocation(line: 0, scope: !14050, inlinedAt: !14053)
!14053 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !14042)
!14054 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !14053)
!14055 = !{i64 2286316}
!14056 = !DILocation(line: 454, column: 1, scope: !13986)
!14057 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3434, file: !3434, line: 389, type: !7392, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14058)
!14058 = !{!14059}
!14059 = !DILocalVariable(name: "t", arg: 1, scope: !14057, file: !3434, line: 389, type: !156)
!14060 = !DILocation(line: 0, scope: !14057)
!14061 = !DILocalVariable(name: "t", arg: 1, scope: !14062, file: !3434, line: 102, type: !213)
!14062 = distinct !DISubprogram(name: "z_tmcvt", scope: !3434, file: !3434, line: 102, type: !3442, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14063)
!14063 = !{!14061, !14064, !14065, !14066, !14067, !14068, !14069, !14070, !14071, !14072, !14073}
!14064 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14062, file: !3434, line: 102, type: !156)
!14065 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14062, file: !3434, line: 103, type: !156)
!14066 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14062, file: !3434, line: 103, type: !146)
!14067 = !DILocalVariable(name: "result32", arg: 5, scope: !14062, file: !3434, line: 104, type: !146)
!14068 = !DILocalVariable(name: "round_up", arg: 6, scope: !14062, file: !3434, line: 104, type: !146)
!14069 = !DILocalVariable(name: "round_off", arg: 7, scope: !14062, file: !3434, line: 105, type: !146)
!14070 = !DILocalVariable(name: "mul_ratio", scope: !14062, file: !3434, line: 107, type: !146)
!14071 = !DILocalVariable(name: "div_ratio", scope: !14062, file: !3434, line: 109, type: !146)
!14072 = !DILocalVariable(name: "off", scope: !14062, file: !3434, line: 116, type: !213)
!14073 = !DILocalVariable(name: "rdivisor", scope: !14074, file: !3434, line: 119, type: !156)
!14074 = distinct !DILexicalBlock(scope: !14075, file: !3434, line: 118, column: 18)
!14075 = distinct !DILexicalBlock(scope: !14062, file: !3434, line: 118, column: 6)
!14076 = !DILocation(line: 0, scope: !14062, inlinedAt: !14077)
!14077 = distinct !DILocation(line: 392, column: 9, scope: !14057)
!14078 = !DILocation(line: 143, column: 25, scope: !14079, inlinedAt: !14077)
!14079 = distinct !DILexicalBlock(scope: !14080, file: !3434, line: 142, column: 17)
!14080 = distinct !DILexicalBlock(scope: !14081, file: !3434, line: 142, column: 7)
!14081 = distinct !DILexicalBlock(scope: !14082, file: !3434, line: 141, column: 24)
!14082 = distinct !DILexicalBlock(scope: !14083, file: !3434, line: 141, column: 13)
!14083 = distinct !DILexicalBlock(scope: !14062, file: !3434, line: 134, column: 6)
!14084 = !DILocation(line: 392, column: 2, scope: !14057)
!14085 = distinct !DISubprogram(name: "z_time_slice", scope: !2412, file: !2412, line: 502, type: !8046, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14086)
!14086 = !{!14087, !14088}
!14087 = !DILocalVariable(name: "ticks", arg: 1, scope: !14085, file: !2412, line: 502, type: !118)
!14088 = !DILocalVariable(name: "key", scope: !14085, file: !2412, line: 511, type: !13994)
!14089 = !DILocation(line: 0, scope: !14085)
!14090 = !DILocation(line: 0, scope: !14002, inlinedAt: !14091)
!14091 = distinct !DILocation(line: 511, column: 25, scope: !14085)
!14092 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !14093)
!14093 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !14091)
!14094 = !DILocation(line: 0, scope: !14011, inlinedAt: !14093)
!14095 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !14091)
!14096 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !14091)
!14097 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !14091)
!14098 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !14091)
!14099 = !DILocation(line: 514, column: 6, scope: !14100)
!14100 = distinct !DILexicalBlock(scope: !14085, file: !2412, line: 514, column: 6)
!14101 = !DILocation(line: 514, column: 25, scope: !14100)
!14102 = !DILocation(line: 514, column: 22, scope: !14100)
!14103 = !DILocation(line: 514, column: 6, scope: !14085)
!14104 = !DILocation(line: 515, column: 3, scope: !14105)
!14105 = distinct !DILexicalBlock(scope: !14100, file: !2412, line: 514, column: 35)
!14106 = !DILocation(line: 0, scope: !14036, inlinedAt: !14107)
!14107 = distinct !DILocation(line: 516, column: 3, scope: !14105)
!14108 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !14107)
!14109 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !14107)
!14110 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !14107)
!14111 = !DILocation(line: 0, scope: !14050, inlinedAt: !14112)
!14112 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !14107)
!14113 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !14112)
!14114 = !DILocation(line: 517, column: 3, scope: !14105)
!14115 = !DILocation(line: 519, column: 18, scope: !14085)
!14116 = !DILocation(line: 522, column: 6, scope: !14117)
!14117 = distinct !DILexicalBlock(scope: !14085, file: !2412, line: 522, column: 6)
!14118 = !DILocation(line: 522, column: 27, scope: !14117)
!14119 = !DILocation(line: 522, column: 30, scope: !14117)
!14120 = !DILocation(line: 522, column: 6, scope: !14085)
!14121 = !DILocation(line: 523, column: 30, scope: !14122)
!14122 = distinct !DILexicalBlock(scope: !14123, file: !2412, line: 523, column: 7)
!14123 = distinct !DILexicalBlock(scope: !14117, file: !2412, line: 522, column: 51)
!14124 = !DILocation(line: 523, column: 13, scope: !14122)
!14125 = !DILocation(line: 523, column: 7, scope: !14123)
!14126 = !DILocation(line: 530, column: 10, scope: !14127)
!14127 = distinct !DILexicalBlock(scope: !14122, file: !2412, line: 523, column: 43)
!14128 = !DILocation(line: 531, column: 3, scope: !14127)
!14129 = !DILocation(line: 532, column: 30, scope: !14130)
!14130 = distinct !DILexicalBlock(scope: !14122, file: !2412, line: 531, column: 10)
!14131 = !DILocation(line: 535, column: 29, scope: !14132)
!14132 = distinct !DILexicalBlock(scope: !14117, file: !2412, line: 534, column: 9)
!14133 = !DILocation(line: 0, scope: !14036, inlinedAt: !14134)
!14134 = distinct !DILocation(line: 537, column: 2, scope: !14085)
!14135 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !14134)
!14136 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !14134)
!14137 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !14134)
!14138 = !DILocation(line: 0, scope: !14050, inlinedAt: !14139)
!14139 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !14134)
!14140 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !14139)
!14141 = !DILocation(line: 538, column: 1, scope: !14085)
!14142 = distinct !DISubprogram(name: "sliceable", scope: !2412, file: !2412, line: 468, type: !14143, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14145)
!14143 = !DISubroutineType(types: !14144)
!14144 = !{!146, !2305}
!14145 = !{!14146, !14147}
!14146 = !DILocalVariable(name: "thread", arg: 1, scope: !14142, file: !2412, line: 468, type: !2305)
!14147 = !DILocalVariable(name: "ret", scope: !14142, file: !2412, line: 470, type: !146)
!14148 = !DILocation(line: 0, scope: !14142)
!14149 = !DILocation(line: 470, column: 13, scope: !14142)
!14150 = !DILocation(line: 471, column: 3, scope: !14142)
!14151 = !DILocation(line: 471, column: 7, scope: !14142)
!14152 = !DILocation(line: 472, column: 3, scope: !14142)
!14153 = !DILocation(line: 472, column: 37, scope: !14142)
!14154 = !DILocation(line: 472, column: 24, scope: !14142)
!14155 = !DILocation(line: 472, column: 43, scope: !14142)
!14156 = !DILocation(line: 472, column: 7, scope: !14142)
!14157 = !DILocation(line: 473, column: 3, scope: !14142)
!14158 = !DILocation(line: 473, column: 7, scope: !14142)
!14159 = !DILocation(line: 473, column: 6, scope: !14142)
!14160 = !DILocation(line: 479, column: 2, scope: !14142)
!14161 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2412, file: !2412, line: 482, type: !14162, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14164)
!14162 = !DISubroutineType(types: !14163)
!14163 = !{!13994, !13994}
!14164 = !{!14165, !14166}
!14165 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14161, file: !2412, line: 482, type: !13994)
!14166 = !DILocalVariable(name: "curr", scope: !14161, file: !2412, line: 484, type: !2305)
!14167 = !DILocation(line: 0, scope: !14161)
!14168 = !DILocation(line: 484, column: 26, scope: !14161)
!14169 = !DILocation(line: 493, column: 7, scope: !14170)
!14170 = distinct !DILexicalBlock(scope: !14161, file: !2412, line: 493, column: 6)
!14171 = !DILocation(line: 493, column: 6, scope: !14161)
!14172 = !DILocation(line: 494, column: 3, scope: !14173)
!14173 = distinct !DILexicalBlock(scope: !14170, file: !2412, line: 493, column: 49)
!14174 = !DILocation(line: 495, column: 2, scope: !14173)
!14175 = !DILocation(line: 496, column: 2, scope: !14161)
!14176 = !DILocation(line: 499, column: 1, scope: !14161)
!14177 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12380, file: !12380, line: 106, type: !14143, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14178)
!14178 = !{!14179, !14180}
!14179 = !DILocalVariable(name: "thread", arg: 1, scope: !14177, file: !12380, line: 106, type: !2305)
!14180 = !DILocalVariable(name: "state", scope: !14177, file: !12380, line: 108, type: !143)
!14181 = !DILocation(line: 0, scope: !14177)
!14182 = !DILocation(line: 108, column: 31, scope: !14177)
!14183 = !DILocation(line: 110, column: 16, scope: !14177)
!14184 = !DILocation(line: 111, column: 41, scope: !14177)
!14185 = !DILocation(line: 110, column: 2, scope: !14177)
!14186 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2412, file: !2412, line: 393, type: !13960, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14187)
!14187 = !{!14188}
!14188 = !DILocalVariable(name: "thread", arg: 1, scope: !14186, file: !2412, line: 393, type: !2305)
!14189 = !DILocation(line: 0, scope: !14186)
!14190 = !DILocation(line: 395, column: 6, scope: !14191)
!14191 = distinct !DILexicalBlock(scope: !14186, file: !2412, line: 395, column: 6)
!14192 = !DILocation(line: 395, column: 6, scope: !14186)
!14193 = !DILocalVariable(name: "thread", arg: 1, scope: !14194, file: !2412, line: 264, type: !2305)
!14194 = distinct !DISubprogram(name: "dequeue_thread", scope: !2412, file: !2412, line: 264, type: !13960, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14195)
!14195 = !{!14193}
!14196 = !DILocation(line: 0, scope: !14194, inlinedAt: !14197)
!14197 = distinct !DILocation(line: 396, column: 3, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14191, file: !2412, line: 395, column: 34)
!14199 = !DILocation(line: 266, column: 15, scope: !14194, inlinedAt: !14197)
!14200 = !DILocation(line: 266, column: 28, scope: !14194, inlinedAt: !14197)
!14201 = !DILocalVariable(name: "thread", arg: 1, scope: !14202, file: !2412, line: 232, type: !2305)
!14202 = distinct !DISubprogram(name: "runq_remove", scope: !2412, file: !2412, line: 232, type: !13960, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14203)
!14203 = !{!14201}
!14204 = !DILocation(line: 0, scope: !14202, inlinedAt: !14205)
!14205 = distinct !DILocation(line: 268, column: 3, scope: !14206, inlinedAt: !14197)
!14206 = distinct !DILexicalBlock(scope: !14207, file: !2412, line: 267, column: 35)
!14207 = distinct !DILexicalBlock(scope: !14194, file: !2412, line: 267, column: 6)
!14208 = !DILocation(line: 234, column: 2, scope: !14202, inlinedAt: !14205)
!14209 = !DILocation(line: 397, column: 2, scope: !14198)
!14210 = !DILocalVariable(name: "thread", arg: 1, scope: !14211, file: !2412, line: 250, type: !2305)
!14211 = distinct !DISubprogram(name: "queue_thread", scope: !2412, file: !2412, line: 250, type: !13960, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14212)
!14212 = !{!14210}
!14213 = !DILocation(line: 0, scope: !14211, inlinedAt: !14214)
!14214 = distinct !DILocation(line: 398, column: 2, scope: !14186)
!14215 = !DILocation(line: 252, column: 15, scope: !14211, inlinedAt: !14214)
!14216 = !DILocation(line: 252, column: 28, scope: !14211, inlinedAt: !14214)
!14217 = !DILocalVariable(name: "thread", arg: 1, scope: !14218, file: !2412, line: 227, type: !2305)
!14218 = distinct !DISubprogram(name: "runq_add", scope: !2412, file: !2412, line: 227, type: !13960, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14219)
!14219 = !{!14217}
!14220 = !DILocation(line: 0, scope: !14218, inlinedAt: !14221)
!14221 = distinct !DILocation(line: 254, column: 3, scope: !14222, inlinedAt: !14214)
!14222 = distinct !DILexicalBlock(scope: !14223, file: !2412, line: 253, column: 35)
!14223 = distinct !DILexicalBlock(scope: !14211, file: !2412, line: 253, column: 6)
!14224 = !DILocalVariable(name: "pq", arg: 1, scope: !14225, file: !2412, line: 181, type: !14228)
!14225 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2412, file: !2412, line: 181, type: !14226, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14229)
!14226 = !DISubroutineType(types: !14227)
!14227 = !{null, !14228, !2305}
!14228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 32)
!14229 = !{!14224, !14230, !14231}
!14230 = !DILocalVariable(name: "thread", arg: 2, scope: !14225, file: !2412, line: 182, type: !2305)
!14231 = !DILocalVariable(name: "t", scope: !14225, file: !2412, line: 184, type: !2305)
!14232 = !DILocation(line: 0, scope: !14225, inlinedAt: !14233)
!14233 = distinct !DILocation(line: 229, column: 2, scope: !14218, inlinedAt: !14221)
!14234 = !DILocation(line: 186, column: 2, scope: !14235, inlinedAt: !14233)
!14235 = distinct !DILexicalBlock(scope: !14236, file: !2412, line: 186, column: 2)
!14236 = distinct !DILexicalBlock(scope: !14225, file: !2412, line: 186, column: 2)
!14237 = !DILocation(line: 186, column: 2, scope: !14236, inlinedAt: !14233)
!14238 = !DILocation(line: 186, column: 2, scope: !14239, inlinedAt: !14233)
!14239 = distinct !DILexicalBlock(scope: !14235, file: !2412, line: 186, column: 2)
!14240 = !DILocation(line: 188, column: 2, scope: !14241, inlinedAt: !14233)
!14241 = distinct !DILexicalBlock(scope: !14225, file: !2412, line: 188, column: 2)
!14242 = !DILocation(line: 188, column: 2, scope: !14243, inlinedAt: !14233)
!14243 = distinct !DILexicalBlock(scope: !14241, file: !2412, line: 188, column: 2)
!14244 = !DILocation(line: 0, scope: !14241, inlinedAt: !14233)
!14245 = !DILocation(line: 189, column: 7, scope: !14246, inlinedAt: !14233)
!14246 = distinct !DILexicalBlock(scope: !14247, file: !2412, line: 189, column: 7)
!14247 = distinct !DILexicalBlock(scope: !14243, file: !2412, line: 188, column: 56)
!14248 = !DILocation(line: 189, column: 35, scope: !14246, inlinedAt: !14233)
!14249 = !DILocation(line: 189, column: 7, scope: !14247, inlinedAt: !14233)
!14250 = !DILocation(line: 191, column: 21, scope: !14251, inlinedAt: !14233)
!14251 = distinct !DILexicalBlock(scope: !14246, file: !2412, line: 189, column: 40)
!14252 = !DILocation(line: 190, column: 4, scope: !14251, inlinedAt: !14233)
!14253 = !DILocation(line: 192, column: 4, scope: !14251, inlinedAt: !14233)
!14254 = distinct !{!14254, !14240, !14255}
!14255 = !DILocation(line: 194, column: 2, scope: !14241, inlinedAt: !14233)
!14256 = !DILocation(line: 196, column: 37, scope: !14225, inlinedAt: !14233)
!14257 = !DILocation(line: 196, column: 2, scope: !14225, inlinedAt: !14233)
!14258 = !DILocation(line: 197, column: 1, scope: !14225, inlinedAt: !14233)
!14259 = !DILocation(line: 399, column: 25, scope: !14186)
!14260 = !DILocation(line: 399, column: 22, scope: !14186)
!14261 = !DILocation(line: 399, column: 2, scope: !14186)
!14262 = !DILocation(line: 400, column: 1, scope: !14186)
!14263 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12380, file: !12380, line: 136, type: !14143, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14264)
!14264 = !{!14265}
!14265 = !DILocalVariable(name: "thread", arg: 1, scope: !14263, file: !12380, line: 136, type: !2305)
!14266 = !DILocation(line: 0, scope: !14263)
!14267 = !DILocation(line: 138, column: 9, scope: !14263)
!14268 = !DILocation(line: 138, column: 2, scope: !14263)
!14269 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2412, file: !2412, line: 1137, type: !14226, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14270)
!14270 = !{!14271, !14272}
!14271 = !DILocalVariable(name: "pq", arg: 1, scope: !14269, file: !2412, line: 1137, type: !14228)
!14272 = !DILocalVariable(name: "thread", arg: 2, scope: !14269, file: !2412, line: 1137, type: !2305)
!14273 = !DILocation(line: 0, scope: !14269)
!14274 = !DILocation(line: 1139, column: 2, scope: !14275)
!14275 = distinct !DILexicalBlock(scope: !14276, file: !2412, line: 1139, column: 2)
!14276 = distinct !DILexicalBlock(scope: !14269, file: !2412, line: 1139, column: 2)
!14277 = !DILocation(line: 1139, column: 2, scope: !14276)
!14278 = !DILocation(line: 1139, column: 2, scope: !14279)
!14279 = distinct !DILexicalBlock(scope: !14275, file: !2412, line: 1139, column: 2)
!14280 = !DILocation(line: 1141, column: 33, scope: !14269)
!14281 = !DILocation(line: 1141, column: 2, scope: !14269)
!14282 = !DILocation(line: 1142, column: 1, scope: !14269)
!14283 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12380, file: !12380, line: 83, type: !14143, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14284)
!14284 = !{!14285}
!14285 = !DILocalVariable(name: "thread", arg: 1, scope: !14283, file: !12380, line: 83, type: !2305)
!14286 = !DILocation(line: 0, scope: !14283)
!14287 = !DILocation(line: 89, column: 16, scope: !14283)
!14288 = !DILocation(line: 89, column: 2, scope: !14283)
!14289 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !235, file: !235, line: 294, type: !14290, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14292)
!14290 = !DISubroutineType(types: !14291)
!14291 = !{!2408, !14228}
!14292 = !{!14293}
!14293 = !DILocalVariable(name: "list", arg: 1, scope: !14289, file: !235, line: 294, type: !14228)
!14294 = !DILocation(line: 0, scope: !14289)
!14295 = !DILocation(line: 296, column: 9, scope: !14289)
!14296 = !DILocation(line: 296, column: 49, scope: !14289)
!14297 = !DILocation(line: 296, column: 2, scope: !14289)
!14298 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !235, file: !235, line: 443, type: !14299, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14301)
!14299 = !DISubroutineType(types: !14300)
!14300 = !{null, !2408, !2408}
!14301 = !{!14302, !14303, !14304}
!14302 = !DILocalVariable(name: "successor", arg: 1, scope: !14298, file: !235, line: 443, type: !2408)
!14303 = !DILocalVariable(name: "node", arg: 2, scope: !14298, file: !235, line: 443, type: !2408)
!14304 = !DILocalVariable(name: "prev", scope: !14298, file: !235, line: 445, type: !14305)
!14305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2408)
!14306 = !DILocation(line: 0, scope: !14298)
!14307 = !DILocation(line: 445, column: 39, scope: !14298)
!14308 = !DILocation(line: 447, column: 8, scope: !14298)
!14309 = !DILocation(line: 447, column: 13, scope: !14298)
!14310 = !DILocation(line: 448, column: 8, scope: !14298)
!14311 = !DILocation(line: 448, column: 13, scope: !14298)
!14312 = !DILocation(line: 449, column: 8, scope: !14298)
!14313 = !DILocation(line: 449, column: 13, scope: !14298)
!14314 = !DILocation(line: 450, column: 18, scope: !14298)
!14315 = !DILocation(line: 451, column: 1, scope: !14298)
!14316 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !235, file: !235, line: 341, type: !14317, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14319)
!14317 = !DISubroutineType(types: !14318)
!14318 = !{!2408, !14228, !2408}
!14319 = !{!14320, !14321}
!14320 = !DILocalVariable(name: "list", arg: 1, scope: !14316, file: !235, line: 341, type: !14228)
!14321 = !DILocalVariable(name: "node", arg: 2, scope: !14316, file: !235, line: 342, type: !2408)
!14322 = !DILocation(line: 0, scope: !14316)
!14323 = !DILocation(line: 344, column: 15, scope: !14316)
!14324 = !DILocation(line: 344, column: 9, scope: !14316)
!14325 = !DILocation(line: 344, column: 26, scope: !14316)
!14326 = !DILocation(line: 344, column: 2, scope: !14316)
!14327 = distinct !DISubprogram(name: "sys_dlist_append", scope: !235, file: !235, line: 404, type: !14328, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14330)
!14328 = !DISubroutineType(types: !14329)
!14329 = !{null, !14228, !2408}
!14330 = !{!14331, !14332, !14333}
!14331 = !DILocalVariable(name: "list", arg: 1, scope: !14327, file: !235, line: 404, type: !14228)
!14332 = !DILocalVariable(name: "node", arg: 2, scope: !14327, file: !235, line: 404, type: !2408)
!14333 = !DILocalVariable(name: "tail", scope: !14327, file: !235, line: 406, type: !14305)
!14334 = !DILocation(line: 0, scope: !14327)
!14335 = !DILocation(line: 406, column: 34, scope: !14327)
!14336 = !DILocation(line: 408, column: 8, scope: !14327)
!14337 = !DILocation(line: 408, column: 13, scope: !14327)
!14338 = !DILocation(line: 409, column: 8, scope: !14327)
!14339 = !DILocation(line: 409, column: 13, scope: !14327)
!14340 = !DILocation(line: 411, column: 8, scope: !14327)
!14341 = !DILocation(line: 411, column: 13, scope: !14327)
!14342 = !DILocation(line: 412, column: 13, scope: !14327)
!14343 = !DILocation(line: 413, column: 1, scope: !14327)
!14344 = distinct !DISubprogram(name: "update_cache", scope: !2412, file: !2412, line: 559, type: !8046, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14345)
!14345 = !{!14346, !14347}
!14346 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14344, file: !2412, line: 559, type: !118)
!14347 = !DILocalVariable(name: "thread", scope: !14344, file: !2412, line: 562, type: !2305)
!14348 = !DILocation(line: 0, scope: !14344)
!14349 = !DILocation(line: 239, column: 9, scope: !14350, inlinedAt: !14353)
!14350 = distinct !DISubprogram(name: "runq_best", scope: !2412, file: !2412, line: 237, type: !14351, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !2123)
!14351 = !DISubroutineType(types: !14352)
!14352 = !{!2305}
!14353 = distinct !DILocation(line: 314, column: 28, scope: !14354, inlinedAt: !14357)
!14354 = distinct !DISubprogram(name: "next_up", scope: !2412, file: !2412, line: 312, type: !14351, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14355)
!14355 = !{!14356}
!14356 = !DILocalVariable(name: "thread", scope: !14354, file: !2412, line: 314, type: !2305)
!14357 = distinct !DILocation(line: 562, column: 28, scope: !14344)
!14358 = !DILocation(line: 0, scope: !14354, inlinedAt: !14357)
!14359 = !DILocation(line: 340, column: 17, scope: !14354, inlinedAt: !14357)
!14360 = !DILocation(line: 340, column: 9, scope: !14354, inlinedAt: !14357)
!14361 = !DILocalVariable(name: "thread", arg: 1, scope: !14362, file: !2412, line: 127, type: !2305)
!14362 = distinct !DISubprogram(name: "should_preempt", scope: !2412, file: !2412, line: 127, type: !14363, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14365)
!14363 = !DISubroutineType(types: !14364)
!14364 = !{!146, !2305, !118}
!14365 = !{!14361, !14366}
!14366 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14362, file: !2412, line: 128, type: !118)
!14367 = !DILocation(line: 0, scope: !14362, inlinedAt: !14368)
!14368 = distinct !DILocation(line: 564, column: 6, scope: !14369)
!14369 = distinct !DILexicalBlock(scope: !14344, file: !2412, line: 564, column: 6)
!14370 = !DILocation(line: 133, column: 17, scope: !14371, inlinedAt: !14368)
!14371 = distinct !DILexicalBlock(scope: !14362, file: !2412, line: 133, column: 6)
!14372 = !DILocation(line: 0, scope: !14369)
!14373 = !DILocation(line: 133, column: 6, scope: !14362, inlinedAt: !14368)
!14374 = !DILocation(line: 137, column: 2, scope: !14375, inlinedAt: !14368)
!14375 = distinct !DILexicalBlock(scope: !14376, file: !2412, line: 137, column: 2)
!14376 = distinct !DILexicalBlock(scope: !14362, file: !2412, line: 137, column: 2)
!14377 = !DILocation(line: 137, column: 2, scope: !14376, inlinedAt: !14368)
!14378 = !DILocation(line: 137, column: 2, scope: !14379, inlinedAt: !14368)
!14379 = distinct !DILexicalBlock(scope: !14375, file: !2412, line: 137, column: 2)
!14380 = !DILocation(line: 140, column: 6, scope: !14381, inlinedAt: !14368)
!14381 = distinct !DILexicalBlock(scope: !14362, file: !2412, line: 140, column: 6)
!14382 = !DILocation(line: 140, column: 6, scope: !14362, inlinedAt: !14368)
!14383 = !DILocation(line: 150, column: 9, scope: !14384, inlinedAt: !14368)
!14384 = distinct !DILexicalBlock(scope: !14362, file: !2412, line: 149, column: 6)
!14385 = !DILocation(line: 149, column: 6, scope: !14362, inlinedAt: !14368)
!14386 = !DILocation(line: 157, column: 6, scope: !14387, inlinedAt: !14368)
!14387 = distinct !DILexicalBlock(scope: !14362, file: !2412, line: 157, column: 6)
!14388 = !DILocation(line: 564, column: 6, scope: !14344)
!14389 = !DILocation(line: 566, column: 14, scope: !14390)
!14390 = distinct !DILexicalBlock(scope: !14391, file: !2412, line: 566, column: 7)
!14391 = distinct !DILexicalBlock(scope: !14369, file: !2412, line: 564, column: 42)
!14392 = !DILocation(line: 566, column: 7, scope: !14391)
!14393 = !DILocation(line: 567, column: 4, scope: !14394)
!14394 = distinct !DILexicalBlock(scope: !14390, file: !2412, line: 566, column: 27)
!14395 = !DILocation(line: 568, column: 3, scope: !14394)
!14396 = !DILocation(line: 585, column: 1, scope: !14344)
!14397 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2412, file: !2412, line: 1144, type: !14398, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14400)
!14398 = !DISubroutineType(types: !14399)
!14399 = !{!2305, !14228}
!14400 = !{!14401, !14402, !14403}
!14401 = !DILocalVariable(name: "pq", arg: 1, scope: !14397, file: !2412, line: 1144, type: !14228)
!14402 = !DILocalVariable(name: "thread", scope: !14397, file: !2412, line: 1146, type: !2305)
!14403 = !DILocalVariable(name: "n", scope: !14397, file: !2412, line: 1147, type: !2408)
!14404 = !DILocation(line: 0, scope: !14397)
!14405 = !DILocation(line: 1147, column: 19, scope: !14397)
!14406 = !DILocation(line: 1152, column: 2, scope: !14397)
!14407 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12380, file: !12380, line: 115, type: !14143, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14408)
!14408 = !{!14409}
!14409 = !DILocalVariable(name: "thread", arg: 1, scope: !14407, file: !12380, line: 115, type: !2305)
!14410 = !DILocation(line: 0, scope: !14407)
!14411 = !DILocation(line: 117, column: 46, scope: !14407)
!14412 = !DILocation(line: 117, column: 10, scope: !14407)
!14413 = !DILocation(line: 117, column: 9, scope: !14407)
!14414 = !DILocation(line: 117, column: 2, scope: !14407)
!14415 = distinct !DISubprogram(name: "is_preempt", scope: !2412, file: !2412, line: 62, type: !13978, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14416)
!14416 = !{!14417}
!14417 = !DILocalVariable(name: "thread", arg: 1, scope: !14415, file: !2412, line: 62, type: !2305)
!14418 = !DILocation(line: 0, scope: !14415)
!14419 = !DILocation(line: 65, column: 22, scope: !14415)
!14420 = !DILocation(line: 65, column: 30, scope: !14415)
!14421 = !DILocation(line: 65, column: 2, scope: !14415)
!14422 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12787, file: !12787, line: 35, type: !14423, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14427)
!14423 = !DISubroutineType(types: !14424)
!14424 = !{!146, !14425}
!14425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14426, size: 32)
!14426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2356)
!14427 = !{!14428}
!14428 = !DILocalVariable(name: "to", arg: 1, scope: !14422, file: !12787, line: 35, type: !14425)
!14429 = !DILocation(line: 0, scope: !14422)
!14430 = !DILocation(line: 37, column: 35, scope: !14422)
!14431 = !DILocation(line: 37, column: 10, scope: !14422)
!14432 = !DILocation(line: 37, column: 9, scope: !14422)
!14433 = !DILocation(line: 37, column: 2, scope: !14422)
!14434 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !235, file: !235, line: 225, type: !14435, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14439)
!14435 = !DISubroutineType(types: !14436)
!14436 = !{!146, !14437}
!14437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14438, size: 32)
!14438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2315)
!14439 = !{!14440}
!14440 = !DILocalVariable(name: "node", arg: 1, scope: !14434, file: !235, line: 225, type: !14437)
!14441 = !DILocation(line: 0, scope: !14434)
!14442 = !DILocation(line: 227, column: 15, scope: !14434)
!14443 = !DILocation(line: 227, column: 20, scope: !14434)
!14444 = !DILocation(line: 227, column: 2, scope: !14434)
!14445 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !235, file: !235, line: 325, type: !14317, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14446)
!14446 = !{!14447, !14448}
!14447 = !DILocalVariable(name: "list", arg: 1, scope: !14445, file: !235, line: 325, type: !14228)
!14448 = !DILocalVariable(name: "node", arg: 2, scope: !14445, file: !235, line: 326, type: !2408)
!14449 = !DILocation(line: 0, scope: !14445)
!14450 = !DILocation(line: 328, column: 24, scope: !14445)
!14451 = !DILocation(line: 328, column: 15, scope: !14445)
!14452 = !DILocation(line: 328, column: 9, scope: !14445)
!14453 = !DILocation(line: 328, column: 45, scope: !14445)
!14454 = !DILocation(line: 328, column: 2, scope: !14445)
!14455 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !235, file: !235, line: 266, type: !14456, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14458)
!14456 = !DISubroutineType(types: !14457)
!14457 = !{!146, !14228}
!14458 = !{!14459}
!14459 = !DILocalVariable(name: "list", arg: 1, scope: !14455, file: !235, line: 266, type: !14228)
!14460 = !DILocation(line: 0, scope: !14455)
!14461 = !DILocation(line: 268, column: 15, scope: !14455)
!14462 = !DILocation(line: 268, column: 20, scope: !14455)
!14463 = !DILocation(line: 268, column: 2, scope: !14455)
!14464 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !235, file: !235, line: 496, type: !14465, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14467)
!14465 = !DISubroutineType(types: !14466)
!14466 = !{null, !2408}
!14467 = !{!14468, !14469, !14470}
!14468 = !DILocalVariable(name: "node", arg: 1, scope: !14464, file: !235, line: 496, type: !2408)
!14469 = !DILocalVariable(name: "prev", scope: !14464, file: !235, line: 498, type: !14305)
!14470 = !DILocalVariable(name: "next", scope: !14464, file: !235, line: 499, type: !14305)
!14471 = !DILocation(line: 0, scope: !14464)
!14472 = !DILocation(line: 498, column: 34, scope: !14464)
!14473 = !DILocation(line: 499, column: 34, scope: !14464)
!14474 = !DILocation(line: 501, column: 8, scope: !14464)
!14475 = !DILocation(line: 501, column: 13, scope: !14464)
!14476 = !DILocation(line: 502, column: 8, scope: !14464)
!14477 = !DILocation(line: 502, column: 13, scope: !14464)
!14478 = !DILocation(line: 503, column: 2, scope: !14464)
!14479 = !DILocation(line: 504, column: 1, scope: !14464)
!14480 = distinct !DISubprogram(name: "sys_dnode_init", scope: !235, file: !235, line: 211, type: !14465, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14481)
!14481 = !{!14482}
!14482 = !DILocalVariable(name: "node", arg: 1, scope: !14480, file: !235, line: 211, type: !2408)
!14483 = !DILocation(line: 0, scope: !14480)
!14484 = !DILocation(line: 213, column: 8, scope: !14480)
!14485 = !DILocation(line: 213, column: 13, scope: !14480)
!14486 = !DILocation(line: 214, column: 8, scope: !14480)
!14487 = !DILocation(line: 214, column: 13, scope: !14480)
!14488 = !DILocation(line: 215, column: 1, scope: !14480)
!14489 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12380, file: !12380, line: 131, type: !14490, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14492)
!14490 = !DISubroutineType(types: !14491)
!14491 = !{!146, !2305, !156}
!14492 = !{!14493, !14494}
!14493 = !DILocalVariable(name: "thread", arg: 1, scope: !14489, file: !12380, line: 131, type: !2305)
!14494 = !DILocalVariable(name: "state", arg: 2, scope: !14489, file: !12380, line: 131, type: !156)
!14495 = !DILocation(line: 0, scope: !14489)
!14496 = !DILocation(line: 133, column: 23, scope: !14489)
!14497 = !DILocation(line: 133, column: 10, scope: !14489)
!14498 = !DILocation(line: 133, column: 36, scope: !14489)
!14499 = !DILocation(line: 133, column: 45, scope: !14489)
!14500 = !DILocation(line: 133, column: 2, scope: !14489)
!14501 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12380, file: !12380, line: 211, type: !14502, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14504)
!14502 = !DISubroutineType(types: !14503)
!14503 = !{!146, !118, !118}
!14504 = !{!14505, !14506}
!14505 = !DILocalVariable(name: "prio", arg: 1, scope: !14501, file: !12380, line: 211, type: !118)
!14506 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14501, file: !12380, line: 211, type: !118)
!14507 = !DILocation(line: 0, scope: !14501)
!14508 = !DILocation(line: 213, column: 9, scope: !14501)
!14509 = !DILocation(line: 213, column: 2, scope: !14501)
!14510 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12380, file: !12380, line: 206, type: !14502, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14511)
!14511 = !{!14512, !14513}
!14512 = !DILocalVariable(name: "prio1", arg: 1, scope: !14510, file: !12380, line: 206, type: !118)
!14513 = !DILocalVariable(name: "prio2", arg: 2, scope: !14510, file: !12380, line: 206, type: !118)
!14514 = !DILocation(line: 0, scope: !14510)
!14515 = !DILocation(line: 208, column: 15, scope: !14510)
!14516 = !DILocation(line: 208, column: 2, scope: !14510)
!14517 = distinct !DISubprogram(name: "z_ready_thread", scope: !2412, file: !2412, line: 635, type: !13960, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14518)
!14518 = !{!14519, !14520, !14522}
!14519 = !DILocalVariable(name: "thread", arg: 1, scope: !14517, file: !2412, line: 635, type: !2305)
!14520 = !DILocalVariable(name: "__i", scope: !14521, file: !2412, line: 637, type: !13994)
!14521 = distinct !DILexicalBlock(scope: !14517, file: !2412, line: 637, column: 2)
!14522 = !DILocalVariable(name: "__key", scope: !14521, file: !2412, line: 637, type: !13994)
!14523 = !DILocation(line: 0, scope: !14517)
!14524 = !DILocation(line: 0, scope: !14521)
!14525 = !DILocation(line: 0, scope: !14002, inlinedAt: !14526)
!14526 = distinct !DILocation(line: 637, column: 2, scope: !14521)
!14527 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !14528)
!14528 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !14526)
!14529 = !DILocation(line: 0, scope: !14011, inlinedAt: !14528)
!14530 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !14526)
!14531 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !14526)
!14532 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !14526)
!14533 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !14526)
!14534 = !DILocation(line: 639, column: 4, scope: !14535)
!14535 = distinct !DILexicalBlock(scope: !14536, file: !2412, line: 638, column: 41)
!14536 = distinct !DILexicalBlock(scope: !14537, file: !2412, line: 638, column: 7)
!14537 = distinct !DILexicalBlock(scope: !14538, file: !2412, line: 637, column: 26)
!14538 = distinct !DILexicalBlock(scope: !14521, file: !2412, line: 637, column: 2)
!14539 = !DILocation(line: 0, scope: !14036, inlinedAt: !14540)
!14540 = distinct !DILocation(line: 637, column: 2, scope: !14538)
!14541 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !14540)
!14542 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !14540)
!14543 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !14540)
!14544 = !DILocation(line: 0, scope: !14050, inlinedAt: !14545)
!14545 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !14540)
!14546 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !14545)
!14547 = !DILocation(line: 642, column: 1, scope: !14517)
!14548 = distinct !DISubprogram(name: "ready_thread", scope: !2412, file: !2412, line: 617, type: !13960, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14549)
!14549 = !{!14550}
!14550 = !DILocalVariable(name: "thread", arg: 1, scope: !14548, file: !2412, line: 617, type: !2305)
!14551 = !DILocation(line: 0, scope: !14548)
!14552 = !DILocation(line: 626, column: 7, scope: !14553)
!14553 = distinct !DILexicalBlock(scope: !14548, file: !2412, line: 626, column: 6)
!14554 = !DILocation(line: 626, column: 34, scope: !14553)
!14555 = !DILocation(line: 626, column: 37, scope: !14553)
!14556 = !DILocation(line: 626, column: 6, scope: !14548)
!14557 = !DILocation(line: 0, scope: !14211, inlinedAt: !14558)
!14558 = distinct !DILocation(line: 629, column: 3, scope: !14559)
!14559 = distinct !DILexicalBlock(scope: !14553, file: !2412, line: 626, column: 64)
!14560 = !DILocation(line: 252, column: 15, scope: !14211, inlinedAt: !14558)
!14561 = !DILocation(line: 252, column: 28, scope: !14211, inlinedAt: !14558)
!14562 = !DILocation(line: 0, scope: !14218, inlinedAt: !14563)
!14563 = distinct !DILocation(line: 254, column: 3, scope: !14222, inlinedAt: !14558)
!14564 = !DILocation(line: 0, scope: !14225, inlinedAt: !14565)
!14565 = distinct !DILocation(line: 229, column: 2, scope: !14218, inlinedAt: !14563)
!14566 = !DILocation(line: 186, column: 2, scope: !14235, inlinedAt: !14565)
!14567 = !DILocation(line: 186, column: 2, scope: !14236, inlinedAt: !14565)
!14568 = !DILocation(line: 186, column: 2, scope: !14239, inlinedAt: !14565)
!14569 = !DILocation(line: 188, column: 2, scope: !14241, inlinedAt: !14565)
!14570 = !DILocation(line: 188, column: 2, scope: !14243, inlinedAt: !14565)
!14571 = !DILocation(line: 0, scope: !14241, inlinedAt: !14565)
!14572 = !DILocation(line: 189, column: 7, scope: !14246, inlinedAt: !14565)
!14573 = !DILocation(line: 189, column: 35, scope: !14246, inlinedAt: !14565)
!14574 = !DILocation(line: 189, column: 7, scope: !14247, inlinedAt: !14565)
!14575 = !DILocation(line: 191, column: 21, scope: !14251, inlinedAt: !14565)
!14576 = !DILocation(line: 190, column: 4, scope: !14251, inlinedAt: !14565)
!14577 = !DILocation(line: 192, column: 4, scope: !14251, inlinedAt: !14565)
!14578 = distinct !{!14578, !14569, !14579}
!14579 = !DILocation(line: 194, column: 2, scope: !14241, inlinedAt: !14565)
!14580 = !DILocation(line: 196, column: 37, scope: !14225, inlinedAt: !14565)
!14581 = !DILocation(line: 196, column: 2, scope: !14225, inlinedAt: !14565)
!14582 = !DILocation(line: 197, column: 1, scope: !14225, inlinedAt: !14565)
!14583 = !DILocation(line: 630, column: 3, scope: !14559)
!14584 = !DILocation(line: 632, column: 2, scope: !14559)
!14585 = !DILocation(line: 633, column: 1, scope: !14548)
!14586 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12380, file: !12380, line: 120, type: !14143, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14587)
!14587 = !{!14588}
!14588 = !DILocalVariable(name: "thread", arg: 1, scope: !14586, file: !12380, line: 120, type: !2305)
!14589 = !DILocation(line: 0, scope: !14586)
!14590 = !DILocation(line: 122, column: 12, scope: !14586)
!14591 = !DILocation(line: 122, column: 62, scope: !14586)
!14592 = !DILocation(line: 123, column: 4, scope: !14586)
!14593 = !DILocation(line: 122, column: 2, scope: !14586)
!14594 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2412, file: !2412, line: 644, type: !13960, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14595)
!14595 = !{!14596, !14597, !14599}
!14596 = !DILocalVariable(name: "thread", arg: 1, scope: !14594, file: !2412, line: 644, type: !2305)
!14597 = !DILocalVariable(name: "__i", scope: !14598, file: !2412, line: 646, type: !13994)
!14598 = distinct !DILexicalBlock(scope: !14594, file: !2412, line: 646, column: 2)
!14599 = !DILocalVariable(name: "__key", scope: !14598, file: !2412, line: 646, type: !13994)
!14600 = !DILocation(line: 0, scope: !14594)
!14601 = !DILocation(line: 0, scope: !14598)
!14602 = !DILocation(line: 0, scope: !14002, inlinedAt: !14603)
!14603 = distinct !DILocation(line: 646, column: 2, scope: !14598)
!14604 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !14605)
!14605 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !14603)
!14606 = !DILocation(line: 0, scope: !14011, inlinedAt: !14605)
!14607 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !14603)
!14608 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !14603)
!14609 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !14603)
!14610 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !14603)
!14611 = !DILocation(line: 647, column: 3, scope: !14612)
!14612 = distinct !DILexicalBlock(scope: !14613, file: !2412, line: 646, column: 26)
!14613 = distinct !DILexicalBlock(scope: !14598, file: !2412, line: 646, column: 2)
!14614 = !DILocation(line: 0, scope: !14036, inlinedAt: !14615)
!14615 = distinct !DILocation(line: 646, column: 2, scope: !14613)
!14616 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !14615)
!14617 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !14615)
!14618 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !14615)
!14619 = !DILocation(line: 0, scope: !14050, inlinedAt: !14620)
!14620 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !14615)
!14621 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !14620)
!14622 = !DILocation(line: 649, column: 1, scope: !14594)
!14623 = distinct !DISubprogram(name: "z_sched_start", scope: !2412, file: !2412, line: 651, type: !13960, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14624)
!14624 = !{!14625, !14626}
!14625 = !DILocalVariable(name: "thread", arg: 1, scope: !14623, file: !2412, line: 651, type: !2305)
!14626 = !DILocalVariable(name: "key", scope: !14623, file: !2412, line: 653, type: !13994)
!14627 = !DILocation(line: 0, scope: !14623)
!14628 = !DILocation(line: 0, scope: !14002, inlinedAt: !14629)
!14629 = distinct !DILocation(line: 653, column: 25, scope: !14623)
!14630 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !14631)
!14631 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !14629)
!14632 = !DILocation(line: 0, scope: !14011, inlinedAt: !14631)
!14633 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !14629)
!14634 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !14629)
!14635 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !14629)
!14636 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !14629)
!14637 = !DILocation(line: 655, column: 6, scope: !14638)
!14638 = distinct !DILexicalBlock(scope: !14623, file: !2412, line: 655, column: 6)
!14639 = !DILocation(line: 655, column: 6, scope: !14623)
!14640 = !DILocation(line: 0, scope: !14036, inlinedAt: !14641)
!14641 = distinct !DILocation(line: 656, column: 3, scope: !14642)
!14642 = distinct !DILexicalBlock(scope: !14638, file: !2412, line: 655, column: 36)
!14643 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !14641)
!14644 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !14641)
!14645 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !14641)
!14646 = !DILocation(line: 0, scope: !14050, inlinedAt: !14647)
!14647 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !14641)
!14648 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !14647)
!14649 = !DILocation(line: 657, column: 3, scope: !14642)
!14650 = !DILocation(line: 660, column: 2, scope: !14623)
!14651 = !DILocation(line: 661, column: 2, scope: !14623)
!14652 = !DILocation(line: 662, column: 2, scope: !14623)
!14653 = !DILocation(line: 663, column: 1, scope: !14623)
!14654 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12380, file: !12380, line: 126, type: !14143, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14655)
!14655 = !{!14656}
!14656 = !DILocalVariable(name: "thread", arg: 1, scope: !14654, file: !12380, line: 126, type: !2305)
!14657 = !DILocation(line: 0, scope: !14654)
!14658 = !DILocation(line: 128, column: 23, scope: !14654)
!14659 = !DILocation(line: 128, column: 36, scope: !14654)
!14660 = !DILocation(line: 128, column: 56, scope: !14654)
!14661 = !DILocation(line: 128, column: 2, scope: !14654)
!14662 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12380, file: !12380, line: 155, type: !13960, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14663)
!14663 = !{!14664}
!14664 = !DILocalVariable(name: "thread", arg: 1, scope: !14662, file: !12380, line: 155, type: !2305)
!14665 = !DILocation(line: 0, scope: !14662)
!14666 = !DILocation(line: 157, column: 15, scope: !14662)
!14667 = !DILocation(line: 157, column: 28, scope: !14662)
!14668 = !DILocation(line: 158, column: 1, scope: !14662)
!14669 = distinct !DISubprogram(name: "z_reschedule", scope: !2412, file: !2412, line: 967, type: !14037, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14670)
!14670 = !{!14671, !14672}
!14671 = !DILocalVariable(name: "lock", arg: 1, scope: !14669, file: !2412, line: 967, type: !14005)
!14672 = !DILocalVariable(name: "key", arg: 2, scope: !14669, file: !2412, line: 967, type: !13994)
!14673 = !DILocation(line: 0, scope: !14669)
!14674 = !DILocation(line: 969, column: 6, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14669, file: !2412, line: 969, column: 6)
!14676 = !DILocation(line: 969, column: 23, scope: !14675)
!14677 = !DILocation(line: 969, column: 26, scope: !14675)
!14678 = !DILocation(line: 969, column: 6, scope: !14669)
!14679 = !DILocalVariable(name: "key", arg: 2, scope: !14680, file: !12484, line: 193, type: !13994)
!14680 = distinct !DISubprogram(name: "z_swap", scope: !12484, file: !12484, line: 193, type: !14681, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14683)
!14681 = !DISubroutineType(types: !14682)
!14682 = !{!118, !14005, !13994}
!14683 = !{!14684, !14679}
!14684 = !DILocalVariable(name: "lock", arg: 1, scope: !14680, file: !12484, line: 193, type: !14005)
!14685 = !DILocation(line: 0, scope: !14680, inlinedAt: !14686)
!14686 = distinct !DILocation(line: 970, column: 3, scope: !14687)
!14687 = distinct !DILexicalBlock(scope: !14675, file: !2412, line: 969, column: 39)
!14688 = !DILocalVariable(name: "l", arg: 1, scope: !14689, file: !334, line: 221, type: !14005)
!14689 = distinct !DISubprogram(name: "k_spin_release", scope: !334, file: !334, line: 221, type: !14690, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14692)
!14690 = !DISubroutineType(types: !14691)
!14691 = !{null, !14005}
!14692 = !{!14688}
!14693 = !DILocation(line: 0, scope: !14689, inlinedAt: !14694)
!14694 = distinct !DILocation(line: 195, column: 2, scope: !14680, inlinedAt: !14686)
!14695 = !DILocation(line: 225, column: 2, scope: !14696, inlinedAt: !14694)
!14696 = distinct !DILexicalBlock(scope: !14697, file: !334, line: 225, column: 2)
!14697 = distinct !DILexicalBlock(scope: !14689, file: !334, line: 225, column: 2)
!14698 = !DILocation(line: 225, column: 2, scope: !14697, inlinedAt: !14694)
!14699 = !DILocation(line: 225, column: 2, scope: !14700, inlinedAt: !14694)
!14700 = distinct !DILexicalBlock(scope: !14696, file: !334, line: 225, column: 2)
!14701 = !DILocation(line: 196, column: 9, scope: !14680, inlinedAt: !14686)
!14702 = !DILocation(line: 971, column: 2, scope: !14687)
!14703 = !DILocation(line: 0, scope: !14036, inlinedAt: !14704)
!14704 = distinct !DILocation(line: 972, column: 3, scope: !14705)
!14705 = distinct !DILexicalBlock(scope: !14675, file: !2412, line: 971, column: 9)
!14706 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !14704)
!14707 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !14704)
!14708 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !14704)
!14709 = !DILocation(line: 0, scope: !14050, inlinedAt: !14710)
!14710 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !14704)
!14711 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !14710)
!14712 = !DILocation(line: 975, column: 1, scope: !14669)
!14713 = distinct !DISubprogram(name: "resched", scope: !2412, file: !2412, line: 940, type: !14714, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14716)
!14714 = !DISubroutineType(types: !14715)
!14715 = !{!146, !156}
!14716 = !{!14717}
!14717 = !DILocalVariable(name: "key", arg: 1, scope: !14713, file: !2412, line: 940, type: !156)
!14718 = !DILocation(line: 0, scope: !14713)
!14719 = !DILocalVariable(name: "key", arg: 1, scope: !14720, file: !6172, line: 112, type: !32)
!14720 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6172, file: !6172, line: 112, type: !14721, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14723)
!14721 = !DISubroutineType(types: !14722)
!14722 = !{!146, !32}
!14723 = !{!14719}
!14724 = !DILocation(line: 0, scope: !14720, inlinedAt: !14725)
!14725 = distinct !DILocation(line: 946, column: 9, scope: !14713)
!14726 = !DILocation(line: 115, column: 13, scope: !14720, inlinedAt: !14725)
!14727 = !DILocation(line: 946, column: 32, scope: !14713)
!14728 = !DILocation(line: 1031, column: 3, scope: !14729, inlinedAt: !14732)
!14729 = distinct !DISubprogram(name: "__get_IPSR", scope: !6346, file: !6346, line: 1027, type: !6433, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14730)
!14730 = !{!14731}
!14731 = !DILocalVariable(name: "result", scope: !14729, file: !6346, line: 1029, type: !156)
!14732 = distinct !DILocation(line: 48, column: 10, scope: !14733, inlinedAt: !14734)
!14733 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7172, file: !7172, line: 46, type: !7173, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !2123)
!14734 = distinct !DILocation(line: 946, column: 36, scope: !14713)
!14735 = !{i64 3540370}
!14736 = !DILocation(line: 0, scope: !14729, inlinedAt: !14732)
!14737 = !DILocation(line: 48, column: 9, scope: !14733, inlinedAt: !14734)
!14738 = !DILocation(line: 946, column: 2, scope: !14713)
!14739 = distinct !DISubprogram(name: "need_swap", scope: !2412, file: !2412, line: 953, type: !7173, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14740)
!14740 = !{!14741}
!14741 = !DILocalVariable(name: "new_thread", scope: !14739, file: !2412, line: 959, type: !2305)
!14742 = !DILocation(line: 962, column: 31, scope: !14739)
!14743 = !DILocation(line: 0, scope: !14739)
!14744 = !DILocation(line: 963, column: 23, scope: !14739)
!14745 = !DILocation(line: 963, column: 20, scope: !14739)
!14746 = !DILocation(line: 963, column: 2, scope: !14739)
!14747 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12484, file: !12484, line: 181, type: !6356, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14748)
!14748 = !{!14749, !14750}
!14749 = !DILocalVariable(name: "key", arg: 1, scope: !14747, file: !12484, line: 181, type: !32)
!14750 = !DILocalVariable(name: "ret", scope: !14747, file: !12484, line: 183, type: !118)
!14751 = !DILocation(line: 0, scope: !14747)
!14752 = !DILocation(line: 185, column: 8, scope: !14747)
!14753 = !DILocation(line: 186, column: 2, scope: !14747)
!14754 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2412, file: !2412, line: 665, type: !13960, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14755)
!14755 = !{!14756, !14757, !14759}
!14756 = !DILocalVariable(name: "thread", arg: 1, scope: !14754, file: !2412, line: 665, type: !2305)
!14757 = !DILocalVariable(name: "__i", scope: !14758, file: !2412, line: 671, type: !13994)
!14758 = distinct !DILexicalBlock(scope: !14754, file: !2412, line: 671, column: 2)
!14759 = !DILocalVariable(name: "__key", scope: !14758, file: !2412, line: 671, type: !13994)
!14760 = !DILocation(line: 0, scope: !14754)
!14761 = !DILocation(line: 669, column: 8, scope: !14754)
!14762 = !DILocation(line: 0, scope: !14758)
!14763 = !DILocation(line: 0, scope: !14002, inlinedAt: !14764)
!14764 = distinct !DILocation(line: 671, column: 2, scope: !14758)
!14765 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !14766)
!14766 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !14764)
!14767 = !DILocation(line: 0, scope: !14011, inlinedAt: !14766)
!14768 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !14764)
!14769 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !14764)
!14770 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !14764)
!14771 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !14764)
!14772 = !DILocation(line: 672, column: 7, scope: !14773)
!14773 = distinct !DILexicalBlock(scope: !14774, file: !2412, line: 672, column: 7)
!14774 = distinct !DILexicalBlock(scope: !14775, file: !2412, line: 671, column: 26)
!14775 = distinct !DILexicalBlock(scope: !14758, file: !2412, line: 671, column: 2)
!14776 = !DILocation(line: 672, column: 7, scope: !14774)
!14777 = !DILocation(line: 0, scope: !14194, inlinedAt: !14778)
!14778 = distinct !DILocation(line: 673, column: 4, scope: !14779)
!14779 = distinct !DILexicalBlock(scope: !14773, file: !2412, line: 672, column: 35)
!14780 = !DILocation(line: 266, column: 15, scope: !14194, inlinedAt: !14778)
!14781 = !DILocation(line: 266, column: 28, scope: !14194, inlinedAt: !14778)
!14782 = !DILocation(line: 0, scope: !14202, inlinedAt: !14783)
!14783 = distinct !DILocation(line: 268, column: 3, scope: !14206, inlinedAt: !14778)
!14784 = !DILocation(line: 234, column: 2, scope: !14202, inlinedAt: !14783)
!14785 = !DILocation(line: 674, column: 3, scope: !14779)
!14786 = !DILocation(line: 675, column: 3, scope: !14774)
!14787 = !DILocation(line: 676, column: 26, scope: !14774)
!14788 = !DILocation(line: 676, column: 23, scope: !14774)
!14789 = !DILocation(line: 676, column: 3, scope: !14774)
!14790 = !DILocation(line: 0, scope: !14036, inlinedAt: !14791)
!14791 = distinct !DILocation(line: 671, column: 2, scope: !14775)
!14792 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !14791)
!14793 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !14791)
!14794 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !14791)
!14795 = !DILocation(line: 0, scope: !14050, inlinedAt: !14796)
!14796 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !14791)
!14797 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !14796)
!14798 = !DILocation(line: 679, column: 16, scope: !14799)
!14799 = distinct !DILexicalBlock(scope: !14754, file: !2412, line: 679, column: 6)
!14800 = !DILocation(line: 679, column: 13, scope: !14799)
!14801 = !DILocation(line: 679, column: 6, scope: !14754)
!14802 = !DILocation(line: 680, column: 3, scope: !14803)
!14803 = distinct !DILexicalBlock(scope: !14799, file: !2412, line: 679, column: 26)
!14804 = !DILocation(line: 681, column: 2, scope: !14803)
!14805 = !DILocation(line: 684, column: 1, scope: !14754)
!14806 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12787, file: !12787, line: 52, type: !13978, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14807)
!14807 = !{!14808}
!14808 = !DILocalVariable(name: "thread", arg: 1, scope: !14806, file: !12787, line: 52, type: !2305)
!14809 = !DILocation(line: 0, scope: !14806)
!14810 = !DILocation(line: 54, column: 39, scope: !14806)
!14811 = !DILocation(line: 54, column: 9, scope: !14806)
!14812 = !DILocation(line: 54, column: 2, scope: !14806)
!14813 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12380, file: !12380, line: 141, type: !13960, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14814)
!14814 = !{!14815}
!14815 = !DILocalVariable(name: "thread", arg: 1, scope: !14813, file: !12380, line: 141, type: !2305)
!14816 = !DILocation(line: 0, scope: !14813)
!14817 = !DILocation(line: 143, column: 15, scope: !14813)
!14818 = !DILocation(line: 143, column: 28, scope: !14813)
!14819 = !DILocation(line: 146, column: 1, scope: !14813)
!14820 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12380, file: !12380, line: 73, type: !365, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !2123)
!14821 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !14822)
!14822 = distinct !DILocation(line: 75, column: 30, scope: !14820)
!14823 = !DILocation(line: 0, scope: !14011, inlinedAt: !14822)
!14824 = !DILocation(line: 75, column: 9, scope: !14820)
!14825 = !DILocation(line: 76, column: 1, scope: !14820)
!14826 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2412, file: !2412, line: 977, type: !6443, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14827)
!14827 = !{!14828}
!14828 = !DILocalVariable(name: "key", arg: 1, scope: !14826, file: !2412, line: 977, type: !156)
!14829 = !DILocation(line: 0, scope: !14826)
!14830 = !DILocation(line: 979, column: 6, scope: !14831)
!14831 = distinct !DILexicalBlock(scope: !14826, file: !2412, line: 979, column: 6)
!14832 = !DILocation(line: 979, column: 6, scope: !14826)
!14833 = !DILocation(line: 980, column: 3, scope: !14834)
!14834 = distinct !DILexicalBlock(scope: !14831, file: !2412, line: 979, column: 20)
!14835 = !DILocation(line: 981, column: 2, scope: !14834)
!14836 = !DILocation(line: 0, scope: !14050, inlinedAt: !14837)
!14837 = distinct !DILocation(line: 982, column: 3, scope: !14838)
!14838 = distinct !DILexicalBlock(scope: !14831, file: !2412, line: 981, column: 9)
!14839 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !14837)
!14840 = !DILocation(line: 985, column: 1, scope: !14826)
!14841 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2412, file: !2412, line: 695, type: !13960, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14842)
!14842 = !{!14843, !14844}
!14843 = !DILocalVariable(name: "thread", arg: 1, scope: !14841, file: !2412, line: 695, type: !2305)
!14844 = !DILocalVariable(name: "key", scope: !14841, file: !2412, line: 699, type: !13994)
!14845 = !DILocation(line: 0, scope: !14841)
!14846 = !DILocation(line: 0, scope: !14002, inlinedAt: !14847)
!14847 = distinct !DILocation(line: 699, column: 25, scope: !14841)
!14848 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !14849)
!14849 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !14847)
!14850 = !DILocation(line: 0, scope: !14011, inlinedAt: !14849)
!14851 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !14847)
!14852 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !14847)
!14853 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !14847)
!14854 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !14847)
!14855 = !DILocation(line: 702, column: 7, scope: !14856)
!14856 = distinct !DILexicalBlock(scope: !14841, file: !2412, line: 702, column: 6)
!14857 = !DILocation(line: 702, column: 6, scope: !14841)
!14858 = !DILocation(line: 0, scope: !14036, inlinedAt: !14859)
!14859 = distinct !DILocation(line: 703, column: 3, scope: !14860)
!14860 = distinct !DILexicalBlock(scope: !14856, file: !2412, line: 702, column: 38)
!14861 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !14859)
!14862 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !14859)
!14863 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !14859)
!14864 = !DILocation(line: 0, scope: !14050, inlinedAt: !14865)
!14865 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !14859)
!14866 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !14865)
!14867 = !DILocation(line: 704, column: 3, scope: !14860)
!14868 = !DILocation(line: 707, column: 2, scope: !14841)
!14869 = !DILocation(line: 708, column: 2, scope: !14841)
!14870 = !DILocation(line: 710, column: 2, scope: !14841)
!14871 = !DILocation(line: 713, column: 1, scope: !14841)
!14872 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12380, file: !12380, line: 96, type: !14143, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14873)
!14873 = !{!14874}
!14874 = !DILocalVariable(name: "thread", arg: 1, scope: !14872, file: !12380, line: 96, type: !2305)
!14875 = !DILocation(line: 0, scope: !14872)
!14876 = !DILocation(line: 98, column: 23, scope: !14872)
!14877 = !DILocation(line: 98, column: 36, scope: !14872)
!14878 = !DILocation(line: 98, column: 57, scope: !14872)
!14879 = !DILocation(line: 98, column: 2, scope: !14872)
!14880 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12380, file: !12380, line: 148, type: !13960, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14881)
!14881 = !{!14882}
!14882 = !DILocalVariable(name: "thread", arg: 1, scope: !14880, file: !12380, line: 148, type: !2305)
!14883 = !DILocation(line: 0, scope: !14880)
!14884 = !DILocation(line: 150, column: 15, scope: !14880)
!14885 = !DILocation(line: 150, column: 28, scope: !14880)
!14886 = !DILocation(line: 153, column: 1, scope: !14880)
!14887 = distinct !DISubprogram(name: "z_pend_thread", scope: !2412, file: !2412, line: 770, type: !14888, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14894)
!14888 = !DISubroutineType(types: !14889)
!14889 = !{null, !2305, !2336, !14890}
!14890 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !14891)
!14891 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !14892)
!14892 = !{!14893}
!14893 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14891, file: !114, line: 66, baseType: !113, size: 64)
!14894 = !{!14895, !14896, !14897, !14898, !14900}
!14895 = !DILocalVariable(name: "thread", arg: 1, scope: !14887, file: !2412, line: 770, type: !2305)
!14896 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14887, file: !2412, line: 770, type: !2336)
!14897 = !DILocalVariable(name: "timeout", arg: 3, scope: !14887, file: !2412, line: 771, type: !14890)
!14898 = !DILocalVariable(name: "__i", scope: !14899, file: !2412, line: 774, type: !13994)
!14899 = distinct !DILexicalBlock(scope: !14887, file: !2412, line: 774, column: 2)
!14900 = !DILocalVariable(name: "__key", scope: !14899, file: !2412, line: 774, type: !13994)
!14901 = !DILocation(line: 0, scope: !14887)
!14902 = !DILocation(line: 773, column: 2, scope: !14903)
!14903 = distinct !DILexicalBlock(scope: !14904, file: !2412, line: 773, column: 2)
!14904 = distinct !DILexicalBlock(scope: !14887, file: !2412, line: 773, column: 2)
!14905 = !DILocation(line: 773, column: 2, scope: !14904)
!14906 = !DILocation(line: 773, column: 2, scope: !14907)
!14907 = distinct !DILexicalBlock(scope: !14903, file: !2412, line: 773, column: 2)
!14908 = !DILocation(line: 0, scope: !14899)
!14909 = !DILocation(line: 0, scope: !14002, inlinedAt: !14910)
!14910 = distinct !DILocation(line: 774, column: 2, scope: !14899)
!14911 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !14912)
!14912 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !14910)
!14913 = !DILocation(line: 0, scope: !14011, inlinedAt: !14912)
!14914 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !14910)
!14915 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !14910)
!14916 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !14910)
!14917 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !14910)
!14918 = !DILocation(line: 775, column: 3, scope: !14919)
!14919 = distinct !DILexicalBlock(scope: !14920, file: !2412, line: 774, column: 26)
!14920 = distinct !DILexicalBlock(scope: !14899, file: !2412, line: 774, column: 2)
!14921 = !DILocation(line: 0, scope: !14036, inlinedAt: !14922)
!14922 = distinct !DILocation(line: 774, column: 2, scope: !14920)
!14923 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !14922)
!14924 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !14922)
!14925 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !14922)
!14926 = !DILocation(line: 0, scope: !14050, inlinedAt: !14927)
!14927 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !14922)
!14928 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !14927)
!14929 = !DILocation(line: 777, column: 1, scope: !14887)
!14930 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2412, file: !2412, line: 79, type: !14143, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14931)
!14931 = !{!14932}
!14932 = !DILocalVariable(name: "thread", arg: 1, scope: !14930, file: !2412, line: 79, type: !2305)
!14933 = !DILocation(line: 0, scope: !14930)
!14934 = !DILocation(line: 81, column: 23, scope: !14930)
!14935 = !DILocation(line: 81, column: 36, scope: !14930)
!14936 = !DILocation(line: 81, column: 53, scope: !14930)
!14937 = !DILocation(line: 81, column: 2, scope: !14930)
!14938 = distinct !DISubprogram(name: "pend_locked", scope: !2412, file: !2412, line: 760, type: !14888, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14939)
!14939 = !{!14940, !14941, !14942}
!14940 = !DILocalVariable(name: "thread", arg: 1, scope: !14938, file: !2412, line: 760, type: !2305)
!14941 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14938, file: !2412, line: 760, type: !2336)
!14942 = !DILocalVariable(name: "timeout", arg: 3, scope: !14938, file: !2412, line: 761, type: !14890)
!14943 = !DILocation(line: 0, scope: !14938)
!14944 = !DILocation(line: 766, column: 2, scope: !14938)
!14945 = !DILocation(line: 767, column: 2, scope: !14938)
!14946 = !DILocation(line: 768, column: 1, scope: !14938)
!14947 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2412, file: !2412, line: 740, type: !14948, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14950)
!14948 = !DISubroutineType(types: !14949)
!14949 = !{null, !2305, !2336}
!14950 = !{!14951, !14952}
!14951 = !DILocalVariable(name: "thread", arg: 1, scope: !14947, file: !2412, line: 740, type: !2305)
!14952 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14947, file: !2412, line: 740, type: !2336)
!14953 = !DILocation(line: 0, scope: !14947)
!14954 = !DILocation(line: 742, column: 2, scope: !14947)
!14955 = !DILocation(line: 743, column: 2, scope: !14947)
!14956 = !DILocation(line: 747, column: 13, scope: !14957)
!14957 = distinct !DILexicalBlock(scope: !14947, file: !2412, line: 747, column: 6)
!14958 = !DILocation(line: 747, column: 6, scope: !14947)
!14959 = !DILocation(line: 748, column: 16, scope: !14960)
!14960 = distinct !DILexicalBlock(scope: !14957, file: !2412, line: 747, column: 22)
!14961 = !DILocation(line: 748, column: 26, scope: !14960)
!14962 = !DILocation(line: 749, column: 28, scope: !14960)
!14963 = !DILocation(line: 0, scope: !14225, inlinedAt: !14964)
!14964 = distinct !DILocation(line: 749, column: 3, scope: !14960)
!14965 = !DILocation(line: 186, column: 2, scope: !14235, inlinedAt: !14964)
!14966 = !DILocation(line: 186, column: 2, scope: !14236, inlinedAt: !14964)
!14967 = !DILocation(line: 186, column: 2, scope: !14239, inlinedAt: !14964)
!14968 = !DILocation(line: 188, column: 2, scope: !14241, inlinedAt: !14964)
!14969 = !DILocation(line: 188, column: 2, scope: !14243, inlinedAt: !14964)
!14970 = !DILocation(line: 0, scope: !14241, inlinedAt: !14964)
!14971 = !DILocation(line: 189, column: 7, scope: !14246, inlinedAt: !14964)
!14972 = !DILocation(line: 189, column: 35, scope: !14246, inlinedAt: !14964)
!14973 = !DILocation(line: 189, column: 7, scope: !14247, inlinedAt: !14964)
!14974 = !DILocation(line: 191, column: 21, scope: !14251, inlinedAt: !14964)
!14975 = !DILocation(line: 190, column: 4, scope: !14251, inlinedAt: !14964)
!14976 = !DILocation(line: 192, column: 4, scope: !14251, inlinedAt: !14964)
!14977 = distinct !{!14977, !14968, !14978}
!14978 = !DILocation(line: 194, column: 2, scope: !14241, inlinedAt: !14964)
!14979 = !DILocation(line: 196, column: 37, scope: !14225, inlinedAt: !14964)
!14980 = !DILocation(line: 196, column: 2, scope: !14225, inlinedAt: !14964)
!14981 = !DILocation(line: 197, column: 1, scope: !14225, inlinedAt: !14964)
!14982 = !DILocation(line: 751, column: 1, scope: !14947)
!14983 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2412, file: !2412, line: 753, type: !14984, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14986)
!14984 = !DISubroutineType(types: !14985)
!14985 = !{null, !2305, !14890}
!14986 = !{!14987, !14988}
!14987 = !DILocalVariable(name: "thread", arg: 1, scope: !14983, file: !2412, line: 753, type: !2305)
!14988 = !DILocalVariable(name: "timeout", arg: 2, scope: !14983, file: !2412, line: 753, type: !14890)
!14989 = !DILocation(line: 0, scope: !14983)
!14990 = !DILocation(line: 755, column: 7, scope: !14991)
!14991 = distinct !DILexicalBlock(scope: !14983, file: !2412, line: 755, column: 6)
!14992 = !DILocation(line: 755, column: 6, scope: !14983)
!14993 = !DILocation(line: 756, column: 3, scope: !14994)
!14994 = distinct !DILexicalBlock(scope: !14991, file: !2412, line: 755, column: 41)
!14995 = !DILocation(line: 757, column: 2, scope: !14994)
!14996 = !DILocation(line: 758, column: 1, scope: !14983)
!14997 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12787, file: !12787, line: 47, type: !14984, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !14998)
!14998 = !{!14999, !15000}
!14999 = !DILocalVariable(name: "thread", arg: 1, scope: !14997, file: !12787, line: 47, type: !2305)
!15000 = !DILocalVariable(name: "ticks", arg: 2, scope: !14997, file: !12787, line: 47, type: !14890)
!15001 = !DILocation(line: 0, scope: !14997)
!15002 = !DILocation(line: 49, column: 30, scope: !14997)
!15003 = !DILocation(line: 49, column: 2, scope: !14997)
!15004 = !DILocation(line: 50, column: 1, scope: !14997)
!15005 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2412, file: !2412, line: 795, type: !2362, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15006)
!15006 = !{!15007, !15008, !15009, !15011, !15012}
!15007 = !DILocalVariable(name: "timeout", arg: 1, scope: !15005, file: !2412, line: 795, type: !2364)
!15008 = !DILocalVariable(name: "thread", scope: !15005, file: !2412, line: 797, type: !2305)
!15009 = !DILocalVariable(name: "__i", scope: !15010, file: !2412, line: 800, type: !13994)
!15010 = distinct !DILexicalBlock(scope: !15005, file: !2412, line: 800, column: 2)
!15011 = !DILocalVariable(name: "__key", scope: !15010, file: !2412, line: 800, type: !13994)
!15012 = !DILocalVariable(name: "killed", scope: !15013, file: !2412, line: 801, type: !146)
!15013 = distinct !DILexicalBlock(scope: !15014, file: !2412, line: 800, column: 26)
!15014 = distinct !DILexicalBlock(scope: !15010, file: !2412, line: 800, column: 2)
!15015 = !DILocation(line: 0, scope: !15005)
!15016 = !DILocation(line: 797, column: 28, scope: !15005)
!15017 = !DILocation(line: 0, scope: !15010)
!15018 = !DILocation(line: 0, scope: !14002, inlinedAt: !15019)
!15019 = distinct !DILocation(line: 800, column: 2, scope: !15010)
!15020 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !15021)
!15021 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !15019)
!15022 = !DILocation(line: 0, scope: !14011, inlinedAt: !15021)
!15023 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !15019)
!15024 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15019)
!15025 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !15019)
!15026 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !15019)
!15027 = !DILocation(line: 801, column: 27, scope: !15013)
!15028 = !DILocation(line: 801, column: 32, scope: !15013)
!15029 = !DILocation(line: 801, column: 61, scope: !15013)
!15030 = !DILocation(line: 0, scope: !15013)
!15031 = !DILocation(line: 804, column: 7, scope: !15013)
!15032 = !DILocation(line: 805, column: 21, scope: !15033)
!15033 = distinct !DILexicalBlock(scope: !15034, file: !2412, line: 805, column: 8)
!15034 = distinct !DILexicalBlock(scope: !15035, file: !2412, line: 804, column: 16)
!15035 = distinct !DILexicalBlock(scope: !15013, file: !2412, line: 804, column: 7)
!15036 = !DILocation(line: 805, column: 31, scope: !15033)
!15037 = !DILocation(line: 805, column: 8, scope: !15034)
!15038 = !DILocation(line: 806, column: 5, scope: !15039)
!15039 = distinct !DILexicalBlock(scope: !15033, file: !2412, line: 805, column: 40)
!15040 = !DILocation(line: 807, column: 4, scope: !15039)
!15041 = !DILocation(line: 808, column: 4, scope: !15034)
!15042 = !DILocation(line: 809, column: 4, scope: !15034)
!15043 = !DILocation(line: 810, column: 4, scope: !15034)
!15044 = !DILocation(line: 811, column: 3, scope: !15034)
!15045 = !DILocation(line: 0, scope: !14036, inlinedAt: !15046)
!15046 = distinct !DILocation(line: 800, column: 2, scope: !15014)
!15047 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !15046)
!15048 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !15046)
!15049 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !15046)
!15050 = !DILocation(line: 0, scope: !14050, inlinedAt: !15051)
!15051 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !15046)
!15052 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !15051)
!15053 = !DILocation(line: 813, column: 1, scope: !15005)
!15054 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2412, file: !2412, line: 779, type: !13960, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15055)
!15055 = !{!15056}
!15056 = !DILocalVariable(name: "thread", arg: 1, scope: !15054, file: !2412, line: 779, type: !2305)
!15057 = !DILocation(line: 0, scope: !15054)
!15058 = !DILocation(line: 781, column: 21, scope: !15054)
!15059 = !DILocation(line: 781, column: 2, scope: !15054)
!15060 = !DILocation(line: 782, column: 2, scope: !15054)
!15061 = !DILocation(line: 783, column: 15, scope: !15054)
!15062 = !DILocation(line: 783, column: 25, scope: !15054)
!15063 = !DILocation(line: 784, column: 1, scope: !15054)
!15064 = distinct !DISubprogram(name: "pended_on_thread", scope: !2412, file: !2412, line: 724, type: !15065, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15067)
!15065 = !DISubroutineType(types: !15066)
!15066 = !{!2336, !2305}
!15067 = !{!15068}
!15068 = !DILocalVariable(name: "thread", arg: 1, scope: !15064, file: !2412, line: 724, type: !2305)
!15069 = !DILocation(line: 0, scope: !15064)
!15070 = !DILocation(line: 726, column: 2, scope: !15071)
!15071 = distinct !DILexicalBlock(scope: !15072, file: !2412, line: 726, column: 2)
!15072 = distinct !DILexicalBlock(scope: !15064, file: !2412, line: 726, column: 2)
!15073 = !DILocation(line: 726, column: 2, scope: !15072)
!15074 = !DILocation(line: 726, column: 2, scope: !15075)
!15075 = distinct !DILexicalBlock(scope: !15071, file: !2412, line: 726, column: 2)
!15076 = !DILocation(line: 728, column: 2, scope: !15064)
!15077 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12380, file: !12380, line: 165, type: !13960, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15078)
!15078 = !{!15079}
!15079 = !DILocalVariable(name: "thread", arg: 1, scope: !15077, file: !12380, line: 165, type: !2305)
!15080 = !DILocation(line: 0, scope: !15077)
!15081 = !DILocation(line: 167, column: 15, scope: !15077)
!15082 = !DILocation(line: 167, column: 28, scope: !15077)
!15083 = !DILocation(line: 168, column: 1, scope: !15077)
!15084 = distinct !DISubprogram(name: "unready_thread", scope: !2412, file: !2412, line: 731, type: !13960, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15085)
!15085 = !{!15086}
!15086 = !DILocalVariable(name: "thread", arg: 1, scope: !15084, file: !2412, line: 731, type: !2305)
!15087 = !DILocation(line: 0, scope: !15084)
!15088 = !DILocation(line: 733, column: 6, scope: !15089)
!15089 = distinct !DILexicalBlock(scope: !15084, file: !2412, line: 733, column: 6)
!15090 = !DILocation(line: 733, column: 6, scope: !15084)
!15091 = !DILocation(line: 0, scope: !14194, inlinedAt: !15092)
!15092 = distinct !DILocation(line: 734, column: 3, scope: !15093)
!15093 = distinct !DILexicalBlock(scope: !15089, file: !2412, line: 733, column: 34)
!15094 = !DILocation(line: 266, column: 15, scope: !14194, inlinedAt: !15092)
!15095 = !DILocation(line: 266, column: 28, scope: !14194, inlinedAt: !15092)
!15096 = !DILocation(line: 0, scope: !14202, inlinedAt: !15097)
!15097 = distinct !DILocation(line: 268, column: 3, scope: !14206, inlinedAt: !15092)
!15098 = !DILocation(line: 234, column: 2, scope: !14202, inlinedAt: !15097)
!15099 = !DILocation(line: 735, column: 2, scope: !15093)
!15100 = !DILocation(line: 736, column: 25, scope: !15084)
!15101 = !DILocation(line: 736, column: 22, scope: !15084)
!15102 = !DILocation(line: 736, column: 2, scope: !15084)
!15103 = !DILocation(line: 737, column: 1, scope: !15084)
!15104 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12380, file: !12380, line: 160, type: !13960, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15105)
!15105 = !{!15106}
!15106 = !DILocalVariable(name: "thread", arg: 1, scope: !15104, file: !12380, line: 160, type: !2305)
!15107 = !DILocation(line: 0, scope: !15104)
!15108 = !DILocation(line: 162, column: 15, scope: !15104)
!15109 = !DILocation(line: 162, column: 28, scope: !15104)
!15110 = !DILocation(line: 163, column: 1, scope: !15104)
!15111 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2412, file: !2412, line: 786, type: !13960, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15112)
!15112 = !{!15113, !15114, !15116}
!15113 = !DILocalVariable(name: "thread", arg: 1, scope: !15111, file: !2412, line: 786, type: !2305)
!15114 = !DILocalVariable(name: "__i", scope: !15115, file: !2412, line: 788, type: !13994)
!15115 = distinct !DILexicalBlock(scope: !15111, file: !2412, line: 788, column: 2)
!15116 = !DILocalVariable(name: "__key", scope: !15115, file: !2412, line: 788, type: !13994)
!15117 = !DILocation(line: 0, scope: !15111)
!15118 = !DILocation(line: 0, scope: !15115)
!15119 = !DILocation(line: 0, scope: !14002, inlinedAt: !15120)
!15120 = distinct !DILocation(line: 788, column: 2, scope: !15115)
!15121 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !15122)
!15122 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !15120)
!15123 = !DILocation(line: 0, scope: !14011, inlinedAt: !15122)
!15124 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !15120)
!15125 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15120)
!15126 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !15120)
!15127 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !15120)
!15128 = !DILocation(line: 789, column: 3, scope: !15129)
!15129 = distinct !DILexicalBlock(scope: !15130, file: !2412, line: 788, column: 26)
!15130 = distinct !DILexicalBlock(scope: !15115, file: !2412, line: 788, column: 2)
!15131 = !DILocation(line: 0, scope: !14036, inlinedAt: !15132)
!15132 = distinct !DILocation(line: 788, column: 2, scope: !15130)
!15133 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !15132)
!15134 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !15132)
!15135 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !15132)
!15136 = !DILocation(line: 0, scope: !14050, inlinedAt: !15137)
!15137 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !15132)
!15138 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !15137)
!15139 = !DILocation(line: 791, column: 1, scope: !15111)
!15140 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2412, file: !2412, line: 816, type: !15141, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15143)
!15141 = !DISubroutineType(types: !15142)
!15142 = !{!118, !156, !2336, !14890}
!15143 = !{!15144, !15145, !15146, !15147, !15148, !15150}
!15144 = !DILocalVariable(name: "key", arg: 1, scope: !15140, file: !2412, line: 816, type: !156)
!15145 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15140, file: !2412, line: 816, type: !2336)
!15146 = !DILocalVariable(name: "timeout", arg: 3, scope: !15140, file: !2412, line: 816, type: !14890)
!15147 = !DILocalVariable(name: "ret", scope: !15140, file: !2412, line: 828, type: !118)
!15148 = !DILocalVariable(name: "__i", scope: !15149, file: !2412, line: 829, type: !13994)
!15149 = distinct !DILexicalBlock(scope: !15140, file: !2412, line: 829, column: 2)
!15150 = !DILocalVariable(name: "__key", scope: !15149, file: !2412, line: 829, type: !13994)
!15151 = !DILocation(line: 0, scope: !15140)
!15152 = !DILocation(line: 823, column: 14, scope: !15140)
!15153 = !DILocation(line: 823, column: 2, scope: !15140)
!15154 = !DILocation(line: 826, column: 20, scope: !15140)
!15155 = !DILocation(line: 826, column: 18, scope: !15140)
!15156 = !DILocation(line: 828, column: 12, scope: !15140)
!15157 = !DILocation(line: 0, scope: !15149)
!15158 = !DILocation(line: 0, scope: !14002, inlinedAt: !15159)
!15159 = distinct !DILocation(line: 829, column: 2, scope: !15149)
!15160 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !15161)
!15161 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !15159)
!15162 = !DILocation(line: 0, scope: !14011, inlinedAt: !15161)
!15163 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !15159)
!15164 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15159)
!15165 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !15159)
!15166 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !15159)
!15167 = !DILocation(line: 830, column: 7, scope: !15168)
!15168 = distinct !DILexicalBlock(scope: !15169, file: !2412, line: 830, column: 7)
!15169 = distinct !DILexicalBlock(scope: !15170, file: !2412, line: 829, column: 26)
!15170 = distinct !DILexicalBlock(scope: !15149, file: !2412, line: 829, column: 2)
!15171 = !DILocation(line: 830, column: 26, scope: !15168)
!15172 = !DILocation(line: 830, column: 23, scope: !15168)
!15173 = !DILocation(line: 830, column: 7, scope: !15169)
!15174 = !DILocation(line: 831, column: 20, scope: !15175)
!15175 = distinct !DILexicalBlock(scope: !15168, file: !2412, line: 830, column: 36)
!15176 = !DILocation(line: 832, column: 3, scope: !15175)
!15177 = !DILocation(line: 0, scope: !14036, inlinedAt: !15178)
!15178 = distinct !DILocation(line: 829, column: 2, scope: !15170)
!15179 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !15178)
!15180 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !15178)
!15181 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !15178)
!15182 = !DILocation(line: 0, scope: !14050, inlinedAt: !15183)
!15183 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !15178)
!15184 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !15183)
!15185 = !DILocation(line: 834, column: 2, scope: !15140)
!15186 = distinct !DISubprogram(name: "z_pend_curr", scope: !2412, file: !2412, line: 840, type: !15187, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15189)
!15187 = !DISubroutineType(types: !15188)
!15188 = !{!118, !14005, !13994, !2336, !14890}
!15189 = !{!15190, !15191, !15192, !15193}
!15190 = !DILocalVariable(name: "lock", arg: 1, scope: !15186, file: !2412, line: 840, type: !14005)
!15191 = !DILocalVariable(name: "key", arg: 2, scope: !15186, file: !2412, line: 840, type: !13994)
!15192 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15186, file: !2412, line: 841, type: !2336)
!15193 = !DILocalVariable(name: "timeout", arg: 4, scope: !15186, file: !2412, line: 841, type: !14890)
!15194 = !DILocation(line: 0, scope: !15186)
!15195 = !DILocation(line: 844, column: 20, scope: !15186)
!15196 = !DILocation(line: 844, column: 18, scope: !15186)
!15197 = !DILocation(line: 846, column: 2, scope: !15198)
!15198 = distinct !DILexicalBlock(scope: !15199, file: !2412, line: 846, column: 2)
!15199 = distinct !DILexicalBlock(scope: !15186, file: !2412, line: 846, column: 2)
!15200 = !DILocation(line: 846, column: 2, scope: !15199)
!15201 = !DILocation(line: 846, column: 2, scope: !15202)
!15202 = distinct !DILexicalBlock(scope: !15198, file: !2412, line: 846, column: 2)
!15203 = !DILocation(line: 0, scope: !14002, inlinedAt: !15204)
!15204 = distinct !DILocation(line: 856, column: 9, scope: !15186)
!15205 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !15206)
!15206 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !15204)
!15207 = !DILocation(line: 0, scope: !14011, inlinedAt: !15206)
!15208 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !15204)
!15209 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15204)
!15210 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !15204)
!15211 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !15204)
!15212 = !DILocation(line: 857, column: 14, scope: !15186)
!15213 = !DILocation(line: 857, column: 2, scope: !15186)
!15214 = !DILocation(line: 0, scope: !14689, inlinedAt: !15215)
!15215 = distinct !DILocation(line: 858, column: 2, scope: !15186)
!15216 = !DILocation(line: 225, column: 2, scope: !14696, inlinedAt: !15215)
!15217 = !DILocation(line: 225, column: 2, scope: !14697, inlinedAt: !15215)
!15218 = !DILocation(line: 225, column: 2, scope: !14700, inlinedAt: !15215)
!15219 = !DILocation(line: 0, scope: !14680, inlinedAt: !15220)
!15220 = distinct !DILocation(line: 859, column: 9, scope: !15186)
!15221 = !DILocation(line: 0, scope: !14689, inlinedAt: !15222)
!15222 = distinct !DILocation(line: 195, column: 2, scope: !14680, inlinedAt: !15220)
!15223 = !DILocation(line: 225, column: 2, scope: !14696, inlinedAt: !15222)
!15224 = !DILocation(line: 225, column: 2, scope: !14697, inlinedAt: !15222)
!15225 = !DILocation(line: 225, column: 2, scope: !14700, inlinedAt: !15222)
!15226 = !DILocation(line: 196, column: 9, scope: !14680, inlinedAt: !15220)
!15227 = !DILocation(line: 859, column: 2, scope: !15186)
!15228 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2412, file: !2412, line: 862, type: !15229, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15231)
!15229 = !DISubroutineType(types: !15230)
!15230 = !{!2305, !2336}
!15231 = !{!15232, !15233, !15234, !15236}
!15232 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15228, file: !2412, line: 862, type: !2336)
!15233 = !DILocalVariable(name: "thread", scope: !15228, file: !2412, line: 864, type: !2305)
!15234 = !DILocalVariable(name: "__i", scope: !15235, file: !2412, line: 866, type: !13994)
!15235 = distinct !DILexicalBlock(scope: !15228, file: !2412, line: 866, column: 2)
!15236 = !DILocalVariable(name: "__key", scope: !15235, file: !2412, line: 866, type: !13994)
!15237 = !DILocation(line: 0, scope: !15228)
!15238 = !DILocation(line: 0, scope: !15235)
!15239 = !DILocation(line: 0, scope: !14002, inlinedAt: !15240)
!15240 = distinct !DILocation(line: 866, column: 2, scope: !15235)
!15241 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !15242)
!15242 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !15240)
!15243 = !DILocation(line: 0, scope: !14011, inlinedAt: !15242)
!15244 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !15240)
!15245 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15240)
!15246 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !15240)
!15247 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !15240)
!15248 = !DILocation(line: 867, column: 12, scope: !15249)
!15249 = distinct !DILexicalBlock(scope: !15250, file: !2412, line: 866, column: 26)
!15250 = distinct !DILexicalBlock(scope: !15235, file: !2412, line: 866, column: 2)
!15251 = !DILocation(line: 869, column: 14, scope: !15252)
!15252 = distinct !DILexicalBlock(scope: !15249, file: !2412, line: 869, column: 7)
!15253 = !DILocation(line: 869, column: 7, scope: !15249)
!15254 = !DILocation(line: 870, column: 4, scope: !15255)
!15255 = distinct !DILexicalBlock(scope: !15252, file: !2412, line: 869, column: 23)
!15256 = !DILocation(line: 871, column: 3, scope: !15255)
!15257 = !DILocation(line: 0, scope: !14036, inlinedAt: !15258)
!15258 = distinct !DILocation(line: 866, column: 2, scope: !15250)
!15259 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !15258)
!15260 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !15258)
!15261 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !15258)
!15262 = !DILocation(line: 0, scope: !14050, inlinedAt: !15263)
!15263 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !15258)
!15264 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !15263)
!15265 = !DILocation(line: 874, column: 2, scope: !15228)
!15266 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2412, file: !2412, line: 877, type: !15229, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15267)
!15267 = !{!15268, !15269, !15270, !15272}
!15268 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15266, file: !2412, line: 877, type: !2336)
!15269 = !DILocalVariable(name: "thread", scope: !15266, file: !2412, line: 879, type: !2305)
!15270 = !DILocalVariable(name: "__i", scope: !15271, file: !2412, line: 881, type: !13994)
!15271 = distinct !DILexicalBlock(scope: !15266, file: !2412, line: 881, column: 2)
!15272 = !DILocalVariable(name: "__key", scope: !15271, file: !2412, line: 881, type: !13994)
!15273 = !DILocation(line: 0, scope: !15266)
!15274 = !DILocation(line: 0, scope: !15271)
!15275 = !DILocation(line: 0, scope: !14002, inlinedAt: !15276)
!15276 = distinct !DILocation(line: 881, column: 2, scope: !15271)
!15277 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !15278)
!15278 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !15276)
!15279 = !DILocation(line: 0, scope: !14011, inlinedAt: !15278)
!15280 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !15276)
!15281 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15276)
!15282 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !15276)
!15283 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !15276)
!15284 = !DILocation(line: 882, column: 12, scope: !15285)
!15285 = distinct !DILexicalBlock(scope: !15286, file: !2412, line: 881, column: 26)
!15286 = distinct !DILexicalBlock(scope: !15271, file: !2412, line: 881, column: 2)
!15287 = !DILocation(line: 884, column: 14, scope: !15288)
!15288 = distinct !DILexicalBlock(scope: !15285, file: !2412, line: 884, column: 7)
!15289 = !DILocation(line: 884, column: 7, scope: !15285)
!15290 = !DILocation(line: 885, column: 4, scope: !15291)
!15291 = distinct !DILexicalBlock(scope: !15288, file: !2412, line: 884, column: 23)
!15292 = !DILocation(line: 886, column: 10, scope: !15291)
!15293 = !DILocation(line: 887, column: 3, scope: !15291)
!15294 = !DILocation(line: 0, scope: !14036, inlinedAt: !15295)
!15295 = distinct !DILocation(line: 881, column: 2, scope: !15286)
!15296 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !15295)
!15297 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !15295)
!15298 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !15295)
!15299 = !DILocation(line: 0, scope: !14050, inlinedAt: !15300)
!15300 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !15295)
!15301 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !15300)
!15302 = !DILocation(line: 890, column: 2, scope: !15266)
!15303 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2412, file: !2412, line: 893, type: !13960, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15304)
!15304 = !{!15305}
!15305 = !DILocalVariable(name: "thread", arg: 1, scope: !15303, file: !2412, line: 893, type: !2305)
!15306 = !DILocation(line: 0, scope: !15303)
!15307 = !DILocation(line: 0, scope: !15111, inlinedAt: !15308)
!15308 = distinct !DILocation(line: 895, column: 2, scope: !15303)
!15309 = !DILocation(line: 0, scope: !15115, inlinedAt: !15308)
!15310 = !DILocation(line: 0, scope: !14002, inlinedAt: !15311)
!15311 = distinct !DILocation(line: 788, column: 2, scope: !15115, inlinedAt: !15308)
!15312 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !15313)
!15313 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !15311)
!15314 = !DILocation(line: 0, scope: !14011, inlinedAt: !15313)
!15315 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !15311)
!15316 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15311)
!15317 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !15311)
!15318 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !15311)
!15319 = !DILocation(line: 789, column: 3, scope: !15129, inlinedAt: !15308)
!15320 = !DILocation(line: 0, scope: !14036, inlinedAt: !15321)
!15321 = distinct !DILocation(line: 788, column: 2, scope: !15130, inlinedAt: !15308)
!15322 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !15321)
!15323 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !15321)
!15324 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !15321)
!15325 = !DILocation(line: 0, scope: !14050, inlinedAt: !15326)
!15326 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !15321)
!15327 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !15326)
!15328 = !DILocation(line: 896, column: 8, scope: !15303)
!15329 = !DILocation(line: 897, column: 1, scope: !15303)
!15330 = distinct !DISubprogram(name: "z_set_prio", scope: !2412, file: !2412, line: 902, type: !14363, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15331)
!15331 = !{!15332, !15333, !15334, !15335, !15337}
!15332 = !DILocalVariable(name: "thread", arg: 1, scope: !15330, file: !2412, line: 902, type: !2305)
!15333 = !DILocalVariable(name: "prio", arg: 2, scope: !15330, file: !2412, line: 902, type: !118)
!15334 = !DILocalVariable(name: "need_sched", scope: !15330, file: !2412, line: 904, type: !146)
!15335 = !DILocalVariable(name: "__i", scope: !15336, file: !2412, line: 906, type: !13994)
!15336 = distinct !DILexicalBlock(scope: !15330, file: !2412, line: 906, column: 2)
!15337 = !DILocalVariable(name: "__key", scope: !15336, file: !2412, line: 906, type: !13994)
!15338 = !DILocation(line: 0, scope: !15330)
!15339 = !DILocation(line: 0, scope: !15336)
!15340 = !DILocation(line: 0, scope: !14002, inlinedAt: !15341)
!15341 = distinct !DILocation(line: 906, column: 2, scope: !15336)
!15342 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !15343)
!15343 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !15341)
!15344 = !DILocation(line: 0, scope: !14011, inlinedAt: !15343)
!15345 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !15341)
!15346 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15341)
!15347 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !15341)
!15348 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !15341)
!15349 = !DILocation(line: 907, column: 16, scope: !15350)
!15350 = distinct !DILexicalBlock(scope: !15351, file: !2412, line: 906, column: 26)
!15351 = distinct !DILexicalBlock(scope: !15336, file: !2412, line: 906, column: 2)
!15352 = !DILocation(line: 909, column: 7, scope: !15350)
!15353 = !DILocation(line: 0, scope: !14194, inlinedAt: !15354)
!15354 = distinct !DILocation(line: 912, column: 5, scope: !15355)
!15355 = distinct !DILexicalBlock(scope: !15356, file: !2412, line: 911, column: 63)
!15356 = distinct !DILexicalBlock(scope: !15357, file: !2412, line: 911, column: 8)
!15357 = distinct !DILexicalBlock(scope: !15358, file: !2412, line: 909, column: 19)
!15358 = distinct !DILexicalBlock(scope: !15350, file: !2412, line: 909, column: 7)
!15359 = !DILocation(line: 266, column: 28, scope: !14194, inlinedAt: !15354)
!15360 = !DILocation(line: 0, scope: !14202, inlinedAt: !15361)
!15361 = distinct !DILocation(line: 268, column: 3, scope: !14206, inlinedAt: !15354)
!15362 = !DILocation(line: 234, column: 2, scope: !14202, inlinedAt: !15361)
!15363 = !DILocation(line: 913, column: 23, scope: !15355)
!15364 = !DILocation(line: 0, scope: !14211, inlinedAt: !15365)
!15365 = distinct !DILocation(line: 914, column: 5, scope: !15355)
!15366 = !DILocation(line: 252, column: 28, scope: !14211, inlinedAt: !15365)
!15367 = !DILocation(line: 0, scope: !14218, inlinedAt: !15368)
!15368 = distinct !DILocation(line: 254, column: 3, scope: !14222, inlinedAt: !15365)
!15369 = !DILocation(line: 0, scope: !14225, inlinedAt: !15370)
!15370 = distinct !DILocation(line: 229, column: 2, scope: !14218, inlinedAt: !15368)
!15371 = !DILocation(line: 186, column: 2, scope: !14235, inlinedAt: !15370)
!15372 = !DILocation(line: 186, column: 2, scope: !14236, inlinedAt: !15370)
!15373 = !DILocation(line: 186, column: 2, scope: !14239, inlinedAt: !15370)
!15374 = !DILocation(line: 188, column: 2, scope: !14241, inlinedAt: !15370)
!15375 = !DILocation(line: 188, column: 2, scope: !14243, inlinedAt: !15370)
!15376 = !DILocation(line: 0, scope: !14241, inlinedAt: !15370)
!15377 = !DILocation(line: 189, column: 7, scope: !14246, inlinedAt: !15370)
!15378 = !DILocation(line: 189, column: 35, scope: !14246, inlinedAt: !15370)
!15379 = !DILocation(line: 189, column: 7, scope: !14247, inlinedAt: !15370)
!15380 = !DILocation(line: 190, column: 4, scope: !14251, inlinedAt: !15370)
!15381 = !DILocation(line: 192, column: 4, scope: !14251, inlinedAt: !15370)
!15382 = distinct !{!15382, !15374, !15383}
!15383 = !DILocation(line: 194, column: 2, scope: !14241, inlinedAt: !15370)
!15384 = !DILocation(line: 196, column: 2, scope: !14225, inlinedAt: !15370)
!15385 = !DILocation(line: 197, column: 1, scope: !14225, inlinedAt: !15370)
!15386 = !DILocation(line: 918, column: 4, scope: !15357)
!15387 = !DILocation(line: 919, column: 3, scope: !15357)
!15388 = !DILocation(line: 920, column: 22, scope: !15389)
!15389 = distinct !DILexicalBlock(scope: !15358, file: !2412, line: 919, column: 10)
!15390 = !DILocation(line: 0, scope: !14036, inlinedAt: !15391)
!15391 = distinct !DILocation(line: 906, column: 2, scope: !15351)
!15392 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !15391)
!15393 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !15391)
!15394 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !15391)
!15395 = !DILocation(line: 0, scope: !14050, inlinedAt: !15396)
!15396 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !15391)
!15397 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !15396)
!15398 = !DILocation(line: 926, column: 2, scope: !15330)
!15399 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2412, file: !2412, line: 929, type: !15400, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15402)
!15400 = !DISubroutineType(types: !15401)
!15401 = !{null, !2305, !118}
!15402 = !{!15403, !15404, !15405}
!15403 = !DILocalVariable(name: "thread", arg: 1, scope: !15399, file: !2412, line: 929, type: !2305)
!15404 = !DILocalVariable(name: "prio", arg: 2, scope: !15399, file: !2412, line: 929, type: !118)
!15405 = !DILocalVariable(name: "need_sched", scope: !15399, file: !2412, line: 931, type: !146)
!15406 = !DILocation(line: 0, scope: !15399)
!15407 = !DILocation(line: 931, column: 20, scope: !15399)
!15408 = !DILocation(line: 935, column: 17, scope: !15409)
!15409 = distinct !DILexicalBlock(scope: !15399, file: !2412, line: 935, column: 6)
!15410 = !DILocation(line: 935, column: 20, scope: !15409)
!15411 = !DILocation(line: 935, column: 35, scope: !15409)
!15412 = !DILocation(line: 935, column: 48, scope: !15409)
!15413 = !DILocation(line: 935, column: 6, scope: !15399)
!15414 = !DILocation(line: 936, column: 3, scope: !15415)
!15415 = distinct !DILexicalBlock(scope: !15409, file: !2412, line: 935, column: 55)
!15416 = !DILocation(line: 937, column: 2, scope: !15415)
!15417 = !DILocation(line: 938, column: 1, scope: !15399)
!15418 = distinct !DISubprogram(name: "k_sched_lock", scope: !2412, file: !2412, line: 987, type: !365, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15419)
!15419 = !{!15420, !15422}
!15420 = !DILocalVariable(name: "__i", scope: !15421, file: !2412, line: 989, type: !13994)
!15421 = distinct !DILexicalBlock(scope: !15418, file: !2412, line: 989, column: 2)
!15422 = !DILocalVariable(name: "__key", scope: !15421, file: !2412, line: 989, type: !13994)
!15423 = !DILocation(line: 0, scope: !15421)
!15424 = !DILocation(line: 0, scope: !14002, inlinedAt: !15425)
!15425 = distinct !DILocation(line: 989, column: 2, scope: !15421)
!15426 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !15427)
!15427 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !15425)
!15428 = !DILocation(line: 0, scope: !14011, inlinedAt: !15427)
!15429 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !15425)
!15430 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15425)
!15431 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !15425)
!15432 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !15425)
!15433 = !DILocation(line: 992, column: 3, scope: !15434)
!15434 = distinct !DILexicalBlock(scope: !15435, file: !2412, line: 989, column: 26)
!15435 = distinct !DILexicalBlock(scope: !15421, file: !2412, line: 989, column: 2)
!15436 = !DILocation(line: 0, scope: !14036, inlinedAt: !15437)
!15437 = distinct !DILocation(line: 989, column: 2, scope: !15435)
!15438 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !15437)
!15439 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !15437)
!15440 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !15437)
!15441 = !DILocation(line: 0, scope: !14050, inlinedAt: !15442)
!15442 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !15437)
!15443 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !15442)
!15444 = !DILocation(line: 994, column: 1, scope: !15418)
!15445 = distinct !DISubprogram(name: "z_sched_lock", scope: !12380, file: !12380, line: 251, type: !365, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !2123)
!15446 = !DILocation(line: 1031, column: 3, scope: !14729, inlinedAt: !15447)
!15447 = distinct !DILocation(line: 48, column: 10, scope: !14733, inlinedAt: !15448)
!15448 = distinct !DILocation(line: 253, column: 2, scope: !15449)
!15449 = distinct !DILexicalBlock(scope: !15450, file: !12380, line: 253, column: 2)
!15450 = distinct !DILexicalBlock(scope: !15445, file: !12380, line: 253, column: 2)
!15451 = !DILocation(line: 0, scope: !14729, inlinedAt: !15447)
!15452 = !DILocation(line: 48, column: 9, scope: !14733, inlinedAt: !15448)
!15453 = !DILocation(line: 253, column: 2, scope: !15450)
!15454 = !DILocation(line: 253, column: 2, scope: !15455)
!15455 = distinct !DILexicalBlock(scope: !15449, file: !12380, line: 253, column: 2)
!15456 = !DILocation(line: 254, column: 2, scope: !15457)
!15457 = distinct !DILexicalBlock(scope: !15458, file: !12380, line: 254, column: 2)
!15458 = distinct !DILexicalBlock(scope: !15445, file: !12380, line: 254, column: 2)
!15459 = !DILocation(line: 254, column: 2, scope: !15458)
!15460 = !DILocation(line: 254, column: 2, scope: !15461)
!15461 = distinct !DILexicalBlock(scope: !15457, file: !12380, line: 254, column: 2)
!15462 = !DILocation(line: 256, column: 2, scope: !15445)
!15463 = !DILocation(line: 258, column: 2, scope: !15464)
!15464 = distinct !DILexicalBlock(scope: !15445, file: !12380, line: 258, column: 2)
!15465 = !{i64 2154875188}
!15466 = !DILocation(line: 259, column: 1, scope: !15445)
!15467 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2412, file: !2412, line: 996, type: !365, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15468)
!15468 = !{!15469, !15471}
!15469 = !DILocalVariable(name: "__i", scope: !15470, file: !2412, line: 998, type: !13994)
!15470 = distinct !DILexicalBlock(scope: !15467, file: !2412, line: 998, column: 2)
!15471 = !DILocalVariable(name: "__key", scope: !15470, file: !2412, line: 998, type: !13994)
!15472 = !DILocation(line: 0, scope: !15470)
!15473 = !DILocation(line: 0, scope: !14002, inlinedAt: !15474)
!15474 = distinct !DILocation(line: 998, column: 2, scope: !15470)
!15475 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !15476)
!15476 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !15474)
!15477 = !DILocation(line: 0, scope: !14011, inlinedAt: !15476)
!15478 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !15474)
!15479 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15474)
!15480 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !15474)
!15481 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !15474)
!15482 = !DILocation(line: 999, column: 3, scope: !15483)
!15483 = distinct !DILexicalBlock(scope: !15484, file: !2412, line: 999, column: 3)
!15484 = distinct !DILexicalBlock(scope: !15485, file: !2412, line: 999, column: 3)
!15485 = distinct !DILexicalBlock(scope: !15486, file: !2412, line: 998, column: 26)
!15486 = distinct !DILexicalBlock(scope: !15470, file: !2412, line: 998, column: 2)
!15487 = !DILocation(line: 999, column: 3, scope: !15484)
!15488 = !DILocation(line: 999, column: 3, scope: !15489)
!15489 = distinct !DILexicalBlock(scope: !15483, file: !2412, line: 999, column: 3)
!15490 = !DILocation(line: 1031, column: 3, scope: !14729, inlinedAt: !15491)
!15491 = distinct !DILocation(line: 48, column: 10, scope: !14733, inlinedAt: !15492)
!15492 = distinct !DILocation(line: 1000, column: 3, scope: !15493)
!15493 = distinct !DILexicalBlock(scope: !15494, file: !2412, line: 1000, column: 3)
!15494 = distinct !DILexicalBlock(scope: !15485, file: !2412, line: 1000, column: 3)
!15495 = !DILocation(line: 0, scope: !14729, inlinedAt: !15491)
!15496 = !DILocation(line: 48, column: 9, scope: !14733, inlinedAt: !15492)
!15497 = !DILocation(line: 1000, column: 3, scope: !15494)
!15498 = !DILocation(line: 1000, column: 3, scope: !15499)
!15499 = distinct !DILexicalBlock(scope: !15493, file: !2412, line: 1000, column: 3)
!15500 = !DILocation(line: 1002, column: 5, scope: !15485)
!15501 = !DILocation(line: 1002, column: 20, scope: !15485)
!15502 = !DILocation(line: 1002, column: 3, scope: !15485)
!15503 = !DILocation(line: 1003, column: 3, scope: !15485)
!15504 = !DILocation(line: 0, scope: !14036, inlinedAt: !15505)
!15505 = distinct !DILocation(line: 998, column: 2, scope: !15486)
!15506 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !15505)
!15507 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !15505)
!15508 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !15505)
!15509 = !DILocation(line: 0, scope: !14050, inlinedAt: !15510)
!15510 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !15505)
!15511 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !15510)
!15512 = !DILocation(line: 1011, column: 2, scope: !15467)
!15513 = !DILocation(line: 1012, column: 1, scope: !15467)
!15514 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2412, file: !2412, line: 1014, type: !14351, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !2123)
!15515 = !DILocation(line: 1028, column: 25, scope: !15514)
!15516 = !DILocation(line: 1028, column: 2, scope: !15514)
!15517 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2412, file: !2412, line: 1155, type: !15518, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15520)
!15518 = !DISubroutineType(types: !15519)
!15519 = !{!146, !2334, !2334}
!15520 = !{!15521, !15522, !15523, !15524, !15525}
!15521 = !DILocalVariable(name: "a", arg: 1, scope: !15517, file: !2412, line: 1155, type: !2334)
!15522 = !DILocalVariable(name: "b", arg: 2, scope: !15517, file: !2412, line: 1155, type: !2334)
!15523 = !DILocalVariable(name: "thread_a", scope: !15517, file: !2412, line: 1157, type: !2305)
!15524 = !DILocalVariable(name: "thread_b", scope: !15517, file: !2412, line: 1157, type: !2305)
!15525 = !DILocalVariable(name: "cmp", scope: !15517, file: !2412, line: 1158, type: !362)
!15526 = !DILocation(line: 0, scope: !15517)
!15527 = !DILocation(line: 1160, column: 13, scope: !15517)
!15528 = !DILocation(line: 1161, column: 13, scope: !15517)
!15529 = !DILocation(line: 1163, column: 8, scope: !15517)
!15530 = !DILocation(line: 1165, column: 10, scope: !15531)
!15531 = distinct !DILexicalBlock(scope: !15517, file: !2412, line: 1165, column: 6)
!15532 = !DILocation(line: 1165, column: 6, scope: !15517)
!15533 = !DILocation(line: 1167, column: 17, scope: !15534)
!15534 = distinct !DILexicalBlock(scope: !15531, file: !2412, line: 1167, column: 13)
!15535 = !DILocation(line: 1167, column: 13, scope: !15531)
!15536 = !DILocation(line: 1170, column: 25, scope: !15537)
!15537 = distinct !DILexicalBlock(scope: !15534, file: !2412, line: 1169, column: 9)
!15538 = !DILocation(line: 1170, column: 52, scope: !15537)
!15539 = !DILocation(line: 1170, column: 35, scope: !15537)
!15540 = !DILocation(line: 1170, column: 3, scope: !15537)
!15541 = !DILocation(line: 0, scope: !15531)
!15542 = !DILocation(line: 1173, column: 1, scope: !15517)
!15543 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2412, file: !2412, line: 1175, type: !15544, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15559)
!15544 = !DISubroutineType(types: !15545)
!15545 = !{null, !15546, !2305}
!15546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15547, size: 32)
!15547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15548, line: 37, size: 128, elements: !15549)
!15548 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15549 = !{!15550, !15558}
!15550 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15547, file: !15548, line: 38, baseType: !15551, size: 96)
!15551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !251, line: 83, size: 96, elements: !15552)
!15552 = !{!15553, !15554, !15557}
!15553 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15551, file: !251, line: 84, baseType: !2334, size: 32)
!15554 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15551, file: !251, line: 85, baseType: !15555, size: 32, offset: 32)
!15555 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !251, line: 81, baseType: !15556)
!15556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15518, size: 32)
!15557 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15551, file: !251, line: 86, baseType: !118, size: 32, offset: 64)
!15558 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15547, file: !15548, line: 39, baseType: !118, size: 32, offset: 96)
!15559 = !{!15560, !15561, !15562, !15563, !15572}
!15560 = !DILocalVariable(name: "pq", arg: 1, scope: !15543, file: !2412, line: 1175, type: !15546)
!15561 = !DILocalVariable(name: "thread", arg: 2, scope: !15543, file: !2412, line: 1175, type: !2305)
!15562 = !DILocalVariable(name: "t", scope: !15543, file: !2412, line: 1177, type: !2305)
!15563 = !DILocalVariable(name: "__f", scope: !15564, file: !2412, line: 1190, type: !15567)
!15564 = distinct !DILexicalBlock(scope: !15565, file: !2412, line: 1190, column: 3)
!15565 = distinct !DILexicalBlock(scope: !15566, file: !2412, line: 1189, column: 27)
!15566 = distinct !DILexicalBlock(scope: !15543, file: !2412, line: 1189, column: 6)
!15567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !251, line: 155, size: 96, elements: !15568)
!15568 = !{!15569, !15570, !15571}
!15569 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15567, file: !251, line: 156, baseType: !2407, size: 32)
!15570 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15567, file: !251, line: 157, baseType: !1955, size: 32, offset: 32)
!15571 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15567, file: !251, line: 158, baseType: !362, size: 32, offset: 64)
!15572 = !DILocalVariable(name: "n", scope: !15573, file: !2412, line: 1190, type: !2334)
!15573 = distinct !DILexicalBlock(scope: !15574, file: !2412, line: 1190, column: 3)
!15574 = distinct !DILexicalBlock(scope: !15564, file: !2412, line: 1190, column: 3)
!15575 = !DILocation(line: 0, scope: !15543)
!15576 = !DILocation(line: 1179, column: 2, scope: !15577)
!15577 = distinct !DILexicalBlock(scope: !15578, file: !2412, line: 1179, column: 2)
!15578 = distinct !DILexicalBlock(scope: !15543, file: !2412, line: 1179, column: 2)
!15579 = !DILocation(line: 1179, column: 2, scope: !15578)
!15580 = !DILocation(line: 1179, column: 2, scope: !15581)
!15581 = distinct !DILexicalBlock(scope: !15577, file: !2412, line: 1179, column: 2)
!15582 = !DILocation(line: 1181, column: 31, scope: !15543)
!15583 = !DILocation(line: 1181, column: 45, scope: !15543)
!15584 = !DILocation(line: 1181, column: 15, scope: !15543)
!15585 = !DILocation(line: 1181, column: 25, scope: !15543)
!15586 = !DILocation(line: 1189, column: 11, scope: !15566)
!15587 = !DILocation(line: 1189, column: 7, scope: !15566)
!15588 = !DILocation(line: 1189, column: 6, scope: !15543)
!15589 = !DILocation(line: 1190, column: 3, scope: !15564)
!15590 = !DILocation(line: 1190, column: 3, scope: !15573)
!15591 = !DILocation(line: 0, scope: !15573)
!15592 = !DILocation(line: 1190, column: 3, scope: !15574)
!15593 = !DILocation(line: 1193, column: 2, scope: !15565)
!15594 = !DILocation(line: 1191, column: 42, scope: !15595)
!15595 = distinct !DILexicalBlock(scope: !15574, file: !2412, line: 1190, column: 54)
!15596 = !DILocation(line: 1191, column: 12, scope: !15595)
!15597 = !DILocation(line: 1191, column: 22, scope: !15595)
!15598 = distinct !{!15598, !15589, !15599}
!15599 = !DILocation(line: 1192, column: 3, scope: !15564)
!15600 = !DILocation(line: 1195, column: 17, scope: !15543)
!15601 = !DILocation(line: 1195, column: 37, scope: !15543)
!15602 = !DILocation(line: 1195, column: 2, scope: !15543)
!15603 = !DILocation(line: 1196, column: 1, scope: !15543)
!15604 = !DISubprogram(name: "z_rb_foreach_next", scope: !251, file: !251, line: 176, type: !15605, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2123)
!15605 = !DISubroutineType(types: !15606)
!15606 = !{!2334, !15607, !15608}
!15607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15551, size: 32)
!15608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15567, size: 32)
!15609 = !DISubprogram(name: "rb_insert", scope: !251, file: !251, line: 105, type: !15610, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2123)
!15610 = !DISubroutineType(types: !15611)
!15611 = !{null, !15607, !2334}
!15612 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2412, file: !2412, line: 1198, type: !15544, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15613)
!15613 = !{!15614, !15615}
!15614 = !DILocalVariable(name: "pq", arg: 1, scope: !15612, file: !2412, line: 1198, type: !15546)
!15615 = !DILocalVariable(name: "thread", arg: 2, scope: !15612, file: !2412, line: 1198, type: !2305)
!15616 = !DILocation(line: 0, scope: !15612)
!15617 = !DILocation(line: 1200, column: 2, scope: !15618)
!15618 = distinct !DILexicalBlock(scope: !15619, file: !2412, line: 1200, column: 2)
!15619 = distinct !DILexicalBlock(scope: !15612, file: !2412, line: 1200, column: 2)
!15620 = !DILocation(line: 1200, column: 2, scope: !15619)
!15621 = !DILocation(line: 1200, column: 2, scope: !15622)
!15622 = distinct !DILexicalBlock(scope: !15618, file: !2412, line: 1200, column: 2)
!15623 = !DILocation(line: 1202, column: 17, scope: !15612)
!15624 = !DILocation(line: 1202, column: 37, scope: !15612)
!15625 = !DILocation(line: 1202, column: 2, scope: !15612)
!15626 = !DILocation(line: 1204, column: 16, scope: !15627)
!15627 = distinct !DILexicalBlock(scope: !15612, file: !2412, line: 1204, column: 6)
!15628 = !DILocation(line: 1204, column: 7, scope: !15627)
!15629 = !DILocation(line: 1204, column: 6, scope: !15612)
!15630 = !DILocation(line: 1205, column: 7, scope: !15631)
!15631 = distinct !DILexicalBlock(scope: !15627, file: !2412, line: 1204, column: 22)
!15632 = !DILocation(line: 1205, column: 22, scope: !15631)
!15633 = !DILocation(line: 1206, column: 2, scope: !15631)
!15634 = !DILocation(line: 1207, column: 1, scope: !15612)
!15635 = !DISubprogram(name: "rb_remove", scope: !251, file: !251, line: 110, type: !15610, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2123)
!15636 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2412, file: !2412, line: 1209, type: !15637, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15639)
!15637 = !DISubroutineType(types: !15638)
!15638 = !{!2305, !15546}
!15639 = !{!15640, !15641, !15642}
!15640 = !DILocalVariable(name: "pq", arg: 1, scope: !15636, file: !2412, line: 1209, type: !15546)
!15641 = !DILocalVariable(name: "thread", scope: !15636, file: !2412, line: 1211, type: !2305)
!15642 = !DILocalVariable(name: "n", scope: !15636, file: !2412, line: 1212, type: !2334)
!15643 = !DILocation(line: 0, scope: !15636)
!15644 = !DILocation(line: 1212, column: 37, scope: !15636)
!15645 = !DILocation(line: 1212, column: 21, scope: !15636)
!15646 = !DILocation(line: 1217, column: 2, scope: !15636)
!15647 = distinct !DISubprogram(name: "rb_get_min", scope: !251, file: !251, line: 115, type: !15648, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15650)
!15648 = !DISubroutineType(types: !15649)
!15649 = !{!2334, !15607}
!15650 = !{!15651}
!15651 = !DILocalVariable(name: "tree", arg: 1, scope: !15647, file: !251, line: 115, type: !15607)
!15652 = !DILocation(line: 0, scope: !15647)
!15653 = !DILocation(line: 117, column: 9, scope: !15647)
!15654 = !DILocation(line: 117, column: 2, scope: !15647)
!15655 = !DISubprogram(name: "z_rb_get_minmax", scope: !251, file: !251, line: 100, type: !15656, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2123)
!15656 = !DISubroutineType(types: !15657)
!15657 = !{!2334, !15607, !143}
!15658 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2412, file: !2412, line: 1246, type: !15659, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15669)
!15659 = !DISubroutineType(types: !15660)
!15660 = !{!2305, !15661}
!15661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15662, size: 32)
!15662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15548, line: 53, size: 2080, elements: !15663)
!15663 = !{!15664, !15668}
!15664 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15662, file: !15548, line: 54, baseType: !15665, size: 2048)
!15665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2341, size: 2048, elements: !15666)
!15666 = !{!15667}
!15667 = !DISubrange(count: 32)
!15668 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15662, file: !15548, line: 55, baseType: !32, size: 32, offset: 2048)
!15669 = !{!15670, !15671, !15672, !15673}
!15670 = !DILocalVariable(name: "pq", arg: 1, scope: !15658, file: !2412, line: 1246, type: !15661)
!15671 = !DILocalVariable(name: "thread", scope: !15658, file: !2412, line: 1252, type: !2305)
!15672 = !DILocalVariable(name: "l", scope: !15658, file: !2412, line: 1253, type: !14228)
!15673 = !DILocalVariable(name: "n", scope: !15658, file: !2412, line: 1254, type: !2408)
!15674 = !DILocation(line: 0, scope: !15658)
!15675 = !DILocation(line: 1248, column: 11, scope: !15676)
!15676 = distinct !DILexicalBlock(scope: !15658, file: !2412, line: 1248, column: 6)
!15677 = !DILocation(line: 1248, column: 7, scope: !15676)
!15678 = !DILocation(line: 1248, column: 6, scope: !15658)
!15679 = !DILocation(line: 1253, column: 31, scope: !15658)
!15680 = !DILocation(line: 1253, column: 20, scope: !15658)
!15681 = !DILocation(line: 1254, column: 19, scope: !15658)
!15682 = !DILocation(line: 1260, column: 1, scope: !15658)
!15683 = distinct !DISubprogram(name: "z_unpend_all", scope: !2412, file: !2412, line: 1262, type: !15684, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15686)
!15684 = !DISubroutineType(types: !15685)
!15685 = !{!118, !2336}
!15686 = !{!15687, !15688, !15689}
!15687 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15683, file: !2412, line: 1262, type: !2336)
!15688 = !DILocalVariable(name: "need_sched", scope: !15683, file: !2412, line: 1264, type: !118)
!15689 = !DILocalVariable(name: "thread", scope: !15683, file: !2412, line: 1265, type: !2305)
!15690 = !DILocation(line: 0, scope: !15683)
!15691 = !DILocation(line: 1267, column: 19, scope: !15683)
!15692 = !DILocation(line: 1267, column: 41, scope: !15683)
!15693 = !DILocation(line: 1267, column: 2, scope: !15683)
!15694 = !DILocation(line: 1268, column: 3, scope: !15695)
!15695 = distinct !DILexicalBlock(scope: !15683, file: !2412, line: 1267, column: 50)
!15696 = !DILocation(line: 1269, column: 3, scope: !15695)
!15697 = distinct !{!15697, !15693, !15698}
!15698 = !DILocation(line: 1271, column: 2, scope: !15683)
!15699 = !DILocation(line: 1273, column: 2, scope: !15683)
!15700 = distinct !DISubprogram(name: "z_waitq_head", scope: !12719, file: !12719, line: 52, type: !15229, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15701)
!15701 = !{!15702}
!15702 = !DILocalVariable(name: "w", arg: 1, scope: !15700, file: !12719, line: 52, type: !2336)
!15703 = !DILocation(line: 0, scope: !15700)
!15704 = !DILocation(line: 54, column: 52, scope: !15700)
!15705 = !DILocation(line: 54, column: 28, scope: !15700)
!15706 = !DILocation(line: 54, column: 9, scope: !15700)
!15707 = !DILocation(line: 54, column: 2, scope: !15700)
!15708 = distinct !DISubprogram(name: "init_ready_q", scope: !2412, file: !2412, line: 1276, type: !15709, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15716)
!15709 = !DISubroutineType(types: !15710)
!15710 = !{null, !15711}
!15711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15712, size: 32)
!15712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !261, line: 83, size: 96, elements: !15713)
!15713 = !{!15714, !15715}
!15714 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15712, file: !261, line: 86, baseType: !2305, size: 32)
!15715 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15712, file: !261, line: 90, baseType: !2341, size: 64, offset: 32)
!15716 = !{!15717}
!15717 = !DILocalVariable(name: "rq", arg: 1, scope: !15708, file: !2412, line: 1276, type: !15711)
!15718 = !DILocation(line: 0, scope: !15708)
!15719 = !DILocation(line: 1289, column: 22, scope: !15708)
!15720 = !DILocation(line: 1289, column: 2, scope: !15708)
!15721 = !DILocation(line: 1291, column: 1, scope: !15708)
!15722 = distinct !DISubprogram(name: "sys_dlist_init", scope: !235, file: !235, line: 197, type: !15723, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15725)
!15723 = !DISubroutineType(types: !15724)
!15724 = !{null, !14228}
!15725 = !{!15726}
!15726 = !DILocalVariable(name: "list", arg: 1, scope: !15722, file: !235, line: 197, type: !14228)
!15727 = !DILocation(line: 0, scope: !15722)
!15728 = !DILocation(line: 199, column: 8, scope: !15722)
!15729 = !DILocation(line: 199, column: 13, scope: !15722)
!15730 = !DILocation(line: 200, column: 8, scope: !15722)
!15731 = !DILocation(line: 200, column: 13, scope: !15722)
!15732 = !DILocation(line: 201, column: 1, scope: !15722)
!15733 = distinct !DISubprogram(name: "z_sched_init", scope: !2412, file: !2412, line: 1293, type: !365, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !2123)
!15734 = !DILocation(line: 1302, column: 2, scope: !15733)
!15735 = !DILocation(line: 1306, column: 2, scope: !15733)
!15736 = !DILocation(line: 1309, column: 1, scope: !15733)
!15737 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2412, file: !2412, line: 1311, type: !15738, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15741)
!15738 = !DISubroutineType(types: !15739)
!15739 = !{!118, !15740}
!15740 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !2305)
!15741 = !{!15742}
!15742 = !DILocalVariable(name: "thread", arg: 1, scope: !15737, file: !2412, line: 1311, type: !15740)
!15743 = !DILocation(line: 0, scope: !15737)
!15744 = !DILocation(line: 1313, column: 22, scope: !15737)
!15745 = !DILocation(line: 1313, column: 9, scope: !15737)
!15746 = !DILocation(line: 1313, column: 2, scope: !15737)
!15747 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2412, file: !2412, line: 1325, type: !15748, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15750)
!15748 = !DISubroutineType(types: !15749)
!15749 = !{null, !15740, !118}
!15750 = !{!15751, !15752, !15753}
!15751 = !DILocalVariable(name: "thread", arg: 1, scope: !15747, file: !2412, line: 1325, type: !15740)
!15752 = !DILocalVariable(name: "prio", arg: 2, scope: !15747, file: !2412, line: 1325, type: !118)
!15753 = !DILocalVariable(name: "th", scope: !15747, file: !2412, line: 1334, type: !2305)
!15754 = !DILocation(line: 0, scope: !15747)
!15755 = !DILocation(line: 1331, column: 2, scope: !15756)
!15756 = distinct !DILexicalBlock(scope: !15757, file: !2412, line: 1331, column: 2)
!15757 = distinct !DILexicalBlock(scope: !15758, file: !2412, line: 1331, column: 2)
!15758 = distinct !DILexicalBlock(scope: !15747, file: !2412, line: 1331, column: 2)
!15759 = !DILocation(line: 1331, column: 2, scope: !15760)
!15760 = distinct !DILexicalBlock(scope: !15756, file: !2412, line: 1331, column: 2)
!15761 = !DILocation(line: 1031, column: 3, scope: !14729, inlinedAt: !15762)
!15762 = distinct !DILocation(line: 48, column: 10, scope: !14733, inlinedAt: !15763)
!15763 = distinct !DILocation(line: 1332, column: 2, scope: !15764)
!15764 = distinct !DILexicalBlock(scope: !15765, file: !2412, line: 1332, column: 2)
!15765 = distinct !DILexicalBlock(scope: !15747, file: !2412, line: 1332, column: 2)
!15766 = !DILocation(line: 0, scope: !14729, inlinedAt: !15762)
!15767 = !DILocation(line: 48, column: 9, scope: !14733, inlinedAt: !15763)
!15768 = !DILocation(line: 1332, column: 2, scope: !15765)
!15769 = !DILocation(line: 1332, column: 2, scope: !15770)
!15770 = distinct !DILexicalBlock(scope: !15764, file: !2412, line: 1332, column: 2)
!15771 = !DILocation(line: 1336, column: 2, scope: !15747)
!15772 = !DILocation(line: 1337, column: 1, scope: !15747)
!15773 = distinct !DISubprogram(name: "k_can_yield", scope: !2412, file: !2412, line: 1384, type: !7173, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !2123)
!15774 = !DILocation(line: 1386, column: 11, scope: !15773)
!15775 = !DILocation(line: 1386, column: 29, scope: !15773)
!15776 = !DILocation(line: 1386, column: 32, scope: !15773)
!15777 = !DILocation(line: 1386, column: 46, scope: !15773)
!15778 = !DILocation(line: 1387, column: 28, scope: !15773)
!15779 = !DILocation(line: 1387, column: 4, scope: !15773)
!15780 = !DILocation(line: 1386, column: 2, scope: !15773)
!15781 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !220, file: !220, line: 989, type: !7173, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !2123)
!15782 = !DILocation(line: 993, column: 10, scope: !15781)
!15783 = !DILocation(line: 993, column: 2, scope: !15781)
!15784 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2412, file: !2412, line: 1390, type: !365, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15785)
!15785 = !{!15786}
!15786 = !DILocalVariable(name: "key", scope: !15784, file: !2412, line: 1396, type: !13994)
!15787 = !DILocation(line: 1031, column: 3, scope: !14729, inlinedAt: !15788)
!15788 = distinct !DILocation(line: 48, column: 10, scope: !14733, inlinedAt: !15789)
!15789 = distinct !DILocation(line: 1392, column: 2, scope: !15790)
!15790 = distinct !DILexicalBlock(scope: !15791, file: !2412, line: 1392, column: 2)
!15791 = distinct !DILexicalBlock(scope: !15784, file: !2412, line: 1392, column: 2)
!15792 = !DILocation(line: 0, scope: !14729, inlinedAt: !15788)
!15793 = !DILocation(line: 48, column: 9, scope: !14733, inlinedAt: !15789)
!15794 = !DILocation(line: 1392, column: 2, scope: !15791)
!15795 = !DILocation(line: 1392, column: 2, scope: !15796)
!15796 = distinct !DILexicalBlock(scope: !15790, file: !2412, line: 1392, column: 2)
!15797 = !DILocation(line: 0, scope: !14002, inlinedAt: !15798)
!15798 = distinct !DILocation(line: 1396, column: 25, scope: !15784)
!15799 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !15800)
!15800 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !15798)
!15801 = !DILocation(line: 0, scope: !14011, inlinedAt: !15800)
!15802 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !15798)
!15803 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15798)
!15804 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !15798)
!15805 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !15798)
!15806 = !DILocation(line: 0, scope: !15784)
!15807 = !DILocation(line: 1400, column: 18, scope: !15808)
!15808 = distinct !DILexicalBlock(scope: !15809, file: !2412, line: 1399, column: 36)
!15809 = distinct !DILexicalBlock(scope: !15784, file: !2412, line: 1398, column: 6)
!15810 = !DILocation(line: 0, scope: !14194, inlinedAt: !15811)
!15811 = distinct !DILocation(line: 1400, column: 3, scope: !15808)
!15812 = !DILocation(line: 266, column: 15, scope: !14194, inlinedAt: !15811)
!15813 = !DILocation(line: 266, column: 28, scope: !14194, inlinedAt: !15811)
!15814 = !DILocation(line: 0, scope: !14202, inlinedAt: !15815)
!15815 = distinct !DILocation(line: 268, column: 3, scope: !14206, inlinedAt: !15811)
!15816 = !DILocation(line: 234, column: 2, scope: !14202, inlinedAt: !15815)
!15817 = !DILocation(line: 1402, column: 15, scope: !15784)
!15818 = !DILocation(line: 0, scope: !14211, inlinedAt: !15819)
!15819 = distinct !DILocation(line: 1402, column: 2, scope: !15784)
!15820 = !DILocation(line: 252, column: 15, scope: !14211, inlinedAt: !15819)
!15821 = !DILocation(line: 252, column: 28, scope: !14211, inlinedAt: !15819)
!15822 = !DILocation(line: 0, scope: !14218, inlinedAt: !15823)
!15823 = distinct !DILocation(line: 254, column: 3, scope: !14222, inlinedAt: !15819)
!15824 = !DILocation(line: 0, scope: !14225, inlinedAt: !15825)
!15825 = distinct !DILocation(line: 229, column: 2, scope: !14218, inlinedAt: !15823)
!15826 = !DILocation(line: 186, column: 2, scope: !14235, inlinedAt: !15825)
!15827 = !DILocation(line: 186, column: 2, scope: !14236, inlinedAt: !15825)
!15828 = !DILocation(line: 186, column: 2, scope: !14239, inlinedAt: !15825)
!15829 = !DILocation(line: 188, column: 2, scope: !14241, inlinedAt: !15825)
!15830 = !DILocation(line: 188, column: 2, scope: !14243, inlinedAt: !15825)
!15831 = !DILocation(line: 0, scope: !14241, inlinedAt: !15825)
!15832 = !DILocation(line: 189, column: 7, scope: !14246, inlinedAt: !15825)
!15833 = !DILocation(line: 189, column: 35, scope: !14246, inlinedAt: !15825)
!15834 = !DILocation(line: 189, column: 7, scope: !14247, inlinedAt: !15825)
!15835 = !DILocation(line: 191, column: 21, scope: !14251, inlinedAt: !15825)
!15836 = !DILocation(line: 190, column: 4, scope: !14251, inlinedAt: !15825)
!15837 = !DILocation(line: 192, column: 4, scope: !14251, inlinedAt: !15825)
!15838 = distinct !{!15838, !15829, !15839}
!15839 = !DILocation(line: 194, column: 2, scope: !14241, inlinedAt: !15825)
!15840 = !DILocation(line: 196, column: 37, scope: !14225, inlinedAt: !15825)
!15841 = !DILocation(line: 196, column: 2, scope: !14225, inlinedAt: !15825)
!15842 = !DILocation(line: 197, column: 1, scope: !14225, inlinedAt: !15825)
!15843 = !DILocation(line: 1403, column: 2, scope: !15784)
!15844 = !DILocation(line: 0, scope: !14680, inlinedAt: !15845)
!15845 = distinct !DILocation(line: 1404, column: 2, scope: !15784)
!15846 = !DILocation(line: 0, scope: !14689, inlinedAt: !15847)
!15847 = distinct !DILocation(line: 195, column: 2, scope: !14680, inlinedAt: !15845)
!15848 = !DILocation(line: 225, column: 2, scope: !14696, inlinedAt: !15847)
!15849 = !DILocation(line: 225, column: 2, scope: !14697, inlinedAt: !15847)
!15850 = !DILocation(line: 225, column: 2, scope: !14700, inlinedAt: !15847)
!15851 = !DILocation(line: 196, column: 9, scope: !14680, inlinedAt: !15845)
!15852 = !DILocation(line: 1405, column: 1, scope: !15784)
!15853 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2412, file: !2412, line: 1459, type: !15854, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15856)
!15854 = !DISubroutineType(types: !15855)
!15855 = !{!362, !14890}
!15856 = !{!15857, !15858, !15859}
!15857 = !DILocalVariable(name: "timeout", arg: 1, scope: !15853, file: !2412, line: 1459, type: !14890)
!15858 = !DILocalVariable(name: "ticks", scope: !15853, file: !2412, line: 1461, type: !113)
!15859 = !DILocalVariable(name: "ret", scope: !15853, file: !2412, line: 1480, type: !362)
!15860 = !DILocation(line: 0, scope: !15853)
!15861 = !DILocation(line: 1031, column: 3, scope: !14729, inlinedAt: !15862)
!15862 = distinct !DILocation(line: 48, column: 10, scope: !14733, inlinedAt: !15863)
!15863 = distinct !DILocation(line: 1463, column: 2, scope: !15864)
!15864 = distinct !DILexicalBlock(scope: !15865, file: !2412, line: 1463, column: 2)
!15865 = distinct !DILexicalBlock(scope: !15853, file: !2412, line: 1463, column: 2)
!15866 = !DILocation(line: 0, scope: !14729, inlinedAt: !15862)
!15867 = !DILocation(line: 48, column: 9, scope: !14733, inlinedAt: !15863)
!15868 = !DILocation(line: 1463, column: 2, scope: !15865)
!15869 = !DILocation(line: 1463, column: 2, scope: !15870)
!15870 = distinct !DILexicalBlock(scope: !15864, file: !2412, line: 1463, column: 2)
!15871 = !DILocation(line: 1468, column: 6, scope: !15872)
!15872 = distinct !DILexicalBlock(scope: !15853, file: !2412, line: 1468, column: 6)
!15873 = !DILocation(line: 1468, column: 6, scope: !15853)
!15874 = !DILocation(line: 1469, column: 20, scope: !15875)
!15875 = distinct !DILexicalBlock(scope: !15872, file: !2412, line: 1468, column: 40)
!15876 = !DILocation(line: 1469, column: 3, scope: !15875)
!15877 = !DILocation(line: 1473, column: 3, scope: !15875)
!15878 = !DILocation(line: 1478, column: 10, scope: !15853)
!15879 = !DILocation(line: 1480, column: 16, scope: !15853)
!15880 = !DILocation(line: 1485, column: 1, scope: !15853)
!15881 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3467, file: !3467, line: 310, type: !15882, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15884)
!15882 = !DISubroutineType(types: !15883)
!15883 = !{null, !15740}
!15884 = !{!15885}
!15885 = !DILocalVariable(name: "thread", arg: 1, scope: !15881, file: !3467, line: 310, type: !15740)
!15886 = !DILocation(line: 0, scope: !15881)
!15887 = !DILocation(line: 319, column: 2, scope: !15888)
!15888 = distinct !DILexicalBlock(scope: !15881, file: !3467, line: 319, column: 2)
!15889 = !{i64 2154791346}
!15890 = !DILocation(line: 320, column: 2, scope: !15881)
!15891 = !DILocation(line: 321, column: 1, scope: !15881)
!15892 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2412, file: !2412, line: 1415, type: !15893, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15895)
!15893 = !DISubroutineType(types: !15894)
!15894 = !{!362, !113}
!15895 = !{!15896, !15897, !15898, !15899}
!15896 = !DILocalVariable(name: "ticks", arg: 1, scope: !15892, file: !2412, line: 1415, type: !113)
!15897 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15892, file: !2412, line: 1418, type: !156)
!15898 = !DILocalVariable(name: "timeout", scope: !15892, file: !2412, line: 1430, type: !14890)
!15899 = !DILocalVariable(name: "key", scope: !15892, file: !2412, line: 1437, type: !13994)
!15900 = !DILocation(line: 0, scope: !15892)
!15901 = !DILocation(line: 1031, column: 3, scope: !14729, inlinedAt: !15902)
!15902 = distinct !DILocation(line: 48, column: 10, scope: !14733, inlinedAt: !15903)
!15903 = distinct !DILocation(line: 1420, column: 2, scope: !15904)
!15904 = distinct !DILexicalBlock(scope: !15905, file: !2412, line: 1420, column: 2)
!15905 = distinct !DILexicalBlock(scope: !15892, file: !2412, line: 1420, column: 2)
!15906 = !DILocation(line: 0, scope: !14729, inlinedAt: !15902)
!15907 = !DILocation(line: 48, column: 9, scope: !14733, inlinedAt: !15903)
!15908 = !DILocation(line: 1420, column: 2, scope: !15905)
!15909 = !DILocation(line: 1420, column: 2, scope: !15910)
!15910 = distinct !DILexicalBlock(scope: !15904, file: !2412, line: 1420, column: 2)
!15911 = !DILocation(line: 1425, column: 12, scope: !15912)
!15912 = distinct !DILexicalBlock(scope: !15892, file: !2412, line: 1425, column: 6)
!15913 = !DILocation(line: 1425, column: 6, scope: !15892)
!15914 = !DILocation(line: 1426, column: 3, scope: !15915)
!15915 = distinct !DILexicalBlock(scope: !15912, file: !2412, line: 1425, column: 18)
!15916 = !DILocation(line: 1427, column: 3, scope: !15915)
!15917 = !DILocation(line: 1431, column: 24, scope: !15918)
!15918 = distinct !DILexicalBlock(scope: !15892, file: !2412, line: 1431, column: 6)
!15919 = !DILocation(line: 1431, column: 6, scope: !15892)
!15920 = !DILocation(line: 1432, column: 35, scope: !15921)
!15921 = distinct !DILexicalBlock(scope: !15918, file: !2412, line: 1431, column: 30)
!15922 = !DILocation(line: 1432, column: 27, scope: !15921)
!15923 = !DILocation(line: 1433, column: 2, scope: !15921)
!15924 = !DILocation(line: 1434, column: 27, scope: !15925)
!15925 = distinct !DILexicalBlock(scope: !15918, file: !2412, line: 1433, column: 9)
!15926 = !DILocation(line: 0, scope: !15918)
!15927 = !DILocation(line: 0, scope: !14002, inlinedAt: !15928)
!15928 = distinct !DILocation(line: 1437, column: 25, scope: !15892)
!15929 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !15930)
!15930 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !15928)
!15931 = !DILocation(line: 0, scope: !14011, inlinedAt: !15930)
!15932 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !15928)
!15933 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15928)
!15934 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !15928)
!15935 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !15928)
!15936 = !DILocation(line: 1440, column: 20, scope: !15892)
!15937 = !DILocation(line: 1440, column: 18, scope: !15892)
!15938 = !DILocation(line: 1442, column: 2, scope: !15892)
!15939 = !DILocation(line: 1443, column: 23, scope: !15892)
!15940 = !DILocation(line: 1443, column: 2, scope: !15892)
!15941 = !DILocation(line: 1444, column: 29, scope: !15892)
!15942 = !DILocation(line: 1444, column: 2, scope: !15892)
!15943 = !DILocation(line: 0, scope: !14680, inlinedAt: !15944)
!15944 = distinct !DILocation(line: 1446, column: 8, scope: !15892)
!15945 = !DILocation(line: 0, scope: !14689, inlinedAt: !15946)
!15946 = distinct !DILocation(line: 195, column: 2, scope: !14680, inlinedAt: !15944)
!15947 = !DILocation(line: 225, column: 2, scope: !14696, inlinedAt: !15946)
!15948 = !DILocation(line: 225, column: 2, scope: !14697, inlinedAt: !15946)
!15949 = !DILocation(line: 225, column: 2, scope: !14700, inlinedAt: !15946)
!15950 = !DILocation(line: 196, column: 9, scope: !14680, inlinedAt: !15944)
!15951 = !DILocation(line: 1448, column: 2, scope: !15952)
!15952 = distinct !DILexicalBlock(scope: !15953, file: !2412, line: 1448, column: 2)
!15953 = distinct !DILexicalBlock(scope: !15892, file: !2412, line: 1448, column: 2)
!15954 = !DILocation(line: 1448, column: 2, scope: !15953)
!15955 = !DILocation(line: 1448, column: 2, scope: !15956)
!15956 = distinct !DILexicalBlock(scope: !15952, file: !2412, line: 1448, column: 2)
!15957 = !DILocation(line: 1450, column: 10, scope: !15892)
!15958 = !DILocation(line: 1450, column: 45, scope: !15892)
!15959 = !DILocation(line: 1450, column: 43, scope: !15892)
!15960 = !DILocation(line: 1451, column: 6, scope: !15892)
!15961 = !DILocation(line: 1457, column: 1, scope: !15892)
!15962 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3434, file: !3434, line: 1103, type: !3435, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15963)
!15963 = !{!15964}
!15964 = !DILocalVariable(name: "t", arg: 1, scope: !15962, file: !3434, line: 1103, type: !213)
!15965 = !DILocation(line: 0, scope: !15962)
!15966 = !DILocation(line: 0, scope: !14062, inlinedAt: !15967)
!15967 = distinct !DILocation(line: 1106, column: 9, scope: !15962)
!15968 = !DILocation(line: 139, column: 13, scope: !15969, inlinedAt: !15967)
!15969 = distinct !DILexicalBlock(scope: !15970, file: !3434, line: 138, column: 10)
!15970 = distinct !DILexicalBlock(scope: !15971, file: !3434, line: 136, column: 7)
!15971 = distinct !DILexicalBlock(scope: !14083, file: !3434, line: 134, column: 17)
!15972 = !DILocation(line: 1106, column: 2, scope: !15962)
!15973 = distinct !DISubprogram(name: "k_yield", scope: !3467, file: !3467, line: 140, type: !365, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !2123)
!15974 = !DILocation(line: 148, column: 2, scope: !15975)
!15975 = distinct !DILexicalBlock(scope: !15973, file: !3467, line: 148, column: 2)
!15976 = !{i64 2154790666}
!15977 = !DILocation(line: 149, column: 2, scope: !15973)
!15978 = !DILocation(line: 150, column: 1, scope: !15973)
!15979 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2412, file: !2412, line: 1495, type: !15980, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15982)
!15980 = !DISubroutineType(types: !15981)
!15981 = !{!362, !118}
!15982 = !{!15983, !15984}
!15983 = !DILocalVariable(name: "us", arg: 1, scope: !15979, file: !2412, line: 1495, type: !118)
!15984 = !DILocalVariable(name: "ticks", scope: !15979, file: !2412, line: 1497, type: !362)
!15985 = !DILocation(line: 0, scope: !15979)
!15986 = !DILocation(line: 1501, column: 31, scope: !15979)
!15987 = !DILocation(line: 1501, column: 10, scope: !15979)
!15988 = !DILocation(line: 1502, column: 23, scope: !15979)
!15989 = !DILocation(line: 1502, column: 10, scope: !15979)
!15990 = !DILocation(line: 1506, column: 31, scope: !15979)
!15991 = !DILocation(line: 1506, column: 9, scope: !15979)
!15992 = !DILocation(line: 1506, column: 2, scope: !15979)
!15993 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3434, file: !3434, line: 571, type: !3435, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !15994)
!15994 = !{!15995}
!15995 = !DILocalVariable(name: "t", arg: 1, scope: !15993, file: !3434, line: 571, type: !213)
!15996 = !DILocation(line: 0, scope: !15993)
!15997 = !DILocation(line: 0, scope: !14062, inlinedAt: !15998)
!15998 = distinct !DILocation(line: 574, column: 9, scope: !15993)
!15999 = !DILocation(line: 135, column: 5, scope: !15971, inlinedAt: !15998)
!16000 = !DILocation(line: 139, column: 13, scope: !15969, inlinedAt: !15998)
!16001 = !DILocation(line: 574, column: 2, scope: !15993)
!16002 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3434, file: !3434, line: 1187, type: !3435, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !16003)
!16003 = !{!16004}
!16004 = !DILocalVariable(name: "t", arg: 1, scope: !16002, file: !3434, line: 1187, type: !213)
!16005 = !DILocation(line: 0, scope: !16002)
!16006 = !DILocation(line: 0, scope: !14062, inlinedAt: !16007)
!16007 = distinct !DILocation(line: 1190, column: 9, scope: !16002)
!16008 = !DILocation(line: 145, column: 13, scope: !16009, inlinedAt: !16007)
!16009 = distinct !DILexicalBlock(scope: !14080, file: !3434, line: 144, column: 10)
!16010 = !DILocation(line: 1190, column: 2, scope: !16002)
!16011 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2412, file: !2412, line: 1517, type: !15882, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !16012)
!16012 = !{!16013}
!16013 = !DILocalVariable(name: "thread", arg: 1, scope: !16011, file: !2412, line: 1517, type: !15740)
!16014 = !DILocation(line: 0, scope: !16011)
!16015 = !DILocation(line: 1521, column: 6, scope: !16016)
!16016 = distinct !DILexicalBlock(scope: !16011, file: !2412, line: 1521, column: 6)
!16017 = !DILocation(line: 1521, column: 6, scope: !16011)
!16018 = !DILocation(line: 1525, column: 6, scope: !16019)
!16019 = distinct !DILexicalBlock(scope: !16011, file: !2412, line: 1525, column: 6)
!16020 = !DILocation(line: 1525, column: 37, scope: !16019)
!16021 = !DILocation(line: 1525, column: 6, scope: !16011)
!16022 = !DILocation(line: 1527, column: 20, scope: !16023)
!16023 = distinct !DILexicalBlock(scope: !16024, file: !2412, line: 1527, column: 7)
!16024 = distinct !DILexicalBlock(scope: !16019, file: !2412, line: 1525, column: 42)
!16025 = !DILocation(line: 1527, column: 33, scope: !16023)
!16026 = !DILocation(line: 1527, column: 7, scope: !16024)
!16027 = !DILocation(line: 1532, column: 2, scope: !16011)
!16028 = !DILocation(line: 1533, column: 2, scope: !16011)
!16029 = !DILocation(line: 1031, column: 3, scope: !14729, inlinedAt: !16030)
!16030 = distinct !DILocation(line: 48, column: 10, scope: !14733, inlinedAt: !16031)
!16031 = distinct !DILocation(line: 1537, column: 7, scope: !16032)
!16032 = distinct !DILexicalBlock(scope: !16011, file: !2412, line: 1537, column: 6)
!16033 = !DILocation(line: 0, scope: !14729, inlinedAt: !16030)
!16034 = !DILocation(line: 48, column: 9, scope: !14733, inlinedAt: !16031)
!16035 = !DILocation(line: 1537, column: 6, scope: !16011)
!16036 = !DILocation(line: 1538, column: 3, scope: !16037)
!16037 = distinct !DILexicalBlock(scope: !16032, file: !2412, line: 1537, column: 25)
!16038 = !DILocation(line: 1539, column: 2, scope: !16037)
!16039 = !DILocation(line: 1540, column: 1, scope: !16011)
!16040 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12380, file: !12380, line: 101, type: !14143, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !16041)
!16041 = !{!16042}
!16042 = !DILocalVariable(name: "thread", arg: 1, scope: !16040, file: !12380, line: 101, type: !2305)
!16043 = !DILocation(line: 0, scope: !16040)
!16044 = !DILocation(line: 103, column: 23, scope: !16040)
!16045 = !DILocation(line: 103, column: 36, scope: !16040)
!16046 = !DILocation(line: 103, column: 55, scope: !16040)
!16047 = !DILocation(line: 103, column: 2, scope: !16040)
!16048 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2412, file: !2412, line: 1567, type: !16049, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !16051)
!16049 = !DISubroutineType(types: !16050)
!16050 = !{!15740}
!16051 = !{!16052}
!16052 = !DILocalVariable(name: "ret", scope: !16048, file: !2412, line: 1577, type: !15740)
!16053 = !DILocation(line: 1577, column: 30, scope: !16048)
!16054 = !DILocation(line: 0, scope: !16048)
!16055 = !DILocation(line: 1582, column: 2, scope: !16048)
!16056 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2412, file: !2412, line: 1593, type: !7461, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !2123)
!16057 = !DILocation(line: 1031, column: 3, scope: !14729, inlinedAt: !16058)
!16058 = distinct !DILocation(line: 48, column: 10, scope: !14733, inlinedAt: !16059)
!16059 = distinct !DILocation(line: 1595, column: 10, scope: !16056)
!16060 = !DILocation(line: 0, scope: !14729, inlinedAt: !16058)
!16061 = !DILocation(line: 48, column: 9, scope: !14733, inlinedAt: !16059)
!16062 = !DILocation(line: 1595, column: 27, scope: !16056)
!16063 = !DILocation(line: 1595, column: 41, scope: !16056)
!16064 = !DILocation(line: 1595, column: 30, scope: !16056)
!16065 = !DILocation(line: 1595, column: 2, scope: !16056)
!16066 = distinct !DISubprogram(name: "z_thread_abort", scope: !2412, file: !2412, line: 1725, type: !13960, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !16067)
!16067 = !{!16068, !16069}
!16068 = !DILocalVariable(name: "thread", arg: 1, scope: !16066, file: !2412, line: 1725, type: !2305)
!16069 = !DILocalVariable(name: "key", scope: !16066, file: !2412, line: 1727, type: !13994)
!16070 = !DILocation(line: 0, scope: !16066)
!16071 = !DILocation(line: 0, scope: !14002, inlinedAt: !16072)
!16072 = distinct !DILocation(line: 1727, column: 25, scope: !16066)
!16073 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !16074)
!16074 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !16072)
!16075 = !DILocation(line: 0, scope: !14011, inlinedAt: !16074)
!16076 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !16072)
!16077 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !16072)
!16078 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !16072)
!16079 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !16072)
!16080 = !DILocation(line: 1729, column: 20, scope: !16081)
!16081 = distinct !DILexicalBlock(scope: !16066, file: !2412, line: 1729, column: 6)
!16082 = !DILocation(line: 1729, column: 33, scope: !16081)
!16083 = !DILocation(line: 1729, column: 48, scope: !16081)
!16084 = !DILocation(line: 1729, column: 6, scope: !16066)
!16085 = !DILocation(line: 0, scope: !14036, inlinedAt: !16086)
!16086 = distinct !DILocation(line: 1730, column: 3, scope: !16087)
!16087 = distinct !DILexicalBlock(scope: !16081, file: !2412, line: 1729, column: 54)
!16088 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !16086)
!16089 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !16086)
!16090 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !16086)
!16091 = !DILocation(line: 0, scope: !14050, inlinedAt: !16092)
!16092 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !16086)
!16093 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !16092)
!16094 = !DILocation(line: 1731, column: 3, scope: !16095)
!16095 = distinct !DILexicalBlock(scope: !16096, file: !2412, line: 1731, column: 3)
!16096 = distinct !DILexicalBlock(scope: !16097, file: !2412, line: 1731, column: 3)
!16097 = distinct !DILexicalBlock(scope: !16087, file: !2412, line: 1731, column: 3)
!16098 = !DILocation(line: 1736, column: 20, scope: !16099)
!16099 = distinct !DILexicalBlock(scope: !16066, file: !2412, line: 1736, column: 6)
!16100 = !DILocation(line: 1736, column: 33, scope: !16099)
!16101 = !DILocation(line: 1736, column: 49, scope: !16099)
!16102 = !DILocation(line: 1736, column: 6, scope: !16066)
!16103 = !DILocation(line: 0, scope: !14036, inlinedAt: !16104)
!16104 = distinct !DILocation(line: 1737, column: 3, scope: !16105)
!16105 = distinct !DILexicalBlock(scope: !16099, file: !2412, line: 1736, column: 56)
!16106 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !16104)
!16107 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !16104)
!16108 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !16104)
!16109 = !DILocation(line: 0, scope: !14050, inlinedAt: !16110)
!16110 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !16104)
!16111 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !16110)
!16112 = !DILocation(line: 1738, column: 3, scope: !16105)
!16113 = !DILocation(line: 1775, column: 2, scope: !16066)
!16114 = !DILocation(line: 1776, column: 16, scope: !16115)
!16115 = distinct !DILexicalBlock(scope: !16066, file: !2412, line: 1776, column: 6)
!16116 = !DILocation(line: 1776, column: 13, scope: !16115)
!16117 = !DILocation(line: 1776, column: 25, scope: !16115)
!16118 = !DILocation(line: 1031, column: 3, scope: !14729, inlinedAt: !16119)
!16119 = distinct !DILocation(line: 48, column: 10, scope: !14733, inlinedAt: !16120)
!16120 = distinct !DILocation(line: 1776, column: 29, scope: !16115)
!16121 = !DILocation(line: 0, scope: !14729, inlinedAt: !16119)
!16122 = !DILocation(line: 48, column: 9, scope: !14733, inlinedAt: !16120)
!16123 = !DILocation(line: 1776, column: 6, scope: !16066)
!16124 = !DILocation(line: 0, scope: !14680, inlinedAt: !16125)
!16125 = distinct !DILocation(line: 1777, column: 3, scope: !16126)
!16126 = distinct !DILexicalBlock(scope: !16115, file: !2412, line: 1776, column: 47)
!16127 = !DILocation(line: 0, scope: !14689, inlinedAt: !16128)
!16128 = distinct !DILocation(line: 195, column: 2, scope: !14680, inlinedAt: !16125)
!16129 = !DILocation(line: 225, column: 2, scope: !14696, inlinedAt: !16128)
!16130 = !DILocation(line: 225, column: 2, scope: !14697, inlinedAt: !16128)
!16131 = !DILocation(line: 225, column: 2, scope: !14700, inlinedAt: !16128)
!16132 = !DILocation(line: 196, column: 9, scope: !14680, inlinedAt: !16125)
!16133 = !DILocation(line: 1778, column: 3, scope: !16134)
!16134 = distinct !DILexicalBlock(scope: !16135, file: !2412, line: 1778, column: 3)
!16135 = distinct !DILexicalBlock(scope: !16136, file: !2412, line: 1778, column: 3)
!16136 = distinct !DILexicalBlock(scope: !16126, file: !2412, line: 1778, column: 3)
!16137 = !DILocation(line: 0, scope: !14036, inlinedAt: !16138)
!16138 = distinct !DILocation(line: 1780, column: 2, scope: !16066)
!16139 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !16138)
!16140 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !16138)
!16141 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !16138)
!16142 = !DILocation(line: 0, scope: !14050, inlinedAt: !16143)
!16143 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !16138)
!16144 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !16143)
!16145 = !DILocation(line: 1781, column: 1, scope: !16066)
!16146 = distinct !DISubprogram(name: "end_thread", scope: !2412, file: !2412, line: 1690, type: !13960, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !16147)
!16147 = !{!16148}
!16148 = !DILocalVariable(name: "thread", arg: 1, scope: !16146, file: !2412, line: 1690, type: !2305)
!16149 = !DILocation(line: 0, scope: !16146)
!16150 = !DILocation(line: 1695, column: 20, scope: !16151)
!16151 = distinct !DILexicalBlock(scope: !16146, file: !2412, line: 1695, column: 6)
!16152 = !DILocation(line: 1695, column: 33, scope: !16151)
!16153 = !DILocation(line: 1695, column: 49, scope: !16151)
!16154 = !DILocation(line: 1695, column: 6, scope: !16146)
!16155 = !DILocation(line: 1697, column: 29, scope: !16156)
!16156 = distinct !DILexicalBlock(scope: !16151, file: !2412, line: 1695, column: 56)
!16157 = !DILocation(line: 1698, column: 7, scope: !16158)
!16158 = distinct !DILexicalBlock(scope: !16156, file: !2412, line: 1698, column: 7)
!16159 = !DILocation(line: 1698, column: 7, scope: !16156)
!16160 = !DILocation(line: 0, scope: !14194, inlinedAt: !16161)
!16161 = distinct !DILocation(line: 1699, column: 4, scope: !16162)
!16162 = distinct !DILexicalBlock(scope: !16158, file: !2412, line: 1698, column: 35)
!16163 = !DILocation(line: 266, column: 28, scope: !14194, inlinedAt: !16161)
!16164 = !DILocation(line: 0, scope: !14202, inlinedAt: !16165)
!16165 = distinct !DILocation(line: 268, column: 3, scope: !14206, inlinedAt: !16161)
!16166 = !DILocation(line: 234, column: 2, scope: !14202, inlinedAt: !16165)
!16167 = !DILocation(line: 1700, column: 3, scope: !16162)
!16168 = !DILocation(line: 1701, column: 20, scope: !16169)
!16169 = distinct !DILexicalBlock(scope: !16156, file: !2412, line: 1701, column: 7)
!16170 = !DILocation(line: 1701, column: 30, scope: !16169)
!16171 = !DILocation(line: 1701, column: 7, scope: !16156)
!16172 = !DILocation(line: 1702, column: 4, scope: !16173)
!16173 = distinct !DILexicalBlock(scope: !16169, file: !2412, line: 1701, column: 39)
!16174 = !DILocation(line: 1703, column: 3, scope: !16173)
!16175 = !DILocation(line: 1704, column: 9, scope: !16156)
!16176 = !DILocation(line: 1705, column: 23, scope: !16156)
!16177 = !DILocation(line: 1705, column: 3, scope: !16156)
!16178 = !DILocation(line: 1706, column: 3, scope: !16156)
!16179 = !DILocation(line: 1722, column: 2, scope: !16156)
!16180 = !DILocation(line: 1723, column: 1, scope: !16146)
!16181 = distinct !DISubprogram(name: "unpend_all", scope: !2412, file: !2412, line: 1674, type: !16182, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !16184)
!16182 = !DISubroutineType(types: !16183)
!16183 = !{null, !2336}
!16184 = !{!16185, !16186}
!16185 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16181, file: !2412, line: 1674, type: !2336)
!16186 = !DILocalVariable(name: "thread", scope: !16181, file: !2412, line: 1676, type: !2305)
!16187 = !DILocation(line: 0, scope: !16181)
!16188 = !DILocation(line: 1678, column: 19, scope: !16181)
!16189 = !DILocation(line: 1678, column: 41, scope: !16181)
!16190 = !DILocation(line: 1678, column: 2, scope: !16181)
!16191 = !DILocation(line: 1679, column: 3, scope: !16192)
!16192 = distinct !DILexicalBlock(scope: !16181, file: !2412, line: 1678, column: 50)
!16193 = !DILocation(line: 1680, column: 9, scope: !16192)
!16194 = !DILocalVariable(name: "thread", arg: 1, scope: !16195, file: !12400, line: 65, type: !2305)
!16195 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12400, file: !12400, line: 65, type: !16196, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !16198)
!16196 = !DISubroutineType(types: !16197)
!16197 = !{null, !2305, !32}
!16198 = !{!16194, !16199}
!16199 = !DILocalVariable(name: "value", arg: 2, scope: !16195, file: !12400, line: 65, type: !32)
!16200 = !DILocation(line: 0, scope: !16195, inlinedAt: !16201)
!16201 = distinct !DILocation(line: 1681, column: 3, scope: !16192)
!16202 = !DILocation(line: 67, column: 15, scope: !16195, inlinedAt: !16201)
!16203 = !DILocation(line: 67, column: 33, scope: !16195, inlinedAt: !16201)
!16204 = !DILocation(line: 1682, column: 3, scope: !16192)
!16205 = distinct !{!16205, !16190, !16206}
!16206 = !DILocation(line: 1683, column: 2, scope: !16181)
!16207 = !DILocation(line: 1684, column: 1, scope: !16181)
!16208 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2412, file: !2412, line: 1794, type: !16209, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !16211)
!16209 = !DISubroutineType(types: !16210)
!16210 = !{!118, !2305, !14890}
!16211 = !{!16212, !16213, !16214, !16215}
!16212 = !DILocalVariable(name: "thread", arg: 1, scope: !16208, file: !2412, line: 1794, type: !2305)
!16213 = !DILocalVariable(name: "timeout", arg: 2, scope: !16208, file: !2412, line: 1794, type: !14890)
!16214 = !DILocalVariable(name: "key", scope: !16208, file: !2412, line: 1796, type: !13994)
!16215 = !DILocalVariable(name: "ret", scope: !16208, file: !2412, line: 1797, type: !118)
!16216 = !DILocation(line: 0, scope: !16208)
!16217 = !DILocation(line: 0, scope: !14002, inlinedAt: !16218)
!16218 = distinct !DILocation(line: 1796, column: 25, scope: !16208)
!16219 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !16220)
!16220 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !16218)
!16221 = !DILocation(line: 0, scope: !14011, inlinedAt: !16220)
!16222 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !16218)
!16223 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !16218)
!16224 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !16218)
!16225 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !16218)
!16226 = !DILocation(line: 1801, column: 20, scope: !16227)
!16227 = distinct !DILexicalBlock(scope: !16208, file: !2412, line: 1801, column: 6)
!16228 = !DILocation(line: 1801, column: 33, scope: !16227)
!16229 = !DILocation(line: 1801, column: 49, scope: !16227)
!16230 = !DILocation(line: 1801, column: 6, scope: !16208)
!16231 = !DILocation(line: 1803, column: 13, scope: !16232)
!16232 = distinct !DILexicalBlock(scope: !16227, file: !2412, line: 1803, column: 13)
!16233 = !DILocation(line: 1803, column: 13, scope: !16227)
!16234 = !DILocation(line: 1805, column: 24, scope: !16235)
!16235 = distinct !DILexicalBlock(scope: !16232, file: !2412, line: 1805, column: 13)
!16236 = !DILocation(line: 1805, column: 21, scope: !16235)
!16237 = !DILocation(line: 1805, column: 34, scope: !16235)
!16238 = !DILocation(line: 1806, column: 20, scope: !16235)
!16239 = !DILocation(line: 1806, column: 44, scope: !16235)
!16240 = !DILocation(line: 1806, column: 30, scope: !16235)
!16241 = !DILocation(line: 1805, column: 13, scope: !16232)
!16242 = !DILocation(line: 1031, column: 3, scope: !14729, inlinedAt: !16243)
!16243 = distinct !DILocation(line: 48, column: 10, scope: !14733, inlinedAt: !16244)
!16244 = distinct !DILocation(line: 1809, column: 3, scope: !16245)
!16245 = distinct !DILexicalBlock(scope: !16246, file: !2412, line: 1809, column: 3)
!16246 = distinct !DILexicalBlock(scope: !16247, file: !2412, line: 1809, column: 3)
!16247 = distinct !DILexicalBlock(scope: !16235, file: !2412, line: 1808, column: 9)
!16248 = !DILocation(line: 0, scope: !14729, inlinedAt: !16243)
!16249 = !DILocation(line: 48, column: 9, scope: !14733, inlinedAt: !16244)
!16250 = !DILocation(line: 1809, column: 3, scope: !16246)
!16251 = !DILocation(line: 1809, column: 3, scope: !16252)
!16252 = distinct !DILexicalBlock(scope: !16245, file: !2412, line: 1809, column: 3)
!16253 = !DILocation(line: 1810, column: 23, scope: !16247)
!16254 = !DILocation(line: 1810, column: 42, scope: !16247)
!16255 = !DILocation(line: 1810, column: 3, scope: !16247)
!16256 = !DILocation(line: 1811, column: 22, scope: !16247)
!16257 = !DILocation(line: 1811, column: 3, scope: !16247)
!16258 = !DILocation(line: 0, scope: !14680, inlinedAt: !16259)
!16259 = distinct !DILocation(line: 1814, column: 9, scope: !16247)
!16260 = !DILocation(line: 0, scope: !14689, inlinedAt: !16261)
!16261 = distinct !DILocation(line: 195, column: 2, scope: !14680, inlinedAt: !16259)
!16262 = !DILocation(line: 225, column: 2, scope: !14696, inlinedAt: !16261)
!16263 = !DILocation(line: 225, column: 2, scope: !14697, inlinedAt: !16261)
!16264 = !DILocation(line: 225, column: 2, scope: !14700, inlinedAt: !16261)
!16265 = !DILocation(line: 196, column: 9, scope: !14680, inlinedAt: !16259)
!16266 = !DILocation(line: 1817, column: 3, scope: !16247)
!16267 = !DILocation(line: 0, scope: !16227)
!16268 = !DILocation(line: 0, scope: !14036, inlinedAt: !16269)
!16269 = distinct !DILocation(line: 1822, column: 2, scope: !16208)
!16270 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !16269)
!16271 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !16269)
!16272 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !16269)
!16273 = !DILocation(line: 0, scope: !14050, inlinedAt: !16274)
!16274 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !16269)
!16275 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !16274)
!16276 = !DILocation(line: 1823, column: 2, scope: !16208)
!16277 = !DILocation(line: 1824, column: 1, scope: !16208)
!16278 = distinct !DISubprogram(name: "z_sched_wake", scope: !2412, file: !2412, line: 1882, type: !16279, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !16281)
!16279 = !DISubroutineType(types: !16280)
!16280 = !{!146, !2336, !118, !117}
!16281 = !{!16282, !16283, !16284, !16285, !16286, !16287, !16289}
!16282 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16278, file: !2412, line: 1882, type: !2336)
!16283 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16278, file: !2412, line: 1882, type: !118)
!16284 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16278, file: !2412, line: 1882, type: !117)
!16285 = !DILocalVariable(name: "thread", scope: !16278, file: !2412, line: 1884, type: !2305)
!16286 = !DILocalVariable(name: "ret", scope: !16278, file: !2412, line: 1885, type: !146)
!16287 = !DILocalVariable(name: "__i", scope: !16288, file: !2412, line: 1887, type: !13994)
!16288 = distinct !DILexicalBlock(scope: !16278, file: !2412, line: 1887, column: 2)
!16289 = !DILocalVariable(name: "__key", scope: !16288, file: !2412, line: 1887, type: !13994)
!16290 = !DILocation(line: 0, scope: !16278)
!16291 = !DILocation(line: 0, scope: !16288)
!16292 = !DILocation(line: 0, scope: !14002, inlinedAt: !16293)
!16293 = distinct !DILocation(line: 1887, column: 2, scope: !16288)
!16294 = !DILocation(line: 55, column: 2, scope: !14011, inlinedAt: !16295)
!16295 = distinct !DILocation(line: 145, column: 10, scope: !14002, inlinedAt: !16293)
!16296 = !DILocation(line: 0, scope: !14011, inlinedAt: !16295)
!16297 = !DILocation(line: 148, column: 2, scope: !14019, inlinedAt: !16293)
!16298 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !16293)
!16299 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !16293)
!16300 = !DILocation(line: 160, column: 2, scope: !14002, inlinedAt: !16293)
!16301 = !DILocation(line: 1888, column: 12, scope: !16302)
!16302 = distinct !DILexicalBlock(scope: !16303, file: !2412, line: 1887, column: 26)
!16303 = distinct !DILexicalBlock(scope: !16288, file: !2412, line: 1887, column: 2)
!16304 = !DILocation(line: 1890, column: 14, scope: !16305)
!16305 = distinct !DILexicalBlock(scope: !16302, file: !2412, line: 1890, column: 7)
!16306 = !DILocation(line: 1890, column: 7, scope: !16302)
!16307 = !DILocalVariable(name: "thread", arg: 1, scope: !16308, file: !13371, line: 134, type: !2305)
!16308 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13371, file: !13371, line: 134, type: !16309, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !16311)
!16309 = !DISubroutineType(types: !16310)
!16310 = !{null, !2305, !32, !117}
!16311 = !{!16307, !16312, !16313}
!16312 = !DILocalVariable(name: "value", arg: 2, scope: !16308, file: !13371, line: 135, type: !32)
!16313 = !DILocalVariable(name: "data", arg: 3, scope: !16308, file: !13371, line: 136, type: !117)
!16314 = !DILocation(line: 0, scope: !16308, inlinedAt: !16315)
!16315 = distinct !DILocation(line: 1891, column: 4, scope: !16316)
!16316 = distinct !DILexicalBlock(scope: !16305, file: !2412, line: 1890, column: 23)
!16317 = !DILocation(line: 0, scope: !16195, inlinedAt: !16318)
!16318 = distinct !DILocation(line: 138, column: 2, scope: !16308, inlinedAt: !16315)
!16319 = !DILocation(line: 67, column: 15, scope: !16195, inlinedAt: !16318)
!16320 = !DILocation(line: 67, column: 33, scope: !16195, inlinedAt: !16318)
!16321 = !DILocation(line: 139, column: 15, scope: !16308, inlinedAt: !16315)
!16322 = !DILocation(line: 139, column: 25, scope: !16308, inlinedAt: !16315)
!16323 = !DILocation(line: 1894, column: 4, scope: !16316)
!16324 = !DILocation(line: 1895, column: 10, scope: !16316)
!16325 = !DILocation(line: 1896, column: 4, scope: !16316)
!16326 = !DILocation(line: 1898, column: 3, scope: !16316)
!16327 = !DILocation(line: 0, scope: !14036, inlinedAt: !16328)
!16328 = distinct !DILocation(line: 1887, column: 2, scope: !16303)
!16329 = !DILocation(line: 194, column: 2, scope: !14044, inlinedAt: !16328)
!16330 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !16328)
!16331 = !DILocation(line: 194, column: 2, scope: !14048, inlinedAt: !16328)
!16332 = !DILocation(line: 0, scope: !14050, inlinedAt: !16333)
!16333 = distinct !DILocation(line: 215, column: 2, scope: !14036, inlinedAt: !16328)
!16334 = !DILocation(line: 95, column: 2, scope: !14050, inlinedAt: !16333)
!16335 = !DILocation(line: 1901, column: 2, scope: !16278)
!16336 = distinct !DISubprogram(name: "z_sched_wait", scope: !2412, file: !2412, line: 1904, type: !16337, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !16339)
!16337 = !DISubroutineType(types: !16338)
!16338 = !{!118, !14005, !13994, !2336, !14890, !3156}
!16339 = !{!16340, !16341, !16342, !16343, !16344, !16345}
!16340 = !DILocalVariable(name: "lock", arg: 1, scope: !16336, file: !2412, line: 1904, type: !14005)
!16341 = !DILocalVariable(name: "key", arg: 2, scope: !16336, file: !2412, line: 1904, type: !13994)
!16342 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16336, file: !2412, line: 1905, type: !2336)
!16343 = !DILocalVariable(name: "timeout", arg: 4, scope: !16336, file: !2412, line: 1905, type: !14890)
!16344 = !DILocalVariable(name: "data", arg: 5, scope: !16336, file: !2412, line: 1905, type: !3156)
!16345 = !DILocalVariable(name: "ret", scope: !16336, file: !2412, line: 1907, type: !118)
!16346 = !DILocation(line: 0, scope: !16336)
!16347 = !DILocation(line: 1907, column: 12, scope: !16336)
!16348 = !DILocation(line: 1909, column: 11, scope: !16349)
!16349 = distinct !DILexicalBlock(scope: !16336, file: !2412, line: 1909, column: 6)
!16350 = !DILocation(line: 1909, column: 6, scope: !16336)
!16351 = !DILocation(line: 1910, column: 11, scope: !16352)
!16352 = distinct !DILexicalBlock(scope: !16349, file: !2412, line: 1909, column: 20)
!16353 = !DILocation(line: 1910, column: 26, scope: !16352)
!16354 = !DILocation(line: 1910, column: 9, scope: !16352)
!16355 = !DILocation(line: 1911, column: 2, scope: !16352)
!16356 = !DILocation(line: 1912, column: 2, scope: !16336)
!16357 = distinct !DISubprogram(name: "z_data_copy", scope: !16358, file: !16358, line: 22, type: !365, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3173, retainedNodes: !2123)
!16358 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16359 = !DILocation(line: 24, column: 2, scope: !16357)
!16360 = !DILocation(line: 27, column: 2, scope: !16357)
!16361 = !DILocation(line: 71, column: 1, scope: !16357)
!16362 = distinct !DISubprogram(name: "z_add_timeout", scope: !2449, file: !2449, line: 88, type: !16363, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16369)
!16363 = !DISubroutineType(types: !16364)
!16364 = !{null, !2422, !2441, !16365}
!16365 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !16366)
!16366 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !16367)
!16367 = !{!16368}
!16368 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16366, file: !114, line: 66, baseType: !113, size: 64)
!16369 = !{!16370, !16371, !16372, !16373, !16379, !16380, !16383, !16386}
!16370 = !DILocalVariable(name: "to", arg: 1, scope: !16362, file: !2449, line: 88, type: !2422)
!16371 = !DILocalVariable(name: "fn", arg: 2, scope: !16362, file: !2449, line: 88, type: !2441)
!16372 = !DILocalVariable(name: "timeout", arg: 3, scope: !16362, file: !2449, line: 89, type: !16365)
!16373 = !DILocalVariable(name: "__i", scope: !16374, file: !2449, line: 102, type: !16375)
!16374 = distinct !DILexicalBlock(scope: !16362, file: !2449, line: 102, column: 2)
!16375 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !16376)
!16376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !16377)
!16377 = !{!16378}
!16378 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16376, file: !334, line: 33, baseType: !118, size: 32)
!16379 = !DILocalVariable(name: "__key", scope: !16374, file: !2449, line: 102, type: !16375)
!16380 = !DILocalVariable(name: "t", scope: !16381, file: !2449, line: 103, type: !2422)
!16381 = distinct !DILexicalBlock(scope: !16382, file: !2449, line: 102, column: 24)
!16382 = distinct !DILexicalBlock(scope: !16374, file: !2449, line: 102, column: 2)
!16383 = !DILocalVariable(name: "ticks", scope: !16384, file: !2449, line: 107, type: !113)
!16384 = distinct !DILexicalBlock(scope: !16385, file: !2449, line: 106, column: 39)
!16385 = distinct !DILexicalBlock(scope: !16381, file: !2449, line: 105, column: 7)
!16386 = !DILocalVariable(name: "next_time", scope: !16387, file: !2449, line: 137, type: !362)
!16387 = distinct !DILexicalBlock(scope: !16388, file: !2449, line: 127, column: 22)
!16388 = distinct !DILexicalBlock(scope: !16381, file: !2449, line: 127, column: 7)
!16389 = !DILocation(line: 0, scope: !16362)
!16390 = !DILocation(line: 91, column: 6, scope: !16391)
!16391 = distinct !DILexicalBlock(scope: !16362, file: !2449, line: 91, column: 6)
!16392 = !DILocation(line: 91, column: 6, scope: !16362)
!16393 = !DILocation(line: 99, column: 2, scope: !16394)
!16394 = distinct !DILexicalBlock(scope: !16395, file: !2449, line: 99, column: 2)
!16395 = distinct !DILexicalBlock(scope: !16362, file: !2449, line: 99, column: 2)
!16396 = !DILocation(line: 99, column: 2, scope: !16395)
!16397 = !DILocation(line: 99, column: 2, scope: !16398)
!16398 = distinct !DILexicalBlock(scope: !16394, file: !2449, line: 99, column: 2)
!16399 = !DILocation(line: 100, column: 6, scope: !16362)
!16400 = !DILocation(line: 100, column: 9, scope: !16362)
!16401 = !DILocation(line: 0, scope: !16374)
!16402 = !DILocalVariable(name: "l", arg: 1, scope: !16403, file: !334, line: 136, type: !16406)
!16403 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !16404, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16407)
!16404 = !DISubroutineType(types: !16405)
!16405 = !{!16375, !16406}
!16406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 32)
!16407 = !{!16402, !16408}
!16408 = !DILocalVariable(name: "k", scope: !16403, file: !334, line: 139, type: !16375)
!16409 = !DILocation(line: 0, scope: !16403, inlinedAt: !16410)
!16410 = distinct !DILocation(line: 102, column: 2, scope: !16374)
!16411 = !DILocation(line: 55, column: 2, scope: !16412, inlinedAt: !16416)
!16412 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6172, file: !6172, line: 42, type: !6173, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16413)
!16413 = !{!16414, !16415}
!16414 = !DILocalVariable(name: "key", scope: !16412, file: !6172, line: 44, type: !32)
!16415 = !DILocalVariable(name: "tmp", scope: !16412, file: !6172, line: 53, type: !32)
!16416 = distinct !DILocation(line: 145, column: 10, scope: !16403, inlinedAt: !16410)
!16417 = !{i64 2247041}
!16418 = !DILocation(line: 0, scope: !16412, inlinedAt: !16416)
!16419 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !16410)
!16420 = distinct !DILexicalBlock(scope: !16421, file: !334, line: 148, column: 2)
!16421 = distinct !DILexicalBlock(scope: !16403, file: !334, line: 148, column: 2)
!16422 = !DILocation(line: 148, column: 2, scope: !16421, inlinedAt: !16410)
!16423 = !DILocation(line: 148, column: 2, scope: !16424, inlinedAt: !16410)
!16424 = distinct !DILexicalBlock(scope: !16420, file: !334, line: 148, column: 2)
!16425 = !DILocation(line: 160, column: 2, scope: !16403, inlinedAt: !16410)
!16426 = !DILocation(line: 106, column: 33, scope: !16385)
!16427 = !DILocation(line: 105, column: 7, scope: !16381)
!16428 = !DILocation(line: 107, column: 50, scope: !16384)
!16429 = !DILocation(line: 107, column: 48, scope: !16384)
!16430 = !DILocation(line: 0, scope: !16384)
!16431 = !DILocation(line: 109, column: 17, scope: !16384)
!16432 = !DILocation(line: 110, column: 3, scope: !16384)
!16433 = !DILocation(line: 111, column: 31, scope: !16434)
!16434 = distinct !DILexicalBlock(scope: !16385, file: !2449, line: 110, column: 10)
!16435 = !DILocation(line: 111, column: 37, scope: !16434)
!16436 = !DILocation(line: 111, column: 35, scope: !16434)
!16437 = !DILocation(line: 0, scope: !16385)
!16438 = !DILocation(line: 109, column: 8, scope: !16384)
!16439 = !DILocation(line: 109, column: 15, scope: !16384)
!16440 = !DILocation(line: 114, column: 12, scope: !16441)
!16441 = distinct !DILexicalBlock(scope: !16381, file: !2449, line: 114, column: 3)
!16442 = !DILocation(line: 0, scope: !16381)
!16443 = !DILocation(line: 114, column: 3, scope: !16441)
!16444 = !DILocation(line: 115, column: 24, scope: !16445)
!16445 = distinct !DILexicalBlock(scope: !16446, file: !2449, line: 115, column: 8)
!16446 = distinct !DILexicalBlock(scope: !16447, file: !2449, line: 114, column: 45)
!16447 = distinct !DILexicalBlock(scope: !16441, file: !2449, line: 114, column: 3)
!16448 = !DILocation(line: 115, column: 11, scope: !16445)
!16449 = !DILocation(line: 115, column: 18, scope: !16445)
!16450 = !DILocation(line: 115, column: 8, scope: !16446)
!16451 = !DILocation(line: 116, column: 15, scope: !16452)
!16452 = distinct !DILexicalBlock(scope: !16445, file: !2449, line: 115, column: 32)
!16453 = !DILocation(line: 117, column: 26, scope: !16452)
!16454 = !DILocation(line: 117, column: 5, scope: !16452)
!16455 = !DILocation(line: 123, column: 7, scope: !16381)
!16456 = !DILocation(line: 120, column: 15, scope: !16446)
!16457 = !DILocation(line: 114, column: 36, scope: !16447)
!16458 = distinct !{!16458, !16443, !16459}
!16459 = !DILocation(line: 121, column: 3, scope: !16441)
!16460 = !DILocation(line: 124, column: 4, scope: !16461)
!16461 = distinct !DILexicalBlock(scope: !16462, file: !2449, line: 123, column: 18)
!16462 = distinct !DILexicalBlock(scope: !16381, file: !2449, line: 123, column: 7)
!16463 = !DILocation(line: 125, column: 3, scope: !16461)
!16464 = !DILocation(line: 127, column: 13, scope: !16388)
!16465 = !DILocation(line: 127, column: 10, scope: !16388)
!16466 = !DILocation(line: 127, column: 7, scope: !16381)
!16467 = !DILocation(line: 137, column: 24, scope: !16387)
!16468 = !DILocation(line: 0, scope: !16387)
!16469 = !DILocation(line: 139, column: 18, scope: !16470)
!16470 = distinct !DILexicalBlock(scope: !16387, file: !2449, line: 139, column: 8)
!16471 = !DILocation(line: 139, column: 23, scope: !16470)
!16472 = !DILocation(line: 141, column: 5, scope: !16473)
!16473 = distinct !DILexicalBlock(scope: !16470, file: !2449, line: 140, column: 48)
!16474 = !DILocation(line: 142, column: 4, scope: !16473)
!16475 = !DILocalVariable(name: "key", arg: 2, scope: !16476, file: !334, line: 190, type: !16375)
!16476 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !16477, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16479)
!16477 = !DISubroutineType(types: !16478)
!16478 = !{null, !16406, !16375}
!16479 = !{!16480, !16475}
!16480 = !DILocalVariable(name: "l", arg: 1, scope: !16476, file: !334, line: 189, type: !16406)
!16481 = !DILocation(line: 0, scope: !16476, inlinedAt: !16482)
!16482 = distinct !DILocation(line: 102, column: 2, scope: !16382)
!16483 = !DILocation(line: 194, column: 2, scope: !16484, inlinedAt: !16482)
!16484 = distinct !DILexicalBlock(scope: !16485, file: !334, line: 194, column: 2)
!16485 = distinct !DILexicalBlock(scope: !16476, file: !334, line: 194, column: 2)
!16486 = !DILocation(line: 194, column: 2, scope: !16485, inlinedAt: !16482)
!16487 = !DILocation(line: 194, column: 2, scope: !16488, inlinedAt: !16482)
!16488 = distinct !DILexicalBlock(scope: !16484, file: !334, line: 194, column: 2)
!16489 = !DILocalVariable(name: "key", arg: 1, scope: !16490, file: !6172, line: 84, type: !32)
!16490 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6172, file: !6172, line: 84, type: !6183, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16491)
!16491 = !{!16489}
!16492 = !DILocation(line: 0, scope: !16490, inlinedAt: !16493)
!16493 = distinct !DILocation(line: 215, column: 2, scope: !16476, inlinedAt: !16482)
!16494 = !DILocation(line: 95, column: 2, scope: !16490, inlinedAt: !16493)
!16495 = !{i64 2247858}
!16496 = !DILocation(line: 148, column: 1, scope: !16362)
!16497 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !235, file: !235, line: 225, type: !16498, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16502)
!16498 = !DISubroutineType(types: !16499)
!16499 = !{!146, !16500}
!16500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16501, size: 32)
!16501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2426)
!16502 = !{!16503}
!16503 = !DILocalVariable(name: "node", arg: 1, scope: !16497, file: !235, line: 225, type: !16500)
!16504 = !DILocation(line: 0, scope: !16497)
!16505 = !DILocation(line: 227, column: 15, scope: !16497)
!16506 = !DILocation(line: 227, column: 20, scope: !16497)
!16507 = !DILocation(line: 227, column: 2, scope: !16497)
!16508 = distinct !DISubprogram(name: "elapsed", scope: !2449, file: !2449, line: 62, type: !16509, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !2123)
!16509 = !DISubroutineType(types: !16510)
!16510 = !{!362}
!16511 = !DILocation(line: 64, column: 9, scope: !16508)
!16512 = !DILocation(line: 64, column: 28, scope: !16508)
!16513 = !DILocation(line: 64, column: 35, scope: !16508)
!16514 = !DILocation(line: 64, column: 2, scope: !16508)
!16515 = distinct !DISubprogram(name: "first", scope: !2449, file: !2449, line: 39, type: !16516, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16518)
!16516 = !DISubroutineType(types: !16517)
!16517 = !{!2422}
!16518 = !{!16519}
!16519 = !DILocalVariable(name: "t", scope: !16515, file: !2449, line: 41, type: !16520)
!16520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 32)
!16521 = !DILocation(line: 41, column: 19, scope: !16515)
!16522 = !DILocation(line: 0, scope: !16515)
!16523 = !DILocation(line: 43, column: 9, scope: !16515)
!16524 = !DILocation(line: 43, column: 2, scope: !16515)
!16525 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !235, file: !235, line: 443, type: !16526, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16528)
!16526 = !DISubroutineType(types: !16527)
!16527 = !{null, !16520, !16520}
!16528 = !{!16529, !16530, !16531}
!16529 = !DILocalVariable(name: "successor", arg: 1, scope: !16525, file: !235, line: 443, type: !16520)
!16530 = !DILocalVariable(name: "node", arg: 2, scope: !16525, file: !235, line: 443, type: !16520)
!16531 = !DILocalVariable(name: "prev", scope: !16525, file: !235, line: 445, type: !16532)
!16532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16520)
!16533 = !DILocation(line: 0, scope: !16525)
!16534 = !DILocation(line: 445, column: 39, scope: !16525)
!16535 = !DILocation(line: 447, column: 8, scope: !16525)
!16536 = !DILocation(line: 447, column: 13, scope: !16525)
!16537 = !DILocation(line: 448, column: 8, scope: !16525)
!16538 = !DILocation(line: 448, column: 13, scope: !16525)
!16539 = !DILocation(line: 449, column: 8, scope: !16525)
!16540 = !DILocation(line: 449, column: 13, scope: !16525)
!16541 = !DILocation(line: 450, column: 18, scope: !16525)
!16542 = !DILocation(line: 451, column: 1, scope: !16525)
!16543 = distinct !DISubprogram(name: "next", scope: !2449, file: !2449, line: 46, type: !16544, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16546)
!16544 = !DISubroutineType(types: !16545)
!16545 = !{!2422, !2422}
!16546 = !{!16547, !16548}
!16547 = !DILocalVariable(name: "t", arg: 1, scope: !16543, file: !2449, line: 46, type: !2422)
!16548 = !DILocalVariable(name: "n", scope: !16543, file: !2449, line: 48, type: !16520)
!16549 = !DILocation(line: 0, scope: !16543)
!16550 = !DILocation(line: 48, column: 58, scope: !16543)
!16551 = !DILocation(line: 48, column: 19, scope: !16543)
!16552 = !DILocation(line: 50, column: 9, scope: !16543)
!16553 = !DILocation(line: 50, column: 2, scope: !16543)
!16554 = distinct !DISubprogram(name: "sys_dlist_append", scope: !235, file: !235, line: 404, type: !16555, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16558)
!16555 = !DISubroutineType(types: !16556)
!16556 = !{null, !16557, !16520}
!16557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 32)
!16558 = !{!16559, !16560, !16561}
!16559 = !DILocalVariable(name: "list", arg: 1, scope: !16554, file: !235, line: 404, type: !16557)
!16560 = !DILocalVariable(name: "node", arg: 2, scope: !16554, file: !235, line: 404, type: !16520)
!16561 = !DILocalVariable(name: "tail", scope: !16554, file: !235, line: 406, type: !16532)
!16562 = !DILocation(line: 0, scope: !16554)
!16563 = !DILocation(line: 406, column: 34, scope: !16554)
!16564 = !DILocation(line: 408, column: 8, scope: !16554)
!16565 = !DILocation(line: 408, column: 13, scope: !16554)
!16566 = !DILocation(line: 409, column: 8, scope: !16554)
!16567 = !DILocation(line: 409, column: 13, scope: !16554)
!16568 = !DILocation(line: 411, column: 8, scope: !16554)
!16569 = !DILocation(line: 411, column: 13, scope: !16554)
!16570 = !DILocation(line: 412, column: 13, scope: !16554)
!16571 = !DILocation(line: 413, column: 1, scope: !16554)
!16572 = distinct !DISubprogram(name: "next_timeout", scope: !2449, file: !2449, line: 67, type: !16509, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16573)
!16573 = !{!16574, !16575, !16576}
!16574 = !DILocalVariable(name: "to", scope: !16572, file: !2449, line: 69, type: !2422)
!16575 = !DILocalVariable(name: "ticks_elapsed", scope: !16572, file: !2449, line: 70, type: !362)
!16576 = !DILocalVariable(name: "ret", scope: !16572, file: !2449, line: 71, type: !362)
!16577 = !DILocation(line: 69, column: 24, scope: !16572)
!16578 = !DILocation(line: 0, scope: !16572)
!16579 = !DILocation(line: 70, column: 26, scope: !16572)
!16580 = !DILocation(line: 73, column: 10, scope: !16581)
!16581 = distinct !DILexicalBlock(scope: !16572, file: !2449, line: 73, column: 6)
!16582 = !DILocation(line: 73, column: 19, scope: !16581)
!16583 = !DILocation(line: 74, column: 21, scope: !16581)
!16584 = !DILocation(line: 74, column: 30, scope: !16581)
!16585 = !DILocation(line: 74, column: 28, scope: !16581)
!16586 = !DILocation(line: 74, column: 45, scope: !16581)
!16587 = !DILocation(line: 73, column: 6, scope: !16572)
!16588 = !DILocation(line: 77, column: 9, scope: !16589)
!16589 = distinct !DILexicalBlock(scope: !16581, file: !2449, line: 76, column: 9)
!16590 = !DILocation(line: 0, scope: !16581)
!16591 = !DILocation(line: 81, column: 20, scope: !16592)
!16592 = distinct !DILexicalBlock(scope: !16572, file: !2449, line: 81, column: 6)
!16593 = !DILocation(line: 81, column: 6, scope: !16592)
!16594 = !DILocation(line: 81, column: 32, scope: !16592)
!16595 = !DILocation(line: 85, column: 2, scope: !16572)
!16596 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !235, file: !235, line: 341, type: !16597, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16599)
!16597 = !DISubroutineType(types: !16598)
!16598 = !{!16520, !16557, !16520}
!16599 = !{!16600, !16601}
!16600 = !DILocalVariable(name: "list", arg: 1, scope: !16596, file: !235, line: 341, type: !16557)
!16601 = !DILocalVariable(name: "node", arg: 2, scope: !16596, file: !235, line: 342, type: !16520)
!16602 = !DILocation(line: 0, scope: !16596)
!16603 = !DILocation(line: 344, column: 15, scope: !16596)
!16604 = !DILocation(line: 344, column: 9, scope: !16596)
!16605 = !DILocation(line: 344, column: 26, scope: !16596)
!16606 = !DILocation(line: 344, column: 2, scope: !16596)
!16607 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !235, file: !235, line: 325, type: !16597, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16608)
!16608 = !{!16609, !16610}
!16609 = !DILocalVariable(name: "list", arg: 1, scope: !16607, file: !235, line: 325, type: !16557)
!16610 = !DILocalVariable(name: "node", arg: 2, scope: !16607, file: !235, line: 326, type: !16520)
!16611 = !DILocation(line: 0, scope: !16607)
!16612 = !DILocation(line: 328, column: 24, scope: !16607)
!16613 = !DILocation(line: 328, column: 15, scope: !16607)
!16614 = !DILocation(line: 328, column: 9, scope: !16607)
!16615 = !DILocation(line: 328, column: 45, scope: !16607)
!16616 = !DILocation(line: 328, column: 2, scope: !16607)
!16617 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !235, file: !235, line: 294, type: !16618, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16620)
!16618 = !DISubroutineType(types: !16619)
!16619 = !{!16520, !16557}
!16620 = !{!16621}
!16621 = !DILocalVariable(name: "list", arg: 1, scope: !16617, file: !235, line: 294, type: !16557)
!16622 = !DILocation(line: 0, scope: !16617)
!16623 = !DILocation(line: 296, column: 9, scope: !16617)
!16624 = !DILocation(line: 296, column: 2, scope: !16617)
!16625 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !235, file: !235, line: 266, type: !16626, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16628)
!16626 = !DISubroutineType(types: !16627)
!16627 = !{!146, !16557}
!16628 = !{!16629}
!16629 = !DILocalVariable(name: "list", arg: 1, scope: !16625, file: !235, line: 266, type: !16557)
!16630 = !DILocation(line: 0, scope: !16625)
!16631 = !DILocation(line: 268, column: 15, scope: !16625)
!16632 = !DILocation(line: 268, column: 20, scope: !16625)
!16633 = !DILocation(line: 268, column: 2, scope: !16625)
!16634 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2449, file: !2449, line: 150, type: !16635, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16637)
!16635 = !DISubroutineType(types: !16636)
!16636 = !{!118, !2422}
!16637 = !{!16638, !16639, !16640, !16642}
!16638 = !DILocalVariable(name: "to", arg: 1, scope: !16634, file: !2449, line: 150, type: !2422)
!16639 = !DILocalVariable(name: "ret", scope: !16634, file: !2449, line: 152, type: !118)
!16640 = !DILocalVariable(name: "__i", scope: !16641, file: !2449, line: 154, type: !16375)
!16641 = distinct !DILexicalBlock(scope: !16634, file: !2449, line: 154, column: 2)
!16642 = !DILocalVariable(name: "__key", scope: !16641, file: !2449, line: 154, type: !16375)
!16643 = !DILocation(line: 0, scope: !16634)
!16644 = !DILocation(line: 0, scope: !16641)
!16645 = !DILocation(line: 0, scope: !16403, inlinedAt: !16646)
!16646 = distinct !DILocation(line: 154, column: 2, scope: !16641)
!16647 = !DILocation(line: 55, column: 2, scope: !16412, inlinedAt: !16648)
!16648 = distinct !DILocation(line: 145, column: 10, scope: !16403, inlinedAt: !16646)
!16649 = !DILocation(line: 0, scope: !16412, inlinedAt: !16648)
!16650 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !16646)
!16651 = !DILocation(line: 148, column: 2, scope: !16421, inlinedAt: !16646)
!16652 = !DILocation(line: 148, column: 2, scope: !16424, inlinedAt: !16646)
!16653 = !DILocation(line: 160, column: 2, scope: !16403, inlinedAt: !16646)
!16654 = !DILocation(line: 155, column: 7, scope: !16655)
!16655 = distinct !DILexicalBlock(scope: !16656, file: !2449, line: 155, column: 7)
!16656 = distinct !DILexicalBlock(scope: !16657, file: !2449, line: 154, column: 24)
!16657 = distinct !DILexicalBlock(scope: !16641, file: !2449, line: 154, column: 2)
!16658 = !DILocation(line: 155, column: 7, scope: !16656)
!16659 = !DILocation(line: 156, column: 4, scope: !16660)
!16660 = distinct !DILexicalBlock(scope: !16655, file: !2449, line: 155, column: 39)
!16661 = !DILocation(line: 158, column: 3, scope: !16660)
!16662 = !DILocation(line: 0, scope: !16476, inlinedAt: !16663)
!16663 = distinct !DILocation(line: 154, column: 2, scope: !16657)
!16664 = !DILocation(line: 194, column: 2, scope: !16484, inlinedAt: !16663)
!16665 = !DILocation(line: 194, column: 2, scope: !16485, inlinedAt: !16663)
!16666 = !DILocation(line: 194, column: 2, scope: !16488, inlinedAt: !16663)
!16667 = !DILocation(line: 0, scope: !16490, inlinedAt: !16668)
!16668 = distinct !DILocation(line: 215, column: 2, scope: !16476, inlinedAt: !16663)
!16669 = !DILocation(line: 95, column: 2, scope: !16490, inlinedAt: !16668)
!16670 = !DILocation(line: 161, column: 2, scope: !16634)
!16671 = distinct !DISubprogram(name: "remove_timeout", scope: !2449, file: !2449, line: 53, type: !2443, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16672)
!16672 = !{!16673}
!16673 = !DILocalVariable(name: "t", arg: 1, scope: !16671, file: !2449, line: 53, type: !2422)
!16674 = !DILocation(line: 0, scope: !16671)
!16675 = !DILocation(line: 55, column: 6, scope: !16676)
!16676 = distinct !DILexicalBlock(scope: !16671, file: !2449, line: 55, column: 6)
!16677 = !DILocation(line: 55, column: 14, scope: !16676)
!16678 = !DILocation(line: 55, column: 6, scope: !16671)
!16679 = !DILocation(line: 56, column: 25, scope: !16680)
!16680 = distinct !DILexicalBlock(scope: !16676, file: !2449, line: 55, column: 23)
!16681 = !DILocation(line: 56, column: 12, scope: !16680)
!16682 = !DILocation(line: 56, column: 19, scope: !16680)
!16683 = !DILocation(line: 57, column: 2, scope: !16680)
!16684 = !DILocation(line: 59, column: 23, scope: !16671)
!16685 = !DILocation(line: 59, column: 2, scope: !16671)
!16686 = !DILocation(line: 60, column: 1, scope: !16671)
!16687 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !235, file: !235, line: 496, type: !16688, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16690)
!16688 = !DISubroutineType(types: !16689)
!16689 = !{null, !16520}
!16690 = !{!16691, !16692, !16693}
!16691 = !DILocalVariable(name: "node", arg: 1, scope: !16687, file: !235, line: 496, type: !16520)
!16692 = !DILocalVariable(name: "prev", scope: !16687, file: !235, line: 498, type: !16532)
!16693 = !DILocalVariable(name: "next", scope: !16687, file: !235, line: 499, type: !16532)
!16694 = !DILocation(line: 0, scope: !16687)
!16695 = !DILocation(line: 498, column: 34, scope: !16687)
!16696 = !DILocation(line: 499, column: 34, scope: !16687)
!16697 = !DILocation(line: 501, column: 8, scope: !16687)
!16698 = !DILocation(line: 501, column: 13, scope: !16687)
!16699 = !DILocation(line: 502, column: 8, scope: !16687)
!16700 = !DILocation(line: 502, column: 13, scope: !16687)
!16701 = !DILocation(line: 503, column: 2, scope: !16687)
!16702 = !DILocation(line: 504, column: 1, scope: !16687)
!16703 = distinct !DISubprogram(name: "sys_dnode_init", scope: !235, file: !235, line: 211, type: !16688, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16704)
!16704 = !{!16705}
!16705 = !DILocalVariable(name: "node", arg: 1, scope: !16703, file: !235, line: 211, type: !16520)
!16706 = !DILocation(line: 0, scope: !16703)
!16707 = !DILocation(line: 213, column: 8, scope: !16703)
!16708 = !DILocation(line: 213, column: 13, scope: !16703)
!16709 = !DILocation(line: 214, column: 8, scope: !16703)
!16710 = !DILocation(line: 214, column: 13, scope: !16703)
!16711 = !DILocation(line: 215, column: 1, scope: !16703)
!16712 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2449, file: !2449, line: 183, type: !16713, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16717)
!16713 = !DISubroutineType(types: !16714)
!16714 = !{!113, !16715}
!16715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16716, size: 32)
!16716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2423)
!16717 = !{!16718, !16719, !16720, !16722}
!16718 = !DILocalVariable(name: "timeout", arg: 1, scope: !16712, file: !2449, line: 183, type: !16715)
!16719 = !DILocalVariable(name: "ticks", scope: !16712, file: !2449, line: 185, type: !113)
!16720 = !DILocalVariable(name: "__i", scope: !16721, file: !2449, line: 187, type: !16375)
!16721 = distinct !DILexicalBlock(scope: !16712, file: !2449, line: 187, column: 2)
!16722 = !DILocalVariable(name: "__key", scope: !16721, file: !2449, line: 187, type: !16375)
!16723 = !DILocation(line: 0, scope: !16712)
!16724 = !DILocation(line: 0, scope: !16721)
!16725 = !DILocation(line: 0, scope: !16403, inlinedAt: !16726)
!16726 = distinct !DILocation(line: 187, column: 2, scope: !16721)
!16727 = !DILocation(line: 55, column: 2, scope: !16412, inlinedAt: !16728)
!16728 = distinct !DILocation(line: 145, column: 10, scope: !16403, inlinedAt: !16726)
!16729 = !DILocation(line: 0, scope: !16412, inlinedAt: !16728)
!16730 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !16726)
!16731 = !DILocation(line: 148, column: 2, scope: !16421, inlinedAt: !16726)
!16732 = !DILocation(line: 148, column: 2, scope: !16424, inlinedAt: !16726)
!16733 = !DILocation(line: 160, column: 2, scope: !16403, inlinedAt: !16726)
!16734 = !DILocation(line: 188, column: 11, scope: !16735)
!16735 = distinct !DILexicalBlock(scope: !16736, file: !2449, line: 187, column: 24)
!16736 = distinct !DILexicalBlock(scope: !16721, file: !2449, line: 187, column: 2)
!16737 = !DILocation(line: 0, scope: !16476, inlinedAt: !16738)
!16738 = distinct !DILocation(line: 187, column: 2, scope: !16736)
!16739 = !DILocation(line: 194, column: 2, scope: !16484, inlinedAt: !16738)
!16740 = !DILocation(line: 194, column: 2, scope: !16485, inlinedAt: !16738)
!16741 = !DILocation(line: 194, column: 2, scope: !16488, inlinedAt: !16738)
!16742 = !DILocation(line: 0, scope: !16490, inlinedAt: !16743)
!16743 = distinct !DILocation(line: 215, column: 2, scope: !16476, inlinedAt: !16738)
!16744 = !DILocation(line: 95, column: 2, scope: !16490, inlinedAt: !16743)
!16745 = !DILocation(line: 191, column: 2, scope: !16712)
!16746 = distinct !DISubprogram(name: "timeout_rem", scope: !2449, file: !2449, line: 165, type: !16713, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16747)
!16747 = !{!16748, !16749, !16750}
!16748 = !DILocalVariable(name: "timeout", arg: 1, scope: !16746, file: !2449, line: 165, type: !16715)
!16749 = !DILocalVariable(name: "ticks", scope: !16746, file: !2449, line: 167, type: !113)
!16750 = !DILocalVariable(name: "t", scope: !16751, file: !2449, line: 173, type: !2422)
!16751 = distinct !DILexicalBlock(scope: !16746, file: !2449, line: 173, column: 2)
!16752 = !DILocation(line: 0, scope: !16746)
!16753 = !DILocation(line: 169, column: 6, scope: !16754)
!16754 = distinct !DILexicalBlock(scope: !16746, file: !2449, line: 169, column: 6)
!16755 = !DILocation(line: 169, column: 6, scope: !16746)
!16756 = !DILocation(line: 173, column: 28, scope: !16751)
!16757 = !DILocation(line: 0, scope: !16751)
!16758 = !DILocation(line: 173, column: 39, scope: !16759)
!16759 = distinct !DILexicalBlock(scope: !16751, file: !2449, line: 173, column: 2)
!16760 = !DILocation(line: 173, column: 2, scope: !16751)
!16761 = !DILocation(line: 174, column: 15, scope: !16762)
!16762 = distinct !DILexicalBlock(scope: !16759, file: !2449, line: 173, column: 61)
!16763 = !DILocation(line: 174, column: 9, scope: !16762)
!16764 = !DILocation(line: 175, column: 15, scope: !16765)
!16765 = distinct !DILexicalBlock(scope: !16762, file: !2449, line: 175, column: 7)
!16766 = !DILocation(line: 175, column: 7, scope: !16762)
!16767 = !DILocation(line: 173, column: 52, scope: !16759)
!16768 = distinct !{!16768, !16760, !16769}
!16769 = !DILocation(line: 178, column: 2, scope: !16751)
!16770 = !DILocation(line: 180, column: 17, scope: !16746)
!16771 = !DILocation(line: 180, column: 15, scope: !16746)
!16772 = !DILocation(line: 180, column: 2, scope: !16746)
!16773 = !DILocation(line: 181, column: 1, scope: !16746)
!16774 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12787, file: !12787, line: 35, type: !16775, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16777)
!16775 = !DISubroutineType(types: !16776)
!16776 = !{!146, !16715}
!16777 = !{!16778}
!16778 = !DILocalVariable(name: "to", arg: 1, scope: !16774, file: !12787, line: 35, type: !16715)
!16779 = !DILocation(line: 0, scope: !16774)
!16780 = !DILocation(line: 37, column: 35, scope: !16774)
!16781 = !DILocation(line: 37, column: 10, scope: !16774)
!16782 = !DILocation(line: 37, column: 9, scope: !16774)
!16783 = !DILocation(line: 37, column: 2, scope: !16774)
!16784 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2449, file: !2449, line: 194, type: !16713, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16785)
!16785 = !{!16786, !16787, !16788, !16790}
!16786 = !DILocalVariable(name: "timeout", arg: 1, scope: !16784, file: !2449, line: 194, type: !16715)
!16787 = !DILocalVariable(name: "ticks", scope: !16784, file: !2449, line: 196, type: !113)
!16788 = !DILocalVariable(name: "__i", scope: !16789, file: !2449, line: 198, type: !16375)
!16789 = distinct !DILexicalBlock(scope: !16784, file: !2449, line: 198, column: 2)
!16790 = !DILocalVariable(name: "__key", scope: !16789, file: !2449, line: 198, type: !16375)
!16791 = !DILocation(line: 0, scope: !16784)
!16792 = !DILocation(line: 0, scope: !16789)
!16793 = !DILocation(line: 0, scope: !16403, inlinedAt: !16794)
!16794 = distinct !DILocation(line: 198, column: 2, scope: !16789)
!16795 = !DILocation(line: 55, column: 2, scope: !16412, inlinedAt: !16796)
!16796 = distinct !DILocation(line: 145, column: 10, scope: !16403, inlinedAt: !16794)
!16797 = !DILocation(line: 0, scope: !16412, inlinedAt: !16796)
!16798 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !16794)
!16799 = !DILocation(line: 148, column: 2, scope: !16421, inlinedAt: !16794)
!16800 = !DILocation(line: 148, column: 2, scope: !16424, inlinedAt: !16794)
!16801 = !DILocation(line: 160, column: 2, scope: !16403, inlinedAt: !16794)
!16802 = !DILocation(line: 199, column: 11, scope: !16803)
!16803 = distinct !DILexicalBlock(scope: !16804, file: !2449, line: 198, column: 24)
!16804 = distinct !DILexicalBlock(scope: !16789, file: !2449, line: 198, column: 2)
!16805 = !DILocation(line: 199, column: 23, scope: !16803)
!16806 = !DILocation(line: 0, scope: !16476, inlinedAt: !16807)
!16807 = distinct !DILocation(line: 198, column: 2, scope: !16804)
!16808 = !DILocation(line: 194, column: 2, scope: !16484, inlinedAt: !16807)
!16809 = !DILocation(line: 194, column: 2, scope: !16485, inlinedAt: !16807)
!16810 = !DILocation(line: 194, column: 2, scope: !16488, inlinedAt: !16807)
!16811 = !DILocation(line: 0, scope: !16490, inlinedAt: !16812)
!16812 = distinct !DILocation(line: 215, column: 2, scope: !16476, inlinedAt: !16807)
!16813 = !DILocation(line: 95, column: 2, scope: !16490, inlinedAt: !16812)
!16814 = !DILocation(line: 199, column: 21, scope: !16803)
!16815 = !DILocation(line: 202, column: 2, scope: !16784)
!16816 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2449, file: !2449, line: 205, type: !16509, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16817)
!16817 = !{!16818, !16819, !16821}
!16818 = !DILocalVariable(name: "ret", scope: !16816, file: !2449, line: 207, type: !362)
!16819 = !DILocalVariable(name: "__i", scope: !16820, file: !2449, line: 209, type: !16375)
!16820 = distinct !DILexicalBlock(scope: !16816, file: !2449, line: 209, column: 2)
!16821 = !DILocalVariable(name: "__key", scope: !16820, file: !2449, line: 209, type: !16375)
!16822 = !DILocation(line: 0, scope: !16816)
!16823 = !DILocation(line: 0, scope: !16820)
!16824 = !DILocation(line: 0, scope: !16403, inlinedAt: !16825)
!16825 = distinct !DILocation(line: 209, column: 2, scope: !16820)
!16826 = !DILocation(line: 55, column: 2, scope: !16412, inlinedAt: !16827)
!16827 = distinct !DILocation(line: 145, column: 10, scope: !16403, inlinedAt: !16825)
!16828 = !DILocation(line: 0, scope: !16412, inlinedAt: !16827)
!16829 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !16825)
!16830 = !DILocation(line: 148, column: 2, scope: !16421, inlinedAt: !16825)
!16831 = !DILocation(line: 148, column: 2, scope: !16424, inlinedAt: !16825)
!16832 = !DILocation(line: 160, column: 2, scope: !16403, inlinedAt: !16825)
!16833 = !DILocation(line: 210, column: 9, scope: !16834)
!16834 = distinct !DILexicalBlock(scope: !16835, file: !2449, line: 209, column: 24)
!16835 = distinct !DILexicalBlock(scope: !16820, file: !2449, line: 209, column: 2)
!16836 = !DILocation(line: 0, scope: !16476, inlinedAt: !16837)
!16837 = distinct !DILocation(line: 209, column: 2, scope: !16835)
!16838 = !DILocation(line: 194, column: 2, scope: !16484, inlinedAt: !16837)
!16839 = !DILocation(line: 194, column: 2, scope: !16485, inlinedAt: !16837)
!16840 = !DILocation(line: 194, column: 2, scope: !16488, inlinedAt: !16837)
!16841 = !DILocation(line: 0, scope: !16490, inlinedAt: !16842)
!16842 = distinct !DILocation(line: 215, column: 2, scope: !16476, inlinedAt: !16837)
!16843 = !DILocation(line: 95, column: 2, scope: !16490, inlinedAt: !16842)
!16844 = !DILocation(line: 212, column: 2, scope: !16816)
!16845 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2449, file: !2449, line: 215, type: !10383, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16846)
!16846 = !{!16847, !16848, !16849, !16851, !16852, !16855, !16856}
!16847 = !DILocalVariable(name: "ticks", arg: 1, scope: !16845, file: !2449, line: 215, type: !362)
!16848 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16845, file: !2449, line: 215, type: !146)
!16849 = !DILocalVariable(name: "__i", scope: !16850, file: !2449, line: 217, type: !16375)
!16850 = distinct !DILexicalBlock(scope: !16845, file: !2449, line: 217, column: 2)
!16851 = !DILocalVariable(name: "__key", scope: !16850, file: !2449, line: 217, type: !16375)
!16852 = !DILocalVariable(name: "next_to", scope: !16853, file: !2449, line: 218, type: !118)
!16853 = distinct !DILexicalBlock(scope: !16854, file: !2449, line: 217, column: 24)
!16854 = distinct !DILexicalBlock(scope: !16850, file: !2449, line: 217, column: 2)
!16855 = !DILocalVariable(name: "sooner", scope: !16853, file: !2449, line: 219, type: !146)
!16856 = !DILocalVariable(name: "imminent", scope: !16853, file: !2449, line: 221, type: !146)
!16857 = !DILocation(line: 0, scope: !16845)
!16858 = !DILocation(line: 0, scope: !16850)
!16859 = !DILocation(line: 0, scope: !16403, inlinedAt: !16860)
!16860 = distinct !DILocation(line: 217, column: 2, scope: !16850)
!16861 = !DILocation(line: 55, column: 2, scope: !16412, inlinedAt: !16862)
!16862 = distinct !DILocation(line: 145, column: 10, scope: !16403, inlinedAt: !16860)
!16863 = !DILocation(line: 0, scope: !16412, inlinedAt: !16862)
!16864 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !16860)
!16865 = !DILocation(line: 148, column: 2, scope: !16421, inlinedAt: !16860)
!16866 = !DILocation(line: 148, column: 2, scope: !16424, inlinedAt: !16860)
!16867 = !DILocation(line: 160, column: 2, scope: !16403, inlinedAt: !16860)
!16868 = !DILocation(line: 218, column: 17, scope: !16853)
!16869 = !DILocation(line: 0, scope: !16853)
!16870 = !DILocation(line: 221, column: 27, scope: !16853)
!16871 = !DILocation(line: 233, column: 17, scope: !16872)
!16872 = distinct !DILexicalBlock(scope: !16853, file: !2449, line: 233, column: 7)
!16873 = !DILocation(line: 234, column: 26, scope: !16874)
!16874 = distinct !DILexicalBlock(scope: !16872, file: !2449, line: 233, column: 56)
!16875 = !DILocation(line: 234, column: 4, scope: !16874)
!16876 = !DILocation(line: 235, column: 3, scope: !16874)
!16877 = !DILocation(line: 0, scope: !16476, inlinedAt: !16878)
!16878 = distinct !DILocation(line: 217, column: 2, scope: !16854)
!16879 = !DILocation(line: 194, column: 2, scope: !16484, inlinedAt: !16878)
!16880 = !DILocation(line: 194, column: 2, scope: !16485, inlinedAt: !16878)
!16881 = !DILocation(line: 194, column: 2, scope: !16488, inlinedAt: !16878)
!16882 = !DILocation(line: 0, scope: !16490, inlinedAt: !16883)
!16883 = distinct !DILocation(line: 215, column: 2, scope: !16476, inlinedAt: !16878)
!16884 = !DILocation(line: 95, column: 2, scope: !16490, inlinedAt: !16883)
!16885 = !DILocation(line: 237, column: 1, scope: !16845)
!16886 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2449, file: !2449, line: 239, type: !16887, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16889)
!16887 = !DISubroutineType(types: !16888)
!16888 = !{null, !362}
!16889 = !{!16890, !16891, !16892, !16894}
!16890 = !DILocalVariable(name: "ticks", arg: 1, scope: !16886, file: !2449, line: 239, type: !362)
!16891 = !DILocalVariable(name: "key", scope: !16886, file: !2449, line: 245, type: !16375)
!16892 = !DILocalVariable(name: "t", scope: !16893, file: !2449, line: 262, type: !2422)
!16893 = distinct !DILexicalBlock(scope: !16886, file: !2449, line: 261, column: 67)
!16894 = !DILocalVariable(name: "dt", scope: !16893, file: !2449, line: 263, type: !118)
!16895 = !DILocation(line: 0, scope: !16886)
!16896 = !DILocation(line: 242, column: 2, scope: !16886)
!16897 = !DILocation(line: 0, scope: !16403, inlinedAt: !16898)
!16898 = distinct !DILocation(line: 245, column: 25, scope: !16886)
!16899 = !DILocation(line: 55, column: 2, scope: !16412, inlinedAt: !16900)
!16900 = distinct !DILocation(line: 145, column: 10, scope: !16403, inlinedAt: !16898)
!16901 = !DILocation(line: 0, scope: !16412, inlinedAt: !16900)
!16902 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !16898)
!16903 = !DILocation(line: 148, column: 2, scope: !16421, inlinedAt: !16898)
!16904 = !DILocation(line: 148, column: 2, scope: !16424, inlinedAt: !16898)
!16905 = !DILocation(line: 160, column: 2, scope: !16403, inlinedAt: !16898)
!16906 = !DILocation(line: 261, column: 9, scope: !16886)
!16907 = !DILocation(line: 261, column: 17, scope: !16886)
!16908 = !DILocation(line: 261, column: 25, scope: !16886)
!16909 = !DILocation(line: 261, column: 37, scope: !16886)
!16910 = !DILocation(line: 261, column: 47, scope: !16886)
!16911 = !DILocation(line: 261, column: 44, scope: !16886)
!16912 = !DILocation(line: 261, column: 2, scope: !16886)
!16913 = !DILocation(line: 0, scope: !16893)
!16914 = !DILocation(line: 263, column: 12, scope: !16893)
!16915 = !DILocation(line: 265, column: 16, scope: !16893)
!16916 = !DILocation(line: 265, column: 13, scope: !16893)
!16917 = !DILocation(line: 266, column: 13, scope: !16893)
!16918 = !DILocation(line: 267, column: 3, scope: !16893)
!16919 = !DILocation(line: 0, scope: !16476, inlinedAt: !16920)
!16920 = distinct !DILocation(line: 269, column: 3, scope: !16893)
!16921 = !DILocation(line: 194, column: 2, scope: !16484, inlinedAt: !16920)
!16922 = !DILocation(line: 194, column: 2, scope: !16485, inlinedAt: !16920)
!16923 = !DILocation(line: 194, column: 2, scope: !16488, inlinedAt: !16920)
!16924 = !DILocation(line: 0, scope: !16490, inlinedAt: !16925)
!16925 = distinct !DILocation(line: 215, column: 2, scope: !16476, inlinedAt: !16920)
!16926 = !DILocation(line: 95, column: 2, scope: !16490, inlinedAt: !16925)
!16927 = !DILocation(line: 270, column: 6, scope: !16893)
!16928 = !DILocation(line: 270, column: 3, scope: !16893)
!16929 = !DILocation(line: 0, scope: !16403, inlinedAt: !16930)
!16930 = distinct !DILocation(line: 271, column: 9, scope: !16893)
!16931 = !DILocation(line: 55, column: 2, scope: !16412, inlinedAt: !16932)
!16932 = distinct !DILocation(line: 145, column: 10, scope: !16403, inlinedAt: !16930)
!16933 = !DILocation(line: 0, scope: !16412, inlinedAt: !16932)
!16934 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !16930)
!16935 = !DILocation(line: 148, column: 2, scope: !16421, inlinedAt: !16930)
!16936 = !DILocation(line: 148, column: 2, scope: !16424, inlinedAt: !16930)
!16937 = !DILocation(line: 160, column: 2, scope: !16403, inlinedAt: !16930)
!16938 = !DILocation(line: 272, column: 22, scope: !16893)
!16939 = distinct !{!16939, !16912, !16940}
!16940 = !DILocation(line: 273, column: 2, scope: !16886)
!16941 = !DILocation(line: 276, column: 19, scope: !16942)
!16942 = distinct !DILexicalBlock(scope: !16943, file: !2449, line: 275, column: 23)
!16943 = distinct !DILexicalBlock(scope: !16886, file: !2449, line: 275, column: 6)
!16944 = !DILocation(line: 277, column: 2, scope: !16942)
!16945 = !DILocation(line: 279, column: 15, scope: !16886)
!16946 = !DILocation(line: 279, column: 12, scope: !16886)
!16947 = !DILocation(line: 280, column: 21, scope: !16886)
!16948 = !DILocation(line: 282, column: 24, scope: !16886)
!16949 = !DILocation(line: 282, column: 2, scope: !16886)
!16950 = !DILocation(line: 0, scope: !16476, inlinedAt: !16951)
!16951 = distinct !DILocation(line: 284, column: 2, scope: !16886)
!16952 = !DILocation(line: 194, column: 2, scope: !16484, inlinedAt: !16951)
!16953 = !DILocation(line: 194, column: 2, scope: !16485, inlinedAt: !16951)
!16954 = !DILocation(line: 194, column: 2, scope: !16488, inlinedAt: !16951)
!16955 = !DILocation(line: 0, scope: !16490, inlinedAt: !16956)
!16956 = distinct !DILocation(line: 215, column: 2, scope: !16476, inlinedAt: !16951)
!16957 = !DILocation(line: 95, column: 2, scope: !16490, inlinedAt: !16956)
!16958 = !DILocation(line: 285, column: 1, scope: !16886)
!16959 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2449, file: !2449, line: 287, type: !16960, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !16962)
!16960 = !DISubroutineType(types: !16961)
!16961 = !{!115}
!16962 = !{!16963, !16964, !16966}
!16963 = !DILocalVariable(name: "t", scope: !16959, file: !2449, line: 289, type: !213)
!16964 = !DILocalVariable(name: "__i", scope: !16965, file: !2449, line: 291, type: !16375)
!16965 = distinct !DILexicalBlock(scope: !16959, file: !2449, line: 291, column: 2)
!16966 = !DILocalVariable(name: "__key", scope: !16965, file: !2449, line: 291, type: !16375)
!16967 = !DILocation(line: 0, scope: !16959)
!16968 = !DILocation(line: 0, scope: !16965)
!16969 = !DILocation(line: 0, scope: !16403, inlinedAt: !16970)
!16970 = distinct !DILocation(line: 291, column: 2, scope: !16965)
!16971 = !DILocation(line: 55, column: 2, scope: !16412, inlinedAt: !16972)
!16972 = distinct !DILocation(line: 145, column: 10, scope: !16403, inlinedAt: !16970)
!16973 = !DILocation(line: 0, scope: !16412, inlinedAt: !16972)
!16974 = !DILocation(line: 148, column: 2, scope: !16420, inlinedAt: !16970)
!16975 = !DILocation(line: 148, column: 2, scope: !16421, inlinedAt: !16970)
!16976 = !DILocation(line: 148, column: 2, scope: !16424, inlinedAt: !16970)
!16977 = !DILocation(line: 160, column: 2, scope: !16403, inlinedAt: !16970)
!16978 = !DILocation(line: 292, column: 7, scope: !16979)
!16979 = distinct !DILexicalBlock(scope: !16980, file: !2449, line: 291, column: 24)
!16980 = distinct !DILexicalBlock(scope: !16965, file: !2449, line: 291, column: 2)
!16981 = !DILocation(line: 292, column: 19, scope: !16979)
!16982 = !DILocation(line: 0, scope: !16476, inlinedAt: !16983)
!16983 = distinct !DILocation(line: 291, column: 2, scope: !16980)
!16984 = !DILocation(line: 194, column: 2, scope: !16484, inlinedAt: !16983)
!16985 = !DILocation(line: 194, column: 2, scope: !16485, inlinedAt: !16983)
!16986 = !DILocation(line: 194, column: 2, scope: !16488, inlinedAt: !16983)
!16987 = !DILocation(line: 0, scope: !16490, inlinedAt: !16988)
!16988 = distinct !DILocation(line: 215, column: 2, scope: !16476, inlinedAt: !16983)
!16989 = !DILocation(line: 95, column: 2, scope: !16490, inlinedAt: !16988)
!16990 = !DILocation(line: 292, column: 17, scope: !16979)
!16991 = !DILocation(line: 294, column: 2, scope: !16959)
!16992 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2449, file: !2449, line: 297, type: !6433, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !2123)
!16993 = !DILocation(line: 300, column: 19, scope: !16992)
!16994 = !DILocation(line: 300, column: 9, scope: !16992)
!16995 = !DILocation(line: 300, column: 2, scope: !16992)
!16996 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2449, file: !2449, line: 306, type: !16960, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !2123)
!16997 = !DILocation(line: 308, column: 9, scope: !16996)
!16998 = !DILocation(line: 308, column: 2, scope: !16996)
!16999 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2449, file: !2449, line: 319, type: !6443, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !17000)
!17000 = !{!17001, !17002, !17003, !17004}
!17001 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16999, file: !2449, line: 319, type: !156)
!17002 = !DILocalVariable(name: "start_cycles", scope: !16999, file: !2449, line: 328, type: !156)
!17003 = !DILocalVariable(name: "cycles_to_wait", scope: !16999, file: !2449, line: 331, type: !156)
!17004 = !DILocalVariable(name: "current_cycles", scope: !17005, file: !2449, line: 338, type: !156)
!17005 = distinct !DILexicalBlock(scope: !17006, file: !2449, line: 337, column: 11)
!17006 = distinct !DILexicalBlock(scope: !17007, file: !2449, line: 337, column: 2)
!17007 = distinct !DILexicalBlock(scope: !16999, file: !2449, line: 337, column: 2)
!17008 = !DILocation(line: 0, scope: !16999)
!17009 = !DILocation(line: 322, column: 19, scope: !17010)
!17010 = distinct !DILexicalBlock(scope: !16999, file: !2449, line: 322, column: 6)
!17011 = !DILocation(line: 322, column: 6, scope: !16999)
!17012 = !DILocation(line: 328, column: 26, scope: !16999)
!17013 = !DILocation(line: 333, column: 43, scope: !16999)
!17014 = !DILocation(line: 337, column: 2, scope: !16999)
!17015 = !DILocation(line: 338, column: 29, scope: !17005)
!17016 = !DILocation(line: 0, scope: !17005)
!17017 = !DILocation(line: 341, column: 23, scope: !17018)
!17018 = distinct !DILexicalBlock(scope: !17005, file: !2449, line: 341, column: 7)
!17019 = !DILocation(line: 341, column: 39, scope: !17018)
!17020 = !DILocation(line: 349, column: 1, scope: !16999)
!17021 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !220, file: !220, line: 1675, type: !6433, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !2123)
!17022 = !DILocation(line: 1677, column: 9, scope: !17021)
!17023 = !DILocation(line: 1677, column: 2, scope: !17021)
!17024 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17025, file: !17025, line: 24, type: !6433, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !2123)
!17025 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17026 = !DILocation(line: 26, column: 9, scope: !17024)
!17027 = !DILocation(line: 26, column: 2, scope: !17024)
!17028 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2449, file: !2449, line: 364, type: !17029, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !17031)
!17029 = !DISubroutineType(types: !17030)
!17030 = !{!213, !16365}
!17031 = !{!17032, !17033}
!17032 = !DILocalVariable(name: "timeout", arg: 1, scope: !17028, file: !2449, line: 364, type: !16365)
!17033 = !DILocalVariable(name: "dt", scope: !17028, file: !2449, line: 366, type: !113)
!17034 = !DILocation(line: 0, scope: !17028)
!17035 = !DILocation(line: 368, column: 6, scope: !17028)
!17036 = !DILocation(line: 371, column: 10, scope: !17037)
!17037 = distinct !DILexicalBlock(scope: !17038, file: !2449, line: 370, column: 47)
!17038 = distinct !DILexicalBlock(scope: !17039, file: !2449, line: 370, column: 13)
!17039 = distinct !DILexicalBlock(scope: !17028, file: !2449, line: 368, column: 6)
!17040 = !DILocation(line: 371, column: 3, scope: !17037)
!17041 = !DILocation(line: 376, column: 58, scope: !17042)
!17042 = distinct !DILexicalBlock(scope: !17043, file: !2449, line: 376, column: 7)
!17043 = distinct !DILexicalBlock(scope: !17038, file: !2449, line: 372, column: 9)
!17044 = !DILocation(line: 376, column: 7, scope: !17043)
!17045 = !DILocation(line: 376, column: 43, scope: !17042)
!17046 = !DILocation(line: 377, column: 4, scope: !17047)
!17047 = distinct !DILexicalBlock(scope: !17042, file: !2449, line: 376, column: 64)
!17048 = !DILocation(line: 379, column: 10, scope: !17043)
!17049 = !DILocation(line: 379, column: 33, scope: !17043)
!17050 = !DILocation(line: 379, column: 31, scope: !17043)
!17051 = !DILocation(line: 379, column: 3, scope: !17043)
!17052 = !DILocation(line: 0, scope: !17039)
!17053 = !DILocation(line: 381, column: 1, scope: !17028)
!17054 = distinct !DISubprogram(name: "k_free", scope: !2466, file: !2466, line: 43, type: !6283, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !17055)
!17055 = !{!17056, !17057}
!17056 = !DILocalVariable(name: "ptr", arg: 1, scope: !17054, file: !2466, line: 43, type: !117)
!17057 = !DILocalVariable(name: "heap_ref", scope: !17054, file: !2466, line: 45, type: !17058)
!17058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17059, size: 32)
!17059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 32)
!17060 = !DILocation(line: 0, scope: !17054)
!17061 = !DILocation(line: 47, column: 10, scope: !17062)
!17062 = distinct !DILexicalBlock(scope: !17054, file: !2466, line: 47, column: 6)
!17063 = !DILocation(line: 47, column: 6, scope: !17054)
!17064 = !DILocation(line: 49, column: 9, scope: !17065)
!17065 = distinct !DILexicalBlock(scope: !17062, file: !2466, line: 47, column: 19)
!17066 = !DILocation(line: 53, column: 15, scope: !17065)
!17067 = !DILocation(line: 53, column: 3, scope: !17065)
!17068 = !DILocation(line: 56, column: 2, scope: !17065)
!17069 = !DILocation(line: 57, column: 1, scope: !17054)
!17070 = distinct !DISubprogram(name: "k_aligned_alloc", scope: !2466, file: !2466, line: 64, type: !17071, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !17073)
!17071 = !DISubroutineType(types: !17072)
!17072 = !{!117, !315, !315}
!17073 = !{!17074, !17075, !17076}
!17074 = !DILocalVariable(name: "align", arg: 1, scope: !17070, file: !2466, line: 64, type: !315)
!17075 = !DILocalVariable(name: "size", arg: 2, scope: !17070, file: !2466, line: 64, type: !315)
!17076 = !DILocalVariable(name: "ret", scope: !17070, file: !2466, line: 75, type: !117)
!17077 = !DILocation(line: 0, scope: !17070)
!17078 = !DILocation(line: 66, column: 2, scope: !17079)
!17079 = distinct !DILexicalBlock(scope: !17080, file: !2466, line: 66, column: 2)
!17080 = distinct !DILexicalBlock(scope: !17070, file: !2466, line: 66, column: 2)
!17081 = !DILocation(line: 66, column: 2, scope: !17082)
!17082 = distinct !DILexicalBlock(scope: !17079, file: !2466, line: 66, column: 2)
!17083 = !DILocation(line: 70, column: 2, scope: !17084)
!17084 = distinct !DILexicalBlock(scope: !17085, file: !2466, line: 70, column: 2)
!17085 = distinct !DILexicalBlock(scope: !17070, file: !2466, line: 70, column: 2)
!17086 = !DILocation(line: 70, column: 2, scope: !17085)
!17087 = !DILocation(line: 70, column: 2, scope: !17088)
!17088 = distinct !DILexicalBlock(scope: !17084, file: !2466, line: 70, column: 2)
!17089 = !DILocation(line: 75, column: 14, scope: !17070)
!17090 = !DILocation(line: 79, column: 2, scope: !17070)
!17091 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !2466, file: !2466, line: 12, type: !17092, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !17094)
!17092 = !DISubroutineType(types: !17093)
!17093 = !{!117, !17059, !315, !315}
!17094 = !{!17095, !17096, !17097, !17098, !17099, !17100}
!17095 = !DILocalVariable(name: "heap", arg: 1, scope: !17091, file: !2466, line: 12, type: !17059)
!17096 = !DILocalVariable(name: "align", arg: 2, scope: !17091, file: !2466, line: 12, type: !315)
!17097 = !DILocalVariable(name: "size", arg: 3, scope: !17091, file: !2466, line: 12, type: !315)
!17098 = !DILocalVariable(name: "mem", scope: !17091, file: !2466, line: 14, type: !117)
!17099 = !DILocalVariable(name: "heap_ref", scope: !17091, file: !2466, line: 15, type: !17058)
!17100 = !DILocalVariable(name: "__align", scope: !17091, file: !2466, line: 16, type: !315)
!17101 = !DILocation(line: 0, scope: !17091)
!17102 = !DILocation(line: 24, column: 6, scope: !17103)
!17103 = distinct !DILexicalBlock(scope: !17091, file: !2466, line: 24, column: 6)
!17104 = !DILocation(line: 24, column: 6, scope: !17091)
!17105 = !DILocation(line: 27, column: 18, scope: !17091)
!17106 = !DILocation(line: 29, column: 44, scope: !17091)
!17107 = !DILocation(line: 29, column: 8, scope: !17091)
!17108 = !DILocation(line: 30, column: 10, scope: !17109)
!17109 = distinct !DILexicalBlock(scope: !17091, file: !2466, line: 30, column: 6)
!17110 = !DILocation(line: 30, column: 6, scope: !17091)
!17111 = !DILocation(line: 34, column: 13, scope: !17091)
!17112 = !DILocation(line: 35, column: 12, scope: !17091)
!17113 = !DILocation(line: 36, column: 8, scope: !17091)
!17114 = !DILocation(line: 37, column: 2, scope: !17115)
!17115 = distinct !DILexicalBlock(scope: !17116, file: !2466, line: 37, column: 2)
!17116 = distinct !DILexicalBlock(scope: !17091, file: !2466, line: 37, column: 2)
!17117 = !DILocation(line: 37, column: 2, scope: !17116)
!17118 = !DILocation(line: 37, column: 2, scope: !17119)
!17119 = distinct !DILexicalBlock(scope: !17115, file: !2466, line: 37, column: 2)
!17120 = !DILocation(line: 41, column: 1, scope: !17091)
!17121 = distinct !DISubprogram(name: "size_add_overflow", scope: !17122, file: !17122, line: 47, type: !17123, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !17125)
!17122 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17123 = !DISubroutineType(types: !17124)
!17124 = !{!146, !315, !315, !2606}
!17125 = !{!17126, !17127, !17128}
!17126 = !DILocalVariable(name: "a", arg: 1, scope: !17121, file: !17122, line: 47, type: !315)
!17127 = !DILocalVariable(name: "b", arg: 2, scope: !17121, file: !17122, line: 47, type: !315)
!17128 = !DILocalVariable(name: "result", arg: 3, scope: !17121, file: !17122, line: 47, type: !2606)
!17129 = !DILocation(line: 0, scope: !17121)
!17130 = !DILocation(line: 49, column: 9, scope: !17121)
!17131 = !DILocation(line: 49, column: 2, scope: !17121)
!17132 = distinct !DISubprogram(name: "k_malloc", scope: !2466, file: !2466, line: 82, type: !13494, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !17133)
!17133 = !{!17134, !17135}
!17134 = !DILocalVariable(name: "size", arg: 1, scope: !17132, file: !2466, line: 82, type: !315)
!17135 = !DILocalVariable(name: "ret", scope: !17132, file: !2466, line: 86, type: !117)
!17136 = !DILocation(line: 0, scope: !17132)
!17137 = !DILocation(line: 86, column: 14, scope: !17132)
!17138 = !DILocation(line: 90, column: 2, scope: !17132)
!17139 = distinct !DISubprogram(name: "k_calloc", scope: !2466, file: !2466, line: 93, type: !17071, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !17140)
!17140 = !{!17141, !17142, !17143, !17144}
!17141 = !DILocalVariable(name: "nmemb", arg: 1, scope: !17139, file: !2466, line: 93, type: !315)
!17142 = !DILocalVariable(name: "size", arg: 2, scope: !17139, file: !2466, line: 93, type: !315)
!17143 = !DILocalVariable(name: "ret", scope: !17139, file: !2466, line: 95, type: !117)
!17144 = !DILocalVariable(name: "bounds", scope: !17139, file: !2466, line: 96, type: !315)
!17145 = !DILocation(line: 0, scope: !17139)
!17146 = !DILocation(line: 96, column: 2, scope: !17139)
!17147 = !DILocation(line: 100, column: 6, scope: !17148)
!17148 = distinct !DILexicalBlock(scope: !17139, file: !2466, line: 100, column: 6)
!17149 = !DILocation(line: 100, column: 6, scope: !17139)
!17150 = !DILocation(line: 106, column: 17, scope: !17139)
!17151 = !DILocation(line: 106, column: 8, scope: !17139)
!17152 = !DILocation(line: 107, column: 10, scope: !17153)
!17153 = distinct !DILexicalBlock(scope: !17139, file: !2466, line: 107, column: 6)
!17154 = !DILocation(line: 107, column: 6, scope: !17139)
!17155 = !DILocation(line: 108, column: 9, scope: !17156)
!17156 = distinct !DILexicalBlock(scope: !17153, file: !2466, line: 107, column: 19)
!17157 = !DILocation(line: 109, column: 2, scope: !17156)
!17158 = !DILocation(line: 114, column: 1, scope: !17139)
!17159 = distinct !DISubprogram(name: "size_mul_overflow", scope: !17122, file: !17122, line: 105, type: !17123, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !17160)
!17160 = !{!17161, !17162, !17163}
!17161 = !DILocalVariable(name: "a", arg: 1, scope: !17159, file: !17122, line: 105, type: !315)
!17162 = !DILocalVariable(name: "b", arg: 2, scope: !17159, file: !17122, line: 105, type: !315)
!17163 = !DILocalVariable(name: "result", arg: 3, scope: !17159, file: !17122, line: 105, type: !2606)
!17164 = !DILocation(line: 0, scope: !17159)
!17165 = !DILocation(line: 107, column: 9, scope: !17159)
!17166 = !DILocation(line: 107, column: 2, scope: !17159)
!17167 = distinct !DISubprogram(name: "k_thread_system_pool_assign", scope: !2466, file: !2466, line: 116, type: !17168, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !17240)
!17168 = !DISubroutineType(types: !17169)
!17169 = !{null, !17170}
!17170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17171, size: 32)
!17171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !17172)
!17172 = !{!17173, !17213, !17225, !17226, !17227, !17228, !17234, !17235}
!17173 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !17171, file: !225, line: 247, baseType: !17174, size: 384)
!17174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !17175)
!17175 = !{!17176, !17187, !17189, !17190, !17191, !17200, !17201, !17202}
!17176 = !DIDerivedType(tag: DW_TAG_member, scope: !17174, file: !225, line: 60, baseType: !17177, size: 64)
!17177 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !17174, file: !225, line: 60, size: 64, elements: !17178)
!17178 = !{!17179, !17181}
!17179 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !17177, file: !225, line: 61, baseType: !17180, size: 64)
!17180 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2481)
!17181 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !17177, file: !225, line: 62, baseType: !17182, size: 64)
!17182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !17183)
!17183 = !{!17184}
!17184 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !17182, file: !251, line: 50, baseType: !17185, size: 64)
!17185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17186, size: 64, elements: !256)
!17186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17182, size: 32)
!17187 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !17174, file: !225, line: 68, baseType: !17188, size: 32, offset: 64)
!17188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 32)
!17189 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !17174, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!17190 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !17174, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!17191 = !DIDerivedType(tag: DW_TAG_member, scope: !17174, file: !225, line: 90, baseType: !17192, size: 16, offset: 112)
!17192 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !17174, file: !225, line: 90, size: 16, elements: !17193)
!17193 = !{!17194, !17199}
!17194 = !DIDerivedType(tag: DW_TAG_member, scope: !17192, file: !225, line: 91, baseType: !17195, size: 16)
!17195 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !17192, file: !225, line: 91, size: 16, elements: !17196)
!17196 = !{!17197, !17198}
!17197 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !17195, file: !225, line: 96, baseType: !275, size: 8)
!17198 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !17195, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!17199 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !17192, file: !225, line: 100, baseType: !279, size: 16)
!17200 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !17174, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!17201 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !17174, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!17202 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !17174, file: !225, line: 131, baseType: !17203, size: 192, offset: 192)
!17203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !17204)
!17204 = !{!17205, !17206, !17212}
!17205 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !17203, file: !261, line: 245, baseType: !17180, size: 64)
!17206 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !17203, file: !261, line: 246, baseType: !17207, size: 32, offset: 64)
!17207 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !17208)
!17208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17209, size: 32)
!17209 = !DISubroutineType(types: !17210)
!17210 = !{null, !17211}
!17211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17203, size: 32)
!17212 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !17203, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!17213 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !17171, file: !225, line: 250, baseType: !17214, size: 288, offset: 384)
!17214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !17215)
!17215 = !{!17216, !17217, !17218, !17219, !17220, !17221, !17222, !17223, !17224}
!17216 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !17214, file: !296, line: 26, baseType: !156, size: 32)
!17217 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !17214, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!17218 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !17214, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!17219 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !17214, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!17220 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !17214, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!17221 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !17214, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!17222 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !17214, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!17223 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !17214, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!17224 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !17214, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!17225 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !17171, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!17226 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !17171, file: !225, line: 256, baseType: !2476, size: 64, offset: 704)
!17227 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !17171, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!17228 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !17171, file: !225, line: 300, baseType: !17229, size: 96, offset: 800)
!17229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !17230)
!17230 = !{!17231, !17232, !17233}
!17231 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !17229, file: !225, line: 153, baseType: !22, size: 32)
!17232 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !17229, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!17233 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !17229, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!17234 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !17171, file: !225, line: 325, baseType: !17059, size: 32, offset: 896)
!17235 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !17171, file: !225, line: 343, baseType: !17236, size: 64, offset: 928)
!17236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !17237)
!17237 = !{!17238, !17239}
!17238 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !17236, file: !296, line: 63, baseType: !156, size: 32)
!17239 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !17236, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!17240 = !{!17241}
!17241 = !DILocalVariable(name: "thread", arg: 1, scope: !17167, file: !2466, line: 116, type: !17170)
!17242 = !DILocation(line: 0, scope: !17167)
!17243 = !DILocation(line: 118, column: 10, scope: !17167)
!17244 = !DILocation(line: 118, column: 24, scope: !17167)
!17245 = !DILocation(line: 119, column: 1, scope: !17167)
!17246 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !2466, file: !2466, line: 124, type: !17071, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !17247)
!17247 = !{!17248, !17249, !17250, !17251}
!17248 = !DILocalVariable(name: "align", arg: 1, scope: !17246, file: !2466, line: 124, type: !315)
!17249 = !DILocalVariable(name: "size", arg: 2, scope: !17246, file: !2466, line: 124, type: !315)
!17250 = !DILocalVariable(name: "ret", scope: !17246, file: !2466, line: 126, type: !117)
!17251 = !DILocalVariable(name: "heap", scope: !17246, file: !2466, line: 127, type: !17059)
!17252 = !DILocation(line: 0, scope: !17246)
!17253 = !DILocation(line: 129, column: 6, scope: !17254)
!17254 = distinct !DILexicalBlock(scope: !17246, file: !2466, line: 129, column: 6)
!17255 = !DILocation(line: 129, column: 6, scope: !17246)
!17256 = !DILocation(line: 132, column: 10, scope: !17257)
!17257 = distinct !DILexicalBlock(scope: !17254, file: !2466, line: 131, column: 9)
!17258 = !DILocation(line: 132, column: 20, scope: !17257)
!17259 = !DILocation(line: 135, column: 11, scope: !17260)
!17260 = distinct !DILexicalBlock(scope: !17246, file: !2466, line: 135, column: 6)
!17261 = !DILocation(line: 135, column: 6, scope: !17246)
!17262 = !DILocation(line: 136, column: 9, scope: !17263)
!17263 = distinct !DILexicalBlock(scope: !17260, file: !2466, line: 135, column: 20)
!17264 = !DILocation(line: 137, column: 2, scope: !17263)
!17265 = !DILocation(line: 0, scope: !17260)
!17266 = !DILocation(line: 141, column: 2, scope: !17246)
!17267 = distinct !DISubprogram(name: "main", scope: !17268, file: !17268, line: 27, type: !365, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3176, retainedNodes: !2123)
!17268 = !DIFile(filename: "zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17269 = !DILocation(line: 38, column: 2, scope: !17270, inlinedAt: !17271)
!17270 = distinct !DISubprogram(name: "arch_nop", scope: !17025, file: !17025, line: 36, type: !365, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3176, retainedNodes: !2123)
!17271 = distinct !DILocation(line: 31, column: 2, scope: !17267)
!17272 = !{i64 2242952}
!17273 = !DILocation(line: 36, column: 1, scope: !17267)
!17274 = distinct !DISubprogram(name: "boot_banner", scope: !17275, file: !17275, line: 26, type: !365, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3178, retainedNodes: !2123)
!17275 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17276 = !DILocation(line: 34, column: 2, scope: !17274)
!17277 = !DILocation(line: 36, column: 1, scope: !17274)
!17278 = distinct !DISubprogram(name: "statics_init", scope: !2522, file: !2522, line: 21, type: !2528, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !17279)
!17279 = !{!17280, !17281}
!17280 = !DILocalVariable(name: "unused", arg: 1, scope: !17278, file: !2522, line: 21, type: !2530)
!17281 = !DILocalVariable(name: "h", scope: !17282, file: !2522, line: 24, type: !17283)
!17282 = distinct !DILexicalBlock(scope: !17278, file: !2522, line: 24, column: 2)
!17283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17284, size: 32)
!17284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !17285)
!17285 = !{!17286, !17292, !17298}
!17286 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17284, file: !220, line: 5074, baseType: !17287, size: 96)
!17287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !17288)
!17288 = !{!17289, !17290, !17291}
!17289 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17287, file: !324, line: 57, baseType: !327, size: 32)
!17290 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17287, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!17291 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17287, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!17292 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17284, file: !220, line: 5075, baseType: !17293, size: 64, offset: 96)
!17293 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !17294)
!17294 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !17295)
!17295 = !{!17296}
!17296 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17294, file: !261, line: 232, baseType: !17297, size: 64)
!17297 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2508)
!17298 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17284, file: !220, line: 5076, baseType: !17299, size: 32, offset: 160)
!17299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !17300)
!17300 = !{!17301}
!17301 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !17299, file: !334, line: 52, baseType: !22, size: 32)
!17302 = !DILocation(line: 0, scope: !17278)
!17303 = !DILocation(line: 0, scope: !17282)
!17304 = !DILocation(line: 24, column: 2, scope: !17305)
!17305 = distinct !DILexicalBlock(scope: !17306, file: !2522, line: 24, column: 2)
!17306 = distinct !DILexicalBlock(scope: !17307, file: !2522, line: 24, column: 2)
!17307 = distinct !DILexicalBlock(scope: !17282, file: !2522, line: 24, column: 2)
!17308 = !DILocation(line: 24, column: 2, scope: !17309)
!17309 = distinct !DILexicalBlock(scope: !17310, file: !2522, line: 24, column: 2)
!17310 = distinct !DILexicalBlock(scope: !17305, file: !2522, line: 24, column: 2)
!17311 = !DILocation(line: 24, column: 2, scope: !17306)
!17312 = !DILocation(line: 24, column: 2, scope: !17282)
!17313 = !DILocation(line: 52, column: 2, scope: !17278)
!17314 = !DILocation(line: 49, column: 27, scope: !17315)
!17315 = distinct !DILexicalBlock(scope: !17316, file: !2522, line: 48, column: 3)
!17316 = distinct !DILexicalBlock(scope: !17307, file: !2522, line: 24, column: 36)
!17317 = !DILocation(line: 49, column: 45, scope: !17315)
!17318 = !DILocation(line: 49, column: 4, scope: !17315)
!17319 = !DILocation(line: 24, column: 2, scope: !17307)
!17320 = !DILocation(line: 24, column: 2, scope: !17310)
!17321 = distinct !{!17321, !17312, !17322}
!17322 = !DILocation(line: 51, column: 2, scope: !17282)
!17323 = distinct !DISubprogram(name: "k_heap_init", scope: !2522, file: !2522, line: 13, type: !17324, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !17326)
!17324 = !DISubroutineType(types: !17325)
!17325 = !{null, !17283, !117, !315}
!17326 = !{!17327, !17328, !17329}
!17327 = !DILocalVariable(name: "h", arg: 1, scope: !17323, file: !2522, line: 13, type: !17283)
!17328 = !DILocalVariable(name: "mem", arg: 2, scope: !17323, file: !2522, line: 13, type: !117)
!17329 = !DILocalVariable(name: "bytes", arg: 3, scope: !17323, file: !2522, line: 13, type: !315)
!17330 = !DILocation(line: 0, scope: !17323)
!17331 = !DILocation(line: 15, column: 19, scope: !17323)
!17332 = !DILocation(line: 15, column: 2, scope: !17323)
!17333 = !DILocation(line: 16, column: 20, scope: !17323)
!17334 = !DILocation(line: 16, column: 2, scope: !17323)
!17335 = !DILocation(line: 19, column: 1, scope: !17323)
!17336 = distinct !DISubprogram(name: "z_waitq_init", scope: !12719, file: !12719, line: 47, type: !17337, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !17340)
!17337 = !DISubroutineType(types: !17338)
!17338 = !{null, !17339}
!17339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17293, size: 32)
!17340 = !{!17341}
!17341 = !DILocalVariable(name: "w", arg: 1, scope: !17336, file: !12719, line: 47, type: !17339)
!17342 = !DILocation(line: 0, scope: !17336)
!17343 = !DILocation(line: 49, column: 21, scope: !17336)
!17344 = !DILocation(line: 49, column: 2, scope: !17336)
!17345 = !DILocation(line: 50, column: 1, scope: !17336)
!17346 = distinct !DISubprogram(name: "sys_dlist_init", scope: !235, file: !235, line: 197, type: !17347, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !17350)
!17347 = !DISubroutineType(types: !17348)
!17348 = !{null, !17349}
!17349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17297, size: 32)
!17350 = !{!17351}
!17351 = !DILocalVariable(name: "list", arg: 1, scope: !17346, file: !235, line: 197, type: !17349)
!17352 = !DILocation(line: 0, scope: !17346)
!17353 = !DILocation(line: 199, column: 8, scope: !17346)
!17354 = !DILocation(line: 199, column: 13, scope: !17346)
!17355 = !DILocation(line: 200, column: 8, scope: !17346)
!17356 = !DILocation(line: 200, column: 13, scope: !17346)
!17357 = !DILocation(line: 201, column: 1, scope: !17346)
!17358 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2522, file: !2522, line: 64, type: !17359, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !17365)
!17359 = !DISubroutineType(types: !17360)
!17360 = !{!117, !17283, !315, !315, !17361}
!17361 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !17362)
!17362 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !17363)
!17363 = !{!17364}
!17364 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17362, file: !114, line: 66, baseType: !113, size: 64)
!17365 = !{!17366, !17367, !17368, !17369, !17370, !17371, !17372, !17373, !17378}
!17366 = !DILocalVariable(name: "h", arg: 1, scope: !17358, file: !2522, line: 64, type: !17283)
!17367 = !DILocalVariable(name: "align", arg: 2, scope: !17358, file: !2522, line: 64, type: !315)
!17368 = !DILocalVariable(name: "bytes", arg: 3, scope: !17358, file: !2522, line: 64, type: !315)
!17369 = !DILocalVariable(name: "timeout", arg: 4, scope: !17358, file: !2522, line: 65, type: !17361)
!17370 = !DILocalVariable(name: "now", scope: !17358, file: !2522, line: 67, type: !115)
!17371 = !DILocalVariable(name: "end", scope: !17358, file: !2522, line: 67, type: !115)
!17372 = !DILocalVariable(name: "ret", scope: !17358, file: !2522, line: 68, type: !117)
!17373 = !DILocalVariable(name: "key", scope: !17358, file: !2522, line: 72, type: !17374)
!17374 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !17375)
!17375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !17376)
!17376 = !{!17377}
!17377 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17375, file: !334, line: 33, baseType: !118, size: 32)
!17378 = !DILocalVariable(name: "blocked_alloc", scope: !17358, file: !2522, line: 78, type: !146)
!17379 = !DILocation(line: 0, scope: !17358)
!17380 = !DILocation(line: 67, column: 21, scope: !17358)
!17381 = !DILocation(line: 70, column: 8, scope: !17358)
!17382 = !DILocation(line: 72, column: 41, scope: !17358)
!17383 = !DILocalVariable(name: "l", arg: 1, scope: !17384, file: !334, line: 136, type: !17387)
!17384 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !17385, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !17388)
!17385 = !DISubroutineType(types: !17386)
!17386 = !{!17374, !17387}
!17387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17299, size: 32)
!17388 = !{!17383, !17389}
!17389 = !DILocalVariable(name: "k", scope: !17384, file: !334, line: 139, type: !17374)
!17390 = !DILocation(line: 0, scope: !17384, inlinedAt: !17391)
!17391 = distinct !DILocation(line: 72, column: 25, scope: !17358)
!17392 = !DILocation(line: 55, column: 2, scope: !17393, inlinedAt: !17397)
!17393 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6172, file: !6172, line: 42, type: !6173, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !17394)
!17394 = !{!17395, !17396}
!17395 = !DILocalVariable(name: "key", scope: !17393, file: !6172, line: 44, type: !32)
!17396 = !DILocalVariable(name: "tmp", scope: !17393, file: !6172, line: 53, type: !32)
!17397 = distinct !DILocation(line: 145, column: 10, scope: !17384, inlinedAt: !17391)
!17398 = !{i64 2242095}
!17399 = !DILocation(line: 0, scope: !17393, inlinedAt: !17397)
!17400 = !DILocation(line: 148, column: 2, scope: !17401, inlinedAt: !17391)
!17401 = distinct !DILexicalBlock(scope: !17402, file: !334, line: 148, column: 2)
!17402 = distinct !DILexicalBlock(scope: !17384, file: !334, line: 148, column: 2)
!17403 = !DILocation(line: 148, column: 2, scope: !17402, inlinedAt: !17391)
!17404 = !DILocation(line: 148, column: 2, scope: !17405, inlinedAt: !17391)
!17405 = distinct !DILexicalBlock(scope: !17401, file: !334, line: 148, column: 2)
!17406 = !DILocation(line: 160, column: 2, scope: !17384, inlinedAt: !17391)
!17407 = !DILocation(line: 1031, column: 3, scope: !17408, inlinedAt: !17411)
!17408 = distinct !DISubprogram(name: "__get_IPSR", scope: !6346, file: !6346, line: 1027, type: !6433, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !17409)
!17409 = !{!17410}
!17410 = !DILocalVariable(name: "result", scope: !17408, file: !6346, line: 1029, type: !156)
!17411 = distinct !DILocation(line: 48, column: 10, scope: !17412, inlinedAt: !17413)
!17412 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7172, file: !7172, line: 46, type: !7173, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !2123)
!17413 = distinct !DILocation(line: 76, column: 2, scope: !17414)
!17414 = distinct !DILexicalBlock(scope: !17415, file: !2522, line: 76, column: 2)
!17415 = distinct !DILexicalBlock(scope: !17358, file: !2522, line: 76, column: 2)
!17416 = !{i64 3496966}
!17417 = !DILocation(line: 0, scope: !17408, inlinedAt: !17411)
!17418 = !DILocation(line: 48, column: 9, scope: !17412, inlinedAt: !17413)
!17419 = !DILocation(line: 76, column: 2, scope: !17414)
!17420 = !DILocation(line: 81, column: 9, scope: !17421)
!17421 = distinct !DILexicalBlock(scope: !17358, file: !2522, line: 80, column: 22)
!17422 = !DILocation(line: 83, column: 9, scope: !17421)
!17423 = !DILocation(line: 85, column: 12, scope: !17424)
!17424 = distinct !DILexicalBlock(scope: !17421, file: !2522, line: 84, column: 7)
!17425 = !DILocation(line: 85, column: 21, scope: !17424)
!17426 = !DILocation(line: 76, column: 2, scope: !17427)
!17427 = distinct !DILexicalBlock(scope: !17414, file: !2522, line: 76, column: 2)
!17428 = !DILocation(line: 85, column: 30, scope: !17424)
!17429 = !DILocation(line: 85, column: 37, scope: !17424)
!17430 = !DILocation(line: 84, column: 7, scope: !17421)
!17431 = !DILocation(line: 99, column: 10, scope: !17421)
!17432 = !DILocation(line: 0, scope: !17384, inlinedAt: !17433)
!17433 = distinct !DILocation(line: 101, column: 9, scope: !17421)
!17434 = !DILocation(line: 55, column: 2, scope: !17393, inlinedAt: !17435)
!17435 = distinct !DILocation(line: 145, column: 10, scope: !17384, inlinedAt: !17433)
!17436 = !DILocation(line: 0, scope: !17393, inlinedAt: !17435)
!17437 = !DILocation(line: 148, column: 2, scope: !17401, inlinedAt: !17433)
!17438 = !DILocation(line: 148, column: 2, scope: !17402, inlinedAt: !17433)
!17439 = !DILocation(line: 148, column: 2, scope: !17405, inlinedAt: !17433)
!17440 = !DILocation(line: 160, column: 2, scope: !17384, inlinedAt: !17433)
!17441 = distinct !{!17441, !17442, !17443}
!17442 = !DILocation(line: 80, column: 2, scope: !17358)
!17443 = !DILocation(line: 102, column: 2, scope: !17358)
!17444 = !DILocalVariable(name: "key", arg: 2, scope: !17445, file: !334, line: 190, type: !17374)
!17445 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !17446, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !17448)
!17446 = !DISubroutineType(types: !17447)
!17447 = !{null, !17387, !17374}
!17448 = !{!17449, !17444}
!17449 = !DILocalVariable(name: "l", arg: 1, scope: !17445, file: !334, line: 189, type: !17387)
!17450 = !DILocation(line: 0, scope: !17445, inlinedAt: !17451)
!17451 = distinct !DILocation(line: 106, column: 2, scope: !17358)
!17452 = !DILocation(line: 194, column: 2, scope: !17453, inlinedAt: !17451)
!17453 = distinct !DILexicalBlock(scope: !17454, file: !334, line: 194, column: 2)
!17454 = distinct !DILexicalBlock(scope: !17445, file: !334, line: 194, column: 2)
!17455 = !DILocation(line: 194, column: 2, scope: !17454, inlinedAt: !17451)
!17456 = !DILocation(line: 194, column: 2, scope: !17457, inlinedAt: !17451)
!17457 = distinct !DILexicalBlock(scope: !17453, file: !334, line: 194, column: 2)
!17458 = !DILocalVariable(name: "key", arg: 1, scope: !17459, file: !6172, line: 84, type: !32)
!17459 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6172, file: !6172, line: 84, type: !6183, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !17460)
!17460 = !{!17458}
!17461 = !DILocation(line: 0, scope: !17459, inlinedAt: !17462)
!17462 = distinct !DILocation(line: 215, column: 2, scope: !17445, inlinedAt: !17451)
!17463 = !DILocation(line: 95, column: 2, scope: !17459, inlinedAt: !17462)
!17464 = !{i64 2242912}
!17465 = !DILocation(line: 107, column: 2, scope: !17358)
!17466 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2522, file: !2522, line: 110, type: !17467, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !17469)
!17467 = !DISubroutineType(types: !17468)
!17468 = !{!117, !17283, !315, !17361}
!17469 = !{!17470, !17471, !17472, !17473}
!17470 = !DILocalVariable(name: "h", arg: 1, scope: !17466, file: !2522, line: 110, type: !17283)
!17471 = !DILocalVariable(name: "bytes", arg: 2, scope: !17466, file: !2522, line: 110, type: !315)
!17472 = !DILocalVariable(name: "timeout", arg: 3, scope: !17466, file: !2522, line: 110, type: !17361)
!17473 = !DILocalVariable(name: "ret", scope: !17466, file: !2522, line: 114, type: !117)
!17474 = !DILocation(line: 0, scope: !17466)
!17475 = !DILocation(line: 114, column: 14, scope: !17466)
!17476 = !DILocation(line: 118, column: 2, scope: !17466)
!17477 = distinct !DISubprogram(name: "k_heap_free", scope: !2522, file: !2522, line: 121, type: !17478, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !17480)
!17478 = !DISubroutineType(types: !17479)
!17479 = !{null, !17283, !117}
!17480 = !{!17481, !17482, !17483}
!17481 = !DILocalVariable(name: "h", arg: 1, scope: !17477, file: !2522, line: 121, type: !17283)
!17482 = !DILocalVariable(name: "mem", arg: 2, scope: !17477, file: !2522, line: 121, type: !117)
!17483 = !DILocalVariable(name: "key", scope: !17477, file: !2522, line: 123, type: !17374)
!17484 = !DILocation(line: 0, scope: !17477)
!17485 = !DILocation(line: 123, column: 41, scope: !17477)
!17486 = !DILocation(line: 0, scope: !17384, inlinedAt: !17487)
!17487 = distinct !DILocation(line: 123, column: 25, scope: !17477)
!17488 = !DILocation(line: 55, column: 2, scope: !17393, inlinedAt: !17489)
!17489 = distinct !DILocation(line: 145, column: 10, scope: !17384, inlinedAt: !17487)
!17490 = !DILocation(line: 0, scope: !17393, inlinedAt: !17489)
!17491 = !DILocation(line: 148, column: 2, scope: !17401, inlinedAt: !17487)
!17492 = !DILocation(line: 148, column: 2, scope: !17402, inlinedAt: !17487)
!17493 = !DILocation(line: 148, column: 2, scope: !17405, inlinedAt: !17487)
!17494 = !DILocation(line: 160, column: 2, scope: !17384, inlinedAt: !17487)
!17495 = !DILocation(line: 125, column: 20, scope: !17477)
!17496 = !DILocation(line: 125, column: 2, scope: !17477)
!17497 = !DILocation(line: 128, column: 60, scope: !17498)
!17498 = distinct !DILexicalBlock(scope: !17477, file: !2522, line: 128, column: 6)
!17499 = !DILocation(line: 128, column: 43, scope: !17498)
!17500 = !DILocation(line: 128, column: 68, scope: !17498)
!17501 = !DILocation(line: 128, column: 6, scope: !17477)
!17502 = !DILocation(line: 129, column: 3, scope: !17503)
!17503 = distinct !DILexicalBlock(scope: !17498, file: !2522, line: 128, column: 74)
!17504 = !DILocation(line: 130, column: 2, scope: !17503)
!17505 = !DILocation(line: 0, scope: !17445, inlinedAt: !17506)
!17506 = distinct !DILocation(line: 131, column: 3, scope: !17507)
!17507 = distinct !DILexicalBlock(scope: !17498, file: !2522, line: 130, column: 9)
!17508 = !DILocation(line: 194, column: 2, scope: !17453, inlinedAt: !17506)
!17509 = !DILocation(line: 194, column: 2, scope: !17454, inlinedAt: !17506)
!17510 = !DILocation(line: 194, column: 2, scope: !17457, inlinedAt: !17506)
!17511 = !DILocation(line: 0, scope: !17459, inlinedAt: !17512)
!17512 = distinct !DILocation(line: 215, column: 2, scope: !17445, inlinedAt: !17506)
!17513 = !DILocation(line: 95, column: 2, scope: !17459, inlinedAt: !17512)
!17514 = !DILocation(line: 133, column: 1, scope: !17477)
